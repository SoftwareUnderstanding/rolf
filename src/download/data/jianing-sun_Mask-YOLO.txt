# Mask-YOLO: A Multi-task Learning Architecture for Object Detection and Instance Segmentation

## 1. Architecture and Results

- This work combines the one-stage detection pipeline, YOLOv2 with the idea of two-branch architecture from Mask R-CNN. Due to the hardware limitation, I only implemented it on a small CNN backbone ( MobileNet) with depthwise separable blocks, though it has the potential to be implemented with deeper network, e.g. ResNet-50 or ResNet-101 with FPN (Feature Pyramid Networks).
- The overall architecture can be visualized like this: 

<img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/mask_yolo.png" />

- Training results on Shapes dataset:

<table sytle="border: 0px;">
<tr>

<td><img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/InferMaskYOLO-Shapes-Dec-28-16-29.png" ></td>

<td><img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/InferMaskYOLO-Shapes-Dec-28-16-31.png" ></td>

<td><img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/InferMaskYOLO-Shapes-Dec-28-16-32.png" ></td>
<td><img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/InferMaskYOLO-Shapes-Dec-28-16-33.png" ></td>
</tr>
</table>

- Training results on Rice and Generic Food:

<table sytle="border: 0px;">
<tr>

<td><img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/InferMaskYOLO-Rice-Jan-02-15-32.png" ></td>

<td><img src="https://github.com/jianing-sun/Mask-YOLO/blob/master/asset/InferMaskYOLO-Food-Jan-06-19-45.png" ></td>

</tr>
</table>

## 2. How to use it

`myolo` - the main implementation of Mask-YOLO. [model.py](https://github.com/jianing-sun/Mask-YOLO/blob/master/myolo/model.py) is the model instantiation. 

`example` - including three training examples with inference: **Shapes** dataset is randomly generated by [dataset_shapes.py](https://github.com/jianing-sun/Mask-YOLO/blob/master/example/shapes/dataset_shapes.py). **Rice** and **Food** are small datasets I hand-annotated by [VGG Image Annotator (VIA)](http://www.robots.ox.ac.uk/~vgg/software/via/), and can be downloaded from https://drive.google.com/file/d/1druK4Kgx5AhfchClU2aq5kf7UVoDtkvu/view.

## 3. Reference

- Mask R-CNN paper: https://arxiv.org/pdf/1703.06870.pdf
- YOLOv2 paper: https://arxiv.org/pdf/1612.08242.pdf
- Kears and TensorFlow implementation of Mask R-CNN: https://github.com/matterport/Mask_RCNN

