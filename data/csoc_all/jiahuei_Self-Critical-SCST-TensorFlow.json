{
    "syntactic": [
        "java",
        "long short term memory neural networks",
        "inference",
        "parallelism",
        "probability",
        "projection method",
        "convolutional neural networks",
        "recurrent neural networks"
    ],
    "semantic": [
        "java",
        "inference",
        "parallelism",
        "probability",
        "projection method",
        "probabilistic inference"
    ],
    "union": [
        "java",
        "long short term memory neural networks",
        "inference",
        "parallelism",
        "probability",
        "projection method",
        "convolutional neural networks",
        "recurrent neural networks",
        "probabilistic inference"
    ],
    "enhanced": [
        "object oriented programming",
        "computer programming languages",
        "high level languages",
        "neural networks",
        "inference engines",
        "parallel programming",
        "mathematics",
        "incompressible flow",
        "bayesian methods",
        "probability distributions",
        "computer programming",
        "machine learning",
        "artificial intelligence",
        "program processors",
        "parallel algorithms",
        "parallel architectures",
        "numerical methods",
        "computer science",
        "parallel processing systems",
        "microprocessor chips",
        "distributed systems",
        "computer hardware",
        "distributed computer systems",
        "computer systems"
    ],
    "explanation": {
        "projection method": [
            "projection method",
            "projection"
        ],
        "java": [
            "java",
            "jdk"
        ],
        "convolutional neural networks": [
            "cnn"
        ],
        "recurrent neural networks": [
            "rnn"
        ],
        "long short term memory neural networks": [
            "lstm"
        ],
        "probability": [
            "score inference",
            "inference batch_size_infer",
            "inference",
            "inference batch",
            "map probability",
            "probability",
            "inference choice",
            "probability function",
            "inference batch_size_infer inference",
            "batch_size_infer inference",
            "perform inference",
            "inference parameter"
        ],
        "inference": [
            "score inference",
            "inference batch_size_infer inference",
            "inference batch_size_infer",
            "batch_size_infer inference",
            "inference",
            "inference batch",
            "inference choice",
            "perform inference",
            "inference parameter"
        ],
        "parallelism": [
            "size parallelism",
            "parallelism"
        ],
        "probabilistic inference": [
            "score inference",
            "inference batch_size_infer inference",
            "inference batch_size_infer",
            "batch_size_infer inference",
            "inference",
            "inference batch",
            "inference choice",
            "perform inference",
            "inference parameter"
        ],
        "object oriented programming": [
            "java",
            "jdk"
        ],
        "computer programming languages": [
            "java",
            "size parallelism",
            "parallelism",
            "jdk"
        ],
        "high level languages": [
            "java",
            "jdk"
        ],
        "neural networks": [
            "rnn",
            "lstm",
            "cnn"
        ],
        "inference engines": [
            "score inference",
            "inference batch_size_infer inference",
            "inference batch_size_infer",
            "batch_size_infer inference",
            "inference",
            "inference batch",
            "inference choice",
            "perform inference",
            "inference parameter"
        ],
        "parallel programming": [
            "size parallelism",
            "parallelism"
        ],
        "mathematics": [
            "score inference",
            "inference batch_size_infer inference",
            "inference batch_size_infer",
            "projection",
            "batch_size_infer inference",
            "inference",
            "inference batch",
            "map probability",
            "probability",
            "inference choice",
            "projection method",
            "perform inference",
            "inference parameter",
            "probability function"
        ],
        "incompressible flow": [
            "projection method",
            "projection"
        ],
        "bayesian methods": [
            "score inference",
            "inference batch_size_infer inference",
            "inference batch_size_infer",
            "batch_size_infer inference",
            "inference",
            "inference batch",
            "inference choice",
            "perform inference",
            "inference parameter"
        ],
        "probability distributions": [
            "score inference",
            "inference batch_size_infer inference",
            "inference batch_size_infer",
            "batch_size_infer inference",
            "inference",
            "inference batch",
            "inference choice",
            "perform inference",
            "inference parameter"
        ],
        "computer programming": [
            "size parallelism",
            "jdk",
            "java",
            "parallelism"
        ],
        "machine learning": [
            "rnn",
            "lstm",
            "cnn"
        ],
        "artificial intelligence": [
            "score inference",
            "inference batch_size_infer",
            "inference",
            "inference batch",
            "rnn",
            "inference choice",
            "cnn",
            "inference batch_size_infer inference",
            "batch_size_infer inference",
            "perform inference",
            "inference parameter",
            "lstm"
        ],
        "program processors": [
            "size parallelism",
            "parallelism"
        ],
        "parallel algorithms": [
            "size parallelism",
            "parallelism"
        ],
        "parallel architectures": [
            "size parallelism",
            "parallelism"
        ],
        "numerical methods": [
            "projection method",
            "projection"
        ],
        "computer science": [
            "score inference",
            "inference batch_size_infer",
            "jdk",
            "java",
            "inference",
            "inference batch",
            "rnn",
            "inference choice",
            "cnn",
            "size parallelism",
            "inference batch_size_infer inference",
            "batch_size_infer inference",
            "parallelism",
            "perform inference",
            "inference parameter",
            "lstm"
        ],
        "parallel processing systems": [
            "size parallelism",
            "parallelism"
        ],
        "microprocessor chips": [
            "size parallelism",
            "parallelism"
        ],
        "distributed systems": [
            "size parallelism",
            "parallelism"
        ],
        "computer hardware": [
            "size parallelism",
            "parallelism"
        ],
        "distributed computer systems": [
            "size parallelism",
            "parallelism"
        ],
        "computer systems": [
            "size parallelism",
            "parallelism"
        ]
    }
}