{
    "visibility": {
        "visibility": "public"
    },
    "name": "PULSE: Self-Supervised Photo Upsampling via Latent Space Exploration of Generative Models",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "b5071",
                "owner_type": "User",
                "name": "pulse-rev",
                "url": "https://github.com/b5071/pulse-rev",
                "stars": 0,
                "pushed_at": "2020-07-01 06:38:42+00:00",
                "created_at": "2020-07-01 06:34:17+00:00",
                "language": "Python",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "818271568996b57999052d62df1545da422792aa",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/.gitignore"
                    }
                },
                "size": 65
            },
            {
                "type": "code",
                "name": "PULSE.py",
                "sha": "783a66842a1a8a1626afcb45ff1883867849b487",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/PULSE.py"
                    }
                },
                "size": 6585
            },
            {
                "type": "code",
                "name": "SphericalOptimizer.py",
                "sha": "d8110507af13ebb663498e97c00cd0737976ade8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/SphericalOptimizer.py"
                    }
                },
                "size": 909
            },
            {
                "type": "code",
                "name": "align_face.py",
                "sha": "4865a65612a489de9d2e9441bceaf613cb7061c3",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/align_face.py"
                    }
                },
                "size": 1807
            },
            {
                "type": "code",
                "name": "bicubic.py",
                "sha": "bf1cc312fd3ee984b7ce3e85faa2e0c3d4508bec",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/bicubic.py"
                    }
                },
                "size": 2974
            },
            {
                "type": "code",
                "name": "drive.py",
                "sha": "62ae698a7704f0404c5a88a2959d22046d05b70f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/drive.py"
                    }
                },
                "size": 3670
            },
            {
                "type": "code",
                "name": "gaussian_fit.pt",
                "sha": "a52a02e8085383375d8d5f4da95399c3a65baf0e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/gaussian_fit.pt"
                    }
                },
                "size": 4566
            },
            {
                "type": "code",
                "name": "loss.py",
                "sha": "56ed3fc579f322253c673895c2d9d7b1da111a7f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/loss.py"
                    }
                },
                "size": 2183
            },
            {
                "type": "code",
                "name": "pulse.yml",
                "sha": "c82ddc6dec8f9eb541662be50373214daafc55cd",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/pulse.yml"
                    }
                },
                "size": 1696
            },
            {
                "type": "code",
                "name": "readme_resources",
                "sha": "87956b48403a3ff5996792f385f70e5a34cda16f",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/tree/master/readme_resources"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "resources",
                "sha": "046fcbc1c9e38ddaf068bcfb70f753d48c4de09b",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/tree/master/resources"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "run.py",
                "sha": "810a03107461313096971530b7511e458ba7be4f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/run.py"
                    }
                },
                "size": 8535
            },
            {
                "type": "code",
                "name": "shape_predictor.py",
                "sha": "ec5ae1b2c87306a6fade96b7089447bff8fe0745",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/shape_predictor.py"
                    }
                },
                "size": 5161
            },
            {
                "type": "code",
                "name": "stylegan.py",
                "sha": "1a799912ec3b022f12b3430e179067e990101422",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/b5071/pulse-rev/blob/master/stylegan.py"
                    }
                },
                "size": 16801
            }
        ]
    },
    "authors": [
        {
            "name": "b5071",
            "github_id": "b5071"
        },
        {
            "name": "Georg Zoeller",
            "github_id": "georgzoeller"
        },
        {
            "name": "Alex Damian",
            "github_id": "adamian98"
        },
        {
            "name": "Christian Clauss",
            "email": "cclauss@me.com",
            "github_id": "cclauss"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/b5071/pulse-rev",
            "stars": 0,
            "issues": true,
            "readme": "# PULSE: Self-Supervised Photo Upsampling via Latent Space Exploration of Generative Models\nCode accompanying CVPR'20 paper of the same title. Paper link: https://arxiv.org/pdf/2003.03808.pdf\n\n## NOTE\n\nWe have noticed a lot of concern that PULSE will be used to identify individuals whose faces have been blurred out. We want to emphasize that this is impossible - **PULSE makes imaginary faces of people who do not exist, which should not be confused for real people.** It will **not** help identify or reconstruct the original image.\n\nWe also want to address concerns of bias in PULSE. **We have now included a new section in the [paper](https://arxiv.org/pdf/2003.03808.pdf) and an accompanying model card directly addressing this bias.**\n\n---\n\n![Transformation Preview](./readme_resources/014.jpeg)\n![Transformation Preview](./readme_resources/034.jpeg)\n![Transformation Preview](./readme_resources/094.jpeg)\n\nTable of Contents\n=================\n- [PULSE: Self-Supervised Photo Upsampling via Latent Space Exploration of Generative Models](#pulse-self-supervised-photo-upsampling-via-latent-space-exploration-of-generative-models)\n- [Table of Contents](#table-of-contents)\n  - [What does it do?](#what-does-it-do)\n  - [Usage](#usage)\n    - [Prereqs](#prereqs)\n    - [Data](#data)\n    - [Applying PULSE](#applying-pulse)\n## What does it do? \nGiven a low-resolution input image, PULSE searches the outputs of a generative model (here, [StyleGAN](https://github.com/NVlabs/stylegan)) for high-resolution images that are perceptually realistic and downscale correctly.\n\n![Transformation Preview](./readme_resources/transformation.gif)\n\n## Usage\n\nThe main file of interest for applying PULSE is `run.py`. A full list of arguments with descriptions can be found in that file; here we describe those relevant to getting started.\n\n### Prereqs\n\nYou will need to install cmake first (required for dlib, which is used for face alignment). Currently the code only works with CUDA installed (and therefore requires an appropriate GPU) and has been tested on Linux and Windows. For the full set of required Python packages, create a Conda environment from the provided YAML, e.g.\n\n```\nconda create -f pulse.yml \n```\nor (Anaconda on Windows):\n```\nconda env create -n pulse -f pulse.yml\nconda activate pulse\n```\n\nIn some environments (e.g. on Windows), you may have to edit the pulse.yml to remove the version specific hash on each dependency and remove any dependency that still throws an error after running ```conda env create...``` (such as readline)\n```\ndependencies\n  - blas=1.0=mkl\n  ...\n```\nto\n```\ndependencies\n  - blas=1.0\n ...\n```\n\nFinally, you will need an internet connection the first time you run the code as it will automatically download the relevant pretrained model from Google Drive (if it has already been downloaded, it will use the local copy). In the event that the public Google Drive is out of capacity, add the files to your own Google Drive instead; get the share URL and replace the ID in the https://drive.google.com/uc?=ID links in ```align_face.py``` and ```PULSE.py``` with the new file ids from the share URL given by your own Drive file.\n \n\n### Data\n\nBy default, input data for `run.py` should be placed in `./input/` (though this can be modified). However, this assumes faces have already been aligned and downscaled. If you have data that is not already in this form, place it in `realpics` and run `align_face.py` which will automatically do this for you. (Again, all directories can be changed by command line arguments if more convenient.) You will at this stage pic a downscaling factor. \n\nNote that if your data begins at a low resolution already, downscaling it further will retain very little information. In this case, you may wish to bicubically upsample (usually, to 1024x1024) and allow `align_face.py` to downscale for you.  \n\n### Applying PULSE\nOnce your data is appropriately formatted, all you need to do is\n```\npython run.py\n```\nEnjoy!\n",
            "readme_url": "https://github.com/b5071/pulse-rev",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "PULSE: Self-Supervised Photo Upsampling via Latent Space Exploration of Generative Models",
            "arxiv": "2003.03808",
            "year": 2020,
            "url": "http://arxiv.org/abs/2003.03808v3",
            "abstract": "The primary aim of single-image super-resolution is to construct\nhigh-resolution (HR) images from corresponding low-resolution (LR) inputs. In\nprevious approaches, which have generally been supervised, the training\nobjective typically measures a pixel-wise average distance between the\nsuper-resolved (SR) and HR images. Optimizing such metrics often leads to\nblurring, especially in high variance (detailed) regions. We propose an\nalternative formulation of the super-resolution problem based on creating\nrealistic SR images that downscale correctly. We present an algorithm\naddressing this problem, PULSE (Photo Upsampling via Latent Space Exploration),\nwhich generates high-resolution, realistic images at resolutions previously\nunseen in the literature. It accomplishes this in an entirely self-supervised\nfashion and is not confined to a specific degradation operator used during\ntraining, unlike previous methods (which require supervised training on\ndatabases of LR-HR image pairs). Instead of starting with the LR image and\nslowly adding detail, PULSE traverses the high-resolution natural image\nmanifold, searching for images that downscale to the original LR image. This is\nformalized through the \"downscaling loss,\" which guides exploration through the\nlatent space of a generative model. By leveraging properties of\nhigh-dimensional Gaussians, we restrict the search space to guarantee realistic\noutputs. PULSE thereby generates super-resolved images that both are realistic\nand downscale correctly. We show proof of concept of our approach in the domain\nof face super-resolution (i.e., face hallucination). We also present a\ndiscussion of the limitations and biases of the method as currently implemented\nwith an accompanying model card with relevant metrics. Our method outperforms\nstate-of-the-art methods in perceptual quality at higher resolutions and scale\nfactors than previously possible.",
            "authors": [
                "Sachit Menon",
                "Alexandru Damian",
                "Shijia Hu",
                "Nikhil Ravi",
                "Cynthia Rudin"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.996344828046453,
        "task": "Image Generation",
        "task_prob": 0.9713315106837547
    }
}