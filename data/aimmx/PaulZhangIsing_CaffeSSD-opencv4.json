{
    "visibility": {
        "visibility": "public",
        "license": "Other"
    },
    "name": "SSD: Single Shot MultiBox Detector",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "PaulZhangIsing",
                "owner_type": "User",
                "name": "CaffeSSD-opencv4",
                "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4",
                "stars": 1,
                "pushed_at": "2020-03-24 04:28:15+00:00",
                "created_at": "2020-03-04 10:30:23+00:00",
                "language": "C++",
                "description": "Add Necessary changes to caffe-ssd to make it could be compile by opencv4.0",
                "license": "Other",
                "frameworks": [
                    "Caffe",
                    "scikit-learn",
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": "CMakeLists.txt",
                "sha": "f25e5109a8c8074c5988ab651b6305c8d2ebf2a7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/CMakeLists.txt"
                    }
                },
                "size": 3091
            },
            {
                "type": "code",
                "name": "CONTRIBUTING.md",
                "sha": "8cd5e56ca492484d48eeffa3a699636b6c3c15d8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/CONTRIBUTING.md"
                    }
                },
                "size": 1917
            },
            {
                "type": "code",
                "name": "CONTRIBUTORS.md",
                "sha": "8db66ea82c6dcbdb91f7772e79d8c9e42e865abf",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/CONTRIBUTORS.md"
                    }
                },
                "size": 620
            },
            {
                "type": "code",
                "name": "INSTALL.md",
                "sha": "05c714dbda87fee3bbae000bbb14318447fe0205",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/INSTALL.md"
                    }
                },
                "size": 210
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "088269ebecea75f720fcf1e5f59f72168110e2fa",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/LICENSE"
                    }
                },
                "size": 2402
            },
            {
                "type": "code",
                "name": "Makefile",
                "sha": "6229fe21c4410b547c984705dfb740c78b32263b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/Makefile"
                    }
                },
                "size": 24006
            },
            {
                "type": "code",
                "name": "Makefile.config",
                "sha": "e9860bc30de743c1c8573e83a93b1d65f6213898",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/Makefile.config"
                    }
                },
                "size": 4420
            },
            {
                "type": "code",
                "name": "Makefile.config.example",
                "sha": "eac93123f912a810aa6daa2e6146a13c67be121e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/Makefile.config.example"
                    }
                },
                "size": 4402
            },
            {
                "type": "code",
                "name": "build",
                "sha": "ceb6bfb4ee78c57a217bc28c26b149594b37dd75",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/build"
                    }
                },
                "size": 14
            },
            {
                "type": "code",
                "name": "caffe.cloc",
                "sha": "a36ab619113b0ad9824ccdac2399f1f7b37d320b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/blob/master/caffe.cloc"
                    }
                },
                "size": 1180
            },
            {
                "type": "code",
                "name": "cmake",
                "sha": "7c69ab1dcaa4067894b85ebcea94ff7752aa61c5",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/cmake"
                    }
                },
                "num_files": 12
            },
            {
                "type": "code",
                "name": "data",
                "sha": "45167131c1f7082a548a366fd44d872261deb09c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/data"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "docker",
                "sha": "0db4c3ad78f2cadf64307f3937b3f71fa8a36476",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/docker"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "docs",
                "sha": "3f07a97c21e90b7372863c58d8bfdd28e2958e1d",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/docs"
                    }
                },
                "num_files": 17
            },
            {
                "type": "code",
                "name": "examples",
                "sha": "0e834ababfcfbe69664a9518de9ff9c5fd8f2f33",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/examples"
                    }
                },
                "num_files": 27
            },
            {
                "type": "code",
                "name": "include",
                "sha": "52e86df26dc13091e98e9d2fd2ea1bc16da196cc",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/include"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "matlab",
                "sha": "1a94cad8e4159007a5b480c284abaac5692a9b0f",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/matlab"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "models",
                "sha": "579c020438652f037cc51da628e2c3f495ef7690",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/models"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "python",
                "sha": "39a0f483bbf2470a0e1b60fc328f37972ad60684",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/python"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "scripts",
                "sha": "4a01018378e9c7793410a43779ebdf5a81939eb7",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/scripts"
                    }
                },
                "num_files": 12
            },
            {
                "type": "code",
                "name": "src",
                "sha": "19506cf7836dff8eb76896f84eaed901b139771c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/src"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "tools",
                "sha": "7e6e49994e8054c6f8f134c1a7be524e6599947d",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4/tree/master/tools"
                    }
                },
                "num_files": 17
            }
        ]
    },
    "authors": [
        {
            "name": "Paul Zhang Yixing",
            "email": "paul_zhang_yi_xing_victor@hotmail.com",
            "github_id": "PaulZhangIsing"
        }
    ],
    "tags": [
        "caffe",
        "ssd",
        "object-detection"
    ],
    "description": "Add Necessary changes to caffe-ssd to make it could be compile by opencv4.0",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4",
            "stars": 1,
            "issues": true,
            "readme": "# SSD: Single Shot MultiBox Detector\n\n[![Build Status](https://travis-ci.org/weiliu89/caffe.svg?branch=ssd)](https://travis-ci.org/weiliu89/caffe)\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](LICENSE)\n\nBy [Wei Liu](http://www.cs.unc.edu/~wliu/), [Dragomir Anguelov](https://www.linkedin.com/in/dragomiranguelov), [Dumitru Erhan](http://research.google.com/pubs/DumitruErhan.html), [Christian Szegedy](http://research.google.com/pubs/ChristianSzegedy.html), [Scott Reed](http://www-personal.umich.edu/~reedscot/), [Cheng-Yang Fu](http://www.cs.unc.edu/~cyfu/), [Alexander C. Berg](http://acberg.com).\n\n### Introduction\n\nSSD is an unified framework for object detection with a single network. You can use the code to train/evaluate a network for object detection task. For more details, please refer to our [arXiv paper](http://arxiv.org/abs/1512.02325) and our [slide](http://www.cs.unc.edu/~wliu/papers/ssd_eccv2016_slide.pdf).\n\n<p align=\"center\">\n<img src=\"http://www.cs.unc.edu/~wliu/papers/ssd.png\" alt=\"SSD Framework\" width=\"600px\">\n</p>\n\n| System | VOC2007 test *mAP* | **FPS** (Titan X) | Number of Boxes | Input resolution\n|:-------|:-----:|:-------:|:-------:|:-------:|\n| [Faster R-CNN (VGG16)](https://github.com/ShaoqingRen/faster_rcnn) | 73.2 | 7 | ~6000 | ~1000 x 600 |\n| [YOLO (customized)](http://pjreddie.com/darknet/yolo/) | 63.4 | 45 | 98 | 448 x 448 |\n| SSD300* (VGG16) | 77.2 | 46 | 8732 | 300 x 300 |\n| SSD512* (VGG16) | **79.8** | 19 | 24564 | 512 x 512 |\n\n\n<p align=\"left\">\n<img src=\"http://www.cs.unc.edu/~wliu/papers/ssd_results.png\" alt=\"SSD results on multiple datasets\" width=\"800px\">\n</p>\n\n_Note: SSD300* and SSD512* are the latest models. Current code should reproduce these results._\n\n### Citing SSD\n\nPlease cite SSD in your publications if it helps your research:\n\n    @inproceedings{liu2016ssd,\n      title = {{SSD}: Single Shot MultiBox Detector},\n      author = {Liu, Wei and Anguelov, Dragomir and Erhan, Dumitru and Szegedy, Christian and Reed, Scott and Fu, Cheng-Yang and Berg, Alexander C.},\n      booktitle = {ECCV},\n      year = {2016}\n    }\n\n### Contents\n1. [Installation](#installation)\n2. [Preparation](#preparation)\n3. [Train/Eval](#traineval)\n4. [Models](#models)\n\n### Installation\n1. Get the code. We will call the directory that you cloned Caffe into `$CAFFE_ROOT`\n  ```Shell\n  git clone https://github.com/PaulZhangIsing/CaffeSSD-opencv4.git caffe_SSD\n  cd caffe_SSD\n  ```\n\n2. Build the code. Please follow [Caffe instruction](http://caffe.berkeleyvision.org/installation.html) to install all necessary packages and build it.\n  ```Shell\n  make -j8\n  # Make sure to include $CAFFE_ROOT/python to your PYTHONPATH.\n  make py\n  make test -j8\n  # (Optional)\n  make runtest -j8\n  ```\n\n### Preparation\n1. Download [fully convolutional reduced (atrous) VGGNet](https://gist.github.com/weiliu89/2ed6e13bfd5b57cf81d6). By default, we assume the model is stored in `$CAFFE_ROOT/models/VGGNet/`\n\n2. Download VOC2007 and VOC2012 dataset. By default, we assume the data is stored in `$HOME/data/`\n  ```Shell\n  # Download the data.\n  cd $HOME/data\n  wget http://host.robots.ox.ac.uk/pascal/VOC/voc2012/VOCtrainval_11-May-2012.tar\n  wget http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar\n  wget http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtest_06-Nov-2007.tar\n  # Extract the data.\n  tar -xvf VOCtrainval_11-May-2012.tar\n  tar -xvf VOCtrainval_06-Nov-2007.tar\n  tar -xvf VOCtest_06-Nov-2007.tar\n  ```\n\n3. Create the LMDB file.\n  ```Shell\n  cd $CAFFE_ROOT\n  # Create the trainval.txt, test.txt, and test_name_size.txt in data/VOC0712/\n  ./data/VOC0712/create_list.sh\n  # You can modify the parameters in create_data.sh if needed.\n  # It will create lmdb files for trainval and test with encoded original image:\n  #   - $HOME/data/VOCdevkit/VOC0712/lmdb/VOC0712_trainval_lmdb\n  #   - $HOME/data/VOCdevkit/VOC0712/lmdb/VOC0712_test_lmdb\n  # and make soft links at examples/VOC0712/\n  ./data/VOC0712/create_data.sh\n  ```\n\n### Train/Eval\n1. Train your model and evaluate the model on the fly.\n  ```Shell\n  # It will create model definition files and save snapshot models in:\n  #   - $CAFFE_ROOT/models/VGGNet/VOC0712/SSD_300x300/\n  # and job file, log file, and the python script in:\n  #   - $CAFFE_ROOT/jobs/VGGNet/VOC0712/SSD_300x300/\n  # and save temporary evaluation results in:\n  #   - $HOME/data/VOCdevkit/results/VOC2007/SSD_300x300/\n  # It should reach 77.* mAP at 120k iterations.\n  python examples/ssd/ssd_pascal.py\n  ```\n  If you don't have time to train your model, you can download a pre-trained model at [here](https://drive.google.com/open?id=0BzKzrI_SkD1_WVVTSmQxU0dVRzA).\n\n2. Evaluate the most recent snapshot.\n  ```Shell\n  # If you would like to test a model you trained, you can do:\n  python examples/ssd/score_ssd_pascal.py\n  ```\n\n3. Test your model using a webcam. Note: press <kbd>esc</kbd> to stop.\n  ```Shell\n  # If you would like to attach a webcam to a model you trained, you can do:\n  python examples/ssd/ssd_pascal_webcam.py\n  ```\n  [Here](https://drive.google.com/file/d/0BzKzrI_SkD1_R09NcjM1eElLcWc/view) is a demo video of running a SSD500 model trained on [MSCOCO](http://mscoco.org) dataset.\n\n4. Check out [`examples/ssd_detect.ipynb`](https://github.com/weiliu89/caffe/blob/ssd/examples/ssd_detect.ipynb) or [`examples/ssd/ssd_detect.cpp`](https://github.com/weiliu89/caffe/blob/ssd/examples/ssd/ssd_detect.cpp) on how to detect objects using a SSD model. Check out [`examples/ssd/plot_detections.py`](https://github.com/weiliu89/caffe/blob/ssd/examples/ssd/plot_detections.py) on how to plot detection results output by ssd_detect.cpp.\n\n5. To train on other dataset, please refer to data/OTHERDATASET for more details. We currently add support for COCO and ILSVRC2016. We recommend using [`examples/ssd.ipynb`](https://github.com/weiliu89/caffe/blob/ssd/examples/ssd_detect.ipynb) to check whether the new dataset is prepared correctly.\n\n### Models\nWe have provided the latest models that are trained from different datasets. To help reproduce the results in [Table 6](https://arxiv.org/pdf/1512.02325v4.pdf), most models contain a pretrained `.caffemodel` file, many `.prototxt` files, and python scripts.\n\n1. PASCAL VOC models:\n   * 07+12: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_WVVTSmQxU0dVRzA), [SSD512*](https://drive.google.com/open?id=0BzKzrI_SkD1_ZDIxVHBEcUNBb2s)\n   * 07++12: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_WnR2T1BGVWlCZHM), [SSD512*](https://drive.google.com/open?id=0BzKzrI_SkD1_MjFjNTlnempHNWs)\n   * COCO<sup>[1]</sup>: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_NDlVeFJDc2tIU1k), [SSD512*](https://drive.google.com/open?id=0BzKzrI_SkD1_TW4wTC14aDdCTDQ)\n   * 07+12+COCO: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_UFpoU01yLS1SaG8), [SSD512*](https://drive.google.com/open?id=0BzKzrI_SkD1_X3ZXQUUtM0xNeEk)\n   * 07++12+COCO: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_TkFPTEQ1Z091SUE), [SSD512*](https://drive.google.com/open?id=0BzKzrI_SkD1_NVVNdWdYNEh1WTA)\n\n2. COCO models:\n   * trainval35k: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_dUY1Ml9GRTFpUWc), [SSD512*](https://drive.google.com/open?id=0BzKzrI_SkD1_dlJpZHJzOXd3MTg)\n\n3. ILSVRC models:\n   * trainval1: [SSD300*](https://drive.google.com/open?id=0BzKzrI_SkD1_a2NKQ2d1d043VXM), [SSD500](https://drive.google.com/open?id=0BzKzrI_SkD1_X2ZCLVgwLTgzaTQ)\n\n<sup>[1]</sup>We use [`examples/convert_model.ipynb`](https://github.com/weiliu89/caffe/blob/ssd/examples/convert_model.ipynb) to extract a VOC model from a pretrained COCO model.\n",
            "readme_url": "https://github.com/PaulZhangIsing/CaffeSSD-opencv4",
            "frameworks": [
                "Caffe",
                "scikit-learn",
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "SSD: Single Shot MultiBox Detector",
            "arxiv": "1512.02325",
            "year": 2015,
            "url": "http://arxiv.org/abs/1512.02325v5",
            "abstract": "We present a method for detecting objects in images using a single deep\nneural network. Our approach, named SSD, discretizes the output space of\nbounding boxes into a set of default boxes over different aspect ratios and\nscales per feature map location. At prediction time, the network generates\nscores for the presence of each object category in each default box and\nproduces adjustments to the box to better match the object shape. Additionally,\nthe network combines predictions from multiple feature maps with different\nresolutions to naturally handle objects of various sizes. Our SSD model is\nsimple relative to methods that require object proposals because it completely\neliminates proposal generation and subsequent pixel or feature resampling stage\nand encapsulates all computation in a single network. This makes SSD easy to\ntrain and straightforward to integrate into systems that require a detection\ncomponent. Experimental results on the PASCAL VOC, MS COCO, and ILSVRC datasets\nconfirm that SSD has comparable accuracy to methods that utilize an additional\nobject proposal step and is much faster, while providing a unified framework\nfor both training and inference. Compared to other single stage methods, SSD\nhas much better accuracy, even with a smaller input image size. For $300\\times\n300$ input, SSD achieves 72.1% mAP on VOC2007 test at 58 FPS on a Nvidia Titan\nX and for $500\\times 500$ input, SSD achieves 75.1% mAP, outperforming a\ncomparable state of the art Faster R-CNN model. Code is available at\nhttps://github.com/weiliu89/caffe/tree/ssd .",
            "authors": [
                "Wei Liu",
                "Dragomir Anguelov",
                "Dumitru Erhan",
                "Christian Szegedy",
                "Scott Reed",
                "Cheng-Yang Fu",
                "Alexander C. Berg"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "MSCOCO"
            },
            {
                "name": "COCO"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.999529253937016,
        "task": "Object Detection",
        "task_prob": 0.9822920335419718
    }
}