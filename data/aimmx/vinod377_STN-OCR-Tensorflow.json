{
    "visibility": {
        "visibility": "public"
    },
    "name": "STN-OCR",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "vinod377",
                "owner_type": "User",
                "name": "STN-OCR-Tensorflow",
                "url": "https://github.com/vinod377/STN-OCR-Tensorflow",
                "stars": 1,
                "pushed_at": "2021-06-23 05:23:29+00:00",
                "created_at": "2021-05-12 11:28:32+00:00",
                "language": "Python",
                "description": "Implementation of \"STN-OCR: A single Neural Network for Text Detection and Text Recognition\"  in natural Scenes by Christian Bartz.",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": ".DS_Store",
                "sha": "ab5735341c1f94d6e876594cf2d682e17c1f248d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/vinod377/STN-OCR-Tensorflow/blob/master/.DS_Store"
                    }
                },
                "size": 6148
            },
            {
                "type": "code",
                "name": ".idea",
                "sha": "ba6c79b071a4ffbc3e6b8654ad77b099f172037d",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/vinod377/STN-OCR-Tensorflow/tree/master/.idea"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "200f574b6be46d7101362591498b236cc9f0a4eb",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/vinod377/STN-OCR-Tensorflow/blob/master/main.py"
                    }
                },
                "size": 1355
            },
            {
                "type": "code",
                "name": "src_code",
                "sha": "f4738968cacc41af1edec50f298c5f07e330e3e2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/vinod377/STN-OCR-Tensorflow/tree/master/src_code"
                    }
                },
                "num_files": 2
            }
        ]
    },
    "authors": [
        {
            "name": "Vinod Kumar",
            "email": "vinodnirmala775@gmail.com",
            "github_id": "vinod377"
        }
    ],
    "tags": [],
    "description": "Implementation of \"STN-OCR: A single Neural Network for Text Detection and Text Recognition\"  in natural Scenes by Christian Bartz.",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/vinod377/STN-OCR-Tensorflow",
            "stars": 1,
            "issues": true,
            "readme": "# STN-OCR\nDetecting and recognizing text in natural scene images. This is still an open problem for research community and has many usge like image-based machine translation, autonomous cars or image/video indexing. The Algorithm consist of two stages which are **1.Text Dectection 2.Text Recognition** stages. The Text Dection stage uses **Resnet-Cifar** version of Deep Residual Learning for Image Recognition (\"https://arxiv.org/abs/1512.03385\") and Spatial Transformer Network by Max Jaderberg (\"https://arxiv.org/abs/1506.02025\").The Text Detection and Recognition Stage again contains a variant Resnet-cifar version.The whole model is trained end-to-end.<br />\n\n## Dependencies\n\u2022 Python-3.x <br />\n\u2022 Tensorflow-2.3.1 <br />\n\u2022 Opencv-4.x <br />\n\u2022 Numpy <br />\n\u2022 sklearn <br />\n\n## Repository Description\n\u2022 main.py script creates the whole model consiting of localisation network, Grid generator and sampler and Recognition network.<br />\n\u2022 stn_network.py script crates spatial transformer network, Grid genrator and bilinearsampler.<br />\n\u2022 resnet_stn.py script creates detection and recognition resnet network as proposed by the author.<br />\n\n## Dataset\n\u2022 The Street View House Numbers (SVHN) Dataset.[http://ufldl.stanford.edu/housenumbers/]<br />\n\u2022 Google FSNS dataset.[https://rrc.cvc.uab.es/?ch=6]\n\n***Note-The wok is in progress and the repo will be updated frequently.**\n\n",
            "readme_url": "https://github.com/vinod377/STN-OCR-Tensorflow",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Deep Residual Learning for Image Recognition",
            "arxiv": "1512.03385",
            "year": 2015,
            "url": "http://arxiv.org/abs/1512.03385v1",
            "abstract": "Deeper neural networks are more difficult to train. We present a residual\nlearning framework to ease the training of networks that are substantially\ndeeper than those used previously. We explicitly reformulate the layers as\nlearning residual functions with reference to the layer inputs, instead of\nlearning unreferenced functions. We provide comprehensive empirical evidence\nshowing that these residual networks are easier to optimize, and can gain\naccuracy from considerably increased depth. On the ImageNet dataset we evaluate\nresidual nets with a depth of up to 152 layers---8x deeper than VGG nets but\nstill having lower complexity. An ensemble of these residual nets achieves\n3.57% error on the ImageNet test set. This result won the 1st place on the\nILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100\nand 1000 layers.\n  The depth of representations is of central importance for many visual\nrecognition tasks. Solely due to our extremely deep representations, we obtain\na 28% relative improvement on the COCO object detection dataset. Deep residual\nnets are foundations of our submissions to ILSVRC & COCO 2015 competitions,\nwhere we also won the 1st places on the tasks of ImageNet detection, ImageNet\nlocalization, COCO detection, and COCO segmentation.",
            "authors": [
                "Kaiming He",
                "Xiangyu Zhang",
                "Shaoqing Ren",
                "Jian Sun"
            ]
        },
        {
            "title": "Spatial Transformer Networks",
            "arxiv": "1506.02025",
            "year": 2015,
            "url": "http://arxiv.org/abs/1506.02025v3",
            "abstract": "Convolutional Neural Networks define an exceptionally powerful class of\nmodels, but are still limited by the lack of ability to be spatially invariant\nto the input data in a computationally and parameter efficient manner. In this\nwork we introduce a new learnable module, the Spatial Transformer, which\nexplicitly allows the spatial manipulation of data within the network. This\ndifferentiable module can be inserted into existing convolutional\narchitectures, giving neural networks the ability to actively spatially\ntransform feature maps, conditional on the feature map itself, without any\nextra training supervision or modification to the optimisation process. We show\nthat the use of spatial transformers results in models which learn invariance\nto translation, scale, rotation and more generic warping, resulting in\nstate-of-the-art performance on several benchmarks, and for a number of classes\nof transformations.",
            "authors": [
                "Max Jaderberg",
                "Karen Simonyan",
                "Andrew Zisserman",
                "Koray Kavukcuoglu"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "SVHN"
            },
            {
                "name": "ImageNet"
            },
            {
                "name": "ImageNet Detection"
            },
            {
                "name": "ILSVRC 2015"
            },
            {
                "name": "CIFAR-10"
            },
            {
                "name": "COCO"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999994132600251,
        "task": "Object Detection",
        "task_prob": 0.8643972178954132
    }
}