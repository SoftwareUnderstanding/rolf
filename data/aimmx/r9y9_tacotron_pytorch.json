{
    "visibility": {
        "visibility": "public",
        "license": "Other"
    },
    "name": "tacotron_pytorch",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "r9y9",
                "owner_type": "User",
                "name": "tacotron_pytorch",
                "url": "https://github.com/r9y9/tacotron_pytorch",
                "stars": 267,
                "pushed_at": "2019-07-12 04:37:27+00:00",
                "created_at": "2017-09-15 11:42:38+00:00",
                "language": "Jupyter Notebook",
                "description": "PyTorch implementation of Tacotron speech synthesis model.",
                "license": "Other",
                "frameworks": [
                    "NLTK",
                    "TensorFlow",
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "0251b6739429f6bd6c98c39ceac0b127dc2fed9c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/tree/master/.github"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "a43a44efa8ba8f904283f3a70341595e4adbdc3f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/.gitignore"
                    }
                },
                "size": 2314
            },
            {
                "type": "code",
                "name": ".gitmodules",
                "sha": "49a5cb2cb34413b5a59feab50e7883350a1e8c7b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/.gitmodules"
                    }
                },
                "size": 88
            },
            {
                "type": "code",
                "name": ".travis.yml",
                "sha": "19ed74b85be3e924436e2f251b15658ccdf3b754",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/.travis.yml"
                    }
                },
                "size": 959
            },
            {
                "type": "code",
                "name": "LICENSE.md",
                "sha": "83ffcaab8254c750174511f7d5548fc7adbba977",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/LICENSE.md"
                    }
                },
                "size": 1172
            },
            {
                "type": "code",
                "name": "hparams.py",
                "sha": "1bc6ac554b01b3400ceaa2f44c30845edeb91615",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/hparams.py"
                    }
                },
                "size": 1361
            },
            {
                "type": "code",
                "name": "lib",
                "sha": "92fca94ef8539b966d5f8756dd2d2df254569472",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/tree/master/lib"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "notebooks",
                "sha": "27d6a45cbf092de36751eebe90d7df42e65db666",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/tree/master/notebooks"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "setup.py",
                "sha": "49280579588b1e5e85dd74fb98b99bc934409a38",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/setup.py"
                    }
                },
                "size": 1933
            },
            {
                "type": "code",
                "name": "synthesis.py",
                "sha": "cf4255a4b7f1a801a8a0e6d2728e3bedcfbf52c8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/synthesis.py"
                    }
                },
                "size": 3442
            },
            {
                "type": "code",
                "name": "tacotron_pytorch",
                "sha": "19767328432fc2ee8c97815282ae176175694ae0",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/tree/master/tacotron_pytorch"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "tests",
                "sha": "c631af107db59f5b1d2bcb765aa1daf4df7843e9",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/tree/master/tests"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "fda7da3ff36706f2c05514bc2c37c048cdcaf326",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/r9y9/tacotron_pytorch/blob/master/train.py"
                    }
                },
                "size": 11885
            }
        ]
    },
    "authors": [
        {
            "name": "Ryuichi Yamamoto",
            "email": "zryuichi@gmail.com",
            "github_id": "r9y9"
        }
    ],
    "tags": [
        "speech-synthesis",
        "pytorch",
        "tacotron",
        "python",
        "speech"
    ],
    "description": "PyTorch implementation of Tacotron speech synthesis model.",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/r9y9/tacotron_pytorch",
            "stars": 267,
            "issues": true,
            "readme": "# tacotron_pytorch\n\n[![Build Status](https://travis-ci.org/r9y9/tacotron_pytorch.svg?branch=master)](https://travis-ci.org/r9y9/tacotron_pytorch)\n\nPyTorch implementation of [Tacotron](https://arxiv.org/abs/1703.10135) speech synthesis model.\n\nInspired from [keithito/tacotron](https://github.com/keithito/tacotron). Currently not as much good speech quality as [keithito/tacotron](https://github.com/keithito/tacotron) can generate, but it seems to be basically working. You can find some generated speech examples trained on [LJ Speech Dataset](https://keithito.com/LJ-Speech-Dataset/) at [here](http://nbviewer.jupyter.org/github/r9y9/tacotron_pytorch/blob/master/notebooks/Test%20Tacotron.ipynb).\n\nIf you are comfortable working with TensorFlow, I'd recommend you to try\nhttps://github.com/keithito/tacotron instead. The reason to rewrite it in PyTorch is that it's easier to debug and extend (multi-speaker architecture, etc) at least to me.\n\n## Requirements\n\n- PyTorch\n- TensorFlow (if you want to run the training script. This definitely can be optional, but for now required.)\n\n## Installation\n\n```\ngit clone --recursive https://github.com/r9y9/tacotron_pytorch\npip install -e . # or python setup.py develop\n```\n\nIf you want to run the training script, then you need to install additional dependencies.\n\n```\npip install -e \".[train]\"\n```\n\n## Training\n\nThe package relis on [keithito/tacotron](https://github.com/keithito/tacotron) for text processing, audio preprocessing and audio reconstruction (added as a submodule). Please follows the quick start section at https://github.com/keithito/tacotron and prepare your dataset accordingly.\n\nIf you have your data prepared, assuming your data is in `\"~/tacotron/training\"` (which is the default), then you can train your model by:\n\n```\npython train.py\n```\n\nAlignment, predicted spectrogram, target spectrogram, predicted waveform and checkpoint (model and optimizer states) are saved per 1000 global step in `checkpoints` directory. Training progress can be monitored by:\n\n```\ntensorboard --logdir=log\n```\n\n## Testing model\n\nOpen the notebook in `notebooks` directory and change `checkpoint_path` to your model.\n",
            "readme_url": "https://github.com/r9y9/tacotron_pytorch",
            "frameworks": [
                "NLTK",
                "TensorFlow",
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Tacotron: Towards End-to-End Speech Synthesis",
            "arxiv": "1703.10135",
            "year": 2017,
            "url": "http://arxiv.org/abs/1703.10135v2",
            "abstract": "A text-to-speech synthesis system typically consists of multiple stages, such\nas a text analysis frontend, an acoustic model and an audio synthesis module.\nBuilding these components often requires extensive domain expertise and may\ncontain brittle design choices. In this paper, we present Tacotron, an\nend-to-end generative text-to-speech model that synthesizes speech directly\nfrom characters. Given <text, audio> pairs, the model can be trained completely\nfrom scratch with random initialization. We present several key techniques to\nmake the sequence-to-sequence framework perform well for this challenging task.\nTacotron achieves a 3.82 subjective 5-scale mean opinion score on US English,\noutperforming a production parametric system in terms of naturalness. In\naddition, since Tacotron generates speech at the frame level, it's\nsubstantially faster than sample-level autoregressive methods.",
            "authors": [
                "Yuxuan Wang",
                "RJ Skerry-Ryan",
                "Daisy Stanton",
                "Yonghui Wu",
                "Ron J. Weiss",
                "Navdeep Jaitly",
                "Zongheng Yang",
                "Ying Xiao",
                "Zhifeng Chen",
                "Samy Bengio",
                "Quoc Le",
                "Yannis Agiomyrgiannakis",
                "Rob Clark",
                "Rif A. Saurous"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "LJ Speech Dataset",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "https://keithito.com/LJ-Speech-Dataset/"
                    }
                }
            }
        ]
    },
    "domain": {
        "domain_type": "Speech",
        "domain_prob": 0.9833129873469222
    }
}