{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "VAE PyTorch Implementation",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "kuc2477",
                "owner_type": "User",
                "name": "pytorch-vae",
                "url": "https://github.com/kuc2477/pytorch-vae",
                "stars": 33,
                "pushed_at": "2019-02-19 11:28:40+00:00",
                "created_at": "2017-10-22 08:39:03+00:00",
                "language": "Python",
                "description": "PyTorch implementation of \"Auto-Encoding Variational Bayes\", arxiv:1312.6114",
                "license": "MIT License",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "a5990872a467581022516ab9a82f989d5ec57677",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/.gitignore"
                    }
                },
                "size": 1167
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "0b5c7c39268f5543c044c262a6185270e3c02d47",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/LICENSE"
                    }
                },
                "size": 1066
            },
            {
                "type": "code",
                "name": "arts",
                "sha": "3cf6a502e056ccc3f4ade8fceb8121b0ffa6eb43",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/tree/master/arts"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "data.py",
                "sha": "82ecb5a945e0fc647a5dcb6fd5f72f92178d23ca",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/data.py"
                    }
                },
                "size": 1551
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "0905b82022ae462e26ceafaf029a374474a1be04",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/main.py"
                    }
                },
                "size": 2480
            },
            {
                "type": "code",
                "name": "model.py",
                "sha": "cc026722bae65ff6c1726454c8b56af376adf182",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/model.py"
                    }
                },
                "size": 4394
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "91e1acd9a0fdbc9142c8efa572aa1dcce2bf9251",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/requirements.txt"
                    }
                },
                "size": 196
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "98870c5d986246a622986f3384efdc39153ec624",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/train.py"
                    }
                },
                "size": 3457
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "7aa2352f3bc13562df62b5d356814802c5952d94",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/utils.py"
                    }
                },
                "size": 1435
            },
            {
                "type": "code",
                "name": "visual.py",
                "sha": "c0c163701dd32266c6f87fb94962b398793e5dd0",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/kuc2477/pytorch-vae/blob/master/visual.py"
                    }
                },
                "size": 4108
            }
        ]
    },
    "authors": [
        {
            "name": "Junsoo Ha",
            "email": "kuc2477@gmail.com",
            "github_id": "kuc2477"
        }
    ],
    "tags": [],
    "description": "PyTorch implementation of \"Auto-Encoding Variational Bayes\", arxiv:1312.6114",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/kuc2477/pytorch-vae",
            "stars": 33,
            "issues": true,
            "readme": "# VAE PyTorch Implementation\n\nPyTorch implementation of [Auto-Encoding Variational Bayes, arxiv:1312.6114](https://arxiv.org/abs/1312.6114)\n\n![vae-graphical-model](./arts/vae.png)\n\n\n## Installation\n\n```\n$ git clone https://github.com/kuc2477/pytorch-vae && cd pytorch-vae\n$ pip install -r requirements.txt\n```\n\n\n## CLI\n\nImplementation CLI is provided by `main.py`\n\n#### Usage\n```\n$ ./main.py --help\n$ usage: VAE PyTorch implementation [-h] [--dataset {mnist,cifar10,cifar100}]\n                                  [--kernel-num KERNEL_NUM] [--z-size Z_SIZE]\n                                  [--epochs EPOCHS] [--batch-size BATCH_SIZE]\n                                  [--sample-size SAMPLE_SIZE] [--lr LR]\n                                  [--weight-decay WEIGHT_DECAY]\n                                  [--loss-log-interval LOSS_LOG_INTERVAL]\n                                  [--image-log-interval IMAGE_LOG_INTERVAL]\n                                  [--resume] [--checkpoint-dir CHECKPOINT_DIR]\n                                  [--sample-dir SAMPLE_DIR] [--no-gpus]\n                                  (--test | --train)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --dataset {mnist,cifar10,cifar100}\n  --kernel-num KERNEL_NUM\n  --z-size Z_SIZE\n  --epochs EPOCHS\n  --batch-size BATCH_SIZE\n  --sample-size SAMPLE_SIZE\n  --lr LR\n  --weight-decay WEIGHT_DECAY\n  --loss-log-interval LOSS_LOG_INTERVAL\n  --image-log-interval IMAGE_LOG_INTERVAL\n  --resume\n  --checkpoint-dir CHECKPOINT_DIR\n  --sample-dir SAMPLE_DIR\n  --no-gpus\n  --test\n  --train\n```\n\n#### Train\n```\n./main.py --train\n```\n\n#### Test\n```\n./main.py --test\n```\n\n\n## Reference\n- [Auto-Encoding Variational Bayes, arxiv:1312.6114](https://arxiv.org/abs/1312.6114)\n\n\n## Author\nHa Junsoo / [@kuc2477](https://github.com/kuc2477) / MIT License\n",
            "readme_url": "https://github.com/kuc2477/pytorch-vae",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Auto-Encoding Variational Bayes",
            "arxiv": "1312.6114",
            "year": 2013,
            "url": "http://arxiv.org/abs/1312.6114v10",
            "abstract": "How can we perform efficient inference and learning in directed probabilistic\nmodels, in the presence of continuous latent variables with intractable\nposterior distributions, and large datasets? We introduce a stochastic\nvariational inference and learning algorithm that scales to large datasets and,\nunder some mild differentiability conditions, even works in the intractable\ncase. Our contributions is two-fold. First, we show that a reparameterization\nof the variational lower bound yields a lower bound estimator that can be\nstraightforwardly optimized using standard stochastic gradient methods. Second,\nwe show that for i.i.d. datasets with continuous latent variables per\ndatapoint, posterior inference can be made especially efficient by fitting an\napproximate inference model (also called a recognition model) to the\nintractable posterior using the proposed lower bound estimator. Theoretical\nadvantages are reflected in experimental results.",
            "authors": [
                "Diederik P Kingma",
                "Max Welling"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "MNIST"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9554706737966724,
        "task": "Image Classification",
        "task_prob": 0.8422176539964139
    }
}