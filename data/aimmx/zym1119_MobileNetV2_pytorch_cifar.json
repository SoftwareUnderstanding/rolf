{
    "visibility": {
        "visibility": "public",
        "license": "Apache License 2.0"
    },
    "name": "MobileNetV2_pytorch_cifar",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "zym1119",
                "owner_type": "User",
                "name": "MobileNetV2_pytorch_cifar",
                "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar",
                "stars": 6,
                "pushed_at": "2018-07-05 08:50:20+00:00",
                "created_at": "2018-07-04 09:28:39+00:00",
                "language": "Python",
                "description": "A complete implementation of MobileNetv2 on CIFAR dataset in PyTorch",
                "license": "Apache License 2.0",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "261eeb9e9f8b2b4b0d119366dda99c6fd7d35c64",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/LICENSE"
                    }
                },
                "size": 11357
            },
            {
                "type": "code",
                "name": "MobileNet_V2_cifar100",
                "sha": "a71fb08498b44df5ed18f6ee93b0abcbb91038f5",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/tree/master/MobileNet_V2_cifar100"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "config.py",
                "sha": "743809aa6fb29ae51c1b98ceb6e257e774fd58bf",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/config.py"
                    }
                },
                "size": 1637
            },
            {
                "type": "code",
                "name": "img",
                "sha": "c6142faa77b5044ee500242d982b550acef184db",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/tree/master/img"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "layers.py",
                "sha": "90a696ed820a1bdbdc1ec45f22a27548cda26b27",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/layers.py"
                    }
                },
                "size": 2292
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "e12997f35898d6a0ad5f056df179f8cb77796b03",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/main.py"
                    }
                },
                "size": 1408
            },
            {
                "type": "code",
                "name": "mobilenetv2.py",
                "sha": "a38bca3740ac394e44a64d2a5b89438a1579a4f7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/mobilenetv2.py"
                    }
                },
                "size": 9547
            },
            {
                "type": "code",
                "name": "progressbar.py",
                "sha": "8759da749d8d124cf221f9a7143421ecafe823be",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/progressbar.py"
                    }
                },
                "size": 1279
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "7663c43111b08bf24907b1280bc79408ee4fad4e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/utils.py"
                    }
                },
                "size": 2918
            }
        ]
    },
    "authors": [
        {
            "name": "\u9ca8\u9c7c\u8fa3\u6912",
            "github_id": "zym1119"
        }
    ],
    "tags": [],
    "description": "A complete implementation of MobileNetv2 on CIFAR dataset in PyTorch",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar",
            "stars": 6,
            "issues": true,
            "readme": "# MobileNetV2_pytorch_cifar\nThis is a complete implementation of MobileNetv2 in PyTorch which can be trained on CIFAR10, CIFAR100 or your own dataset.\nThis network comes from the paper below\n>Inverted Residuals and Linear Bottlenecks: Mobile Networks for Classification, Detection and Segmentation\nhttps://arxiv.org/abs/1801.04381v3\n\nIn this network, an inverted residual structure and depthwise convolution is used. Please refer to that paper for more detailed information\n\n## Usage\nThis project is compiled and run on Python 2.7 and PyTorch 0.4.0\nHere are some necessaries dependencies:\n```\ntorch 0.4.0\ntorchvision 0.2.1\nnumpy 1.14.3\ntensorboardX 1.2\n```\nuse pip to install them first\n\n## Train and Test\n1. Download CIFAR10 or CIFAR100 dataset or prepare your own dataset like a dataloader defined in PyTorch\n2. Modify ```config.py``` into your own configuration, eg. change ```image_size``` or something\n3. Run ``` python main.py --dataset cifar10 --root /your/path/to/dataset/ ```\n\nTensorboard is also available, just use \n```bash\ntensorboard --logdir=./exp_dir/summaries\n```\nlogdir is also changable in ```config.py```\n\n>I compared my implementation with the implementation of MG2033, for he has many stars, is quite confusing that my implementation on cifar100 has about 8% higher accuracy-74% vs 66%, my training policy is the same with his.\n\nmy implementation accuracy on cifar100:\n\n![my_implementation](https://github.com/zym1119/MobileNetV2_pytorch_cifar/blob/master/img/mobilenetv2_test_cifar100_mine.png)\n\n",
            "readme_url": "https://github.com/zym1119/MobileNetV2_pytorch_cifar",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "MobileNetV2: Inverted Residuals and Linear Bottlenecks",
            "arxiv": "1801.04381",
            "year": 2018,
            "url": "http://arxiv.org/abs/1801.04381v4",
            "abstract": "In this paper we describe a new mobile architecture, MobileNetV2, that\nimproves the state of the art performance of mobile models on multiple tasks\nand benchmarks as well as across a spectrum of different model sizes. We also\ndescribe efficient ways of applying these mobile models to object detection in\na novel framework we call SSDLite. Additionally, we demonstrate how to build\nmobile semantic segmentation models through a reduced form of DeepLabv3 which\nwe call Mobile DeepLabv3.\n  The MobileNetV2 architecture is based on an inverted residual structure where\nthe input and output of the residual block are thin bottleneck layers opposite\nto traditional residual models which use expanded representations in the input\nan MobileNetV2 uses lightweight depthwise convolutions to filter features in\nthe intermediate expansion layer. Additionally, we find that it is important to\nremove non-linearities in the narrow layers in order to maintain\nrepresentational power. We demonstrate that this improves performance and\nprovide an intuition that led to this design. Finally, our approach allows\ndecoupling of the input/output domains from the expressiveness of the\ntransformation, which provides a convenient framework for further analysis. We\nmeasure our performance on Imagenet classification, COCO object detection, VOC\nimage segmentation. We evaluate the trade-offs between accuracy, and number of\noperations measured by multiply-adds (MAdd), as well as the number of\nparameters",
            "authors": [
                "Mark Sandler",
                "Andrew Howard",
                "Menglong Zhu",
                "Andrey Zhmoginov",
                "Liang-Chieh Chen"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999502573846344,
        "task": "Image Classification",
        "task_prob": 0.7288053213528437
    },
    "training": {
        "datasets": [
            {
                "name": "COCO"
            },
            {
                "name": "ImageNet"
            }
        ]
    }
}