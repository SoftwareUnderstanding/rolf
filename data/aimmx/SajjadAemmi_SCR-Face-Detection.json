{
    "visibility": {
        "visibility": "public",
        "license": "Apache License 2.0"
    },
    "name": "Introduction",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "SajjadAemmi",
                "owner_type": "User",
                "name": "SCR-Face-Detection",
                "url": "https://github.com/SajjadAemmi/SCR-Face-Detection",
                "stars": 13,
                "pushed_at": "2021-09-17 13:46:44+00:00",
                "created_at": "2021-09-17 07:05:18+00:00",
                "language": "Python",
                "description": "Sample and Computation Redistribution for Efficient Face Detection",
                "license": "Apache License 2.0",
                "frameworks": [
                    "scikit-learn",
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "94ae10396f9939655bb0ea51db559f004fa28ed3",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/.gitignore"
                    }
                },
                "size": 49
            },
            {
                "type": "code",
                "name": ".idea",
                "sha": "69be4f1647bb5abe3214d0d703688172dd7ebc1e",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/.idea"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "04adf5cbc620ad190547b092fa449e36df5f7bf4",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/LICENSE"
                    }
                },
                "size": 11400
            },
            {
                "type": "code",
                "name": "configs",
                "sha": "c30e009dcca9b7829d6a853bbe7eaa1ae6d1f9b6",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/configs"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "image_demo.py",
                "sha": "c35b6f89cc02752c1ab20f0c6088363737369516",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/image_demo.py"
                    }
                },
                "size": 995
            },
            {
                "type": "code",
                "name": "input",
                "sha": "85b699cda3d7787eb6cb7c459f52cd6b0e24db9f",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/input"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "mmdet",
                "sha": "56dd9c2fab7e62c3a7be619f328815ad7994beba",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/mmdet"
                    }
                },
                "num_files": 9
            },
            {
                "type": "code",
                "name": "output",
                "sha": "be641dda4e9414a2888b03f9c2f4995be0471d8f",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/output"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "pytest.ini",
                "sha": "9796e871e70c7c67345b1d6bcf708c0c82377a98",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/pytest.ini"
                    }
                },
                "size": 293
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "6981bd723391a980c0f22baeab39d0adbcb68679",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/requirements.txt"
                    }
                },
                "size": 109
            },
            {
                "type": "code",
                "name": "requirements",
                "sha": "1bfd1162de64ebd24c92e1ed1b7cd0928173bf4b",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/requirements"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "search_tools",
                "sha": "822fb431953e303748227887445ee87165b478f1",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/search_tools"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "setup.cfg",
                "sha": "873406e8f19ce243d5e010fcf34fbd6b43fced75",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/setup.cfg"
                    }
                },
                "size": 470
            },
            {
                "type": "code",
                "name": "setup.py",
                "sha": "55eea6ba642e49e9a8e71e20aaecae2100542c3e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/setup.py"
                    }
                },
                "size": 5864
            },
            {
                "type": "code",
                "name": "tools",
                "sha": "d0028cb97f3bd1d5f0ae4cf21525c996e9411503",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/tools"
                    }
                },
                "num_files": 14
            },
            {
                "type": "code",
                "name": "video_demo.py",
                "sha": "9b8db56276a3a50a7d7dedf203e264cfa369cfba",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/video_demo.py"
                    }
                },
                "size": 1906
            },
            {
                "type": "code",
                "name": "webcam_demo.py",
                "sha": "f64a649c83caf74f970a3c28e865c6497c515d46",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/blob/master/webcam_demo.py"
                    }
                },
                "size": 1220
            },
            {
                "type": "code",
                "name": "weights",
                "sha": "2831a1735cf91eccf51d09b58eb98f1f0aa81bf9",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/SajjadAemmi/SCR-Face-Detection/tree/master/weights"
                    }
                },
                "num_files": 1
            }
        ]
    },
    "authors": [
        {
            "name": "Sajjad Aemmi",
            "email": "sajjadaemmi@gmail.com",
            "github_id": "SajjadAemmi"
        },
        {
            "name": "Maryam Boneh",
            "github_id": "MaryamBoneh"
        }
    ],
    "tags": [],
    "description": "Sample and Computation Redistribution for Efficient Face Detection",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/SajjadAemmi/SCR-Face-Detection",
            "stars": 13,
            "issues": true,
            "readme": "## Introduction\n\nSCRFD is an efficient high accuracy face detection approach which initially described in [Arxiv](https://arxiv.org/abs/2105.04714).\n\n<img src=\"https://github.com/nttstar/insightface-resources/blob/master/images/scrfd_evelope.jpg\" width=\"400\" alt=\"prcurve\"/>\n\n## Performance\n\nPrecision, flops and infer time are all evaluated on **VGA resolution**.\n\n#### ResNet family\n\n| Method              | Backbone        | Easy  | Medium | Hard  | \\#Params(M) | \\#Flops(G) | Infer(ms) |\n| ------------------- | --------------- | ----- | ------ | ----- | ----------- | ---------- | --------- |\n| DSFD (CVPR19)       | ResNet152       | 94.29 | 91.47  | 71.39 | 120.06      | 259.55     | 55.6      |\n| RetinaFace (CVPR20) | ResNet50        | 94.92 | 91.90  | 64.17 | 29.50       | 37.59      | 21.7      |\n| HAMBox (CVPR20)     | ResNet50        | 95.27 | 93.76  | 76.75 | 30.24       | 43.28      | 25.9      |\n| TinaFace (Arxiv20)  | ResNet50        | 95.61 | 94.25  | 81.43 | 37.98       | 172.95     | 38.9      |\n| - | - | - | - | - | - | - | - |\n| ResNet-34GF         | ResNet50        | 95.64 | 94.22  | 84.02 | 24.81       | 34.16      | 11.8      |\n| **SCRFD-34GF**      | Bottleneck Res  | 96.06 | 94.92  | 85.29 | 9.80        | 34.13      | 11.7      |\n| ResNet-10GF         | ResNet34x0.5    | 94.69 | 92.90  | 80.42 | 6.85        | 10.18      | 6.3       |\n| **SCRFD-10GF**      | Basic Res       | 95.16 | 93.87  | 83.05 | 3.86        | 9.98       | 4.9       |\n| ResNet-2.5GF        | ResNet34x0.25   | 93.21 | 91.11  | 74.47 | 1.62        | 2.57       | 5.4       |\n| **SCRFD-2.5GF**     | Basic Res       | 93.78 | 92.16  | 77.87 | 0.67        | 2.53       | 4.2       |\n\n\n#### Mobile family\n\n| Method              | Backbone        | Easy  | Medium | Hard  | \\#Params(M) | \\#Flops(G) | Infer(ms) |\n| ------------------- | --------------- | ----- | ------ | ----- | ----------- | ---------- | --------- |\n| RetinaFace (CVPR20) | MobileNet0.25   | 87.78 | 81.16  | 47.32 | 0.44        | 0.802      | 7.9       |\n| FaceBoxes (IJCB17)  | -               | 76.17 | 57.17  | 24.18 | 1.01        | 0.275      | 2.5       |\n| - | - | - | - | - | - | - | - |\n| MobileNet-0.5GF     | MobileNetx0.25  | 90.38 | 87.05  | 66.68 | 0.37        | 0.507      | 3.7       |\n| **SCRFD-0.5GF**     | Depth-wise Conv | 90.57 | 88.12  | 68.51 | 0.57        | 0.508      | 3.6       |\n\n\n**X64 CPU Performance of SCRFD-0.5GF:**\n\n| Test-Input-Size         | CPU Single-Thread   | Easy  | Medium | Hard  |\n| ----------------------- | -----------------   | ----- | ------ | ----- |\n| Original-Size(scale1.0) | -                   | 90.91 | 89.49  | 82.03 |\n| 640x480                 | 28.3ms              | 90.57 | 88.12  | 68.51 |\n| 320x240                 | 11.4ms              | -     | -      | -     |\n\n*precision and infer time are evaluated on AMD Ryzen 9 3950X, using the simple PyTorch CPU inference by setting `OMP_NUM_THREADS=1` (no mkldnn).*\n\n## Installation\n\nPlease refer to [mmdetection](https://github.com/open-mmlab/mmdetection/blob/master/docs/get_started.md) for installation.\n \n  1. Install [mmcv](https://github.com/open-mmlab/mmcv). (mmcv-full==1.2.6 and 1.3.3 was tested)\n  2. Install build requirements and then install mmdet.\n       ```\n       pip install -r requirements/build.txt\n       pip install -v -e .  # or \"python setup.py develop\"\n       ```\n\n## Pretrained-Models\n\n|      Name      | Easy  | Medium | Hard  | FLOPs | Params(M) | Infer(ms) | Link                                                         |\n| :------------: | ----- | ------ | ----- | ----- | --------- | --------- | ------------------------------------------------------------ |\n|   SCRFD_500M   | 90.57 | 88.12  | 68.51 | 500M  | 0.57      | 3.6       | [download](https://1drv.ms/u/s!AswpsDO2toNKqyYWxScdiTITY4TQ?e=DjXof9) |\n|    SCRFD_1G    | 92.38 | 90.57  | 74.80 | 1G    | 0.64      | 4.1       | [download](https://1drv.ms/u/s!AswpsDO2toNKqyPVLI44ahNBsOMR?e=esPrBL) |\n|   SCRFD_2.5G   | 93.78 | 92.16  | 77.87 | 2.5G  | 0.67      | 4.2       | [download](https://1drv.ms/u/s!AswpsDO2toNKqyTIXnzB1ujPq4th?e=5t1VNv) |\n|   SCRFD_10G    | 95.16 | 93.87  | 83.05 | 10G   | 3.86      | 4.9       | [download](https://1drv.ms/u/s!AswpsDO2toNKqyUKwTiwXv2kaa8o?e=umfepO) |\n|   SCRFD_34G    | 96.06 | 94.92  | 85.29 | 34G   | 9.80      | 11.7      | [download](https://1drv.ms/u/s!AswpsDO2toNKqyKZwFebVlmlOvzz?e=V2rqUy) |\n| SCRFD_500M_KPS | 90.97 | 88.44  | 69.49 | 500M  | 0.57      | 3.6      | [download](https://1drv.ms/u/s!AswpsDO2toNKri_NDM0GIkPpkE2f?e=JkebJo) |\n| SCRFD_2.5G_KPS | 93.80 | 92.02  | 77.13 | 2.5G  | 0.82      | 4.3       | [download](https://1drv.ms/u/s!AswpsDO2toNKqyGlhxnCg3smyQqX?e=A6Hufm) |\n| SCRFD_10G_KPS  | 95.40 | 94.01  | 82.80 | 10G   | 4.23      | 5.0       | [download](https://1drv.ms/u/s!AswpsDO2toNKqycsF19UbaCWaLWx?e=F6i5Vm) |\n\nmAP, FLOPs and inference latency are all evaluated on VGA resolution.\n``_KPS`` means the model includes 5 keypoints prediction.\n\n## Convert to ONNX\n\nPlease refer to `tools/scrfd2onnx.py`\n\nGenerated onnx model can accept dynamic input as default.\n\nYou can also set specific input shape by pass ``--shape 640 640``, then output onnx model can be optimized by onnx-simplifier.\n\n\n## Inference\nPut your input images or videos in `./input` directory. The output will be saved in `./output` directory. \nIn root directory of project, run the following command for image: \n\n```\npython inference_image.py --input \"./input/test.jpg\"\n```\nand for video:\n```\npython inference_video.py --input \"./input/obama.mp4\"\n```\nUse -sh for show results during code running or not\n\nNote that you can pass some other arguments. Take a look at `inference_video.py` file.\n",
            "readme_url": "https://github.com/SajjadAemmi/SCR-Face-Detection",
            "frameworks": [
                "scikit-learn",
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Sample and Computation Redistribution for Efficient Face Detection",
            "arxiv": "2105.04714",
            "year": 2021,
            "url": "http://arxiv.org/abs/2105.04714v1",
            "abstract": "Although tremendous strides have been made in uncontrolled face detection,\nefficient face detection with a low computation cost as well as high precision\nremains an open challenge. In this paper, we point out that training data\nsampling and computation distribution strategies are the keys to efficient and\naccurate face detection. Motivated by these observations, we introduce two\nsimple but effective methods (1) Sample Redistribution (SR), which augments\ntraining samples for the most needed stages, based on the statistics of\nbenchmark datasets; and (2) Computation Redistribution (CR), which reallocates\nthe computation between the backbone, neck and head of the model, based on a\nmeticulously defined search methodology. Extensive experiments conducted on\nWIDER FACE demonstrate the state-of-the-art efficiency-accuracy trade-off for\nthe proposed \\scrfd family across a wide range of compute regimes. In\nparticular, \\scrfdf{34} outperforms the best competitor, TinaFace, by $3.86\\%$\n(AP at hard set) while being more than \\emph{3$\\times$ faster} on GPUs with\nVGA-resolution images. We also release our code to facilitate future research.",
            "authors": [
                "Jia Guo",
                "Jiankang Deng",
                "Alexandros Lattas",
                "Stefanos Zafeiriou"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9981649897350493,
        "task": "Image Classification",
        "task_prob": 0.24281707744023723
    },
    "training": {
        "datasets": [
            {
                "name": "CR"
            }
        ]
    }
}