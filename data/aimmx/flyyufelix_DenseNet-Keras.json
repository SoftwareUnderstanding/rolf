{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "DenseNet-Keras with ImageNet Pretrained Models",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "flyyufelix",
                "owner_type": "User",
                "name": "DenseNet-Keras",
                "url": "https://github.com/flyyufelix/DenseNet-Keras",
                "stars": 576,
                "pushed_at": "2019-10-12 18:53:41+00:00",
                "created_at": "2017-05-12 08:39:09+00:00",
                "language": "Python",
                "description": "DenseNet Implementation in Keras with ImageNet Pretrained Models",
                "license": "MIT License",
                "frameworks": [
                    "Keras"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "f3e6992b8e772007888cb2738d1ec20d9b9e5c67",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/.gitignore"
                    }
                },
                "size": 1063
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "cbea78a133e2392f70b269fb59e8ce3a346d66f5",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/LICENSE"
                    }
                },
                "size": 1065
            },
            {
                "type": "code",
                "name": "custom_layers.py",
                "sha": "31e79f4bea82fdab6becdf9148245db4d647e624",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/custom_layers.py"
                    }
                },
                "size": 3340
            },
            {
                "type": "code",
                "name": "densenet121.py",
                "sha": "7973016e5eba09be6b60fd3acc66cd2c9d9e1405",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/densenet121.py"
                    }
                },
                "size": 6939
            },
            {
                "type": "code",
                "name": "densenet161.py",
                "sha": "936bfe2b9a36a9bb459f71e12d5106f01373469c",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/densenet161.py"
                    }
                },
                "size": 6939
            },
            {
                "type": "code",
                "name": "densenet169.py",
                "sha": "07f0e637d2530a467ae49e96bfbd0c1aecaac6e2",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/densenet169.py"
                    }
                },
                "size": 6935
            },
            {
                "type": "code",
                "name": "imagenet_models",
                "sha": "6ba1eea253c910156c2e296f3531a072fa592dc8",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/tree/master/imagenet_models"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "resources",
                "sha": "bd97df37597f76cf6680081de29127b7b3ee778b",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/tree/master/resources"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "test_inference.py",
                "sha": "a34221374f8a54097e4f405d519eae546c04b279",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/flyyufelix/DenseNet-Keras/blob/master/test_inference.py"
                    }
                },
                "size": 1538
            }
        ]
    },
    "authors": [
        {
            "name": "Felix Yu",
            "github_id": "flyyufelix"
        }
    ],
    "tags": [],
    "description": "DenseNet Implementation in Keras with ImageNet Pretrained Models",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/flyyufelix/DenseNet-Keras",
            "stars": 576,
            "issues": true,
            "readme": "# DenseNet-Keras with ImageNet Pretrained Models\n\nThis is an [Keras](https://keras.io/) implementation of DenseNet with [ImageNet](http://www.image-net.org/) pretrained weights. The weights are converted from [Caffe Models](https://github.com/shicai/DenseNet-Caffe). The implementation supports both [Theano](http://deeplearning.net/software/theano/) and [TensorFlow](https://www.tensorflow.org/) backends.\n\nTo know more about how DenseNet works, please refer to the [original paper](https://arxiv.org/abs/1608.06993)\n\n```\nDensely Connected Convolutional Networks\nGao Huang, Zhuang Liu, Kilian Q. Weinberger, Laurens van der Maaten\narXiv:1608.06993\n```\n\n## Pretrained DenseNet Models on ImageNet\n\nThe top-1/5 accuracy rates by using single center crop (crop size: 224x224, image size: 256xN)\n\nNetwork|Top-1|Top-5|Theano|Tensorflow\n:---:|:---:|:---:|:---:|:---:\nDenseNet 121 (k=32)| 74.91| 92.19| [model (32  MB)](https://drive.google.com/open?id=0Byy2AcGyEVxfMlRYb3YzV210VzQ)| [model (32 MB)](https://drive.google.com/open?id=0Byy2AcGyEVxfSTA4SHJVOHNuTXc)\nDenseNet 169 (k=32)| 76.09| 93.14| [model (56  MB)](https://drive.google.com/open?id=0Byy2AcGyEVxfN0d3T1F1MXg0NlU)| [model (56 MB)](https://drive.google.com/open?id=0Byy2AcGyEVxfSEc5UC1ROUFJdmM)\nDenseNet 161 (k=48)| 77.64| 93.79| [model (112 MB)](https://drive.google.com/open?id=0Byy2AcGyEVxfVnlCMlBGTDR3RGs)| [model (112 MB)](https://drive.google.com/open?id=0Byy2AcGyEVxfUDZwVjU2cFNidTA)\n\n## Usage\n\nFirst, download the above pretrained weights to the `imagenet_models` folder.\n\nRun `test_inference.py` for an example of how to use the pretrained model to make inference.\n\n```\npython test_inference.py\n```\n\n## Fine-tuning\n\nCheck [this](https://github.com/flyyufelix/cnn_finetune) out to see example of fine-tuning DenseNet with your own dataset.\n\n## Requirements\n\n* Keras ~~1.2.2~~ 2.0.5\n* Theano 0.8.2 or TensorFlow ~~0.12.0~~ 1.2.1\n\n## Updates\n\n* Keras 2.0.5 and TensorFlow 1.2.1 are supported\n\n\n",
            "readme_url": "https://github.com/flyyufelix/DenseNet-Keras",
            "frameworks": [
                "Keras"
            ]
        }
    ],
    "references": [
        {
            "title": "Densely Connected Convolutional Networks",
            "arxiv": "1608.06993",
            "year": 2016,
            "url": "http://arxiv.org/abs/1608.06993v5",
            "abstract": "Recent work has shown that convolutional networks can be substantially\ndeeper, more accurate, and efficient to train if they contain shorter\nconnections between layers close to the input and those close to the output. In\nthis paper, we embrace this observation and introduce the Dense Convolutional\nNetwork (DenseNet), which connects each layer to every other layer in a\nfeed-forward fashion. Whereas traditional convolutional networks with L layers\nhave L connections - one between each layer and its subsequent layer - our\nnetwork has L(L+1)/2 direct connections. For each layer, the feature-maps of\nall preceding layers are used as inputs, and its own feature-maps are used as\ninputs into all subsequent layers. DenseNets have several compelling\nadvantages: they alleviate the vanishing-gradient problem, strengthen feature\npropagation, encourage feature reuse, and substantially reduce the number of\nparameters. We evaluate our proposed architecture on four highly competitive\nobject recognition benchmark tasks (CIFAR-10, CIFAR-100, SVHN, and ImageNet).\nDenseNets obtain significant improvements over the state-of-the-art on most of\nthem, whilst requiring less computation to achieve high performance. Code and\npre-trained models are available at https://github.com/liuzhuang13/DenseNet .",
            "authors": [
                "Gao Huang",
                "Zhuang Liu",
                "Laurens van der Maaten",
                "Kilian Q. Weinberger"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "ImageNet"
            },
            {
                "name": "SVHN"
            },
            {
                "name": "CIFAR-100"
            },
            {
                "name": "CIFAR-10"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.999998357277839,
        "task": "Image Classification",
        "task_prob": 0.9876624178404931
    }
}