{
    "visibility": {
        "visibility": "public"
    },
    "name": "Video-Streaming-Pipeline",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "Video-Streaming-Pipeline",
                "owner_type": "Organization",
                "name": "Video-Streaming-Pipeline",
                "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline",
                "stars": 1,
                "pushed_at": "2022-01-11 10:04:48+00:00",
                "created_at": "2021-03-13 06:34:03+00:00",
                "language": "C++",
                "description": "\uc2e4\uc2dc\uac04 \uc774\ubbf8\uc9c0 \ucc98\ub9ac \ubaa8\ub378\uc744 \uc704\ud55c \ubaa8\ubc14\uc77c, \ud074\ub77c\uc6b0\ub4dc \uc601\uc0c1 \uc804\uc1a1 \ud30c\uc774\ud504\ub77c\uc778 \uac1c\ubc1c",
                "frameworks": [
                    "Caffe",
                    "TensorFlow",
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".vscode",
                "sha": "4f2ec0ba2deddb39729749daeed2b10b0f7a4b62",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/tree/main/.vscode"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "benchmark",
                "sha": "2645e8ae28dbea717fd369cf3ddbc22892c801b5",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/tree/main/benchmark"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "face_detection_app.cpp",
                "sha": "804725f3262c0b8f13ed273047b715b4cac30ac7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/face_detection_app.cpp"
                    }
                },
                "size": 3957
            },
            {
                "type": "code",
                "name": "opencv",
                "sha": "a76b4b3dc329c0294e2ee7f0dccd257484d599c9",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/tree/main/opencv"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "python",
                "sha": "88e590584712b262e1103cfe57a0c43841ffeb59",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/tree/main/python"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "raspi",
                "sha": "b1d0e0009d5f954180021be2d289f0ca29313dd3",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/tree/main/raspi"
                    }
                },
                "num_files": 12
            },
            {
                "type": "code",
                "name": "receiver.cpp",
                "sha": "d5903488524bedf60a0eef47bd5262d1c0117fdc",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/receiver.cpp"
                    }
                },
                "size": 578
            },
            {
                "type": "code",
                "name": "receiver.py",
                "sha": "0ac7e28ea5cd6ed7d6fa1966c5ab8600db5e38b3",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/receiver.py"
                    }
                },
                "size": 475
            },
            {
                "type": "code",
                "name": "sender.cpp",
                "sha": "e984a73677f6a2b8c0a596c81dfc37ecf742c302",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/sender.cpp"
                    }
                },
                "size": 1563
            },
            {
                "type": "code",
                "name": "temp_receiver.cpp",
                "sha": "0ad250c28615b06383ab07f25e63ae703784ad51",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/temp_receiver.cpp"
                    }
                },
                "size": 3247
            },
            {
                "type": "code",
                "name": "temp_sender.cpp",
                "sha": "1da17d69b0e9843e3b81b4d6301318d555da7985",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/temp_sender.cpp"
                    }
                },
                "size": 1994
            },
            {
                "type": "code",
                "name": "\u1109\u1175\u11af\u1109\u1175\u1100\u1161\u11ab \u110f\u1165\u11b7\u1111\u1172\u1110\u1165 \u1107\u1175\u110c\u1165\u11ab \u110e\u1165\u1105\u1175\u1105\u1173\u11af \u110b\u1171\u1112\u1161\u11ab \u110b\u1167\u11bc\u1109\u1161\u11bc \u110c\u1165\u11ab\u1109\u1169\u11bc \u1111\u1161\u110b\u1175\u1111\u1173\u1105\u1161\u110b\u1175\u11ab \u1109\u1175\u1109\u1173\u1110\u1166\u11b7 \u110b\u1167\u11ab\u1100\u116e.docx",
                "sha": "ee2c6e63a389efd06851094a71c739ba7c90148a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/\u1109\u1175\u11af\u1109\u1175\u1100\u1161\u11ab \u110f\u1165\u11b7\u1111\u1172\u1110\u1165 \u1107\u1175\u110c\u1165\u11ab \u110e\u1165\u1105\u1175\u1105\u1173\u11af \u110b\u1171\u1112\u1161\u11ab \u110b\u1167\u11bc\u1109\u1161\u11bc \u110c\u1165\u11ab\u1109\u1169\u11bc \u1111\u1161\u110b\u1175\u1111\u1173\u1105\u1161\u110b\u1175\u11ab \u1109\u1175\u1109\u1173\u1110\u1166\u11b7 \u110b\u1167\u11ab\u1100\u116e.docx"
                    }
                },
                "size": 100104
            }
        ]
    },
    "authors": [
        {
            "name": "JAESEONG LEE",
            "email": "lee01042000@gmail.com",
            "github_id": "BEOKS"
        },
        {
            "name": "hyoeun98",
            "github_id": "hyoeun98"
        },
        {
            "name": "hymi54",
            "github_id": "hymi54"
        },
        {
            "name": "K-Minsu",
            "github_id": "K-Minsu"
        }
    ],
    "tags": [
        "edge-computing",
        "deep-learning",
        "gstreamer",
        "pytorch",
        "torchvision"
    ],
    "description": "\uc2e4\uc2dc\uac04 \uc774\ubbf8\uc9c0 \ucc98\ub9ac \ubaa8\ub378\uc744 \uc704\ud55c \ubaa8\ubc14\uc77c, \ud074\ub77c\uc6b0\ub4dc \uc601\uc0c1 \uc804\uc1a1 \ud30c\uc774\ud504\ub77c\uc778 \uac1c\ubc1c",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline",
            "stars": 1,
            "issues": true,
            "readme": "# Video-Streaming-Pipeline\n\uc2e4\uc2dc\uac04 \uc774\ubbf8\uc9c0 \ucc98\ub9ac \ubaa8\ub378\uc744 \uc704\ud55c \ubaa8\ubc14\uc77c, \ud074\ub77c\uc6b0\ub4dc \uc601\uc0c1 \uc804\uc1a1 \ud30c\uc774\ud504\ub77c\uc778 \uac1c\ubc1c\n\n## \uac1c\ubc1c \ub3d9\uae30\n\uadfc\ub798\uc758 \uc774\ubbf8\uc9c0 \ucc98\ub9acCNN \ubaa8\ub378(MobileNet \uc81c\uc678)\uc740 \ucef4\ud4e8\ud305 \uc790\uc6d0\uc744 \ub9ce\uc774 \uc694\uad6c\ud558\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ubc14\uc77c\uc774\ub098 \ub9c8\uc774\ud06c\ub85c \ub514\ubc14\uc774\uc2a4\uc5d0\uc11c \uc694\uad6c\uc2dc\uac04 \uc548\uc5d0 \uc0ac\uc6a9\ud558\uae30 \ud798\ub4e4\ub2e4.<sup>[1](#1)</sup><sup>[3](#3)</sup><sup>[4](#4)</sup> \uadf8\ub9ac\uace0 MobileNet\uc758 \uacbd\uc6b0 \uc9c0\uc5f0\uc728\uc774 \ub0ae\uc9c0\ub9cc \ub2e4\ub978 \ubaa8\ub378\ubcf4\ub2e4 \uc815\ud655\ub3c4\uac00 \ub0ae\ub2e4.<sup>[2](#2)</sup><sup>[3](#3)</sup> \uacb0\uad6d \uace0\ud488\uc9c8\uc758 \uc815\ud655\ub3c4\uc640 \uc9e7\uc740 \ucc98\ub9ac\uc2dc\uac04\uc744 \ubaa8\ub450 \uc5bb\uae30 \uc704\ud574\uc120 \uc11c\ubc84\uc5d0 \uc601\uc0c1\uc744 \uc804\uc1a1\ud558\uc5ec \ucc98\ub9ac\ud55c \ud6c4 \ubc1b\uc544\uc640\uc57c \ud558\ubbc0\ub85c, \ub2e8\ub9d0\uc5d0\uc11c \uc11c\ubc84\uc5d0 \uc2e4\uc2dc\uac04\uc73c\ub85c \ube60\ub974\uac8c \uc601\uc0c1\uc744 \uc804\uc1a1\ud558\ub294 \ud504\ub808\uc784\uc6cc\ud06c\uac00 \ud544\uc694\ud558\ub2e4. \ub610\ud55c 5G\uc758 \uc800\uc9c0\uc5f0\uc728\uc744 \uc774\uc6a9\ud558\uba74 \ub2e8\ub9d0\uc5d0\uc11c \uc218\ud589\ud558\ub294 \uac83\uacfc \uc720\uc0ac\ud55c \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc744 \uac00\ub2a5\uc131\uc774 \uc788\ub2e4.\n\n## \ubaa9\ud45c\n1. \ubaa8\ubc14\uc77c\uc5d0\uc11c \ud074\ub77c\uc6b0\ub4dc \ubaa8\ub378\ub85c \uc601\uc0c1\uc744 \uc2e4\uc2dc\uac04\uc73c\ub85c \uc804\uc1a1\ud558\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc744 \uac1c\ubc1c\ud55c\ub2e4.\n2. \ube60\ub978 \ub124\ud2b8\uc6cc\ud06c(5G \ub4f1)\ub97c \uc774\uc6a9\ud574\uc11c \ud074\ub77c\uc6b0\ub4dc \uae30\ubc18 \ubaa8\ub378\uc774 \ubaa8\ubc14\uc77c \uae30\ubc18 \ubaa8\ub378(MobileNet)\ub9cc\ud07c \ube60\ub978 \uc18d\ub3c4\ub85c \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5 \ud560 \uc218 \uc788\uc74c\uc744 \uc99d\uba85\ud55c\ub2e4.\n\n## \uad6c\uc131\ub3c4\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/30094719/112486081-e9c16380-8dbe-11eb-8c36-5fb4addd8366.png\" />\n</p>\n\n## \uc8fc\uc694\uc77c\uc815\n[Notion \ub9c1\ud06c](https://www.notion.so/aff58c9b6b9e42f489443e14fd72606d)\n\n# Usage\n```\npython benchmark.py\n```\n- \ub85c\uceec\uc5d0\uc11c \uc5ec\ub7ec \ubaa8\ub378\uc744 \uc2e4\ud589\uc2dc \ud3c9\uade0 \ucd94\ub860\uc2dc\uac04\uc744 \uacc4\uc0b0 \ud560 \uc218 \uc788\ub2e4.\n- \uae30\ubcf8\uc801\uc73c\ub85c CPU\ub97c \uc0ac\uc6a9\ud558\uba70 GPU\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud658\uacbd\uc778 \uacbd\uc6b0 GPU\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5f0\uc0b0\ud55c\ub2e4.\n\n```\npython benchmark_with_streaming.py\n```\n- \uc2a4\ud2b8\ub9ac\ubc0d\uc744 \ud1b5\ud574 \uc785\ub825\ubc1b\uc740 \ubaa8\ub378\uc5d0\uc11c \uac1d\uccb4 \ud0d0\uc9c0\ub97c \uc218\ud589\ud55c\ub2e4. -> \uac1c\uc120\ub41c \ubaa8\ub378\ub85c \ucd94\uac00 \uc608\uc815\n- \uc2a4\ud2b8\ub9ac\ubc0d\uc2dc \ud504\ub808\uc784\ub2f9 \ucd94\ub860\uc2dc\uac04\uc744 \ucd9c\ub825\ud55c\ub2e4. (\ud3c9\uade0 \ucd94\ub860 \uc2dc\uac04\uc744 \uad6c\ud558\uace0 \uc2f6\ub2e4\uba74 benchmark.py\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud55c\ub2e4.)\n- \ud604\uc7ac \ub370\ubaa8 \uc601\uc0c1\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\uba70 \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\uc5d0\uc11c \uc218\uc2e0\ud558\uae30 \uc704\ud574\uc11c\ub294 VideoCapture\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \ubcc0\uacbd\ud574\uc57c\ud55c\ub2e4.\n\n\ud604\uc7ac\n```python\ncap = cv.VideoCapture('https://www.freedesktop.org/software/gstreamer-sdk/data/media/sintel_trailer-480p.webm')\n```\n\n\ubcc0\uacbd\n```python\ncap = cv.VideoCapture('udpsrc port=9777 ! application/x-rtp ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert ! appsink', cv.CAP_GSTREAMER)\n```\n- \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\uc640 \uc5f0\ub3d9\uc2dc \ub124\ud2b8\uc6cc\ud06c \uc5d0\ubbac\ub808\uc774\ud130\ub97c \ud1b5\ud574\uc11c 4G \ub610\ub294 5G\uc758 \ud658\uacbd\uc744 \uc870\uc131\ud574\uc11c \uc2e4\ud589\ud558\ub3c4\ub85d\ud55c\ub2e4.\n- \uc11c\ubc84\uc5d0\uc11c \ub2e4\uc2dc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\ub85c \uc601\uc0c1\uc744 \ubcf4\ub0b4\ub294 \uacbd\uc6b0\ub294 \uc544\uc9c1 \uad6c\ud604\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4.\n\n\n## Reference\n <a name=\"1\">1</a>. Table 1. Inference performance results from Jetson Nano, Raspberry Pi 3, Intel Neural Compute Stick 2, and Google Edge TPU Coral Dev Board, https://developer.nvidia.com/embedded/jetson-nano-dl-inference-benchmarks<br>\n <a name=\"2\">2</a>. Image Classification on ImageNet, https://paperswithcode.com/sota/image-classification-on-imagenet<br>\n <a name=\"3\">3</a>. Andrew G. Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko, Weijun Wang, Tobias Weyand, Marco Andreetto, Hartwig Adam, _MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications_, https://arxiv.org/abs/1704.04861<br>\n <a name=\"4\">4</a>. Andrey Ignatov, Radu Timofte, William Chou, Ke Wang, Max Wu, Tim Hartley, Luc Van Gool, _AI Benchmark: Running Deep Neural Networks\non Android Smartphones_ , https://arxiv.org/pdf/1810.01109.pdf\n",
            "readme_url": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline",
            "frameworks": [
                "Caffe",
                "TensorFlow",
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "AI Benchmark: Running Deep Neural Networks on Android Smartphones",
            "arxiv": "1810.01109",
            "year": 2018,
            "url": "http://arxiv.org/abs/1810.01109v2",
            "abstract": "Over the last years, the computational power of mobile devices such as\nsmartphones and tablets has grown dramatically, reaching the level of desktop\ncomputers available not long ago. While standard smartphone apps are no longer\na problem for them, there is still a group of tasks that can easily challenge\neven high-end devices, namely running artificial intelligence algorithms. In\nthis paper, we present a study of the current state of deep learning in the\nAndroid ecosystem and describe available frameworks, programming models and the\nlimitations of running AI on smartphones. We give an overview of the hardware\nacceleration resources available on four main mobile chipset platforms:\nQualcomm, HiSilicon, MediaTek and Samsung. Additionally, we present the\nreal-world performance results of different mobile SoCs collected with AI\nBenchmark that are covering all main existing hardware configurations.",
            "authors": [
                "Andrey Ignatov",
                "Radu Timofte",
                "William Chou",
                "Ke Wang",
                "Max Wu",
                "Tim Hartley",
                "Luc Van Gool"
            ]
        },
        {
            "title": "MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications",
            "arxiv": "1704.04861",
            "year": 2017,
            "url": "http://arxiv.org/abs/1704.04861v1",
            "abstract": "We present a class of efficient models called MobileNets for mobile and\nembedded vision applications. MobileNets are based on a streamlined\narchitecture that uses depth-wise separable convolutions to build light weight\ndeep neural networks. We introduce two simple global hyper-parameters that\nefficiently trade off between latency and accuracy. These hyper-parameters\nallow the model builder to choose the right sized model for their application\nbased on the constraints of the problem. We present extensive experiments on\nresource and accuracy tradeoffs and show strong performance compared to other\npopular models on ImageNet classification. We then demonstrate the\neffectiveness of MobileNets across a wide range of applications and use cases\nincluding object detection, finegrain classification, face attributes and large\nscale geo-localization.",
            "authors": [
                "Andrew G. Howard",
                "Menglong Zhu",
                "Bo Chen",
                "Dmitry Kalenichenko",
                "Weijun Wang",
                "Tobias Weyand",
                "Marco Andreetto",
                "Hartwig Adam"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "ImageNet"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.8944022416506028,
        "task": "Image Classification",
        "task_prob": 0.9717708247085532
    }
}