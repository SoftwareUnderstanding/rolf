{
    "visibility": {
        "visibility": "public",
        "license": "BSD 3-Clause \"New\" or \"Revised\" License"
    },
    "name": "CornerNet-Lite: Training, Evaluation and Testing Code",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "takooctopus",
                "owner_type": "User",
                "name": "CornerNet-Lite-Tako",
                "url": "https://github.com/takooctopus/CornerNet-Lite-Tako",
                "stars": 11,
                "pushed_at": "2019-05-28 02:26:57+00:00",
                "created_at": "2019-04-30 04:06:24+00:00",
                "language": "Python",
                "description": "CornerNet-Lite\u7684\u6279\u6ce8\u4e0e\u5b66\u4e60",
                "license": "BSD 3-Clause \"New\" or \"Revised\" License",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "c1ba535c9d1e523c14776c3e8158e579212d6d07",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/.gitignore"
                    }
                },
                "size": 151
            },
            {
                "type": "code",
                "name": ".idea",
                "sha": "4d02f58742c5092e161f5b4a07899957f17a7a42",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/tree/master/.idea"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "9f3e4eb4b3138f80687af18ff3dacfa20ca37634",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/LICENSE"
                    }
                },
                "size": 1520
            },
            {
                "type": "code",
                "name": "__init__.py",
                "sha": "dd957ac5b071f5150dcf391f3e0ee4ff1b0bf82f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/__init__.py"
                    }
                },
                "size": 116
            },
            {
                "type": "code",
                "name": "conda_packagelist.txt",
                "sha": "346f63bdc75bae90f87c37db491689095858f5f6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/conda_packagelist.txt"
                    }
                },
                "size": 2099
            },
            {
                "type": "code",
                "name": "configs",
                "sha": "0507d9a58f795c97bb1163d94b4e9cb3ce3853d2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/tree/master/configs"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "core",
                "sha": "1ab98649a686af62d8075443c2f3c4d3ac9a5903",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/tree/master/core"
                    }
                },
                "num_files": 13
            },
            {
                "type": "code",
                "name": "demo.py",
                "sha": "0b8b0c1114d8847b2e380020e31e4a4117e9d8bd",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/demo.py"
                    }
                },
                "size": 1087
            },
            {
                "type": "code",
                "name": "demo_out.PNG",
                "sha": "1ef7a37101de9661921713062f042340f75184a7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/demo_out.PNG"
                    }
                },
                "size": 712417
            },
            {
                "type": "code",
                "name": "evaluate.py",
                "sha": "6cc9bdc9381ebbc283b515bcb644519b98ea94b9",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/evaluate.py"
                    }
                },
                "size": 3706
            },
            {
                "type": "code",
                "name": "evaluatedagm.py",
                "sha": "3839d6c92dafc4169c7847465321df44af365031",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/evaluatedagm.py"
                    }
                },
                "size": 4871
            },
            {
                "type": "code",
                "name": "tako.log",
                "sha": "b349b7b2a04b6249a2cf90fa667d5cc19dde421b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/tako.log"
                    }
                },
                "size": 1256307
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "202d2693443cc899f851f5185236dc3c67283044",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/train.py"
                    }
                },
                "size": 10399
            },
            {
                "type": "code",
                "name": "traindagm.py",
                "sha": "798fd384b865109a4344c56f290a22ea45eb14a3",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/takooctopus/CornerNet-Lite-Tako/blob/master/traindagm.py"
                    }
                },
                "size": 11088
            }
        ]
    },
    "authors": [
        {
            "name": "Yue Zhang",
            "email": "takooctopus@hotmail.com",
            "github_id": "takooctopus"
        },
        {
            "name": "Hei Law",
            "email": "heilaw@cs.princeton.edu",
            "github_id": "heilaw"
        }
    ],
    "tags": [],
    "description": "CornerNet-Lite\u7684\u6279\u6ce8\u4e0e\u5b66\u4e60",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/takooctopus/CornerNet-Lite-Tako",
            "stars": 11,
            "issues": true,
            "readme": "# CornerNet-Lite: Training, Evaluation and Testing Code\nCode for reproducing results in the following paper:\n\n[**CornerNet-Lite: Efficient Keypoint Based Object Detection**](https://arxiv.org/abs/1904.08900)  \nHei Law, Yun Teng, Olga Russakovsky, Jia Deng  \n*arXiv:1904.08900* \n\n## Getting Started\n### Software Requirement\n- Python 3.7\n- PyTorch 1.0.0\n- CUDA 10\n- GCC 4.9.2 or above\n\n### Installing Dependencies\nPlease first install [Anaconda](https://anaconda.org) and create an Anaconda environment using the provided package list `conda_packagelist.txt`.\n```\nconda create --name CornerNet_Lite --file conda_packagelist.txt --channel pytorch\n```\n\nAfter you create the environment, please activate it.\n```\nsource activate CornerNet_Lite\n```\n\n### Compiling Corner Pooling Layers\nCompile the C++ implementation of the corner pooling layers. (GCC4.9.2 or above is required.)\n```\ncd <CornerNet-Lite dir>/core/models/py_utils/_cpools/\npython setup.py install --user\n```\n\n### Compiling NMS\nCompile the NMS code which are originally from [Faster R-CNN](https://github.com/rbgirshick/py-faster-rcnn/blob/master/lib/nms/cpu_nms.pyx) and [Soft-NMS](https://github.com/bharatsingh430/soft-nms/blob/master/lib/nms/cpu_nms.pyx).\n```\ncd <CornerNet-Lite dir>/core/external\nmake\n```\n\n### Downloading Models\nIn this repo, we provide models for the following detectors:\n- [CornerNet-Saccade](https://drive.google.com/file/d/1MQDyPRI0HgDHxHToudHqQ-2m8TVBciaa/view?usp=sharing)\n- [CornerNet-Squeeze](https://drive.google.com/file/d/1qM8BBYCLUBcZx_UmLT0qMXNTh-Yshp4X/view?usp=sharing)\n- [CornerNet](https://drive.google.com/file/d/1e8At_iZWyXQgLlMwHkB83kN-AN85Uff1/view?usp=sharing)\n\nPut the CornerNet-Saccade model under `<CornerNet-Lite dir>/cache/nnet/CornerNet_Saccade/`, CornerNet-Squeeze model under `<CornerNet-Lite dir>/cache/nnet/CornerNet_Squeeze/` and CornerNet model under `<CornerNet-Lite dir>/cache/nnet/CornerNet/`. (\\* Note we use underscore instead of dash in both the directory names for CornerNet-Saccade and CornerNet-Squeeze.)\n\nNote: The CornerNet model is the same as the one in the original [CornerNet repo](https://github.com/princeton-vl/CornerNet). We just ported it to this new repo.\n\n### Running the Demo Script\nAfter downloading the models, you should be able to use the detectors on your own images. We provide a demo script `demo.py` to test if the repo is installed correctly.\n```\npython demo.py\n```\nThis script applies CornerNet-Saccade to `demo.jpg` and writes the results to `demo_out.jpg`.\n\nIn the demo script, the default detector is CornerNet-Saccade. You can modify the demo script to test different detectors. For example, if you want to test CornerNet-Squeeze:\n```python\n#!/usr/bin/env python\n\nimport cv2\nfrom core.detectors import CornerNet_Squeeze\nfrom core.vis_utils import draw_bboxes\n\ndetector = CornerNet_Squeeze()\nimage    = cv2.imread(\"demo.jpg\")\n\nbboxes = detector(image)\nimage  = draw_bboxes(image, bboxes)\ncv2.imwrite(\"demo_out.jpg\", image)\n```\n\n### Using CornerNet-Lite in Your Project\nIt is also easy to use CornerNet-Lite in your project. You will need to change the directory name from `CornerNet-Lite` to `CornerNet_Lite`. Otherwise, you won't be able to import CornerNet-Lite.\n```\nYour project\n\u2502   README.md\n\u2502   ...\n\u2502   foo.py\n\u2502\n\u2514\u2500\u2500\u2500CornerNet_Lite\n\u2502\n\u2514\u2500\u2500\u2500directory1\n\u2502   \n\u2514\u2500\u2500\u2500...\n```\n\nIn `foo.py`, you can easily import CornerNet-Saccade by adding:\n```python\nfrom CornerNet_Lite import CornerNet_Saccade\n\ndef foo():\n    cornernet = CornerNet_Saccade()\n    # CornerNet_Saccade is ready to use\n\n    image  = cv2.imread('/path/to/your/image')\n    bboxes = cornernet(image)\n```\n\nIf you want to train or evaluate the detectors on COCO, please move on to the following steps.\n\n## Training and Evaluation\n\n### Installing MS COCO APIs\n```\nmkdir -p <CornerNet-Lite dir>/data\ncd <CornerNet-Lite dir>/data\ngit clone git@github.com:cocodataset/cocoapi.git coco\ncd <CornerNet-Lite dir>/data/coco/PythonAPI\nmake install\n```\n\n### Downloading MS COCO Data\n- Download the training/validation split we use in our paper from [here](https://drive.google.com/file/d/1dop4188xo5lXDkGtOZUzy2SHOD_COXz4/view?usp=sharing) (originally from [Faster R-CNN](https://github.com/rbgirshick/py-faster-rcnn/tree/master/data))\n- Unzip the file and place `annotations` under `<CornerNet-Lite dir>/data/coco`\n- Download the images (2014 Train, 2014 Val, 2017 Test) from [here](http://cocodataset.org/#download)\n- Create 3 directories, `trainval2014`, `minival2014` and `testdev2017`, under `<CornerNet-Lite dir>/data/coco/images/`\n- Copy the training/validation/testing images to the corresponding directories according to the annotation files\n\nTo train and evaluate a network, you will need to create a configuration file, which defines the hyperparameters, and a model file, which defines the network architecture. The configuration file should be in JSON format and placed in `<CornerNet-Lite dir>/configs/`. Each configuration file should have a corresponding model file in `<CornerNet-Lite dir>/core/models/`. i.e. If there is a `<model>.json` in `<CornerNet-Lite dir>/configs/`, there should be a `<model>.py` in `<CornerNet-Lite dir>/core/models/`. There is only one exception which we will mention later.\n\n### Training and Evaluating a Model\nTo train a model:\n```\npython train.py <model>\n```\n\nWe provide the configuration files and the model files for CornerNet-Saccade, CornerNet-Squeeze and CornerNet in this repo. Please check the configuration files in `<CornerNet-Lite dir>/configs/`.\n\nTo train CornerNet-Saccade:\n```\npython train.py CornerNet_Saccade\n```\nPlease adjust the batch size in `CornerNet_Saccade.json` to accommodate the number of GPUs that are available to you.\n\nTo evaluate the trained model:\n```\npython evaluate.py CornerNet_Saccade --testiter 500000 --split <split>\n```\n\nIf you want to test different hyperparameters during evaluation and do not want to overwrite the original configuration file, you can do so by creating a configuration file with a suffix (`<model>-<suffix>.json`). There is no need to create `<model>-<suffix>.py` in `<CornerNet-Lite dir>/core/models/`.\n\nTo use the new configuration file:\n```\npython evaluate.py <model> --testiter <iter> --split <split> --suffix <suffix>\n```\n\nWe also include a configuration file for CornerNet under multi-scale setting, which is `CornerNet-multi_scale.json`, in this repo. \n\nTo use the multi-scale configuration file:\n```\npython evaluate.py CornerNet --testiter <iter> --split <split> --suffix multi_scale\n",
            "readme_url": "https://github.com/takooctopus/CornerNet-Lite-Tako",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "CornerNet-Lite: Efficient Keypoint Based Object Detection",
            "arxiv": "1904.08900",
            "year": 2019,
            "url": "http://arxiv.org/abs/1904.08900v2",
            "abstract": "Keypoint-based methods are a relatively new paradigm in object detection,\neliminating the need for anchor boxes and offering a simplified detection\nframework. Keypoint-based CornerNet achieves state of the art accuracy among\nsingle-stage detectors. However, this accuracy comes at high processing cost.\nIn this work, we tackle the problem of efficient keypoint-based object\ndetection and introduce CornerNet-Lite. CornerNet-Lite is a combination of two\nefficient variants of CornerNet: CornerNet-Saccade, which uses an attention\nmechanism to eliminate the need for exhaustively processing all pixels of the\nimage, and CornerNet-Squeeze, which introduces a new compact backbone\narchitecture. Together these two variants address the two critical use cases in\nefficient object detection: improving efficiency without sacrificing accuracy,\nand improving accuracy at real-time efficiency. CornerNet-Saccade is suitable\nfor offline processing, improving the efficiency of CornerNet by 6.0x and the\nAP by 1.0% on COCO. CornerNet-Squeeze is suitable for real-time detection,\nimproving both the efficiency and accuracy of the popular real-time detector\nYOLOv3 (34.4% AP at 30ms for CornerNet-Squeeze compared to 33.0% AP at 39ms for\nYOLOv3 on COCO). Together these contributions for the first time reveal the\npotential of keypoint-based detection to be useful for applications requiring\nprocessing efficiency.",
            "authors": [
                "Hei Law",
                "Yun Teng",
                "Olga Russakovsky",
                "Jia Deng"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "COCO"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.99882623293984,
        "task": "Object Detection",
        "task_prob": 0.9849667916544995
    }
}