{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "R3Det: Refined Single-Stage Detector with Feature Refinement for Rotating Object",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "NovasMax",
                "owner_type": "User",
                "name": "R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO",
                "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO",
                "stars": 2,
                "pushed_at": "2020-04-24 11:54:05+00:00",
                "created_at": "2020-04-23 14:15:23+00:00",
                "language": "Python",
                "license": "MIT License",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "570a4336991945c9b91aee1277835c71983ddf4e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/.gitignore"
                    }
                },
                "size": 1439
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "dda276e8304427b9b907ea41029d1d4fd64e8a06",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/LICENSE"
                    }
                },
                "size": 1074
            },
            {
                "type": "code",
                "name": "MODEL_ZOO.md",
                "sha": "5c24d3ab1b6e9791476a36db8e34d3ce1c891d27",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/MODEL_ZOO.md"
                    }
                },
                "size": 10500
            },
            {
                "type": "code",
                "name": "data",
                "sha": "273b04e2741f3e5b249e71b04cb19b6da80050e4",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/tree/master/data"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "demo1.png",
                "sha": "d60734c66256f5c9bf67241fba84aafc5f264e86",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/demo1.png"
                    }
                },
                "size": 4949563
            },
            {
                "type": "code",
                "name": "help_utils",
                "sha": "277e3e20ed2ec11622694693c60ce9aae94a366c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/tree/master/help_utils"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "images.png",
                "sha": "870878127bbe56611acdc3a1fcf75111c8386699",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/images.png"
                    }
                },
                "size": 1150793
            },
            {
                "type": "code",
                "name": "libs",
                "sha": "4cb1a59831a4211232c5421048cdae5b292e96b4",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/tree/master/libs"
                    }
                },
                "num_files": 9
            },
            {
                "type": "code",
                "name": "output",
                "sha": "5ade3a4f4b800d18cdb106cff31de7640b83ccfc",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/tree/master/output"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "pipeline.png",
                "sha": "d21289dbaadda92546429460c507c42e696e136f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/pipeline.png"
                    }
                },
                "size": 429250
            },
            {
                "type": "code",
                "name": "scalars.png",
                "sha": "7ed531b0e2e23bb5a9f358404ce05cc674110390",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/blob/master/scalars.png"
                    }
                },
                "size": 83828
            },
            {
                "type": "code",
                "name": "tools",
                "sha": "24e5f4762d9951273116f77e74411bca3de1d511",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO/tree/master/tools"
                    }
                },
                "num_files": 8
            }
        ]
    },
    "authors": [
        {
            "name": "yangxue",
            "email": "yangxue-2019-sjtu@sjtu.edu.cn",
            "github_id": "yangxue0827"
        },
        {
            "name": "NovasMax",
            "github_id": "NovasMax"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO",
            "stars": 2,
            "issues": true,
            "readme": "# R<sup>3</sup>Det: Refined Single-Stage Detector with Feature Refinement for Rotating Object\n\n## Abstract\n[R<sup>3</sup>Det](https://arxiv.org/abs/1908.05612) is based on [Focal Loss for Dense Object Detection](https://arxiv.org/pdf/1708.02002.pdf), and it is completed by [YangXue](https://yangxue0827.github.io/).\n\n## Pipeline\n![5](pipeline.png)\n\n## Performance\nMore results and trained models are available in the [MODEL_ZOO.md](MODEL_ZOO.md).\n### DOTA1.0\n| Model |    Backbone    |    Training data    |    Val data    |    mAP   | GPU | Image/GPU | Anchor | Reg. Loss| lr schd | Data Augmentation | Configs |       \n|:------------:|:------------:|:------------:|:---------:|:-----------:|:----------:|:-----------:|:---------:|:---------:|:---------:|:---------:|:---------:|     \n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) (baseline) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 62.22 | **1X** GeForce RTX 2080 Ti | 1 | H | smooth L1 | 1x | No | cfgs_res50_dota_v4.py |     \n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) (baseline) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 62.79 | 8X GeForce RTX 2080 Ti | 1 | H | smooth L1 | **2x** | No | cfgs_res50_dota_v8.py |      \n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) (baseline) | **ResNet101_v1d** 600->800 | DOTA1.0 trainval | DOTA1.0 test | 64.19 | 1X GeForce RTX 2080 Ti | 1 | H | smooth L1 | 1x | No | cfgs_res101_dota_v9.py |   \n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) (baseline) | **ResNet152_v1d** 600->800 | DOTA1.0 trainval | DOTA1.0 test | 65.79 | 8X GeForce RTX 2080 Ti | 1 | H | smooth L1 | 2x | No | cfgs_res152_dota_v12.py |\n|  |  |  |  |  |  |  |  |  |  |  |  |  |\n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) (baseline) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 61.94 | 1X GeForce RTX 2080 Ti | 1 | R | smooth L1 | 1x | No | cfgs_res50_dota_v1.py |\n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) (baseline) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 62.25 | **8X** GeForce RTX 2080 Ti | 1 | R | smooth L1 | **2x** | No | cfgs_res50_dota_v10.py |\n| [RetinaNet](https://github.com/DetectionTeamUCAS/RetinaNet_Tensorflow_Rotation) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 68.65 | 1X GeForce RTX 2080 Ti | 1 | R | [**iou-smooth L1**](https://arxiv.org/abs/1811.07126) | 1x | No | cfgs_res50_dota_v5.py |    \n|  |  |  |  |  |  |  |  |  |  |  |  |  |\n| [R<sup>3</sup>Det](https://arxiv.org/abs/1908.05612) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 65.73 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | 2x | No | cfgs_res50_dota_r3det_v1.py |\n| [R<sup>3</sup>Det*](https://arxiv.org/abs/1908.05612) | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 67.20 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | 2x | No | cfgs_res50_dota_r3det_v2.py |\n| [R<sup>3</sup>Det](https://arxiv.org/abs/1908.05612) | **ResNet101_v1d** 600->800 | DOTA1.0 trainval | DOTA1.0 test | 71.69 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | 3x | Yes | - |\n| [R<sup>3</sup>Det](https://arxiv.org/abs/1908.05612) | **ResNet152_v1d** 600->800 | DOTA1.0 trainval | DOTA1.0 test | 72.81 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | **4x** | Yes | - |\n| [R<sup>3</sup>Det*](https://arxiv.org/abs/1908.05612) | **ResNet152_v1d** 600->800 | DOTA1.0 trainval | DOTA1.0 test | 73.74 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | **4x** | Yes | - |\n|  |  |  |  |  |  |  |  |  |  |  |  |  |\n| **R<sup>3</sup>Det++** | ResNet50_v1d 600->800 | DOTA1.0 trainval | DOTA1.0 test | 69.07 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | 2x | No | cfgs_res50_dota_r3det_plusplus_v2.py |\n| R<sup>3</sup>Det++ | **ResNet152_v1d** 600->800 | DOTA1.0 trainval | DOTA1.0 test | 74.41 | 8X GeForce RTX 2080 Ti | 1 | H + R | smooth L1 | 4x | Yes | - |\n| R<sup>3</sup>Det++ | ResNet152_v1d **MS** | DOTA1.0 trainval | DOTA1.0 test | 76.56 | 4X GeForce RTX 2080 Ti | 1 | H + R + more | smooth L1 | 6x | Yes | cfgs_res152_dota_r3det_plusplus_v1.py |\n\n[R<sup>3</sup>Det*](https://arxiv.org/abs/1908.05612): R<sup>3</sup>Det with two refinement stages\n**The performance of all models comes from the source [paper](https://arxiv.org/abs/1908.05612).**       \n\n### Visualization\n![1](demo1.png)\n\n## My Development Environment\n**docker images: docker pull yangxue2docker/yx-tf-det:tensorflow1.13.1-cuda10-gpu-py3**      \n1\u3001python3.5 (anaconda recommend)               \n2\u3001cuda 10.0                     \n3\u3001[opencv(cv2)](https://pypi.org/project/opencv-python/)       \n4\u3001[tfplot 0.2.0](https://github.com/wookayin/tensorflow-plot) (optional)            \n5\u3001tensorflow-gpu 1.13                              \n\n## Download Model\n### Pretrain weights\n1\u3001Please download [resnet50_v1](http://download.tensorflow.org/models/resnet_v1_50_2016_08_28.tar.gz), [resnet101_v1](http://download.tensorflow.org/models/resnet_v1_101_2016_08_28.tar.gz) pre-trained models on Imagenet, put it to data/pretrained_weights.       \n2\u3001**(Recommend in this repo)** Or you can choose to use a better backbone, refer to [gluon2TF](https://github.com/yangJirui/gluon2TF).    \n* [Baidu Drive](https://pan.baidu.com/s/1GpqKg0dOaaWmwshvv1qWGg), password: 5ht9.          \n* [Google Drive](https://drive.google.com/drive/folders/1BM8ffn1WnsRRb5RcuAcyJAHX8NS2M1Gz?usp=sharing)      \n\n## Compile\n```\n\n!pip install tensorflow==1.13.2 #If Tensorflow.contrib not available\n\ncd /content/drive/My Drive/R3det/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO-master/libs/box_utils/cython_utils\n!python3 setup.py build_ext --inplace\n\ncd /content/drive/My Drive/R3det/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO-master/libs/box_utils\n!python3 setup.py build_ext --inplace\n```\n\n## Train\n\n1\u3001If you want to train your own data, please note:  \n```     \n(1) Modify parameters (such as CLASS_NUM, DATASET_NAME, VERSION, etc.) in $PATH_ROOT/libs/configs/cfgs.py\n(2) Add category information in $PATH_ROOT/libs/label_name_dict/lable_dict.py     \n(3) Add data_name to $PATH_ROOT/data/io/read_tfrecord_multi_gpu.py  \n```     \n\n2\u3001Make tfrecord     \nFor DOTA dataset:      \n```  \ncd $PATH_ROOT\\data\\io\\DOTA\npython data_crop.py\n```  \n\n```  \ncd $PATH_ROOT/data/io/  \npython convert_data_to_tfrecord.py --VOC_dir='/PATH/TO/DOTA/' \n                                   --xml_dir='labeltxt'\n                                   --image_dir='images'\n                                   --save_name='train' \n                                   --img_format='.png' \n                                   --dataset='DOTA'\n```      \n\n3\u3001Multi-gpu train\n```  \ncd $PATH_ROOT/tools\npython multi_gpu_train_r3det.py\n```\n\n## Eval\n```  \ncd /content/drive/My Drive/R3det/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO-master/tools\n!python3 test_dota_r3det.py --test_dir='/content/drive/My Drive/R3det/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO-master/Images'  --gpus=0,1,2,3,4,5,6,7          \n``` \n\n## Tensorboard\n```  \ncd $PATH_ROOT/output/summary\ntensorboard --logdir=.\n``` \n\n![3](images.png)\n\n![4](scalars.png)\n\n## Citation\n\nIf this is useful for your research, please consider cite.\n\n```\n@article{yang2019r3det,\n    title={R3Det: Refined Single-Stage Detector with Feature Refinement for Rotating Object},\n    author={Yang, Xue and Liu, Qingqing and Yan, Junchi and Li, Ang and Zhang, Zhiqiang and Yu, Gang},\n    journal={arXiv preprint arXiv:1908.05612},\n    year={2019}\n}\n\n@inproceedings{xia2018dota,\n    title={DOTA: A large-scale dataset for object detection in aerial images},\n    author={Xia, Gui-Song and Bai, Xiang and Ding, Jian and Zhu, Zhen and Belongie, Serge and Luo, Jiebo and Datcu, Mihai and Pelillo, Marcello and Zhang, Liangpei},\n    booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n    pages={3974--3983},\n    year={2018}\n}\n\n```\n\n## Reference\n1\u3001https://github.com/endernewton/tf-faster-rcnn   \n2\u3001https://github.com/zengarden/light_head_rcnn   \n3\u3001https://github.com/tensorflow/models/tree/master/research/object_detection    \n4\u3001https://github.com/fizyr/keras-retinanet     \n\n\n",
            "readme_url": "https://github.com/NovasMax/R3Det-Refined-Single-Stage-Detector-with-Feature-Refinement-for-RO",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Focal Loss for Dense Object Detection",
            "arxiv": "1708.02002",
            "year": 2017,
            "url": "http://arxiv.org/abs/1708.02002v2",
            "abstract": "The highest accuracy object detectors to date are based on a two-stage\napproach popularized by R-CNN, where a classifier is applied to a sparse set of\ncandidate object locations. In contrast, one-stage detectors that are applied\nover a regular, dense sampling of possible object locations have the potential\nto be faster and simpler, but have trailed the accuracy of two-stage detectors\nthus far. In this paper, we investigate why this is the case. We discover that\nthe extreme foreground-background class imbalance encountered during training\nof dense detectors is the central cause. We propose to address this class\nimbalance by reshaping the standard cross entropy loss such that it\ndown-weights the loss assigned to well-classified examples. Our novel Focal\nLoss focuses training on a sparse set of hard examples and prevents the vast\nnumber of easy negatives from overwhelming the detector during training. To\nevaluate the effectiveness of our loss, we design and train a simple dense\ndetector we call RetinaNet. Our results show that when trained with the focal\nloss, RetinaNet is able to match the speed of previous one-stage detectors\nwhile surpassing the accuracy of all existing state-of-the-art two-stage\ndetectors. Code is at: https://github.com/facebookresearch/Detectron.",
            "authors": [
                "Tsung-Yi Lin",
                "Priya Goyal",
                "Ross Girshick",
                "Kaiming He",
                "Piotr Doll\u00e1r"
            ]
        },
        {
            "title": "R3Det: Refined Single-Stage Detector with Feature Refinement for Rotating Object",
            "arxiv": "1908.05612",
            "year": 2019,
            "url": "http://arxiv.org/abs/1908.05612v6",
            "abstract": "Rotation detection is a challenging task due to the difficulties of locating\nthe multi-angle objects and separating them effectively from the background.\nThough considerable progress has been made, for practical settings, there still\nexist challenges for rotating objects with large aspect ratio, dense\ndistribution and category extremely imbalance. In this paper, we propose an\nend-to-end refined single-stage rotation detector for fast and accurate object\ndetection by using a progressive regression approach from coarse to fine\ngranularity. Considering the shortcoming of feature misalignment in existing\nrefined single-stage detector, we design a feature refinement module to improve\ndetection performance by getting more accurate features. The key idea of\nfeature refinement module is to re-encode the position information of the\ncurrent refined bounding box to the corresponding feature points through\npixel-wise feature interpolation to realize feature reconstruction and\nalignment. For more accurate rotation estimation, an approximate SkewIoU loss\nis proposed to solve the problem that the calculation of SkewIoU is not\nderivable. Experiments on three popular remote sensing public datasets DOTA,\nHRSC2016, UCAS-AOD as well as one scene text dataset ICDAR2015 show the\neffectiveness of our approach. Tensorflow and Pytorch version codes are\navailable at https://github.com/Thinklab-SJTU/R3Det_Tensorflow and\nhttps://github.com/SJTU-Thinklab-Det/r3det-on-mmdetection, and R3Det is also\nintegrated in our open source rotation detection benchmark:\nhttps://github.com/yangxue0827/RotationDetection.",
            "authors": [
                "Xue Yang",
                "Junchi Yan",
                "Ziming Feng",
                "Tao He"
            ]
        },
        {
            "title": "SCRDet: Towards More Robust Detection for Small, Cluttered and Rotated Objects",
            "arxiv": "1811.07126",
            "year": 2018,
            "url": "http://arxiv.org/abs/1811.07126v4",
            "abstract": "Object detection has been a building block in computer vision. Though\nconsiderable progress has been made, there still exist challenges for objects\nwith small size, arbitrary direction, and dense distribution. Apart from\nnatural images, such issues are especially pronounced for aerial images of\ngreat importance. This paper presents a novel multi-category rotation detector\nfor small, cluttered and rotated objects, namely SCRDet. Specifically, a\nsampling fusion network is devised which fuses multi-layer feature with\neffective anchor sampling, to improve the sensitivity to small objects.\nMeanwhile, the supervised pixel attention network and the channel attention\nnetwork are jointly explored for small and cluttered object detection by\nsuppressing the noise and highlighting the objects feature. For more accurate\nrotation estimation, the IoU constant factor is added to the smooth L1 loss to\naddress the boundary problem for the rotating bounding box. Extensive\nexperiments on two remote sensing public datasets DOTA, NWPU VHR-10 as well as\nnatural image datasets COCO, VOC2007 and scene text data ICDAR2015 show the\nstate-of-the-art performance of our detector. The code and models will be\navailable at https://github.com/DetectionTeamUCAS.",
            "authors": [
                "Xue Yang",
                "Jirui Yang",
                "Junchi Yan",
                "Yue Zhang",
                "Tengfei Zhang",
                "Zhi Guo",
                "Sun Xian",
                "Kun Fu"
            ]
        },
        {
            "year": "2018",
            "pages": "3974--3983",
            "booktitle": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition",
            "author": [
                "Xia, Gui-Song",
                "Bai, Xiang",
                "Ding, Jian",
                "Zhu, Zhen",
                "Belongie, Serge",
                "Luo, Jiebo",
                "Datcu, Mihai",
                "Pelillo, Marcello",
                "Zhang, Liangpei"
            ],
            "title": "DOTA: A large-scale dataset for object detection in aerial images",
            "ENTRYTYPE": "inproceedings",
            "ID": "xia2018dota",
            "authors": [
                "Xia, Gui-Song",
                "Bai, Xiang",
                "Ding, Jian",
                "Zhu, Zhen",
                "Belongie, Serge",
                "Luo, Jiebo",
                "Datcu, Mihai",
                "Pelillo, Marcello",
                "Zhang, Liangpei"
            ]
        },
        {
            "title": "Baidu Drive",
            "url": "https://pan.baidu.com/s/1GpqKg0dOaaWmwshvv1qWGg"
        },
        {
            "title": "Google Drive",
            "url": "https://drive.google.com/drive/folders/1BM8ffn1WnsRRb5RcuAcyJAHX8NS2M1Gz?usp=sharing"
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "ImageNet"
            },
            {
                "name": "COCO"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9975116783027264,
        "task": "Object Detection",
        "task_prob": 0.9609568845963552
    }
}