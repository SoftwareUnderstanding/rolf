{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "GAN-for-Cryo-EM-image-denoising",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "cianfrocco-lab",
                "owner_type": "Organization",
                "name": "GAN-for-Cryo-EM-image-denoising",
                "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising",
                "stars": 8,
                "pushed_at": "2018-10-11 21:59:02+00:00",
                "created_at": "2018-10-11 21:22:55+00:00",
                "language": "Python",
                "description": "Proof-of-principle studies with conditional generative adversarial networks to denoise Cryo-EM images",
                "license": "MIT License",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "894a44cc066a027465cd26d634948d56d13af9af",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/.gitignore"
                    }
                },
                "size": 1203
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "486074ace8fa42d210dc6fa0f44c29d4ab94dc1a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/LICENSE"
                    }
                },
                "size": 1071
            },
            {
                "type": "code",
                "name": "config.py",
                "sha": "7b77102ffc465c604aa8bbf889568923b6f6343a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/config.py"
                    }
                },
                "size": 725
            },
            {
                "type": "code",
                "name": "data.py",
                "sha": "e51bba223366a23d9c13231d86caf5c066909742",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/data.py"
                    }
                },
                "size": 1062
            },
            {
                "type": "code",
                "name": "imgs",
                "sha": "8db6b92918e2830f11f7c1bd32b6d4fe35e939a2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/tree/master/imgs"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "model.py",
                "sha": "fbe8735705f2915f3b5d0ebfa660b4df3721db2a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/model.py"
                    }
                },
                "size": 6217
            },
            {
                "type": "code",
                "name": "test.py",
                "sha": "275ab679362811bb05467c33961c00b3f61f24ba",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/test.py"
                    }
                },
                "size": 1830
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "aa17142c4c95045061ddbe80e38ed817f8c82bb9",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/train.py"
                    }
                },
                "size": 3209
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "07b5676e950af2229476defdec9c043f2c503446",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/utils.py"
                    }
                },
                "size": 2900
            }
        ]
    },
    "authors": [
        {
            "name": "Zhenyu Tan",
            "github_id": "ZhenyuTan"
        }
    ],
    "tags": [],
    "description": "Proof-of-principle studies with conditional generative adversarial networks to denoise Cryo-EM images",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising",
            "stars": 8,
            "issues": true,
            "readme": "# GAN-for-Cryo-EM-image-denoising\nProof-of-principle studies with conditional generative adversarial networks to denoise Cryo-EM images. This project is the implementation of the Paper \"Generative adversarial networks as a tool to recover structural information from cryo-electron microscopy data\"(https://www.biorxiv.org/content/biorxiv/early/2018/02/12/256792.full.pdf) on python.\n# Network Architecture\nSimilar to the https://github.com/SpaceML/GalaxyGAN and pix2pix(https://github.com/phillipi/pix2pix) with some modifications. \n![image](https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/imgs/Figure1_v2.png)\nEach encode and decode is a residual block\n# Loss function \nGAN loss + L1 loss (similar to the loss used in pix2pix in https://arxiv.org/pdf/1611.07004.pdf ) \n# Dependencies\n*Tensorflow1.6 CUDA 9.0 CuDNN 7.0 Anaconda\n# Training \npython train.py \n(you need to modify the path in the config.py)\n# Testing \npython test.py\n# Results on the real data\n![image](https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/imgs/Figure2.png)\nthe ground truth is the projection of the EM density map by Relion, the input particle is the corresponding particle with the same orientation. The FSC curve between the recovered image and the ground truth projection showed high correlation score for the low frequency information which below 25 \u00c5, indicating that cGAN can effectively recover low resolution features. \n# Results on synthetic data\n![image](https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising/blob/master/imgs/Figure5.png)\nWe use the GAN to try to help us pick the small particles such as the kinesin on the MT\n\n\n\n      \n",
            "readme_url": "https://github.com/cianfrocco-lab/GAN-for-Cryo-EM-image-denoising",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Image-to-Image Translation with Conditional Adversarial Networks",
            "arxiv": "1611.07004",
            "year": 2016,
            "url": "http://arxiv.org/abs/1611.07004v3",
            "abstract": "We investigate conditional adversarial networks as a general-purpose solution\nto image-to-image translation problems. These networks not only learn the\nmapping from input image to output image, but also learn a loss function to\ntrain this mapping. This makes it possible to apply the same generic approach\nto problems that traditionally would require very different loss formulations.\nWe demonstrate that this approach is effective at synthesizing photos from\nlabel maps, reconstructing objects from edge maps, and colorizing images, among\nother tasks. Indeed, since the release of the pix2pix software associated with\nthis paper, a large number of internet users (many of them artists) have posted\ntheir own experiments with our system, further demonstrating its wide\napplicability and ease of adoption without the need for parameter tweaking. As\na community, we no longer hand-engineer our mapping functions, and this work\nsuggests we can achieve reasonable results without hand-engineering our loss\nfunctions either.",
            "authors": [
                "Phillip Isola",
                "Jun-Yan Zhu",
                "Tinghui Zhou",
                "Alexei A. Efros"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999328118505117,
        "task": "Image-to-Image Translation",
        "task_prob": 0.9887174078079429
    }
}