{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "This is a Music Generation Implementation using WaveNet",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "Gal1eo",
                "owner_type": "User",
                "name": "DT2119",
                "url": "https://github.com/Gal1eo/DT2119",
                "stars": 1,
                "pushed_at": "2019-06-07 13:36:24+00:00",
                "created_at": "2019-05-15 13:53:24+00:00",
                "language": "Python",
                "license": "MIT License",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "d190a62669df308c27832ab1df0efa8431fd4f03",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/LICENSE"
                    }
                },
                "size": 1063
            },
            {
                "type": "code",
                "name": "Onehot.py",
                "sha": "dfaf79676f05526f5e00bc5852ed03cbb45566e7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/Onehot.py"
                    }
                },
                "size": 1558
            },
            {
                "type": "code",
                "name": "WaveNet.py",
                "sha": "e8ab8cba16ed37d11738d2374653311e630b40de",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/WaveNet.py"
                    }
                },
                "size": 6671
            },
            {
                "type": "code",
                "name": "checkpoints",
                "sha": "19589a047331465a4297a29d371ad3bd4845daf7",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/tree/master/checkpoints"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "config.json",
                "sha": "156c233c851fdf866a29750c7d3bcff538300a93",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/config.json"
                    }
                },
                "size": 1001
            },
            {
                "type": "code",
                "name": "data.wav",
                "sha": "fc5b4f1215430c09b25d88c7f14aa1ee26f7a0c9",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/data.wav"
                    }
                },
                "size": 705644
            },
            {
                "type": "code",
                "name": "data16000.wav",
                "sha": "cabc35344c920a6ce3e12ec9c0f64b1486d55d9e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/data16000.wav"
                    }
                },
                "size": 1920044
            },
            {
                "type": "code",
                "name": "dataset",
                "sha": "5d6895fe2d9a9cb9d6350086bfe4b21749dc62a2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/tree/master/dataset"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "load.py",
                "sha": "46901bbda713de605d21c988844eeda1be6a05fe",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/load.py"
                    }
                },
                "size": 81
            },
            {
                "type": "code",
                "name": "maestro-v1.0.0.csv",
                "sha": "ad3fd70eb68bc3dc2f11c5602697a967bc6821bf",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/maestro-v1.0.0.csv"
                    }
                },
                "size": 278382
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "b0aaf1d09dcff9a5cc8bda5dcd8ae7fe9e97d586",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/train.py"
                    }
                },
                "size": 6127
            },
            {
                "type": "code",
                "name": "trained_on_Bach_sampled_on_Mozart.wav",
                "sha": "96aea280305f4d2b54c81a04116bd9e4103da91e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/trained_on_Bach_sampled_on_Mozart.wav"
                    }
                },
                "size": 882044
            },
            {
                "type": "code",
                "name": "trained_on_Mozart_sampled_on_bach.wav",
                "sha": "5704e887640c04d18512aa82eb646fdb6fbf8f96",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/trained_on_Mozart_sampled_on_bach.wav"
                    }
                },
                "size": 882044
            },
            {
                "type": "code",
                "name": "trained_on_Mozart_sampled_on_bach_2000.wav",
                "sha": "a9aa43d19c59fccf85efbf4acb07d3e140bbd9fd",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/trained_on_Mozart_sampled_on_bach_2000.wav"
                    }
                },
                "size": 400044
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "3e1ceb639f3fab305b8ada661af5c6286eee0f33",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/utils.py"
                    }
                },
                "size": 1473
            },
            {
                "type": "code",
                "name": "wrong",
                "sha": "d6663e2d0533a5b343b7569f888de4f89f2f2a4d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Gal1eo/DT2119/blob/master/wrong"
                    }
                },
                "size": 131
            }
        ]
    },
    "authors": [
        {
            "name": "Gal1eo",
            "github_id": "Gal1eo"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/Gal1eo/DT2119",
            "stars": 1,
            "issues": true,
            "readme": "# This is a Music Generation Implementation using WaveNet\n\nThis repository contains unconditinal WaveNet structure from:\n\n-WaveNet: A Generative Model for Raw Audio[https://arxiv.org/abs/1609.03499]\n\nThe dataset is from:\n\n-The MAESTRO Dataset V1.0.0[https://magenta.tensorflow.org/datasets/maestro#dataset] which stands for MIDI and Audio Edited for Synchronous TRacks and Organization.\n\n## Content\n\n| Section | Description |\n|-|-|\n| [Theory](#Theory) | Basic Theory |\n| [Requirements](#Requirements) | How to install the required package |\n| [Usage](#Usage) | Quickstart examples |\n| [GPU](#GPU) | GPU requirement and memory |\n\n\n## Theory\n\n### The Dilated Convolution\n\nThe dilated convolution is seen as below:\n![Dilated Convolution](https://drive.google.com/uc?export=view&id=1-hDX23TzHGA270vqnSuBVbEMjPbqQfAE)\n\n### The Music WaveNet\n\nThe network architecture is seen below:\n![Music WaveNet Train](https://drive.google.com/uc?export=view&id=1QKjEvd4HHBTQVHgORhLhcYho4hGvBDau)\n\n![Music WaveNet Generate](https://drive.google.com/uc?export=view&id=1AOXf4xBtR8yWU5rxJ0kxA9RNC6HeAE5q)\n\n### Reduced Version\nIn order to decrease the complexity of computation, we change the settings as follows:\n\nTotal layers: 8\nresidual channels: 32\nskip channels: 128\nmax dilation: 128\n\n## Requirements\n\nThis repo was tested on Python 3.7.3 with PyTorch 1.1 and Scipy 1.3.0\n\n### Installation\n\nPyTorch can be installed by conda as follows:\n```bash\nconda install pytorch torchvision cudatoolkit=9.0 -c pytorch\n```\nScipy can be installed by conda as follows:\n```bash\nconda install -c anaconda scipy\n```\n\n## Usage\n\nIf you want to reproduce the results music reconstruction, you can run the command:\n```bash\npython train.py\n```\nIf you want to train on different dataset, you should change the config.json file and train_files.txt\n\n## GPU\n\nIf you want to reproduce our results with the defult settings, you need a GPU with more than 10GB memory. Otherwise you need to decrease the number of layers.\n\n\n\n\n\n",
            "readme_url": "https://github.com/Gal1eo/DT2119",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "WaveNet: A Generative Model for Raw Audio",
            "arxiv": "1609.03499",
            "year": 2016,
            "url": "http://arxiv.org/abs/1609.03499v2",
            "abstract": "This paper introduces WaveNet, a deep neural network for generating raw audio\nwaveforms. The model is fully probabilistic and autoregressive, with the\npredictive distribution for each audio sample conditioned on all previous ones;\nnonetheless we show that it can be efficiently trained on data with tens of\nthousands of samples per second of audio. When applied to text-to-speech, it\nyields state-of-the-art performance, with human listeners rating it as\nsignificantly more natural sounding than the best parametric and concatenative\nsystems for both English and Mandarin. A single WaveNet can capture the\ncharacteristics of many different speakers with equal fidelity, and can switch\nbetween them by conditioning on the speaker identity. When trained to model\nmusic, we find that it generates novel and often highly realistic musical\nfragments. We also show that it can be employed as a discriminative model,\nreturning promising results for phoneme recognition.",
            "authors": [
                "Aaron van den Oord",
                "Sander Dieleman",
                "Heiga Zen",
                "Karen Simonyan",
                "Oriol Vinyals",
                "Alex Graves",
                "Nal Kalchbrenner",
                "Andrew Senior",
                "Koray Kavukcuoglu"
            ]
        }
    ],
    "domain": {
        "domain_type": "Speech",
        "domain_prob": 0.9826498519292048
    }
}