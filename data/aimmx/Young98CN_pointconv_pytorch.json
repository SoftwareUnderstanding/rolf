{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "PointConv",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "Young98CN",
                "owner_type": "User",
                "name": "pointconv_pytorch",
                "url": "https://github.com/Young98CN/pointconv_pytorch",
                "stars": 2,
                "pushed_at": "2021-01-18 08:42:09+00:00",
                "created_at": "2021-01-18 08:41:24+00:00",
                "language": "Python",
                "license": "MIT License",
                "frameworks": [
                    "scikit-learn",
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitattributes",
                "sha": "68ace56c76aeabdca6e08fd5d91d9ac62a97900b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/blob/master/.gitattributes"
                    }
                },
                "size": 63
            },
            {
                "type": "code",
                "name": ".idea",
                "sha": "b54891f8e96c3aa7f69ff5726330c82dd045ed74",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/tree/master/.idea"
                    }
                },
                "num_files": 7
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "eee53b1c2eb15bd4a4d87aa4d4700cdb64a8e348",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/blob/master/LICENSE"
                    }
                },
                "size": 1066
            },
            {
                "type": "code",
                "name": "data_utils",
                "sha": "60b8c196b66fa739dcf05d1e8f215d85651cc8b7",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/tree/master/data_utils"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "eval_cls_conv.py",
                "sha": "aa9e34041df525e10365d494f6e4471beca37983",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/blob/master/eval_cls_conv.py"
                    }
                },
                "size": 4381
            },
            {
                "type": "code",
                "name": "model",
                "sha": "d0bb93d9550a02711e6688649520c0fa4e2a219f",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/tree/master/model"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "provider.py",
                "sha": "55f2861bd0ad70b590aa39b590ac1d015a5335ff",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/blob/master/provider.py"
                    }
                },
                "size": 10559
            },
            {
                "type": "code",
                "name": "train_cls_conv.py",
                "sha": "7dd24cf2e43cecb476fd13f9b08a6ef48c1ffc80",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/blob/master/train_cls_conv.py"
                    }
                },
                "size": 7257
            },
            {
                "type": "code",
                "name": "utils",
                "sha": "206f5ca6bcf87f990b2f9349a1b0728921d796e1",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/Young98CN/pointconv_pytorch/tree/master/utils"
                    }
                },
                "num_files": 2
            }
        ]
    },
    "authors": [
        {
            "name": "\u6768\u9633",
            "github_id": "Young98CN"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/Young98CN/pointconv_pytorch",
            "stars": 2,
            "issues": true,
            "readme": "# PointConv\n**PointConv: Deep Convolutional Networks on 3D Point Clouds.** CVPR 2019  \nWenxuan Wu, Zhongang Qi, Li Fuxin.\n\n## Introduction\nThis project is based on our CVPR2019 paper. You can find the [arXiv](https://arxiv.org/abs/1811.07246) version here.\n\n```\n@inproceedings{wu2019pointconv,\n  title={Pointconv: Deep convolutional networks on 3d point clouds},\n  author={Wu, Wenxuan and Qi, Zhongang and Fuxin, Li},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  pages={9621--9630},\n  year={2019}\n}\n```\n\nUnlike images which are represented in regular dense grids, 3D point clouds are irregular and unordered, hence applying convolution on them can be difficult. In this paper, we extend the dynamic filter to a new convolution operation, named PointConv. PointConv can be applied on point clouds to build deep convolutional networks. We treat convolution kernels as nonlinear functions of the local coordinates of 3D points comprised of weight and density functions. With respect to a given point, the weight functions are learned with multi-layer perceptron networks and the density functions through kernel density estimation. A novel reformulation is proposed for efficiently computing the weight functions, which allowed us to dramatically scale up the network and significantly improve its performance. The learned convolution kernel can be used to compute translation-invariant and permutation-invariant convolution on any point set in the 3D space. Besides, PointConv can also be used as deconvolution operators to propagate features from a subsampled point cloud back to its original resolution. Experiments on ModelNet40, ShapeNet, and ScanNet show that deep convolutional neural networks built on PointConv are able to achieve state-of-the-art on challenging semantic segmentation benchmarks on 3D point clouds. Besides, our experiments converting CIFAR-10 into a point cloud showed that networks built on PointConv can match the performance of convolutional networks in 2D images of a similar structure.\n\n## Installation\nThe code is modified from repo [Pointnet_Pointnet2_pytorch](https://github.com/yanx27/Pointnet_Pointnet2_pytorch). Please install [PyTorch](https://pytorch.org/), [pandas](https://pandas.pydata.org/), and [sklearn](https://scikit-learn.org/).\nThe code has been tested with Python 3.5, pytorch 1.2, CUDA 10.0 and cuDNN 7.6 on Ubuntu 16.04.\n\n## Usage\n### ModelNet40 Classification\n\nDownload the ModelNet40 dataset from [here](https://shapenet.cs.stanford.edu/media/modelnet40_normal_resampled.zip). This dataset is the same one used in [PointNet](https://arxiv.org/abs/1612.00593), thanks to [Charles Qi](https://github.com/charlesq34/pointnet). Copy the unziped dataset to ```./data/modelnet40_normal_resampled```.\n\nTo train the model,\n```\npython train_cls_conv.py --model pointconv_modelnet40 --normal\n```\n\nTo evaluate the model,\n```\npython eval_cls_conv.py --checkpoint ./checkpoints/checkpoint.pth --normal\n```\n\n## License\nThis repository is released under MIT License (see LICENSE file for details).\n\n\n\n",
            "readme_url": "https://github.com/Young98CN/pointconv_pytorch",
            "frameworks": [
                "scikit-learn",
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "PointConv: Deep Convolutional Networks on 3D Point Clouds",
            "arxiv": "1811.07246",
            "year": 2018,
            "url": "http://arxiv.org/abs/1811.07246v3",
            "abstract": "Unlike images which are represented in regular dense grids, 3D point clouds\nare irregular and unordered, hence applying convolution on them can be\ndifficult. In this paper, we extend the dynamic filter to a new convolution\noperation, named PointConv. PointConv can be applied on point clouds to build\ndeep convolutional networks. We treat convolution kernels as nonlinear\nfunctions of the local coordinates of 3D points comprised of weight and density\nfunctions. With respect to a given point, the weight functions are learned with\nmulti-layer perceptron networks and density functions through kernel density\nestimation. The most important contribution of this work is a novel\nreformulation proposed for efficiently computing the weight functions, which\nallowed us to dramatically scale up the network and significantly improve its\nperformance. The learned convolution kernel can be used to compute\ntranslation-invariant and permutation-invariant convolution on any point set in\nthe 3D space. Besides, PointConv can also be used as deconvolution operators to\npropagate features from a subsampled point cloud back to its original\nresolution. Experiments on ModelNet40, ShapeNet, and ScanNet show that deep\nconvolutional neural networks built on PointConv are able to achieve\nstate-of-the-art on challenging semantic segmentation benchmarks on 3D point\nclouds. Besides, our experiments converting CIFAR-10 into a point cloud showed\nthat networks built on PointConv can match the performance of convolutional\nnetworks in 2D images of a similar structure.",
            "authors": [
                "Wenxuan Wu",
                "Zhongang Qi",
                "Li Fuxin"
            ]
        },
        {
            "title": "PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation",
            "arxiv": "1612.00593",
            "year": 2016,
            "url": "http://arxiv.org/abs/1612.00593v2",
            "abstract": "Point cloud is an important type of geometric data structure. Due to its\nirregular format, most researchers transform such data to regular 3D voxel\ngrids or collections of images. This, however, renders data unnecessarily\nvoluminous and causes issues. In this paper, we design a novel type of neural\nnetwork that directly consumes point clouds and well respects the permutation\ninvariance of points in the input. Our network, named PointNet, provides a\nunified architecture for applications ranging from object classification, part\nsegmentation, to scene semantic parsing. Though simple, PointNet is highly\nefficient and effective. Empirically, it shows strong performance on par or\neven better than state of the art. Theoretically, we provide analysis towards\nunderstanding of what the network has learnt and why the network is robust with\nrespect to input perturbation and corruption.",
            "authors": [
                "Charles R. Qi",
                "Hao Su",
                "Kaichun Mo",
                "Leonidas J. Guibas"
            ]
        },
        {
            "year": "2019",
            "pages": "9621--9630",
            "booktitle": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition",
            "author": [
                "Wu, Wenxuan",
                "Qi, Zhongang",
                "Fuxin, Li"
            ],
            "title": "Pointconv: Deep convolutional networks on 3d point clouds",
            "ENTRYTYPE": "inproceedings",
            "ID": "wu2019pointconv",
            "authors": [
                "Wu, Wenxuan",
                "Qi, Zhongang",
                "Fuxin, Li"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "ModelNet40"
            },
            {
                "name": "ScanNet"
            },
            {
                "name": "CIFAR-10"
            },
            {
                "name": "ShapeNet"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999914718423848,
        "task": "Object Localization",
        "task_prob": 0.742487858855774
    }
}