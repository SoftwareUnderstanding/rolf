{
    "visibility": {
        "visibility": "public"
    },
    "name": "15-453 Final Project",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "yeoedward",
                "owner_type": "User",
                "name": "Neural-Turing-Machine",
                "url": "https://github.com/yeoedward/Neural-Turing-Machine",
                "stars": 4,
                "pushed_at": "2016-05-06 03:09:35+00:00",
                "created_at": "2016-04-13 22:08:19+00:00",
                "language": "Python",
                "description": "15-453 Final Project",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "f2853e724110967530ff1e78e4fec006c805e7c6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/.gitignore"
                    }
                },
                "size": 32
            },
            {
                "type": "code",
                "name": "analyze.py",
                "sha": "7a230949883220ecd19828c4f17eda1a13a39a51",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/analyze.py"
                    }
                },
                "size": 987
            },
            {
                "type": "code",
                "name": "checkpoints",
                "sha": "81dd3a7810f549e9b73f6421aea6844443fddee3",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/tree/master/checkpoints"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "copy_task.py",
                "sha": "ed1404b35e2780748f6e00e27b8143beba7afa7b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/copy_task.py"
                    }
                },
                "size": 4744
            },
            {
                "type": "code",
                "name": "dyck_task.py",
                "sha": "c049fcb5da3891f41ca27dd49b11b460c4621f3b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/dyck_task.py"
                    }
                },
                "size": 5318
            },
            {
                "type": "code",
                "name": "images",
                "sha": "56f170066ed63603397a93eddaf7c4634c09c847",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/tree/master/images"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "ntm.py",
                "sha": "d016ee68d1af6641786954f6a08a284c1256193d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/ntm.py"
                    }
                },
                "size": 12215
            },
            {
                "type": "code",
                "name": "parse.py",
                "sha": "e05b87a498d3d7c515d45f2724ee9872fb7e7e81",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/parse.py"
                    }
                },
                "size": 547
            },
            {
                "type": "code",
                "name": "report",
                "sha": "45414397fdde139715dcedc4319b4d6e9b7b71d2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/tree/master/report"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "rotate_op",
                "sha": "1158f67736b72e448d064423d36a9fa193838353",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/tree/master/rotate_op"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "test_controller.py",
                "sha": "187b93eba7a1d3a1f9680e0355c86710054e0c08",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/test_controller.py"
                    }
                },
                "size": 733
            },
            {
                "type": "code",
                "name": "test_ntm_cell.py",
                "sha": "f021d1861fffb341db47935451063974f832d76b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/test_ntm_cell.py"
                    }
                },
                "size": 554
            },
            {
                "type": "code",
                "name": "test_ntm_rotate.py",
                "sha": "7aa2c4c9e7fc47ea8418e1fa581010ec5eb84b5b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/test_ntm_rotate.py"
                    }
                },
                "size": 2062
            },
            {
                "type": "code",
                "name": "test_tf.py",
                "sha": "8b6ed0b6198c15cb3d50bfb0a12fb496d3325f6f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/yeoedward/Neural-Turing-Machine/blob/master/test_tf.py"
                    }
                },
                "size": 353
            }
        ]
    },
    "authors": [
        {
            "name": "yeoedward",
            "github_id": "yeoedward"
        },
        {
            "name": "tomniu",
            "github_id": "tomniu"
        }
    ],
    "tags": [],
    "description": "15-453 Final Project",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/yeoedward/Neural-Turing-Machine",
            "stars": 4,
            "issues": true,
            "readme": "# 15-453 Final Project\n\nImplementation of a Neural Turing Machine (NTM) using Tensor Flow (v0.8)\n\nOriginal Paper: http://arxiv.org/abs/1410.5401\n\n## Installation\n\n  1. Clone TensorFlow (v0.8) into the root folder of this project.\n  You can find a link to the github repo at https://www.tensorflow.org/. Follow the instructions to\n  build and install it. You should build from source because we use a custom user op implemented\n  in C++.\n\n  2. In the folder `rotate_op/` you will find three files: `BUILD`, `rotate.cc` and `rotate_grad.cc`.\n  These are user operations that we wrote. Copy them into `tensorflow/tensorflow/core/user_ops`.\n  Then run the following command `bazel build -c opt //tensorflow/core/user_ops:rotate.so` in that directory.\n  This generates the `.so` file that will be loaded by `ntm.py`. If you did not clone tensorflow\n  into the root folder of this project as instructed, please modify the path in `ntm.py` accordingly.\n  \n  3. To execute the copy task, run `python copy_task.py`.\n  \n## Checkpoints\n\nCheckpoint files are automatically saved by `copy_task.py` every 1000 training iterations.\nYou can reload a saved model and run it with custom inputs using `analyze.py`.\nYou might have to make some changes specific to your experiment.\n\n## Report\n\nYou will find the accompanying final report in the `report/` folder. It uses some images from the\n`images/` folder. Print statements along with `parse.py` were used to log\nsome of the internal state of the NTM, like the read and write head positions that we show in the\nreport.\n\n## Code Structure\n\nYou will find all the NTM specific code in `ntm.py`. The boilerplate/experiment-harness code for\nthe copy task can be found in `copy_task.py`. Files prefixed with `test_` are small test scripts.\nMost of them just check if the code runs without crashing. The experiment code\nfor the context-free parenthesis language experiment can be found in `dyck_task.py`.\nUnfortunately due to lack of time we were unable to write it up.\n\n## Resources:\n\nhttps://www.tensorflow.org/\n\nhttps://medium.com/snips-ai/ntm-lasagne-a-library-for-neural-turing-machines-in-lasagne-2cdce6837315#.17cngz3vj\n\nhttp://awawfumin.blogspot.com/2015/03/neural-turing-machines-implementation.html\n\nhttps://blog.wtf.sg/2015/01/15/neural-turing-machines-faq/#more-843\n",
            "readme_url": "https://github.com/yeoedward/Neural-Turing-Machine",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Neural Turing Machines",
            "arxiv": "1410.5401",
            "year": 2014,
            "url": "http://arxiv.org/abs/1410.5401v2",
            "abstract": "We extend the capabilities of neural networks by coupling them to external\nmemory resources, which they can interact with by attentional processes. The\ncombined system is analogous to a Turing Machine or Von Neumann architecture\nbut is differentiable end-to-end, allowing it to be efficiently trained with\ngradient descent. Preliminary results demonstrate that Neural Turing Machines\ncan infer simple algorithms such as copying, sorting, and associative recall\nfrom input and output examples.",
            "authors": [
                "Alex Graves",
                "Greg Wayne",
                "Ivo Danihelka"
            ]
        }
    ],
    "domain": {
        "domain_type": "Unknown"
    }
}