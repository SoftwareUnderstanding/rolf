{
    "visibility": {
        "visibility": "public",
        "license": "Other"
    },
    "name": "openpose",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "mgolnezhad",
                "owner_type": "User",
                "name": "openpose",
                "url": "https://github.com/mgolnezhad/openpose",
                "stars": 0,
                "pushed_at": "2021-03-18 20:04:29+00:00",
                "created_at": "2021-03-18 18:25:23+00:00",
                "language": "C++",
                "license": "Other",
                "frameworks": []
            },
            {
                "type": "code",
                "name": ".doc_autogeneration.doxygen",
                "sha": "b8ded01c28c795a9862417687b99b669a17e3ed6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/blob/master/.doc_autogeneration.doxygen"
                    }
                },
                "size": 119451
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "7b573266add168b4a749f5c143ed87ec7061fab4",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/.github"
                    }
                },
                "num_files": 7
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "06a27c272c022ef7fc53b15063f5e60a9025828b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/blob/master/.gitignore"
                    }
                },
                "size": 2346
            },
            {
                "type": "code",
                "name": ".gitmodules",
                "sha": "4e1c0d5f1b93f83eb2431a36075916bbf6dddad6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/blob/master/.gitmodules"
                    }
                },
                "size": 221
            },
            {
                "type": "code",
                "name": "3rdparty",
                "sha": "6cbca222bc17fd046a58be82d044a011e3da80eb",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/3rdparty"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "CMakeLists.txt",
                "sha": "35b261de25dd6d91a7fab235cc8cb9af6cefab34",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/blob/master/CMakeLists.txt"
                    }
                },
                "size": 43537
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "71739cad8355a58f3f64aa31e8863bf1416d7ac8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/blob/master/LICENSE"
                    }
                },
                "size": 9686
            },
            {
                "type": "code",
                "name": "appveyor.yml",
                "sha": "394e8b6babfd07731bbc403844869f7c65c9b413",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/blob/master/appveyor.yml"
                    }
                },
                "size": 1744
            },
            {
                "type": "code",
                "name": "cmake",
                "sha": "56ff110671df374d42a22e383c62c3a58414aa27",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/cmake"
                    }
                },
                "num_files": 8
            },
            {
                "type": "code",
                "name": "doc",
                "sha": "8d462f28086815e383f719829dfc1a1dc0f091ce",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/doc"
                    }
                },
                "num_files": 16
            },
            {
                "type": "code",
                "name": "examples",
                "sha": "0d6aad808951790b597601984082af309225b125",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/examples"
                    }
                },
                "num_files": 9
            },
            {
                "type": "code",
                "name": "include",
                "sha": "cbe060380160628f56c105dfbbdc6d59600e59e6",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/include"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "models",
                "sha": "419274e28d8c87097dac720e1b56b35ef9763e42",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/models"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "python",
                "sha": "499468fed55a0229c4a18c7079fced2cf2c67d17",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/python"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "scripts",
                "sha": "789f502ebc8a71ad09156240febf51b62be8556b",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/scripts"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "src",
                "sha": "a2b82f4a0e093c525e633df22a55d3d5e3b6aaa1",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mgolnezhad/openpose/tree/master/src"
                    }
                },
                "num_files": 2
            }
        ]
    },
    "authors": [
        {
            "name": "Gin\u00e9s Hidalgo",
            "email": "gines@alumni.cmu.edu",
            "github_id": "gineshidalgo99"
        },
        {
            "name": "Raaj",
            "email": "yaadhavraaj@gmail.com",
            "github_id": "soulslicer"
        },
        {
            "name": "Bikram",
            "github_id": "bikz05"
        },
        {
            "name": "Xiang Yann, Lim",
            "github_id": "xiangyann"
        },
        {
            "name": "Zhe Cao",
            "github_id": "ZheC"
        },
        {
            "name": "Tianyi Zhao",
            "email": "ziutinyat@gmail.com",
            "github_id": "ZiuTinyat"
        },
        {
            "name": "Santiago Castro",
            "email": "bryant1410@gmail.com",
            "github_id": "bryant1410"
        },
        {
            "name": "Matthijs van der Burgh",
            "email": "MatthijsBurgh@outlook.com",
            "github_id": "MatthijsBurgh"
        },
        {
            "name": "subail",
            "github_id": "subail"
        },
        {
            "name": "Cengizhan Pasaoglu",
            "email": "cengizhanpasaoglu@gmail.com",
            "github_id": "cngzhnp"
        },
        {
            "name": "Donglai Xiang",
            "email": "xdl13thu@gmail.com",
            "github_id": "xiangdonglai"
        },
        {
            "name": "Eric Semeniuc",
            "github_id": "esemeniuc"
        },
        {
            "name": "Jim Carroll",
            "github_id": "jimfcarroll"
        },
        {
            "name": "Joab Leite S. Neto",
            "email": "leitejoab@gmail.com",
            "github_id": "jlsneto"
        },
        {
            "name": "Prabhat Kumar Sahu",
            "email": "iprabhatdev@gmail.com",
            "github_id": "TheCaffeineDev"
        },
        {
            "name": "Thomas Faingnaert",
            "github_id": "thomasfaingnaert"
        },
        {
            "name": "ZP Jiang",
            "github_id": "0x333333"
        },
        {
            "name": "fragalfernando",
            "github_id": "fragalfernando"
        },
        {
            "name": "henczati",
            "github_id": "henczati"
        },
        {
            "name": "Aditya Vaidya",
            "github_id": "kroq-gar78"
        },
        {
            "name": "Adonay Nunes",
            "email": "adonay.s.nunes@gmail.com",
            "github_id": "AdoNunes"
        },
        {
            "name": "Aleix Paris",
            "github_id": "aleixpb2"
        },
        {
            "name": "Alex Choi",
            "email": "choiip@gmail.com",
            "github_id": "choiip"
        },
        {
            "name": "Ali Zahid Raja",
            "email": "alizahidrajaa@gmail.com",
            "github_id": "alizahidraja"
        },
        {
            "name": "Alison Clarke",
            "github_id": "alisonrclarke"
        },
        {
            "name": "Andrei Costinescu",
            "github_id": "AndreiCostinescu"
        },
        {
            "name": "Anirudh Sharma",
            "email": "sharma.anirudh1995@gmail.com",
            "github_id": "encoder1995"
        },
        {
            "name": "Christian M",
            "github_id": "chriamue"
        },
        {
            "name": "Dani Vilanova",
            "github_id": "Danivilanova"
        },
        {
            "name": "Frederic Jahard",
            "github_id": "Frederic-Jahard"
        },
        {
            "name": "Dmitriy Aleksandrovich",
            "email": "wfuzerbar@gmail.com",
            "github_id": "gormonn"
        },
        {
            "name": "Elvis Yu-Jing Lin",
            "email": "elvisyjlin@gmail.com",
            "github_id": "elvisyjlin"
        },
        {
            "name": "Florent Buisson",
            "github_id": "bushibushi"
        },
        {
            "name": "Frankie Robertson",
            "github_id": "frankier"
        },
        {
            "name": "Hai-Yong Jiang",
            "github_id": "HaiyongJiang"
        },
        {
            "name": "Hannes Badertscher",
            "github_id": "HBadertscher"
        },
        {
            "name": "Harshal Mittal",
            "email": "harshalmittal4@gmail.com",
            "github_id": "harshalmittal4"
        },
        {
            "name": "Heiko Voigt",
            "github_id": "hvoigt"
        },
        {
            "name": "Howyoung",
            "github_id": "HowyoungZhou"
        },
        {
            "name": "Igor Souza",
            "email": "igormcsouza@gmail.com",
            "github_id": "igormcsouza"
        },
        {
            "name": "Jacob Mederos",
            "email": "jacob@mederos.co",
            "github_id": "jmederos"
        },
        {
            "name": "Jiawei Liu",
            "email": "jiawei6@illinois.edu",
            "github_id": "ganler"
        },
        {
            "name": "John D. Pope",
            "email": "jp@bellgeorge.com",
            "github_id": "johndpope"
        },
        {
            "name": "JulesDoe",
            "github_id": "JulesDoe"
        },
        {
            "name": "Leo Liu",
            "github_id": "goldenpartner"
        },
        {
            "name": "Loreto Parisi",
            "email": "loretoparisi@gmail.com",
            "github_id": "loretoparisi"
        },
        {
            "name": "Luong Vo",
            "email": "luong.vo@employmenthero.com",
            "github_id": "luong-komorebi"
        },
        {
            "name": "Mike Grinshpon",
            "email": "mgrinshpon@gmail.com",
            "github_id": "mgrinshpon"
        },
        {
            "name": "MochanShrestha",
            "github_id": "MochanShrestha"
        },
        {
            "name": "Yuki Murata",
            "email": "y.murata0105@gmail.com",
            "github_id": "Muratter"
        },
        {
            "name": "Naoto Inoue",
            "email": "naoto.inoue.0804@gmail.com",
            "github_id": "naoto0804"
        },
        {
            "name": "Nathan Bendich",
            "github_id": "neonb88"
        },
        {
            "name": "Nathan Pahucki",
            "github_id": "npahucki"
        },
        {
            "name": "Nico Zevallos",
            "github_id": "gnastacast"
        },
        {
            "name": "Nutchanon Ninyawee",
            "email": "nutchanon@codustry.com",
            "github_id": "wasdee"
        },
        {
            "name": "Panteleris Paschalis",
            "github_id": "padeler"
        },
        {
            "name": "Pete Schwamb",
            "github_id": "ps2"
        },
        {
            "name": "Pinocchioo",
            "github_id": "Pinocchioo"
        },
        {
            "name": "Saya",
            "email": "saya-rbt@protonmail.com",
            "github_id": "saya-rbt"
        },
        {
            "name": "Shiven Mian",
            "email": "shivenmian97@gmail.com",
            "github_id": "shivenmian"
        },
        {
            "name": "Sobeit-Tim",
            "github_id": "Sobeit-Tim"
        },
        {
            "name": "Sri Krishna",
            "github_id": "skrish13"
        },
        {
            "name": "Takashi Kaneda",
            "email": "takashi.kaneda@futurestandard.co.jp",
            "github_id": "kndt84"
        },
        {
            "name": "Viktor Richter",
            "email": "vrichter@posteo.de",
            "github_id": "vrichter"
        },
        {
            "name": "Vinjn Zhang",
            "github_id": "vinjn"
        },
        {
            "name": "Virag Varga",
            "github_id": "vvirag"
        },
        {
            "name": "Will Badart",
            "email": "will@willbadart.com",
            "github_id": "wbadart"
        },
        {
            "name": "Wlad Meixner",
            "github_id": "gosticks"
        },
        {
            "name": "Yuji Fujisaka",
            "email": "yujifujisaka@gmail.com",
            "github_id": "yujif"
        },
        {
            "name": "apatsekin",
            "email": "apatsekin@gmail.com",
            "github_id": "apatsekin"
        },
        {
            "name": "arc",
            "github_id": "arkceajin"
        },
        {
            "name": "cameron2018",
            "github_id": "cameron2018"
        },
        {
            "name": "cavalleria",
            "email": "cavallyb@gmail.com",
            "github_id": "cavalleria"
        },
        {
            "name": "Dennis Wittchen",
            "github_id": "derikon"
        },
        {
            "name": "dinatih",
            "email": "dinatih@gmail.com",
            "github_id": "dinatih"
        },
        {
            "name": "NyaMisty",
            "github_id": "NyaMisty"
        },
        {
            "name": "JONGHEON LEE",
            "email": "ika7204@naver.com",
            "github_id": "ika9810"
        },
        {
            "name": "raretomato",
            "github_id": "raretomato"
        },
        {
            "name": "sergionegri",
            "github_id": "sergionegri"
        },
        {
            "name": "tsimk",
            "github_id": "tsimk"
        },
        {
            "name": "xfanplus",
            "email": "xfanplus@gmail.com",
            "github_id": "xfanplus"
        },
        {
            "name": "xuyouzheng",
            "email": "oylzxyz@gmail.com",
            "github_id": "oylz"
        },
        {
            "name": "yijiangw",
            "github_id": "yijiangw"
        },
        {
            "name": "\u304a\u3044\u304c\u307f",
            "email": "oigami013@yahoo.co.jp",
            "github_id": "oigami"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/mgolnezhad/openpose",
            "stars": 0,
            "issues": true,
            "readme": "<div align=\"center\">\n    <img src=\".github/Logo_main_black.png\" width=\"300\">\n</div>\n\n-----------------\n\n| **Build Type**   |`Linux`           |`MacOS`           |`Windows`         |\n| :---:            | :---:            | :---:            | :---:            |\n| **Build Status** | [![Status](https://github.com/CMU-Perceptual-Computing-Lab/openpose/workflows/CI/badge.svg)](https://github.com/CMU-Perceptual-Computing-Lab/openpose/actions) | [![Status](https://github.com/CMU-Perceptual-Computing-Lab/openpose/workflows/CI/badge.svg)](https://github.com/CMU-Perceptual-Computing-Lab/openpose/actions) | [![Status](https://ci.appveyor.com/api/projects/status/5leescxxdwen77kg/branch/master?svg=true)](https://ci.appveyor.com/project/gineshidalgo99/openpose/branch/master) |\n\n[**OpenPose**](https://github.com/CMU-Perceptual-Computing-Lab/openpose) has represented the **first real-time multi-person system to jointly detect human body, hand, facial, and foot keypoints (in total 135 keypoints) on single images**.\n\nIt is **authored by** [**Gin\u00e9s Hidalgo**](https://www.gineshidalgo.com), [**Zhe Cao**](https://people.eecs.berkeley.edu/~zhecao), [**Tomas Simon**](http://www.cs.cmu.edu/~tsimon), [**Shih-En Wei**](https://scholar.google.com/citations?user=sFQD3k4AAAAJ&hl=en), [**Yaadhav Raaj**](https://www.raaj.tech), [**Hanbyul Joo**](https://jhugestar.github.io), **and** [**Yaser Sheikh**](http://www.cs.cmu.edu/~yaser). It is **maintained by** [**Gin\u00e9s Hidalgo**](https://www.gineshidalgo.com) **and** [**Yaadhav Raaj**](https://www.raaj.tech). OpenPose would not be possible without the [**CMU Panoptic Studio dataset**](http://domedb.perception.cs.cmu.edu). We would also like to thank all the people who [has helped OpenPose in any way](doc/09_authors_and_contributors.md).\n\n\n\n<p align=\"center\">\n    <img src=\".github/media/pose_face_hands.gif\" width=\"480\">\n    <br>\n    <sup>Authors <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gin\u00e9s Hidalgo</a> (left) and <a href=\"https://jhugestar.github.io\" target=\"_blank\">Hanbyul Joo</a> (right) in front of the <a href=\"http://domedb.perception.cs.cmu.edu\" target=\"_blank\">CMU Panoptic Studio</a></sup>\n</p>\n\n\n\n## Contents\n1. [Results](#results)\n2. [Features](#features)\n3. [Related Work](#related-work)\n4. [Installation](#installation)\n5. [Quick Start Overview](#quick-start-overview)\n6. [Send Us Feedback!](#send-us-feedback)\n7. [Citation](#citation)\n8. [License](#license)\n\n\n\n## Results\n### Whole-body (Body, Foot, Face, and Hands) 2D Pose Estimation\n<p align=\"center\">\n    <img src=\".github/media/dance_foot.gif\" width=\"300\">\n    <img src=\".github/media/pose_face.gif\" width=\"300\">\n    <img src=\".github/media/pose_hands.gif\" width=\"300\">\n    <br>\n    <sup>Testing OpenPose: (Left) <a href=\"https://www.youtube.com/watch?v=2DiQUX11YaY\" target=\"_blank\"><i>Crazy Uptown Funk flashmob in Sydney</i></a> video sequence. (Center and right) Authors <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gin\u00e9s Hidalgo</a> and <a href=\"http://www.cs.cmu.edu/~tsimon\" target=\"_blank\">Tomas Simon</a> testing face and hands</sup>\n</p>\n\n### Whole-body 3D Pose Reconstruction and Estimation\n<p align=\"center\">\n    <img src=\".github/media/openpose3d.gif\" width=\"360\">\n    <br>\n    <sup><a href=\"https://ziutinyat.github.io/\" target=\"_blank\">Tianyi Zhao</a> testing the OpenPose 3D Module</a></sup>\n</p>\n\n### Unity Plugin\n<p align=\"center\">\n    <img src=\".github/media/unity_main.png\" width=\"300\">\n    <img src=\".github/media/unity_body_foot.png\" width=\"300\">\n    <img src=\".github/media/unity_hand_face.png\" width=\"300\">\n    <br>\n    <sup><a href=\"https://ziutinyat.github.io/\" target=\"_blank\">Tianyi Zhao</a> and <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gin\u00e9s Hidalgo</a> testing the <a href=\"https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin\" target=\"_blank\">OpenPose Unity Plugin</a></sup>\n</p>\n\n### Runtime Analysis\nWe show an inference time comparison between the 3 available pose estimation libraries (same hardware and conditions): OpenPose, Alpha-Pose (fast Pytorch version), and Mask R-CNN. The OpenPose runtime is constant, while the runtime of Alpha-Pose and Mask R-CNN grow linearly with the number of people. More details [**here**](https://arxiv.org/abs/1812.08008).\n\n<p align=\"center\">\n    <img src=\".github/media/openpose_vs_competition.png\" width=\"360\">\n</p>\n\n\n\n## Features\n- **Main Functionality**:\n    - **2D real-time multi-person keypoint detection**:\n        - 15, 18 or **25-keypoint body/foot keypoint estimation**, including **6 foot keypoints**. **Runtime invariant to number of detected people**.\n        - **2x21-keypoint hand keypoint estimation**. **Runtime depends on number of detected people**. See [**OpenPose Training**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train) for a runtime invariant alternative.\n        - **70-keypoint face keypoint estimation**. **Runtime depends on number of detected people**. See [**OpenPose Training**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train) for a runtime invariant alternative.\n    - [**3D real-time single-person keypoint detection**](doc/advanced/3d_reconstruction_module.md):\n        - 3D triangulation from multiple single views.\n        - Synchronization of Flir cameras handled.\n        - Compatible with Flir/Point Grey cameras.\n    - [**Calibration toolbox**](doc/advanced/calibration_module.md): Estimation of distortion, intrinsic, and extrinsic camera parameters.\n    - **Single-person tracking** for further speedup or visual smoothing.\n- **Input**: Image, video, webcam, Flir/Point Grey, IP camera, and support to add your own custom input source (e.g., depth camera).\n- **Output**: Basic image + keypoint display/saving (PNG, JPG, AVI, ...), keypoint saving (JSON, XML, YML, ...), keypoints as array class, and support to add your own custom output code (e.g., some fancy UI).\n- **OS**: Ubuntu (20, 18, 16, 14), Windows (10, 8), Mac OSX, Nvidia TX2.\n- **Hardware compatibility**: CUDA (Nvidia GPU), OpenCL (AMD GPU), and non-GPU (CPU-only) versions.\n- **Usage Alternatives**:\n    - [**Command-line demo**](doc/01_demo.md) for built-in functionality.\n    - [**C++ API**](doc/04_cpp_api.md/) and [**Python API**](doc/03_python_api.md) for custom functionality. E.g., adding your custom inputs, pre-processing, post-posprocessing, and output steps.\n\nFor further details, check the [major released features](doc/07_major_released_features.md) and [release notes](doc/08_release_notes.md) docs.\n\n\n\n## Related Work\n- [**OpenPose training code**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train)\n- [**OpenPose foot dataset**](https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/)\n- [**OpenPose Unity Plugin**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin)\n- OpenPose papers published in **IEEE TPAMI and CVPR**. Cite them in your publications if OpenPose helps your research! (Links and more details in the [Citation](#citation) section below).\n\n\n\n## Installation\nIf you want to use OpenPose without installing or writing any code, simply [download and use the latest Windows portable version of OpenPose](doc/installation/0_index.md#windows-portable-demo)!\n\nOtherwise, you could [build OpenPose from source](doc/installation/0_index.md#compiling-and-running-openpose-from-source). See the [installation doc](doc/installation/0_index.md) for all the alternatives.\n\n\n\n## Quick Start Overview\nSimply use the OpenPose Demo from your favorite command-line tool (e.g., Windows PowerShell or Ubuntu Terminal). E.g., this example runs OpenPose on your webcam and displays the body keypoints:\n```\n# Ubuntu\n./build/examples/openpose/openpose.bin\n```\n```\n:: Windows - Portable Demo\nbin\\OpenPoseDemo.exe --video examples\\media\\video.avi\n```\n\nYou can also add any of the available flags in any order. E.g., the following example runs on a video (`--video {PATH}`), enables face (`--face`) and hands (`--hand`), and saves the output keypoints on JSON files on disk (`--write_json {PATH}`).\n```\n# Ubuntu\n./build/examples/openpose/openpose.bin --video examples/media/video.avi --face --hand --write_json output_json_folder/\n```\n```\n:: Windows - Portable Demo\nbin\\OpenPoseDemo.exe --video examples\\media\\video.avi --face --hand --write_json output_json_folder/\n```\n\nOptionally, you can also extend OpenPose's functionality from its Python and C++ APIs. After [installing](doc/installation/0_index.md) OpenPose, check its [official doc](doc/00_index.md) for a quick overview of all the alternatives and tutorials.\n\n\n\n## Send Us Feedback!\nOur library is open source for research purposes, and we want to improve it! So let us know (create a new GitHub issue or pull request, email us, etc.) if you...\n1. Find/fix any bug (in functionality or speed) or know how to speed up or improve any part of OpenPose.\n2. Want to add/show some cool functionality/demo/project made on top of OpenPose. We can add your project link to our [Community-based Projects](doc/10_community_projects.md) section or even integrate it with OpenPose!\n\n\n\n## Citation\nPlease cite these papers in your publications if OpenPose helps your research. All of OpenPose is based on [OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1812.08008), while the hand and face detectors also use [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809) (the face detector was trained using the same procedure than the hand detector).\n\n    @article{8765346,\n      author = {Z. {Cao} and G. {Hidalgo Martinez} and T. {Simon} and S. {Wei} and Y. A. {Sheikh}},\n      journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},\n      title = {OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2019}\n    }\n\n    @inproceedings{simon2017hand,\n      author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n      year = {2017}\n    }\n\n    @inproceedings{cao2017realtime,\n      author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2017}\n    }\n\n    @inproceedings{wei2016cpm,\n      author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Convolutional pose machines},\n      year = {2016}\n    }\n\nPaper links:\n- OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields:\n    - [IEEE TPAMI](https://ieeexplore.ieee.org/document/8765346)\n    - [ArXiv](https://arxiv.org/abs/1812.08008)\n- [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809)\n- [Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1611.08050)\n- [Convolutional Pose Machines](https://arxiv.org/abs/1602.00134)\n\n\n\n## License\nOpenPose is freely available for free non-commercial use, and may be redistributed under these conditions. Please, see the [license](./LICENSE) for further details. Interested in a commercial license? Check this [FlintBox link](https://cmu.flintbox.com/#technologies/b820c21d-8443-4aa2-a49f-8919d93a8740). For commercial queries, use the `Contact` section from the [FlintBox link](https://cmu.flintbox.com/#technologies/b820c21d-8443-4aa2-a49f-8919d93a8740) and also send a copy of that message to [Yaser Sheikh](mailto:yaser@cs.cmu.edu).\n",
            "readme_url": "https://github.com/mgolnezhad/openpose",
            "frameworks": []
        }
    ],
    "references": [
        {
            "title": "Convolutional Pose Machines",
            "arxiv": "1602.00134",
            "year": 2016,
            "url": "http://arxiv.org/abs/1602.00134v4",
            "abstract": "Pose Machines provide a sequential prediction framework for learning rich\nimplicit spatial models. In this work we show a systematic design for how\nconvolutional networks can be incorporated into the pose machine framework for\nlearning image features and image-dependent spatial models for the task of pose\nestimation. The contribution of this paper is to implicitly model long-range\ndependencies between variables in structured prediction tasks such as\narticulated pose estimation. We achieve this by designing a sequential\narchitecture composed of convolutional networks that directly operate on belief\nmaps from previous stages, producing increasingly refined estimates for part\nlocations, without the need for explicit graphical model-style inference. Our\napproach addresses the characteristic difficulty of vanishing gradients during\ntraining by providing a natural learning objective function that enforces\nintermediate supervision, thereby replenishing back-propagated gradients and\nconditioning the learning procedure. We demonstrate state-of-the-art\nperformance and outperform competing methods on standard benchmarks including\nthe MPII, LSP, and FLIC datasets.",
            "authors": [
                "Shih-En Wei",
                "Varun Ramakrishna",
                "Takeo Kanade",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields",
            "arxiv": "1611.08050",
            "year": 2016,
            "url": "http://arxiv.org/abs/1611.08050v2",
            "abstract": "We present an approach to efficiently detect the 2D pose of multiple people\nin an image. The approach uses a nonparametric representation, which we refer\nto as Part Affinity Fields (PAFs), to learn to associate body parts with\nindividuals in the image. The architecture encodes global context, allowing a\ngreedy bottom-up parsing step that maintains high accuracy while achieving\nrealtime performance, irrespective of the number of people in the image. The\narchitecture is designed to jointly learn part locations and their association\nvia two branches of the same sequential prediction process. Our method placed\nfirst in the inaugural COCO 2016 keypoints challenge, and significantly exceeds\nthe previous state-of-the-art result on the MPII Multi-Person benchmark, both\nin performance and efficiency.",
            "authors": [
                "Zhe Cao",
                "Tomas Simon",
                "Shih-En Wei",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields",
            "arxiv": "1812.08008",
            "year": 2018,
            "url": "http://arxiv.org/abs/1812.08008v2",
            "abstract": "Realtime multi-person 2D pose estimation is a key component in enabling\nmachines to have an understanding of people in images and videos. In this work,\nwe present a realtime approach to detect the 2D pose of multiple people in an\nimage. The proposed method uses a nonparametric representation, which we refer\nto as Part Affinity Fields (PAFs), to learn to associate body parts with\nindividuals in the image. This bottom-up system achieves high accuracy and\nrealtime performance, regardless of the number of people in the image. In\nprevious work, PAFs and body part location estimation were refined\nsimultaneously across training stages. We demonstrate that a PAF-only\nrefinement rather than both PAF and body part location refinement results in a\nsubstantial increase in both runtime performance and accuracy. We also present\nthe first combined body and foot keypoint detector, based on an internal\nannotated foot dataset that we have publicly released. We show that the\ncombined detector not only reduces the inference time compared to running them\nsequentially, but also maintains the accuracy of each component individually.\nThis work has culminated in the release of OpenPose, the first open-source\nrealtime system for multi-person 2D pose detection, including body, foot, hand,\nand facial keypoints.",
            "authors": [
                "Zhe Cao",
                "Gines Hidalgo",
                "Tomas Simon",
                "Shih-En Wei",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "Hand Keypoint Detection in Single Images using Multiview Bootstrapping",
            "arxiv": "1704.07809",
            "year": 2017,
            "url": "http://arxiv.org/abs/1704.07809v1",
            "abstract": "We present an approach that uses a multi-camera system to train fine-grained\ndetectors for keypoints that are prone to occlusion, such as the joints of a\nhand. We call this procedure multiview bootstrapping: first, an initial\nkeypoint detector is used to produce noisy labels in multiple views of the\nhand. The noisy detections are then triangulated in 3D using multiview geometry\nor marked as outliers. Finally, the reprojected triangulations are used as new\nlabeled training data to improve the detector. We repeat this process,\ngenerating more labeled data in each iteration. We derive a result analytically\nrelating the minimum number of views to achieve target true and false positive\nrates for a given detector. The method is used to train a hand keypoint\ndetector for single images. The resulting keypoint detector runs in realtime on\nRGB images and has accuracy comparable to methods that use depth sensors. The\nsingle view detector, triangulated over multiple views, enables 3D markerless\nhand motion capture with complex object interactions.",
            "authors": [
                "Tomas Simon",
                "Hanbyul Joo",
                "Iain Matthews",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "**Gin\u00e9s Hidalgo**",
            "url": "https://www.gineshidalgo.com"
        },
        {
            "title": "**Yaser Sheikh**",
            "url": "http://www.cs.cmu.edu/~yaser"
        },
        {
            "title": "**Yaadhav Raaj**",
            "url": "https://www.raaj.tech"
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "**CMU Panoptic Studio dataset**",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "http://domedb.perception.cs.cmu.edu"
                    }
                }
            },
            {
                "name": "**OpenPose foot dataset**",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/"
                    }
                }
            },
            {
                "name": "MPII Multi-Person"
            },
            {
                "name": "COCO"
            },
            {
                "name": "OCCLUSION"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999952906686697,
        "task": "Pose Estimation",
        "task_prob": 0.9877970896227379
    }
}