{
    "visibility": {
        "visibility": "public"
    },
    "name": "misuy_style_transfer_bot",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "misuy",
                "owner_type": "User",
                "name": "misuy_style_transfer_bot",
                "url": "https://github.com/misuy/misuy_style_transfer_bot",
                "stars": 0,
                "pushed_at": "2020-06-30 19:43:20+00:00",
                "created_at": "2020-06-26 18:42:24+00:00",
                "language": "Python",
                "description": "Telegram bot for NST and GAN style transfer",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "08ded85db6e8c53a3d65169235a4caf428fcb36d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/blob/master/.gitignore"
                    }
                },
                "size": 107
            },
            {
                "type": "code",
                "name": "env",
                "sha": "a8bd0356abf19cd6551f7ace612cef5635d9bb56",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/tree/master/env"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "gan_executor.py",
                "sha": "c9c20bc1bb3f8903df5449a1298f385379c87bd4",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/blob/master/gan_executor.py"
                    }
                },
                "size": 975
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "1d3fbdd1cc2428c69705b4b30b9c383577b1cd7c",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/blob/master/main.py"
                    }
                },
                "size": 9228
            },
            {
                "type": "code",
                "name": "models",
                "sha": "485fe9c83beec71cde8bf0eaa4650b0b4ee961c8",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/tree/master/models"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "nst_executor.py",
                "sha": "a5332e0ef044614b8d339e453369736d7ae2d384",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/blob/master/nst_executor.py"
                    }
                },
                "size": 1107
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "c6545ee0ccc061b3781e0306953d24b3a19a71b5",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/blob/master/requirements.txt"
                    }
                },
                "size": 44
            },
            {
                "type": "code",
                "name": "users_dict.txt",
                "sha": "9e26dfeeb6e641a33dae4961196235bdb965b21b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/misuy/misuy_style_transfer_bot/blob/master/users_dict.txt"
                    }
                },
                "size": 2
            }
        ]
    },
    "authors": [
        {
            "name": "misuy",
            "github_id": "misuy"
        }
    ],
    "tags": [],
    "description": "Telegram bot for NST and GAN style transfer",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/misuy/misuy_style_transfer_bot",
            "stars": 0,
            "issues": true,
            "readme": "# misuy_style_transfer_bot\n\u042d\u0442\u043e \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043c\u043e\u0435\u0433\u043e \u0437\u0430\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 1-\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043a\u0443\u0440\u0441\u0430 deep learning school.\n\n\u041e\u0442 \u043c\u0435\u043d\u044f \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0434\u0430\u0442\u044c \u0442\u0435\u043b\u0435\u0433\u0440\u0430\u043c \u0431\u043e\u0442\u0430, \u0443\u043c\u0435\u044e\u0449\u0435\u0433\u043e \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442\u044c \u0441\u0442\u0438\u043b\u044c \u0441 \u043e\u0434\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u043d\u0430 \u0434\u0440\u0443\u0433\u0443\u044e, \u0438 \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0433\u0430\u043d\u0430 \u043d\u0430\u043a\u043d\u0430\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c (\u0432 \u043c\u043e\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438\u043c\u0435\u043b\u0441\u044f \u0432 \u0432\u0438\u0434\u0443 \u043a\u0443\u0431\u0438\u0437\u043c).\n\n\u0414\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u0430 \u0431\u043e\u0442\u0430 \u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 aiogram, \u043d\u043e \u043e\u043d \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0441\u044f \u043d\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c, \u0442.\u043a. \u043d\u0435 \u0441\u043c\u043e\u0433 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u0438.\n\n\u0414\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a pytorch. \u041e\u0441\u043d\u043e\u0432\u0443 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u044c\u0437\u0430\u0446\u0438\u0438 NST \u044f \u0432\u0437\u044f\u043b \u0441 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430: https://pytorch.org/tutorials/advanced/neural_style_tutorial.html. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e CycleGan \u0432\u0437\u044f\u043b \u0438\u0437 \u0441\u0432\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0448\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0432 dlschool: https://github.com/misuy/misuy_cycle_gan, \u0434\u043b\u044f \u0435\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044f \u0432\u0434\u043e\u0445\u043d\u043e\u0432\u043b\u044f\u043b\u0441\u044f \u0441\u0442\u0430\u0442\u044c\u0435\u0439: https://arxiv.org/abs/1703.10593, \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439: https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043e\u0431\u0443\u0447\u0438\u043b \u0433\u0430\u043d \u043d\u0430 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0435\u043c \u0438\u0437 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439: https://www.kaggle.com/hsankesara/flickr-image-dataset, \u0438 1500 \u043a\u0430\u0440\u0442\u0438\u043d \u0432 \u0441\u0442\u0438\u043b\u0435 \u043a\u0443\u0431\u0438\u0437\u043c \u0438\u0437 \u044f\u043d\u0434\u0435\u043a\u0441 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f \u0441\u043f\u0430\u0440\u0441\u0438\u043b.\n\n# \u0414\u043b\u044f \u0442\u0435\u0445, \u043a\u0442\u043e \u0445\u043e\u0447\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u043e\u0442\u043e\u043c\n1)\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0431\u043e\u0442\u0430 \u0432 \u0442\u0435\u043b\u0435\u0433\u0440\u0430\u043c\u0435 @misuy_style_transfer_bot;\n\n2)\u041e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 /start \u0434\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0430\u0431\u043e\u0442\u044b;\n\n\u041e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 /help, \u0438\u043b\u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 '\u041f\u043e\u043c\u043e\u0449\u044c' \u043d\u0430 inline \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u0435, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u043f\u043e\u043c\u043e\u0449\u044c;\n\n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u0431\u0440\u0430\u0442\u044c 1 \u0438\u0437 2-\u0443\u0445 \u0440\u0435\u0436\u0438\u043c\u043e\u0432 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u043e\u0442\u0430:\n\n1. NST (\u041c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 /nst, \u0438\u043b\u0438 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 NST) - \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442 \u0441\u0442\u0438\u043b\u044c \u0441\u043e 2-\u043e\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u043d\u0430 1-\u0443\u044e (\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u0445). (\u0417\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u043a\u043e\u043b\u043e 5 \u043c\u0438\u043d\u0443\u0442)\n\n2. GAN (\u041c\u043e\u0436\u043d\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 /gan, \u0438\u043b\u0438 \u043a\u043d\u043e\u043f\u043a\u043e\u0439 GAN) - \u043d\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c \u043d\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443 (\u0432 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u043a\u0443\u0431\u0438\u0437\u043c). (\u041f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u0447\u0442\u0438 \u043c\u0433\u043d\u043e\u0432\u0435\u043d\u043d\u043e)\n\n# \u0414\u043b\u044f \u0442\u0435\u0445, \u043a\u0442\u043e \u0445\u043e\u0447\u0435\u0442 \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439\n1)Github \u043d\u0435 \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u0442 \u043f\u0443\u0441\u0442\u044b\u0435 \u043f\u0430\u043f\u043a\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0430\u043f\u043a\u0443 images \u0432 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 [/images] (\u0442\u0430\u043c \u0433\u0434\u0435 \u0444\u0430\u0439\u043b main.py), \u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e vgg16 \u0432 models [/models/vgg16];\n\n2)\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u0441onfig.py \u0432 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 [/config.py], \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c: TOKEN='{\u0412\u0430\u0448 \u0442\u043e\u043a\u0435\u043d \u043e\u0442 \u0431\u043e\u0442\u0430 \u0432 \u0442\u0435\u043b\u0435\u0433\u0440\u0430\u043c\u0435}';\n\n3)\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438\u0437 requirements.txt \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 [python3.7 -m pip install -r requirements.txt], \u0438 torch+torchvision \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 [python3.7 -m pip install torch==1.5.1+cpu torchvision==0.6.1+cpu -f https://download.pytorch.org/whl/torch_stable.html] (torch \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0441pu);\n\n4)\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0444\u0430\u0439\u043b /models/download_vgg16.py \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u0440\u0435\u0434\u043e\u0431\u0443\u0447\u0435\u043d\u043d\u043e\u0439 vgg16 \u0434\u043b\u044f NST;\n\n5)\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0444\u0430\u0439\u043b /main.py;\n\n6)\u0411\u043e\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d!\n",
            "readme_url": "https://github.com/misuy/misuy_style_transfer_bot",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks",
            "arxiv": "1703.10593",
            "year": 2017,
            "url": "http://arxiv.org/abs/1703.10593v7",
            "abstract": "Image-to-image translation is a class of vision and graphics problems where\nthe goal is to learn the mapping between an input image and an output image\nusing a training set of aligned image pairs. However, for many tasks, paired\ntraining data will not be available. We present an approach for learning to\ntranslate an image from a source domain $X$ to a target domain $Y$ in the\nabsence of paired examples. Our goal is to learn a mapping $G: X \\rightarrow Y$\nsuch that the distribution of images from $G(X)$ is indistinguishable from the\ndistribution $Y$ using an adversarial loss. Because this mapping is highly\nunder-constrained, we couple it with an inverse mapping $F: Y \\rightarrow X$\nand introduce a cycle consistency loss to push $F(G(X)) \\approx X$ (and vice\nversa). Qualitative results are presented on several tasks where paired\ntraining data does not exist, including collection style transfer, object\ntransfiguration, season transfer, photo enhancement, etc. Quantitative\ncomparisons against several prior methods demonstrate the superiority of our\napproach.",
            "authors": [
                "Jun-Yan Zhu",
                "Taesung Park",
                "Phillip Isola",
                "Alexei A. Efros"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9829259396925052,
        "task": "Image-to-Image Translation",
        "task_prob": 0.9560975746719809
    }
}