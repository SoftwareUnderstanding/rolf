{
    "visibility": {
        "visibility": "public"
    },
    "name": "\u7b80\u4ecb",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "0492wzl",
                "owner_type": "User",
                "name": "tensorflow_slim_densenet",
                "url": "https://github.com/0492wzl/tensorflow_slim_densenet",
                "stars": 0,
                "pushed_at": "2018-08-19 02:38:13+00:00",
                "created_at": "2018-08-06 16:25:36+00:00",
                "language": "Python",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": "WORKSPACE",
                "sha": "9a8eb6f58a94ff52a02f18a58fd667355888f2b8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/WORKSPACE"
                    }
                },
                "size": 426
            },
            {
                "type": "code",
                "name": "__init__.py",
                "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/__init__.py"
                    }
                },
                "size": 0
            },
            {
                "type": "code",
                "name": "datasets",
                "sha": "c857af5c2420da81fd19ec6d7532bbf836f914e8",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/tree/master/datasets"
                    }
                },
                "num_files": 20
            },
            {
                "type": "code",
                "name": "deployment",
                "sha": "4f2df3eb58e64fa471ca7dea4c6f2dc154bf8429",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/tree/master/deployment"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "download_and_convert_data.py",
                "sha": "56fefce79d0728a0284f4ffea46b44755e343178",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/download_and_convert_data.py"
                    }
                },
                "size": 2466
            },
            {
                "type": "code",
                "name": "eval_image_classifier.py",
                "sha": "c2121262cb873339479273aba74499d3302e9f59",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/eval_image_classifier.py"
                    }
                },
                "size": 6665
            },
            {
                "type": "code",
                "name": "export_inference_graph.py",
                "sha": "56f28a5ede47e37e5aeebab54b9cbea2d67325ee",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/export_inference_graph.py"
                    }
                },
                "size": 4658
            },
            {
                "type": "code",
                "name": "export_inference_graph_test.py",
                "sha": "42474f229283de62e56e208056f4cf2b819a83e2",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/export_inference_graph_test.py"
                    }
                },
                "size": 1397
            },
            {
                "type": "code",
                "name": "nets",
                "sha": "31aec1b59c8cfe08530a92534ce6feaaef255c5e",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/tree/master/nets"
                    }
                },
                "num_files": 40
            },
            {
                "type": "code",
                "name": "preprocessing",
                "sha": "f00166595e8c6dae664d1aa2ac4ab6c2fabb9c2c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/tree/master/preprocessing"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "scripts",
                "sha": "d055628781491ea4c2d31870a8ec5c53a2bd827a",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/tree/master/scripts"
                    }
                },
                "num_files": 7
            },
            {
                "type": "code",
                "name": "setup.py",
                "sha": "3ec7ecd69551e617acf553a163bf0fb06c758c28",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/setup.py"
                    }
                },
                "size": 916
            },
            {
                "type": "code",
                "name": "slim_walkthrough.ipynb",
                "sha": "5618808e96962af8119e9cd048114cd9c35dc834",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/slim_walkthrough.ipynb"
                    }
                },
                "size": 46294
            },
            {
                "type": "code",
                "name": "train_eval_image_classifier.py",
                "sha": "d1858076ed7477040b3eb689d47094953df83069",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/train_eval_image_classifier.py"
                    }
                },
                "size": 3661
            },
            {
                "type": "code",
                "name": "train_image_classifier.py",
                "sha": "bd7280d7743a29d02385b92375ef872e8d3be776",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/0492wzl/tensorflow_slim_densenet/blob/master/train_image_classifier.py"
                    }
                },
                "size": 20014
            }
        ]
    },
    "authors": [
        {
            "name": "Colin",
            "github_id": "0492wzl"
        },
        {
            "name": "\u5b59\u5fb7\u4f1f",
            "github_id": "dwSun"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/0492wzl/tensorflow_slim_densenet",
            "stars": 0,
            "issues": true,
            "readme": "# \u7b80\u4ecb\n\u672c\u4ee3\u7801\u4e3a\u7cfb\u5217\u8bfe\u7a0b, \u7b2c\u4e03\u5468\u90e8\u5206\u7684\u8bfe\u540e\u4f5c\u4e1a\u5185\u5bb9\u3002\nhttps://edu.csdn.net/topic/ai115\n\n\n\u5b66\u5458\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2adensenet\u7684\u7f51\u7edc\uff0c\u5e76\u63d2\u5165\u5230slim\u6846\u67b6\u4e2d\u8fdb\u884c\u8bad\u7ec3\u3002\n\ntinymind \u4f7f\u7528\u8bf4\u660e\uff1ahttps://gitee.com/ai100/quiz-w7-doc\n\n\n### \u6570\u636e\u96c6\n\u672c\u6570\u636e\u96c6\u62e5\u6709200\u4e2a\u5206\u7c7b\uff0c\u6bcf\u4e2a\u5206\u7c7b300\u5f20\u56fe\u7247\uff0c\u5171\u8ba16W\u5f20\u56fe\u7247\uff0c\u5176\u4e2d5W\u5f20\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c1W\u5f20\u56fe\u7247\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\u3002\u56fe\u7247\u5df2\u7ecf\u9884\u6253\u5305\u4e3atfrecord\u683c\u5f0f\u5e76\u4e0a\u4f20\u5230tinymind\u4e0a\u3002\u5730\u5740\u5982\u4e0b\uff1a\nhttps://www.tinymind.com/ai100/datasets/quiz-w7\n\n### \u6a21\u578b\n\u6a21\u578b\u4ee3\u7801\u6765\u81ea\uff1a\nhttps://github.com/tensorflow/models/tree/master/research/slim\n\n\n\u8fd9\u91cc\u4e3a\u4e86\u9002\u5e94\u672c\u4f5c\u4e1a\u63d0\u4f9b\u7684\u6570\u636e\u96c6\uff0c\u7a0d\u4f5c\u4fee\u6539\uff0c\u6dfb\u52a0\u4e86\u4e00\u4e2aquiz\u6570\u636e\u96c6\u4ee5\u53ca\u4e00\u4e2a\u8bad\u7ec3\u5e76\u9a8c\u8bc1\u7684\u811a\u672c\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u4ee3\u7801\u4e3a\uff1a\nhttps://gitee.com/ai100/quiz-w7-2-densenet\n\n\n\u5176\u4e2dnets\u76ee\u5f55\u4e0b\u7684densenet.py\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u4e86densenet\u7f51\u7edc\u7684\u5165\u53e3\u51fd\u6570\u7b49\uff0c\u76f8\u5e94\u7684\u8f85\u52a9\u4ee3\u7801\u4e5f\u90fd\u5df2\u7ecf\u5b8c\u6210\uff0c\u5b66\u5458\u53ea\u9700\u8981check\u6216\u8005fork\u8fd9\u91cc\u7684\u4ee3\u7801\uff0c\u6dfb\u52a0\u81ea\u5df1\u7684densenet\u5b9e\u73b0\u5e76\u5728tinymind\u4e0a\u5efa\u7acb\u76f8\u5e94\u7684\u6a21\u578b\u5373\u53ef\u3002\n\n\ndensenet\u8bba\u6587\u53c2\u8003 https://arxiv.org/abs/1608.06993\n\n\n\u5728tinymind\u4e0a\u65b0\u5efa\u4e00\u4e2a\u6a21\u578b\uff0c\u6a21\u578b\u8bbe\u7f6e\u53c2\u8003\u5982\u4e0b\u6a21\u578b\uff1a\n\nhttps://www.tinymind.com/ai100/quiz-w7-2-densenet\n\u590d\u5236\u6a21\u578b\u540e\u53ef\u4ee5\u770b\u5230\u6a21\u578b\u7684\u5168\u90e8\u53c2\u6570\u3002\n\n\u6a21\u578b\u53c2\u6570\u7684\u89e3\u91ca\uff1a\n\n- dataset_name quiz  # \u6570\u636e\u96c6\u7684\u540d\u79f0\uff0c\u8fd9\u91cc\u4f7f\u7528\u6211\u4eec\u4e3a\u672c\u6b21\u4f5c\u4e1a\u4e13\u95e8\u505a\u7684quiz\u6570\u636e\u96c6\n- dataset_dir /data/ai100/quiz-w7  # tfrecord\u5b58\u653e\u7684\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u662f\u5efa\u7acb\u6a21\u578b\u7684\u65f6\u5019\uff0c\u7531tinymind\u63d0\u4f9b\u7684\n- model_name densenet  # \u4f7f\u7528\u7684\u7f51\u7edc\u7684\u540d\u79f0\uff0c\u672c\u4f5c\u4e1a\u56fa\u5b9a\u4e3adensenet\n- train_dir /output/ckpt  # \u8bad\u7ec3\u76ee\u5f55\uff0c\u8bad\u7ec3\u7684\u4e2d\u95f4\u6587\u4ef6\u548csummary\uff0ccheckpoint\u7b49\u90fd\u5b58\u653e\u5728\u8fd9\u91cc\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e5f\u662f\u9a8c\u8bc1\u8fc7\u7a0b\u7684checkpoint_path\u53c2\u6570\uff0c \u8fd9\u4e2a\u76ee\u5f55\u7531tinymind\u63d0\u4f9b\uff0c\u9700\u8981\u6ce8\u610f\u8fd9\u4e2a\u76ee\u5f55\u662f\u9700\u8981\u5199\u5165\u7684\uff0c\u4f7f\u7528\u5176\u4ed6\u76ee\u5f55\u53ef\u80fd\u4f1a\u51fa\u73b0\u5199\u5165\u5931\u8d25\u7684\u60c5\u51b5\u3002\n- learning_rate 0.1  # \u5b66\u4e60\u7387, \u56e0\u4e3a\u6ca1\u6709\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u8fd9\u91cc\u4f7f\u7528\u8f83\u5927\u7684\u5b66\u4e60\u7387\u4ee5\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002\n- optimizer rmsprop  # \u4f18\u5316\u5668\uff0c\u5173\u4e8e\u4f18\u5316\u5668\u7684\u533a\u522b\u8bf7\u53c2\u8003[\u8fd9\u91cc](https://arxiv.org/abs/1609.04747)\n- dataset_split_name validation # \u6570\u636e\u96c6\u5206\u5757\u540d\uff0c\u7528\u4e8e\u9a8c\u8bc1\u8fc7\u7a0b\uff0c\u4f20\u5165train\u53ef\u9a8c\u8bc1train\u96c6\u51c6\u786e\u5ea6\uff0c\u4f20\u5165validation\u53ef\u9a8c\u8bc1validation\u96c6\u51c6\u786e\u5ea6\uff0c\u8fd9\u91cc\u53ea\u5173\u6ce8validation\n- eval_dir /output/eval  # \u9a8c\u8bc1\u76ee\u5f55\uff0c\u9a8c\u8bc1\u7ed3\u679c\uff0c\u5305\u62ecsummary\u7b49\uff0c\u4f1a\u5199\u5165\u8fd9\u4e2a\u76ee\u5f55\n- max_num_batches 128  # \u9a8c\u8bc1batches\uff0c\u8fd9\u91cc\u4f1a\u9a8c\u8bc1128\u00d732\u51714096\u4e2a\u56fe\u7247\u6837\u672c\u7684\u6570\u636e\u3002\n\n\n\u9f13\u52b1\u53c2\u4e0e\u8bfe\u7a0b\u7684\u5b66\u5458\u5c1d\u8bd5\u4e0d\u540c\u7684\u53c2\u6570\u7ec4\u5408\u4ee5\u4f53\u9a8c\u4e0d\u540c\u7684\u53c2\u6570\u5bf9\u8bad\u7ec3\u51c6\u786e\u7387\u548c\u6536\u655b\u901f\u5ea6\u7684\u5f71\u54cd\u3002\n\n### \u7ed3\u679c\u8bc4\u4f30\n\u5b66\u5458\u9700\u8981\u63d0\u4f9b\u8fd0\u884clog\u7684\u622a\u56fe\u548c\u6587\u6863\u63cf\u8ff0\n\n\u5728tinymind\u8fd0\u884clog\u7684\u8f93\u51fa\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a\n```sh\n2017-12-1 23:03:04.327009: I tensorflow/core/kernels/logging_ops.cc:79] eval/Accuracy[0.252197266]\n2017-12-1 23:03:04.327097: I tensorflow/core/kernels/logging_ops.cc:79] eval/Recall_5[0.494873047]\n```\ndensenet\u7684\u7f51\u7edc\uff0c\u6548\u679c\u8981\u7565\u597d\u4e8einceptionv4\u3002\u8003\u8651\u5230\u5b9e\u73b0\u7684\u4e0d\u540c\uff0c\u800c\u4e14\u6ca1\u6709\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u8fd9\u91cc\u4e0d\u5bf9\u51c6\u786e\u7387\u505a\u8981\u6c42\u3002\u53ea\u8981\u8bad\u7ec3\u8fd0\u884c\u6210\u529f\u5e76\u6709\u51c6\u786e\u7387\u8f93\u51fa\u5373\u53ef\u8ba4\u4e3a\u53ca\u683c60\u5206\u3002\n\n\u63d0\u4f9b\u5bf9densenet\u5b9e\u73b0\u8fc7\u7a0b\u7684\u63cf\u8ff0\uff1a\n\u5bf9growth\u7684\u7406\u89e3 20\u5206\n\u5bf9\u7a20\u5bc6\u94fe\u63a5\u7684\u7406\u89e3 20\u5206\n\n\n# \u53c2\u8003\u5185\u5bb9\n>epoch\u8ba1\u7b97\u65b9\u5f0f\uff1a\n>epoch = step * batch_size / count_all_train_pics\n\n\n\u672c\u5730\u8fd0\u884cslim\u6846\u67b6\u6240\u7528\u547d\u4ee4\u884c\uff1a\n\n\u4f7f\u7528\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884cinceptionv4\u7b49\u7684finetune\n```sh\n\u8bad\u7ec3\uff1a\npython3 train_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --checkpoint_path=/path/to/inception_v4.ckpt --model_name=inception_v4 --checkpoint_exclude_scopes=InceptionV4/Logits,InceptionV4/AuxLogits/Aux_logits --train_dir=/path/to/train_ckpt --learning_rate=0.001 --optimizer=rmsprop  --batch_size=32\n\ntrain\u96c6\u9a8c\u8bc1\uff1a\npython3 eval_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --dataset_split_name=train --model_name=inception_v4 --checkpoint_path=/path/to/train_ckpt --eval_dir=/path/to/train_eval --batch_size=32 --max_num_batches=128\n\nvalidation\u96c6\u9a8c\u8bc1\uff1a\npython3 eval_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --dataset_split_name=validation --model_name=inception_v4 --checkpoint_path=/path/to/train_ckpt --eval_dir=/path/to/validation_eval --batch_size=32 --max_num_batches=128\n\n\u7edf\u4e00\u811a\u672c\uff1a\npython3 train_eval_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --checkpoint_path=/path/to/inception_v4.ckpt --model_name=inception_v4 --checkpoint_exclude_scopes=InceptionV4/Logits,InceptionV4/AuxLogits/Aux_logits --optimizer=rmsprop --train_dir=/path/to/log/train_ckpt --learning_rate=0.001 --dataset_split_name=validation --eval_dir=/path/to/eval --max_num_batches=128\n```\n\n\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3densenet\n```sh\n\u8bad\u7ec3\npython3 train_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --model_name=densenet --train_dir=/path/to/train_ckpt_den --learning_rate=0.1 --optimizer=rmsprop  --batch_size=16/path/to\n\ntrain\u96c6\u9a8c\u8bc1\uff1a\npython3 eval_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --dataset_split_name=train --model_name=densenet --checkpoint_path=/path/to/train_ckpt_den --eval_dir=/path/to/train_eval_den --batch_size=32 --max_num_batches=128\n\nvalidation\u96c6\u9a8c\u8bc1\uff1a\npython3 eval_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --dataset_split_name=validation --model_name=densenet --checkpoint_path=/path/to/train_ckpt_den --eval_dir=/path/to/validation_eval_den --batch_size=32 --max_num_batches=128\n\n\u7edf\u4e00\u811a\u672c\uff1a\npython3 train_eval_image_classifier.py --dataset_name=quiz --dataset_dir=/path/to/data --model_name=densenet --checkpoint_exclude_scopes=InceptionV4/Logits,InceptionV4/AuxLogits/Aux_logits --train_dir=/path/to/log/train_ckpt --learning_rate=0.1 --dataset_split_name=validation --eval_dir=/path/to/eval_den --max_num_batches=128\n```\n\n## cpu\u8bad\u7ec3\n\u672c\u5730\u6ca1\u6709\u663e\u5361\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u4e0a\u8ff0\u547d\u4ee4\u8fdb\u884c\u8bad\u7ec3\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\u53ea\u4f7f\u7528CPU\u8fdb\u884c\u8bad\u7ec3\u7684\u8bdd\uff0c\u9700\u8981\u5728\u8bad\u7ec3\u547d\u4ee4\u6216\u8005\u7edf\u4e00\u811a\u672c\u4e0a\u6dfb\u52a0**--clone_on_cpu=True**\u53c2\u6570\u3002tinymind\u4e0a\u5219\u9700\u8981\u65b0\u5efa\u4e00\u4e2a**clone_on_cpu**\u7684**bool**\u7c7b\u578b\u53c2\u6570\u5e76\u8bbe\u7f6e\u4e3a**True**\n\n",
            "readme_url": "https://github.com/0492wzl/tensorflow_slim_densenet",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "An overview of gradient descent optimization algorithms",
            "arxiv": "1609.04747",
            "year": 2016,
            "url": "http://arxiv.org/abs/1609.04747v2",
            "abstract": "Gradient descent optimization algorithms, while increasingly popular, are\noften used as black-box optimizers, as practical explanations of their\nstrengths and weaknesses are hard to come by. This article aims to provide the\nreader with intuitions with regard to the behaviour of different algorithms\nthat will allow her to put them to use. In the course of this overview, we look\nat different variants of gradient descent, summarize challenges, introduce the\nmost common optimization algorithms, review architectures in a parallel and\ndistributed setting, and investigate additional strategies for optimizing\ngradient descent.",
            "authors": [
                "Sebastian Ruder"
            ]
        },
        {
            "title": "Densely Connected Convolutional Networks",
            "arxiv": "1608.06993",
            "year": 2016,
            "url": "http://arxiv.org/abs/1608.06993v5",
            "abstract": "Recent work has shown that convolutional networks can be substantially\ndeeper, more accurate, and efficient to train if they contain shorter\nconnections between layers close to the input and those close to the output. In\nthis paper, we embrace this observation and introduce the Dense Convolutional\nNetwork (DenseNet), which connects each layer to every other layer in a\nfeed-forward fashion. Whereas traditional convolutional networks with L layers\nhave L connections - one between each layer and its subsequent layer - our\nnetwork has L(L+1)/2 direct connections. For each layer, the feature-maps of\nall preceding layers are used as inputs, and its own feature-maps are used as\ninputs into all subsequent layers. DenseNets have several compelling\nadvantages: they alleviate the vanishing-gradient problem, strengthen feature\npropagation, encourage feature reuse, and substantially reduce the number of\nparameters. We evaluate our proposed architecture on four highly competitive\nobject recognition benchmark tasks (CIFAR-10, CIFAR-100, SVHN, and ImageNet).\nDenseNets obtain significant improvements over the state-of-the-art on most of\nthem, whilst requiring less computation to achieve high performance. Code and\npre-trained models are available at https://github.com/liuzhuang13/DenseNet .",
            "authors": [
                "Gao Huang",
                "Zhuang Liu",
                "Laurens van der Maaten",
                "Kilian Q. Weinberger"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9988230761129692,
        "task": "Image Classification",
        "task_prob": 0.9854543860761883
    },
    "training": {
        "datasets": [
            {
                "name": "ImageNet"
            },
            {
                "name": "SVHN"
            },
            {
                "name": "CIFAR-100"
            },
            {
                "name": "CIFAR-10"
            }
        ]
    }
}