{
    "visibility": {
        "visibility": "public",
        "license": "Other"
    },
    "name": "pose",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "xar47x",
                "owner_type": "User",
                "name": "pose",
                "url": "https://github.com/xar47x/pose",
                "stars": 3,
                "pushed_at": "2020-02-26 05:19:02+00:00",
                "created_at": "2020-02-26 05:09:49+00:00",
                "language": "C++",
                "license": "Other",
                "frameworks": []
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "3b4b8a47ada3ad4bbd3a00c5949a8d7fe3af0d78",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/.github"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "8b5ecbd9f508bfda15d2c954c9f0a672f85c7451",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/blob/master/.gitignore"
                    }
                },
                "size": 2351
            },
            {
                "type": "code",
                "name": ".gitmodules",
                "sha": "4e1c0d5f1b93f83eb2431a36075916bbf6dddad6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/blob/master/.gitmodules"
                    }
                },
                "size": 221
            },
            {
                "type": "code",
                "name": ".travis.yml",
                "sha": "bea696a099c408fea010ae61b8402e297b9a0aeb",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/blob/master/.travis.yml"
                    }
                },
                "size": 5413
            },
            {
                "type": "code",
                "name": "3rdparty",
                "sha": "ff3ce0f5e8e7f9f417dbfb5261b55a3bbf62db44",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/3rdparty"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "CMakeLists.txt",
                "sha": "c5dd4274060de59424c9226cdf1dd71095ddb4e7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/blob/master/CMakeLists.txt"
                    }
                },
                "size": 42348
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "71739cad8355a58f3f64aa31e8863bf1416d7ac8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/blob/master/LICENSE"
                    }
                },
                "size": 9686
            },
            {
                "type": "code",
                "name": "appveyor.yml",
                "sha": "5ef1a1a3064ef1eda243bf0c841fca2de3bcdbc3",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/blob/master/appveyor.yml"
                    }
                },
                "size": 1427
            },
            {
                "type": "code",
                "name": "cmake",
                "sha": "bf4abac4c5cd850c3dfb0b2185f93515e18946da",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/cmake"
                    }
                },
                "num_files": 8
            },
            {
                "type": "code",
                "name": "doc",
                "sha": "90f219f92187b80259edfc94bce37e122eba89fc",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/doc"
                    }
                },
                "num_files": 27
            },
            {
                "type": "code",
                "name": "examples",
                "sha": "13480f11be9860dca37df3241bde374561063caa",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/examples"
                    }
                },
                "num_files": 10
            },
            {
                "type": "code",
                "name": "include",
                "sha": "7a352c474fec3e1fe2b37e5a103ec7985cf0ffcb",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/include"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "models",
                "sha": "419274e28d8c87097dac720e1b56b35ef9763e42",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/models"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "python",
                "sha": "4413f5e861a5bde072ea8b10e7f4d2436bb976b6",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/python"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "scripts",
                "sha": "3ce927bf7d5099fabeb89d53059dce3fbae6a95a",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/scripts"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "src",
                "sha": "8ac8fd68a8486c93c61aa06c029a6259d524a679",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xar47x/pose/tree/master/src"
                    }
                },
                "num_files": 2
            }
        ]
    },
    "authors": [
        {
            "name": "Gin\u00e9s Hidalgo",
            "email": "gines@alumni.cmu.edu",
            "github_id": "gineshidalgo99"
        },
        {
            "name": "Raaj",
            "email": "yaadhavraaj@gmail.com",
            "github_id": "soulslicer"
        },
        {
            "name": "Bikram",
            "github_id": "bikz05"
        },
        {
            "name": "Zhe Cao",
            "github_id": "ZheC"
        },
        {
            "name": "Tianyi Zhao",
            "email": "ziutinyat@gmail.com",
            "github_id": "ZiuTinyat"
        },
        {
            "name": "Xiang Yann, Lim",
            "github_id": "xiangyann"
        },
        {
            "name": "Santiago Castro",
            "email": "bryant1410@gmail.com",
            "github_id": "bryant1410"
        },
        {
            "name": "subail",
            "github_id": "subail"
        },
        {
            "name": "Donglai Xiang",
            "email": "xdl13thu@gmail.com",
            "github_id": "xiangdonglai"
        },
        {
            "name": "Eric Semeniuc",
            "github_id": "esemeniuc"
        },
        {
            "name": "Jim Carroll",
            "github_id": "jimfcarroll"
        },
        {
            "name": "Thomas Faingnaert",
            "github_id": "thomasfaingnaert"
        },
        {
            "name": "ZP Jiang",
            "github_id": "0x333333"
        },
        {
            "name": "fragalfernando",
            "github_id": "fragalfernando"
        },
        {
            "name": "henczati",
            "github_id": "henczati"
        },
        {
            "name": "Aditya Vaidya",
            "github_id": "kroq-gar78"
        },
        {
            "name": "Alex Choi",
            "email": "choiip@gmail.com",
            "github_id": "choiip"
        },
        {
            "name": "Anirudh Sharma",
            "email": "sharma.anirudh1995@gmail.com",
            "github_id": "encoder1995"
        },
        {
            "name": "Christian M",
            "github_id": "chriamue"
        },
        {
            "name": "Dani Vilanova",
            "github_id": "Danivilanova"
        },
        {
            "name": "Frederic Jahard",
            "github_id": "Frederic-Jahard"
        },
        {
            "name": "Florent Buisson",
            "github_id": "bushibushi"
        },
        {
            "name": "Hai-Yong Jiang",
            "github_id": "HaiyongJiang"
        },
        {
            "name": "Hannes Badertscher",
            "github_id": "HBadertscher"
        },
        {
            "name": "Harshal Mittal",
            "email": "harshalmittal4@gmail.com",
            "github_id": "harshalmittal4"
        },
        {
            "name": "Heiko Voigt",
            "github_id": "hvoigt"
        },
        {
            "name": "Igor Souza",
            "email": "igormcsouza@gmail.com",
            "github_id": "igormcsouza"
        },
        {
            "name": "Jacob Mederos",
            "email": "jacob@mederos.co",
            "github_id": "jmederos"
        },
        {
            "name": "Joab Leite S. Neto",
            "email": "leitejoab@gmail.com",
            "github_id": "jlsneto"
        },
        {
            "name": "John D. Pope",
            "email": "jp@bellgeorge.com",
            "github_id": "johndpope"
        },
        {
            "name": "JulesDoe",
            "github_id": "JulesDoe"
        },
        {
            "name": "Leo Liu",
            "github_id": "goldenpartner"
        },
        {
            "name": "Loreto Parisi",
            "email": "loretoparisi@gmail.com",
            "github_id": "loretoparisi"
        },
        {
            "name": "Luong Vo",
            "email": "luong.vo@employmenthero.com",
            "github_id": "luong-komorebi"
        },
        {
            "name": "Mike Grinshpon",
            "email": "mgrinshpon@gmail.com",
            "github_id": "mgrinshpon"
        },
        {
            "name": "MochanShrestha",
            "github_id": "MochanShrestha"
        },
        {
            "name": "Yuki Murata",
            "email": "y.murata0105@gmail.com",
            "github_id": "Muratter"
        },
        {
            "name": "Naoto Inoue",
            "email": "naoto.inoue.0804@gmail.com",
            "github_id": "naoto0804"
        },
        {
            "name": "Nathan Bendich",
            "github_id": "neonb88"
        },
        {
            "name": "Nathan Pahucki",
            "github_id": "npahucki"
        },
        {
            "name": "Nico Zevallos",
            "github_id": "gnastacast"
        },
        {
            "name": "Nutchanon Ninyawee",
            "email": "nutchanon@codustry.com",
            "github_id": "wasdee"
        },
        {
            "name": "Panteleris Paschalis",
            "github_id": "padeler"
        },
        {
            "name": "Pete Schwamb",
            "github_id": "ps2"
        },
        {
            "name": "Shiven Mian",
            "email": "shivenmian97@gmail.com",
            "github_id": "shivenmian"
        },
        {
            "name": "Sri Krishna",
            "github_id": "skrish13"
        },
        {
            "name": "Takashi Kaneda",
            "email": "takashi.kaneda@futurestandard.co.jp",
            "github_id": "kndt84"
        },
        {
            "name": "Viktor Richter",
            "email": "vrichter@posteo.de",
            "github_id": "vrichter"
        },
        {
            "name": "Vinjn Zhang",
            "github_id": "vinjn"
        },
        {
            "name": "Virag Varga",
            "github_id": "vvirag"
        },
        {
            "name": "Will Badart",
            "email": "will@willbadart.com",
            "github_id": "wbadart"
        },
        {
            "name": "Yuji Fujisaka",
            "email": "yujifujisaka@gmail.com",
            "github_id": "yujif"
        },
        {
            "name": "apatsekin",
            "email": "apatsekin@gmail.com",
            "github_id": "apatsekin"
        },
        {
            "name": "arc",
            "github_id": "arkceajin"
        },
        {
            "name": "cameron2018",
            "github_id": "cameron2018"
        },
        {
            "name": "Dennis Wittchen",
            "github_id": "derikon"
        },
        {
            "name": "NyaMisty",
            "github_id": "NyaMisty"
        },
        {
            "name": "raretomato",
            "github_id": "raretomato"
        },
        {
            "name": "sergionegri",
            "github_id": "sergionegri"
        },
        {
            "name": "tsimk",
            "github_id": "tsimk"
        },
        {
            "name": "xfanplus",
            "email": "xfanplus@gmail.com",
            "github_id": "xfanplus"
        },
        {
            "name": "xuyouzheng",
            "email": "oylzxyz@gmail.com",
            "github_id": "oylz"
        },
        {
            "name": "\u304a\u3044\u304c\u307f",
            "email": "oigami013@yahoo.co.jp",
            "github_id": "oigami"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/xar47x/pose",
            "stars": 3,
            "issues": true,
            "readme": "<div align=\"center\">\n    <img src=\".github/Logo_main_black.png\", width=\"300\">\n</div>\n\n-----------------\n\n|                  |`Default Config`  |`CUDA (+Python)`  |`CPU (+Python)`   |`OpenCL (+Python)`| `Debug`          | `Unity`          |\n| :---:            | :---:            | :---:            | :---:            | :---:            | :---:            | :---:            |\n| **`Linux`**   | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/1)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/2)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/3)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/4)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/5)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/6)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) |\n| **`MacOS`**   | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/7)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/7)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/8)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/9)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/10)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) | [![Status](https://travis-matrix-badges.herokuapp.com/repos/CMU-Perceptual-Computing-Lab/openpose/branches/master/11)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose) |\n| **`Windows`** | [![Status](https://ci.appveyor.com/api/projects/status/5leescxxdwen77kg/branch/master?svg=true)](https://ci.appveyor.com/project/gineshidalgo99/openpose/branch/master) | | | | |\n<!--\nNote: Currently using [travis-matrix-badges](https://github.com/bjfish/travis-matrix-badges) vs. traditional [![Build Status](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose.svg?branch=master)](https://travis-ci.org/CMU-Perceptual-Computing-Lab/openpose)\n-->\n\n[**OpenPose**](https://github.com/CMU-Perceptual-Computing-Lab/openpose) represents the **first real-time multi-person system to jointly detect human body, hand, facial, and foot keypoints (in total 135 keypoints) on single images**.\n\nIt is **authored by [Gines Hidalgo](https://www.gineshidalgo.com), [Zhe Cao](https://people.eecs.berkeley.edu/~zhecao), [Tomas Simon](http://www.cs.cmu.edu/~tsimon), [Shih-En Wei](https://scholar.google.com/citations?user=sFQD3k4AAAAJ&hl=en), [Hanbyul Joo](https://jhugestar.github.io), and [Yaser Sheikh](http://www.cs.cmu.edu/~yaser)**. Currently, it is being **maintained by [Gines Hidalgo](https://www.gineshidalgo.com) and [Yaadhav Raaj](https://www.raaj.tech)**. In addition, OpenPose would not be possible without the [**CMU Panoptic Studio dataset**](http://domedb.perception.cs.cmu.edu). We would also like to thank all the people who helped OpenPose in any way. The main contributors are listed in [doc/contributors.md](doc/contributors.md).\n\n<!-- The [original CVPR 2017 repo](https://github.com/ZheC/Multi-Person-Pose-Estimation) includes Matlab and Python versions, as well as the training code. The body pose estimation work is based on [the original ECCV 2016 demo](https://github.com/CMU-Perceptual-Computing-Lab/caffe_rtpose). -->\n\n\n<p align=\"center\">\n    <img src=\"doc/media/pose_face_hands.gif\", width=\"480\">\n    <br>\n    <sup>Authors <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gines Hidalgo</a> (left) and <a href=\"https://jhugestar.github.io\" target=\"_blank\">Hanbyul Joo</a> (right) in front of the <a href=\"http://domedb.perception.cs.cmu.edu\" target=\"_blank\">CMU Panoptic Studio</a></sup>\n</p>\n\n## Features\n- **Functionality**:\n    - **2D real-time multi-person keypoint detection**:\n        - 15 or 18 or **25-keypoint body/foot keypoint estimation**. **Running time invariant to number of detected people**.\n        - **6-keypoint foot keypoint estimation**. Integrated together with the 25-keypoint body/foot keypoint detector.\n        - **2x21-keypoint hand keypoint estimation**. Currently, **running time depends** on **number of detected people**.\n        - **70-keypoint face keypoint estimation**. Currently, **running time depends** on **number of detected people**.\n    - **3D real-time single-person keypoint detection**:\n        - 3-D triangulation from multiple single views.\n        - Synchronization of Flir cameras handled.\n        - Compatible with Flir/Point Grey cameras, but provided C++ demos to add your custom input.\n    - **Calibration toolbox**:\n        - Easy estimation of distortion, intrinsic, and extrinsic camera parameters.\n    - **Single-person tracking** for further speed up or visual smoothing.\n- **Input**: Image, video, webcam, Flir/Point Grey and IP camera. Included C++ demos to add your custom input.\n- **Output**: Basic image + keypoint display/saving (PNG, JPG, AVI, ...), keypoint saving (JSON, XML, YML, ...), and/or keypoints as array class.\n- **OS**: Ubuntu (14, 16), Windows (8, 10), Mac OSX, Nvidia TX2.\n- **Training and datasets**:\n    - [**OpenPose Training**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train).\n    - [**Foot dataset website**](https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/).\n- **Others**:\n    - Available: command-line demo, C++ wrapper, and C++ API.\n    - [**Python API**](doc/modules/python_module.md).\n    - [**Unity Plugin**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin).\n    - CUDA (Nvidia GPU), OpenCL (AMD GPU), and CPU-only (no GPU) versions.\n\n\n\n## Latest Features\n- Sep 2019: [**Training code released**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train)!\n- Jan 2019: [**Unity plugin released**](https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin)!\n- Jan 2019: [**Improved Python API**](doc/modules/python_module.md) released! Including body, face, hands, and all the functionality of the C++ API!\n- Dec 2018: [**Foot dataset released**](https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset) and [**new paper released**](https://arxiv.org/abs/1812.08008)!\n\nFor further details, check [all released features](doc/released_features.md) and [release notes](doc/release_notes.md).\n\n\n\n## Results\n### Body and Foot Estimation\n<p align=\"center\">\n    <img src=\"doc/media/dance_foot.gif\", width=\"360\">\n    <br>\n    <sup>Testing the <a href=\"https://www.youtube.com/watch?v=2DiQUX11YaY\" target=\"_blank\"><i>Crazy Uptown Funk flashmob in Sydney</i></a> video sequence with OpenPose</sup>\n</p>\n\n### 3-D Reconstruction Module (Body, Foot, Face, and Hands)\n<p align=\"center\">\n    <img src=\"doc/media/openpose3d.gif\", width=\"360\">\n    <br>\n    <sup>Testing the 3D Reconstruction Module of OpenPose</sup>\n</p>\n\n### Body, Foot, Face, and Hands Estimation\n<p align=\"center\">\n    <img src=\"doc/media/pose_face.gif\", width=\"360\">\n    <img src=\"doc/media/pose_hands.gif\", width=\"360\">\n    <br>\n    <sup>Authors <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gines Hidalgo</a> (left image) and <a href=\"http://www.cs.cmu.edu/~tsimon\" target=\"_blank\">Tomas Simon</a> (right image) testing OpenPose</sup>\n</p>\n\n### Unity Plugin\n<p align=\"center\">\n    <img src=\"doc/media/unity_main.png\", width=\"240\">\n    <img src=\"doc/media/unity_body_foot.png\", width=\"240\">\n    <img src=\"doc/media/unity_hand_face.png\", width=\"240\">\n    <br>\n    <sup><a href=\"http://tianyizhao.com\" target=\"_blank\">Tianyi Zhao</a> and <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gines Hidalgo</a> testing their <a href=\"https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin\" target=\"_blank\">OpenPose Unity Plugin</a></sup>\n</p>\n\n### Runtime Analysis\nInference time comparison between the 3 available pose estimation libraries: OpenPose, Alpha-Pose (fast Pytorch version), and Mask R-CNN:\n<p align=\"center\">\n    <img src=\"doc/media/openpose_vs_competition.png\", width=\"360\">\n</p>\nThis analysis was performed using the same images for each algorithm and a batch size of 1. Each analysis was repeated 1000 times and then averaged. This was all performed on a system with a Nvidia 1080 Ti and CUDA 8. Megvii (Face++) and MSRA GitHub repositories were excluded because they only provide pose estimation results given a cropped person. However, they suffer the same problem than Alpha-Pose and Mask R-CNN, their runtimes grow linearly with the number of people.\n\n\n\n## Contents\n1. [Features](#features)\n2. [Latest Features](#latest-features)\n3. [Results](#results)\n4. [Installation, Reinstallation and Uninstallation](#installation-reinstallation-and-uninstallation)\n5. [Quick Start](#quick-start)\n6. [Output](#output)\n7. [Speeding Up OpenPose and Benchmark](#speeding-up-openpose-and-benchmark)\n8. [Training Code and Foot Dataset](#training-code-and-foot-dataset)\n9. [Send Us Failure Cases and Feedback!](#send-us-failure-cases-and-feedback)\n10. [Citation](#citation)\n11. [License](#license)\n\n\n\n## Installation, Reinstallation and Uninstallation\n**Windows portable version**: Simply download and use the latest version from the [Releases](https://github.com/CMU-Perceptual-Computing-Lab/openpose/releases) section.\n\nOtherwise, check [doc/installation.md](doc/installation.md) for instructions on how to build OpenPose from source.\n\n\n\n## Quick Start\nMost users do not need the OpenPose C++/Python API, but can simply use the OpenPose Demo:\n\n- **OpenPose Demo**: To easily process images/video/webcam and display/save the results. See [doc/demo_overview.md](doc/demo_overview.md). E.g., run OpenPose in a video with:\n```\n# Ubuntu\n./build/examples/openpose/openpose.bin --video examples/media/video.avi\n:: Windows - Portable Demo\nbin\\OpenPoseDemo.exe --video examples\\media\\video.avi\n```\n\n- **Calibration toolbox**: To easily calibrate your cameras for 3-D OpenPose or any other stereo vision task. See [doc/modules/calibration_module.md](doc/modules/calibration_module.md).\n\n- **OpenPose C++ API**: If you want to read a specific input, and/or add your custom post-processing function, and/or implement your own display/saving, check the C++ API tutorial on [examples/tutorial_api_cpp/](examples/tutorial_api_cpp/) and [doc/library_introduction.md](doc/library_introduction.md). You can create your custom code on [examples/user_code/](examples/user_code/) and quickly compile it with CMake when compiling the whole OpenPose project. Quickly **add your custom code**: See [examples/user_code/README.md](examples/user_code/README.md) for further details.\n\n- **OpenPose Python API**: Analogously to the C++ API, find the tutorial for the Python API on [examples/tutorial_api_python/](examples/tutorial_api_python/).\n\n- **Adding an extra module**: Check [doc/library_add_new_module.md](./doc/library_add_new_module.md).\n\n- **Standalone face or hand detector**:\n    - **Face** keypoint detection **without body** keypoint detection: If you want to speed it up (but also reduce amount of detected faces), check the OpenCV-face-detector approach in [doc/standalone_face_or_hand_keypoint_detector.md](doc/standalone_face_or_hand_keypoint_detector.md).\n    - **Use your own face/hand detector**: You can use the hand and/or face keypoint detectors with your own face or hand detectors, rather than using the body detector. E.g., useful for camera views at which the hands are visible but not the body (OpenPose detector would fail). See [doc/standalone_face_or_hand_keypoint_detector.md](doc/standalone_face_or_hand_keypoint_detector.md).\n\n\n\n## Output\nOutput (format, keypoint index ordering, etc.) in [doc/output.md](doc/output.md).\n\n\n\n## Speeding Up OpenPose and Benchmark\nCheck the OpenPose Benchmark as well as some hints to speed up and/or reduce the memory requirements for OpenPose on [doc/speed_up_openpose.md](doc/speed_up_openpose.md).\n\n\n\n## Training Code and Foot Dataset\nFor training OpenPose, check [github.com/CMU-Perceptual-Computing-Lab/openpose_train](https://github.com/CMU-Perceptual-Computing-Lab/openpose_train).\n\nFor the foot dataset, check the [foot dataset website](https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/) and new [OpenPose paper](https://arxiv.org/abs/1812.08008) for more information.\n\n\n\n## Send Us Failure Cases and Feedback!\nOur library is open source for research purposes, and we want to continuously improve it! So please, let us know if...\n\n1. ... you find videos or images where OpenPose does not seems to work well. Feel free to send them to openposecmu@gmail.com (email only for failure cases!), we will use them to improve the quality of the algorithm!\n2. ... you find any bug (in functionality or speed).\n3. ... you added some functionality to some class or some new Worker<T> subclass which we might potentially incorporate.\n4. ... you know how to speed up or improve any part of the library.\n5. ... you have a request about possible functionality.\n6. ... etc.\n\nJust comment on GitHub or make a pull request and we will answer as soon as possible! Send us an email if you use the library to make a cool demo or YouTube video!\n\n\n\n## Citation\nPlease cite these papers in your publications if it helps your research. The body-foot model and any additional functionality (calibration, 3-D reconstruction, etc.) use `[Cao et al. 2018]`; the hand and face keypoint detectors use `[Cao et al. 2018]` and `[Simon et al. 2017]` (the face detector was trained using the same procedure than for hands); and the old (deprecated) body-only model uses `[Cao et al. 2017]`.\n\n    @inproceedings{cao2018openpose,\n      author = {Zhe Cao and Gines Hidalgo and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {arXiv preprint arXiv:1812.08008},\n      title = {Open{P}ose: realtime multi-person 2{D} pose estimation using {P}art {A}ffinity {F}ields},\n      year = {2018}\n    }\n\n    @inproceedings{simon2017hand,\n      author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n      year = {2017}\n    }\n\n    @inproceedings{cao2017realtime,\n      author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2017}\n    }\n\n    @inproceedings{wei2016cpm,\n      author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Convolutional pose machines},\n      year = {2016}\n    }\n\nLinks to the papers:\n\n- [OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1812.08008)\n- [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809)\n- [Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1611.08050)\n- [Convolutional Pose Machines](https://arxiv.org/abs/1602.00134)\n\n\n\n## License\nOpenPose is freely available for free non-commercial use, and may be redistributed under these conditions. Please, see the [license](LICENSE) for further details. Interested in a commercial license? Check this [FlintBox link](https://flintbox.com/public/project/47343/). For commercial queries, use the `Directly Contact Organization` section from the [FlintBox link](https://flintbox.com/public/project/47343/) and also send a copy of that message to [Yaser Sheikh](mailto:yaser@cs.cmu.edu).\n",
            "readme_url": "https://github.com/xar47x/pose",
            "frameworks": []
        }
    ],
    "references": [
        {
            "title": "Convolutional Pose Machines",
            "arxiv": "1602.00134",
            "year": 2016,
            "url": "http://arxiv.org/abs/1602.00134v4",
            "abstract": "Pose Machines provide a sequential prediction framework for learning rich\nimplicit spatial models. In this work we show a systematic design for how\nconvolutional networks can be incorporated into the pose machine framework for\nlearning image features and image-dependent spatial models for the task of pose\nestimation. The contribution of this paper is to implicitly model long-range\ndependencies between variables in structured prediction tasks such as\narticulated pose estimation. We achieve this by designing a sequential\narchitecture composed of convolutional networks that directly operate on belief\nmaps from previous stages, producing increasingly refined estimates for part\nlocations, without the need for explicit graphical model-style inference. Our\napproach addresses the characteristic difficulty of vanishing gradients during\ntraining by providing a natural learning objective function that enforces\nintermediate supervision, thereby replenishing back-propagated gradients and\nconditioning the learning procedure. We demonstrate state-of-the-art\nperformance and outperform competing methods on standard benchmarks including\nthe MPII, LSP, and FLIC datasets.",
            "authors": [
                "Shih-En Wei",
                "Varun Ramakrishna",
                "Takeo Kanade",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields",
            "arxiv": "1611.08050",
            "year": 2016,
            "url": "http://arxiv.org/abs/1611.08050v2",
            "abstract": "We present an approach to efficiently detect the 2D pose of multiple people\nin an image. The approach uses a nonparametric representation, which we refer\nto as Part Affinity Fields (PAFs), to learn to associate body parts with\nindividuals in the image. The architecture encodes global context, allowing a\ngreedy bottom-up parsing step that maintains high accuracy while achieving\nrealtime performance, irrespective of the number of people in the image. The\narchitecture is designed to jointly learn part locations and their association\nvia two branches of the same sequential prediction process. Our method placed\nfirst in the inaugural COCO 2016 keypoints challenge, and significantly exceeds\nthe previous state-of-the-art result on the MPII Multi-Person benchmark, both\nin performance and efficiency.",
            "authors": [
                "Zhe Cao",
                "Tomas Simon",
                "Shih-En Wei",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields",
            "arxiv": "1812.08008",
            "year": 2018,
            "url": "http://arxiv.org/abs/1812.08008v2",
            "abstract": "Realtime multi-person 2D pose estimation is a key component in enabling\nmachines to have an understanding of people in images and videos. In this work,\nwe present a realtime approach to detect the 2D pose of multiple people in an\nimage. The proposed method uses a nonparametric representation, which we refer\nto as Part Affinity Fields (PAFs), to learn to associate body parts with\nindividuals in the image. This bottom-up system achieves high accuracy and\nrealtime performance, regardless of the number of people in the image. In\nprevious work, PAFs and body part location estimation were refined\nsimultaneously across training stages. We demonstrate that a PAF-only\nrefinement rather than both PAF and body part location refinement results in a\nsubstantial increase in both runtime performance and accuracy. We also present\nthe first combined body and foot keypoint detector, based on an internal\nannotated foot dataset that we have publicly released. We show that the\ncombined detector not only reduces the inference time compared to running them\nsequentially, but also maintains the accuracy of each component individually.\nThis work has culminated in the release of OpenPose, the first open-source\nrealtime system for multi-person 2D pose detection, including body, foot, hand,\nand facial keypoints.",
            "authors": [
                "Zhe Cao",
                "Gines Hidalgo",
                "Tomas Simon",
                "Shih-En Wei",
                "Yaser Sheikh"
            ]
        },
        {
            "title": "Hand Keypoint Detection in Single Images using Multiview Bootstrapping",
            "arxiv": "1704.07809",
            "year": 2017,
            "url": "http://arxiv.org/abs/1704.07809v1",
            "abstract": "We present an approach that uses a multi-camera system to train fine-grained\ndetectors for keypoints that are prone to occlusion, such as the joints of a\nhand. We call this procedure multiview bootstrapping: first, an initial\nkeypoint detector is used to produce noisy labels in multiple views of the\nhand. The noisy detections are then triangulated in 3D using multiview geometry\nor marked as outliers. Finally, the reprojected triangulations are used as new\nlabeled training data to improve the detector. We repeat this process,\ngenerating more labeled data in each iteration. We derive a result analytically\nrelating the minimum number of views to achieve target true and false positive\nrates for a given detector. The method is used to train a hand keypoint\ndetector for single images. The resulting keypoint detector runs in realtime on\nRGB images and has accuracy comparable to methods that use depth sensors. The\nsingle view detector, triangulated over multiple views, enables 3D markerless\nhand motion capture with complex object interactions.",
            "authors": [
                "Tomas Simon",
                "Hanbyul Joo",
                "Iain Matthews",
                "Yaser Sheikh"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "**CMU Panoptic Studio dataset**",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "http://domedb.perception.cs.cmu.edu"
                    }
                }
            },
            {
                "name": "**Foot dataset website**",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/"
                    }
                }
            },
            {
                "name": "**Foot dataset released**",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset"
                    }
                }
            },
            {
                "name": "foot dataset website",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "https://cmu-perceptual-computing-lab.github.io/foot_keypoint_dataset/"
                    }
                }
            },
            {
                "name": "MSRA"
            },
            {
                "name": "MPII Multi-Person"
            },
            {
                "name": "COCO"
            },
            {
                "name": "OCCLUSION"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999978606036795,
        "task": "Pose Estimation",
        "task_prob": 0.9885901589397392
    }
}