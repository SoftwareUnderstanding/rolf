{
    "visibility": {
        "visibility": "public",
        "license": "GNU General Public License v3.0"
    },
    "name": "AdaIN-pytorch",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "aadhithya",
                "owner_type": "User",
                "name": "AdaIN-pytorch",
                "url": "https://github.com/aadhithya/AdaIN-pytorch",
                "stars": 4,
                "pushed_at": "2021-04-26 16:25:30+00:00",
                "created_at": "2021-01-28 16:43:44+00:00",
                "language": "Python",
                "description": "PyTorch implementation of \"Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization\" by Xun Huang, Serge Belongie.",
                "license": "GNU General Public License v3.0",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "c88e38892486083a67dc1548a470bd1567f12613",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/.gitignore"
                    }
                },
                "size": 1911
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "f288702d2fa16d3cdf0035b15a9fcbc552cd88e7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/LICENSE"
                    }
                },
                "size": 35149
            },
            {
                "type": "code",
                "name": "data.py",
                "sha": "3a9f3975d00d339574cb28f7fc9a1341c39ae885",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/data.py"
                    }
                },
                "size": 3688
            },
            {
                "type": "code",
                "name": "export.py",
                "sha": "8a615b2cbfc9cd07268e1b45c631fbd8d329b6a1",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/export.py"
                    }
                },
                "size": 1055
            },
            {
                "type": "code",
                "name": "infer.py",
                "sha": "5f5b52b5b09e5a0d0a86459faa64c86987f10771",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/infer.py"
                    }
                },
                "size": 1820
            },
            {
                "type": "code",
                "name": "logger.py",
                "sha": "9c845021572b09e19367ae07215dc8a9e8b792e3",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/logger.py"
                    }
                },
                "size": 457
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "7197bd75420354c6fc0e9bfa022d9b074d32e295",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/main.py"
                    }
                },
                "size": 3562
            },
            {
                "type": "code",
                "name": "model.py",
                "sha": "47a1fe5f05342f7f00bb603fc8243c03fd21644a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/model.py"
                    }
                },
                "size": 5660
            },
            {
                "type": "code",
                "name": "outs",
                "sha": "e6875b9d036e1588618f42b3499a9b45a100be31",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/tree/master/outs"
                    }
                },
                "num_files": 7
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "3fbd24b6c7291bb61bfc1ab55ed147fe4248632b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/requirements.txt"
                    }
                },
                "size": 180
            },
            {
                "type": "code",
                "name": "tensorboard.sh",
                "sha": "824a6f811318ca81018a8e8a9735427c3e1552f8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/tensorboard.sh"
                    }
                },
                "size": 119
            },
            {
                "type": "code",
                "name": "tests",
                "sha": "5de92a575eeeaa8896775e7481416ca9d2e047f6",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/tree/master/tests"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "30b08e360d6d58025f298170113f916b390b3dfe",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/train.py"
                    }
                },
                "size": 8264
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "d7edd6bd94715843597ee395b71a7305570cf924",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/aadhithya/AdaIN-pytorch/blob/master/utils.py"
                    }
                },
                "size": 1678
            }
        ]
    },
    "authors": [
        {
            "name": "Aadhithya Sankar (\u0b86\u0ba4\u0bbf\u0ba4\u0bcd\u0baf\u0bbe \u0b9a\u0b99\u0bcd\u0b95\u0bb0\u0bcd)",
            "email": "a.sankar@tum.de",
            "github_id": "aadhithya"
        }
    ],
    "tags": [],
    "description": "PyTorch implementation of \"Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization\" by Xun Huang, Serge Belongie.",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/aadhithya/AdaIN-pytorch",
            "stars": 4,
            "issues": true,
            "readme": "# AdaIN-pytorch\nPyTorch implementation of \"Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization\" by Xun Huang, Serge Belongie. [arxiv](https://arxiv.org/abs/1703.06868).\n\n## 0. References\n- [irasin/Pytorch_AdaIN](https://github.com/irasin/Pytorch_AdaIN/)\n\n## 1. Set up and train model\n### 1.1 install requirements\n`pip install -r requitements.txt`\n\n### 1.2 get the datasets and unzip them to desired location\n- COCO: https://cocodataset.org/#download\n- WikiArt: https://www.kaggle.com/c/painter-by-numbers/data\n\n### 1.3 Train model\n- to start training:\n    `python main.py train path/to/coco path/to/wikiart [OPTIONS]`\n\n- to change training parameters and options:\n  `python main.py train --help`\n\n## 2. Style Transfer using pre-trained model\n- to run inference:\n    `python main.py infer [OPTIONS]`\n- info on supported options:\n  `python main.py infer --help`\n\n## 3. Some Results\n- All images were resized to 1024x1024 for inference. The 1024x1024 outputs are interpolated to the original size using bilinear interpolation.\n\n| Content Img   |      Style Img      |  Output |\n|----------|:-------------:|------:|\n| <img src=\"./outs/contents/taj.jpg\" width=\"384px\"/> |  <img src=\"./outs/styles/starry.jpg\" width=\"384px\"/> | <img src=\"./outs/taj.jpg\" width=\"384px\"/> |\n| <img src=\"./outs/contents/tanjore.jpg\" width=\"384px\"/> |  <img src=\"./outs/styles/olives.jpg\" width=\"384px\"/> | <img src=\"./outs/output.jpg\" width=\"384px\"/> |\n| <img src=\"./outs/contents/arr.jpg\" width=\"384px\"/> |  <img src=\"./outs/styles/vg.jpg\" width=\"384px\"/> | <img src=\"./outs/arr1.jpg\" width=\"384px\"/> |\n",
            "readme_url": "https://github.com/aadhithya/AdaIN-pytorch",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization",
            "arxiv": "1703.06868",
            "year": 2017,
            "url": "http://arxiv.org/abs/1703.06868v2",
            "abstract": "Gatys et al. recently introduced a neural algorithm that renders a content\nimage in the style of another image, achieving so-called style transfer.\nHowever, their framework requires a slow iterative optimization process, which\nlimits its practical application. Fast approximations with feed-forward neural\nnetworks have been proposed to speed up neural style transfer. Unfortunately,\nthe speed improvement comes at a cost: the network is usually tied to a fixed\nset of styles and cannot adapt to arbitrary new styles. In this paper, we\npresent a simple yet effective approach that for the first time enables\narbitrary style transfer in real-time. At the heart of our method is a novel\nadaptive instance normalization (AdaIN) layer that aligns the mean and variance\nof the content features with those of the style features. Our method achieves\nspeed comparable to the fastest existing approach, without the restriction to a\npre-defined set of styles. In addition, our approach allows flexible user\ncontrols such as content-style trade-off, style interpolation, color & spatial\ncontrols, all using a single feed-forward neural network.",
            "authors": [
                "Xun Huang",
                "Serge Belongie"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "COCO"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9597980810490346,
        "task": "Object Detection",
        "task_prob": 0.8432075483987674
    }
}