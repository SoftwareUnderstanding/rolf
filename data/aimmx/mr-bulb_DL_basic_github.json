{
    "visibility": {
        "visibility": "public",
        "license": "Apache License 2.0"
    },
    "name": "DL_basic_github",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "mr-bulb",
                "owner_type": "User",
                "name": "DL_basic_github",
                "url": "https://github.com/mr-bulb/DL_basic_github",
                "stars": 0,
                "pushed_at": "2018-07-06 12:37:04+00:00",
                "created_at": "2018-07-04 13:59:03+00:00",
                "language": "Python",
                "description": "This is  a repo to implement basic network model by PyTorch",
                "license": "Apache License 2.0",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "a65d04669c3dd34cfd1f4778e26734202f791bc2",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mr-bulb/DL_basic_github/blob/master/.gitignore"
                    }
                },
                "size": 713
            },
            {
                "type": "code",
                "name": "AlexNet",
                "sha": "059539ae5993422c2dff47c10e27a9a78c12b455",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mr-bulb/DL_basic_github/tree/master/AlexNet"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "LICENSE.md",
                "sha": "427417b60d598d0099a7d786078c983f9dd6bd02",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mr-bulb/DL_basic_github/blob/master/LICENSE.md"
                    }
                },
                "size": 11358
            },
            {
                "type": "code",
                "name": "LeNet-5",
                "sha": "182105fff82d91a0fb3359771cc7079385489f06",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mr-bulb/DL_basic_github/tree/master/LeNet-5"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "data",
                "sha": "2ee5143398030d496cc25a69a239eef523beade2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/mr-bulb/DL_basic_github/tree/master/data"
                    }
                },
                "num_files": 2
            }
        ]
    },
    "authors": [
        {
            "name": "mr-bulb",
            "github_id": "mr-bulb"
        }
    ],
    "tags": [],
    "description": "This is  a repo to implement basic network model by PyTorch",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/mr-bulb/DL_basic_github",
            "stars": 0,
            "issues": true,
            "readme": "# DL_basic_github\n\n[TOC]\n\n------\n\n## About\n\nThis is  a repo to implement basic network model by PyTorch\n\n\n\n## DL Model\n\n### 1. LeNet-5\n\n- Paper : http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf\n\n- [x] Read the Paper\n- [x] Construct the model\n\n### 2. AlexNet\n\n- Paper : https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf\n\n- [ ] Read the Paper\n- [ ] Construct the model\n\n### 3. GoogLeNet\n\n- Paper : https://www.cs.unc.edu/~wliu/papers/GoogLeNet.pdf\n- [ ] Read the Paper\n- [ ] Construct the model\n\n### 4. VGGNet\n\n- Paper : https://arxiv.org/abs/1409.1556\n- [ ] Read the Paper\n- [ ] Construct the model\n\n### 5. ResNet\n\n- Paper : https://arxiv.org/abs/1512.03385\n- [ ] Read the Paper\n- [ ] Construct the model\n\n\n\n## Dependencies\n\n- [Python 2.7 ](https://www.continuum.io/downloads)\n- [PyTorch 0.1.12](http://pytorch.org/)\n\n \n\n## Getting Started\n\n### Create Conda environments\n\n```shell\nconda create -n py27 python=2.7\nsource activate py27\nconda install pytorch=0.1.12 -c soumith\nconda install torchvision\n```\n\n### Run Experiment\n\n```shell\ngit clone https://github.com/mr-bulb/DL_basic_github.git\ncd DL_basic_github/LeNet-5\nchmod +x ./run.sh\n./run.sh\n```\n\n### Visualize The Result\n\n```shell\npython visual-error.py\npython visual-loss.py\n```\n\n\n\n## Author\n\nHao Zeng/ [@mr-bulb](https://github.com/mr-bulb)\n\n\n\n## License\n\nLicensed under an [Apache-2.0](https://github.com/dmlc/mxnet/blob/master/LICENSE) license.",
            "readme_url": "https://github.com/mr-bulb/DL_basic_github",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Deep Residual Learning for Image Recognition",
            "arxiv": "1512.03385",
            "year": 2015,
            "url": "http://arxiv.org/abs/1512.03385v1",
            "abstract": "Deeper neural networks are more difficult to train. We present a residual\nlearning framework to ease the training of networks that are substantially\ndeeper than those used previously. We explicitly reformulate the layers as\nlearning residual functions with reference to the layer inputs, instead of\nlearning unreferenced functions. We provide comprehensive empirical evidence\nshowing that these residual networks are easier to optimize, and can gain\naccuracy from considerably increased depth. On the ImageNet dataset we evaluate\nresidual nets with a depth of up to 152 layers---8x deeper than VGG nets but\nstill having lower complexity. An ensemble of these residual nets achieves\n3.57% error on the ImageNet test set. This result won the 1st place on the\nILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100\nand 1000 layers.\n  The depth of representations is of central importance for many visual\nrecognition tasks. Solely due to our extremely deep representations, we obtain\na 28% relative improvement on the COCO object detection dataset. Deep residual\nnets are foundations of our submissions to ILSVRC & COCO 2015 competitions,\nwhere we also won the 1st places on the tasks of ImageNet detection, ImageNet\nlocalization, COCO detection, and COCO segmentation.",
            "authors": [
                "Kaiming He",
                "Xiangyu Zhang",
                "Shaoqing Ren",
                "Jian Sun"
            ]
        },
        {
            "title": "Very Deep Convolutional Networks for Large-Scale Image Recognition",
            "arxiv": "1409.1556",
            "year": 2014,
            "url": "http://arxiv.org/abs/1409.1556v6",
            "abstract": "In this work we investigate the effect of the convolutional network depth on\nits accuracy in the large-scale image recognition setting. Our main\ncontribution is a thorough evaluation of networks of increasing depth using an\narchitecture with very small (3x3) convolution filters, which shows that a\nsignificant improvement on the prior-art configurations can be achieved by\npushing the depth to 16-19 weight layers. These findings were the basis of our\nImageNet Challenge 2014 submission, where our team secured the first and the\nsecond places in the localisation and classification tracks respectively. We\nalso show that our representations generalise well to other datasets, where\nthey achieve state-of-the-art results. We have made our two best-performing\nConvNet models publicly available to facilitate further research on the use of\ndeep visual representations in computer vision.",
            "authors": [
                "Karen Simonyan",
                "Andrew Zisserman"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "MR"
            },
            {
                "name": "ImageNet"
            },
            {
                "name": "ILSVRC 2015"
            },
            {
                "name": "COCO"
            },
            {
                "name": "ImageNet Detection"
            },
            {
                "name": "CIFAR-10"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999996602566652,
        "task": "Object Detection",
        "task_prob": 0.9856889055847771
    }
}