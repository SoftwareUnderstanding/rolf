{
    "visibility": {
        "visibility": "public",
        "license": "Apache License 2.0"
    },
    "name": "Inception Score",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "tsc2017",
                "owner_type": "User",
                "name": "Inception-Score",
                "url": "https://github.com/tsc2017/Inception-Score",
                "stars": 71,
                "pushed_at": "2020-06-20 07:37:39+00:00",
                "created_at": "2018-04-10 03:36:09+00:00",
                "language": "Python",
                "description": "CPU/GPU/TPU implementation of the Inception Score",
                "license": "Apache License 2.0",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "261eeb9e9f8b2b4b0d119366dda99c6fd7d35c64",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/tsc2017/Inception-Score/blob/master/LICENSE"
                    }
                },
                "size": 11357
            },
            {
                "type": "code",
                "name": "TF1",
                "sha": "1b4c4e59ad11f0ef9401b72f56b33f6f1e0fb2c2",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/tsc2017/Inception-Score/tree/master/TF1"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "inception_score.py",
                "sha": "a5fad6057f162d86ab5caf9d34529375246af1ad",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/tsc2017/Inception-Score/blob/master/inception_score.py"
                    }
                },
                "size": 3567
            },
            {
                "type": "code",
                "name": "inception_score_tpu.py",
                "sha": "768835e8ebadb01d4001d9fc36060a818bde37b9",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/tsc2017/Inception-Score/blob/master/inception_score_tpu.py"
                    }
                },
                "size": 4239
            }
        ]
    },
    "authors": [
        {
            "name": "Shichang Tang",
            "email": "tangshch@shanghaitech.edu.cn",
            "github_id": "tsc2017"
        }
    ],
    "tags": [
        "gan",
        "inception-score",
        "deep-learning",
        "generative-model",
        "generative-adversarial-network"
    ],
    "description": "CPU/GPU/TPU implementation of the Inception Score",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/tsc2017/Inception-Score",
            "stars": 71,
            "issues": true,
            "readme": "Inception Score\n=====================================\n\nTensorflow implementation of the \"Inception Score\" (IS) for the evaluation of generative models, with a bug raised in [https://github.com/openai/improved-gan/issues/29](https://github.com/openai/improved-gan/issues/29) fixed. \n\n## Major Dependencies\n- `tensorflow==1.14` or (`tensorflow==1.15` and `tensorflow-gan==1.0.0.dev0`) or (`tensorflow>=2` and `tensorflow-gan>=2.0.0`)\n## Features\n- Fast, easy-to-use and memory-efficient, written in a way that is similar to the original implementation\n- No prior knowledge about Tensorflow is necessary if your are using CPUs or GPUs\n- Makes use of [TF-GAN](https://github.com/tensorflow/gan)\n- Downloads InceptionV1 automatically\n- Compatible with both Python 2 and Python 3\n\n## Usage\n- If you are working with GPUs, use `inception_score.py`; if you are working with TPUs, use `inception_score_tpu.py` and pass a Tensorflow Session and a [TPUStrategy](https://www.tensorflow.org/api_docs/python/tf/distribute/experimental/TPUStrategy) as additional arguments.\n- Call `get_inception_score(images, splits=10)`, where `images` is a numpy array with values ranging from 0 to 255 and shape in the form `[N, 3, HEIGHT, WIDTH]` where `N`, `HEIGHT` and `WIDTH` can be arbitrary. `dtype` of the images is recommended to be `np.uint8` to save CPU memory.\n- A smaller `BATCH_SIZE` reduces GPU/TPU memory usage, but at the cost of a slight slowdown.\n- If you want to compute a general \"Classifier Score\" with probabilities `preds` from another classifier, call `preds2score(preds, splits=10)`. `preds` can be a numpy array of arbitrary shape `[N, num_classes]`.\n## Examples\nGPU: [![Example In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1hgJJI5wuILxcHsmrkZMkHJtk6uDlKOwr?usp=sharing)\n\nTPU and TF1: [![Example In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1F0fXOKlzIkOSEAdIRa9oyacW34SUX2_v?usp=sharing)\n\nTPU and TF2: [![Example In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1Cb8erVc-v6zCG-cLfOWCIjFZPl5zQ4jl?usp=sharing) \n\n## Links\n- The Inception Score was proposed in the paper [Improved Techniques for Training GANs](https://arxiv.org/abs/1606.03498)\n- Code for the [Fr\u00e9chet Inception Distance](https://github.com/tsc2017/Frechet-Inception-Distance)\n",
            "readme_url": "https://github.com/tsc2017/Inception-Score",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Improved Techniques for Training GANs",
            "arxiv": "1606.03498",
            "year": 2016,
            "url": "http://arxiv.org/abs/1606.03498v1",
            "abstract": "We present a variety of new architectural features and training procedures\nthat we apply to the generative adversarial networks (GANs) framework. We focus\non two applications of GANs: semi-supervised learning, and the generation of\nimages that humans find visually realistic. Unlike most work on generative\nmodels, our primary goal is not to train a model that assigns high likelihood\nto test data, nor do we require the model to be able to learn well without\nusing any labels. Using our new techniques, we achieve state-of-the-art results\nin semi-supervised classification on MNIST, CIFAR-10 and SVHN. The generated\nimages are of high quality as confirmed by a visual Turing test: our model\ngenerates MNIST samples that humans cannot distinguish from real data, and\nCIFAR-10 samples that yield a human error rate of 21.3%. We also present\nImageNet samples with unprecedented resolution and show that our methods enable\nthe model to learn recognizable features of ImageNet classes.",
            "authors": [
                "Tim Salimans",
                "Ian Goodfellow",
                "Wojciech Zaremba",
                "Vicki Cheung",
                "Alec Radford",
                "Xi Chen"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999960894828379,
        "task": "Image Generation",
        "task_prob": 0.9553240658273812
    },
    "training": {
        "datasets": [
            {
                "name": "SVHN"
            },
            {
                "name": "MNIST"
            },
            {
                "name": "CIFAR-10"
            },
            {
                "name": "ImageNet"
            }
        ]
    }
}