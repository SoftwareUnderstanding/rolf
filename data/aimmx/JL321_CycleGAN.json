{
    "visibility": {
        "visibility": "public"
    },
    "name": "Cycle Consistent Generative Adversarial Networks",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "JL321",
                "owner_type": "User",
                "name": "CycleGAN",
                "url": "https://github.com/JL321/CycleGAN",
                "stars": 0,
                "pushed_at": "2019-08-04 22:35:56+00:00",
                "created_at": "2019-03-06 22:42:37+00:00",
                "language": "Python",
                "description": "Implementation of CycleGAN from https://arxiv.org/pdf/1703.10593.pdf (TF)",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": "cycleGAN.py",
                "sha": "a97f68a31cada7b6b6ad25b250e278b3c8270962",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/JL321/CycleGAN/blob/master/cycleGAN.py"
                    }
                },
                "size": 23732
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "1ba32f217401c52a924c12d7192da208ffdae5c9",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/JL321/CycleGAN/blob/master/main.py"
                    }
                },
                "size": 1668
            },
            {
                "type": "code",
                "name": "ops.py",
                "sha": "daa85452f4b9640ce4ba224ff6aa0215af339e8e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/JL321/CycleGAN/blob/master/ops.py"
                    }
                },
                "size": 3226
            },
            {
                "type": "code",
                "name": "util.py",
                "sha": "bc40401dab525ebfbbf07c309167ae7f196b3870",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/JL321/CycleGAN/blob/master/util.py"
                    }
                },
                "size": 804
            }
        ]
    },
    "authors": [
        {
            "name": "JL321",
            "email": "james.liangyy@gmail.com",
            "github_id": "JL321"
        }
    ],
    "tags": [],
    "description": "Implementation of CycleGAN from https://arxiv.org/pdf/1703.10593.pdf (TF)",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/JL321/CycleGAN",
            "stars": 0,
            "issues": true,
            "readme": "# Cycle Consistent Generative Adversarial Networks\n\nTensorflow implementation of (https://arxiv.org/pdf/1703.10593.pdf). \n\n## Overview\n\nCycle Consistent GANs are an adaptation of Generative Adversarial Networks, in which the resulting model has the capability of performing domain adaptation between two datasets of varying domains. Again- unpaired! Images between datasets don't need to be directly matched, as the additional cycle consistency term added within the CycleGAN model allows for additional stability within training - of which pressures output domains to be consistent.\n\nSample mappings shown above.\n\n![Mappings](https://camo.githubusercontent.com/2fadde78dccf4d61f1294933c3e8083c07a303c7/68747470733a2f2f6a756e79616e7a2e6769746875622e696f2f4379636c6547414e2f696d616765732f6f626a656374732e6a7067)\n\n## Prerequisites\n\nDataset available at https://github.com/junyanz/CycleGAN (horse2zebra preferred, else change image dimensions). Alter path names in main for local directory for proper usage. \n\nPackages Required in Environment:\n- Tensorflow\n- CV2\n- Numpy\n- Matplotlib\n\nGPU training is preferred.\n\n## Execution\n\nTo execute the program, use the following command whilst in terminal:\n```\npython main.py\n```\n",
            "readme_url": "https://github.com/JL321/CycleGAN",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks",
            "arxiv": "1703.10593",
            "year": 2017,
            "url": "http://arxiv.org/abs/1703.10593v7",
            "abstract": "Image-to-image translation is a class of vision and graphics problems where\nthe goal is to learn the mapping between an input image and an output image\nusing a training set of aligned image pairs. However, for many tasks, paired\ntraining data will not be available. We present an approach for learning to\ntranslate an image from a source domain $X$ to a target domain $Y$ in the\nabsence of paired examples. Our goal is to learn a mapping $G: X \\rightarrow Y$\nsuch that the distribution of images from $G(X)$ is indistinguishable from the\ndistribution $Y$ using an adversarial loss. Because this mapping is highly\nunder-constrained, we couple it with an inverse mapping $F: Y \\rightarrow X$\nand introduce a cycle consistency loss to push $F(G(X)) \\approx X$ (and vice\nversa). Qualitative results are presented on several tasks where paired\ntraining data does not exist, including collection style transfer, object\ntransfiguration, season transfer, photo enhancement, etc. Quantitative\ncomparisons against several prior methods demonstrate the superiority of our\napproach.",
            "authors": [
                "Jun-Yan Zhu",
                "Taesung Park",
                "Phillip Isola",
                "Alexei A. Efros"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999483538621985,
        "task": "Image-to-Image Translation",
        "task_prob": 0.9877751320766288
    }
}