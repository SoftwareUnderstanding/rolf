{
    "visibility": {
        "visibility": "public"
    },
    "name": "SRGAN",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "maiyuxiaoge",
                "owner_type": "User",
                "name": "srgan",
                "url": "https://github.com/maiyuxiaoge/srgan",
                "stars": 0,
                "pushed_at": "2020-06-20 10:21:32+00:00",
                "created_at": "2020-05-12 00:08:11+00:00",
                "language": "Python",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "cdfd5916fcf79915194c5c6745cf5943ebfcf911",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/.gitignore"
                    }
                },
                "size": 1844
            },
            {
                "type": "code",
                "name": "ECE228_report.pdf",
                "sha": "a29f8b1bb7356e28093af474a1f8040f93b3e636",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/ECE228_report.pdf"
                    }
                },
                "size": 16091943
            },
            {
                "type": "code",
                "name": "SRGAN_2.0.ipynb",
                "sha": "fdbfcd2be06d9a1a5b26e5a881507de220d1712e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/SRGAN_2.0.ipynb"
                    }
                },
                "size": 19450
            },
            {
                "type": "code",
                "name": "bicubic.py",
                "sha": "2a94b53babb5d1517f7f7f7ec3017e4c920f77bc",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/bicubic.py"
                    }
                },
                "size": 1885
            },
            {
                "type": "code",
                "name": "dataloader.py",
                "sha": "33014e5df8bba836d0d0dd679c2ddcf3ebebc51f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/dataloader.py"
                    }
                },
                "size": 2074
            },
            {
                "type": "code",
                "name": "evaluate.py",
                "sha": "95be268475bd4a6d45d5bd7504f0fb952e5568ad",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/evaluate.py"
                    }
                },
                "size": 2401
            },
            {
                "type": "code",
                "name": "log",
                "sha": "635d77de0854a995d806984b3bbc41c852a01862",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/tree/master/log"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "srcnn.py",
                "sha": "0734780b400443e0b79f95ee26a2302c125a3547",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/srcnn.py"
                    }
                },
                "size": 946
            },
            {
                "type": "code",
                "name": "srgan.py",
                "sha": "b37844c42f388c4635053affc0d4cbfab1ada796",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/srgan.py"
                    }
                },
                "size": 6365
            },
            {
                "type": "code",
                "name": "srgan_paper.py",
                "sha": "1b2e316a12b25989853e105585d018134432038e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/srgan_paper.py"
                    }
                },
                "size": 3761
            },
            {
                "type": "code",
                "name": "srresnet.py",
                "sha": "d911feb4f37349adfc9cc6ccdc6dd14331722249",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/srresnet.py"
                    }
                },
                "size": 1844
            },
            {
                "type": "code",
                "name": "test_image",
                "sha": "6bac441def02f1a9d5e5bcd4982b912c292b5059",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/tree/master/test_image"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "train_srcnn.py",
                "sha": "87f967097027195db02219565b7198b4916546af",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/train_srcnn.py"
                    }
                },
                "size": 2521
            },
            {
                "type": "code",
                "name": "train_srgan.py",
                "sha": "54dd65044b3f3ea65bfdbeab63d21654fb037ca7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/train_srgan.py"
                    }
                },
                "size": 4550
            },
            {
                "type": "code",
                "name": "train_srresnet.py",
                "sha": "363873711c48fd64dc8304469890860a0fdd2a0a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/train_srresnet.py"
                    }
                },
                "size": 2590
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "75b5ef47f38daf90deaacb05b8450d3c7a473e7a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/maiyuxiaoge/srgan/blob/master/utils.py"
                    }
                },
                "size": 510
            }
        ]
    },
    "authors": [
        {
            "name": "maiyuxiaoge",
            "github_id": "maiyuxiaoge"
        },
        {
            "name": "HongquanZhang9",
            "github_id": "HongquanZhang9"
        }
    ],
    "tags": [],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/maiyuxiaoge/srgan",
            "stars": 0,
            "issues": true,
            "readme": "# SRGAN\n\nClass project for ECE228 Machine Learning\n\nGroup Member: Xupeng Yu, Hongquan Zhang, Guoren Zhong\n\n- This is our own implement of SRGAN baseed on Tensorflow2 and Tensorlayer.\n\n## Usage:\n- Training:\n  Each of the three models has its own training code. To train each model, just run:\n> python train_srcnn.py <br/>\n> python train_srresnet.py <br/>\n> python train_srgan.py <br/>\n- Testing:\n  The three models have the same evaluation process. To test each model,run:\n> python evaluate.py -m MODEL #The model youwant to test,here we support ['srcnn','srresnet','srgan']\n  \n## Reference:\n- [1] [Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network] [https://arxiv.org/abs/1609.04802]\n- [2] [Image Super-Resolution Using Deep Convolutional Networks] [http://mmlab.ie.cuhk.edu.hk/projects/SRCNN.html] \n",
            "readme_url": "https://github.com/maiyuxiaoge/srgan",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network",
            "arxiv": "1609.04802",
            "year": 2016,
            "url": "http://arxiv.org/abs/1609.04802v5",
            "abstract": "Despite the breakthroughs in accuracy and speed of single image\nsuper-resolution using faster and deeper convolutional neural networks, one\ncentral problem remains largely unsolved: how do we recover the finer texture\ndetails when we super-resolve at large upscaling factors? The behavior of\noptimization-based super-resolution methods is principally driven by the choice\nof the objective function. Recent work has largely focused on minimizing the\nmean squared reconstruction error. The resulting estimates have high peak\nsignal-to-noise ratios, but they are often lacking high-frequency details and\nare perceptually unsatisfying in the sense that they fail to match the fidelity\nexpected at the higher resolution. In this paper, we present SRGAN, a\ngenerative adversarial network (GAN) for image super-resolution (SR). To our\nknowledge, it is the first framework capable of inferring photo-realistic\nnatural images for 4x upscaling factors. To achieve this, we propose a\nperceptual loss function which consists of an adversarial loss and a content\nloss. The adversarial loss pushes our solution to the natural image manifold\nusing a discriminator network that is trained to differentiate between the\nsuper-resolved images and original photo-realistic images. In addition, we use\na content loss motivated by perceptual similarity instead of similarity in\npixel space. Our deep residual network is able to recover photo-realistic\ntextures from heavily downsampled images on public benchmarks. An extensive\nmean-opinion-score (MOS) test shows hugely significant gains in perceptual\nquality using SRGAN. The MOS scores obtained with SRGAN are closer to those of\nthe original high-resolution images than to those obtained with any\nstate-of-the-art method.",
            "authors": [
                "Christian Ledig",
                "Lucas Theis",
                "Ferenc Huszar",
                "Jose Caballero",
                "Andrew Cunningham",
                "Alejandro Acosta",
                "Andrew Aitken",
                "Alykhan Tejani",
                "Johannes Totz",
                "Zehan Wang",
                "Wenzhe Shi"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "CUHK"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999711209928338,
        "task": "Image Generation",
        "task_prob": 0.9166894776708117
    }
}