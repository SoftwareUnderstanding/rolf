{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "big-sleep",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "lucidrains",
                "owner_type": "User",
                "name": "big-sleep",
                "url": "https://github.com/lucidrains/big-sleep",
                "stars": 1794,
                "pushed_at": "2022-02-06 18:04:34+00:00",
                "created_at": "2021-01-18 19:35:36+00:00",
                "language": "Python",
                "description": "A simple command line tool for text to image generation, using OpenAI's CLIP and a BigGAN. Technique was originally created by https://twitter.com/advadnoun",
                "license": "MIT License",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "25fb69e4b6270dbc52070e5bf3b85ed32a35f9ad",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/tree/main/.github"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "94b40a3de76e9b0ec82bd136921223b00d2fdcf1",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/blob/main/.gitignore"
                    }
                },
                "size": 1814
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "9e4352d7745892c22d78e87483ec1f8ec42641b4",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/blob/main/LICENSE"
                    }
                },
                "size": 1080
            },
            {
                "type": "code",
                "name": "MANIFEST.in",
                "sha": "435ad5f2c13a4aa4b70424a120fb2d64ce4c3d8b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/blob/main/MANIFEST.in"
                    }
                },
                "size": 34
            },
            {
                "type": "code",
                "name": "big_sleep",
                "sha": "d64ece3b1739fdc7f612bfb060adbc68ee92c60b",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/tree/main/big_sleep"
                    }
                },
                "num_files": 9
            },
            {
                "type": "code",
                "name": "samples",
                "sha": "aade165046a5c56f6c8888c7b224b576edb89017",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/tree/main/samples"
                    }
                },
                "num_files": 13
            },
            {
                "type": "code",
                "name": "setup.py",
                "sha": "31a74a2f56492df0a3c1f3d0e70d5b206c8c1458",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/blob/main/setup.py"
                    }
                },
                "size": 1080
            },
            {
                "type": "code",
                "name": "test",
                "sha": "6fabc8b18cf755f5bae556c3faa99c3d9fd4edb1",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/lucidrains/big-sleep/tree/main/test"
                    }
                },
                "num_files": 1
            }
        ]
    },
    "authors": [
        {
            "name": "Phil Wang",
            "email": "lucidrains@gmail.com",
            "github_id": "lucidrains"
        },
        {
            "name": "Alexander Brown",
            "github_id": "DrJKL"
        },
        {
            "name": "Clay Mullis",
            "email": "claymullis@fastmail.com",
            "github_id": "afiaka87"
        },
        {
            "name": "Enrico Ros",
            "email": "enrico.ros@gmail.com",
            "github_id": "enricoros"
        },
        {
            "name": "NotNANtoN",
            "github_id": "NotNANtoN"
        },
        {
            "name": "LtqxWYEG",
            "github_id": "LtqxWYEG"
        },
        {
            "name": "WiseNat",
            "github_id": "WiseNat"
        },
        {
            "name": "Sophiah Ho",
            "github_id": "anomal"
        },
        {
            "name": "jp-krow",
            "github_id": "jp-krow"
        },
        {
            "name": "Christian Clauss",
            "email": "cclauss@me.com",
            "github_id": "cclauss"
        },
        {
            "name": "Erjan Kalybek",
            "github_id": "erjanmx"
        },
        {
            "name": "Teven",
            "github_id": "TevenLeScao"
        },
        {
            "name": "Will Walmsley",
            "github_id": "walmsley"
        }
    ],
    "tags": [
        "artificial-intelligence",
        "deep-learning",
        "text-to-image",
        "generative-adversarial-networks",
        "multimodality"
    ],
    "description": "A simple command line tool for text to image generation, using OpenAI's CLIP and a BigGAN. Technique was originally created by https://twitter.com/advadnoun",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/lucidrains/big-sleep",
            "stars": 1794,
            "issues": true,
            "readme": "<img src=\"./samples/artificial_intelligence.png\" width=\"250px\"></img>\n\n*artificial intelligence*\n\n<img src=\"./samples/cosmic_love_and_attention.png\" width=\"250px\"></img>\n\n*cosmic love and attention*\n\n<img src=\"./samples/fire_in_the_sky.png\" width=\"250px\"></img>\n\n*fire in the sky*\n\n<img src=\"./samples/a_pyramid_made_of_ice.png\" width=\"250px\"></img>\n\n*a pyramid made of ice*\n\n<img src=\"./samples/a_lonely_house_in_the_woods.png\" width=\"250px\"></img>\n\n*a lonely house in the woods*\n\n<img src=\"./samples/marriage_in_the_mountains.png\" width=\"250px\"></img>\n\n*marriage in the mountains*\n\n<img src=\"./samples/a_lantern_dangling_from_the_tree_in_a_foggy_graveyard.png\" width=\"250px\"></img>\n\n*lantern dangling from a tree in a foggy graveyard*\n\n<img src=\"./samples/a_vivid_dream.png\" width=\"250px\"></img>\n\n*a vivid dream*\n\n<img src=\"./samples/balloons_over_the_ruins_of_a_city.png\" width=\"250px\"></img>\n\n*balloons over the ruins of a city*\n\n<img src=\"./samples/the_death_of_the_lonesome_astronomer.png\" width=\"250px\"></img>\n\n*the death of the lonesome astronomer* - by <a href=\"https://github.com/moirage\">moirage</a>\n\n<img src=\"./samples/the_tragic_intimacy_of_the_eternal_conversation_with_oneself.png\" width=\"250px\"></img>\n\n*the tragic intimacy of the eternal conversation with oneself* - by <a href=\"https://github.com/moirage\">moirage</a>\n\n<img src=\"./samples/demon_fire.png\" width=\"250px\"></img>\n\n*demon fire* - by <a href=\"https://github.com/WiseNat\">WiseNat</a>\n\n## Big Sleep\n\n<a href=\"https://twitter.com/advadnoun\">Ryan Murdock</a> has done it again, combining OpenAI's <a href=\"https://github.com/openai/CLIP\">CLIP</a> and the generator from a <a href=\"https://arxiv.org/abs/1809.11096\">BigGAN</a>! This repository wraps up his work so it is easily accessible to anyone who owns a GPU.\n\nYou will be able to have the GAN dream up images using natural language with a one-line command in the terminal.\n\nOriginal notebook [![Open In Colab][colab-badge]][colab-notebook]\n\nSimplified notebook [![Open In Colab][colab-badge]][colab-notebook-2]\n\nUser-made notebook with bugfixes and added features, like google drive integration [![Open In Colab][colab-badge]][user-made-colab-notebook]\n\n[user-made-colab-notebook]: <https://colab.research.google.com/drive/1zVHK4t3nXQTsu5AskOOOf3Mc9TnhltUO?usp=sharing>\n[colab-notebook]: <https://colab.research.google.com/drive/1NCceX2mbiKOSlAd_o7IU7nA9UskKN5WR?usp=sharing>\n[colab-notebook-2]: <https://colab.research.google.com/drive/1MEWKbm-driRNF8PrU7ogS5o3se-ePyPb?usp=sharing>\n[colab-badge]: <https://colab.research.google.com/assets/colab-badge.svg>\n\n## Install\n\n```bash\n$ pip install big-sleep\n```\n\n## Usage\n\n```bash\n$ dream \"a pyramid made of ice\"\n```\n\nImages will be saved to wherever the command is invoked\n\n## Advanced\n\nYou can invoke this in code with\n\n```python\nfrom big_sleep import Imagine\n\ndream = Imagine(\n    text = \"fire in the sky\",\n    lr = 5e-2,\n    save_every = 25,\n    save_progress = True\n)\n\ndream()\n```\n\n> You can now train more than one phrase using the delimiter \"|\"\n\n### Train on Multiple Phrases\nIn this example we train on three phrases:\n\n- `an armchair in the form of pikachu` \n- `an armchair imitating pikachu`\n- `abstract`\n\n```python\nfrom big_sleep import Imagine\n\ndream = Imagine(\n    text = \"an armchair in the form of pikachu|an armchair imitating pikachu|abstract\",\n    lr = 5e-2,\n    save_every = 25,\n    save_progress = True\n)\n\ndream()\n```\n\n### Penalize certain prompts as well!\n\nIn this example we train on the three phrases from before,\n\n**and** *penalize* the phrases:\n- `blur`\n- `zoom`\n```python\nfrom big_sleep import Imagine\n\ndream = Imagine(\n    text = \"an armchair in the form of pikachu|an armchair imitating pikachu|abstract\",\n    text_min = \"blur|zoom\",\n)\ndream()\n```\n\n\nYou can also set a new text by using the `.set_text(<str>)` command\n\n```python\ndream.set_text(\"a quiet pond underneath the midnight moon\")\n```\n\nAnd reset the latents with `.reset()`\n\n```python\ndream.reset()\n```\n\nTo save the progression of images during training, you simply have to supply the `--save-progress` flag\n\n```bash\n$ dream \"a bowl of apples next to the fireplace\" --save-progress --save-every 100\n```\n\nDue to the class conditioned nature of the GAN, Big Sleep often steers off the manifold into noise. You can use a flag to save the best high scoring image (per CLIP critic) to `{filepath}.best.png` in your folder.\n\n```bash\n$ dream \"a room with a view of the ocean\" --save-best\n```\n\n## Larger model\n\nIf you have enough memory, you can also try using a bigger vision model released by OpenAI for improved generations.\n\n```bash\n$ dream \"storm clouds rolling in over a white barnyard\" --larger-model\n```\n\n## Experimentation\n\nYou can set the number of classes that you wish to restrict Big Sleep to use for the Big GAN with the `--max-classes` flag as follows (ex. 15 classes). This may lead to extra stability during training, at the cost of lost expressivity.\n\n```bash\n$ dream 'a single flower in a withered field' --max-classes 15\n```\n\n## Alternatives\n\n<a href=\"https://github.com/lucidrains/deep-daze\">Deep Daze</a> - CLIP and a deep SIREN network\n\n## Citations\n\n```bibtex\n@misc{unpublished2021clip,\n    title  = {CLIP: Connecting Text and Images},\n    author = {Alec Radford, Ilya Sutskever, Jong Wook Kim, Gretchen Krueger, Sandhini Agarwal},\n    year   = {2021}\n}\n```\n\n```bibtex\n@misc{brock2019large,\n    title   = {Large Scale GAN Training for High Fidelity Natural Image Synthesis}, \n    author  = {Andrew Brock and Jeff Donahue and Karen Simonyan},\n    year    = {2019},\n    eprint  = {1809.11096},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.LG}\n}\n```\n",
            "readme_url": "https://github.com/lucidrains/big-sleep",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Large Scale GAN Training for High Fidelity Natural Image Synthesis",
            "arxiv": "1809.11096",
            "year": 2018,
            "url": "http://arxiv.org/abs/1809.11096v2",
            "abstract": "Despite recent progress in generative image modeling, successfully generating\nhigh-resolution, diverse samples from complex datasets such as ImageNet remains\nan elusive goal. To this end, we train Generative Adversarial Networks at the\nlargest scale yet attempted, and study the instabilities specific to such\nscale. We find that applying orthogonal regularization to the generator renders\nit amenable to a simple \"truncation trick,\" allowing fine control over the\ntrade-off between sample fidelity and variety by reducing the variance of the\nGenerator's input. Our modifications lead to models which set the new state of\nthe art in class-conditional image synthesis. When trained on ImageNet at\n128x128 resolution, our models (BigGANs) achieve an Inception Score (IS) of\n166.5 and Frechet Inception Distance (FID) of 7.4, improving over the previous\nbest IS of 52.52 and FID of 18.6.",
            "authors": [
                "Andrew Brock",
                "Jeff Donahue",
                "Karen Simonyan"
            ]
        },
        {
            "year": "2021",
            "author": [
                "Alec Radford, Ilya Sutskever, Jong Wook Kim, Gretchen Krueger, Sandhini Agarwal"
            ],
            "title": "CLIP: Connecting Text and Images",
            "ENTRYTYPE": "misc",
            "ID": "unpublished2021clip",
            "authors": [
                "Alec Radford, Ilya Sutskever, Jong Wook Kim, Gretchen Krueger, Sandhini Agarwal"
            ]
        },
        {
            "primaryclass": "cs.LG",
            "archiveprefix": "arXiv",
            "eprint": "1809.11096",
            "year": "2019",
            "author": [
                "Brock, Andrew",
                "Donahue, Jeff",
                "Simonyan, Karen"
            ],
            "title": "Large Scale GAN Training for High Fidelity Natural Image Synthesis",
            "ENTRYTYPE": "misc",
            "ID": "brock2019large",
            "authors": [
                "Brock, Andrew",
                "Donahue, Jeff",
                "Simonyan, Karen"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9767741679534212,
        "task": "Image Generation",
        "task_prob": 0.758359700954186
    },
    "training": {
        "datasets": [
            {
                "name": "ImageNet"
            }
        ]
    }
}