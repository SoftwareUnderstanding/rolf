{
    "visibility": {
        "visibility": "public"
    },
    "name": "SegNet and Bayesian SegNet Tutorial",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "alexgkendall",
                "owner_type": "User",
                "name": "SegNet-Tutorial",
                "url": "https://github.com/alexgkendall/SegNet-Tutorial",
                "stars": 779,
                "pushed_at": "2022-01-26 17:51:41+00:00",
                "created_at": "2015-11-10 11:43:37+00:00",
                "language": "Python",
                "description": "Files for a tutorial to train SegNet for road scenes using the CamVid dataset",
                "frameworks": [
                    "Caffe",
                    "scikit-learn"
                ]
            },
            {
                "type": "code",
                "name": ".gitattributes",
                "sha": "a9006bafdb31b5ba16b5c9a5a0385fd21ad5018b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/blob/master/.gitattributes"
                    }
                },
                "size": 49
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "be7186603d8618a4584323ee412df5a35fe0c81f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/blob/master/.gitignore"
                    }
                },
                "size": 13
            },
            {
                "type": "code",
                "name": "CamVid",
                "sha": "58c604d6ff4ae2239e7d39f2da2bb3ec1a83fa87",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/tree/master/CamVid"
                    }
                },
                "num_files": 9
            },
            {
                "type": "code",
                "name": "Example_Models",
                "sha": "193ee936a638c21ee6552325e80463f54635d394",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/tree/master/Example_Models"
                    }
                },
                "num_files": 11
            },
            {
                "type": "code",
                "name": "Models",
                "sha": "18ffdae33cbe9f5d695b0f5f9da365de9d7e455d",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/tree/master/Models"
                    }
                },
                "num_files": 12
            },
            {
                "type": "code",
                "name": "Scripts",
                "sha": "b480559a3f21541bd464c8cb230fdd5682476ec1",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/tree/master/Scripts"
                    }
                },
                "num_files": 12
            },
            {
                "type": "code",
                "name": "docker",
                "sha": "ba1653650460558a7938326274426a35635c0e6b",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/alexgkendall/SegNet-Tutorial/tree/master/docker"
                    }
                },
                "num_files": 2
            }
        ]
    },
    "authors": [
        {
            "name": "Alex Kendall",
            "github_id": "alexgkendall"
        },
        {
            "name": "Abylay Ospan",
            "github_id": "aospan"
        },
        {
            "name": "plieningerweb",
            "github_id": "plieningerweb"
        },
        {
            "name": "yangbo.zhou",
            "email": "youngwelle@gmail.com",
            "github_id": "yangboz"
        },
        {
            "name": "Fangjun Kuang",
            "email": "csukuangfj@gmail.com",
            "github_id": "csukuangfj"
        }
    ],
    "tags": [],
    "description": "Files for a tutorial to train SegNet for road scenes using the CamVid dataset",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/alexgkendall/SegNet-Tutorial",
            "stars": 779,
            "issues": true,
            "readme": "# SegNet and Bayesian SegNet Tutorial\n\nThis repository contains all the files for you to complete the 'Getting Started with SegNet' and the 'Bayesian SegNet' tutorials here:\nhttp://mi.eng.cam.ac.uk/projects/segnet/tutorial.html\n\nPlease see this link for detailed instructions.\n\n## Caffe-SegNet\n\nSegNet requires a modified version of Caffe to run. Please download and compile caffe-segnet to use these models:\nhttps://github.com/alexgkendall/caffe-segnet\n\nThis version supports cudnn v2 acceleration. @TimoSaemann has a branch supporting a more recent version of Caffe (Dec 2016) with cudnn v5.1:\nhttps://github.com/TimoSaemann/caffe-segnet-cudnn5\n\n## Getting Started with Live Demo\n\nIf you would just like to try out an example model, then you can find the model used in the [SegNet webdemo](http://mi.eng.cam.ac.uk/projects/segnet/) in the folder ```Example_Models/```. You will need to download the weights separately using the link in the [SegNet Model Zoo](https://github.com/alexgkendall/SegNet-Tutorial/blob/master/Example_Models/segnet_model_zoo.md).\n\nFirst open ```Scripts/webcam_demo.py``` and edit line 14 to match the path to your installation of SegNet. You will also need a webcam, or alternatively edit line 39 to input a video file instead. To run the demo use the command:\n\n```python Scripts/webcam_demo.py --model Example_Models/segnet_model_driving_webdemo.prototxt --weights /Example_Models/segnet_weights_driving_webdemo.caffemodel --colours /Scripts/camvid12.png```\n\n## Getting Started with Docker\n\nUse docker to compile caffe and run the examples. In order to run caffe on the gpu using docker, please install nvidia-docker (see https://github.com/NVIDIA/nvidia-docker or using ansbile: https://galaxy.ansible.com/ryanolson/nvidia-docker/)\n\nto run caffe on the CPU:\n```\ndocker build -t bvlc/caffe:cpu ./cpu \n# check if working\ndocker run -ti bvlc/caffe:cpu caffe --version\n# get a bash in container to run examples\ndocker run -ti --volume=$(pwd):/SegNet -u $(id -u):$(id -g) bvlc/caffe:cpu bash\n```\n\nto run caffe on the GPU:\n```\ndocker build -t bvlc/caffe:gpu ./gpu\n# check if working\ndocker run -ti bvlc/caffe:gpu caffe device_query -gpu 0\n# get a bash in container to run examples\ndocker run -ti --volume=$(pwd):/SegNet -u $(id -u):$(id -g) bvlc/caffe:gpu bash\n```\n\n## Example Models\n\nA number of example models for indoor and outdoor road scene understanding can be found in the [SegNet Model Zoo](https://github.com/alexgkendall/SegNet-Tutorial/blob/master/Example_Models/segnet_model_zoo.md).\n\n## Publications\n\nFor more information about the SegNet architecture:\n\nhttp://arxiv.org/abs/1511.02680\nAlex Kendall, Vijay Badrinarayanan and Roberto Cipolla \"Bayesian SegNet: Model Uncertainty in Deep Convolutional Encoder-Decoder Architectures for Scene Understanding.\" arXiv preprint arXiv:1511.02680, 2015.\n\nhttp://arxiv.org/abs/1511.00561\nVijay Badrinarayanan, Alex Kendall and Roberto Cipolla \"SegNet: A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation.\" PAMI, 2017. \n\n## License\n\nThis software is released under a creative commons license which allows for personal and research use only. For a commercial license please contact the authors. You can view a license summary here:\nhttp://creativecommons.org/licenses/by-nc/4.0/\n\n\n## Contact\n\nAlex Kendall\n\nagk34@cam.ac.uk\n\nCambridge University\n\n",
            "readme_url": "https://github.com/alexgkendall/SegNet-Tutorial",
            "frameworks": [
                "Caffe",
                "scikit-learn"
            ]
        }
    ],
    "references": [
        {
            "title": "Bayesian SegNet: Model Uncertainty in Deep Convolutional Encoder-Decoder Architectures for Scene Understanding",
            "arxiv": "1511.02680",
            "year": 2015,
            "url": "http://arxiv.org/abs/1511.02680v2",
            "abstract": "We present a deep learning framework for probabilistic pixel-wise semantic\nsegmentation, which we term Bayesian SegNet. Semantic segmentation is an\nimportant tool for visual scene understanding and a meaningful measure of\nuncertainty is essential for decision making. Our contribution is a practical\nsystem which is able to predict pixel-wise class labels with a measure of model\nuncertainty. We achieve this by Monte Carlo sampling with dropout at test time\nto generate a posterior distribution of pixel class labels. In addition, we\nshow that modelling uncertainty improves segmentation performance by 2-3%\nacross a number of state of the art architectures such as SegNet, FCN and\nDilation Network, with no additional parametrisation. We also observe a\nsignificant improvement in performance for smaller datasets where modelling\nuncertainty is more effective. We benchmark Bayesian SegNet on the indoor SUN\nScene Understanding and outdoor CamVid driving scenes datasets.",
            "authors": [
                "Alex Kendall",
                "Vijay Badrinarayanan",
                "Roberto Cipolla"
            ]
        },
        {
            "title": "SegNet: A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation",
            "arxiv": "1511.00561",
            "year": 2015,
            "url": "http://arxiv.org/abs/1511.00561v3",
            "abstract": "We present a novel and practical deep fully convolutional neural network\narchitecture for semantic pixel-wise segmentation termed SegNet. This core\ntrainable segmentation engine consists of an encoder network, a corresponding\ndecoder network followed by a pixel-wise classification layer. The architecture\nof the encoder network is topologically identical to the 13 convolutional\nlayers in the VGG16 network. The role of the decoder network is to map the low\nresolution encoder feature maps to full input resolution feature maps for\npixel-wise classification. The novelty of SegNet lies is in the manner in which\nthe decoder upsamples its lower resolution input feature map(s). Specifically,\nthe decoder uses pooling indices computed in the max-pooling step of the\ncorresponding encoder to perform non-linear upsampling. This eliminates the\nneed for learning to upsample. The upsampled maps are sparse and are then\nconvolved with trainable filters to produce dense feature maps. We compare our\nproposed architecture with the widely adopted FCN and also with the well known\nDeepLab-LargeFOV, DeconvNet architectures. This comparison reveals the memory\nversus accuracy trade-off involved in achieving good segmentation performance.\n  SegNet was primarily motivated by scene understanding applications. Hence, it\nis designed to be efficient both in terms of memory and computational time\nduring inference. It is also significantly smaller in the number of trainable\nparameters than other competing architectures. We also performed a controlled\nbenchmark of SegNet and other architectures on both road scenes and SUN RGB-D\nindoor scene segmentation tasks. We show that SegNet provides good performance\nwith competitive inference time and more efficient inference memory-wise as\ncompared to other architectures. We also provide a Caffe implementation of\nSegNet and a web demo at http://mi.eng.cam.ac.uk/projects/segnet/.",
            "authors": [
                "Vijay Badrinarayanan",
                "Alex Kendall",
                "Roberto Cipolla"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999400357775288,
        "task": "Semantic Segmentation",
        "task_prob": 0.9922048814249077
    },
    "training": {
        "datasets": [
            {
                "name": "CamVid"
            }
        ]
    }
}