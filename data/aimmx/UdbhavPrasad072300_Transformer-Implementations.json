{
    "visibility": {
        "visibility": "public",
        "license": "MIT License"
    },
    "name": "Transformer Implementations",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "UdbhavPrasad072300",
                "owner_type": "User",
                "name": "Transformer-Implementations",
                "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations",
                "stars": 20,
                "pushed_at": "2021-09-30 22:25:00+00:00",
                "created_at": "2020-12-07 06:31:26+00:00",
                "language": "Jupyter Notebook",
                "description": "Library - Vanilla, ViT, DeiT, BERT, GPT",
                "license": "MIT License",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "c4753a937d9f28b1526e7d6188a6d11a4c56391c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/tree/main/.github"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "7efe1b51614e47b8df3ea806bca290558215bcdc",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/.gitignore"
                    }
                },
                "size": 1880
            },
            {
                "type": "code",
                "name": "CODE_OF_CONDUCT.md",
                "sha": "18c91471812cb6f4c4e8d0fc407f70c4612e1648",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/CODE_OF_CONDUCT.md"
                    }
                },
                "size": 5202
            },
            {
                "type": "code",
                "name": "CONTRIBUTING.md",
                "sha": "9f1ab7baf144858c03103531c66575de0f26d13e",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/CONTRIBUTING.md"
                    }
                },
                "size": 4217
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "bf4fddc253b81d988fc4f9a32d67e5430c31b2ce",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/LICENSE"
                    }
                },
                "size": 1070
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "147dc4445548ee0627f5caeeec5bf0d0039b317d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/main.py"
                    }
                },
                "size": 2076
            },
            {
                "type": "code",
                "name": "notebooks",
                "sha": "dd5011e57ad83afd64325d61fdbe7e7ba7401182",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/tree/main/notebooks"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "86caaf845440358c8b5063aa24cb8e348cbbd6e8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/requirements.txt"
                    }
                },
                "size": 51
            },
            {
                "type": "code",
                "name": "setup.py",
                "sha": "bc7a392aa7b3db1e820ddeead3e97cd079775363",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/setup.py"
                    }
                },
                "size": 1009
            },
            {
                "type": "code",
                "name": "transformer_package",
                "sha": "a0a3cb2e26e1909a2d748b729730c991c446c77a",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/tree/main/transformer_package"
                    }
                },
                "num_files": 4
            }
        ]
    },
    "authors": [
        {
            "name": "Udbhav Prasad",
            "github_id": "UdbhavPrasad072300"
        },
        {
            "name": "parth2035",
            "github_id": "parth2035"
        }
    ],
    "tags": [
        "transformers",
        "transformer-implementations",
        "vision-transformers",
        "pytorch"
    ],
    "description": "Library - Vanilla, ViT, DeiT, BERT, GPT",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations",
            "stars": 20,
            "issues": true,
            "readme": "# Transformer Implementations\n\n<p>\n  <a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/LICENSE\">\n        <img alt=\"License\" src=\"https://img.shields.io/github/license/UdbhavPrasad072300/Transformer-Implementations\">\n  </a>\n  <a href=\"https://pypi.org/project/transformer-implementations/\">\n        <img alt=\"PyPi Version\" src=\"https://img.shields.io/pypi/v/transformer-implementations\">\n  </a>\n  <a href=\"https://pypi.org/project/transformer-implementations/\">\n        <img alt=\"PyPi Downloads\" src=\"https://img.shields.io/pypi/dm/transformer-implementations\">\n  </a>\n  <a href=\"https://pypi.org/project/transformer-implementations/\">\n        <img alt=\"Package Status\" src=\"https://img.shields.io/pypi/status/transformer-implementations\">\n  </a>\n</p>\n\nTransformer Implementations and some examples with them\n\nImplemented:\n<ul>\n  <li>Vanilla Transformer</li>\n  <li>ViT - Vision Transformers</li>\n  <li>DeiT - Data efficient image Transformers</li>\n  <li>BERT - Bidirectional Encoder Representations from Transformers</li>\n  <li>GPT - Generative Pre-trained Transformer</li>\n</ul>\n\n## Installation\n\n<a href=\"https://pypi.org/project/transformer-implementations/\">PyPi</a>\n\n```bash\n$ pip install transformer-implementations\n```\n\nor\n\n```bash\npython setup.py build\npython setup.py install\n```\n\n## Example\n\nIn <a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/\">notebooks</a> directory there is a notebook on how to use each of these models for their intented use; such as image classification for Vision Transformer (ViT) and others.\nCheck them out!\n\n```python\nfrom transformer_package.models import ViT\n\nimage_size = 28 # Model Parameters\nchannel_size = 1\npatch_size = 7\nembed_size = 512\nnum_heads = 8\nclasses = 10\nnum_layers = 3\nhidden_size = 256\ndropout = 0.2\n\nmodel = ViT(image_size, \n            channel_size, \n            patch_size, \n            embed_size, \n            num_heads, \n            classes, \n            num_layers, \n            hidden_size, \n            dropout=dropout).to(DEVICE)\n            \nprediction = model(image_tensor)\n```\n\n## Language Translation\n\nfrom \"Attention is All You Need\": https://arxiv.org/pdf/1706.03762.pdf\n\nModels trained with Implementation:\n<ul>\n  <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/Multi30k%20-%20Language%20Translation.ipynb\">Multi30k - German to English</a></li>\n</ul>\n\n## Multi-class Image Classification with Vision Transformers (ViT)\n\nfrom \"An Image is Worth 16x16 words: Transformers for image recognition at scale\": https://arxiv.org/pdf/2010.11929v1.pdf\n\nModels trained with Implementation:\n<ul>\n <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/MNIST%20Classification%20-%20ViT.ipynb\">MNIST - Grayscale Images</a></li>\n  <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/CIFAR10%20Classification%20-%20ViT.ipynb\">CIFAR10 - MultiChannel Images</a></li>\n</ul>\n\nNote: ViT will not perform great on small datasets\n\n## Multi-class Image Classification with Data-efficient image Transformers (DeiT)\n\nfrom \"Training data-efficient image transformers & distillation through attention\": https://arxiv.org/pdf/2012.12877v1.pdf\n\nModels trained with Implementation:\n<ul>\n <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/pre-train/VGG16_CIFAR10.ipynb\">Pretraining Teacher model for Distillation</a></li>\n <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/CIFAR10%20Classification%20-%20DeiT.ipynb\">CIFAR10 - Low Res Images</a></li>\n</ul>\n",
            "readme_url": "https://github.com/UdbhavPrasad072300/Transformer-Implementations",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Attention Is All You Need",
            "arxiv": "1706.03762",
            "year": 2017,
            "url": "http://arxiv.org/abs/1706.03762v5",
            "abstract": "The dominant sequence transduction models are based on complex recurrent or\nconvolutional neural networks in an encoder-decoder configuration. The best\nperforming models also connect the encoder and decoder through an attention\nmechanism. We propose a new simple network architecture, the Transformer, based\nsolely on attention mechanisms, dispensing with recurrence and convolutions\nentirely. Experiments on two machine translation tasks show these models to be\nsuperior in quality while being more parallelizable and requiring significantly\nless time to train. Our model achieves 28.4 BLEU on the WMT 2014\nEnglish-to-German translation task, improving over the existing best results,\nincluding ensembles by over 2 BLEU. On the WMT 2014 English-to-French\ntranslation task, our model establishes a new single-model state-of-the-art\nBLEU score of 41.8 after training for 3.5 days on eight GPUs, a small fraction\nof the training costs of the best models from the literature. We show that the\nTransformer generalizes well to other tasks by applying it successfully to\nEnglish constituency parsing both with large and limited training data.",
            "authors": [
                "Ashish Vaswani",
                "Noam Shazeer",
                "Niki Parmar",
                "Jakob Uszkoreit",
                "Llion Jones",
                "Aidan N. Gomez",
                "Lukasz Kaiser",
                "Illia Polosukhin"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "MNIST"
            }
        ]
    },
    "domain": {
        "domain_type": "Natural Language Processing",
        "domain_prob": 0.9997611995715926,
        "task": "Machine Translation",
        "task_prob": 0.9722010449931278
    }
}