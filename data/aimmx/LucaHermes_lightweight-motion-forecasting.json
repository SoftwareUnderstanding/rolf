{
    "visibility": {
        "visibility": "public"
    },
    "name": "Lightweight Motion Forecasting",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "LucaHermes",
                "owner_type": "User",
                "name": "lightweight-motion-forecasting",
                "url": "https://github.com/LucaHermes/lightweight-motion-forecasting",
                "stars": 2,
                "pushed_at": "2021-12-08 12:03:47+00:00",
                "created_at": "2021-08-14 14:30:44+00:00",
                "language": "Python",
                "description": "A lightweight graph-convolutional model for skeletal human motion forecasting on the Human3.6M (H3.6M) dataset.",
                "frameworks": [
                    "TensorFlow"
                ]
            },
            {
                "type": "code",
                "name": "ckpts",
                "sha": "b16b11fa345e3282e99b676e5c83c94254874cfb",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/tree/main/ckpts"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "configs.py",
                "sha": "cbdcce85c6e64f4de6239a451620bf69ff5b93e9",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/configs.py"
                    }
                },
                "size": 1927
            },
            {
                "type": "code",
                "name": "data",
                "sha": "5578c33c6ae0846b3484014401ee5ef8dd8015bc",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/tree/main/data"
                    }
                },
                "num_files": 3
            },
            {
                "type": "code",
                "name": "evaluate.py",
                "sha": "7678ab69d76c8d8d3d6e7dcd64303b616fde5a89",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/evaluate.py"
                    }
                },
                "size": 2245
            },
            {
                "type": "code",
                "name": "evaluation",
                "sha": "0b66094e56579952e6e7a01b278ccbedeadfddf0",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/tree/main/evaluation"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "kinematic_utils.py",
                "sha": "4ed0e9610ac2be91946029346c661bcdada94a23",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/kinematic_utils.py"
                    }
                },
                "size": 5247
            },
            {
                "type": "code",
                "name": "main.py",
                "sha": "f25e016a8be2a79b9e37c84ab492f9ab7d92a162",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/main.py"
                    }
                },
                "size": 5690
            },
            {
                "type": "code",
                "name": "models",
                "sha": "909c11a091448d1624591490d9cd5ddb2f43d8b8",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/tree/main/models"
                    }
                },
                "num_files": 6
            },
            {
                "type": "code",
                "name": "quaternion_utils.py",
                "sha": "4f96350ade3332857687fa66ab5627ecd221154b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/quaternion_utils.py"
                    }
                },
                "size": 8821
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "932409f8c868346fff5419ba741bff9052ec5adf",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/requirements.txt"
                    }
                },
                "size": 118
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "a90069fa0ba6d226927531ab87cf39be8b92445a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/train.py"
                    }
                },
                "size": 2579
            },
            {
                "type": "code",
                "name": "train_utils.py",
                "sha": "5c4c2cb986b6ca2dbc129fb376c42b459706b3c8",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/LucaHermes/lightweight-motion-forecasting/blob/main/train_utils.py"
                    }
                },
                "size": 2751
            }
        ]
    },
    "authors": [
        {
            "name": "Rocky",
            "github_id": "LucaHermes"
        }
    ],
    "tags": [],
    "description": "A lightweight graph-convolutional model for skeletal human motion forecasting on the Human3.6M (H3.6M) dataset.",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/LucaHermes/lightweight-motion-forecasting",
            "stars": 2,
            "issues": true,
            "readme": "# Lightweight Motion Forecasting\nA lightweight graph-convolutional model for skeletal human motion forecasting on the Human3.6M (H3.6M) dataset.\nThe paper is available here: https://www.esann.org/sites/default/files/proceedings/2021/ES2021-145.pdf\n\n## Setup\n\n* Install the python libraries ```pip install -r requirements.txt``` (This file contains the GPU libs for tensorflow and tensorflow_graphics, remove '-gpu' to use the cpu versions)\n\n## Usage\n\n* Get the [H3.6M Dataset](http://vision.imar.ro/human3.6m/description.php)\n* The CLI is located in ```main.py```, it consists of two subprograms ```train``` and ```eval``` for training and evaluation of models, respectively.\n* Calling ```python main.py --help``` prints an overview of the CLI arguments\n\nTo train a model, call \n```\npython main.py train\n```\nThis will train a model with the default configuration (s. ```configs.py```)\nTo evaluate a model, call \n```\npython main.py eval --checkpoint <path_to_checkpoint>\n```\nThis will run the default evaluation on a model with the default configuration (s. ```configs.py```), restored from the checkpoint thats passed in ```path_to_checkpoint```\nA checkpoint to run the model with default configuration is located in the [```ckpts```](https://github.com/LucaHermes/lightweight-motion-forecasting/tree/main/ckpts/epoch_3000_joint_level_enc_forecasting/20210516-032909) folder\nAlternatively, you can alter the defaults by passing additional cli arguments or directly modify the ```configs.py``` file.\n\n## Model Architecture\n<img alt=\"model_architecture\" src=\"https://user-images.githubusercontent.com/30961397/136161910-c6018219-7ae3-4dc0-9fb7-5a5c1a93c0ab.png\" width=\"350\" align=\"right\">\n\n* The model is based on [Graph-WaveNet](https://arxiv.org/abs/1906.00121), a spatio-temporal extension to the original [WaveNet](https://arxiv.org/abs/1609.03499). \n* It consists of ```N``` identical blocks that consist of two different layers\n   * Spatio-temporal convolution (```ST-Conv```; [Implementation](https://github.com/LucaHermes/lightweight-motion-forecasting/blob/2a7a736078b252f27cf4781cddd589d93cae7fd6/models/encoders.py#L7))\n      * ```ST-Conv``` replaces the 1D convolution in the original Graph-WaveNet\n   * Graph convolution that respects joint hierarchy (```K-GCN```; [Implementation](https://github.com/LucaHermes/lightweight-motion-forecasting/blob/2a7a736078b252f27cf4781cddd589d93cae7fd6/models/gcn.py#L8))\n      * ```K-GCN``` replaces the [diffusion GCN](https://proceedings.neurips.cc/paper/2019/file/23c894276a2c5a16470e6a31f4618d73-Paper.pdf) in the original Graph-WaveNet\n* WaveNet-style skip connections accumulate the outputs of the blocks\n* A ReLU-activated MLP computes the final output\n* This is an autoregressive model, hence it computes 1-step predictions that are the input to the model for the next prediction step.\n\n<br><br><br>\n\n## Qualitative Results\n![qualitative_results_skeletons](https://user-images.githubusercontent.com/30961397/136162669-b868300b-bde7-4a13-9e59-b7b5e22b582d.png)\n<i><p align=\"center\">Prediction and ground truth from the test set performing the walking action.</p></i>\n\n***\n![qualitative_results_skeletons](https://user-images.githubusercontent.com/30961397/136162242-7f4e20f1-8f92-4ca4-960a-164cfd8daa99.png)\n<i><p align=\"center\">Prediction (solid) and ground truth (dashed) individual quaternion dimensions.</p></i>\n\n### Cite: BibTex for this work :)\n```\n@inproceedings{LightGNN4HumanMotion2021,\n  title={Application of Graph Convolutions in a Lightweight Model for Skeletal Human Motion Forecasting},\n  author={Hermes, Luca and Hammer, Barbara and Schilling, Malte},\n  url={https://www.esann.org/sites/default/files/proceedings/2021/ES2021-145.pdf},\n  year={2021},\n  booktitle={European Symposium on Artificial Neural Networks (ESANN)},\n  pages={111-116}\n}\n```\n",
            "readme_url": "https://github.com/LucaHermes/lightweight-motion-forecasting",
            "frameworks": [
                "TensorFlow"
            ]
        }
    ],
    "references": [
        {
            "title": "WaveNet: A Generative Model for Raw Audio",
            "arxiv": "1609.03499",
            "year": 2016,
            "url": "http://arxiv.org/abs/1609.03499v2",
            "abstract": "This paper introduces WaveNet, a deep neural network for generating raw audio\nwaveforms. The model is fully probabilistic and autoregressive, with the\npredictive distribution for each audio sample conditioned on all previous ones;\nnonetheless we show that it can be efficiently trained on data with tens of\nthousands of samples per second of audio. When applied to text-to-speech, it\nyields state-of-the-art performance, with human listeners rating it as\nsignificantly more natural sounding than the best parametric and concatenative\nsystems for both English and Mandarin. A single WaveNet can capture the\ncharacteristics of many different speakers with equal fidelity, and can switch\nbetween them by conditioning on the speaker identity. When trained to model\nmusic, we find that it generates novel and often highly realistic musical\nfragments. We also show that it can be employed as a discriminative model,\nreturning promising results for phoneme recognition.",
            "authors": [
                "Aaron van den Oord",
                "Sander Dieleman",
                "Heiga Zen",
                "Karen Simonyan",
                "Oriol Vinyals",
                "Alex Graves",
                "Nal Kalchbrenner",
                "Andrew Senior",
                "Koray Kavukcuoglu"
            ]
        },
        {
            "title": "Graph WaveNet for Deep Spatial-Temporal Graph Modeling",
            "arxiv": "1906.00121",
            "year": 2019,
            "url": "http://arxiv.org/abs/1906.00121v1",
            "abstract": "Spatial-temporal graph modeling is an important task to analyze the spatial\nrelations and temporal trends of components in a system. Existing approaches\nmostly capture the spatial dependency on a fixed graph structure, assuming that\nthe underlying relation between entities is pre-determined. However, the\nexplicit graph structure (relation) does not necessarily reflect the true\ndependency and genuine relation may be missing due to the incomplete\nconnections in the data. Furthermore, existing methods are ineffective to\ncapture the temporal trends as the RNNs or CNNs employed in these methods\ncannot capture long-range temporal sequences. To overcome these limitations, we\npropose in this paper a novel graph neural network architecture, Graph WaveNet,\nfor spatial-temporal graph modeling. By developing a novel adaptive dependency\nmatrix and learn it through node embedding, our model can precisely capture the\nhidden spatial dependency in the data. With a stacked dilated 1D convolution\ncomponent whose receptive field grows exponentially as the number of layers\nincreases, Graph WaveNet is able to handle very long sequences. These two\ncomponents are integrated seamlessly in a unified framework and the whole\nframework is learned in an end-to-end manner. Experimental results on two\npublic traffic network datasets, METR-LA and PEMS-BAY, demonstrate the superior\nperformance of our algorithm.",
            "authors": [
                "Zonghan Wu",
                "Shirui Pan",
                "Guodong Long",
                "Jing Jiang",
                "Chengqi Zhang"
            ]
        },
        {
            "pages": "111-116",
            "booktitle": "European Symposium on Artificial Neural Networks (ESANN)",
            "year": "2021",
            "url": "https://www.esann.org/sites/default/files/proceedings/2021/ES2021-145.pdf",
            "author": [
                "Hermes, Luca",
                "Hammer, Barbara",
                "Schilling, Malte"
            ],
            "title": "Application of Graph Convolutions in a Lightweight Model for Skeletal Human Motion Forecasting",
            "ENTRYTYPE": "inproceedings",
            "ID": "LightGNN4HumanMotion2021",
            "authors": [
                "Hermes, Luca",
                "Hammer, Barbara",
                "Schilling, Malte"
            ]
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "H3.6M Dataset",
                "connection": {
                    "name": "url",
                    "source": {
                        "url": "http://vision.imar.ro/human3.6m/description.php"
                    }
                }
            },
            {
                "name": "Human3.6M"
            },
            {
                "name": "METR-LA"
            }
        ]
    },
    "domain": {
        "domain_type": "Speech",
        "domain_prob": 0.7910721405242837
    }
}