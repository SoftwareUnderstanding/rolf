{
    "visibility": {
        "visibility": "public",
        "license": "Other"
    },
    "name": "ESP-WHO [[\u4e2d\u6587]](./README_CN.md)",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "espressif",
                "owner_type": "Organization",
                "name": "esp-who",
                "url": "https://github.com/espressif/esp-who",
                "stars": 1200,
                "pushed_at": "2022-03-07 06:31:05+00:00",
                "created_at": "2018-10-26 11:00:01+00:00",
                "language": "C",
                "description": "Face detection and recognition framework",
                "license": "Other",
                "frameworks": []
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "2af81195b110522a3634a83e0f7c3370b2bc3984",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/.github"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "05d6839561bf4379e88ac65032c65aadd12460bd",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/blob/master/.gitignore"
                    }
                },
                "size": 50
            },
            {
                "type": "code",
                "name": ".gitlab-ci.yml",
                "sha": "75fb0cdf73b21e17846e6880034286804e5ffefd",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/blob/master/.gitlab-ci.yml"
                    }
                },
                "size": 4876
            },
            {
                "type": "code",
                "name": ".gitmodules",
                "sha": "70704c5d9197b3bbb7e02d7517ce946445799e1d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/blob/master/.gitmodules"
                    }
                },
                "size": 333
            },
            {
                "type": "code",
                "name": "CHANGELOG.md",
                "sha": "fd54d4c1e5b43ca640133cda76e226faddef0f4d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/blob/master/CHANGELOG.md"
                    }
                },
                "size": 982
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "8e206f3bc38f5fa84a4956f2d5030ca17daea0d7",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/blob/master/LICENSE"
                    }
                },
                "size": 1187
            },
            {
                "type": "code",
                "name": "README_CN.md",
                "sha": "4c1e00ecd0d2a20418aa92ded4f23e5166230d55",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/blob/master/README_CN.md"
                    }
                },
                "size": 5231
            },
            {
                "type": "code",
                "name": "components",
                "sha": "85c04d359bcdee4411af5e25da750221d600dcdb",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/components"
                    }
                },
                "num_files": 8
            },
            {
                "type": "code",
                "name": "default_bin",
                "sha": "ea97b43d5fcffdf29c36d6a06a6a8f4e4d7319f7",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/default_bin"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "docs",
                "sha": "95e433620b002ab2d557144cf1813a708d79e3d0",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/docs"
                    }
                },
                "num_files": 4
            },
            {
                "type": "code",
                "name": "examples",
                "sha": "9d1df96b80592c7b0bb3b0f1b57e320d193a1c8c",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/examples"
                    }
                },
                "num_files": 7
            },
            {
                "type": "code",
                "name": "img",
                "sha": "79623d01ddeb0430cf4b0028e001ed7a1a2c3aeb",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/img"
                    }
                },
                "num_files": 13
            },
            {
                "type": "code",
                "name": "tools",
                "sha": "536d277f1c8fbdb19731f3cd3c205d51497037c3",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/espressif/esp-who/tree/master/tools"
                    }
                },
                "num_files": 1
            }
        ]
    },
    "authors": [
        {
            "name": "yehangyang",
            "github_id": "ESP-YHY"
        },
        {
            "name": "yehangyang",
            "email": "yehangyang@qq.com",
            "github_id": "yehangyang"
        },
        {
            "name": "Me No Dev",
            "github_id": "me-no-dev"
        },
        {
            "name": "XiaochaoGONG",
            "email": "gxc_seu@126.com",
            "github_id": "XiaochaoGONG"
        },
        {
            "name": "Claus N\u00e4veke",
            "github_id": "TheNitek"
        },
        {
            "name": "Auroragan",
            "github_id": "Auroragan"
        },
        {
            "name": "Bond Keevil",
            "email": "me@bondkeevil.ca",
            "github_id": "bkeevil"
        },
        {
            "name": "NatashaLi-ESPRESSIF",
            "github_id": "NatashaLi-ESPRESSIF"
        },
        {
            "name": "Alexander Bergmann",
            "email": "abergmann@suse.com",
            "github_id": "abergmann"
        },
        {
            "name": "Sachin Parekh",
            "github_id": "sachin0x18"
        },
        {
            "name": "Charlotudy",
            "github_id": "Charlotudy"
        },
        {
            "name": "Stephen Casner",
            "github_id": "slcasner"
        }
    ],
    "tags": [],
    "description": "Face detection and recognition framework",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/espressif/esp-who",
            "stars": 1200,
            "issues": true,
            "readme": "# ESP-WHO [[\u4e2d\u6587]](./README_CN.md)\n\nESP-WHO is an image processing development platform based on Espressif chips. It contains development examples that may be applied in practical applications.\n\n## Overview\n\nESP-WHO provides examples such as Human Face Detection, Human Face Recognition, Cat Face Detection, Gesture Recognition, etc. You can develop a variety of practical applications based on these examples. ESP-WHO runs on ESP-IDF. [ESP-DL](https://github.com/espressif/esp-dl) provides rich deep learning related interfaces for ESP-WHO, which can be implemented with various peripherals to realize many interesting applications.\n\n<p align=\"center\">\n    <img width=\"%\" src=\"./img/architecture_en.drawio.svg\"> \n</p>\n\n\n\n## What You Need\n\n### Hardware\n\nWe recommend novice developers to use the development boards designed by Espressif. The examples provided by ESP-WHO are developed based on the following Espressif development board, and the corresponding relationships between the development boards and SoC are shown in the table below.\n    \n|    SoC    | [ESP32](https://www.espressif.com/en/products/socs/esp32) | [ESP32-S2](https://www.espressif.com/en/products/socs/esp32-s2) | [ESP32-S3](https://www.espressif.com/en/products/socs/esp32-s3) |\n| :------- | :----------------------------------------------------------: | :----------------------------------------------------------: | :----------------------------------------------------------: |\n| Development Board | [ESP-EYE](https://www.espressif.com/en/products/devkits/esp-eye/overview) | [ESP32-S2-Kaluga-1](https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp32-s2-kaluga-1-kit.html) | [ESP-S3-EYE](https://www.espressif.com/en/products/devkits/esp-s3-eye/overview) |\n\n> Using a development board not mentioned in the table above, configure pins assigned to peripherals manually, such as camera, LCD, and buttons.\n\n### Software\n\n#### Get ESP-IDF\n\nESP-WHO runs on ESP-IDF. For details on getting ESP-IDF, please refer to [ESP-IDF Programming Guide](https://idf.espressif.com/).\n\n> Please use the latest ESP-IDF on the [release/v4.4](https://github.com/espressif/esp-idf/tree/release/v4.4) branch.\n\n#### Get ESP-WHO\n\nRun the following commands in your terminal to download ESP-WHO:\n\n```bash\ngit clone --recursive https://github.com/espressif/esp-who.git\n```\n\n> Remember to use ``git submodule update --recursive --init`` to pull and update submodules of ESP-WHO.\n\n## Run Examples\n\nAll examples of ESP-WHO are stored in [examples](./examples) folder. Structure of this folder is shown below:\n\n```bash\n\u251c\u2500\u2500 examples\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cat_face_detection          // Cat Face Detection examples\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 lcd                     // Output displayed on LCD screen\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 terminal                // Output displayed on terminal\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 code_recognition            // Barcode and QR Code Recognition examples\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 human_face_detection        // Human Face Detection examples\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 lcd\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 terminal\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 human_face_recognition      // Human Face Recognition examples\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 lcd\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 terminal\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md               // Detailed description of examples\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 motion_detection            // Motion Detection examples\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 lcd\u00a0\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 terminal\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 web\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 README.rst              \n```\n\nFor the development boards mentioned in [Hardware](#Hardware), all examples are available out of the box. To run the examples, you only need to perform [Step 1: Set the target chip] (#Step-1 Set the target chip) and [Step 4: Launch and monitor] (#Step-4 Launch and monitor).\n\n### Step 1: Set the target chip\n\nOpen the terminal and go to any folder that stores examples (e.g. examples/human_face_detection/lcd). Run the following command to set the target chip: \n\n```bash\nidf.py set-target [SoC]\n```\n\nReplace [SoC] with your target chip, e.g. esp32, esp32s2, esp32s3.\n\n### (Optional) Step 2: Configure the camera\n\nIf not using the Espressif development boards mentioned in [Hardware](#Hardware), configure the camera pins manually. Enter `idf.py menuconfig` in the terminal and click (Top) -> Component config -> ESP-WHO Configuration to enter the ESP-WHO configuration interface, as shown below:\n\n![](./img/esp-who_config.png)\n\nClick Camera Configuration to select the pin configuration of the camera according to the development board you use, as shown in the following figure:\n\n![](./img/esp-who_config_camera_config_select_pinout.png)\n\nIf the board you are using is not shown in the figure above, please select ``Custom Camera Pinout`` and configure the corresponding pins correctly, as shown in the following figure: \n\n![](./img/esp-who_config_camera_config_custom.png)\n\n### (Optional) Step 3: Configure the Wi-Fi\n\nIf the output of example is displayed on web server, click Wi-Fi Configuration to configure Wi-Fi password and other parameters, as shown in the following figure: \n\n![](./img/esp-who_config_wifi_config.png)\n\n### Step 4: Launch and monitor\n\nFlash the program and launch IDF Monitor:\n\n```bash\nidf.py flash monitor\n```\n\n\n## Default Binaries of Development Boards\n\nThe default binaries for each development board are stored in the folder [default_bin](./default_bin). You can use Flash Download Tool (https://www.espressif.com/en/support/download/other-tools) to flash binaries.\n\n\n\n## Feedback\n\n\nPlease submit an [issue](https://github.com/espressif/esp-who/issues) if you find any problems using our products, and we will reply as soon as possible.\n",
            "readme_url": "https://github.com/espressif/esp-who",
            "frameworks": []
        }
    ],
    "domain": {
        "domain_type": "Unknown"
    }
}