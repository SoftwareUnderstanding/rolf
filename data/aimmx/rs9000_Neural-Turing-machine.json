{
    "visibility": {
        "visibility": "public"
    },
    "name": "Neural-Turing-machine",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "rs9000",
                "owner_type": "User",
                "name": "Neural-Turing-machine",
                "url": "https://github.com/rs9000/Neural-Turing-machine",
                "stars": 0,
                "pushed_at": "2020-06-06 13:49:19+00:00",
                "created_at": "2018-04-29 14:20:22+00:00",
                "language": "Python",
                "description": "NTM in PyTorch",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": "checkpoint",
                "sha": "3e9e17906fccd0d73c2f862f9955fa6fb3d4d2e9",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/rs9000/Neural-Turing-machine/tree/master/checkpoint"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": "controller.py",
                "sha": "7814483feeb1289a0635340f2e6e2ebe639e3af6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/rs9000/Neural-Turing-machine/blob/master/controller.py"
                    }
                },
                "size": 875
            },
            {
                "type": "code",
                "name": "img",
                "sha": "4c421c8b9ce18d9c36885cced504c7bcbaffaf6a",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/rs9000/Neural-Turing-machine/tree/master/img"
                    }
                },
                "num_files": 2
            },
            {
                "type": "code",
                "name": "memory.py",
                "sha": "ae396ac2b59d73d90e1aebd3c116fd2613d37350",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/rs9000/Neural-Turing-machine/blob/master/memory.py"
                    }
                },
                "size": 4205
            },
            {
                "type": "code",
                "name": "ntm.py",
                "sha": "4bfc87045744890fa72f9b231a6a3be4deb13765",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/rs9000/Neural-Turing-machine/blob/master/ntm.py"
                    }
                },
                "size": 2421
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "5f52593f16d7bbd5eddb23c699f5802076603bd5",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/rs9000/Neural-Turing-machine/blob/master/train.py"
                    }
                },
                "size": 6257
            }
        ]
    },
    "authors": [
        {
            "name": "Rs",
            "email": "rs.dicarlo@gmail.com",
            "github_id": "rs9000"
        }
    ],
    "tags": [
        "ntm",
        "neural-turing-machines",
        "pytorch",
        "deep-learning"
    ],
    "description": "NTM in PyTorch",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/rs9000/Neural-Turing-machine",
            "stars": 0,
            "issues": true,
            "readme": "# Neural-Turing-machine\nNTM in PyTorch<br>\nhttps://arxiv.org/pdf/1410.5401.pdf <br>\n\n### How to use\n\n```\nusage: train.py [-args]\n\noptional arguments:\n  -h, --help              show this help message and exit\n  --sequence_length       The length of the sequence to copy (default: 3)\n  --token_size            The size of the tokens making the sequence (default: 10)\n  --memory_capacity       Number of records that can be stored in memory (default: 64)\n  --memory_vector_size    Dimensionality of records stored in memory (default: 128)\n  --training_samples      Number of training samples (default: 999999)\n  --controller_output_dim Dimensionality of the feature vector produced by the controller (default: 256)\n  --controller_hidden_dim Dimensionality of the hidden layer of the controller (default: 512)\n  --learning_rate         Optimizer learning rate (default: 0.0001)\n  --min_grad              Minimum value of gradient clipping (default: -10.0)\n  --max_grad              Maximum value of gradient clipping (default: 10.0)\n  --logdir                The directory where to store logs (default: logs)\n  --loadmodel             The pre-trained model checkpoint (default: '')\n  --savemodel             Path/name to save model checkpoint (default: 'checkpoint.model')\n```\n\n## Copy task: <br>\n<img src=\"./img/output.jpg\" width=\"600\">\n\n### Memory snapshot: <br>\n<img src=\"./img/memory.jpg\" width=\"300\">\n",
            "readme_url": "https://github.com/rs9000/Neural-Turing-machine",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Neural Turing Machines",
            "arxiv": "1410.5401",
            "year": 2014,
            "url": "http://arxiv.org/abs/1410.5401v2",
            "abstract": "We extend the capabilities of neural networks by coupling them to external\nmemory resources, which they can interact with by attentional processes. The\ncombined system is analogous to a Turing Machine or Von Neumann architecture\nbut is differentiable end-to-end, allowing it to be efficiently trained with\ngradient descent. Preliminary results demonstrate that Neural Turing Machines\ncan infer simple algorithms such as copying, sorting, and associative recall\nfrom input and output examples.",
            "authors": [
                "Alex Graves",
                "Greg Wayne",
                "Ivo Danihelka"
            ]
        }
    ],
    "domain": {
        "domain_type": "Natural Language Processing",
        "domain_prob": 0.7927467782866795,
        "task": "Machine Translation",
        "task_prob": 0.7711843313679909
    }
}