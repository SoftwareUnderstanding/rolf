{
    "visibility": {
        "visibility": "public"
    },
    "name": "mobilenetv3-ssd",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "ujsyehao",
                "owner_type": "User",
                "name": "mobilenetv3-ssd",
                "url": "https://github.com/ujsyehao/mobilenetv3-ssd",
                "stars": 76,
                "pushed_at": "2020-02-27 03:02:52+00:00",
                "created_at": "2019-10-27 08:52:43+00:00",
                "language": "Python",
                "description": "provide pytorch model and ncnn model",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": "214.jpg",
                "sha": "fb2d4d5ef7a8a1ef0ed3a40a5fa9f650f871e47d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/ujsyehao/mobilenetv3-ssd/blob/master/214.jpg"
                    }
                },
                "size": 80842
            },
            {
                "type": "code",
                "name": "pytorch_model",
                "sha": "709cd65e5f35855a7b4e8f558d64b67dc9e58f19",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/ujsyehao/mobilenetv3-ssd/tree/master/pytorch_model"
                    }
                },
                "num_files": 3
            }
        ]
    },
    "authors": [
        {
            "name": "yehao",
            "email": "527282401@qq.com",
            "github_id": "ujsyehao"
        }
    ],
    "tags": [],
    "description": "provide pytorch model and ncnn model",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/ujsyehao/mobilenetv3-ssd",
            "stars": 76,
            "issues": true,
            "readme": "# mobilenetv3-ssd \n* train mobilenetv3-ssd use pytorch(provide **.pth* model)\n* convert to ncnn model(provide **.param*, **.bin*)\n\n## Backbone\nReference paper: MobileNetv3 https://arxiv.org/pdf/1905.02244.pdf\n\nWe mainly train mobilenetv3-ssd detection network rather than classification network, for convenience, we use trained mobiletnetv3-large network from https://github.com/xiaolai-sqlai/mobilenetv3 (**We are also trying to use** https://github.com/rwightman/gen-efficientnet-pytorch **provided mobilenetv3-large classification network**)\n\n*open-source mobilenetv3-large classification network*\n\n| mobilenetv3-large      | top-1 accuracy    |  params(million)  | flops/Madds(million) | \n| --------   | :-----:   | :----: | :------: | \n|   https://github.com/xiaolai-sqlai/mobilenetv3  | 75.5             |       3.96            |       272               |   \n|   https://github.com/d-li14/mobilenetv3.pytorch         |  73.2             |   5.15            |   246              |       \n| https://github.com/Randl/MobileNetV3-pytorch      |73.5             |  5.48           |  220               |    \n| https://github.com/rwightman/gen-efficientnet-pytorch | 75.6 | 5.5 | 219 | \n| official mobilenetv3 | 75.2 | 5.4 | 219 | \n| official mobilenetv2 | 72.0 | 3.4 | 300 |\n| official efficient B0 | 76.3 | 5.3 | 390 | \n\nFor extra-body, we use **1x1 conv + 3x3 dw conv + 1x1 conv** block follow mobilenetv2-ssd setting(official tensorflow version), details below:\n\n1x1 256 conv -> 3x3 256 s=2 conv -> 1x1 512 conv\n\n1x1 128 conv -> 3x3 128 s=2 conv -> 1x1 256 conv\n\n1x1 128 conv -> 3x3 128 s=2 conv -> 1x1 256 conv\n\n1x1 64  conv -> 3x3 64  s=2 conv -> 1x1 128 conv\n\n\n## Head\nFor head, we use **3x3 dw conv + 1x1 conv** block follow mobilenetv2-ssd-lite setting(official tensorflow version)\n\nWe choose 6 feature maps to predict box coordinates and label, their dimenstions are 19x19, 10x10, 5x5, 3x3, 2x2, 1x1. their anchor numbers are 4, 6, 6, 6, 4, 4.  \n\n## Training\nWe train mobilenetv3-ssd use mmdetection framework(based on pytorch), **we use PASCAL VOC0712 trainval dataset to train, it reaches 71.7mAP on VOC2007 test dataset.**\n\nimg test:\n\n![image](https://github.com/ujsyehao/mobilenetv3-ssd/blob/master/214.jpg)\n\n\n## Convert mobilenetv3-ssd pytorch model to ncnn framework \n1. convert *.pth* model to onnx(not included priorbox layer, detection_output layer) -> I provide origin pytorch model\n2. use onnx-simplifier to simplify onnx model\n3. convert simplified *.onnx* model to ncnn\n4. modify *.param* manually(add priorbox layer, detection_output layer, etc.) -> I provide converted ncnn model\n\n## How to use mobilenetv3-ssd in ncnn framework\nyou can refer to https://github.com/Tencent/ncnn/blob/master/examples/mobilenetv3ssdlite.cpp\n\n## model link\nmobilenetv3-ssd pytorch model \u767e\u5ea6\u7f51\u76d8\u94fe\u63a5: https://pan.baidu.com/s/1sTGrTHxpv4yZJUpTJD8BNw \u63d0\u53d6\u7801: sid9 \nmobilenetv3-ssd ncnn model \u767e\u5ea6\u7f51\u76d8\u94fe\u63a5: https://pan.baidu.com/s/1zBqGnp4utJGi6-IzYs7lTg \u63d0\u53d6\u7801: phdx  google drive link: https://drive.google.com/file/d/11_C_ko-arXnzM60udcXOMM5_PDNXuCcs/view?usp=sharing\n\n",
            "readme_url": "https://github.com/ujsyehao/mobilenetv3-ssd",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "Searching for MobileNetV3",
            "arxiv": "1905.02244",
            "year": 2019,
            "url": "http://arxiv.org/abs/1905.02244v5",
            "abstract": "We present the next generation of MobileNets based on a combination of\ncomplementary search techniques as well as a novel architecture design.\nMobileNetV3 is tuned to mobile phone CPUs through a combination of\nhardware-aware network architecture search (NAS) complemented by the NetAdapt\nalgorithm and then subsequently improved through novel architecture advances.\nThis paper starts the exploration of how automated search algorithms and\nnetwork design can work together to harness complementary approaches improving\nthe overall state of the art. Through this process we create two new MobileNet\nmodels for release: MobileNetV3-Large and MobileNetV3-Small which are targeted\nfor high and low resource use cases. These models are then adapted and applied\nto the tasks of object detection and semantic segmentation. For the task of\nsemantic segmentation (or any dense pixel prediction), we propose a new\nefficient segmentation decoder Lite Reduced Atrous Spatial Pyramid Pooling\n(LR-ASPP). We achieve new state of the art results for mobile classification,\ndetection and segmentation. MobileNetV3-Large is 3.2\\% more accurate on\nImageNet classification while reducing latency by 15\\% compared to MobileNetV2.\nMobileNetV3-Small is 4.6\\% more accurate while reducing latency by 5\\% compared\nto MobileNetV2. MobileNetV3-Large detection is 25\\% faster at roughly the same\naccuracy as MobileNetV2 on COCO detection. MobileNetV3-Large LR-ASPP is 30\\%\nfaster than MobileNetV2 R-ASPP at similar accuracy for Cityscapes segmentation.",
            "authors": [
                "Andrew Howard",
                "Mark Sandler",
                "Grace Chu",
                "Liang-Chieh Chen",
                "Bo Chen",
                "Mingxing Tan",
                "Weijun Wang",
                "Yukun Zhu",
                "Ruoming Pang",
                "Vijay Vasudevan",
                "Quoc V. Le",
                "Hartwig Adam"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9986824271039632,
        "task": "Object Detection",
        "task_prob": 0.7763329125678334
    },
    "training": {
        "datasets": [
            {
                "name": "Cityscapes"
            },
            {
                "name": "ImageNet"
            },
            {
                "name": "COCO"
            }
        ]
    }
}