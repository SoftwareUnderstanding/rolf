{
    "visibility": {
        "visibility": "public"
    },
    "name": "Modified Residual Network",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "xinkuansong",
                "owner_type": "User",
                "name": "modified-resnet-acc-0.9638-10.7M-parameters",
                "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters",
                "stars": 2,
                "pushed_at": "2019-09-19 10:09:05+00:00",
                "created_at": "2019-09-16 04:08:08+00:00",
                "language": "Python",
                "description": "Modified residual network to improve model performance for Image Recognition",
                "frameworks": [
                    "Keras"
                ]
            },
            {
                "type": "code",
                "name": "cifar10.py",
                "sha": "e50b62e48b47c616c895996e03abf869c3c56928",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/cifar10.py"
                    }
                },
                "size": 797
            },
            {
                "type": "code",
                "name": "images",
                "sha": "fe1a9edfe0e3266e5a3a16dec08e1b28626dcfcf",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/tree/master/images"
                    }
                },
                "num_files": 5
            },
            {
                "type": "code",
                "name": "modified_resnet.py",
                "sha": "14fe7810e22ff0002cd1ca768c42a8185ef96e3f",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/modified_resnet.py"
                    }
                },
                "size": 3536
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "88c6d83b828ac648eb7984023c86bf93b5a5053d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/train.py"
                    }
                },
                "size": 6342
            },
            {
                "type": "code",
                "name": "train_modified_resnet.ipynb",
                "sha": "ade7b40d66234dd62ea5fb1d9620a6427b4b2bca",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/train_modified_resnet.ipynb"
                    }
                },
                "size": 8058
            },
            {
                "type": "code",
                "name": "utils.py",
                "sha": "ce711aa53f4a10596cb8ce142276ad88c2bd586a",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/utils.py"
                    }
                },
                "size": 1019
            }
        ]
    },
    "authors": [
        {
            "name": "xinkuansong",
            "github_id": "xinkuansong"
        }
    ],
    "tags": [],
    "description": "Modified residual network to improve model performance for Image Recognition",
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters",
            "stars": 2,
            "issues": true,
            "readme": "# Modified Residual Network\n\nBy Song xinkuan.\n\n### Table of Contents\n0. [Introduction](#introduction)\n0. [Model Discription, Implementation, and Training Detatils](#model-discription-implementation-and-training-details)\n0. [Results](#results)\n\n### Introduction\n\nThis repository contains the original modified residual network which modified the classical resnet \"Deep Residual Learning for Image Recognition\" (http://arxiv.org/abs/1512.03385). Original residual block was modified to improve model performance. \n\n### Model Discription and Implementation\n\n#### Model disciption\nFirstly, the modified residual network introduces filtering mechanism in the basic residual block. Comparing to original residual block, shortcut connection was introduced just after the relu activation and an additional batch normalization was added after the shortcut connetction. See in the following image.\n![Residual block Vs modified residual block](https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/images/residual%20block%20VS%20modified%20residual%20block.PNG)\nThe shortcut connection between bn of former block and relu activation of current block functioned as filtering mechanism, it can determine which part of features should be emphasized and which part of features should not to be. Detail illustration of modified residual block below. \n![Modified residual block](https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/images/modified%20residual%20block.PNG)\nSecondly, no bottleneck architecture and no doubling number of feature maps after each time shrinking feature map size in modified residual block.\n\n#### Model implementation and training details\n\nModel implemented in keras with tensorflow backend.  \nDepth: 76  \nNumber of parameters: 10.73M  \nDatasets: cifar10+  \nLearning rate schedule: the training process of modified residual network was separated into two stages, including stepwise decay of stage1(240 epochs) and consine decay of stage2(150 epochs)  \nEquipment: Single NVDIA 1080Ti  \n### Results\nLearning rate schedule of two training stages:\n![Learning rate schedule](https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/images/lr_log.png)\nTraining and validation loss: \n![Training and validation loss](https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/images/loss.png)\nTraining and validation accuracy: \n![Training and validation accuracy](https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters/blob/master/images/acc.png)\nThe final validation accuracy is 96.38%. (Three times maximum: 96.44%, mean: 96.34%)\n\n### Connection:\nYou can connect me through: sxk_ml@163.com\n",
            "readme_url": "https://github.com/xinkuansong/modified-resnet-acc-0.9638-10.7M-parameters",
            "frameworks": [
                "Keras"
            ]
        }
    ],
    "references": [
        {
            "title": "Deep Residual Learning for Image Recognition",
            "arxiv": "1512.03385",
            "year": 2015,
            "url": "http://arxiv.org/abs/1512.03385v1",
            "abstract": "Deeper neural networks are more difficult to train. We present a residual\nlearning framework to ease the training of networks that are substantially\ndeeper than those used previously. We explicitly reformulate the layers as\nlearning residual functions with reference to the layer inputs, instead of\nlearning unreferenced functions. We provide comprehensive empirical evidence\nshowing that these residual networks are easier to optimize, and can gain\naccuracy from considerably increased depth. On the ImageNet dataset we evaluate\nresidual nets with a depth of up to 152 layers---8x deeper than VGG nets but\nstill having lower complexity. An ensemble of these residual nets achieves\n3.57% error on the ImageNet test set. This result won the 1st place on the\nILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100\nand 1000 layers.\n  The depth of representations is of central importance for many visual\nrecognition tasks. Solely due to our extremely deep representations, we obtain\na 28% relative improvement on the COCO object detection dataset. Deep residual\nnets are foundations of our submissions to ILSVRC & COCO 2015 competitions,\nwhere we also won the 1st places on the tasks of ImageNet detection, ImageNet\nlocalization, COCO detection, and COCO segmentation.",
            "authors": [
                "Kaiming He",
                "Xiangyu Zhang",
                "Shaoqing Ren",
                "Jian Sun"
            ]
        }
    ],
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9999996095035287,
        "task": "Object Detection",
        "task_prob": 0.9332024641428951
    },
    "training": {
        "datasets": [
            {
                "name": "ImageNet"
            },
            {
                "name": "ImageNet Detection"
            },
            {
                "name": "COCO"
            },
            {
                "name": "CIFAR-10"
            },
            {
                "name": "ILSVRC 2015"
            }
        ]
    }
}