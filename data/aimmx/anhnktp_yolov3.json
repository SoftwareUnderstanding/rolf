{
    "visibility": {
        "visibility": "public",
        "license": "GNU General Public License v3.0"
    },
    "name": "yolov3",
    "definition": {
        "code": [
            {
                "type": "repo",
                "repo_type": "github",
                "owner": "anhnktp",
                "owner_type": "User",
                "name": "yolov3",
                "url": "https://github.com/anhnktp/yolov3",
                "stars": 1,
                "pushed_at": "2019-10-01 02:58:05+00:00",
                "created_at": "2019-10-01 02:58:00+00:00",
                "language": "Jupyter Notebook",
                "license": "GNU General Public License v3.0",
                "frameworks": [
                    "PyTorch"
                ]
            },
            {
                "type": "code",
                "name": ".github",
                "sha": "2a28b24e1cfb437005b675f176559f7574ba8e99",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/tree/master/.github"
                    }
                },
                "num_files": 1
            },
            {
                "type": "code",
                "name": ".gitignore",
                "sha": "9ff1a3756ef8d297754d264b288793832e6016dc",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/.gitignore"
                    }
                },
                "size": 3800
            },
            {
                "type": "code",
                "name": "LICENSE",
                "sha": "9e419e042146a2ce2e354202d4f7d8e4a3d66f31",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/LICENSE"
                    }
                },
                "size": 35126
            },
            {
                "type": "code",
                "name": "cfg",
                "sha": "37140d43602b5b9438faf3c1efe8afdbcb090515",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/tree/master/cfg"
                    }
                },
                "num_files": 11
            },
            {
                "type": "code",
                "name": "data",
                "sha": "90f3008509cc84feeb33adfc7e8564f47660e5ca",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/tree/master/data"
                    }
                },
                "num_files": 27
            },
            {
                "type": "code",
                "name": "detect.py",
                "sha": "9416c184b3072bdddc9cc35f94791d5d05ee8d8d",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/detect.py"
                    }
                },
                "size": 6280
            },
            {
                "type": "code",
                "name": "examples.ipynb",
                "sha": "bebc3088f496fef729bca0da1d55ca999d258ff0",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/examples.ipynb"
                    }
                },
                "size": 880371
            },
            {
                "type": "code",
                "name": "models.py",
                "sha": "1ca41cf65bc1b0d6969b78784f0ca4bbddf6f236",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/models.py"
                    }
                },
                "size": 19904
            },
            {
                "type": "code",
                "name": "requirements.txt",
                "sha": "ee81adbc366e734a0708fcaa4b7f18f1dcb12dfa",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/requirements.txt"
                    }
                },
                "size": 488
            },
            {
                "type": "code",
                "name": "test.py",
                "sha": "100929a8fe787d71c45ef94cb29b425becac9fff",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/test.py"
                    }
                },
                "size": 8969
            },
            {
                "type": "code",
                "name": "train.py",
                "sha": "4f8e0eb304e3a1da3405abe154aa4433c86cddf6",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/train.py"
                    }
                },
                "size": 21813
            },
            {
                "type": "code",
                "name": "utils",
                "sha": "028f29f68b0eca25789561ff47c75300de4b8135",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/tree/master/utils"
                    }
                },
                "num_files": 8
            },
            {
                "type": "code",
                "name": "weights",
                "sha": "23b912d7d49fb4121f5bd26108d76d0f0233a044",
                "filetype": "dir",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/tree/master/weights"
                    }
                },
                "num_files": 1
            }
        ]
    },
    "trained_model": {
        "binaries": [
            {
                "type": "binary",
                "name": "Dockerfile",
                "sha": "8e0ca29549f4d219618d9a8ba1f553ae95f3ce8b",
                "filetype": "file",
                "connection": {
                    "name": "github_url",
                    "source": {
                        "url": "https://github.com/anhnktp/yolov3/blob/master/Dockerfile"
                    }
                },
                "size": 2940
            }
        ]
    },
    "authors": [
        {
            "name": "V\u0169 Nh\u1eadt Anh",
            "email": "anhnktp@gmail.com",
            "github_id": "anhnktp"
        }
    ],
    "tags": [
        "object-detection"
    ],
    "extraction": [
        {
            "type": "github",
            "url": "https://github.com/anhnktp/yolov3",
            "stars": 1,
            "issues": true,
            "readme": "<table style=\"width:100%\">\n  <tr>\n    <td>\n      <img src=\"https://user-images.githubusercontent.com/26833433/61591130-f7beea00-abc2-11e9-9dc0-d6abcf41d713.jpg\">\n    </td>\n    <td align=\"center\">\n    <a href=\"https://www.ultralytics.com\" target=\"_blank\">\n    <img src=\"https://storage.googleapis.com/ultralytics/logo/logoname1000.png\" width=\"160\"></a>\n      <img src=\"https://user-images.githubusercontent.com/26833433/61591093-2b4d4480-abc2-11e9-8b46-d88eb1dabba1.jpg\">\n          <a href=\"https://itunes.apple.com/app/id1452689527\" target=\"_blank\">\n    <img src=\"https://user-images.githubusercontent.com/26833433/50044365-9b22ac00-0082-11e9-862f-e77aee7aa7b0.png\" width=\"180\"></a>\n    </td>\n    <td>\n      <img src=\"https://user-images.githubusercontent.com/26833433/61591100-55066b80-abc2-11e9-9647-52c0e045b288.jpg\">\n    </td>\n  </tr>\n</table>\n\n# Introduction\n\nThis directory contains PyTorch YOLOv3 software developed by Ultralytics LLC, and **is freely available for redistribution under the GPL-3.0 license**. For more information please visit https://www.ultralytics.com.\n\n# Description\n\nThe https://github.com/ultralytics/yolov3 repo contains inference and training code for YOLOv3 in PyTorch. The code works on Linux, MacOS and Windows. Training is done on the COCO dataset by default: https://cocodataset.org/#home. **Credit to Joseph Redmon for YOLO:** https://pjreddie.com/darknet/yolo/.\n\n# Requirements\n\nPython 3.7 or later with the following `pip3 install -U -r requirements.txt` packages:\n\n- `numpy`\n- `torch >= 1.1.0`\n- `opencv-python`\n- `tqdm`\n\n# Tutorials\n\n* [GCP Quickstart](https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart)\n* [Transfer Learning](https://github.com/ultralytics/yolov3/wiki/Example:-Transfer-Learning)\n* [Train Single Image](https://github.com/ultralytics/yolov3/wiki/Example:-Train-Single-Image)\n* [Train Single Class](https://github.com/ultralytics/yolov3/wiki/Example:-Train-Single-Class)\n* [Train Custom Data](https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data)\n\n# Jupyter Notebook\n\nOur Jupyter [notebook](https://colab.research.google.com/github/ultralytics/yolov3/blob/master/examples.ipynb) provides quick training, inference and testing examples.\n\n# Training\n\n**Start Training:** `python3 train.py` to begin training after downloading COCO data with `data/get_coco_dataset.sh`. Each epoch trains on 117,263 images from the train and validate COCO sets, and tests on 5000 images from the COCO validate set.\n\n**Resume Training:** `python3 train.py --resume` to resume training from `weights/last.pt`.\n\n**Plot Training:** `from utils import utils; utils.plot_results()` plots training results from `coco_16img.data`, `coco_64img.data`, 2 example datasets available in the `data/` folder, which train and test on the first 16 and 64 images of the COCO2014-trainval dataset.\n\n<img src=\"https://user-images.githubusercontent.com/26833433/63258271-fe9d5300-c27b-11e9-9a15-95038daf4438.png\" width=\"900\">\n\n## Image Augmentation\n\n`datasets.py` applies random OpenCV-powered (https://opencv.org/) augmentation to the input images in accordance with the following specifications. Augmentation is applied **only** during training, not during inference. Bounding boxes are automatically tracked and updated with the images. 416 x 416 examples pictured below.\n\nAugmentation | Description\n--- | ---\nTranslation | +/- 10% (vertical and horizontal)\nRotation | +/- 5 degrees\nShear | +/- 2 degrees (vertical and horizontal)\nScale | +/- 10%\nReflection | 50% probability (horizontal-only)\nH**S**V Saturation | +/- 50%\nHS**V** Intensity | +/- 50%\n\n<img src=\"https://user-images.githubusercontent.com/26833433/61579359-507b7d80-ab04-11e9-8a2a-bd6f59bbdfb4.jpg\" width=\"900\">\n\n## Speed\n\nhttps://cloud.google.com/deep-learning-vm/  \n**Machine type:** n1-standard-8 (8 vCPUs, 30 GB memory)  \n**CPU platform:** Intel Skylake  \n**GPUs:** K80 ($0.20/hr), T4 ($0.35/hr), V100 ($0.83/hr) CUDA with [Nvidia Apex](https://github.com/NVIDIA/apex) FP16/32  \n**HDD:** 100 GB SSD  \n**Dataset:** COCO train 2014 (117,263 images)\n\nGPUs | `batch_size` | images/sec | epoch time | epoch cost\n--- |---| --- | --- | --- \nK80 | 64 (32x2) | 11  | 175 min  | $0.58\nT4 | 64 (32x2) | 40  | 49 min  | $0.29\nT4 x2 | 64 (64x1) | 61  | 32 min  | $0.36\nV100 | 64 (32x2) | 115 | 17 min | $0.24\nV100 x2 | 64 (64x1) | 150 | 13 min | $0.36\n2080Ti | 64 (32x2) | 81  | 24 min  | - \n2080Ti x2 | 64 (64x1) | 140  | 14 min  | - \n\n# Inference\n\n`detect.py` runs inference on any sources:\n\n```bash\npython3 detect.py --source ...\n```\n\n- Image:  `--source file.jpg`\n- Video:  `--source file.mp4`\n- Directory:  `--source dir/`\n- Webcam:  `--source 0`\n- RTSP stream:  `--source rtsp://170.93.143.139/rtplive/470011e600ef003a004ee33696235daa`\n- HTTP stream:  `--source http://wmccpinetop.axiscam.net/mjpg/video.mjpg`\n\nTo run a specific models:\n\n**YOLOv3:** `python3 detect.py --cfg cfg/yolov3.cfg --weights weights/yolov3.weights`\n<img src=\"https://user-images.githubusercontent.com/26833433/64067835-51d5b500-cc2f-11e9-982e-843f7f9a6ea2.jpg\" width=\"500\">\n\n**YOLOv3-tiny:** `python3 detect.py --cfg cfg/yolov3-tiny.cfg --weights weights/yolov3-tiny.weights`\n<img src=\"https://user-images.githubusercontent.com/26833433/64067834-51d5b500-cc2f-11e9-9357-c485b159a20b.jpg\" width=\"500\">\n\n**YOLOv3-SPP:** `python3 detect.py --cfg cfg/yolov3-spp.cfg --weights weights/yolov3-spp.weights`\n<img src=\"https://user-images.githubusercontent.com/26833433/64067833-51d5b500-cc2f-11e9-8208-6fe197809131.jpg\" width=\"500\">\n\n\n# Pretrained Weights\n\n- Darknet `*.weights` format: https://pjreddie.com/media/files/yolov3.weights\n- PyTorch `*.pt` format: https://drive.google.com/drive/folders/1uxgUBemJVw9wZsdpboYbzUN4bcRhsuAI\n\n## Darknet Conversion\n\n```bash\ngit clone https://github.com/ultralytics/yolov3 && cd yolov3\n\n# convert darknet cfg/weights to pytorch model\npython3  -c \"from models import *; convert('cfg/yolov3-spp.cfg', 'weights/yolov3-spp.weights')\"\nSuccess: converted 'weights/yolov3-spp.weights' to 'converted.pt'\n\n# convert cfg/pytorch model to darknet weights\npython3  -c \"from models import *; convert('cfg/yolov3-spp.cfg', 'weights/yolov3-spp.pt')\"\nSuccess: converted 'weights/yolov3-spp.pt' to 'converted.weights'\n```\n\n# mAP\n\n- `test.py --weights weights/yolov3.weights` tests official YOLOv3 weights.\n- `test.py --weights weights/last.pt` tests most recent checkpoint.\n- `test.py --weights weights/best.pt` tests best checkpoint.\n- Compare to darknet published results https://arxiv.org/abs/1804.02767.\n\n[ultralytics/yolov3](https://github.com/ultralytics/yolov3) mAP@0.5 ([darknet](https://arxiv.org/abs/1804.02767)-reported mAP@0.5)\n\n<i></i>         | 320         | 416         | 608\n---             | ---         | ---         | ---\n`YOLOv3`        | 51.8 (51.5) | 55.4 (55.3) | 58.2 (57.9)\n`YOLOv3-SPP`    | 52.4        | 56.8        | 60.7 (60.6)\n`YOLOv3-tiny`   | 29.0        | 32.9 (33.1) | 35.5\n\n```bash\npython3 test.py --save-json --img-size 608\nNamespace(batch_size=16, cfg='cfg/yolov3-spp.cfg', conf_thres=0.001, data='data/coco.data', img_size=608, iou_thres=0.5, nms_thres=0.5, save_json=True, weights='weights/yolov3-spp.weights')\nUsing CUDA device0 _CudaDeviceProperties(name='Tesla T4', total_memory=15079MB)\n                Class    Images   Targets         P         R       mAP        F1: 100% 313/313 [07:40<00:00,  2.34s/it]\n                  all     5e+03  3.58e+04     0.119     0.788     0.594     0.201\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.367 <---\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.607 <---\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.387\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.208\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.392\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.487\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.297\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.465\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.495\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.332\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.518\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.621\n\npython3 test.py --save-json --img-size 416\nNamespace(batch_size=16, cfg='cfg/yolov3-spp.cfg', conf_thres=0.001, data='data/coco.data', img_size=416, iou_thres=0.5, nms_thres=0.5, save_json=True, weights='weights/yolov3-spp.weights')\nUsing CUDA device0 _CudaDeviceProperties(name='Tesla T4', total_memory=15079MB)\n                Class    Images   Targets         P         R       mAP        F1: 100% 313/313 [07:01<00:00,  1.41s/it]\n                  all     5e+03  3.58e+04     0.107     0.749     0.557     0.182\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.337 <---\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.568 <---\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.350\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.152\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.359\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.496\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.279\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.432\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.460\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.494\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.623\n```\n\n# Citation\n\n[![DOI](https://zenodo.org/badge/146165888.svg)](https://zenodo.org/badge/latestdoi/146165888)\n\n# Contact\n\nIssues should be raised directly in the repository. For additional questions or comments please email Glenn Jocher at glenn.jocher@ultralytics.com or visit us at https://contact.ultralytics.com.\n",
            "readme_url": "https://github.com/anhnktp/yolov3",
            "frameworks": [
                "PyTorch"
            ]
        }
    ],
    "references": [
        {
            "title": "YOLOv3: An Incremental Improvement",
            "arxiv": "1804.02767",
            "year": 2018,
            "url": "http://arxiv.org/abs/1804.02767v1",
            "abstract": "We present some updates to YOLO! We made a bunch of little design changes to\nmake it better. We also trained this new network that's pretty swell. It's a\nlittle bigger than last time but more accurate. It's still fast though, don't\nworry. At 320x320 YOLOv3 runs in 22 ms at 28.2 mAP, as accurate as SSD but\nthree times faster. When we look at the old .5 IOU mAP detection metric YOLOv3\nis quite good. It achieves 57.9 mAP@50 in 51 ms on a Titan X, compared to 57.5\nmAP@50 in 198 ms by RetinaNet, similar performance but 3.8x faster. As always,\nall the code is online at https://pjreddie.com/yolo/",
            "authors": [
                "Joseph Redmon",
                "Ali Farhadi"
            ]
        },
        {
            "title": "GCP Quickstart",
            "url": "https://github.com/ultralytics/yolov3/wiki/GCP-Quickstart"
        },
        {
            "title": "Transfer Learning",
            "url": "https://github.com/ultralytics/yolov3/wiki/Example:-Transfer-Learning"
        },
        {
            "title": "Train Single Image",
            "url": "https://github.com/ultralytics/yolov3/wiki/Example:-Train-Single-Image"
        },
        {
            "title": "Train Single Class",
            "url": "https://github.com/ultralytics/yolov3/wiki/Example:-Train-Single-Class"
        },
        {
            "title": "Train Custom Data",
            "url": "https://github.com/ultralytics/yolov3/wiki/Train-Custom-Data"
        }
    ],
    "training": {
        "datasets": [
            {
                "name": "COCO"
            }
        ]
    },
    "domain": {
        "domain_type": "Computer Vision",
        "domain_prob": 0.9994833460401087,
        "task": "Object Detection",
        "task_prob": 0.9895595000290055
    }
}