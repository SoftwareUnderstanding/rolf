Label;Repo;Text
C C++;https://github.com/ThrowTheSwitch/Unity;unity test __copyright unity project mike karlesky mark vandervoord greg williams__ welcome unity test project main project throwtheswitch org unity test unit test framework focus work embed toolchains project make test targetting microcontrollers big small core project single pair header allow add exist setup without much headache may compiler wish may exist system include make cmake etc would like leave hard work might interest ceedling tool also throwtheswitch org new unity encourage tour get start guide get start doc folder contain get start guide much tip unity unity assertion summary full list see unityassertionsreference basic validity test test_assert_true condition evaluate whatever condition fail evaluate false test_assert_false condition evaluate whatever condition fail evaluate true test_assert condition another way call test_assert_true test_assert_unless condition another way call test_assert_false test_fail test_fail_message message test automatically mark failure message output state numerical assertion integer test_assert_equal_int expect actual test_assert_equal_int8 expect actual test_assert_equal_int16 expect actual test_assert_equal_int32 expect actual test_assert_equal_int64 expect actual compare integer equality display error sign integer cast perform natural integer size often need specify exact size like compare array specific version test_assert_equal_uint expect actual test_assert_equal_uint8 expect actual test_assert_equal_uint16 expect actual test_assert_equal_uint32 expect actual test_assert_equal_uint64 expect actual compare integer equality display error unsigned integer like int variant different size also test_assert_equal_hex expect actual test_assert_equal_hex8 expect actual test_assert_equal_hex16 expect actual test_assert_equal_hex32 expect actual test_assert_equal_hex64 expect actual compare integer equality display error hexadecimal like integer comparison specify size size also effect many nibble show hex16 show nibble test_assert_equal expect actual another way call test_assert_equal_int test_assert_int_within delta expect actual assert actual value within plus minus delta expect value also come size specific variant test_assert_greater_than threshold actual assert actual value great threshold also come size specific variant test_assert_less_than threshold actual assert actual value threshold also come size specific variant array _array append _array macro make array comparison type need care bite actual size value check also specify additional argument number element compare test_assert_equal_hex8_array expect actual element _each_equal another array comparison option check every element array equal single expect value specify each_equal macro test_assert_each_equal_int32 expect actual element numerical assertion bitwise test_assert_bits mask expect actual integer mask specify bit compare integer high bit mask compare low bit ignore test_assert_bits_high mask actual integer mask specify bit inspect determine set high high bit mask compare low bit ignore test_assert_bits_low mask actual integer mask specify bit inspect determine set low high bit mask compare low bit ignore test_assert_bit_high bite actual test single bite verify high bite specify bite integer test_assert_bit_low bite actual test single bite verify low bite specify bite integer numerical assertion float test_assert_float_within delta expect actual assert actual value within plus minus delta expect value test_assert_equal_float expect actual test_assert_equal_double expect actual assert float point value equal within small delta expect value string assertion test_assert_equal_string expect actual compare null terminate string fail character different length different test_assert_equal_string_len expect actual len compare string fail character different stop compare len character test_assert_equal_string_message expect actual message compare null terminate string fail character different length different output custom message failure test_assert_equal_string_len_message expect actual len message compare string fail character different stop compare len character output custom message failure pointer assertion pointer operation perform simply integer comparison however couple special case add clarity test_assert_null pointer fail pointer equal null test_assert_not_null pointer fail pointer equal null memory assertion test_assert_equal_memory expect actual len compare block memory good generic assertion type coerce act like standard type since memory compare careful type pack _message append _message macro make take additional argument argument string print end failure string useful specify information problem get start guide doc unitygettingstartedguide doc doc unityassertionsreference doc unityassertionsreference
C C++;https://github.com/mrtazz/restclient-cpp;rest client coverage mit simple rest client wrap libcurl http request usage restclient cpp provide way interact rest endpoint simple need configure object interact api however simple way provide lot configuration option either need simple http call probably want check advance usage simple usage simple api static method common http verb response type restclient response restclient_response attribute advance usage however want sophisticate feature like connection reuse timeouts authentication also different configurable way response type restclient response restclient_response attribute connection object also provide simple way get diagnostics metric information via conn getinfo restclient connection info struct look like persistent connection keep alive connection object store curl easy handle instance variable lifetime object mean curl automatically reuse connection curl_keepalive make handle progress callback wrapper function provide setup progress callback upload call conn setfileprogresscallback callback callback parameter match prototype int progress_callback void clientp double dltotal double dlnow double ultotal double ulnow setup progress callback call conn setfileprogresscallbackdata optional set pointer first parameter feed back progress callback clientp set clientp default connection object conn write callback write callback function provide process receive get call instance kubernetes watch call conn setwritefunction callback function parameter match prototype size_t write_function void size_t size size_t nmemb void userdata int progress_callback void clientp double dltotal double dlnow double ultotal double ulnow setup write function write callback function process line line error handle restclient cpp encounter error generally error status return response see response struct error either http error low level curl error encounter may currently libcurl define error cod mean overlap curl error cod http response cod start 1xx however future libcurl define error cod mean curl error overlap http 1xx class response restclient cpp return curlcode high case caller getinfo lastrequest curlcode inspect actual curl error thread safety restclient cpp lean heavily libcurl aim provide thin wrapper around mean adhere basic level thread safety provide libcurl curl_threadsafety restclient init restclient disable method basically correspond curl_global_init curl_global_cleanup thus need call right begin program shutdown respectively set environment thread safe create connection object thread share connection object across thread would mean access curl handle multiple thread time allow connection level method setnosignal set skip signal handle important multi thread application dns resolution timeouts signal signal handler quite readily get execute thread note option dns resolution timeouts work crash multi thread executable appear dns resolution probably order provide easy api simple usage via static method implicitly call curl global function therefore also thread safe http user certificate simple wrapper function provide allow client authenticate certificate hood wrapper set curl option curlopt_sslcert curl_easy_setopt note currently libcurl compile gnutls libcurl4 gnutls dev ubuntu buggy return wrong error option set invalid value http proxy tunnel support http proxy set upcoming request specify port number append port end host name specify libcurl default port proxy proxy string may prefix http scheme specify address provide libcurl prefix specify http proxy proxy host string embed user password operation tunnel proxy curl option curlopt_httpproxytunnel enable default numerical ipv6 address must write within bracket unix socket support curl unix socket var docker sock note url unix socket lead forward slash dependency libcurl installation package available linux packagecloud packagecloud osx get mrtazz homebrew tap otherwise regular autotools dance alternatively restclient cpp dependency manager restclient cpp port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository contribute contribution highly appreciate include issue update documentation write please take look contribute guideline contribute contribution merge fast possible libcurl gtest packagecloud contribute curl_keepalive curl_threadsafety restclient_response
C C++;https://github.com/nothings/single_file_libs;single public domain open source library minimal dependency author large number single public domain person write library like similar library generally follow list small easy integrate portable library usable able compile bite bite platform however personally verify specific lilbrary advertise quality software rule library must usable ideally library usable platform ideally major desktop major mobile library compile work bite bite platform library header source exception allow good reason recent addition recent addition mark asterisk leave column new library correction see discussion list json parse lot json parser list analysis performance check list also might interest relate different list list mostly small single function license list package lot shareable function mix license library list public domain single library usable bold library either non public domain usable library mostly forbid api column mean mean mean usable either may require still qualify long header extern make work case header library may compile produce call lack extern case table still qualify obstacle user category general purpose structure structure string process string script script hash hash mathematics vector math vector geometry math geometry math general math math parse json json yaml yaml csv csv serialization serialization argv argument process argv parse parse graphic textmode graphic text graphic graphic graphic graphic geometry process geometry image load save process image audio video compression compression compression audio process audio video video videogames videogames operate system feature filename filename multithreading multithreading hardware interfacing hardware debug profile test debug debug profile profile unit test etc unit test cryptography crypto user interface user interface miscellaneous miscellaneous library license api description zlib simple neural ann mit automatic differentiation zlib pathfinding argv library license api description bsd command line argument parse boost composable command line parser beyond bsd feature rich cli parse modern bsd command line argument parse public domain command line argument parse mit command line argument parse mit command line argument parse style option mit command line argument parse public domain command line argument parse mit command line argument parse audio library license api description mit adpcm audio decoder mit ima_adpcm variant public domain flac audio decoder public domain wav audio loader mit library generate bite waveform various kind cc0 minimalistic mp3 decoder sse neon support public domain audio playback capture library mit protracker mod renderer public domain simple stereo audio mixer zlib direct sound audio mixer wav loader mit soundfont2 loader synthesizer compression library license api description gplv2 rar decompression mit fast large compression bsd fast large compression mit compression decompression zip png write mit lightweight tar library bsd fast large compression crypto library license api description public domain high quality small cryptography library public domain high quality tiny cryptography library structure library license api description public domain avl tree wtfplv2 simple easy boolean value standard mit several standard contaner like library helper public domain typesafe dynamic array like std vector plain gpl object store type primitive type mit many libs hash sort tree etc bsd priority queue heap public domain binary tress also regex etc wtfplv2 memory efficient array element non pow2 bitcount bsd link list isc space efficient link list mit efficient minimal memory pool bsd several header license libs generic hash list etc debug library license api description zlib cross platform debug util library zlib modular assertion macro bsd programmatic debug break public domain flexible log wtfplv2 flexible assertion filename library license api description public domain daniel gibson stb esque cross platform helper path string mit dirent window retrieve dir info mit wrapper read write append seek close win mac unix bsd cross platform directory read win posix mingw zlib cross platform directory read win mac unix wtfplv2 get path filename executable module geometry library license api description mit gltf loader mit wavefront loader mit wavefront loader public domain ply mesh loader mit wavefront loader mit wavefront loader mit loader mit wavefront loader geometry math library license api description boost line polygon clip offset public domain find voronoi region linear time size lattice mit find voronoi region float double bsd tree point cloud public domain find voronoi region lattice integer input mit convert binarized image triangle mit generate various geometric shape mit polygon triangulation partition public domain march cub triangulator public domain sobol stratify sample sequence mit compute sign distance field antialiased image tomas akenine moller public domain various intersection calculation lib ified mit convert triangle mesh voxel triangle mesh mit mesh parameterization mit ray cast close element query bound volume hierarchy mit shape generation tesselation normal etc graphic text library license api description public domain cross platform color console text graphic library license api description mit blender style widget render nanovg cecill cecill image process toolkit 60k loc public domain configuration immediate mode graphic window mit procedural graphic generator public domain quick dirty window text graphic window macos graphic library license api description public domain api agnostic immediate mode debug render public domain opengl renderer offline bake lightmaps zlib compute tangent space normal map public domain minimalistic sse packet raytracer offline bake public domain modify lightmap hide seam mit cross platform api wrapper gles2 gl3 d3d11 metal public domain swarm flock algorithm public domain gizmo object interactively edit transformation vertex cache public domain vertex cache optimization mesh vulkan memory memory allocator vulkan mit physically base unidirectional path tracer direct light mit rigid body simulator sequential impulse pgs support concave object hardware library license api description public domain multi platform tablet input mit helper library linux device hot plug event hash library license api description bsd fast hash function image library license api description exr public domain openexr writer need header exr bsd exr image read write miniz internally gif public domain animate gif writer include gif public domain animate gif reader gif public domain animate gif writer cpp also jpg public domain jpeg compress jpeg decompress jpg mit jpeg decoder jpg public domain jpeg encoder jpg exif mit exif metadata extractor jpeg image jpg exif bsd parse exif jpeg xmp tinyxml2 lib pdf public domain pdf writer png zlib png encoder decoder png zlib tiny png loader png lgplv3 png writer pnm apache pbm pgm ppm reader writer svg zlib svg parser svg rasterizer public domain average min max mipmap generator public domain fill color pixel alpha math library license api description mit constraint solver cassowary lua bind public domain fast fourier transform mit poisson disk point generator disk rect public domain seekable pseudo random number sequence public domain pseudo random number generation mit also hlsl approximate transcendental function optimize shaders esp gcn mit simrank graph similarity algorithm mit sum area table generation sum avg query zlib evaluation math expression string multithreading library license api description mit cross platform lock free fix memory hierarchical work scheduler zlib cross platform multithreaded task scheduler base public domain cross platform thread primitive zlib cross platform c11 thread api zlib cross platform thread api library license api description mit http server fork mongoose bsd http server zlib http client request public domain http get post mpl cross platform socket wrapper marshal native json serialization deserialization mit lightweight url uri parser rfc rfc bsd lightweight webserver fork webby gplv2 http server mit curl wrapper public domain cross platform socket wrapper socket set packet api public domain non production http server public domain cross platform socket wrapper mit cross platform lua bind serialization library license api description public domain binary serialize deserlize stl support mpl cross platform serialization deserialization native json json library license api description boost json serialize deserialize stl support mit json parser public domain json parser mit json parse serialize deserialize mit json parser bsd json parse serializer mit json parser serializer yaml library license api description mit yaml parser serializer csv library license api description mit csv parser fast csv bsd csv parser bsd csv parser vince csv mit csv parser serializer parse library license api description mit messagepack parser serializer bsd ini parser public domain ini parser public domain regex also binary tree etc zlib esque language lexer _gplv2_ regular expression matcher zlib fscanf memory profile library license api description public domain cpu gpu profiler header miniz internally mit profiler linux apache cpu gpu profiler win mac linux web browser viewer script library license api description mit embeddable javascript engine mit interpreter basic dialect script language zlib interpreter tcl like script language mit generate lua bind bsd interpreter tcl like script language bsd interpreter subset scheme r5rs r7rs string library license api description mit fast utf decoder need header public domain daniel gibson stb esque cross platform helper path string public domain dynamic string public domain guarantee compile time string literal obfuscation library mit template engine public domain string intern mit null termination aware string view class public domain utf string library unit test library license api description boost unit test boost unit test mit unit test bsd unit test isc unit test lgpl unit test public domain unit test zlib unit test mit unit test bsd unit test boost unit test mit unit test public domain unit test user interface library license api description dear mit immediate mode gui formerly name imgui 3rd party public domain small library write cli application bsd terminal readline history etc mit open save dialog win mac linux public domain minimal gui toolkit zlib modal dialog inc open save win mac linux apache platform independent wcwidth full unicode support vector library license api description public domain vector utility element vector inline public domain vector quaternion matrix math public domain vector quaternion matrix math math handmade public domain vector math public domain vector matrix quaternion math isc vector matrix quaternion math bsd simd vector math video library license api description public domain mpeg writer videogames library license api description public domain window mean cross platform game ish framework miscellaneous library license api description mit library parse print iterate operate date bsd generator public domain compiler portability optimization static analysis etc mit compute edit distance string public domain allocate deallocate small integer efficiently mit microbenchmarking zlib function method callback public domain process control api mit convenient api random mit cross platform time measurement mit extract english word stem boost typesafe printf zlib quick dirty time elapse time boost struct field reflection also xml library significantly fan xml consign basement make think twice parse xml zlib license parse xml mit license parse xml mit license new library correction submission new library accept submission issue pull request please note every must include user project count header source header source license license source accept actually license problem drop library source tree anyway since scoped library library author encourage include license source require separate license correction information library wrong please send correction issue pull request email note list indicate library work could error list could bug library find library work bite bite library remove list unless bug library list faq link directly list yes prefer library xxx make list draw line arbitrarily note library appear require separate license make leave library still easy drop project might still since people come stb single public domain library feel start get far library xxx minimal dependency list probably know feel free submit pull request issue email tweet library somebody else might include various reason include subtlety minimal dependency subtlety lightweight sqlite amalgamate list come
C C++;https://github.com/o3de/o3de;o3de open engine o3de open engine open source real time multi platform engine enable developer content creator aaa game cinema quality world high fidelity simulation without fee commercial obligation contribute information contribute open engine visit repository git store large binary verify git instal follow command print version number git instal installer git hook clone repository engine requirement redistributables late detail system requirement refer system documentation window visual studio minimum edition support include check system support version follow workload game development msvc v142 x64 x86 redistributable update cmake release candidate version support optional wwise audio sdk late version requirement setup instruction refer wwise audio engine reference documentation quick start engine setup set project centric source engine complete follow step option refer set o3de documentation create writable folder cache downloadable third party package also store redistributable sdks follow redistributables visual studio redistributable instal location cmake instal location long available system path configure engine source solution command line replace 3rdparty package path path create note trail slash 3rdparty package path alternatively cmake gui start cmake gui exe select local path repo source select path binary binary click add entry add cache entry 3rdparty package path folder create follow value name ly_3rdparty_path type string value 3rdparty package path click configure wait key value populate update add additional field need project click generate register engine command configuration solution complete ready create project engine detail step refer set o3de documentation set new project engine o3de repo folder set new project o3de create project command configure solution project note trail slash 3rdparty cache path project asset processor editor binary command inside project note project name target directory name project compile time binary available project path specify bin profile complete tutorial project configuration see create project command line documentation license term please see license txt root distribution
C C++;https://github.com/mongodb/mongo-cxx-driver;mongodb driver travis evergreen welcome mongodb driver branch release stable versus master default checkout branch repository release stable always contain late stable release driver master branch active development master make contribution back driver stable production see driver status family version driver status family version detail various version driver resource mongodb driver mongodb driver mongodb driver mongodb driver api mongodb driver contribution mongodb database driver status family version stability indicate whether driver recommend production currently driver guarantee api abi stability family version stability development purpose repo master branch unstable active development new feature development mongocxx stable bug fix current stable driver release mongocxx stable none previous stable driver release mongocxx stable none previous stable driver release mongocxx stable none previous stable driver release mongocxx stable none previous stable driver release mongocxx stable none previous stable driver release mongocxx stable none previous stable driver release mongodb compatibility compatibility driver version mongodb server document mongodb bug issue see jira license source repository make available term apache license version
C C++;https://github.com/sheredom/utf8.h;utf8 action simple header solution support utf8 string function provide header string utf8 prefix instead str prefix api function doc api function doc string utf8 complete constexpr strcat utf8cat strchr utf8chr strcmp utf8cmp strcoll utf8coll strcpy utf8cpy strcspn utf8cspn strdup utf8dup strfry utf8fry strlen utf8len strnlen utf8nlen strncat utf8ncat strncmp utf8ncmp strncpy utf8ncpy strndup utf8ndup strpbrk utf8pbrk strrchr utf8rchr strsep utf8sep strspn utf8spn strstr utf8str strtok utf8tok strxfrm utf8xfrm function provide header string utf8 prefix instead str prefix string utf8 complete constexpr strcasecmp utf8casecmp strncasecmp utf8ncasecmp strcasestr utf8casestr function provide unique utf8 utf8 complete constexpr utf8codepoint utf8rcodepoint utf8size utf8size _lazy utf8nsize _lazy utf8valid utf8nvalid utf8makevalid utf8codepointsize utf8catcodepoint utf8isupper utf8islower utf8lwr utf8upr utf8lwrcodepoint utf8uprcodepoint usage include utf8 current support platform linux macos window current support compiler gcc clang msvc exe clang exe design utf8 api match string api much possible design major difference though utf8 char8_t instead char anywhere string string documentation refer byte change utf8 codepoints instance utf8len return number utf8 codepoints utf8 string necessarily equate number byte api function doc return great src1 src2 src1 src2 src1 src2 respectively case insensitive append utf8 string src onto utf8 string dst find first match utf8 codepoint chr utf8 string src return great src1 src2 src1 src2 src1 src2 respectively copy utf8 string src onto memory allocate dst number utf8 codepoints utf8 string src consist entirely utf8 codepoints utf8 string reject duplicate utf8 string src get size malloc ing new buff copy return malloc fail number utf8 codepoints utf8 string str exclude null terminate byte similar utf8len except byte src look return great src1 src2 src1 src2 src1 src2 respectively case insensitive check byte utf8 string append utf8 string src onto utf8 string dst write byte produce invalid utf8 string fall partway utf8 codepoint return great src1 src2 src1 src2 src1 src2 respectively check byte utf8 string copy utf8 string src onto memory allocate dst copy byte fall partway utf8 codepoint dst enough room null terminator final string cut short preserve utf8 validity locate first occurrence utf8 string str byte utf8 string accept match find find last match utf8 codepoint chr utf8 string src number byte utf8 string str include null terminate byte similar utf8size except null terminate byte exclude similar utf8size except byte src look null terminate byte exclude number utf8 codepoints utf8 string src consist entirely utf8 codepoints utf8 string accept position utf8 string needle utf8 string haystack position utf8 string needle utf8 string haystack case insensitive return success position invalid utf8 codepoint failure similar utf8valid except byte src look return success make str valid replace invalid sequence byte replacement codepoint set out_codepoint current utf8 codepoint str return address next utf8 codepoint current str set out_codepoint current utf8 codepoint str return address previous utf8 codepoint current str return size give codepoint byte write codepoint give string return address next place write codepoint pas many byte leave buff enough space codepoint function return null return give character lowercase return give character uppercase transform give string lowercase codepoints transform give string uppercase codepoints make codepoint low case possible make codepoint upper case possible codepoint case various function provide case insensitive compare transform utf8 string case another give vastness unicode author lack understand beyond latin codepoints whether case mean anything follow category check case insensitive latin latin latin greek todo implement utf8coll akin strcoll implement utf8fry akin strfry investigate add dst buff size utf8cpy utf8cat catch overwrite suggest license free unencumbered software release public domain anyone free copy modify publish compile sell distribute software either source form compile binary purpose commercial non commercial mean jurisdiction recognize copyright law author author software dedicate copyright interest software public domain make dedication benefit public large detriment heir successor intend dedication overt act relinquishment perpetuity present future right software copyright law software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author liable claim damage liability whether action contract tort otherwise arise connection software deal software information please refer
C C++;https://github.com/micknoise/Maximilian;github maximilian maximilian cross platform multi target audio synthesis signal process library write provide bind javascript compatible native macos window linux system well client side browser base application main feature sample playback record loop support wav ogg selection oscillator filter envelop multichannel mix channel setup controller map function effect include delay distortion chorus flanging granular synthesis include time pitch stretch atom synthesis real time music information retrieval function spectrum analysis spectral feature octave analysis bark scale analysis mfccs project window macos susing command line openframeworks environment project firefox chromium base browser web audio api scriptprocessornode deprecate project chromium base browser web audio api audioworklet chrome brave edge opera vivaldi basic choose rtaudio portaudio driver player uncommenting appropriate line portaudio need compile portaudio library link executable demonstrate different feature find maximilian_examples folder try replace content main cpp content tutorial compile web audio transpiled javascript version library include repository script processor nod audioworklets try mac xcode project maximiliantest xcode project provide window visual studio project maximiliantestwindowsvs2010 folder need directx sdk program directsound command line compilation mac wall d__macosx_core__ maximilian main cpp rtaudio cpp player cpp maximilian cpp framework coreaudio framework corefoundation lpthread maximilian command line compilation linux wall d__linux_oss__ maximilian main cpp rtaudio cpp player cpp maximilian cpp lpthread alsa wall d__linux_alsa__ maximilian main cpp rtaudio cpp player cpp maximilian cpp lasound lpthread jack wall d__unix_jack__ maximilian main cpp rtaudio cpp player cpp maximilian cpp pkg config cflags libs jack lpthread maximilian openframeworks project maximilian work well openframeworks creative cod toolkit ofxmaxim directory find window osx include fft analysis granular synthesis ofxmaxim addon copy ofxmaxim ofxmaxim folder openframeworks addons directory important maximilian osx link accelerate framework
C C++;https://github.com/jimmiebergmann/mini-yaml;mini yaml single header yaml serializer deserializer quickstart txt cpp output see best usage put project directory simply include see additional best practice always reference access node content intend make copy modify copy node affect original node content see status pas test good memory leak find branch status master dev todo parse serialize tag type parse anchor parse flow sequence map parse complex key parse set
C C++;https://github.com/apple/swift-corelibs-libdispatch;grand central dispatch grand central dispatch gcd libdispatch provide comprehensive support concurrent execution multicore hardware libdispatch currently available darwin platform project aim make modern version libdispatch available swift platform implement much portable subset api possible exist open source libdispatch darwin combination logic xnu kernel alongside user space library kernel information available balance workload across entire system first step however believe useful bring basic functionality library user space pthread primitive linux eventually linux kernel module could develop support inform thread schedule project status port libdispatch linux complete linux since swift swift corelibs libdispatch include swift release swift corelibs project opportunity contribute work include develop test suite swift apis libdispatch enhance libdispatch need support swift language evolution need core library project detail instruction instal libdispatch see test detail instruction test libdispatch see test test
C C++;https://github.com/ValeevGroup/mpqc;synopsis mpqc massively parallel quantum chemistry mpqc platform research package initio simulation electronic structure molecule periodic solid current 4th version package sometimes refer __mpqc4__ modern reenvisioning conceptual design original mpqc platform massively parallel tensor framework distribute task base program runtime gaussian integral library developer mpqc develop valeev virginia license mpqc freely available term gpl licence see include license detail interest mpqc different license term please contact cite see citation recommend citation development electronic structure method mpqc partially describe follow publication cannada lewis justus calvin edward valeev cluster low rank tensor format introduction application fast construction hartree fock exchange chem theor comp doi jctc 6b00884 chong peng justus calvin fabijan pavosevic jinmei zhang edward valeev massively parallel explicitly correlate couple cluster single double tiledarray framework phys chem doi jpca 6b10150 performance excellent strong scale performance electronic structure method mpqc demonstrate couple cluster single double ccsd wave function solver parallel speed iteration ccsd solver uracil trimer 31g basis measure blueridge virginia tech wall time core node sec figure obtain help allocation advance research virginia tech acknowledgement development mpqc key component make possible past present contribution national science foundation award che che oci che aci aci alfred sloan foundation camille henry dreyfus foundation department energy exascale compute project nwchemex subproject department energy incite program
C C++;https://github.com/OneLoneCoder/olcPixelGameEngine;olcpixelgameengine official distribution olcpixelgameengine tool javidx9 youtube video project need olcpixelgameengine include project provide fast richly feature cross platform pixel draw user interface framework development game visualisation algorithm prototyping experimentation education olcpixelgameengine easily extend affine transform software renderer controller input sound hardware interface olcpixelgameengine easy port window linux raspberry chromeos macos come soon official already available contributor psp switch support onelonecoder olcpixelgameengine reimplemented language rust lua java olcpixelgameengine actively maintain develop olcpixelgameengine programmer level ability documentation please see license olc copyright onelonecoder com redistribution source binary form without modification permit provide follow condition meet redistribution derivation source must retain copyright notice list condition follow disclaimer redistribution derivative work binary form must reproduce copyright notice list condition follow disclaimer must reproduce documentation material provide distribution neither name copyright holder name contributor may endorse promote product derive software without specific prior write permission software provide copyright holder contributor express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall copyright holder contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage
C C++;https://github.com/ANNetGPGPU/ANNetGPGPU;update add new program image_generator locate src subdirectory submit ben bogart produce abstract look image ordinary input image compile make sure opencv want give try take command line argument like input image relate output image __cuda image generator picture illustrate house vienna __cuda image generator image calculate gtx take apprx min vram update improvement base class add qt4 demo illustrate implement gui back propagation note highly asymmetrical __gui designer back propagation layout underlie library represent qscenegraph definition topology output define user accordingly end error test cycle plot give handy representation performance update project rewrite template library cuda device function pointer poorly implement thus function extension work template parameter get create compile time compile time increase comparison old version class somnetgpu header bug som gpu fix lead wrong radius decay function new device pointer replacement distance function template argument simplify library functionality extension update support cuda version break work test cuda project artwork ben bogart image __this video show decomposition high resolution panorama som gpu__ __linewise grow neighborhood introduction annet small library create neural net hallmark project several neural usage openmp thrust see quickstart guide especially self organize map som benefit strongly calculation gpus speed factor easily achieve big 256x256 nod gpu som also support asynchronous calculation device feature self organize map cuda back propagation interface class multi core support openmp plugin system base template parameter exception cuda project header library library feature need qt5 require swig bind require bind cuda thrust ship cuda require gpgpu doxygen require documentation generation openmp require multi cpu support wish lib bzip2 require cmake require want cmake script compiler gcc mingw require library clone repository git create directory compiler store object cmake make dependent instal library either program usage interface interface library may access gpu demo show mean like cluster approach som number nod reduce calculate centroid give input vector dimensional input choose simplicity note currently template library could work double precision however interface currently implement float output demo would usage prepare work many typical case find src folder follow write bite help understand layout library back propagation define input number could declare addlayer connect neuron layer also possible create define connection vector describe graph internally work link list cpu gpu vector create base connection graph hebbianconf small struct store rat relate constant automatically disable relate procedure like momentum term weight decay self organize map som cpu self organize map som type unsupervised produce low dimensional typically dimensional representation sample som different sense neighborhood function show som 128x128 node node process 3x1 input vector gpgpu possible speed calculation som process gpu save load net cpu well late continue gpu way round simply call ctor gpgpu cpu comparison figure __figure progress quad core cpu gtx dimensional vector input map size computation time fix time gpu able process iteration thus classification input vector low error general class extension certainly know possible add method exist class possible trick include declaration class define preprocessor token _contable_addon extent class like token always prefix follow class name _addon suffix class structs injection point always public space need create new header foo content need pas path system cmake would look like som_gpu_addon_source_dir path foo add custom distance function add new function cpu base library long work cpu super simple define function pas relate functor add new function gpu base library add new function functors gpu simple nvcc require instantiation class somnetgpu class shift regular header device mean need create instance extend class right library make __general class extensions__ achieve illustrate previous define newfunctions newinstances adapt cmake add follow line advance guide usually consist nod edge neural store array calculation simple approach asymmetric get hard implement new functionality hard add create complex variant make sense put information edge functionality calculate part nod make easy include new functionality old information flow neuronal often direct container class help keep order class hand call function implement principal procedure switch pattern break procedure certain error limit hit make long story short important class derive absneuron abslayer absnet absneuron library function abstract base class mean get implement derive class give small overview calcvalue calculate want store neuron every neuron node list edge direct neuron another layer show list implement neuron back propagation algorithm adapt edge implement adaptedges internal list edge outgo neuron connect abslayer neuron store layer decide write layer class implement resize function could useful especially strange layer topology dimensional dimensional absnet last class may want derive absnet function overload propagatefw propagatebw show implement function back propagation different different type layer may want overload addlayer save load custom class system back propagation decide create layer class probably want add feature require store hdd exptofs impfromfs function require get modify work like reimplementing virtual function call virtual base class ensure save base class content follow show freshly insert integer store layer depth back propagation save recover hdd way round load content system last function implement createnet content load system create copy net memory base create layer connection implement bias neuron self organize map another som import position add
C C++;https://github.com/bulletphysics/bullet3;travis appveyor bullet physic sdk official source repository bullet physic sdk real time collision detection multi physic simulation game visual effect robotics machine etc issue issue tracker flood support question close clean pybullet discus others pybullet highly recommend pybullet bind improve support robotics reinforcement pip pybullet checkout pybullet quickstart installation simple pybullet research please cite like requirement bullet physic compiler library test window linux mac osx android likely work platform compiler optional demo require opengl opengl non graphical demo unit test contributor cod style information requirement experimental opencl gpgpu support entire collision detection rigid body dynamic execute gpu high end desktop gpu amd radeon nvidia gtx good succesfully test software window linux mac osx software currently work opencl cpu device might laptop gpu performance likely good note often opencl driver fail compile kernel unit test exist track issue work require cover opencl kernel license source license permissive zlib license unless mark differently particular folder instruction bullet vcpkg bullet dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg bullet3 bullet port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository instruction bullet premake also cmake instead window click build_visual_studio_vr_pybullet_double bat open build3 vs2010 0_bullet3solution sln ask convert project new version visual studio instal root directory batch find automatically otherwise edit batch choose include lib directory locate window virtual reality sandbox htc vive oculus rift app_sharedmemoryphysics_vr project preferably release optimize connect pybullet sandbox linux mac osx gnu make make sure cmake instal sudo apt get cmake brew cmake terminal type script invoke cmake build_cmake directory find pybullet bullet pybullet bulletexamplebrowser binary bullet examplebrowser also bullet premake premake executables build3 folder depend system linux 32bit 64bit mac osx follow line premake note linux need cmake pybullet since compiler issue mix share static library mac osx xcode click build3 xcode4 command terminal window execute usage app_examplebrowser executables locate bin folder though terminal command prompt click mouse pick grab object hold alt control key maya style camera mouse control press create series screenshots hit escape exit demo app check doc folder bullet physic forum information
C C++;https://github.com/rizsotto/Bear;package github github release continuous ear bear tool generate compilation database clang tool json compilation database jsoncdb clang project provide information single compilation unit process easy compilation alternate program system natively support generation json compilation database project tool bear generate json process jsoncdb bear many distribution check package manager source installation usage like bear output call compile_commands json save current directory option check man page pas help parameter note want pas parameter bear pas _before_ sign everything command please aware package manager still ship old release case please omit extra sign consult local documentation read man page wiki wiki project talk limitation know issue platform specific usage problem report open new problem report please look wiki wiki problem know document workaround also helpful look old maybe close issue issue open new decide report problem try give much context would help reproduce error see question usage please shy ask question issue chat chat find bug also find fix please share open pull request please follow contribution guide guide issue wiki chat guide thank donate product license help develop bear
C C++;https://github.com/cameron314/concurrentqueue;moodycamel concurrentqueue industrial strength lock free queue note need single producer single consumer queue spsc feature knock sock blaze fast performance benchmark single header drop project fully thread safe lock free queue concurrently number thread element move instead copy possible templated obviate need deal exclusively pointer memory manage artificial limitation element type maximum count memory allocate front dynamically need fully portable assembly standard primitive support super fast bulk operation include low overhead block version blockingconcurrentqueue exception safe reason many full fledge lock free queue boost limit object trivial assignment operator trivial destructors intel tbb queue lock free require trivial constructor many academic implement lock free queue usable source hard find test even queue limitation others part also fast benchmark fairly well test offer advance feature like bulk enqueueing dequeueing new design much fast element time approach even surpass speed non concurrent queue even heavy contention short lock free queue shape hole open source universe set fill fast complete well test design could moodycamel concurrentqueue reason fast synchronization kind never take place fundamentally concurrent structure require synchronization take time every effort make course minimize overhead avoid share thread concurrent structure gosh darn convenient indeed sometimes share concurrently unavoidable queue linearizable see next section high level design foundation design assume producer independent case producer ordinate amongst fashion aware element necessarily come queue order put relative order form ordination still come order put individual producer affect case may good another either way important limitation aware queue also numa aware lot memory internally mean probably scale particularly well numa architecture however know lock free queue numa aware except salsa salsa cool publicly available know finally queue sequentially consistent happen relationship element put queue come thing pump queue empty require think get right eventuality explicit memory order may get desire effect word sometimes difficult queue correctly good idea follow sample sample possible hand upside lack sequential consistency good performance high level design element store internally contiguous block instead link list good performance queue make collection sub queue producer consumer want dequeue element check sub queue find empty largely transparent user queue however mostly workstm particular consequence design however seem non intuitive producer enqueue time define order element late dequeued normally fine even fully linearizable queue would race producer thread could rely order anyway however reason extra explicit synchronization producer thread thus define total order enqueue operation might expect element would come total order guarantee queue offer point though semantically really separate producer rather happen spread across multiple thread case still establish total order queue create single producer token thread enqueue take care synchronize access token course already extra synchronization involve anyway write detail overview internal design blog well full nitty gritty detail design design blog finally source source available perusal interest basic entire queue contain header concurrentqueue concurrentqueue simply include queue block version separate header blockingconcurrentqueue blockingconcurrentqueue depend concurrentqueue concurrentqueue lightweightsemaphore lightweightsemaphore make certain key feature require relatively recent compiler vs2012 note know bug std atomic thus support algorithm platform independent like would templated queue exception many thread simple include concurrentqueue moodycamel concurrentqueue enqueue int item bool find try_dequeue item assert find item description basic method concurrentqueue size_t initialsizeestimate constructor optionally accept estimate number element queue hold enqueue item enqueues item allocate extra space necessary try_enqueue item enqueues item enough memory already allocate try_dequeue item dequeues item return true item find false queue appear empty note user ensure queue object completely construct thread include make memory effect construction visible possibly via memory barrier similarly important thread finish queue memory effect fully propagate destruct usually version method explicit version take user allocate per producer per consumer token implicit version work without token explicit method almost always fast though necessarily huge factor apart performance primary distinction sub queue allocation behaviour enqueue operation implicit enqueue method cause automatically allocate thread local producer sub queue allocate explicit producer hand tie directly token lifetime recycle internally order avoid number sub queue grow without bind implicit producer mark reuse thread exit however support platform queue short live thread recommend explicit producer token instead full api pseudocode allocate memory necessary enqueue item bool enqueue prod_token item bool enqueue_bulk item_first count bool enqueue_bulk prod_token item_first count bool fail enough memory enqueue try_enqueue item bool try_enqueue prod_token item bool try_enqueue_bulk item_first count bool try_enqueue_bulk prod_token item_first count bool attempt dequeue queue never allocate try_dequeue item bool try_dequeue cons_token item bool try_dequeue_bulk item_first max size_t try_dequeue_bulk cons_token item_first max size_t happen know producer want dequeue try_dequeue_from_producer prod_token item bool try_dequeue_bulk_from_producer prod_token item_first max size_t necessarily accurate count total number element size_approx size_t block version mention full block wrapper queue provide add wait_dequeue wait_dequeue_bulk method addition regular interface wrapper extremely low overhead slightly fast non block queue due necessary bookkeeping involve lightweight semaphore also time version allow timeout specify either microsecond std chrono object major caveat block version must careful destroy queue somebody wait generally mean need know certain another element come along call block method fair non block version destroy either easy coordinate cleanup block include blockingconcurrentqueue moodycamel blockingconcurrentqueue std thread producer int std this_thread sleep_for std chrono millisecond enqueue std thread consumer int int item wait_dequeue item assert item wait_dequeue_timed item std chrono millisecond assert item producer join consumer join assert size_approx advance feature token queue take advantage extra per producer per consumer storage available speed operation take form token create consumer token producer token thread task token thread safe method accept token first parameter moodycamel concurrentqueue moodycamel producertoken ptok enqueue ptok moodycamel consumertoken ctok int item try_dequeue ctok item assert item happen know producer want consume single producer multi consumer scenario try_dequeue_from_producer method accept producer token instead consumer token cut overhead note token work block version queue produce consume many element efficient way bulk method queue token fail bulk method without token fail single item method token fail single item method without token say create token willy nilly ideally would token kind per thread queue work give perform best token note token actually tie give thread technically require local thread single producer consumer time bulk operation thank novel design blog queue easy enqueue dequeue multiple item time mean overhead cut drastically bulk operation syntax moodycamel concurrentqueue int item enqueue_bulk item int could also iterator size_t count try_dequeue_bulk size_t count assert item preallocation correctly try_enqueue try_enqueue unlike plain enqueue never allocate memory enough room queue simply return false key method properly ensure enough space pre allocate desire maximum element count constructor accept count number element reserve space queue work block element however individual element value pas order obtain effective number pre allocate element slot non obvious first aware count pas round next multiple block size note default block size change via trait second slot block enqueued slot rest block completely completely fill completely empty affect number block need order account overhead partially fill block third producer whether implicit explicit claim recycle block different manner affect number block need account desire number usable slot suppose want queue able hold least element give time without delve deep rather arcane detail simple formula number element request pre allocation case note division intend arithmetic division integer division order ceil work explicit producer token enqueue ceil block_size max_num_producers block_size implicit producer token ceil block_size max_num_producers block_size mix producer type ceil block_size max_explicit_producers max_implicit_producers max_explicit_producers block_size formula seem rather inconvenient constructor overload accept minimum number element maximum number explicit implicit producer directly let computation finally important note queue eventually consistent take advantage weak memory order speed always possibility contention try_enqueue fail even queue correctly pre size desire number element give thread may think queue full even long case matter still need handle failure case perhaps loop succeed unless mind drop element exception safety queue exception safe never become corrupt type may throw exception queue never throw exception operation fail gracefully return false memory allocation fail instead throw std bad_alloc important note guarantee exception safety hold element type never throw destructor iterators pas queue bulk operation never throw either note particular mean std back_inserter iterators must care since vector insert may need allocate throw std bad_alloc exception inside iterator sure reserve enough capacity target container first guarantee presently follow enqueue operation roll back completely exception throw element constructor bulk enqueue operation mean element copy instead move order avoid object move event exception non bulk enqueues always move constructor available assignment operator throw dequeue operation single bulk element consider dequeued regardless case dequeued element properly destruct exception propagate way get element back exception throw propagate call stack point queue consistent state note type copy constructor move constructor assignment operator throw sure annotate noexcept avoid exception check overhead queue possible even cost exception still size impact take account trait queue also support trait template argument define various type constant memory allocation deallocation function queue typical pattern provide trait create class inherit default trait override value wish change struct mytraits public moodycamel concurrentqueuedefaulttraits static const size_t block_size big block moodycamel concurrentqueue dequeue type without call constructor normal way dequeue item pas exist object reference assign internally queue move assignment operator possible pose problem type expensive construct default constructor fortunately simple workaround create wrapper class copy memory content object assign queue poor man move essentially note work object contain internal pointer struct myobjectmover inline void operator myobject std memcpy sizeof myobject todo cleanup destruct queue corrupt object move inline myobject return reinterpret_cast private align alignof myobject char sizeof myobject dodgy alternative move cheap default construction wrapper defer construction object assign enable move constructor struct myobjectmover inline void operator myobject new myobject std move create true inline myobject assert create return reinterpret_cast myobjectmover create myobject private align alignof myobject char sizeof myobject bool create false sample detail sample sample source unit test unittest src benchmark benchmark src available reference well benchmark see blog post benchmark benchmark include versus boost lockfree queue tbb concurrent_queue benchmark require mingw certain gnuwin32 utility window recent linux make benchmark bin benchmark short version benchmark fast especially bulk method actually queue anything queue bottleneck test bug write quite unit test well randomize long fuzz tester also core queue algorithm cdschecker cdschecker memory checker inner algorithm test separately relacy relacy checker full integration test also perform relacy test linux fedora window x86 processor far intel amd write platform independent however work across processor due complexity difficult test nature lock free general may still bug anyone see buggy behaviour would like hear especially unit test cook open issue github vcpkg moodycamel concurrentqueue dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg concurrentqueue moodycamel concurrentqueue port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository license release source repository exception third party boost queue benchmark comparison intel tbb library ditto cdschecker relacy jeff preshing cross platform semaphore license simplify bsd license also dual license boost software license see license license detail note lock free program patent minefield may well violate pending patent look though present knowledge design implement queue scratch dive interest source help rough idea lay section attempt describe queue form several basic part list roughly order appear source helper function round power default trait queue contain constant malloc free function queue producer consumer token queue public api start constructor destructor swap assignment method public enqueue method wrapper around small set private enqueue method find late dequeue method define inline relatively straightforward main internal structure first lock free free list recycle spend block element enqueued block internally block structure different way track whether fully empty remember give parallel consumer way know finish first depend small base class type internal spmc producer queue explicit producer hold onto memory attempt fast implicit attempt recycle memory back parent little slow explicit producer define first implicit contain general method enqueue dequeue enqueue bulk dequeue bulk obviously constructor destructors helper method main difference block handle block different way map index different way finally miscellaneous internal method handle initial block pool populate queue construct abstract block pool comprise initial pool block free list handle producer list lock free add link list producer system handle implicit producer lookup table really sort specialize lookup helper method allocate free object member queue follow lastly free stand swap function blog design sample source concurrentqueue blockingconcurrentqueue lightweightsemaphore unittest src benchmark benchmark src license cdschecker relacy spsc salsa
C C++;https://github.com/USCiLab/cereal;cereal library serialization cereal header serialization library cereal take arbitrary type reversibly turn different representation compact binary encode xml json cereal design fast light weight easy extend external dependency easily bundle standalone cereal great documentation look information cereal work documentation visit cereal web get late information cereal easy installation cereal fully document main web quick dirty version cereal place header somewhere see write serialization function custom type support standard library cereal provide serialization archive load save cereal mail list either get touch email cereal permissive license cereal license bsd cereal status linux mac window look haskell cereal
C C++;https://github.com/mtrebi/memory-allocators;table content wrong custom linear stack pool free list time space last introduction application need memory allocate heap rather stack _runtime_ memory call dynamic memory know compile time need change execution program ask dynamic memory usin malloc malloc return address position memory store call free free memory let others process project implement different way manage dynamic memory mean instead native call like malloc free custom memory allocator efficient way goal understand common allocator work offer compare see perform good instruction wrong malloc general purpose general purpose operation mean must work case 1byte 1gb reason efficient could need specific slow sometimes allocate memory malloc need change user kernel mode get memory system happen malloc turn super slow custom allocator every program specific need make sense general purpose allocator choose right allocator work best way increase performance general custom allocator share feature low number mallocs custom allocator try keep number mallocs low malloc _big chunk memory_ manage chunk internally provide small allocation structure secondary structure like _linked lists_ _trees_ _stacks_ manage big chunk memory usually keep track allocate free portion memory _speed up_ operation constraint allocator specific constraint operation perform allow achieve high performance application linear allocator simple kind allocator idea keep pointer first memory address memory chunk move every time allocation allocator internal fragmentation keep minimum element sequentially spatial locality insert fragmentation alignment structure allocator require pointer offset tell position last allocation require extra information structure structure linear _complexity allocate simply move pointer offset forward allocate memory linear _complexity free due simplicity allocator allow specific position memory free usually memory free together stack allocator smart evolution linear allocator idea manage memory stack keep pointer current memory address move forward every allocation however also move backwards free operation keep spatial locality principle fragmentation still low structure say need pointer offset keep track last allocation order able free memory also need store _header_ allocation tell size allocate block thus free know many position move back pointer structure stack _complexity header size number allocation allocate simply move pointer offset forward place header right memory block indicate size allocate memory stack _complexity free simply read block size header move pointer backwards give size free memory stack _complexity pool allocator pool allocator quite different previous split big memory chunk small chunk size keep track free allocation request return free chunk size free store next allocation way allocation work super fast fragmentation still low split scheme pool structure keep track free block memory pool allocator link list link address free memory block link list pool reduce space need link list store free block smart right however set constraint chunk must least big nod link list store link list free memory block memory link list pool _complexity allocate allocation simply mean take pop first free block link list allocation pool link list sort order determine allocation free random state link list pool _complexity free free mean add push free element first element link list _complexity free list allocator general purpose allocator contrary others impose restriction allow allocation deallocations order reason performance good predecessor depend structure speed allocator common link list red black tree link list structure name say link list store sort manner start address free contiguous block memory size allocation request search link list block fit remove element link list place allocation header deallocations right stack allocator deallocations get back allocation header know size block free free insert sort link list try merge contiguous memory block together create big block note constraint size alignment allocate allocator minimum size allocate equal big size require free node otherwise would waste space meta real something similar happen alignment constraint relate good would probably handle case decide performance would drastically affect case probably good different allocator structure free list _complexity number free block size header free block number allocate block size header allocate block link list allocate allocation request look block memory fit mean iterate link list find block size equal big size request store plus allocation header remove link list would first fit allocation stop find first block memory fit another type search call best fit look free memory block small size handle latter operation may take time always iterate element reduce fragmentation allocate free list _complexity number free block link list free first get back information allocation header iterate link list intert free block right position sort address insert merge contiguous block merge link list sort need look previous next element link list see merge contiguous block operation merge contiguous memory block create big block call _coalescence_ instead sort link list free allocate block complexity would allocation compleixity would number free allocate block space complexity would much high free memory block also look previous next block see merge big block free free list _complexity number free block red black tree structure purpose red black tree speed allocation deallocations link list sequential every time operation make need iterate link list case red black tree reduce complexity log keep space complexity quite low tree store inside free memory block addition structure allow best fit algorithm reduce fragmentation keep performance however additional sort doubly link list require store allocate free element order able coalescence operation common real system offer high flexibility keep performance high benchmark time make sure effort design implement custom memory allocator worth make several benchmark different block size number operation random order etc time benchmark measure time execution take initialize allocator init malloc big chunk setup additional structure untill last operation allocation free perform show believe relevant goal project time complexity malloc without doubt bad allocator due general flexible free list allocator much good choice malloc general purpose allocator link list speed allocation free time good malloc next allocator even good long general purpose allocator impose restriction pool allocator force always allocate size allocate deallocate order complexity slightly good free list allocator wait complexity pool allocator suppose constant linear true happen initialization additional structure link list create memory chunk link link list operation hide truly complexity allocation free operation take account initialize pool allocator allocator general avoid kind behavior stack allocator allocate size deallocations must lifo fashion complexity chart complexity completely constant due init function allocate first big chunk memory similarly pool allocator linear allocator simple best performant allocator complexity also restrictive single free operation allow stack complexity look completely constant due init function time complexity different next chart see include init function benchmark overall execution time reduce consequence effectively see linear stack pool allocator constant malloc free list clearly linear free list black tree reduce complexity log therefore position chart would pool allocator free list time complexity different _note time complexity general scale follow linear fashion regard size allocation request space complexity see even space complexity allocator slightly different due constant end space complexity clear denote big constant ignore weight overall equation low grow space complexity different summary brief summary describe allocator restrictive efficient allocator efficient general linear allocator follow specific structure however common behavior time expire certain time long useful thus free think game allocate frame allocator free start next frame stack allocator linear allocator think useful free element lifo fashion pool allocator definitely structure element size choice fast fragmentation buddy allocator _not implement here_ organize exponential size power allocator perform extremely well structure way fast waste little space free list allocator structure common behavior allocator allow allocate free memory wish general purpose allocator work much good malloc good previous allocator give flexibility work situation last thought avoid dynamic memory much possible behavior unexpected source problem worry performance application dynamic memory think custom allocator instead malloc try understand behavior choose right allocator specific allocator impose restriction structure far good generic saw huge gap specific purpose allocator linear stack pool general purpose free list malloc always choose restrictive general allocator unsure late see structure always change restrictive future work implement every memory allocator assume alignment always byte thus everything always align long need header implement free list allocator red black tree improve performance log implement buddy allocator implement slab allocator benchmark internal fragmentation benchmark spatial location cache miss acknowledgment thank help different stag project
C C++;https://github.com/facebook/rocksdb;rocksdb persistent key value store flash ram storage circleci travisci appveyor ppc64le rocksdb develop maintain facebook database engineer team early work sanjay ghemawat sanjay google com jeff dean jeff google com library form core block fast key value server especially suit store flash drive log structure merge database lsm design flexible tradeoff write amplification factor waf read amplification factor raf space amplification factor saf multi thread compaction make especially suitable store multiple terabyte single database start usage see github explanation public interface include caller include rely detail header package internal apis may change without warn design discussion conduct license rocksdb dual license gplv2 find copy root directory apache license find license apache root directory may select option list license
C C++;https://github.com/taocpp/PEGTL;welcome pegtl parse expression grammar template library pegtl dependency header parser combinator library create parser accord parse expression peg documentation changelog doc changelog development doc readme require version require version require version require contact question suggestion regard pegtl success failure story kind feedback please feel free join server open pull github contact author taocpp icemx net introduction grammar write regular create template program template meta program nest template instantiation naturally correspond inductive definition peg parser combinator approach comprehensive set parser rule doc rule reference combine extend user include mechanism debug grammar attach user define action doc action state grammar rule peg grammar rule implement class pegtl peg superficially similar context free grammar cfgs however deterministic nature peg give rise important difference include grammar analysis doc grammar analysis find several typical error peg include leave recursion design pegtl design lean mean core library consist approximately line emphasis simplicity efficiency prefer well tune simple approach complicate optimisation pegtl mostly concern parse combinators grammar rule give user library possibility full control aspect parse whether action take whether structure create parse entirely user include doc contrib typical situation like unescaping escape sequence string generic structure fly evaluation arithmetic expression template program template specialisation possible write grammar multiple way different semantic action different parse peg formalism separation lexer parser stag usually drop everything single grammar rule express template instantiation compiler task optimise pegtl grammar status commit automatically test multiple architecture operate system compiler version thereof commit check gcc clang clang static additionally scan security issue coverage automatically measure unit test cover core library release accordance semantic incompatible api change allow occur major version thank appreciation contribution people directly pegtl development copyright daniel frey colin hirsch pegtl certify open software term boost software license version reproduce boost software license version august 17th permission hereby grant free charge person organization obtain copy software accompany documentation cover license software reproduce display distribute execute transmit software prepare derivative work software permit third party software furnish subject follow copyright notice software entire statement include license grant restriction follow disclaimer must include copy software whole part derivative work software unless copy derivative work solely form machine executable object generate source language processor software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose title non infringement event shall copyright holder anyone distribute software liable damage liability whether contract tort otherwise arise connection software deal software
C C++;https://github.com/danmar/cppcheck;cppcheck github action fuzz coverity scan status license github action scan name original name program check late change cppcheck despite name cppcheck design manual manual available donate cpu cppcheck hobby project limit resource help donate cpu core many like simple extract cppcheck source script cppcheck tool donate cpu script analyse debian source upload cppcheck server need improve cppcheck detect regression stop script whenever like ctrl compile compiler work compiler partial support may work compiler feature available visual studio gcc work gui need command line tool optional rule multiple compilation choice qmake cross platform tool cmake cross platform tool window visual studio window creator mingw gnu make late clang cmake compile cppcheck cmake want compile gui flag dbuild_gui rule support require pcre flag dhave_rules release recommend duse_matchcompiler cmake generate project visual studio xcode etc qmake gui gui pro gui visual studio cppcheck sln configure visual studio platform toolset change easily old new version solution contain platform target x86 x64 compile rule select release pcre debug pcre configuration pcre lib pcre64 lib x64 pcre expect external current version pcre visual studio obtain visual studio command line wish visual studio ide compile cppcheck command line follow command window msys2 get gnu toolchain gdb create setting json vscode folder follow content adjust path necessary make terminal cppcheck debug create launch json vscode folder follow content cover configuration debug cppcheck misra creator mingw pcre dll need cli gnu make simple unoptimized dependency recommend release flag matchcompiler yes optimise cppcheck token match pattern convert compile time filesdir usr share cppcheck specify folder cppcheck instal addons cfg platform have_rules yes enable rule pcre require cxxflags dndebug wall wno sign compare wno unused function enable compiler optimization disable cppcheck internal debug enable basic compiler warn expert want cppcheck without dependency command want rule rule dependency need mingw encounter follow error matchcompiler yes need specify interpreter via python_interpreter compiler ide create empty project makefile add cpp cppcheck cli lib folder project makefile add cpp external folder project makefile compile cross compile win32 cli version cppcheck linux package cppcheck yum apt brew etc official rpm webpage
C C++;https://github.com/libarchive/libarchive;welcome libarchive libarchive project develop portable efficient library read write stream archive variety format also include common tar cpio zcat command line tool libarchive library question issue home ongoing libarchive development include documentation link libarchive mail list report issue issue tracker submit enhancement libarchive please submit pull request via github content distribution distribution bundle include follow major component libarchive library read write stream archive tar bsdtar program full feature tar libarchive cpio bsdcpio program different interface essentially functionality cat bsdcat program simple replacement tool zcat bzcat xzcat small program may find useful minitar compact sample demonstrate libarchive contrib various item send third party please contact author question top level directory contain follow information news highlight recent change copy installation instruction readme cmakelists txt input cmake tool see configure configuration script see detail copy source lack configure script try construct script autogen cmake follow top level directory configure script makefile aclocal configure distribution need maintainer makefile config template configure script documentation addition informational article documentation online libarchive distribution also include number manual page bsdtar explain bsdtar program bsdcpio explain bsdcpio program bsdcat explain bsdcat program libarchive give overview library whole archive_read archive_write archive_write_disk archive_read_disk provide detail call sequence read write apis archive_entry detail struct archive_entry utility class archive_internals provide insight libarchive internal structure operation libarchive format document format support library cpio mtree tar provide detail information popular archive format include hard find detail modern cpio tar variant manual page provide doc directory number different format also read copious comment archive source sample program detail please let know error omission find support format currently library automatically detect read follow format old tar archive posix ustar gnu tar format include gnu long filename long link name sparse solaris extend tar format include acls posix pax interchange format posix octet orient cpio svr4 ascii cpio binary cpio big endian little endian pwb binary cpio iso9660 rom image optional rockridge joliet extension zip archive uncompress deflate compress entry include support encrypt zip archive zipx archive support bzip2 ppmd8 lzma compress entry gnu bsd archive mtree format zip archive microsoft cab format lha lzh archive rar rar archive limitation due rar proprietary status xar archive library also detect handle follow evaluate archive uuencoded rpm wrapper gzip compression bzip2 compression compress lzw compression lzma lzip compression lz4 compression lzop compression zstandard compression library create archive follow format posix ustar posix pax interchange format restrict pax format create ustar archive except entry require pax extension long filename acls etc old gnu tar format old tar format posix octet orient cpio svr4 newc cpio binary cpio little endian pwb binary cpio shar archive zip archive uncompress deflate compress entry gnu bsd archive mtree format iso9660 format zip archive xar archive create archive filter follow uuencode gzip compression bzip2 compression compress lzw compression lzma lzip compression lz4 compression lzop compression zstandard compression note library design follow note address many common question ask libarchive heavily stream orient system mean optimize read write archive single pas begin end allow libarchive process archive large store disk process fly read write tape drive also make libarchive useful tool need produce archive fly webservers provide archive content user account place modification random access content archive directly support format issue tar archive design random access case libarchive open archive scan begin quickly enough provide need ability even without true random access course application require true random access application consider alternative libarchive library design extend new compression archive format requirement format readable writable stream archive entry independent article libarchive wiki explain extend libarchive read compression format always detect automatically api format easy software libarchive transparently handle libarchive archive format libarchive automatic support decompression without archive explicitly select raw empty format attempt minimize static link pollution explicitly invoke particular feature support particular compression format get pull statically link program particular explicitly enable particular compression decompression support need link correspond compression decompression library also reduce size statically link binary environment matter library generally _thread safe_ depend platform define global variable however platform provide fully thread safe version key library function platform libarchive non thread safe function patch improve great interest particular libarchive module read write directory tree chdir optimize directory traversal cause problem program expect disk access multiple thread course module completely optional rest libarchive without library _not_ thread aware however lock thread management kind create libarchive object need access multiple thread need provide lock read library accept whatever block hand read callback free pas library byte time mmap entire archive give library write library always produce correctly block output object style approach allow multiple archive stream open bsdtar archive extension archive read write callback function read archive directly memory buff write socket wish utility function provide easy open etc capability read write apis design allow individual entry read write source create block memory add tar archive without first write temporary also read entry archive write directly socket want read write entry disk convenience function make especially easy note pax interchange format posix standard extend tar format old _ustar_ format appropriate many advantage tar format include legacy gnu tar format widely support current tar
C C++;https://github.com/PointCloudLibrary/pcl;point cloud library release release image release license license image license release image release license image license website new website online open hammer_and_wrench really need access old website please copy make internet please aware website hack could still host malicious continuous integration late ubuntu ubuntu ubuntu window x86 window x64 macos macos doc late doc platform status ubuntu status ubuntu late status ubuntu late status ubuntu late window status window x86 late status window x64 late macos status macos late status macos late documentation status doc late doc community discord discord image discord server stackoverflow question count stackoverflow website website status website discord image discord server website status website question count stackoverflow distribution package late package click see description point cloud library pcl standalone large scale open project image point cloud process pcl release term bsd license thus free commercial research financially support consortium commercial company non profit organization open perception would also like thank individual donor contributor help project compile please refer platform specific tutorial mac microsoft documentation pcl trunk contribute please read issue report issue please read general question pcl please consider follow alternative instead stack well support troubleshoot installation debug remember tag question tag point cloud library discord live chat member pcl community casual discussion citation encourage researcher cite pcl pcl component work baseline bibtex entry
C C++;https://github.com/Itseez/opencv;opencv open source computer vision library resource homepage course doc forum previous forum read issue track additional opencv functionality contribute please read contribution start work pull request summary guideline pull request per issue choose right base branch include test documentation clean oops commit submit follow cod style
C C++;https://github.com/KratosMultiphysics/Kratos;barcelona wind simulation contributor organization contribute kratos international center numerical method engineer chair structural analysistechnical university munich altair engineer deltares user user technology develop kratos airbus defence spacestress method optimisation department siemens agcorporate technology onera french aerospace labapplied aerodynamics department look forward see logo special thank kratos core ublas expose provide output highly scalable multigrid solver json modern header single std filesystem compatible helper library base spec compression library application linear solver linearsolversapplication application linearsolversapplication mpi linear algebra solver trilinosapplication application trilinosapplication partition metisapplication application metisapplication readme perform couple simulation external solver within cosimulationapplication application cosimulationapplication readme cosimio kratos follow library intrusive_ptr header single std filesystem compatible helper library base spec socket base interprocess communication cite kratos please follow reference cite kratos work dadvand rossi onate object orient environment develop finite element cod multi disciplinary application arch computat method eng dadvand rossi gil martorell cotela juanpere idelsohn onate migration generic multi physic framework hpc environment computer fluid compfluid mataix ferrandiz bucher rossi cotela carbonell zorrilla tosi november kratosmultiphysics version zenodo
C C++;https://github.com/gvinciguerra/PGM-index;piecewise geometric index pgm index structure enable fast lookup predecessor range search update array billion item order magnitude space traditional index provide bad case query time guarantee quickstart header library need instal clone repo copy include pgm directory system project include path simple cpp show index query vector random integer pgm index edit locally via class overview pgm pgmindex class library provide follow class pgm dynamicpgmindex support insertion deletion pgm multidimensionalpgmindex store point dimension support orthogonal range query pgm mappedpgmindex store disk pgmindex fast search operation pgm compressedpgmindex compress segment reduce space usage index pgm onelevelpgmindex binary search segment rather recursive structure pgm bucketingpgmindex top level lookup table speed search segment pgm eliasfanopgmindex top level succinct structure speed search segment full documentation available compile test tuner clone repository project test runner place test executable place tuner executable place benchmark license project license term apache license library please put link cite follow paolo ferragina giorgio vinciguerra pgm index fully dynamic compress index provable bad case bound pvldb
C C++;https://github.com/oneapi-src/oneDNN;oneapi deep neural library onednn software previously know intel math kernel library deep neural intel mkl dnn deep neural library dnnl oneapi deep neural library onednn open source cross platform performance library basic block deep application onednn part library optimize intel architecture processor intel processor graphic architecture graphic onednn experimental support follow architecture arm bite architecture aarch64 nvidia gpu openpower power isa ppc64 ibmz s390x risc onednn intend deep application framework developer interest improve application performance intel cpu gpus deep practitioner application enable onednn application enable onednn table content documentation documentation installation installation system requirement system requirement application enable onednn application enable onednn support support contribute contribute license license security security trademark information trademark information documentation developer explain program support functionality detail include annotate api provide comprehensive reference library api installation binary distribution software available intel package include library dependency need resolve application time see system requirement system requirement section section developer detail cpu gpu runtimes configuration need available library system requirement onednn support platform base follow architecture intel arm bite architecture ibm power ibmz architecture risc bite warn arm bite architecture aarch64 power isa ppc64 ibmz s390x risc rv64 support experimental limit test validation library optimize follow cpu intel atom processor least intel sse4 support require intel core processor least intel sse4 support require intel xeon processor family formerly sandy bridge ivy bridge haswell broadwell intel xeon scalable processor formerly skylake cascade lake cooper lake future intel xeon scalable processor name sapphire rapid cpu base intel amd64 architecture onednn detect instruction set architecture isa runtime time jit generation deploy optimize late support isa future isas may initial support library disable default require time control enable see cpu dispatcher detail cpu base arm aarch64 architecture onednn arm compute library integration compute library open source library machine application provide aarch64 optimize core function functionality currently require compute library separately see onednn compatible compute library version late warn macos application onednn may need request special entitlement harden runtime see link detail library optimize follow gpus intel processor graphic base gen9 gen9 gen11 gen12 architecture intel iris graphic formerly dg1 future intel arc graphic name alchemist dg2 requirement source onednn support system meet follow requirement operate system intel arm power ibmz architecture support compiler standard support late arm compute compute library aarch64 follow tool require onednn documentation late late late late configuration cpu gpu engine may introduce additional time dependency cpu engine onednn cpu engine execute primitive intel architecture processor bite arm architecture aarch64 processor bite power isa ppc64 processor ibmz s390x compatible device cpu engine default disable time set dnnl_cpu_runtime none case gpu engine must enable cpu engine configure openmp tbb dpcpp runtime follow additional requirement apply openmp runtime require compiler openmp late standard support tbb runtime require thread block late dpcpp runtime require intel oneapi dpc thread block rely openmp simd extension best performance intel architecture processor recommend intel compiler gpu engine intel processor graphic architecture graphic support onednn gpu engine gpu engine disable default configuration follow additional requirement apply gpu engine enable opencl runtime require opencl runtime library opencl version late opencl driver kernel language support opencl late intel subgroup usm extension support dpcpp runtime require intel oneapi dpc opencl runtime library opencl version late oneapi level dpcpp runtime nvidia gpu support require oneapi dpc nvidia cuda driver cublas late cudnn late warn nvidia gpu support experimental general information instruction limitation available nvidia backend runtime dependency onednn source library runtime dependency specific version define environment linux common dependency gnu library libc gnu standard library libstdc dynamic link library libdl math library libm posix thread library libpthread runtime specific dependency runtime configuration compiler dependency dnnl_cpu_runtime omp gcc gnu openmp runtime libgomp dnnl_cpu_runtime omp intel compiler intel openmp runtime libiomp5 dnnl_cpu_runtime omp clang intel openmp runtime libiomp5 dnnl_cpu_runtime tbb tbb libtbb dnnl_cpu_runtime dpcpp intel oneapi dpc compiler intel oneapi dpc compiler runtime libsycl tbb libtbb opencl loader libopencl dnnl_gpu_runtime ocl opencl loader libopencl dnnl_gpu_runtime dpcpp intel oneapi dpc compiler intel oneapi dpc compiler runtime libsycl opencl loader libopencl oneapi level loader libze_loader window common dependency microsoft visual redistributable msvcrt dll runtime specific dependency runtime configuration compiler dependency dnnl_cpu_runtime omp microsoft visual compiler additional requirement dnnl_cpu_runtime omp intel compiler intel openmp runtime iomp5 dll dnnl_cpu_runtime tbb tbb tbb dll dnnl_cpu_runtime dpcpp intel oneapi dpc compiler intel oneapi dpc compiler runtime sycl dll tbb tbb dll opencl loader opencl dll dnnl_gpu_runtime ocl opencl loader opencl dll dnnl_gpu_runtime dpcpp intel oneapi dpc compiler intel oneapi dpc compiler runtime sycl dll opencl loader opencl dll oneapi level loader ze_loader dll macos common dependency system runtime libc dylib libsystem dylib runtime specific dependency runtime configuration compiler dependency dnnl_cpu_runtime omp intel compiler intel openmp runtime libiomp5 dylib dnnl_cpu_runtime tbb tbb libtbb dylib validate configuration cpu engine validate redhat enterprise linux gnu compiler collection clang intel intel oneapi dpc window server microsoft visual studio intel intel oneapi dpc macos high sierra apple llvm version intel gpu engine validate ubuntu gnu compiler collection clang intel intel oneapi dpc intel software general purpose gpu late stable version available time release window server microsoft visual studio intel intel oneapi dpc intel graphic window dch late stable version available time release requirement pre binary see readme include correspond binary package application enable onednn apache apache matlab deep onnx openvino support please submit question feature request bug report github page may reach project maintainer privately dnnl maintainer intel com contribute welcome community contribution onednn idea improve library change impact public api library overall add new primitive change architecture submit rfc pull ensure change consistent contribution guideline contribute contribution guideline cod standard contribute cod standard ensure product patch submit pull additional detail see contribution guideline contribute project intend safe welcome space collaboration contributor expect adhere contributor covenant code_of_conduct conduct license onednn license apache license version license refer license license full license text copyright notice distribution include third party software govern separate license term clause bsd license instrumentation trace technology api itt clause bsd license apache license version boost software license version boost mit license intel graphic compute runtime oneapi level opencl intel graphic oneapi level third party software even include distribution intel software may govern separate license term include without limitation third party license term intel software license term open source software license term separate license term govern third party program set forth third party program third party program security see intel security information report potential security issue vulnerability see also security policy security trademark information intel intel logo arc intel atom intel core iris openvino openvino logo pentium vtune xeon trademark intel corporation subsidiary name brand may claim property others microsoft window window logo trademark register trademark microsoft corporation unite state country opencl opencl logo trademark apple inc permission khronos intel corporation
C C++;https://github.com/miloyip/rapidjson;rapidjson logo doc logo rapidjson png release fast json parser generator sax dom style api tencent please support open source community make rapidjson available copyright thl a29 limit tencent company milo yip rapidjson rapidjson documentation downloadable pdf epub mobi without api reference status linux lin link window win link coverall cov link lin badge win badge cov badge lin badge travis status lin link travis status win badge appveyor status win link appveyor status cov badge coverall coverage cov link coverall coverage introduction rapidjson json parser generator inspire rapidjson small complete support sax dom style api sax parser half line rapidjson fast performance comparable strlen also optionally support sse2 sse4 acceleration rapidjson self contain header depend external library boost even depend stl rapidjson memory friendly json value occupy exactly byte bite machine exclude text string default fast memory allocator parser allocate memory compactly parse rapidjson unicode friendly support utf utf utf detection validation transcoding internally read utf let rapidjson transcode json string utf dom also support surrogate u0000 null character feature read doc feature json javascript object notation light weight exchange format rapidjson full compliance rfc7159 ecma optional support relax syntax information json obtain introduce rfc7159 javascript object notation json interchange standard ecma json interchange highlight add json pointer doc pointer add json schema doc schema add relax json syntax doc dom comment trail comma nan infinity iterate array object range base loop doc tutorial reduce memory overhead value byte byte x86 architecture change please refer change log changelog compatibility rapidjson cross platform platform compiler combination test show follow visual window bite gnu cygwin clang mac bite clang android ndk user unit test platform compiler installation rapidjson header library copy include rapidjson folder system project include path alternatively dependency manager rapidjson cmake integration single command vcpkg rapidjson rapidjson follow software dependency general tool optional documentation optional unit performance test generate user documentation test please proceed step execute git submodule update init get thirdparty submodules google test create directory call rapidjson source directory change directory cmake command configure window user cmake gui application window solution find directory linux make directory successful find compile test binary bin directory generate documentation available doc html directory tree test finish please make test ctest tree get detail output ctest command possible library system wide make command tree administrative privilege accord system preference rapidjson instal possible cmake project add find_package rapidjson line cmakelists txt usage glance simple parse json string document dom make simple modification dom finally stringify dom json string cpp rapidjson simpledom simpledom cpp include rapidjson document include rapidjson writer include rapidjson stringbuffer include namespace rapidjson int main parse json string dom const char json project rapidjson star document parse json modify dom value star setint getint stringify dom stringbuffer buff writer writer buff accept writer output project rapidjson star std cout buff getstring std endl return note handle potential error follow diagram show process simpledom doc diagram simpledom png available dom api basic usage dom api sax api dump sax event parse json reader command line tool rewrite json whitespaces remove command line tool rewrite json indent newlines prettywriter command line tool capitalize string json parse json message sax api serialize object json sax api implement jsonxwriter stringify sax event kind xml format command line tool convert input json jsonx format schema command line tool validate json json schema advance modify version automatically handle json utf encode implement asyncdocumentparser parse json part thread command line tool remove value user specify key tool demonstrate generator populate document contribute rapidjson welcome contribution contribute please follow issue feel free submit issue enhancement request please help provide minimal reproducible source easy let people understand happen crash problem certain platform please bring stack dump content detail compiler etc please try breakpoint debug first tell find see start explore base information prepare workflow general follow fork pull git workflow fork repo github clone project machine checkout new branch fork start develop branch test change commit make sure change pas test include unittest preftest please add test case new feature bug fix need commit change branch push work back fork submit pull request review change note sure merge late upstream make pull request copyright license copy paste license summary
C C++;https://github.com/pjreddie/darknet;darknet darknet darknet open source neural framework write cuda fast easy support cpu gpu computation discord invite link communication question scale yolov4 cvpr source pytorch reproduce source darknet medium yolov4 source wiki useful link information see darknet project ap50 fps tesla v100 citation
C C++;https://github.com/wang-bin/QtAV;join chat qtav multimedia playback library base ffmpeg help write player effort ever qtav add ffmpeg project page qtav free software license term lgpl player license gpl qtav constituent library must adhere term license question home feature qtav meet demand hardware decode suppprt dxva2 vaapi vda videotoolbox cedarx cuda 1st player support cuda linux opengl es2 support almost format include hi10p video 1st player library support 10bit es2 vlc xbmc mplayer support real time preview video capture rgb yuv format osd custom filter filter libavfilter stero3d blur subtitle track select dynamic change ffmpeg libass engine play frame frame playback speed control variant stream locale rtsp etc custom stream audio channel track external audio track dynamically change render engine play dynamically change video decoder multiple video output player video software opengl brightness contrast saturation hue qml support playback apis compatible qtmultimedia module compatibility qtav qt4 qt5 ffmpeg late ffmpeg release recommend extensible framework component qtav design extensible write decoder audio output particular platform good add cedar hardware accelerate decoder developer requirement qt4 late version openal openal soft require development qtav find sourceforge page see wiki qtav write player write medium player qtav quite easy glwidgetrenderer2 renderer renderer show avplayer player player setrenderer renderer player play test avi detail qtav see wiki qtav qtav also qml import qtquick import qtav item video video source test mp4 mousearea anchor fill parent onclicked video play contribute qtav project github make branch commit branch push create pull request review merge create problem qtav find bug etc translation write document wiki find fix bug give idea project etc contributor wang bin lucas wang creator maintainer gianluigi tiesi sherpya avdevice input support stefan ladage qiodevice support wiki qtav let openal work osx miroslav bendik cedarv support good qmlvideofx appearance theoribeiro initial qml support vito covito interrupt callback alexander marius wachtler petar koretic sandro cavazzoni skaman dimitri prado karlox end user player commandline option player default shortcut double click fullscreen switch ctrl open space pause continue fullscreen stay top show next previous frame continue play press space osd replay esc quit stop switch aspect ratio rotate mute volume ctrl speed seek forward backward crtl wheel zoom drag drop medium player screenshots qtav qml opengl shaders qtmultimedia qtmultimedia replace qtav alt qtav qml shaders alt player osx qmlplayer alt video wall donate copyright wang bin wbsecg1 gmail com
C C++;https://github.com/pfultz2/cget;cget cmake package retrieval cmake package advantage cget non intrusive need write special hook cmake cget cmake write package cget standalone work box since standard cmake already work almost cmake package need wait package convert support cget standard cmake package already instal immediately decentralize package instal anywhere github url local get cget cget simply instal pip get pip pip cget instal directly setup window may want pkgconfig lite support package pkgconfig instal cget well cget pfultz2 pkgconfig quickstart also cmake package directly source zlib cget however much easy recipe remember url cget pfultz2 cget recipe package boost cget boost curl cget curl documentation see late documentation support platform support
C C++;https://github.com/PixarAnimationStudios/OpenSubdiv;opensubdiv opensubdiv set open source library implement high performance subdivision surface subdiv evaluation massively parallel cpu gpu architecture codepath optimize draw deform subdivs static topology interactive framerates limit surface match pixar renderman numerical precision opensubdiv cover apache license free commercial non commercial pixar internally animate film production intent encourage high performance accurate subdiv draw give away good stuff feel free let know think detail opensubdiv see pixar graphic linux window macos dev release document user doxygen api release forum opensubdiv google prerequisite complete information please refer opensubdiv document general requirement lib min version note require osd optional requirement lib min version note cuda backend tbb backend backend dx11 backend metal backend requirement optional lib min version note ptex viewer require ptex window requirement documentation lib glviewer program minimal dependency platform cmake glfw make sure glfw directory configure follow clone opensubdiv repository create directory window visual studio linux macos opensubdiv self tool stringify part process want macos stringify target produce opensubdiv xcodeproj open target mtlviewer mtlptexviewer no_ptex ommitted libptex instal sdk useful cmake option environment variable
C C++;https://github.com/codeplea/genann;genann genann minimal well test library feedforward artificial neural ann primary focus simple fast reliable hackable achieve provide necessary function little extra feature c99 dependency contain single source header simple fast thread safe easily extendible implement backpropagation compatible alternative method classic optimization genetic algorithm etc include test suite release zlib license free nearly genann self contain genann genann genann simply add project program include source example1 example1 ann xor function backpropagation example2 example2 ann xor function random search example3 example3 load ann example4 example4 ann iris backpropagation quick create ann take input layer hide neuron provide output follow structure structure doc png set label backpropagation ask predict test point show api usage show good machine technique real application would likely want test random order would also want monitor prevent fit usage create free anns create new ann genann_init function argument number input number hide layer number neuron hide layer number output return genann struct pointer call genann_copy create deep copy exist genann struct call genann_free finish ann return genann_init anns genann_train preform update standard backpropogation call pas array input array expect output rate see example1 backpropogation primary design goal genann store weight contigious block memory make easy efficient weight direct search numeric optimization algorthims hill genetic simulate etc method search ann weight directly every genann struct contain member int total_weights double weight weight point array total_weights size contain weight ann see example2 random hill climb search save load anns genann provide genann_read genann_write function load save ann text base format evaluate call genann_run ann fee forward pas give set input genann_run provide pointer array predict output ann output length hint function start genann_ simple dig change thing extra resource comp neural net excellent resource introduction artificial neural need even small neural library check excellent single hide layer library look heavy opinionated neural library recommend fann another good library peter van rossum lightweight neural despite name heavy feature genann
C C++;https://github.com/msgpack/msgpack-c;msgpack like json small fast overview efficient binary serialization format let exchange among multiple language like json except fast small small integer encode single byte short string require extra byte addition string library see library see documentation get additional information include tutorial contribute msgpack develop github report issue send pull request issue list great license msgpack license boost software license version see license_1_0 txt license_1_0 txt detail
C C++;https://github.com/mjansson/rpmalloc;rpmalloc general purpose memory allocator library provide public domain cross platform lock free thread cache byte align memory allocator implement late source always available create mattias jansson discord server discussion platform currently support window macos linux android haiku easily portable platform atomic operation mmap style virtual memory management api api map unmap memory page configure runtime custom map granularity size library put public domain redistribute modify without restriction choose mit license performance believe rpmalloc fast popular memory allocator like tcmalloc hoard ptmalloc3 others without cause extra allocate memory overhead thread cache compare allocator also believe easy read modify compare allocator single source line allocation natural byte alignment contain parallel repository benchmark utility perform interleave unaligned allocation deallocations thread cross thread multiple thread measure number memory operation perform per cpu second well memory overhead compare virtual memory map number byte request allocation call setup number thread cross thread deallocation rate allocation size limit configure command line argument performance comparison chart rpmalloc popular allocator default configuration ubuntu random byte benchmark produce number ubuntu machine logical core physical actual number interpret absolute performance figure rather relative comparison different allocator additional benchmark see benchmark benchmark configuration thread global cache important depend pattern see cache cache case study comment guideline require function call function api __must__ call initialization function either __rpmalloc_initialize__ __pmalloc_initialize_config__ get undefined behaviour call rpmalloc entry point terminate allocator __should__ call __rpmalloc_finalize__ order release cache unmap virtual memory well prepare allocator global scope cleanup process exit dynamic library unload depend case easy way library simply add __rpmalloc project compile along source contain rpmalloc specific entry point provide internal hook process thread creation moment require call function order initialize finalize allocator process thread __rpmalloc_initialize__ call process start initialize allocator __rpmalloc_initialize_config__ optional entry point call process start initialize allocator custom memory map backend memory page size map granularity __rpmalloc_finalize__ call process exit finalize allocator __rpmalloc_thread_initialize__ call thread start initialize thread local allocator __rpmalloc_thread_finalize__ call thread exit finalize release thread cache back global cache __rpmalloc_config__ get current runtime configuration allocator simply __rpmalloc__ __rpfree__ malloc style replacement function remember allocation byte align need call explicit rpmemalign rpaligned_alloc rpposix_memalign function unless need great alignment simply wrapper make easy replace exist wish override standard library malloc family function automatic initialization finalization process thread define __enable_override__ non include malloc compilation __rpmalloc c__ list libc entry point replace may complete libc replacement convenience test library exist base final solution explicit first class heap see __rpmalloc_heap_ api first class heap first class heap section require __rpmalloc_first_class_heaps__ define compile static library configure script generate ninja script ninja ninja produce static library name rpmalloc name rpmallocwrap latter include libc entry point override configure ninja also produce share object dynamic library rpmallocwrap share library ld_preload dyld_insert_libraries inject preexist binary replace malloc free family function call implement linux macos target list libc entry point replace may complete preloading convenience test library exist binary final solution dynamic library also provide automatic init fini process thread platform late stable release available master branch late development develop branch cache configuration option free memory page cache per thread global cache thread size thread cache determine adaptive scheme cache limit percentage maximum allocation count correspond size class size global cache determine multiple maximum thread cache factor control cache size set edit individual define rpmalloc source fine tune control __enable_unlimited_cache__ default define set make cache infinite never release span global cache unless thread finish never unmap memory page back high performance large memory overhead __enable_unlimited_global_cache__ default define set make global cache infinite never unmap memory page back __enable_unlimited_thread_cache__ default define set make thread cache infinite never release span global cache unless thread finish __enable_global_cache__ default define enable global cache share thread set disable global cache directly unmap page evict thread cache __enable_thread_cache__ default define enable per thread cache set disable thread cache directly unmap page long also disable global cache __enable_adaptive_thread_cache__ introduce simple heuristic thread cache size keep high water mark span count class configuration option detail statistic available __enable_statistics__ define default disable either compile command line set value rpmalloc cause slight overhead runtime collect statistic memory operation also add byte overhead per allocation track size integer safety check call enable __enable_validate_args__ define default disable either compile command line set value rpmalloc enable size argument global entry point verify cause integer overflow calculation assert enable __enable_asserts__ define default disable either compile command line set value rpmalloc include __malloc c__ compilation provide override standard library malloc entry point define __enable_override__ enable automatic initialization finalization process thread order preload library executables standard library malloc define __enable_preload__ enable runtime configurable memory page span size define __rpmalloc_configurable__ default memory page size determine system apis memory span size set 64kib enable support first class heap define __rpmalloc_first_class_heaps__ default first class heap api disable huge page allocator support huge large page window linux macos enable pas non value config value enable_huge_pages initialize allocator rpmalloc_initialize_config system support huge page automatically disable query status look enable_huge_pages config return call rpmalloc_config initialization quick overview allocator similar spirit tcmalloc google performance separate heap thread partition memory block accord preconfigured set size class 2mib large block map unmapped directly allocation different size class serve different set memory page span page dedicate size class span page flow thread thread cache overflow release global cache thread end unlike tcmalloc single block flow thread entire span page detail allocator base fix configurable page alignment default 64kib byte block alignment memory page span map alignment boundary window automatically guarantee 64kib virtualalloc granularity mmap system achieve oversizing map align return virtual memory address require boundary align fix size free operation locate header memory span without table lookup tcmalloc simply mask low bit address 64kib would low bit memory block divide category 64kib span size alignment small block byte medium block byte large block byte category divide size class span size change small block class remain medium block span size byte small block size class granularity byte bucket medium block granularity byte bucket default large block granularity configure span size default 64kib allocation fit size class boundary allocation byte allocate block byte small medium size class associate span mean contiguous set memory page configuration describe many page size class allocate time cache empty new allocation request span small medium block cache level avoid call map unmap memory page first level per thread single active span size class second level per thread list partially free span size class third level per thread list free span fourth level global list free span span small medium size class keep track many block allocate free well list block free allocation avoid lock span completely allocate thread cross thread deallocations defer owner thread separate free list per span large block super span cache level first level per thread list free super span second level global list free super span memory map default allocator apis map virtual memory page need either virtualalloc window mmap posix system want custom memory map provider __rpmalloc_initialize_config__ pas function pointer map unmap virtual memory function reserve free request number byte return memory address memory map function must align memory page size memory span size ever large configurable either provide page span size initialization __rpmalloc_initialize_config__ __rpmalloc_config__ find require alignment equal maximum page span size span size must power range multiple divisor memory page size memory map request always multiple memory page size specify custom page size initialize rpmalloc __rpmalloc_initialize_config__ pas let rpmalloc determine system memory page size apis page size must power reduce system call overhead memory span map batch control span_map_count configuration variable default default_span_map_count value turn size accord cache configuration define default memory page size large span size number span map single call adjust guarantee multiple page size span keep map entire span range unmapped call avoid try unmap partial page macos mmap request tag tag easy identification vmmap tool span break super span span multiple span size subdivide small span fulfull need map new span memory default allocator greedily grab break large span available cache map new virtual memory however span currently glue together form large super span subspans traverse cache different thread individually span subspan large super span individually decommitted reduce physical memory pressure span evict cache schedule unmapped entire original super span keep track subspans break entire range decommitted tha super span unmapped allow platform like window require entire virtual memory range map call virtualalloc unmapped call virtualfree still decommitting individual page subspans page size small span size custom memory map unmap function need take account look release parameter give memory_unmap function set decommitting individual page total super span byte size finally release entire super span memory range memory fragmentation memory fragmentation allocator sense leave unallocated unusable hole memory page call allocate free block different size due fact memory page allocate size class split perfectly align block reuse request different size block free call rpfree always immediately available allocation request within size class however memory fragmentation mean request byte follow request byte least size class different size return block least memory page apart virtual address space block size potentially within memory page span rpmalloc keep active span free list size class lead back back allocation likely serve within span memory page unless span free block rpmalloc also hole memory page semi fill span completely free span first class heap rpmalloc provide first class heap type explicit heap control api heap maintain call __rpmalloc_heap_acquire__ __rpmalloc_heap_release__ allocation free __rpmalloc_heap_alloc__ __rpmalloc_heap_free__ see rpmalloc documentation full list function heap api main case explicit heap control scope allocation heap release everything single call __rpmalloc_heap_free_all__ without maintain ownership memory block note heap api thread safe caller must make sure heap single thread give time producer consumer scenario compare allocator rpmalloc suffer much producer consumer thread scenario thread allocate memory block another thread free block allocator free block need traverse thread cache thread free operation well global cache reuse allocate thread rpmalloc free block reuse soon allocate thread need get new span thread cache enable fast release completely free memory page block memory page aliased different thread best case scenario thread keep ownership allocate memory block within thread free block thread optimal performance thread allocation pattern difference memory usage high low water mark fit within thread cache threshold allocator never touch global cache except thread init fini optimal performance tweak cache limit per size class basis bad case scenario since thread cache map span memory page per size class thread allocate block size class many size class never fill bucket thus map lot memory page small fraction map memory however waste memory always 4kib configure memory page size per size class span initialize memory page time cache free span reuse size class thread perform lot allocation deallocations pattern large difference high low water mark difference large thread cache size put lot contention global cache happen thread cache overflow low water mark cause page release global cache underflow high water mark cause page acquire global cache mitigate change __max_span_cache_divisor__ define source cost high average memory overhead caveat virtualalloc internal granularity 64kib however mmap lack granularity control instead oversizes memory map configure span size able always return memory area require alignment since extra memory page never touch extra commit physical memory page rather increase virtual memory address space entry point assume pas value valid pas invalid pointer free would likely segmentation fault __the library try guard error support global scope dynamic allocation deallocation object custom constructor destructors call __rpmalloc_finalize__ completely terminate allocator rather empty cache put allocator finalization mode call make allocator long thread safe expect remain call originate global destruction main thread span heap become free phase immediately unmapped allow correct teardown process dynamic library without leak language johan embark create rust wrapper available stas create wrapper available license free unencumbered software release public domain anyone free copy modify publish compile sell distribute software either source form compile binary purpose commercial non commercial mean jurisdiction recognize copyright law author author software dedicate copyright interest software public domain make dedication benefit public large detriment heir successor intend dedication overt act relinquishment perpetuity present future right software copyright law software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author liable claim damage liability whether action contract tort otherwise arise connection software deal software information please refer also software mit license public domain recognize country mit license mit copyright mattias jansson permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
C C++;https://github.com/dbartolini/crown;flexible game engine crown general purpose drive game engine write orthodox minimalistic orient design philosophy mind crown tie particular game type genre instead offer set generic primitive facility help create wide gamut interactive product check info binary crown linux crown window crown arch linux yay crown documentation user lua community support development discord trello screenshots level engine initialization shutdown contact daniele bartolini project page contributor chronological order daniele bartolini simone boscaratto michele rossi michela iacchelli pepper logo raphael vasconcelos nascimento giulia gazzoli crown logo license copyright daniele bartolini permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
C C++;https://github.com/p-ranav/tabulate;source image find table content quick start quick start format option format option style inheritance style inheritance word wrap word wrap font alignment font alignment font style font style cell color cell color border corner border corner range base iteration range base iteration nest table nest table utf support utf support exporter exporter markdown markdown asciidoc asciidoc sample sample generate single header generate single header contribute contribute license license quick start tabulate header library add include include_directories good single header version also available single_include note tabulate support rest readme however assume support create table object call table add_rows add row table format table table format return format object fluent interface format property table border font style color etc access row table table row_index return row object similarly call row format format property cell row let format header table follow change font background header row red align cell content center apply pad top bottom row call table column index return column object similar row column format format cell column let change font color second column yellow access cell index twice table row table row_index col_index column table column col_index cell_index like row column table cell format format individual cell print table stream operator like could also table print stream print table universal_constants print std cout format option style inheritance format tabulate follow simple style inheritance render cell apply cell format specify cell format specify apply parent row format row format specify apply parent table format table format specify apply default table format enable override format particular cell even though row table format specify entire row color yellow want specific cell color red word wrap tabulate support automatic word wrap print cell although word wrap automatic simple override automatic word wrap cell content embed newline character embed newline character cell content enforce word wrap manually table row column first cell automatic word wrap second cell embed newline character cell content even though second column plenty space character width user provide newline character break new line enforce cell style note whether word wrap automatic tabulate perform trim operation line cell remove whitespace character either side line note column table leave align default however easily change font alignment tabulate support font alignment setting leave center right default table content leave align align cell format font_align alignment font style tabulate support font style bold dark italic underline blink reverse conceal cross depend terminal terminal setting might work apply font style simply call format font_style font_style method take vector font style allow apply multiple font style cell bold italic note font style apply entire cell unlike html currently apply style specific word cell cell color number method format object color cell foreground background font border corner column separator thank tabulate support color grey red green yellow blue magenta cyan white look color vary depend terminal font border corner call format _color value set foreground color format _background_color value set background color border corner tabulate allow fine control border corner border corner set text color background color note corner corner_color corner_background_color set common style corner similarly border border_color border_background_color set common style border note note format multi_byte_characters true know table multi byte character opt calculation column width deal multi byte character involve want pay performance penalty unless need like format set set table level row level per cell basis border corner individually style range base iteration hand pick format cell operator get tedious quickly ease tabulate support range base iteration table row column quickly iterate row column format cell nest table table add_row take either std string tabulate table nest table within table program print uml class diagram tabulate note font alignment style width setting generate diagram look center great utf support nix wcswidth compute display width multi byte character column alignment work well system support necessary locale notice macos arabic locale search locale end cause alignment issue arabic text ana bahebak table follow table print phrase love different language note format multi_byte_characters true second column remember deal multi byte character explicitly set locale cell format locale value note locale string system specific follow might throw std runtime_error locale facet _s_create_c_locale name valid system exporter markdown table export github flavor markdown markdownexporter simply create exporter object call exporter dump table generate markdown format std string table render markdown like note unlike tabulate align individual cell markdown alignment per column basis markdown allow second header row column wise alignment specify markdownexporter format header cell original tabulate table decide align column per markdown spec column leave align default movie name director estimate budget release date tt1979376 toy story josh cooley june tt3263904 sully clint eastwood september tt1535109 captain phillips paul greengrass october asciidoc tabulate export table asciidoc asciidocexporter export render output see note alignment support per column font style fontstyle bold fontstyle italic cell also combination sample number sample sample directory sample follow command note use_cpp17 variable tabulate std variant std optional compiler support structure without flag tabulate generate single header contribute contribution welcome look contribute contribute document information license project available license
C C++;https://github.com/andrewrk/libsoundio;libsoundio library provide cross platform audio input output api suitable real time software digital audio workstation well consumer software music player library abstraction however delicate balance performance power api convenience scale tip close former feature exist sound backends expose feature limitation support operate system window macos linux support backends dummy silence expose raw device share device raw device give best performance prevent application share device default usually provide sample rate conversion format conversion expose device friendly name could save config persist device become plug unplug friendly name suitable expose user support optimal usage support backend api right thing whether backend fix buff size jack coreaudio whether allow directly manage buff alsa pulseaudio wasapi library depend respective backend api library libc depend libstdc exception time type information error communicate via return cod log stdio support channel layout also know channel map important surround sound application ability monitor device get event available device change ability get event backend disconnect jack server pulseaudio server shut detect input device default output device default ability connect multiple backends could alsa device open jack device open time meticulously check return cod memory allocation meaningful error cod expose extra api available backends provide application name stream name jack pulseaudio synopsis complete program emit sine wave default device best backend backend priority soundio_connect libsoundio try backends order unable connect backend due backend instal server platform wrong next backend try jack pulseaudio alsa linux coreaudio osx wasapi window dummy like order soundio_connect_backend explicitly choose backend connect soundio_backend_count soundio_get_backend get list available backends api dependency cmake alsa library optional libjack2 optional libpulseaudio optional window libsoundio follow section package necessary system somewhere system libsoundio source directory replace path mxe appropriate path test backend follow unit test unit_tests see test coverage lcov make coverage view coverage index html browser sio_list_devices make sure crash output look good valgrind available sio_list_devices watch make sure detect plug unplug usb microphone sio_sine make sure hear sine wave backends raw device sio_sine device raw device get sio_list_devices make sure hear sine wave test pause test unpausing test cleanup clear buff clear buff pause stream also underflow test pause callback unpause underflow read test instruction print sio_microphone ensure record play back correctly possible device device parameter test usb microphone raw mode backend_disconnect_recover read test instruction print latency make sure print beep line beep hear documentation ensure instal look html index html browser
C C++;https://github.com/actor-framework/actor-framework;caf actor framework caf open source actor feature lightweight fast actor pattern match message transparent message documentation language grade online resource __homepage__ __developer blog__ __guides tutorials__ __manual__ __doxygen__ report bug get help __open issue github__ __ask question stackoverflow__ community __chat__ __twitter__ __user mail list__ get caf currently officially maintain caf package available package manager support community member freebsd get source caf source caf system choice make caf convenient command line provide configure script wrap cmake invocation script work unix system window recommend generate msvc project via cmake native configure script script convenient frontend cmake see configure list available option default script create directory ask cmake generate makefile default setting generally follow step cmake generate makefile caf default setting either cmake gui perform step command line step cmake print useful configuration option caf default value helptext cmake project add caf dependency find_package list require module core instal caf non standard location set caf_root prior call find_package dependency cmake caf openssl openssl module support platform evolve language compiler vendor constantly add language standard library feature since caf many platform mean need policy hand ensure widely support subset hand naturally progress shift landscape eventually catch recent addition order get stick instead single individual compiler version caf commit platform currently deem relevant everything pas fair game cover window late msvc release macos late xcode release freebsd late several linux distribution via docker image find linux aim support current release still receive active support major distribution note linux distribution roll release generally provide recent tool distribution traditional release schedule thus would add redundancy documentation locally offline version manual require offline version api reference documentation require simply doxygen command root directory repository scientific caf scientific context please follow citation find online nightly dev dev nightly jenkins badge doc badge lgtm badge gitter badge
C C++;https://github.com/ShiqiYu/libfacedetection;libfacedetection open source library cnn base face detection image cnn convert static variable source source depend library need compiler compile source window linux arm platform compiler simd instruction speed detection enable avx2 intel cpu neon arm provide src facedetectcnn cpp array onnx opencv try script opencv_dnn onnx view architecture detect image cpp detect camera cpp show library library image cnnresult png detection copy directory src project compile project source write standard compile platform support tip please add facedetection_export position copy facedetectcnn add define facedetection_export facedetection_export see issue please add turn optimization compile source please choose maximize speed compile source microsoft visual studio enable openmp speedup best solution call detection function different thread also compile source static dynamic library project compile compile cnn base face detection intel cpu method time fps time fps x64 x64 x64 x64 single thread single thread multi thread multi thread cnn cpu 640x480 06ms 93ms cnn cpu 320x240 77ms 19ms cnn cpu 160x120 26ms 77ms cnn cpu 128x96 41ms 49ms minimal face size 10x10 intel core 1065g7 cpu 3ghz cnn base face detection arm linux raspberry method time fps time fps single thread single thread multi thread multi thread cnn cpu 640x480 99ms 66ms cnn cpu 320x240 43ms 19ms cnn cpu 160x120 91ms 43ms cnn cpu 128x96 94ms 24ms minimal face size 10x10 raspberry broadcom bcm2835 cortex a72 armv8 bite soc 5ghz performance wide face default setting scale confidence_threshold float point author shiqi contributor contributor contribute github com list contributor list github com jia dong shengyin acknowledgment work partly support science foundation shenzhen grant citation publish face detection evaluate different method project also evaluate article facedetect author yuantao feng shiqi hanyang peng yan jianguo zhang title detect face efficiently survey evaluation journal ieee transaction biometrics behavior identity science year open access loss eiou novel extend iou detail find article eiou author peng hanyang shiqi journal ieee transaction image process title systematic iou relate method beyond simplify regression good localization year volume page doi tip open access
C C++;https://github.com/jeaye/jeayeson;jeayeson sane json library jeayeson design frustration many template base approach handle json modern give limit number type json offer function write generic manner provide consistent interface matter type jeayeson non validate json library expect valid json time header easy add project small consistent api typesafe interface absolutely macro need utf utf transcoding extensive test suite sane minimal unit test framework practice assume jeayeson header search path simply note window symbolic link work give access follow type json assume want create json simply want piece piece read json string read write json feel like stdlib find normal stdlib like function include iterator support type check cast installation configure script must least automagically generate jeayeson config hpp see since jeayeson header library simply copy content include project good yet add jeayeson submodule introduce jeayeson include header search path full installation also achieve configure make see configure script prefix option dependency compiler gcc clang recommend boost recommend customization note configuration easily jeayeson config hpp generate configure overwrite subsequently delete reset customization achieve adjust type jeayeson config struct template specialization already provide contain default type jeayeson feel free change type still compatible type may want json integer type 32bit instead default 64bit may want std unordered_map instead std map test note actually jeayeson since header library process test project directory test test test src test include give jeayeson
C C++;https://github.com/Microsoft/ChakraCore;chakracore discord license mit chakracore javascript engine api add support javascript compatible project compile x64 processor linux macos window x86 arm window future goal support x86 arm processor linux arm macos future chakracore may hear microsoft edge long chakra microsoft continue provide security update chakracore 9th march intend support chakracore plan continue community project target primarily embed case hope produce future release new feature enhancement support case also would like invite interest party involve project detail please see follow draft plan document overall version also see discussion issue would like contact community team please either open issue join discord chat link security believe find security issue chakracore please share microsoft privately follow guidance microsoft security report via channel help minimize risk project chakracore find security issue master branch chakracore please join discord server private message core team member documentation chakracore quickstart embed api contribution guideline contribute blog talk chakracore chakracore window sp1 window server either visual studio support instal visual studio instal clone chakracore open chakra core sln visual studio solution macos chakracore xcode command line tool cmake linux chakracore cmake ninja detail alternatively see get chakracore pre chakracore binary chakracore option chakracore basic test engine correctly application exe linux macos app lightweight host chakracore small application find binary window vcbuild bin platform configuration vcbuild bin x64_debug macos linux buildfolder config release embed application see note chakracore_ chakracore javascript engine include external apis provide web browser node dom apis like additional apis provide chakracore embed chakracore application need implement input output apis debug put text terminal alternatively dependency manager chakracore cmake integration single command vcpkg chakracore contribute contribution chakracore welcome contribute chakracore submit help verify fix submit pull bug fix feature discus exist proposal please refer contribution guideline contribute detail license license mit contact question chakracore would like reach issue development advice work chakracore issue reach follow open prefix issue title question see tag already open question discus chakracore team community via discord link
C C++;https://github.com/facebook/buck;buck buck tool see buck check documentation installation since buck buck initial process involve phase clone buck repository bootstrap ant git clone depth buck ant must java compile successfully see compilation error ant check java_home point version bootstrapped version buck buck bin buck show output buck output contain something like program buck buck gen program buck pex buck gen program buck pex help prebuilt buck binary pre binary buck buck sha first time version buck request via could take minute initial binary become available every subsequent request serve artifact directly functionality available fork buck well fetch buck binary jdk modify end url buck java11 pex feature deprecation buck try move fast respect internals however user face feature rule command line interface etc buck team try graceful deprecation process note generally apply document functionality functionality document appear wide process issue open github suggest deprecate remove large feature deprecate may period default new set old behavior may configuration change progress deprecation tag announcement deprecation change submit buck put old behavior behind configuration flag set default old behavior flag find large feature change eventually put place set default new behavior skylark become default parser removal date reach change submit remove feature point configuration value still parse buck internally license apache license
C C++;https://github.com/jeaye/value-category-cheatsheet;value category cheatsheet herein lie generate pdf outline common pitfall edge case lvalues rvalues like cheatsheet generate http server convert produce web page pdf project accompany talk present hop convey intricacy everyday work locally rule change cheatsheet mean practical reference everyday dev work exist codebases since yet publish codebases much likely rulesets focus
C C++;https://github.com/s9w/oof;oof omnipotent output friend common program write output console console far capable usually magic lie call virtual terminal sometimes also confusingly call escape cryptic character sequence allow complete control position color property write character oof single header wrap convenient way top oof provide special interface heavily optimize stream sequence real time output like possible follow video showcase everything letter console window usage library include oof header library include must preceeded define oof_impl cpp way function compile simple interface consist function index color simply color refer index color behind index set set_index_color function return magic type operator std cout std wcout also implicitly convert std string std wstring string type mostly struct color uint8_t red green blue convenience constructor integer component parameter get automatically static_cast uint8_t construct single value grayscale color encourage std bit_cast reinterpret_cast memcpy favorite byte rgb color type performance screen interface print command regardless wether printf std cout something specific pretty expensive performance priority consider string first print want real time output continuously change screen even potential keep track current screen state oof avoid write cell change change console cursor state even without print anything expensive avoid unnecessary state change key optimization implement screen pixel_screen class define rectangle console window set state every single cell get_string write_string string_type method output optimize string achieve desire state assume user interfere difference get_string write_string string_type pas string reuse avoid allocate new string almost always time string tiny time take print worry much oof screen usage api general pretty low level compare focus high performance modularity encourage component good horizontal bar demo demo bars_demo cpp console always write text letter font single letter cell much tall wide special character exactly fill upper half cell visible area get effectively transform almost square pixel exactly pixel_screen class set color give control letter note type often halfline type parameter due fact pixel half line high oof pixel_screen usage source demo video begin repo demo demo include yet unreleased helper library s9w color math crucial want look note console display text text display via font letter include console font visual artifact duh especially important pixel_display type mildly special block font may include others poorly align size break even pixel grid short overview common monospace font well suit pixel display note many great size ugly others font name great font fira mono anka coder cascadia courier new hack lucida console source pro pragmata pro consolas mediocre inconsolata iosevka break awful input mono menlo office pro bold bold sequence special console ignore entirely implement actual bold others implement bright slightly alter color affect letter check cmd exe interpret bright window terminal however correctly implement bold since set intensetextstyle bold see error provide error function get call something wrong mostly catch obvious usage error negative size bound index etc feel free ignore want performance specific detail window printf std cout slow completely fine static output unsuitable real time display much fast window directly ready wrapper work std string std wstring would oof produce output expect may mode enable enable function window pixel_screen screen combination std wcout might see output unicode output might need magic enable either google recommend fast_print fast suffer problem sequence universal console program operate system may support access window machine make claim operate system new window problem irregular frame pace report high fps feel much choppy good old cmd exe
C C++;https://github.com/cr-marcstevens/sha1collisiondetection;sha1collisiondetection library command line tool detect sha collision copyright marc stevens distribute mit software license see accompany license txt copy developer marc stevens cwi amsterdam dan shumow microsoft research library command line tool design near drop replacement common sha library sha1sum compute sha hash give additionally detect cryptanalytic collision attack sha present fast take twice amount time regular sha specifically detect cryptanalytic collision attack sha top sha disturbance vector probability possibility false positive neglect probability small library support indicator flag application check act well special _safe hash_ mode return real sha hash collision detect different _safe_ hash collision detect collide sha hash different unpredictable safe hash essentially enable protection application sha collision change application digital signature forgery base sha collision automatically become invalid theoretical explanation collision detection see award win _counter cryptanalysis_ counter cryptanalysis marc stevens crypto lecture note computer science vol springer compile command line usage program bin sha1dcsum bin sha1dcsum_partialcoll first program bin sha1dcsum detect warn generate cryptanalytic sha collision attack like document well late derive attack second program bin sha1dcsum_partialcoll detect warn generate cryptanalytic collision attack reduce round sha far library usage see documentation lib sha1 simple snippet inclusion program order make easy include source project several preprocessor macro rather copy paste customize specialize first see set define appropriately allow avoid modify sha1dc_no_standard_includes skip include standard header project whatever reason wish header include sha1dc_custom_include_sha1_c include custom header top sha1 usually would set conjunction sha1dc_no_standard_includes point header include various standard header sha1dc_init_safe_hash_default set default safe_hash sha1dcinit valid value unset default sha1dc_custom_trailing_include_sha1_c include custom trailer sha1 useful extra utility function make function already define sha1 sha1dc_custom_trailing_include_sha1_h include custom trailer sha1 useful define prototype function include sha1dc_custom_trailing_include_sha1_c sha1dc_custom_include_ubc_check_c include custom header top ubc_check sha1dc_custom_trailing_include_ubc_check_c include custom trailer ubc_check sha1dc_custom_trailing_include_ubc_check_h include custom trailer ubc_check try auto detect certain thing base cpu platform unless really obscure cpu port new platform need tweak please open issue sha1dc_force_littleendian sha1dc_force_bigendian override check processor endianenss force either little endian big endian sha1dc_force_unaligned_access permit unaligned access fail sparc processor permit whitelist processor cpu detect allow allow unaligned access set may improve performance make bad kernel catch emulate access
C C++;https://github.com/mackron/miniaudio;single library audio playback capture documentation support platform backends major feature unofficial bind show way play sound high level api show decode play sound low level api find folder online documentation online documentation find documentation also find top always date authoritive source information miniaudio documentation generate documentation support platform window uwp macos linux bsd android raspberry emscripten html5 backends wasapi directsound winmm core audio apple alsa pulseaudio jack sndio openbsd audio netbsd openbsd freebsd aaudio android opensl android web audio emscripten null silence custom major feature choice either public domain mit entirely contain within single easy integration source tree external dependency except standard library backend library write compilable enable miniaudio work almost compiler support major desktop mobile platform multiple backends maximum compatibility low level api direct access raw audio high level api sound management effect include spatialization support playback capture full duplex loopback wasapi device enumeration connect specific device default connect multiple device share exclusive mode support backends resource management load stream sound node graph system advance mix effect process conversion sample format conversion channel conversion resampling filter biquads low pas first second high order high pas first second high order band pas second high order effect delay echo spatializer stereo pan waveform generation sine square triangle sawtooth noise generation white pink brownian decode wav flac mp3 vorbis via stb_vorbis must include separately custom encode wav refer program complete description available feature miniaudio follow source compile need dependency window macos need link anything linux link lpthread ldl bsd link lpthread need compile objective prefer separate find split version miniaudio extra miniaudio_split folder miniaudio traditional library add miniaudio source tree like source include miniaudio like normal header prefer compile single translation unit aka unity include main source note split version auto generate tool base main root directory want contribute please make change main vorbis decode vorbis decode enable via stb_vorbis need include header section stb_vorbis miniaudio enable vorbis follow unofficial bind project offer bind language may interest note unofficial maintain part repository encounter bind specific bug please post bug report specific project write bind let know consider add list language project rust
C C++;https://github.com/bayandin/awesome-awesomeness;awesome awesomeness curated list amazingly awesome awesomeness program language package manager program language clojure common lisp common lisp common erlang angular javascript cross platform node lua net ruby swift zeef typescript general accessibility algorithm big amazon web android android release android android arm software artificial api big blockchain bitcoin bitcoin payment ethereum book free program free software test mind expand bsd block web web land community competitive computer continuous conversational creative common cryptography crypto science datasets deep decision tree design design dev first robotics fluidapp free open source software fraud detection free frontend game gif browser extension github gradient boost graph growth guide hack incident image internet thing cocoa open source leadership linux linux list mac machine malware material mental mobile market mobile web prometheus alert monte carlo tree search motion design newsletter login web open open source product protocol open sound control pent cheat quick look raspberry react remote remote robotic science search engine optimization seo serverless service service sheet book speech natural language nlp sphinx static sublime sustainable tailwind terminal test threat component vehicle vim web performance xmpp license creative common work license creative common attribution international
C C++;https://github.com/solodon4/Mach7;mach7 pattern match status linux status status github yuriy gabriel bjarne abstract pattern match abstraction mechanism greatly simplify source commonly pattern match language provide good syntax fast correctness guarantee improve diagnostics mach7 library solution pattern match maintain many feature pattern mach7 user definable store variable pas among function allow open class hierarchy mach7 fibonacci number demonstrate pattern mach7 lambda calculator demonstrate pattern match decompose object nest also demonstrate relational match several next demonstrate library deal efficiently type safe manner non polymorphic like boost variant well breve syntax thing mach7 offer generate fast detail set look prepare cppcon implement well pattern simple enough help get start mach7 project continuous integration travis continuous integration currently check validate follow configuration linux osx status visual analyze x86 fail x64 fail status github branch master main development branch release clean branch non essential delete back master avoid deletion actual edit branch source yet get copy repo locally execute git clone library header require unit time test accumulate time several script completely abandon favor new maintain flag original experiment library cmake late support recent still experimental point cmake perform follow command within mach7 folder cmake bbuild cmake target note require administrative privilege system like try command cmake bbuild dcmake_install_prefix wherever require administrative priviege cmake target please make sure msvc clang gcc able find path provide include mach7 header project msvc gcc clang cmake makefiles gcc late clang late top level makefile synopsis make library test make right make unit unit test make time time test make cmpl test time compilation time library make clean clean target intermediary make test test make check test correct_output check output make doc mach7 documentation require doxygen make include png graph representation header inclusion require graphviz dot see list specific target support makefiles see comment inside particular say test unit example05 cpp target filename extension exe instead cpp even unix family low level makefiles support phony target top level makefile top level makefile forward correspond call unit test similarly time test visual late mach7 script unit test come script assume cpp standalone program find date list support bat syntax pgo repro tmp filemask cpp syntax time cmp doc clean test check command support far pgo repro tmp filemask cpp give recent visual compiler instal unit unit test syntax support library option combination syntax variation time support library option combination time variation cmp executables comparison language doc mach7 documentation clean clean test check correct_output check output modifier pgo perform profile guide optimization produce executables repro case error create compile pre process repro tmp keep temporary specific version visual studio compile source follow visual visual visual visual visual visual visual visual visual set environment set target architecture follow x86 x64 arm talk accept cppcon september bellevue mach7 design evolution pattern match library may aspen publication solodkyy real stroustrup open pattern match extend proceed companion publication conference system program application software humanity splash acm new york usa solodkyy real stroustrup open pattern match proceed 12th international conference generative program concept experience gpce acm new york usa solodkyy simplify analysis thesis texas university august solodkyy real stroustrup open efficient type switch proceed acm international conference object orient program system language application oopsla acm new york usa others mach7 andrzej another project mach7 vhdl frontend yosys arrow fast fast general purpose program language employ garbage collector minimal runtime overhead license mach7 license bsd license license support question mach7 trouble best way get answer post label contribute poor man hopefully help others similar question get notification new issue usually respond within day prefer discus question github feel free send private email mailto yuriy solodkyy mach7support gmail com note email address call help look contributor project student take program language class class would require write small compiler interpreter would love try mach7 job promise help issue might library know bug limitation right several experimental header would need include enable syntax work work progress start work particular syntax check syntax make note header include clear eventually leave header moment mess intuitive match hpp probably header want represent old experiment recent experimentation header probably look library yet suitable multi thread environment lock free version vtbl map work please refrain solution project check sync recent change directory structure difficult maintain ultimately replace verbose system likely cmake meantime please bat test window date list know issue see mach7
C C++;https://github.com/ComputationalRadiationPhysics/cupla;transfer cupla repository update local git upstream repository origin please follow command
C C++;https://github.com/deplinenoise/tundra;tundra system tundra high performance system design give best possible incremental time even large software project tundra portable work macos linux freebsd window late binary release require vista late support source mingw port unix like platform easy port platform take little bite work well define place see doc manual asciidoc detail usage information companion visual studio addin might useful see detail binary window installers available release tab macos package available via brew tundra license copyright tundra copyright andreas fredriksson tundra make available mit license see copy complete license text tundra previously make available gpl license hind commercial adoption contributor agree change license mit tundra lua see lua license term tundra include public domain lua debugger see lua copyright lua org puc rio permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software lua debugger tundra include optional lua cli debugger public domain software write dave nichols debugger obtain
C C++;https://github.com/jeaye/stdman;stdlib man page stdman tool parse archive html generate groff format manual page unix base system goal provide excellent format easy readability stdman test linux sample sample gif installation need compile stdman want man page instead need pas option configure see configure help update information troubleshoot get manual entry std foo see libstdc man page characterize huge list typedefs man std string see follow default stdman usr local system manpath look first fix option usr share manage manpath bashrc similar output colorize either need set pager colorize man page need pager default easy enough add default ship vim like navigation configure arch pacman ubuntu apt get generate want source make modification generate man page simply note make generate expect source reference cpp directory default see configure help modify compilation generation dependency recommend gcc clang great elinks recommend 12pre6 great gzip recommend great note generation test window cygwin
C C++;https://github.com/lcsmuller/json-build;json json allocation json serializer compatible c89 inspire minimalistic json tokenizer feature compatible c89 dependency dynamic memory allocation usage json include since json single header header library complex case might need define additional macro define jsonb_static hide json api symbol make static also want include json multiple avoid duplication symbol may define jsonb_header macro api jsonb_init initialize jsonb handle jsonb_object push object builder stack jsonb_object_pop pop object builder stack jsonb_key push object key field builder stack jsonb_array push array builder stack jsonb_array_pop pop array builder stack jsonb_token push raw token builder stack jsonb_bool push boolean token builder stack jsonb_null push null token builder stack jsonb_string push string token builder stack jsonb_number push number token builder stack follow possible return cod builder function jsonb_ok operation success user proceed next operation jsonb_end operation success json complete expect operation jsonb_error_nomem buff large enough jsonb_error_input user action match expect next token jsonb_error_stack user action would lead boundary access increase jsonb_max_depth worth mention jsonb_error_ prefix cod negative get jsonb_error_nomem allocate large buff call builder function info software distribute mit license www opensource org license mit license php feel free integrate commercial product
C C++;https://github.com/Tessil/robin-map;fast hash map hash set robin hood hash robin map library fast hash map hash set open address linear robin hood hash backward shift deletion resolve collision class provide tsl robin_map tsl robin_set tsl robin_pg_map tsl robin_pg_set first fast power growth policy last prime growth policy instead able cope good poor hash function prime version chance repeat pattern low bit hash store pointer identity hash function see growthpolicy growth policy detail benchmark tsl robin_map hash map may find page also give advice hash table structure try case useful bite lose multiple hash table tsl namespace key feature header library add include include directory include path ready cmake also tsl robin_map export target cmakelists txt cmakelists txt fast hash table check number support move non default constructible key value support heterogeneous lookup allow usage find type different key map std unique_ptr key foo std uintptr_t key parameter find without construct std unique_ptr see heterogeneous lookup need reserve sentinel value key possibility store hash value alongside store key value fast rehash lookup hash key equal function expensive compute note hash may store even ask explicitly library detect impact size structure memory due alignment see template parameter detail hash know lookup possible pas parameter speed lookup see precalculated_hash parameter support efficient serialization deserialization see serialization serialize deserialize method detail library exception disable fno exception option clang gcc without option msvc simply define tsl_no_exceptions std terminate replacement throw instruction exception disable api closely similar std unordered_map std unordered_set difference compare std unordered_map tsl robin_map try interface similar std unordered_map difference exist strong exception guarantee hold follow statement true std is_nothrow_swappable value std is_nothrow_move_constructible value value_type key tsl robin_set std pair tsl robin_map otherwise exception throw swap move structure may end undefined state note per standard value_type noexcept copy constructor move constructor also satisfy condition thus guarantee strong exception guarantee structure see detail type key also case map must swappable must also copy move constructible iterator invalidation behave way operation modify hash table invalidate see detail reference pointer key value map invalidate way iterators key value iterators tsl robin_map operator operator return reference pointer const std pair instead std pair make value modifiable modify value call value method iterator get mutable reference support bucket relate method like bucket_size bucket difference also apply std unordered_set tsl robin_set thread safety guarantee std unordered_map set possible multiple reader writer growth policy library support multiple growth policy growthpolicy template parameter policy provide library easily implement need default policy tsl robin_map set policy keep size bucket array hash table power constraint allow policy avoid usage slow modulo operation map hash bucket instead hash hash see fast fast may cause lot collision poor hash function modulo power mask significant bit end default policy tsl robin_pg_map set policy keep size bucket array hash table prime number map hash bucket prime number modulo good distribution hash across bucket even poor hash function allow compiler optimize modulo operation policy lookup table constant prim modulos see detail slow tsl power_of_two_growth_policy secure policy grow map customizable growth factor pas parameter modulo operator map hash bucket slow flexible implement policy implement follow interface installation robin map add include include directory include path header library cmake also tsl robin_map export target cmakelists txt cmakelists txt target_link_libraries project instal make also find_package tsl robin map require instead add_subdirectory library available also present package repository work standard compliant compiler test gcc clang visual studio test need boost test library cmake usage api find method document yet replicate behavior std unordered_map std unordered_set except specify otherwise heterogeneous lookup heterogeneous overload allow usage type key lookup erase operation long type hashable comparable key activate heterogeneous overload tsl robin_map set qualify keyequal is_transparent must valid work way either define function object keyequal hash need able deal different type serialization library provide efficient way serialize deserialize map set save send require user provide function object serialization deserialization note leave binary compatibility endianness float binary representation size int type serialize deserializes hand provide function object compatibility require detail regard serialize deserialize method find serialization boost serialization compression zlib possible serialization library avoid boilerplate follow boost serialization boost zlib compression stream reduce size serialize require due usage template parameter list syntax lambda adapt recent version license license mit license see license license detail
C C++;https://github.com/NASA-SW-VnV/ikos;ikos ikos inference kernel open static analyzer static analyzer base theory abstract interpretation introduction ikos start library design facilitate development sound static analyzer base abstract specialization static analyzer application family application critical achieve precision scalability develop analyzer arduous require significant expertise abstract interpretation ikos provide generic efficient state art abstract interpretation structure algorithm control flow graph fixpoint iterators numerical abstract domain etc ikos independent particular program language ikos also provide static analyzer base implement scalable analyse detect prove absence runtime error program license ikos release nasa open source agreement version see license pdf license pdf contact ikos list nasa gov release note see release_notes release_notes troubleshoot see troubleshoot troubleshoot installation dependency analyzer need follow dependency compiler support gcc clang cmake gmp boost sqlite tbb llvm clang optional apron optional pygments instal package manager installation instruction arch linux centos debian fedora mac red hat ubuntu window available doc doc directory instruction assume sudo root access please follow instruction doc rootle doc rootle note llvm source need enable time type information rtti require dependency move next section dependency system ikos open ikos distribution shall see follow directory structure ikos cmake system need specify installation directory contain binary library header installation specify directory cmake everything root directory distribution follow step ikos path ikos directory step ikos add ikos path consider add bashrc test test simply type ikos suppose want analyze follow program call loop analyze program ikos simply shall see follow output ikos report occurrence buff overflow line ikos command take source cpp llvm bitcode input analyze find runtime error also call undefined behavior create database output current work directory print report report line follow status safe statement prove safe error statement always error unreachable unreachable statement never execute warn may mean thing statement error execution static analyzer enough information conclude check dependent external input instance static analyzer powerful enough prove absence error default ikos show warn error directly terminal like compiler would analysis report big shall ikos report output examine report terminal ikos view output examine report web interface information analyze whole project ikos scan analyzer readme analyze whole project ikos scan examine report ikos view analyzer readme examine report ikos view analysis option analyzer readme analysis option check analyzer readme check numerical abstract domain analyzer readme numerical abstract domain entry point analyzer readme entry point multi thread analyzer readme multi thread optimization level analyzer readme optimization level inter procedural intra procedural analyzer readme inter procedural intra procedural fixpoint engine parameter analyzer readme fixpoint engine parameter partition analyzer readme partition hardware address analyzer readme hardware address analysis option analyzer readme analysis option report option analyzer readme report option format analyzer readme format analyzer readme status filter analyzer readme status filter analysis filter analyzer readme analysis filter verbosity analyzer readme verbosity report option analyzer readme report option apron support analyzer readme apron support analysis assumption analyzer readme analysis assumption analyze embed software require cross compiler analyzer readme analyze embed software require cross compiler library function reduce warn analyzer readme library function reduce warn contributor see contributor contributor publication sing kook kim arnaud venet aditya thakur deterministic parallel fixpoint computation _principles program language popl new orleans louisiana guillaume brat jorge navas nija shi arnaud venet ikos framework static analysis base abstract interpretation _proceedings international conference software engineer formal method sefm grenoble france arnaud venet gauge domain scalable analysis linear inequality invariant _proceedings computer aid verification cav berkeley california usa lecture note computer science page volume springer cod standard see doc coding_standards doc coding_standards overview source see doc overview doc overview
C C++;https://github.com/DaveGamble/cJSON;cjson ultralightweight json parser ansi table content license license usage usage welcome cjson welcome cjson copy source copy source cmake cmake makefile makefile vcpkg vcpkg include cjson include cjson structure structure work structure work structure basic type basic type array array object object parse json parse json print json print json print print parse parse caveat caveat character character character encode character encode standard standard float point number float point number deep nest array object deep nest array object thread safety thread safety case sensitivity case sensitivity duplicate object member duplicate object member enjoy cjson enjoy cjson license mit license copyright dave gamble cjson contributor permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software usage welcome cjson cjson aim dumb possible parser get job single single header json describe best like xml fat free move around store thing generally represent program state library cjson exist take away much legwork get way point pragmatism ignore truth say mode auto manual let quick lift json page page inspire write cjson parser try share philosophy json simple dumb way several way incorporate cjson project copy source entire library header copy cjson cjson project source start cjson write ansi c89 order support many platform compiler possible cmake cmake cjson support full blow system way get feature cmake equal high version support cmake recommend tree mean compile put directory separate source order cjson cmake unix platform make directory cmake inside create makefile bunch compile make want default header usr local include cjson library usr local lib also pkg config make easy detect exist installation cmake cmake config cmake base project discover library change process list different option pas cmake turn denable_cjson_test enable test default denable_cjson_utils enable cjson_utils default denable_target_export enable export cmake target turn make problem default denable_custom_compiler_flags enable custom compiler flag currently clang gcc msvc turn make problem default denable_valgrind test default denable_sanitizers compile cjson enable possible default denable_safe_stack enable instrumentation pas currently work clang compiler default dbuild_shared_libs share library default dbuild_shared_and_static_libs share static library default dcmake_install_prefix usr set prefix installation denable_locales enable usage localeconv method default dcjson_override_build_shared_libs enable override value build_shared_libs dcjson_build_shared_libs denable_cjson_version_so enable cjson version default package cjson distribution linux would probably take step window cmake usually create visual studio solution inside developer command prompt visual studio exact step follow official documentation cmake microsoft online search engine choice description option still generally apply although work window makefile note method deprecate cmake possible makefile support limit fix bug cmake available still gnu make makefile cjson command directory source automatically compile static share library little test program full test suite want compile library system make default header usr local include cjson library usr local lib change behavior set prefix destdir variable make prefix usr destdir temp uninstall make prefix usr destdir temp uninstall vcpkg cjson dependency manager cjson port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository include cjson instal via cmake makefile include cjson like structure cjson represent json cjson struct type item type represent json value type store type bite flag mean find type compare value type check type item correspond cjson_is function null check follow type check return boolean value item type type follow cjson_invalid check cjson_isinvalid represent invalid item contain value automatically type set item byte cjson_false check cjson_isfalse represent false boolean value also check boolean value general cjson_isbool cjson_true check cjson_istrue represent true boolean value also check boolean value general cjson_isbool cjson_null check cjson_isnull represent null value cjson_number check cjson_isnumber represent number value value store double valuedouble also valueint number outside range integer int_max int_min valueint cjson_string check cjson_isstring represent string value store form terminate string valuestring cjson_array check cjson_isarray represent array value implement point child link list cjson item represent value array element link together next prev first element prev next null last element next null cjson_object check cjson_isobject represent object value object store way array difference item object store key string cjson_raw check cjson_israw represent kind json store terminate array character valuestring avoid print static json save performance cjson never create type parse also note cjson check valid json additionally follow flag cjson_isreference specify item child point valuestring item reference cjson_delete function deallocate item child valuestring cjson_stringisconst mean string point constant string mean cjson_delete function try deallocate string work structure every value type cjson_create function create item type allocate cjson struct late delete cjson_delete note delete point otherwise get memory leak important add item array object already must delete cjson_delete add array object transfer ownership array object delete get delete well also could cjson_setvaluestring change cjson_string valuestring need free previous valuestring manually basic type null create cjson_createnull booleans create cjson_createtrue cjson_createfalse cjson_createbool number create cjson_createnumber set valuedouble valueint number outside range integer int_max int_min valueint string create cjson_createstring copy string cjson_createstringreference directly point string mean valuestring delete cjson_delete responsible lifetime useful constant array create empty array cjson_createarray cjson_createarrayreference create array content content get delete cjson_delete add item array cjson_additemtoarray append item end cjson_additemreferencetoarray element add reference another item array string mean cjson_delete delete item child valuestring property double free occur already elsewhere insert item middle cjson_insertiteminarray insert item give base index shift exist item right want take item array give index continue cjson_detachitemfromarray return detach item sure assign pointer otherwise memory leak delete item cjson_deleteitemfromarray work like cjson_detachitemfromarray delete detach item via cjson_delete also replace item array place either cjson_replaceiteminarray index cjson_replaceitemviapointer give pointer element cjson_replaceitemviapointer return fail internally detach old item delete insert new item place get size array cjson_getarraysize cjson_getarrayitem get element give index array store link list iterate via index inefficient iterate array cjson_arrayforeach macro time complexity object create empty object cjson_createobject cjson_createobjectreference create object content content get delete cjson_delete add item object cjson_additemtoobject cjson_additemtoobjectcs add item object name constant reference key item string cjson struct get free cjson_delete cjson_additemreferencetoarray element add reference another object array string mean cjson_delete delete item child valuestring property double free occur already elsewhere want take item object cjson_detachitemfromobjectcasesensitive return detach item sure assign pointer otherwise memory leak delete item cjson_deleteitemfromobjectcasesensitive work like cjson_detachitemfromobjectcasesensitive follow cjson_delete also replace item object place either cjson_replaceiteminobjectcasesensitive key cjson_replaceitemviapointer give pointer element cjson_replaceitemviapointer return fail internally detach old item delete insert new item place get size object cjson_getarraysize work internally object store array want access item object cjson_getobjectitemcasesensitive iterate object cjson_arrayforeach macro way array cjson also provide convenient helper function quickly create new item add object like cjson_addnulltoobject return pointer new item null fail parse json give json terminate string parse cjson_parse give json string whether terminate parse cjson_parsewithlength parse json allocate tree cjson item represent return fully responsible deallocating cjson_delete allocator cjson_parse malloc free default change globally cjson_inithooks error occur pointer position error input string access cjson_geterrorptr note though produce race condition multithreading scenario case good cjson_parsewithopts return_parse_end default character input string follow parse json consider error want option cjson_parsewithopts const char value const char return_parse_end cjson_bool require_null_terminated return_parse_end return pointer end json input string position error occur thereby replace cjson_geterrorptr thread safe way require_null_terminated set make error input string contain json want option give buff length cjson_parsewithlengthopts const char value size_t buffer_length const char return_parse_end cjson_bool require_null_terminated print json give tree cjson item print string cjson_print allocate string print json representation tree return fully responsible deallocating allocator usually free depend set cjson_inithooks cjson_print print whitespace format want print without format cjson_printunformatted rough idea big string cjson_printbuffered const cjson item int prebuffer cjson_bool fmt fmt boolean turn format whitespace prebuffer specify first buff size print cjson_print currently byte first buff size print space new buff allocate old get copy print continue dynamic buff allocation completely avoid cjson_printpreallocated cjson item char buff const int length const cjson_bool format take buff pointer print length length reach print fail return case success return note provide byte actually need cjson accurate estimate provide memory enough want parse follow json print let json print string alternatively cjson_add toobject helper function make live little easy parse parse json format check monitor support full resolution print diagnostic output note null check except cjson_parse cjson_getobjectitemcasesensitive check null input already null value propagate cjson_isnumber cjson_isstring return input null caveat character cjson support string contain character u0000 impossible current api string terminate character encode cjson support utf encode input case reject invalid utf input though propagate long input contain invalid utf output always valid utf standard cjson write ansi c89 c90 compiler library follow standard correct behavior guarantee note ansi therefore compile compiler compile compiler link however although compile compiler might work correct behavior guarantee float point number cjson officially support double ieee754 double precision float point number might still work bug consider invalid maximum length float point literal cjson support currently character deep nest array object cjson support array object nest deeply would stack overflow prevent cjson limit depth cjson_nesting_limit default change compile time thread safety general cjson thread safe however thread safe follow condition cjson_geterrorptr never return_parse_end parameter cjson_parsewithopts instead cjson_inithooks ever call cjson thread setlocale never call call cjson function return case sensitivity cjson originally create follow json standard make distinction uppercase lowercase letter want correct standard compliant behavior need casesensitive function available duplicate object member cjson support parse print json contain object multiple member name cjson_getobjectitemcasesensitive however always return first enjoy cjson dave gamble original author max bruckner alan wang current maintainer cjson contributor contributor
C C++;https://github.com/martinh/libconfuse;libconfuse travis status travis coverity status coverity scan introduction introduction documentation documentation origin reference origin reference introduction libconfuse configuration parser library write support section list value well feature single double quote string environment variable expansion function nest include statement value string integer float booleans section goal _the_ configuration parser library gazillion feature instead aim easy quick integrate please ensure versioned archive documentation api reference simple simple simple conf simple conf show simple version option cfgtest cfgtest test conf test conf show feature confuse include list function libconfuse employ gnu configure system list available option start unpack tarball tar confuse tar confuse configure help user follow command configure library usr local configure make sudo make sudo ldconfig see full installation instruction check github autogen generate configure script mean also need follow tool autoconf automake libtool gettext autopoint flex documentation also need follow tool doxygen xmlto optional step must explicitly directory doc make documentation origin reference libconfuse create martin hedenfalk release open source software term isc license previously call libcfg name change confuse similar library currently develop maintain github please issue tracker report bug feature request travis travis status coverity scan coverity status
C C++;https://github.com/jeaye/color_coded;color_coded semantic highlight vim color_coded vim plugin provide realtime fast tagless highlight objective libclang environmentally friendly lua bind viml exhaustive customization possibility unintrusive highlight self contain utilize self contain clang color_coded color_coded installation instal color_coded please read follow vim ship even late new enough support color_coded furthermore default macvim lua enable ensure valid macvim please follow get proper highlight also want xcode command line tool give appropriate system header ubuntu debian first require dependency lua must version version vim compile find version number llua5 correct version also need ensure gcc high try follow test ubuntu freebsd pcbsd test freebsd vundle pathogen installation test also compatible vundle add line vimrc restart vim plugininstall neobundle installation support automatically lazy load plugin since color_coded compile component need manually compile instal update unless vim package manager compilation work follow assume usage vundle see section ensure make properly various compatibility reason color_coded attempt know version clang may add time configuration process offer stability across multiple platform avoid officially support document another note color_coded reliably support luajit informatively luajit reliably support embed share usage color_coded instal compile automatically begin work next time start vim order color_coded know must compile _may_ need create describe require compiler option note color_coded assume sane default try allow immediate usage say non trivial case find need supply color_coded project color_coded search directory way root filesystem look color_coded color_coded_foo foo filetype cpp etc make possible home directory project directory specify project directory home directory also make possible provide different flag differen type etc also work subprojects different flag find sane default apply color_coded try hard highlight even error translation unit allow good highlight type highlight valid color_coded know everything project color_coded content content color_coded color_coded_foo simply line separate list compiler option color_coded color_coded color_coded put rest default detect color_coded automatically generate note simplicity permit color_coded say comment support option color_coded_enabled option control whether color_coded function invoke cctoggle command modify option achieve may also specify vimrc globally disable color_coded default color_coded_filetypes option control filetypes color_coded try compile default highlight many new highlight group color_coded add design follow libclang closely possible tie thing together wrapper group create allow sweep change clang group default map along vim normal group function macro number etc generic group clang group sample colorscheme color_coded ship sample color scheme demonstrate support extend group invoke colorscheme twilighted name may suggest colorscheme fork vim twilight theme appropriately pun see repo examine visit color twilighted vim note color_coded work colorscheme sample information support group see syntax color_coded vim clang command ccerror command output last compilation error message libclang highlight work properly may misconfigured color_coded may syntax error source doubt check first cctoggle command enable color_coded currently disable disable currently enable enable disable via color_coded_enabled option dependency compilation color_coded require gcc lua version vim compile usage color_coded require vim version 4p330 compile lua support lua troubleshoot faq type highlight become mess color_coded try compile cod type due vim work color_coded update highlight something move cursor make change etc type highlight finish update assume color_coded sufficient move cursor cause event way allow color_coded finish note hold event vim trigger stop type delay color_coded also hook apply highlight possible bit highlight highlight incorrectly yup believe almost certainly libclang bug sort maintain fork libclang would like report issue check highlight refresh new buff move cursor intentional first time open buff color_coded know compile properly want wait try figure color_coded always compile background event like move cursor change text poll update note however buff highlight leave buff come back synchronously apply previous highlight color_coded unavailable need compile color_coded need manually compile successfully see instruction color_coded update need recompile assume update work installation color_coded get error update require recompile color_coded change native api recompile follow exact take compile initially color_coded work neovim least color_coded support neovim however aim provide similar highlight specifically neovim stdarg find happen certain operate system require additional include path solution make sure path color_coded prefix isystem find path follow see issue detail color_coded try help assume show post_constants color_coded crash startup likely luajit embed well share library sure see turn anything information disable color_coded diff mode vimrc custom llvm clang setup may specify download_clang cmake depend platform may also need specify path llvm config binary llvm_config also allow different version clang llvm version information available require gvim may debian base system liblua dbg e315 ml_get invalid lnum cause bug vim work around vim least patch see detail get support feel free make issue github email catch irc freenode color_coded license color_coded mit open source license see license
C C++;https://github.com/awslabs/s2n;s2n c99 ssl protocol design simple small fast security priority release license apache license apache language grade github github join chat quickstart ubuntu fork s2n github follow command ubuntu quickstart osx platform osx simply want execute entire script tool like ninja osx osx amazonlinux2 dependancies codebuild bin install_al2_dependencies clone question question submit open issue s2n api usage something similar public chatroom available answer question otherwise think might find security impact issue please instead follow security notification process security issue notification s2n s2n apis design intuitive developer familiar widely posix apis s2n support block non block full duplex additionally lock mutexes within s2n detail s2n library s2n application develop see api s2n feature s2n implement sslv3 tls1 tls1 tls1 tls1 encryption s2n support bite bite aes cbc gcm mode chacha20 3des rc4 forward secrecy s2n support dhe ecdhe s2n also support server name indicator sni application layer protocol negotiation alpn online certificate status protocol ocsp extension sslv3 rc4 3des dhe disable default security reason difficult keep track encryption algorithm protocol best s2n feature simple api late default set preference prefer remain specific version backwards compatibility also support s2n safety mechanism internally s2n take systematic approach protection include several mechanism design improve safety small auditable base ignore test blank line comment s2n line s2n also structure write focus reviewability s2n subject review plan complete security evaluation s2n annual basis date external level review s2n include commercial security vendor s2n also share trust member broad cryptography security open source community issue discover always record s2n issue tracker static analysis fuzz test penetration test addition review s2n subject regular static analysis fuzz test penetration test several penetration test occur include commercial vendor unit test end end test s2n include positive negative unit test end end test case erase read s2n encrypt erase plaintext quickly possible decrypt buff erase read application memory protection s2n operate system feature protect swap disk appear core dump minimalist feature adoption s2n avoid implement rarely option extension well feature history trigger protocol level vulnerability support session renegotiation dtls compartmentalize random number generation security associate encryption algorithm depend upon secure random number generation s2n provide every thread separate random number generator public randomly generate may appear clear private remain secret approach lessen risk potential predictability weakness random number generation algorithm leak information across context modularized encryption s2n structure different encryption library may today s2n support openssl libressl boringssl apple common crypto framework perform underlie cryptographic operation time blind s2n include structure support blind time base side channel may leak sensitive s2n fail parse record handshake message s2n add randomize delay second granular nanosecond respond raise complexity real world time side channel attack factor least trillion table base state machine s2n simple table drive ssl state machine make difficult invalid order state arise safety s2n write make light standard library function wrap memory handle string handle serialization systematic boundary enforce check security issue notification discover potential security issue s2n ask notify aws security via vulnerability report please create public github issue package distribute s2n s2n part large multi user service may eligible pre notification future s2n release please contact s2n pre notification amazon com contribute s2n interest contribute s2n please see development language bind s2n see language bind language bind s2n aware
C C++;https://github.com/happy-sea-fox/sail;squirrel abstract image library miss fast easy image decode library human machine target audience feature image format get start faq sail format agnostic cross platform image decode library provide rich apis liner complex case custom source enable client load save static animate multi page image along meta icc profile sailboat target audience image viewer game developer anyone need load save image different image format need clean comprehensive api feature overview easy thread safe interface versatile apis junior advance deep diver technical diver input output memory custom stream load suffix path magic save pixel close possible source codec specific tune option like see format format meta support text comment exif icc profile access image property decode pixel probe access source image property add update image codecs ease demonstrate intel intel best mime icon computer industry smile day intel demonstrate advantage technology speed decode image help ksquirrel libs faq old sail predecessor sail feature provide image edit capability filter distortion scale etc color space conversion function color management function apply icc profile etc exif rotation support image format image format operation dependency libpng apng patch libavif giflib libjpeg turbo jasper libpng resvg libtiff libwebp see full list format work add image format ongoing benchmark time load output default pixel without explicit conversion measure see benchmark benchmark prefer installation method window vcpkg macos brew linux native package available vcpkg see apis overview sail provide level apis depend need let quick look junior level pretty easy smile see also faq faq program language program language c11 bind competitor wic window difference image decode library easily extensible new image format plugins easy api provide expect business entity image palette pixel etc access source pixel support codecs access image property decode pixel probe development status sail ready every day however still heavy development api change time break binary source compatibility consider open github feature request issue report help pull request etc highly welcome question issue open github prefer way communicate solve problem see faq faq architecture overview sail write pure c11 third party library except codecs also provide bind sail codecs sail codecs deep level set standalone dynamically load codecs linux dll window implement actual decode encode capability end user never work codecs directly always abstract high level apis libsail every codec accompany call codec info description plain text describe codec actually pixel format load output compression type support default sail load codecs demand preload sail_init_with_flags sail_flag_preload_codecs libsail common libsail common hold common type image pixel format abstraction etc small set function share sail codecs high level apis libsail libsail libsail feature rich high level api provide comprehensive lightweight interface decode encode image end user implement application always work libsail libsail manip libsail manip collection image manipulation function conversion function pixel format another libsail libsail bind libsail end user implement application may choose libsail libsail libsail always recommend much simple application see philosophy philosophy sail modularization simplicity image codecs architectured standalone dynamically load future hypothetical improvement implement separate client library user always able choose link support like project please consider star repository author dmitry baryshev license release mit license
C C++;https://github.com/cpp-taskflow/cpp-taskflow;taskflow license taskflow license mit license license completely free distribute work derive taskflow tsung wei huang github release github issue github insight github pull request graphviz project website cppcon20 talk contributor totalgee nsf uiuc csl uofu documentation release note cookbook reference payme email mailto twh760812 gmail com cpp conference tpds21
C C++;https://github.com/xelatihy/yocto-gl;yocto tiny library orient physically base graphic yocto collection small library physically base graphic algorithm release mit license yocto write deliberately orient style ease development yocto split small library make navigation easy see header documentation yocto yocto_math fix size vector matrix rigid frame transform yocto yocto_color color conversion color adjustment tone map function color grade color map color space yocto yocto_geometry ray bound box geometry function ray primitive intersection point primitive overlap yocto yocto_noise perlin noise yocto yocto_sampling random number generation generation point direction monte carlo utility yocto yocto_shading evaluation sample fresnel function bsdf lob transmittance lob phase function yocto yocto_image cpp simple image type image resize tonemapping color correction procedural image procedural sun sky yocto yocto_shape cpp simple shape structure utility manipulate triangle mesh quad mesh line set computation normal tangent linear catmull clark subdivision procedural shape generation ray intersection close point query yocto yocto_scene cpp scene representation property evaluation yocto yocto_bvh cpp ray intersection close point query triangle mesh quad mesh line set instance scene level bound volume hierarchy yocto yocto_trace cpp path trace surface hair support area environment illumination microfacet ggx subsurface scatter multiple importance sample yocto yocto_sceneio cpp image shape scene serialization yocto yocto_modelio cpp low level parse write ply stl format yocto yocto_pbrtio cpp low level parse write pbrt format yocto yocto_cli print utility command line parse yocto yocto_parallel concurrency utility deprecate see yocto action follow application write test library apps ytonemap cpp image conversion view apps ycolorgrade cpp image color grade apps yconvert cpp scene conversion apps yconverts cpp shape conversion apps ytrace cpp offline interactive scene render apps ycutrace cpp offline interactive scene render cuda apps ytrace cpp interactive scene view test image render path tracer image include project material matte plastic metal glass subsurface normal map image features1 jpg shape procedural shape catmull clark subdivision hair displacement map image features2 jpg image render yocto path tracer disney animation studio image island jpg design consideration yocto follow orient program make explicit store simple structs access free function directly public make attempt encapsulation since make yocto easy extend quick explicit flow easy write parallel since yocto mainly research teach explicit hackable easy understand nearly object yocto value semantic mean everything trivially copy serialize need memory management drawback potentially introduce spurious copy benefit ensure memory corruption occur turn major issue novice user even small library like term style prefer functional approach rather object orient favor free function class method function define yocto namespace library call others trivially template yocto reason many refactoring template heavy template point yocto template readability future increase template math keep many apis explicitly type error handle either return status object interface boolean flag error string internally exception external library otherwise exception moment exception report programmer error namely precondition post condition violate function lime standard library license library release mit license include various external dependency distribution thir license compatible choose compilation library require compiler know compile osx xcode window msvc linux gcc clang application cmake mkdir cmake cmake yocto require dependency include distribution need instal separately yocto optionally support opengl demo opengl support enable define cmake option yocto_opengl opengl dependency include repo yocto optionally support intel embree ray cast see main cmake link embree support enable define cmake option yocto_embree embree need instal separately yocto optionally support intel open image denoise denoising see main cmake link open image denoise support enable define cmake option yocto_denoise oidn need instal separately
C C++;https://github.com/szcom/rnnlib;origin original rnnlib host fork create repeat online handwrite prediction synthesis report late alex grave classic lstm show rnn structure present sequential input rnnlib require follow compiler fortran openblas cmake libcurl automake libtool texinfo addition follow package need auxiliary script utils directory scipy pylab pil package need create manipulate netcdf experiment directory scientificpython scipy rnnlib cmake dcmake_build_type release cmake cmake create binary rnnlib rnnsynth gradient_check current directory recommend add directory contain rnnlib binary path otherwise tool utility directory work project integrate development environment generate cmake cmake help get list support ides handwrite synthesis step online_prediction step prepare eventually plot synthesis online handwrite start register pen stroke text lables stroke find unzip linestrokes ascii online_prediction format require preprocessing convert pen coordinate offset previous point merge single netcdf format prepare build_netcdf split validation set script necessary preprocessing include normalisation input make correspond online online_validation rnnlib point input sequence online consist number offset previous point binary end stroke feature gradient check gain confidence fine gradient check gradient_check autosave false check_synth2 config step first without weight regularization repeat adaptive weight noise mdl rnnlib term best record step mdl begin slow convergence rate step rnnlib verbose false synth1d config synth1d config 1st step configuration define topology lstm hide layer cell gaussian mixture output layer mixture character warp window layer somewhere epoch find optimal solution early stop improvement epoch early take day intel sandybridge cpu normally stop long loss start rise consequent epoch best solution find store synth1d best_loss save step best loss error step expect around nats improve weight regularisation loss error unlike step therefore must patient declare early stop wait epoch loss bad best far rnnlib mdl regulariser step command line follow rnnlib mdl true mdloptimiser rmsprop from_step1 best_loss save synthesis handwrite synthesis rnnsynth binary parameter obtain step rnnsynth from_step2 best_loss save character sequence give stdin output write stdout output sequence input point offset end stroke flag plot rnnsynth output sequence offset end stroke flag visualise show_pen octave script octave show_pen tmp trace1 tmp trace1 contain stdout rnnsynth rnnlib configuration configuration option exlained since thing add lstm1d hiddentype layer type optimise lstm layer input dimension rmsprop optimizer type mixture number gaussians output layer charwindowsize number gaussians character window layer skipconnections true false whether add skip connection default true contact please create github issue discus problem
C C++;https://github.com/intel/parallelstl;onedpl part oneapi dpc library onedpl oneapi dpc library onedpl work intel oneapi dpc compiler provide high productivity apis developer minimize parallel dpc program effort across device high performance parallel application prerequisite intel oneapi base toolkit base kit onedpl refer specific system information release information visit late release license onedpl license apache license version llvm refer license license license txt full license text copyright notice security see intel security information report potential security issue vulnerability also view security policy security contribute see detail documentation see full documentation set sample find onedpl sample onedpl page support contribution please report issue suggestion via github intel intel logo trademark intel corporation subsidiary country name brand may claim property others
C C++;https://github.com/hjiang/jsonxx;json introduction json light weight json parser writer reader write json also convert json document lossless xml document contributor make substantial contribution please add link another json parser perhaps web service client usually write dynamic language day none exist json parser fit need well write another project goal json efficient memory speed third party dependency json depend standard library cross platform robust small convenient api time need call function function template easy integrate json source header compile source link program able construct document dynamically json writer write document json format contributor sinced add functionality xml writer convert document jsonx format see detail xml writer convert document jxml format see detail xml writer convert document jxmlex format see detail xml writer convert document tag xml format see detail compiler version need modern compiler old compiler please try legacy configuration strict permissive parse jsonxx parse json document strict permissive mode jsonxx setting parser set strict jsonxx parser accept fully conformant json document jsonxx setting parser set permissive jsonxx parser accept fully conformant json document end comma array object array single quote string hello world style comment width height picture detail default value permissive jsonxx setting unquotedkeys set enable jsonxx parser accept unquoted key name world default value disable assertion jsonxx internally jsonxx_assert macro work debug release mode set jsonxx setting assertion value disable disable assertion default value enable usage follow snippet unit test quite self descriptive namespace std namespace jsonxx string teststr foo bar false person name gwb age abcd parse string stream object assert parse teststr validation check json type value well assert get foo assert bar assert person assert get person age assert get person old assert get person get old false assert assert get get assert get get abcd assert get get hello hello assert cout json endl json output cout xml jsonx endl json xml conversion jsonx subtype cout xml jxml endl json xml conversion jxml subtype cout xml jxmlex endl json xml conversion jxmlex subtype generate json document dynamically namespace std namespace jsonxx array hello world 95f object key value object key1 value key2 key3 cout json endl custom json comment style permissive parse enable
C C++;https://github.com/zorgnax/libtap;name libtap write test synopsis include int main plan int bronze silver gold bronze silver bronze silver bronze silver quite gold gold gold gold cmp_ok silver gold silver gold like platinum inum platinum match inum done_testing bronze silver quite fail test quite synopsis line gold gold platinum match inum look like fail test description tap easy read easy write way create test software library create function generate program implement macro include line info automatically make format message test optional mostly base test perl module unix system make make detail installation instruction window see function plan test plan no_plan plan skip_all plan skip_all fmt start series test know many test put number number test expect know many test plan no_plan call function pas number test message similar follow appear output pas skip_all whole test skip test test fmt specify test test statement return true false value may optionally pas format string describe test reader_new mouse men create new reader reader_go_to_page turn page page page turn right print create new reader turn page page turn right failure diagnostic message print page turn right fail test page turn right reader line get expect get expect fmt get unexpected get unexpected fmt test string get expect reverse print fail test line get expect cmp_ok cmp_ok fmt compare ints binary operator require lvalue nice since provide good error message equivalent cmp_ok print fail test cmpok line cmp_mem get expect cmp_mem get expect fmt test first byte memory get expect null pointer get expect handle either null test fail need ensure large char foo char bar cmp_mem print fail test cmp_mem line difference start offset get 0x66 expect 0x62 like get expect like get expect fmt unlike get unexpected unlike get unexpected fmt test string get match expect extend posix regex unlike reverse macro equivalent skip window like strange match regex print match regex pas pas fmt fail fail fmt speciy test succeed fail statement long fit argument give test dies_ok dies_ok fmt lives_ok lives_ok fmt test whether give cause program exit get pas macro test fork process succeed execute parent process test thing like pas function null pointer make sure dereference crash dies_ok abort abort close program dies_ok int divide crash lives_ok pow nothing wrong take window macro equivalent skip done_testing summarize test occur exit main function plan print number test also print diagnostic message many failure look like fail test plan test successful return test fail return pas miss test return diag fmt print message tap output stdout line preceeded know diagnostic message diag diag nto describe nsomething print diag describe something function return int like diag doh skip test skip test fmt end_skip skip series test test true may give reason skip possibly skip test must occur skip end_skip macro skip true end_skip print skip skip todo todo fmt end_todo specify series test expect fail yet implement todo end_todo print todo fail todo test todo line bail_out bail_out fmt immediately stop test bail_out print bail exit
C C++;https://github.com/raysan5/raylib;raylib simple easy library enjoy videogames program raylib highly inspire borland bgi graphic lib xna framework specially well suit prototyping tool graphical application embed system education note adventurer raylib program library enjoy videogames program fancy interface visual helper debug button cod pure spartan programmer way ready jump github github release github github commit since tag package discord subreddit youtube twitch twitter window linux feature external dependency require library bundle multiple platform support window linux macos rpi android html5 write plain c99 pascalcase camelcase notation hardware accelerate opengl unique opengl abstraction layer usable standalone module multiple font format support ttf xna font angelcode font multiple texture format support include compress format dxt etc astc full support include shape billboard heightmaps flexible material system support classic map pbr map animate support skeletal bone animation iqm shaders support include postprocessing shaders powerful math module vector matrix quaternion operation audio load play stream support wav ogg mp3 flac mod stereo render support configurable hmd device parameter huge collection bind program free open source basic basic raylib create window draw text congrats create first window middle screen check live web installation raylib binary release window linux macos android html5 available github release raylib also available via multiple package multiple distribution instal raylib multiple platform raylib contain detail instruction usage multiple platform work work work gnu work chrome work work raspberry work work web work anywhere note wiki open edit find issue raylib target platform feel free edit wiki open issue relate setup raylib multiple ides raylib develop window platform mingw compiler ides multiple platform project contain several ready project template raylib multiple ides note lot ides support provide template could require review please find issue template think could improve feel free send open relate issue doc raylib design main reference standard api documentation contain function available library short description input parameter value name intuitive enough understand function work additional documentation raylib design find raylib github wiki relevant link raylib raylib raylib library raylib raylib game contact raylib present several raylib community grow everyday raylib enjoy feel free join active discord webpage discord twitter twitch reddit patreon youtube license raylib license unmodified zlib libpng license osi certify bsd like license allow static link close source software check license license detail raylib internally library window graphic input management also support different fileformats load library embed available directory check raylib dependency raylib wiki detail
C C++;https://github.com/mosra/magnum;magnum lightweight modular graphic middleware game visualization look open source library give graphic abstraction platform independence major desktop mobile web platform want convenience utility around yet stay small powerful give flexibility free even commercial purpose join chat coverage hunter mit project homepage documentation github project page beauty simplicity among magnum essential utf aware filesystem console abstraction feature pack vector math library slim wrapper opengl webgl family apis top opt see core battery include shaders primitive fast prototyping algorithm debug automatic test asset management integration popular windowing toolkits library everything fit together still choice list extra screw glue always way thing enjoy freedom choice integrate asset loader texture compressor font format math library feel need various plugins view extension wonder magnum good fit project prepare case help decide support platform linux embed linux window msvc clang mingw window store phone macos android web graphic apis opengl core profile functionality modern extension opengl extension match desktop opengl functionality webgl extension match desktop opengl functionality see status detail per platform status new curious add improve recently check page documentation get start best way get start read thorough start project also complete provide package many platform include window linux macos various tutorial complete feature explain aspect library apart various magnum functionality available single header include project ready buildsystem wrangle need relate project engine keep small possible dependency additional functionality often depend external library provide separate repository corrade main magnum dependency multiplatform utility library magnum bootstrap bootstrap project many case help get time magnum plugins various importer plugins image font audio format magnum integration integration various external math physic get magnum engine usage vary simple hello world like advance application viewer complex see magnum extra playground test new apis specialize stuff necessarily need part main magnum repository mutually exclusive functionality magnum bind bind language magnum single various functionality magnum available easy integrate fast compile single header library outside project also lot community contribution check contact support want contribute magnum spot bug need feature awesome idea get copy source github start right away already mention guide also guide cod style best follow keep library consistent maintainable possible project homepage documentation github topic gitlab gitter community chat mail info magnum graphic google group mail list magnum engine googlegroups com twitter hashtag see also magnum project contact support information credit see credit credit detail big thank everyone involve license magnum license mit expat license see copy copy detail
C C++;https://github.com/zeromq/libzmq;zeromq coverage welcome zeromq lightweight message kernel library extend standard socket interface feature traditionally provide specialise message middleware product zeromq socket provide abstraction asynchronous message queue multiple message pattern message filter subscription seamless access multiple transport protocol support platform libzmq mainly write optional fragment configuration either autotools cmake employ see list platform libzmq successfully compile support platform primary version architecture compiler version system remark android ndk r20 arm arm64 x86 x86_64 llvm see ndk autotools draft ubuntu lts trusty amd64 clang autotools stable extra gssapi pgm norm mode ubuntu lts trusty amd64 gcc autotools stable draft extra gssapi pgm norm tipc ipv6 also poller poll poller select also valgrind address sanitizer execution ubuntu lts trusty amd64 gcc cmake stable window server x86 visual studio cmake draft window server x86 visual studio sp1 cmake draft window server x86 visual studio update cmake draft window server x86 amd64 visual studio update cmake draft stable x86 release also poller epoll window server x86 visual studio update cmake draft window server x86 visual studio cmake draft cygwin window server amd64 gcc cmake draft msys2 window server amd64 gcc cmake draft mac amd64 xcode apple llvm autotools stable draft mac amd64 xcode apple llvm cmake draft note platform regularly update service provider information might get date without change side libzmq appveyor refer regard platform update travis refer regard platform update support platform secondary version architecture compiler version system remark centos x86 amd64 autotools centos amd64 autotools debian x86 amd64 autotools debian arm64 x86 amd64 autotools fedora arm64 arm32 amd64 autotools fedora arm64 arm32 amd64 autotools fedora rawhide arm64 arm32 amd64 autotools redhat enterprise linux amd64 ppc64 autotools suse linux enterprise sp4 arm64 amd64 ppc64 s390x autotools suse linux enterprise amd64 autotools xubuntu x86 amd64 autotools xubuntu x86 amd64 autotools xubuntu x86 amd64 autotools xubuntu x86 amd64 autotools xubuntu x86 amd64 autotools support platform know active user time write explicit report available please report experience open add entry move entry section last report please name either sha1 case unreleased version version number case release version version architecture compiler version system last report remark solaris x86 amd64 sparc gcc cmake dragonfly bsd amd64 gcc autotools git 72854e63 ibm ppc64 gcc autotools git 25320a3 qnx x86_64 gcc cmake window arm64 visual studio cmake git 2375ca8b window arm64 clang cmake git 2375ca8b support platform without know active user note list incomplete inaccurate still need work version architecture compiler version system remark linux distribution x86 amd64 gcc clang icc autotools cmake sunos solaris x86 amd64 sunpro autotools cmake gnu kfreebsd autotools cmake freebsd autotools cmake netbsd autotools cmake openbsd autotools cmake dragonfly bsd amd64 gcc autotools cmake autotools cmake gnu hurd autotools vxworks window window uwp openvms unsupported platform version architecture compiler version remark qnx gcc see support add user contribute upstream detail see supportedplatforms platform linux mac prebuilt binary package supply zeromq organization installation platform need binary installation binary package linux linux user pre binary package available distribution note draft apis change time without warn pick stable avoid enable late release deb release release rpm release release bleed edge package deb release release rpm release release debian late release draft apis echo deb etc apt source list wget sudo apt key add apt get libzmq3 dev osx osx user package available via brew brew zeromq source source see include distribution android source see readme android readme android directory resource extensive documentation provide distribution refer doc zmq html man zmq instal libzmq system website development mail list zeromq dev list zeromq org announcement mail list zeromq announce list zeromq org git repository zeromq developer also find irc channel zeromq libera chat irc libera chat license project license specify copy copy less libzmq free software redistribute modify term gnu less general public license lgpl publish free software foundation either version license option late version special exception contributor give permission link library independent module produce executable regardless license term independent module copy distribute executable term choice provide also meet link independent module term condition license module independent module module derive base library modify library must extend exception version library libzmq distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu less general public license detail contribute project collective construction process contribution
C C++;https://github.com/vincentlaucsb/csv-parser;vince csv parser motivation motivation documentation documentation integration integration version version single header single header cmake instruction cmake instruction feature feature read arbitrarily large iterators read arbitrarily large iterators memory map stream memory map stream index column name index column name numeric conversion numeric conversion specify csv format specify csv format trim whitespace trim whitespace handle variable number column handle variable number column set column name set column name convert json convert json parse memory string parse memory string write csv write csv contribute contribute motivation plenty csv parser wild hard time find want inspire csv module want library simple intuitive syntax furthermore want support special case calculate statistic large thus library create follow goal mind performance memory requirement deluge large datasets available performant csv parser necessity overlap thread memory map efficient structure parser quickly tackle large csv furthermore parser minimal memory footprint handle large ram show number computer intel core 8550u 80ghz toshiba xg5 ssd parser read second mbps craigslist vehicle second mbps 24gb car accident second mbps robust yet flexible rfc beyond csv parser much fancy string splitter parse follow rfc however reality know rfc suggestion many flavor csv tab delimit thus library automatic delimiter guess ability ignore comment lead row elsewhere ability handle row different length default row variable length silently ignore although may elect keep throw error encode csv parser encode agnostic handle ansi utf encode try decode utf except detect strip utf byte order mark well test csv parser extensive test suite check memory safety valgrind still manage find bug hesitate report documentation addition feature feature fully fledge online contain detail interest feature instruction common case integration library develop microsoft visual studio compatible clang require library aside standard library contain include version recommend minimum version require library make extensive string view martin moene string view std string_view available single header library available single hpp single_include csv hpp single_include csv hpp cmake instruction include another cmake project simply clone repo project directory add follow cmakelists txt feature read arbitrarily large iterators library easily stream large without read entirety memory style old fashion style loop memory map stream default pas path string constructor csvreader cause memory map general option performant however std ifstream may also well memory source via std stringstream note currently csv guess work memory map csv dialect must manually define source index column name retrieve value column name string cheap constant time operation numeric conversion csv lot numeric value also parser lazily convert proper type type check perform conversion prevent undefined behavior integer overflow negative number blindly convert unsigned integer type get get get capable parse number write scientific notation note conversion float point type currently check loss precision convert json serialize individual row json object key column name json array contain column name output json contain properly escape string minimal whitespace quote numeric value json fragment assemble large json document exercise leave user specify csv format although csv parser decent guess mechanism case preferrable specify exact parameter trim whitespace parser efficiently trim lead trail whitespace course make sure include intend delimiter newlines list character trim handle variable number column sometimes row csv length whether intentional library handle case set column name csv column name specify parse memory string write csv pas arbitrary type delimwriter define conversion function type std string contribute bug report feature request always welcome feel free leave note issue section
C C++;https://github.com/rtv/Stage;stage simulator stage readme contain introduction license citation information stage robotics standalone simulator also library simulation environment date documentation find release note see release txt installation note see txt copyright richard vaughan contributor part player project license program free software redistribute modify term gnu general public license version publish free software foundation program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail copy license include sourcecode copy copy redistribution permit term license introduction stage robot simulator provide virtual world populate mobile robot sensor along various object robot sense manipulate way stage stage program standalone robot simulation program load robot control program library provide stage plugin player libstageplugin provide population virtual robot popular player robot interface system write simulator libstage library make easy create customize stage simulation inside program stage provide several sensor actuator include sonar infrared ranger scan laser rangefinder color blob track fiducial track bumper grippers mobile robot base odometric global localization design stage design multi agent system mind provide fairly simple computationally cheap lot device rather attempt emulate device great fidelity design intend useful compromise conventional high fidelity robot simulation minimal simulation describe jakobi grid world simulation common artificial life research intend stage realistic enough enable user move controller stage robot real robot still fast enough simulate large population also intend stage comprehensible undergraduate student yet sophisticate enough professional reseachers player also contain several useful virtual device include sensor pre process sensor integration algorithm help rapidly powerful robot controller easy stage citation stage work would appreciate citation time write suitable reference either richard vaughan massively multiple robot simulation stage swarm intelligence springer player stage brian gerkey richard vaughan andrew howard player stage project tool multi robot distribute sensor system proceed 11th international conference advance robotics page coimbra portugal june icar please help keep track correctly name player stage component player call player player stage together refer player stage system player stage stage without player call stage stage library create custom simulator call libstage stage library player ode base simulation backend gazebo call player gazebo gazebo without player gazebo software part player project support fund stage provide part darpa usa nasa usa nserc canada drdc suffield canada nsf usa simon fraser university canada name name player stage inspire line world stage men woman merely player like william shakespeare reference nick jakobi evolutionary robotics radical envelope noise hypothesis adaptive behavior volume issue stuart wilson knowledge growth artificial animal proceed first international conference genetic agorithms application hillsdale new jersey
C C++;https://github.com/adishavit/argh;logo asset argh_logo_small png frustration free command line process try many different command line process library none work bring whole extend family relate unrelated external dependency yes look boost require quirky syntax verbose setup sacrifice simplicity generation cute usage message validation many come dominate main yet others multiple plaforms even test trivial usage crash system argh write highly sophisticate command line tool boost program_options kind might give many advance option however need get quickly effectively minimal fuss give single header argh try get much simple video argument argument adi shavit core argument argument already know adi shavit cppcon philosophy contrary many alternative argh take minimalist laissez faire approach suitable fuss prototyping follow rule api minimalistic expressive getters binder operator easy iteration range pay conversion type variable happen via std istream user side parse phase exception throw failure liberal bsd license single header non std dependency argh care many precede option flag option support responsibility syntax validation command line valid necessarily unique combination positional parameter flag option automatically produce usage message tutorial create parser fact even drop argc also work positional argument access integer index boolean flag argument access string name dash trim require flag several alternative list beyond bool std string access show also access argument value std istream useful type conversion std istream positional argument access integer index also check particular positional arg give like also set default value positional argument pas second argument position argument give stream conversion fail default value similarly parameter access name string list string literal show std istream str get param value std string stream value variable suitable type standard stream state indicate failure include argument give multiple name first value find return positional argument iterate upon directly range similarly cmdl size return count positional argument positional argument flag parameter accessible range default option assume boolean flag want several way specify option parameter associate value specify prefer_param_for_unreg_option mode interpret pre register expect parameter name add_param call parse may also batch pre register multiple option parameter add_params _unregistered_ option default boolean flag since pre registration parse might well ctor space around within option call app automatically interpret name parameter value pair tip default argument form space dash answer parse disable specify no_split_on_equalsign mode specify single_dash_is_multiflag mode _compound arguments_ split single hyphen argument multiple single character flag common various posix tool single_dash_is_multiflag still pre register last character param value pre register param myapp xvf parse boolean flag param parse parameter value string may contain space config folder space config ini prefer str instead avoid default automatic whitespace input stream tokenization cout cmdl config str terminology command line compose type args positional args free stand order value config json option args begin negative number identify kind option flag boolean option appear true false verbose parameter name value follow non option value gamma thus command line always break combination positional args flag parameter api summary parse parse command line either parse method parser parse argc argv mode short form ctor directly argh parser argc argv mode short form even require argc default mode parser argv special parse mode extra flexibility add specify parse mode no_split_on_equalsign default option form parse parameter associate value set mode break prefer_flag_for_unreg_option split myapp config json light flag config json positional arg default mode prefer_param_for_unreg_option interpret myapp gamma gamma parameter value single_dash_is_multiflag split option single dash separate boolean flag letter _compound arguments_ mode xvf parse separate flag argument access bracket operator access flag positional args operator index access position arg string index assert cmdl argv app name operator string access boolean flag name cmdl make_verbose operator access boolean flag multiple name cmdl verbose make_verbose parenthesis operator get std istream stream value parameter positional args operator index access position arg istream index cmdl my_app_name operator string access parameter value name cmdl scale scale_factor operator access parameter value multiple name cmdl scale scale_factor operator index operator string list stream default value arg appear command line cmdl scale scale_factor stream happen user side conversion failure check str method get parameter value string cmdl name str method parser add_param parser add_params parser constructor optionally pre register parameter name prefer_flag_for_unreg_option mode parser parser pos_args parser flag parser params access iterate arg container directly find argh copy argh somewhere project directory include repository submodule cmake find argh cmake provide cmakelists txt generate target test demo application target argh system wide make know cmake control generation test target option build_tests build_examples argh alongside license readme instal test demo add argh cmake project package export argh interface library target argh_include_dir variable make argh know compiler follow method make location argh know compiler link precompiled library even target_link_libraries buck system also support test take argh submodule visible target argh colophon feedback find argh useful tweet let know find lack please post
C C++;https://github.com/urho3d/Urho3D;urho3d urho3d coverity scan urho3d free lightweight cross platform game engine implement release mit license greatly inspire ogre horde3d main website license license mit license see detail contribute make pull request please read contribution cod page documentation credit urho3d greatly inspire ogre horde3d additional inspiration research rectangle pack jukka jylanki clb tangent generation terathon fast minimum storage ray triangle intersection moller trumbore linear speed vertex cache optimisation tom forsyth software rasterization triangle base chris hecker perspective texture map series game developer magazine physic glenn fiedler euler angle formula david eberly red black tree julienne walker comparison several sort algorithm juha nieminen urho3d follow third party library angelscript wip boost angelscript generic bind box2d wip bullet civetweb freetype glew slikenet libcpuid lua luajit lz4 mojoshader mustache nanodbc open asset import library pugixml rapidjson recast detour sdl sqlite stanhull stb_image stb_image_write stb_rect_pack stb_vorbis 13b tolua defunct webp etcpack tracy dxt pvrtc decompression base squish library oolong engine jack mushroom realxtend project ninja terrain water smoke flare status bar texture ogre bluehighway font larabie font anonymous pro font mark simonson ninjasnowwar sound veli pekka tatila pbr texture substance share ibl texture hdrlab sibl archive dieselpunk moto allexandr007 mutant kachujin mixamo license copyright information include asset necessary asset include shaders urho3d author license similarly engine documentation urho3d class sparsely document doxygen notation generate documentation doc subdirectory open doxyfile doc subdirectory doxywizard click doxygen tab get doxygen graphviz see section documentation automate documentation generation part process documentation also available online documentation urho3d documentation urho3d external library replace head specific release version link obtain documentation pertinent specify release alternatively document switcher documentation website history change history available online
C C++;https://github.com/google/tcmalloc;tcmalloc repository contain tcmalloc tcmalloc google customize malloc operator new memory allocation within tcmalloc fast multi thread malloc tcmalloc official system tcmalloc tcmalloc platform guide doc platform contain information platform support tcmalloc documentation user tcmalloc consult follow documentation resource tcmalloc quickstart doc quickstart cover instal test tcmalloc include incorporate within codebase tcmalloc overview doc overview cover basic architecture tcmalloc may affect configuration choice tcmalloc reference doc reference cover tcmalloc api endpoint advance usage tcmalloc may find follow documentation useful tcmalloc tune guide doc tune cover configuration choice depth also illustrate way customize tcmalloc also cover important operate system level property improve tcmalloc performance tcmalloc design doc doc design cover tcmalloc work underneath hood certain design choice make developer need level detail tcmalloc compatibility guide doc compatibility document expectation apis license tcmalloc library license term apache license see license information disclaimer officially support google product
C C++;https://github.com/libnonius/nonius;nonius nonius nonius open source framework benchmarking small snippet heavily inspire criterion similar haskell base tool measure time take perform statistical analysis measurement library header come single header drop somewhere include grab header release page criterion release
C C++;https://github.com/jeremyong/klein;license coverity codacy project description need follow quickly _really_ quickly even project point onto line line plan point plan measure distance angle point line plan rotate translate point line plan perform smooth rigid body transform interpolate smoothly construct line point plan point plan line point intersect plan form line intersect plan line form point klein library klein aka projective geometric algebra design application demand high throughput animation library kinematic solver etc contrast library klein attempt generalize metric dimensionality space exchange loss generality klein implement algebraic operation full weight sse stream simd extension maximum throughput requirement machine processor support sse3 late steam hardware survey report market penetration compliant compiler test gcc clang visual studio optional sse4 support usage option klein codebase first simply copy content public folder somewhere include path alternatively include entire project source tree cmake add_subdirectory klein link klein klein interface target single header include via include point create plan point line ideal line bivectors motor direction operation please refer project date documentation motivation pga fully streamline traditionally quaternion dual quaternion single algebra normally onus user perform appropriate cast ensure sign memory layout account type unify within geometric algebra operation apply quaternion dual quaternion rotor motor plan point line make sense surprise amount uniformity algebra enable efficient simple api reduce size performance consideration know good way vectorize computation general arrange soa layout avoid unnecessary cross lane arithmetic unnecessary shuffle pga unique give pga multivector natural decomposition block float point quantity even sub algebra isomorphic space dual quaternion also know _motor algebra_ geometric product densely pack implement efficiently sse reference klein deeply indebted several member community work beyond work cite author stand shoulder giant felix _klein_ sophus lie arthur cayley william rowan hamilton julius plucker william kingdon clifford among others gunn charles course note geometric algebra computer graphic siggraph arxiv steven keninck charles gunn siggraph geometric algebra course youtube leo dorst daniel fontijne stephen mann geometric algebra computer science burlington morgan kaufmann publisher inc
C C++;https://github.com/vstakhov/libucl;libucl table content generate introduction introduction basic structure basic structure improvement json notation improvement json notation general syntax sugar general syntax sugar automatic array creation automatic array creation name key hierarchy name key hierarchy convenient number booleans convenient number booleans general improvement general improvement comment comment macro support macro support variable support variable support multiline string multiline string single quote string single quote string emitter emitter validation validation performance performance conclusion conclusion introduction document describe main feature principle configuration language call ucl universal configuration language look libucl api documentation find page doc api basic structure ucl heavily infuse nginx configuration convenient configuration system however ucl fully compatible json format able parse json write configuration follow way nginx like json improvement json notation various thing make ucl configuration convenient edit strict json general syntax sugar brace necessary enclose top object automatically treat object equal requirement quote string key moreover may replace even skip object equal comma mess safely place comma semicolon last element array object automatic array creation non unique key object allow automatically convert array internally convert name key hierarchy ucl accept name key organize object hierarchy internally process convert follow object plain definition may complex contain single level nest object present convenient number booleans number suffix specify standard multiplier kkmmgg standard base multiplier translate kkmmgg power multiplier 1kb translate min time multiplier time value translate float number second 10min translate 10ms translate hexadecimal integer prefix key 0xff however float point value decimal base booleans specify true yes false still possible treat number booleans string enclose double quote general improvement comment ucl support different style comment single line multiline multiline comment may nest macro support ucl support external macro multiline single line moreover macro accept optional list argument brace argument ucl object parse pas macro option ucl also provide convenient include macro load content another current ucl object macro accept either path url ucl url support provide either libcurl libfetch include include macro support set option try default false option true ucl treat error load non fatal absent stop parse top level document sign default false option true ucl load check signature path name sig trust public key provide ucl api parser create configuration parse glob default false option true ucl treat filename glob pattern load match specify pattern normally format pattern define glob manual page operate system option meaningless url include url default true allow url include path default empty ucl_array directory search include search end first match unless glob true match include prefix default false put include content inside object instead load root key provide automatically generate base basename key default key load content include key already exist must correct type target default object specify prefix key object array priority default specify priority include see duplicate default append specify policy duplicate resolve append default strategy new object high priority replace old new object priority ignore completely duplicate object priority multi value key implicit array merge object array new key merge inside plain object implicit array form regardless priority error create error duplicate key stop parse rewrite always rewrite old value new ignore priority priority ucl parser manage policy object rewrite include follow object priority form implicit array new object big priority overwrite old new object low priority ignore default priority top level object set low priority currently define priority include big priority rewrite key object low priority specify policy priority top level object change priority macro option take new priority variable support ucl support variable input variable register user ucl parser present follow form variable variable ucl currently support nest variable escape variable could double dollar sign variable convert variable variable convert variable however valid variable find string expansion perform thus remain unchanged may subject change future libucl release multiline string ucl handle multiline string well single line perl like notation object key interpret follow string text nsplitted nlines rule syntax multiline terminator must start symbol must consist capital letter eof eof work terminator must end single newline character space allow terminator newline character finish multiline string need include terminator string newline follow newline space character allow well initial final newlines insert string still specify newlines begin end value single quote string possible single quote string simplify escape rule value pas single quote string escape exception single character character newline character character ignore emitter ucl object serialize support format json canonic json notation space indent structure compact json compact json notation without space newlines configuration nginx like notation yaml yaml inlined notation messagepack messagepack binary format validation ucl allow validation object schema json json schema ucl support full set json schema exception remote reference feature unlikely useful configuration object course schema definition ucl format instead json simplify schema write moreover since ucl support multiple value key object possible specify generic integer constraint maxvalues minvalues define limit value count single key ucl currently absolutely strict validation schema therefore ucl user supply valid schema define json schema draft ensure input object validate properly performance ucl parser emitter fast enough well number get 19mb consist line json obtain via check jansson library perform json parse emit compare ucl far ucl seem significantly fast jansson parse slightly fast emit moreover ucl compile optimization perform significantly fast benchmark make check libucl top directory conclusion ucl clear design convenient read write time compatible json language therefore simple json parser macro logic provide ability extend configuration language include lua comment allow disable enable part configuration quickly
C C++;https://github.com/google/leveldb;leveldb fast key value storage library write google provide order map string key string value author sanjay ghemawat sanjay google com jeff dean jeff google com feature key value arbitrary byte array store sort key caller provide custom comparison function override sort order basic operation put key value get key delete key multiple change make atomic batch user create transient snapshot get consistent view forward backward iteration support automatically compress snappy compression external activity system operation etc relay virtual interface user customize operate system interaction documentation leveldb library online bundle source limitation sql database relational support sql query support index single process possibly multi thread access particular database time client server support builtin library application need support wrap server around library get source project support box posix quick start window first generate visual studio project solution default default x86 bite compile window solution command line open leveldb sln visual studio within please see cmake documentation cmakelists txt advance usage contribute leveldb project leveldb project welcome contribution leveldb primary goal reliable fast key value store change line feature limitation outline meet requirement consider contribution requirement test platform _generally_ accept change platform compile test mean posix linux macos window small change sometimes accept consider exception rule stable api strive hard maintain stable api change require change project leveldb _might_ reject without sufficient benefit project test change must accompany new change test sufficient explanation new change test require consistent style project conform google style ensure change properly format please unlikely accept contribution configuration cmakelists txt focus maintain configuration allow test project work support configuration inside google currently interest support requirement different operate system compiler system submit pull request pull request accept author must first sign contributor license agreement cla order keep commit timeline linear change single commit google leveldb main keep commit timeline linear easily sync internal repository google information github git page performance performance report explanation include db_bench program somewhat noisy enough get ballpark performance estimate setup database million entry entry byte key byte value value benchmark compress half original size leveldb version date sun may cpu intel core quad cpu q6600 40ghz cpucache key byte value byte byte compression entry raw size estimate size estimate write performance fill benchmark create brand new database either sequential random order fillsync benchmark flush operate system disk every operation write operation leave sit operate system buff cache overwrite benchmark random write update exist key database fillseq micros fillsync micros ops fillrandom micros overwrite micros correspond write single key value pair random write benchmark approximately write per second fillsync operation cost much millisecond disk seek typically millisecond suspect hard disk buff update memory respond write platter may may safe base whether hard disk enough power save memory event power failure read performance list performance read sequentially forward reverse direction also performance random lookup note database create benchmark quite small therefore report characterize performance leveldb work set fit memory cost read piece present operate system buff cache dominate disk seek need fetch disk write performance mostly unaffected whether work set fit memory readrandom micros approximately read per second readseq micros readreverse micros leveldb compact underlie storage background improve read performance list immediately lot random write compaction usually trigger automatically good readrandom micros approximately read per second readseq micros readreverse micros high cost read come repeat decompression block read disk supply enough cache leveldb hold uncompress block memory read performance improve readrandom micros approximately read per second compaction readrandom micros approximately read per second compaction repository content see doc index doc index explanation see doc impl doc impl brief overview public interface include leveldb caller include rely detail header package internal apis may change without warn guide header include leveldb main interface start include leveldb option control behavior entire database also control behavior individual read write include leveldb comparator abstraction user specify comparison function want bytewise comparison key default comparator client write comparator want custom order handle different character encode etc include leveldb iterator interface iterate get iterator object include leveldb write_batch interface atomically apply multiple update database include leveldb slice simple module maintain pointer length byte array include leveldb status status return many public interface report success various kind error include leveldb env abstraction environment posix interface util env_posix include leveldb table include leveldb table_builder low level module client probably directly
C C++;https://github.com/ermig1979/Simd;introduction simd free open source image process machine library design programmer provide many useful high performance algorithm image process pixel format conversion image scale filtration extraction statistic information image motion detection object detection haar lbp classifier cascade classification neural algorithm optimize different simd cpu extension particular library support follow cpu extension sse avx avx x86 x64 vmx altivec vsx power7 powerpc big endian neon arm simd library api also contain useful class function facilitate access api library support dynamic static link bite bite window linux msvs clang compiler msvs project cmake system library folder structure simd library next folder structure simd src simd contain source cod library simd src test contain test framework library simd src contain library simd prj vs2015 contain project microsoft visual studio simd prj vs2017 contain project microsoft visual studio simd prj vs2019 contain project microsoft visual studio simd prj cmd contain additional script need library window simd prj cmake contain cmake system simd prj contain additional script need library linux simd prj txt contain text need library simd cascade contain opencv cascade haar lbp simd image contain image sample simd contain simd doc contain documentation library library window library test application window need microsoft visual studio project directory simd prj vs2019 default library dll dynamic link library also may static library must change appropriate property configuration type simd project also uncomment define simd_static simd src simd simdconfig also order library cmake mingw mkdir cmake prj cmake dsimd_toolchain your_toolchain bin dsimd_target x86_64 dcmake_build_type release mingw makefiles mingw32 make library linux library test application linux need cmake system cmake system place directory simd prj cmake library x86 x64 powerpc big endian arm platform clang compiler native compiler current platform simple mkdir cmake prj cmake dsimd_toolchain dsimd_target make library powerpc big endian arm platform also toolchain cross compilation powerpc bite big endian mkdir cmake prj cmake dsimd_toolchain your_toolchain usr bin powerpc linux gnu dsimd_target ppc64 dcmake_build_type release make arm bite mkdir cmake prj cmake dsimd_toolchain your_toolchain usr bin arm linux gnueabihf dsimd_target arm dcmake_build_type release make arm bite mkdir cmake prj cmake dsimd_toolchain your_toolchain usr bin aarch64 linux gnu dsimd_target aarch64 dcmake_build_type release make library test application current directory addition parameter simd_avx512 enable avx avx 512f avx 512cd avx 512vl avx 512dq avx 512bw cpu extension switch default simd_avx512vnni enable avx vnni cpu extension switch default simd_test test framework switch default simd_info print information switch default simd_perf enable internal performance statistic switch default simd_shared share library switch default simd_get_version call scipt get simd library version switch default simd_synet enable optimization synet framework switch default simd_sint8_debug enable debug int8 capability synet framework switch default simd_hide hide internal function simd library switch default simd_test_flags addition compiler flag test framework library library must include include simd simdlib library must include include simd simdlib hpp order must include include simd simddetection hpp order must include include simd simdneural hpp order must include include simd simdmotion hpp interaction opencv need mutual conversion simd opencv type define macro simd_opencv_enable include simd header include define simd_opencv_enable include simd simdlib hpp convert next type point size simd point rect simd rectangle mat simd view test framework test suite need test correctness work library also performance test set test every function api library test application test sobel log txt next parameter auto check mode include performance test library release mode case different function compare scalar different simd instruction sse2 avx2 also creation test cross platform test cross platform test early prepare test special test number test thread sobel include filter current case test function contain word sobel name miss parameter full test perform several filter function name satisfy least log txt name test report text format test report also output console also parameter help order print help message set project root directory print alignment statistic print internal statistic cmake parameter simd_perf must number channel test image performance test height test image performance test width test image performance test log html name test report html format sample avi video source see simd motion test output avi annotate video output see simd motion test thread number parallelize algorithm exclude filter exclude test minimal test execution time millisecond litter cpu cache test city jpg name real image test image place image directory
C C++;https://github.com/arrayfire/arrayfire;arrayfire general purpose tensor library simplify process software development parallel architecture find cpu gpus hardware acceleration device library serve user every technical compute market several arrayfire benefit include accelerate tensor compute follow area array handle computer vision image process linear algebra machine standard math signal process statistic vector algorithm easy stable api rigorous benchmark test ensure top performance numerical accuracy cross platform compatibility support cuda opencl native cpu window mac linux visualization function commercially friendly open source license enterprise support arrayfire provide software developer high level abstraction reside accelerator array object developer write perform operation arrayfire array turn automatically translate near optimal kernel execute computational device arrayfire device range low power mobile phone high power gpu enable supercomputer arrayfire cpu major vendor intel amd arm gpus prominent manufacturer nvidia amd qualcomm well variety accelerator device window mac linux get arrayfire instruction arrayfire source find wiki conway game life arrayfire visit wikipedia page description conway game life complete source find perceptron complete source find visit directory documentation find complete documentation quick link list language support arrayfire several official community maintain language api rust julia nim community maintain wrapper __in progress wrappers__ net fortran java lua nodejs ruby contribute community arrayfire developer invite interest able write top perform tensor function together fulfill arrayfire fast scientific compute contribution kind welcome please refer conduct get involve arrayfire community developer citation acknowledgement redistribute arrayfire please follow term establish license license wish cite arrayfire academic publication please follow citation document github citation arrayfire development fund accelereyes llc several third party please see list acknowledgement acknowledgement expression gratitude support contact info slack google arrayfire service trademark policy literal mark arrayfire arrayfire logo trademark accelereyes llc dba arrayfire wish either mark project please consult arrayfire trademark
C C++;https://github.com/Amanieu/asyncplusplus;async async lightweight concurrency framework concept inspire microsoft ppl standard proposal short show feature async support platform requirement async compiler standard library unfortunately yet fully implement platform list compiler combination know work linux work gcc clang intel compiler mac work apple clang libc gcc also work must get recent version work apple clang libc note thread local support library workaround base pthreads window work gcc pthread win32 visual studio instal instruction compile async available page documentation async documentation split part describe task object core async read first strongly recommend parallel describe function work range parallel describe low level detail async customize api give detail description class function available async contact contact email amanieu gmail com
C C++;https://github.com/deplinenoise/ig-debugheap;debugheap debug heap debug heap useful try track memory error especially window valgrind write work mac linux window package provide follow feature array index error positive trigger crash allocation align closely possible inaccessible virtual memory page memory free trigger crash time double free detect time unsynchronized multi thread access detect improve chance crash free double free increase size heap free block keep observation list long possible flush error class eventually reuse heap terribly slow waste ton memory want track memory error neat way provide heap interface dynamically switch heap maybe configuration option hunt memory error without recompiling license copyright insomniac game right reserve redistribution source binary form without modification permit provide follow condition meet redistribution source must retain copyright notice list condition follow disclaimer redistribution binary form must reproduce copyright notice list condition follow disclaimer documentation material provide distribution software provide copyright holder contributor express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall copyright holder contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage
C C++;https://github.com/gameplay3d/GamePlay;gameplay gameplay open source cross platform game framework engine create mobile desktop game development community support platform license open source apache bug report please log bug github disclaimer software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
C C++;https://github.com/civetweb/civetweb;civetweb resource civetweb_64x64 png civetweb civetweb official home civetweb github github late continuous integration linux macos travis travis continuous integration window appveyor test coverage check different tool setting coverage static source analysis coverity scan codeql semantic analysis project mission project mission provide easy powerful embeddable web server optional cgi ssl lua support civetweb mit license innovate without restriction civetweb developer library add web server functionality exist application also end user stand alone web server window linux available single executable installation require find official version end user civetweb binary release github sourceforge developer contribute civetweb via github due bug git window civetweb must early late version see also bug request github new release announce google group formerly support question discussion thread google recent question discussion github source release find github brief overview find github page quick start documentation guide end user pre binary end user guide server quick start guide embed add http support exist application add http ssl support openssl api additional documentation civetweb application program interface release note security policy copyright license overview civetweb keep balance functionality simplicity carefully select list feature fork change licence mit commercial gpl lot enhancement add since see maintain liberal permissive commercial friendly mit project free copy leave license like gpl innovate without restriction work window mac linux unix android buildroot many platform script database support cgi lua server page server side lua script lua sqlite database server side javascript provide ready powerful web development platform single click executable dependency support cgi ssi http digest md5 authorization websocket webdav experimental http support http ssl support optional support authentication client side certificate resume url rewrite blacklist base acl window service systemd service speed limit base client subnet uri pattern simple clean embed api source single drop compilation embed include http client capable send arbitrary http http request websocket client functionality available optionally include software lua resource lua logo jpg lua luafilesystem resource luafilesystem logo jpg luafilesystem luasqlite3 resource luasqlite logo jpg luasqlite3 sqlite3 resource sqlite3 logo jpg sqlite3 luaxml resource luaxml logo jpg luaxml duktape resource duktape logo png duktape optional dependency mbed support project easy please read look recent question discussion usually github old information may find mail information may outdated feel free create github issue bug feature request question suggestion want share tip trick create issue bug add enough description reproduce issue least add civetweb version operate system please see also guideline security note take liability warranty link content visit page try community support suggestion risk link provide project include source documentation provide hope information helpful however accept responsibility content external page contribution contribution welcome provide contribution carry mit license apply fix copy mongoose project prevent gpl taint since civetweb mongoose develop independently base differ patch safely transfer either direction guideline find author civetweb fork last mit version mongoose august since civetweb see many improvement various author copyright civetweb developer mit license list author find civetweb base mongoose original author mongoose sergey lyubka release mit license however august mongoose relicensed dual gpl commercial ciwetweb create thomas davis sunsetbrew mit fork mongoose license change civetweb fork mention mongoose page well get delete add every civetweb project ensure mit license term apply gpl impose long source remain free mit license protection
C C++;https://github.com/meekrosoft/fff;fake function framework fff gitter fake function framework fake function framework hello fake world hello fake world capture argument capture argument return value return value reset fake reset fake call history call history default argument history default argument history user define argument history user define argument history function return value sequence function return value sequence custom return value delegate custom return value delegate return value history return value history variadic function variadic function common question common question specify gcc function attribute specify gcc function attribute find find benefit benefit hood hood cheat sheet cheat sheet fake function framework fff micro framework create fake function test life short spend time hand write fake function test hello fake world say test embed user interface function want create fake would define fake function test suite unit test might look something like happen first thing note framework header need fff include test suite magic fake_void_func expand macro define function return void argument also define struct function_name _fake contain information fake instance display_init_fake call_count incremented every time fake function call hood generate struct look like capture argument enough toy fake function argument would define fake function test suite unit test might look something like magic fake_void_func work previous number argument function take calculate macro argument follow function name define argument type char pointer variable create every argument form function_name fake argn_val return value want define fake function return value fake_value_func macro instance would define fake function test suite unit test might look something like course mix match macro define value function argument instance fake would syntax like reset fake good test isolate test important reset fake unit test fake reset function reset argument call count good practice call reset function fake setup function test suite might want define macro call history say want test function call functiona functionb functiona would well fff maintain call history easy assert expectation work reset call fff_reset_history default argument history framework default store argument last call make fake function way find call drop first check drop history counter check call count great history size argument history fake function reset reset_fake function call user define argument history wish control many call capture argument history override default define include fff like function return value sequence often test would like test behaviour sequence function call event way fff specify sequence return value fake function probably easy describe specify return value sequence set_return_seq macro fake return value give parameter array sequence end sequence reach fake continue return last value sequence indefinitely custom return value delegate specify function provide return value fake set custom_fake member fake custom return value delegate sequence say function parameter want different behaviour first call set value parameter first call value parameter second call value parameter third call specify sequence custom function non variadic function set_custom_fake_seq macro fake call custom function order specify set_custom_fake_seq macro last custom fake reach fake keep call last custom fake sequence macro work much like set_return_seq macro return value history say function must call release resource allocate case return could pthread_mutex_trylock could pthread_mutex_unlock fff save history return value easily check even sequence custom fake simple test_f ffftestsuite return_value_sequence_saved_in_history long myreturnvals set_return_seq longfunc0 myreturnvals longfunc0 longfunc0 longfunc0 assert_eq myreturnvals longfunc0_fake return_val_history assert_eq myreturnvals longfunc0_fake return_val_history assert_eq myreturnvals longfunc0_fake return_val_history access return value return_val_history field variadic function fake variadic function macro fake_value_func_vararg fake_void_func_vararg instance fake_value_func_vararg int fprintf const char order access variadic parameter custom fake function declare va_list parameter instance custom fake fprintf could call real fprintf like int fprintf_custom stream const char format va_list fprintf0_fake return_val fail return fprintf0_fake return_val return vfprintf stream format like return value delegate custom return value delegate sequence also specify sequence variadic function set_custom_fake_seq see test common question specify call convention fake function fff limit capability enable specification microsoft visual call convention support must enable generate fff header fff enable support fff fake function scaffold necessitate specification call convention __cdecl value void fake basic take note placement call convention specify different depend whether fake void value function fake function return value reference basic mechanism fff provide case custom_fake field describe custom return value delegate need create custom function gettime_custom_fake produce output optionally helper variable gettime_custom_now retrieve output creativity tie together important part imho keep test case readable maintainable case project compiler support nest function gcc even combine single unit test function easily oversee detail test fake function function pointer parameter fff stub function function pointer parameter cause problem try stub present deal situation need stub function function pointer parameter something like create fake like horribly fail try compile fff macro internally expand illegal variable solution problem create bridge type need visible unit tester fake intermediate type way compiler complain type match idea create test case callback reuse fake across multiple test suit fff function like fake_value_func perform declaration definition fake function correspond structs place header since lead multiple definition fake function solution separate declaration definition fake place declaration public header definition private source could specify gcc function attribute specify gcc function attribute fake fff_gcc_function_attributes directive weak function usful attribute _weak_ attribute mark function override non weak variant link time weak function combination fff help simplify test approach define library fake function libfake link binary might many define subset real variant fake function aforementioned fake library benefit allow binary selectively subset require fake function test real variant without need many different make target mark fake weak attribute like see project demonstrate approach weak_linking_ find look directory full length also test suite framework test directory benefit point make easy create fake function test simple include header good work test environment hood fff header generate ruby script test test_ test embed hardware driver examples_ weak_linking examples_ cheat sheet macro description fake_void_func arg_types define fake function name return void argument fake_void_func display_output_message const char fake_value_func return_type arg_types define fake function return value type return_type take argument fake_value_func int display_get_line_insert_index fake_void_func_vararg arg_types define fake variadic function return void type return_type take argument variadic argument fake_void_func_vararg const char fake_value_func_vararg return_type arg_types define fake variadic function return value type return_type take argument variadic argument fake_value_func_vararg int fprintf const char reset_fake reset state fake function call reset_fake display_init
C C++;https://github.com/boostcon/cppnow_presentations_2014;presentation library week link pdfs keynote opds directory depend browser may need right click link select save tuesday may library week templating keynote axiomatic program euclidean deduction template beyond look glass coroutines fiber thread canonical class conceptclang theoretical advance full generic program generic space compile time geometric algebra test drive development boost test turtle mock part remove undefined behavior integer operation bound integer libreoffice value semantics range algorithm composability prepare library afio boost peer review wednesday may mpl11 new metaprogramming library optimization boost asio base keynote undefined behavior mach7 design evolution pattern match library powerpoint ttps github com boostcon cppnow_presentations_2014 blob master open pattern match pptx raw true practical type erasure boost base configuration libreoffice tutorial introduction part space plasma require java library pptx goal good implement complete multiplatform octopus policy drive framework cfd simulation thursday may keynote beware interactive metaprogramming base libcppa type safe message system part unicode pptx cppcomponents modern portable component aesthetic accelerator program amp design xml api modern modern concurrent understand boost library zip friday may iterators may libreoffice value semantics create refactoring tool design complex combinatorial intro functional program manage object expect exception friendly error lifetime usage global thread local static functional structure keynote asynchronous program boost metastatemachine upcoming asynchronous ownership memory libreoffice saturday may future accelerator program functional reactive program cleanly abstract disambiguation black thought large base change ripple management position future boost future boost community management
C C++;https://github.com/isocpp/CppCoreGuidelines;core within small simple safe language struggle get bjarne stroustrup core guideline cppcoreguidelines collaborative effort lead bjarne stroustrup much like language many person year discussion design across number organization design encourage general applicability broad adoption freely copy modify meet organization need get start guideline find cppcoreguidelines cppcoreguidelines document flavor intentionally keep simple mostly ascii allow automatic post process language translation reformatting editor maintain version format note manually integrate slightly old version master branch guideline constantly evolve document without strict release cadence bjarne stroustrup periodically review document increment version number introduction checkins increment version tag git many guideline make header guideline support library available gsl guideline support background scope aim guideline help people modern effectively modern mean word would like look like year time give start year time guideline focus relatively high level issue interface resource management memory management concurrency rule affect application architecture library design follow rule lead statically type safe resource leak catch many program logic error common today fast afford thing right concern low level issue name convention indentation style however topic help programmer bound initial set rule emphasize safety various form simplicity may well strict expect introduce exception good accommodate real world need also need rule find rule contrary expectation even contrary experience suggest change cod style way fail please try verify disprove rule particular would really like rule back measurement good find rule obvious even trivial please remember purpose guideline help someone experience come different background language get speed rule design support analysis tool violation rule flag reference link relevant rule expect memorize rule try write rule mean gradual introduction base plan tool hope others contribution license comment suggestion improvement welcome plan modify extend document understand improve language set available library improve detail find contribute contribute license license thank host standard foundation website
C C++;https://github.com/matt-42/vpp;travis video video video image process library take advantage standard ease write fast video image process application idea behind video performance generate via meta program compiler easily optimize main feature generic dimensional image container grow set image process algorithm cost abstraction easily write image process algorithm multicore simd processor embed language evaluate image expression test compiler clang dependency eigen iod instal script video free bsd video research relate work welcome cite get start installation instal video need get eigen3 boost system package manager probably help library script iod vpp video header library need include vpp header access basic feature library parallel construct video need target multiple core activate openmp optimization image container generic container imagend represent dense dimensional rectangle set pixel value type convenience image1d image2d image3d respectively alias imagend imagend imagend type provide access pixel buff piece information useful process image contrast std vector assign image copy share accidental expensive deep copy happen image option _border _aligned image constructor also take special image option default set border surround pixel filter access neighborhood access valid pixel traverse image border default byte set alignment byte begin first pixel row border exclude enable align simd memory instruction _data _pitch image buff allocate external library option respectively pas pointer first pixel image distance byte first pixel consecutive row set option video responsible free buff opencv interoperability header include provide explicit conversion opencv image type allow video algorithm opencv image opencv algorithm video image without clone pixel buff ownership buff switch opencv video depend order destructor call note since possible opencv free video image opencv image must last hold video image vector type video vector type alias eigen3 vector provide fast linear algebra syntax follow char short int float double uchar ushort uint integer type handle image rgba bite pixel wise kernel construct allow easily efficiently map simple kernel function pixel set image rely openmp spread process available core simd vectorize process row possible kernel function return value return newly allocate image fill kernel give image integer kernel argument give traverse domain i_0 every pixel location call reference pixel i_n locate location parallelism traversal direction default traverse image leave right top bottom spread process different row different core follow option allow change defaut behavior _no_thread disable parallelism _left_to_right traverse row leave right _right_to_left traverse row right leave _top_to_bottom traverse row top bottom _bottom_to_top traverse row bottom top access neighborhood video provide fast access rectangular pixel neighbor inside pixel_wise kernel speed access mainly come direct index neighborhood ability compiler vectorize access simd vector extension stay portable explicit simd optimization video hand generate design trivial compiler vectorize kernel contain conditional branch access express relative coordinate access bottom right neighbor current pixel refer current pixel block wise kernel construct allow map function every cell give grid construct similar pixel_wise instead process pixel block_wise kernel process give cell row wise col wise kernel shortcut process image row column follow compute row wise sum give image contribute contribution welcome hesitate fill issue send pull request send email matthieu garrigues gmail com
C C++;https://github.com/open-source-parsers/jsoncpp;jsoncpp coverage json json org lightweight interchange format represent number string order sequence value collection name value pair json org jsoncpp library allow manipulate json value include serialization deserialization string also preserve exist comment unserialization serialization step make convenient format store user input documentation jsoncpp documentation jsoncpp documentation generate doxygen jsoncpp documentation doxygen note backward compatibility old compiler old new compiler major version maintain binary compatibility special note branch new branch major version number show different main purpose branch make balance branch thus user new feature new branch introduce hardly apply jsoncpp project vcpkg dependency manager jsoncpp dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg jsoncpp jsoncpp port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository amalgamate source meson system meson get wrap meson simply meson wrap jsoncpp way trouble see post question issue license see license detail summary jsoncpp license mit license public domain desire recognize jurisdiction
C C++;https://github.com/CppCon/CppCon2016;cppcon presentation material canonical location presentation cppcon speaker submit index material keynote extern talk programmer dan saks evolution past present bjarne stroustrup presentation mqtt message broke john dubchak modern database interface erik smith aaaargh adopt almost always auto reinforce good andy bond accumulate explore algorithmic ben deane advance levelization john lakos algorithm design value distribute kirk shoop beyond issaquah paul mckenney software david sankel coroutines gor nishanov costless abstraction compiler serge guelton reflection without macro markup external antony polukhin channel alternative callback john bandela constant dietmar kuehl deploy module million line manuel klimek develop correct facebook mark isaacson elegant asynchronous nat goodspeed embrace standard window kenny kerr jam mcnellis numerical cosmology efficient bite abstraction standard vincent reverdy patrick niedzielski game engine jason jurecka high performance concurrent transactional deli zhang test roland bock want random cheinan mark implement modern mqtt client embed michael caisse implement lightweight object persistence modern bob steagall improve performance compiler tim haines includeos bootloader rest api new alfred bratterud instruction order charles bay introduction jam mcnellis iterator casey carter lifetime safety default make leak free herb sutter make friend clang static analysis gabor horvath optimally shoot furry ball alexandru voicu memory business sergey zubkov parallelism modern hartmut kaiser put coroutines work window kenny kerr jam mcnellis beauty diego rodriguez losada rainbow siege quest nicolas fleury regular expression present tim shen spmd program nicolas guillemot standard proposal sg6 john mcfarlane stl marshall clow continue future concurrency anthony williams exception patrice roy guideline support library year neil macintosh mame story modern miodrag milanovic power reflection facebook marcelo juchem speed concurrency lock free fedor pikus strange detail std string nicholas ormrod towards heterogeneous program gordon brown michael wong tuple new stephan lavavej build2 boris kolpackov weakly order atomics han boehm variadic expansion micha dominiak variant past present david sankel welcome time howard hinnant programmer need know header walter brown happen deprecate remove feature billy baker basic lisa lippincott rob irving jason turner write application modern jens well tutorial chrono howard hinnant asynchronous michael caisse bde library steven breitstein good mutual exclusion niall douglas parallel algorithm bryce adelstein lelbach gdb lot greg law implement static control flow vittorio romeo practical performance jason turner template normal program part arthur dwyer template normal program part arthur dwyer blaze high performance math klaus iglberger type ben deane demo achieve financial process performance compile time eduardo madrid cache optimise hash christiaan pretorius conan package diego rodriguez losada rich tiny jason turner lightning talk lunch session singleton arno lepisk present jens well jens well uftrace function graph tracer userspace namhyung kim honggyu kim variant variadic roland bock poster uftrace function graph tracer userspace namhyung kim honggyu kim
C C++;https://github.com/cisco/openh264;openh264 openh264 codec library support encode decode suitable real time application webrtc see detail encoder feature constrain baseline profile level max frame size macro block arbitrary resolution constrain multiple 16x16 rate control adaptive quantization constant quantization slice option slice per frame slice per frame macroblocks per slice byte per slice multiple thread automatically multiple slice temporal scalability layer dyadic hierarchy simulcast avc resolution single input spatial simulcast resolution single input long term reference ltr frame memory management control operation mmco reference picture list modification single reference frame inter prediction multiple reference frame ltr temporal layer periodic demand instantaneous decoder refresh idr frame insertion dynamic change bite rate frame rate resolution annex byte stream output yuv planar input decoder feature constrain baseline profile level max frame size macro block arbitrary resolution constrain multiple 16x16 single thread slice long term reference ltr frame memory management control operation mmco reference picture list modification multiple reference frame specify sequence parameter set sps annex byte stream input yuv planar output support window bite bite mac bite bite mac arm64 linux bite bite android bite bite bite bite window phone bite architecture verify work ppc64el processor support intel x86 optionally mmx sse avx yet help welcome armv7 optionally neon aarch64 optionally neon architecture fallback function library nasm need instal assembly workable version nasm mac osx bite nasm need version nasm introduce error rip relative address mac osx bite arm assembly window phone gas preprocessor require git git libav org gas preprocessor git android android platform need android sdk ndk also need export android_sdk tool path linux export path android_sdk tool path codec demo make android ndkroot android_ndk target android_target valid android_target find android_sdk platform android also set arch ndklevel accord device ndk version arch specify architecture android device currently arm arm64 x86 x86_64 support default arm mips mips64 also specific optimization architecture ndklevel specify android api level default available possibility find android_ndk platform android strip away android prefix default command armeabi v7a abi android abis add arch arm64 arch x86 arch x86_64 arch mips arch mips64 old armeabi abi armv5te baseline add app_abi armeabi arch arm implicit bite abi arm64 explicitly set ndklevel high library demo application xcode project locate codec dec codec enc also library demo application make base system command line make arch arch valid value arch normal architecture name armv7 armv7s arm64 i386 x86_64 simulator another settable specific parameter sdk_min specify minimum deployment target library detail make command line see platform linux library demo application make base system command line make linux arch arch set arch accord linux device arch specify architecture device currently arm arm64 x86 x86_64 support notice computer x86 architecture libnary arm aarch64 machine may need cross compiler make linux aarch64 linux gnu gcc cxx aarch64 linux gnu arch arm64 make linux arm linux gnueabi gcc cxx arm linux gnueabi arch arm window make must instal recommend cygwin make must select include installation installation please add cygwin bin path path openh264 autobuildforwindows bat provide help compile library window platform usage bat script autobuildforwindows bat win32 release asm x86 release autobuildforwindows bat win64 release asm x86_64 release autobuildforwindows bat arm64 release asm arm64 release usage please refer bat script help platform make main project directory make automatically detect architecture accordingly make arch i386 x86 bite make arch x86_64 x86 bite make arch arm64 arm64 mac bite make silent show actual compiler command make debugsymbols true library normal library another remove debug symbol table entry create option command line program h264enc h264dec appear main project directory script command line apps testbin cmdlineexample usage information find testbin cmdlinereadme meson meson definition add know work linux window x86 x86 bite see instruction meson test source codec encoder decoder console test app makefile vcproj script makefile system test gtest unittest testbin autobuild script test app config yuv bitstream test know issue see issue tracker encoder error resolution exceed 3840x2160 encoder error compress frame size exceed half uncompress size decoder error compress frame size exceed 1mb encoder require frame skip enable hit target bitrate frame skip disable target bitrate may exceed license bsd see license detail
C C++;https://github.com/waf-project/waf;move
C C++;https://github.com/odygrd/quill;quill asynchronous low latency log library introduction introduction feature feature performance performance support platform compiler support platform compiler basic usage basic usage cmake integration cmake integration documentation documentation license license homebrew vcpkg conan brew quill vcpkg quill quill introduction quill cross platform low latency log library base main goal library simplicity small snippet enough get start feature performance ultra low latency format hot path asynchronous mode hot path allocation fundamental type enums string include std string std string_view custom user define type get copy construct format backend worker thread convenience ease application monitor debug latency equal latency binary logger produce log human readable form feature log anything blaze fast see format outside hot path backend log thread non type ostream operator call copy object backend log thread unsafe copy non trivial user define detect compile time type tag safe copy avoid format hot path see user define custom formatters log format base user specify pattern see support log stack trace store log message ring buff display late high severity log statement demand see backtrace various log target see console log colour support log rotate log time rotate log custom handler filter filter log message see guarantee non block non guarantee log non guarantee mode heap allocation new queue log message drop see support wide character log wide character filename window log statement timestamp order even produce different thread make debug easy multi thread application log level completely strip compile time reduce branch clean warn free codebase even high warn level crash safe behaviour signal handler type safe style api compile type check support log stl type container excellent library performance log number follow message log time per thread table nanosecond thread library 50th 75th 90th 95th 99th 9th bad quill dual queue enable bound quill dual queue enable unbounded quill dual queue disable unbounded platformlab iyengar thread library 50th 75th 90th 95th 99th 9th bad quill dual queue enable bound quill dual queue enable unbounded quill dual queue disable unbounded platformlab iyengar log number large string follow message log time per thread large string character avoid short string optimisation std string thread library 50th 75th 90th 95th 99th 9th bad quill dual queue enable bound quill dual queue enable unbounded quill dual queue disable unbounded platformlab iyengar thread library 50th 75th 90th 95th 99th 9th bad quill dual queue enable bound quill dual queue enable unbounded quill dual queue disable unbounded platformlab iyengar benchmark linux ubuntu rhel intel xeon cpu 90ghz gcc thread pin different cpu unfortunately core isolate backend logger thread cpu caller hot path thread slow log message process backend log thread cause spsc queue fill fast allocate continuously log message loop make consumer backend log thread unable follow queue allocate block log library expect high throughput binary logger like platformlab nanolog therefore different approach follow suit real time application message log loop calculate store average latency message wait repeat iteration logger benchmark time latency second best benchmark find support platform compiler quill require compiler minimum require version support compiler show table compiler note gcc version clang version msvc version platform note linux ubuntu rhel centos fedora window window version window server macos test xcode basic usage output cmake integration external instal quill static library note custom directory invoke cmake dcmake_install_prefix quill dir instal quill static library external libfmt library cmake project locate directly find_package directory structure cmakelists txt main cpp see basic usage basic usage embed embed library directly copy source project call add_subdirectory cmakelists txt directory structure cmakelists txt main cpp see basic usage basic usage documentation advance usage additional documentation find page folder also good source documentation license quill license mit quill depend third party library separate copyright notice license term source subcomponents subject term condition follow license mit fmt mit invoke hpp mit doctest
C C++;https://github.com/BayesWitnesses/m2cgen;m2cgen github action coverage license pypi m2cgen generator lightweight library provide easy way transpile statistical native java javascript visual basic powershell php dart haskell ruby rust elixir installation installation support language support language support support classification output classification output usage usage cli cli faq faq installation support version support language dart haskell java javascript php powershell ruby rust visual basic vba compatible elixir support classification regression linear scikit learnlogisticregressionlogisticregressioncvpassiveaggressiveclassifierperceptronridgeclassifierridgeclassifiercvsgdclassifierlightningadagradclassifiercdclassifierfistaclassifiersagaclassifiersagclassifiersdcaclassifiersgdclassifier scikit learnardregressionbayesianridgeelasticnetelasticnetcvgammaregressorhuberregressorlarslarscvlassolassocvlassolarslassolarscvlassolarsiclinearregressionorthogonalmatchingpursuitorthogonalmatchingpursuitcvpassiveaggressiveregressorpoissonregressorransacregressor support regression estimator base estimator ridgeridgecvsgdregressortheilsenregressortweedieregressorstatsmodelsgeneralized least square gls generalize least square error glsar generalize linear glm ordinary least square ols gaussian process regression maximum likelihood base estimation processmle quantile regression quantreg weight least square wls lightningadagradregressorcdregressorfistaregressorsagaregressorsagregressorsdcaregressorsgdregressor svm scikit learnlinearsvcnusvconeclasssvmsvclightningkernelsvclinearsvc scikit learnlinearsvrnusvrsvrlightninglinearsvr tree decisiontreeclassifierextratreeclassifier decisiontreeregressorextratreeregressor random forest extratreesclassifierlgbmclassifier booster randomforestclassifierxgbrfclassifier extratreesregressorlgbmregressor booster randomforestregressorxgbrfregressor boost lgbmclassifier gbdt dart booster xgbclassifier gbtree include boost forest gblinear booster lgbmregressor gbdt dart booster xgbregressor gbtree include boost forest gblinear booster find version package compatibility guarantee test version also support untested classification output linear linear svm kernel svm binary scalar value sign distance sample hyperplane second class multiclass vector value sign distance sample hyperplane per class comment output consistent output svm outlier detection scalar value sign distance sample separate hyperplane positive inlier negative outlier binary scalar value sign distance sample hyperplane second class multiclass vector value score class shape n_samples n_classes n_classes comment output consistent output decision_function_shape set ovo tree random forest boost binary vector value class probability multiclass vector value class probability comment output consistent output predict_proba method decisiontreeclassifier extratreeclassifier extratreesclassifier randomforestclassifier xgbrfclassifier xgbclassifier lgbmclassifier usage simple linear environment represent java generate java find generate different language cli m2cgen cli tool generate serialize object pickle protocol forget unpickling serialize object class must define top level importable module unpickling environment pip also support faq generation fail recursionerror maximum recursion depth exceed error error occur generate ensemble try reduce number estimator within alternatively increase maximum recursion depth sys setrecursionlimit generation fail importerror module name error transpiling serialize object error indicate pickle protocol deserialize object unpickling serialize object require class must define top level importable module unpickling environment installation package provide class definition solve problem generate m2cgen provide different input compare original obtain force input particular type prediction phase native library currently m2cgen work float64 double type try cast input another type manually check also small difference happen due specific float point arithmetic target language
C C++;https://github.com/jarro2783/cxxopts;release version note master generally work progress probably want tag release version version break change version couple break change version aware new cxxopts skip section parser long modify argument pas const argc argv expect change parseresult object long depend parser return scope outside parser still work input modify parseresult store list unmatched argument retrieve like follow quick start lightweight option parser library support standard gnu style syntax option option give long long argument long argument abc argument take argument additionally anything parse positional argument basic create cxxopts option instance add_options option declare long optional short option description must provide third argument value omit boolean type give long parse operator parse command line retrieve option count option get number time appear get value opt exist right type exception throw note option parse long option object create scope unrecognised argument allow unrecognised argument skip apply positional argument parse another option argument match argument specify call object retrieve exception exceptional situation throw exception type exception error define option error parse list argument exception derive cxxopts optionexception error define option derive cxxopts optionspecexception error parse argument derive cxxopts optionparseexception exception define function get printable string explain error help group option place group purpose display help message place option group pas group string add_options display help pas group would like display vector help function positional argument positional argument optionally parse option set positional argument call last name option container type others single value default implicit value option declare default implicit value default value value option take specify command line follow specify default value option implicit value value option take give command line without argument follow specify implicit value option specify would give value value write command line option would give value implicit write option another would give value another note default implicit value always store string regardless type want store parse though give command line default value count option count boolean value boolean option default implicit value true override effect write set option true however also write various string value way disambiguate positional argument value follow boolean choose positional argument therefore false work std vector value parse list value form std vector also support long parse separate single value list definition cxxopts_vector_delimiter default ensure whitespaces value would interpret next command line option command line option parse std vector my_list option specify multiple time option specify several time different argument record order appearance bus ferry support vector value option option add_options usable mean transport cxxopts value custom help string program name first line help completely replace call option custom_help note might also want override positional help call option positional_help put together link header library requirement requirement compiler support feature regex constexpr default constructor gcc clang libc know work follow compiler know work msvc todo list allow unrecognised option
C C++;https://github.com/NVIDIA/nccl;nccl optimize primitive inter gpu communication introduction nccl pronounce nickel stand alone library standard communication routine gpus implement reduce gather reduce broadcast reduce scatter well send receive base communication pattern optimize achieve high bandwidth platform pcie nvlink nvswitch well infiniband verb tcp socket nccl support arbitrary number gpus instal single node across multiple nod either single multi process mpi application information nccl usage please refer nccl note official test nccl skip follow step choose official library cuda instal default usr local cuda path define cuda path nccl compile instal unless builddir set default nccl compile support architecture accelerate compilation reduce binary size consider redefine nvcc_gencode define makefiles common include architecture target platform nccl system create package root debian ubuntu redhat centos agnostic tarball test test nccl maintain separately copyright source accompany documentation copyright nvidia corporation right reserve
C C++;https://github.com/AustinBrunkhorst/CPP-Reflection;reflection join chat preface work complete reflection pipeline start summer game project editor intent create repository share experience come develop response community motivate make tad bite official allow others consume easily rather give say fill piece create blog talk detail process try share experience best possible find blog buildable section repository setup environment cmake yes insane also awesome let assume work root repository requirement llvm libclang boost compliant compiler test msvc clang runtime dependency runtime pretty straightforward create directory mkdir generate system desire cmake cmake source runtime ide applicable generator also straight cmake cmake target metaruntime parser move part parser actually dependency executable worry though walk llvm libclang window pre binary unix base system find appropriate package linux mint follow sudo apt get libclang dev installation locate usr lib llvm instal set environment variable llvm_root root installation directory skip step environment variable make cmake command simple boost part suck get instal set environment variable boost_root like llvm create directory mkdir generate system desire cmake cmake source parser skip create environment variable define variable resolution cmake directly add switch command dllvm_root dboost_root ide applicable generator also straight cmake cmake target metaparser need follow step set dependency explain parser instruction like target follow create directory mkdir generate system desire cmake cmake ide applicable generator also straight cmake cmake remember add extra switch define llvm_root boost_root skip add environment variable simple executable demonstrate specific feature functionality immediate intention document interface runtime library hopefully cover part runtime people get whole picture blog post cover development process reason make decision feel free contact question concern also pull request welcome
C C++;https://github.com/vinipsmaker/tufao;tufao asynchronous web framework top join chat tufao web framework make object communication system signal slot feature high performance standalone server cross plataform support good support modern http feature persistent stream chunk entity continue status websocket http support flexible request router static server support conditional request partial automatic mime detection flexible secure session support qtcreator allow create new application rapidly lot test timeout support ryan dahl http parser provide good performance generate documentation source doxygen documentation put doc folder html tex format also experimental support compress help license library lgplv2 public header documentation mit license tufao logo license creative common attribution unported library dynamic link include ryan dahl http parser library license lgpl ryan dahl http parser license mit license create commercial application restriction modification tufao modification must redistribute make sure cmake instal path executables set create folder cmake option path_to_source_dir make makeoptions option null combination follow value dcmake_install_prefix installdir set directory tufao dcmake_build_type debug dcmake_build_type release dcmake_build_type relwithdebinfo dcmake_build_type minsizerel dlib_suffix lib_suffix set suffix destination compile tufao bite system bite environment maybe want set variable tufao libs instal installdir lib32 set highly dependent operate system convention try put auto magic detection dgenerate_doc yes generate documentation doxygen denable_tests yes generate test option available window mingw makefiles generate makefiles mingw environment visual studio generate project visual studio makeoptions null combination follow value tufao destdir pkgdir set directory tufao option intend package tufao set package directory choose another installation directory see option option cmake dcmake_install_prefix usr make destdir pkg note late require series late require series note intend create cpack base installer create binary distribution cpack cpackconfig cmake create source distribution cpack cpacksourceconfig cmake create window nsis base installer cpack gnsis documentation generate documentation doxygen doxyfile configuration documentation generate folder doc documentation available follow format html always generate doc html folder latex format generate pdf make inside doc latex folder compress help qhelpgenerator binary tool system path generate doxygen doc qch tufao qch qhelpgenerator tool instal configure system path still want generate documentation format tool doc html index qhp input test tufao also lot test correctness cod base qtestlib generate self contain executables also ctest rule integration cmake test execute make test want makefiles ctest visual studio target _run_tests_ create ctest integrate allow developer centralize test send cdash _experimental_ target make experimental see tufao test log tufao cdash project default prefix usr local intend change make different prefix cmake dcmake_install_prefix destdir make note may need ldconfig installation depend system usage tufao project edit pro add line config tufao1 find folder plan follow line also require report user qmake_macosx_deployment_target tufao pkg config support also module name tufao1 want tufao system add compiler option ltufao1 also see tufao documentation integrate qtassistant news version new class handle rest api introduce thank timothy reave class plugin system partly incompatible tufao default tufao plugin system improve good track deletion require change still need line change config worry backwards compatibility see httppluginserver setconfig detail version add ability ignore set ssl error websocket documentation update bugfix abstracthttpserverrequesthandler thank benjamin zeller update ryan dahl http parser version version project finally logo make inkscape deprecate api remove url querystring remove favor qurl header refactored inherit qmultihash instead qmultimap httpserverresponse constructor option argument optional setoptions method add constructor take reference qiodevice instead pointer httpserverrequest constructor take reference qabstractsocket instead pointer socket method return reference instead pointer url return qurl signal change must readbody method access body content upgrade _head_ access request body object auto disconnect slot end signal right emit ready setcustomdata customdata method add httpserverrequestrouter method pas list capture text httpserver reference instead pointer several place abstracthttpserverrequestrouter refactored explore lambda feature tufao plugin system fully refactored json configuration abstracthttpserverrequesthandler handlerequest reference instead pointer receive argument instead abstraction session create explore lambda websocket startserverhandshake take reference instead pointer pointer reference change expose predictive natural care style style worry maintain balance scoped enums httpfileserver send mime info interface inherit qobject anymore multiple inheritance make class implement many interface httpupgraderouter introduce httpserver setupgradehandler also update qtcreator plugin work qtcreator version httpserverrequest seturl add urlrewriterhandler add httpupgraderouter add header stream qdebug object version websocket peeraddress method add peersocket method add version cmake system change allow parallel tufao installation major version differ add pkgconfig support session support good documentation version application template qtcreator tufao plugin class serve static support conditional request byte range request robust request router add http plugin server add new version ryan dahl http parser change license public header mit msvc support minor improvement version stable documentation improve httpserverresponse easy websocket support tufao_version_major tufao_version_minor macro add qtcreator plugin new roadmap small roadmap tufao rpc support service discovery description support form upload
C C++;https://github.com/caryll/otfcc;otfcc otfcc library utility parse write opentype font key feature json serialization truetype cff opentype font opentype font json full support opentype feature gsub gpo gdef cid key cff vertical metric fast ttx cff otf ttf fast makeotf fully optimize cff otf installation window prebuilt binary mac follow terminal otherwise may need click release archive arch linux package otfcc find source see usage otfccdump dump opentype font json otfccbuild opentype font json otfcc number platform system develop optimize clang llvm therefore strongly recommend compile clang llvm possible gcc also support gcc version late prefer choice performance linux unix like linux either clang llvm gcc otfcc late clang llvm gcc already make available path follow command line change config necessary instal system ninja either change target necessary window window otfcc test toolchains list default premake5 vs2015 produce visual studio solution clang compiler gcc include tdm gcc gcc mingw w64 follow command line change config necessary ninja like linux need specify linux premake5 ninja visual tool mar clang llvm release test follow visual command prompt mac instal via brew premake devel find dep bin osx directory provide ability produce xcode project open xcode otfcc xcworkspace xcode find binary bin please ensure xcode developer mode enable binary terminal
C C++;https://github.com/nanopb/nanopb;nanopb protocol buff embed system late weekly nanopb small size protocol buff ansi especially suitable microcontrollers fit memory restrict system homepage git repository documentation forum late binary package nanopb library nanopb library need thing compile proto nanopb protoc include pb_encode pb_decode pb_common project easy way get start study project simple contain makefile work directly linux system however kind system see manual step readme txt folder generate header protocol buff message define proto follow standard format compatible protocol buff library nanopb need generate generator nanopb_generator myprotocol proto source checkout generator bin nanopb_generator myprotocol proto binary package note instruction nanopb old see documentation particular version binary package window linux mac contain necessary dependency include protobuf library protoc git checkout plain source distribution need separately dependency pip upgrade protobuf grpcio tool customize header generation create option see detail test want perform development nanopb core verify functionality compiler platform want test suite rule test suite implement scons need instal sudo apt scons pip scons test test scons show progress various test case output end error test case successful note mac default alias clang gcc actually support command line option gcc test mac scons clang cxx clang way test different compiler platform embed platform currently support test stm32 discovery board avr simulator scons platform stm32 scons platform avr test system integration nanopb design portable easy platform often big hurdle generator take proto output definition exist rule several system makefiles extra nanopb see simple cmake extra findnanopb cmake see cmake scons test site_scons generator bazel source root conan conanfile source root platformio pypi pip vcpkg also integration platform interface arduino
C C++;https://github.com/c-ares/c-ares;window coverage cii best fuzzing asynchronous resolver library intend application need perform dns query without block need perform multiple dns query parallel primary application server communicate multiple client program graphical user interface full source available release git repository see information find bug correct flaw question comment general regard mean original get touch mail list course distribute mit style license original find detail news note hacker distribute ares_build intend system also distribute configure script distribute ares_build generate copy ares_build dist source distribution archive originally create check git non configure platform must appropriate buildconf script set ares_build local able compile library system capable configure script configure process overwrite distribute ares_build suitable specific library configure new generate ares_build template intend distribute already compile library must also distribute along generate ares_build compile otherwise library user library responsibility provide project know library ares_build include platform configuration dependent info must modify anyone configure script generate assume anything else basic compiler feature present require ansi compiler early ansi compiler clearly deal preprocessor operator newlines must remain unix style old compiler sake comment must write old style unnested fashion try keep line length column
C C++;https://github.com/gfx/cpp-TimSort;late conan pitchfork timsort timsort log stable sort algorithm port openjdk see also follow link detail description timsort library require least need version check branch repository accord benchmark gfx timsort slow std sort std sort randomize sequence fast partially sort drop replacement std stable_sort std stable sort difference fallback log2 algorithm enough extra heap memory available gfx timsort also additional feature guarantee compare std stable_sort take projection function projection comparison function support bite rough link article standard library unless std invoke std invoke available instance type callable parenthesis support pointer member pas range instead pair iterators case sort whole range timsort notably avoid postfix operator prefix equivalent mean timsort work even postfix operator present return incompatible type void merge sort range efficiently important part timsort algorithm library expose gfx timmerge public api drop replacement std inplace_merge std inplace merge difference fallback log algorithm enough extra heap memory available accord benchmark gfx timmerge slow std inplace_merge heavily randomly overlap subranges simple element fast complex element std string sparsely overlap subranges like gfx timsort gfx timmerge take projection function avoid postfix operator list available signature follow namespace gfx signature std std specialization value_type pas range iterator custom class equivalent std identity std identity timsort comparison function projection function sort vector string length installation compatibility ubuntu window macos library test follow compiler gcc clang msvc also work recent compiler likely old compiler guarantee support far back clang new continuous integration environment far back library instal system via cmake follow command alternatively library also available conan center index instal local conan cache via follow command diagnostics information follow configuration macro allow gfx timsort gfx timmerge emit diagnostics helpful diagnose issue define gfx_timsort_enable_assert insert assertion key location algorithm avoid logic error define gfx_timsort_enable_audit insert assertion verify pre postconditions verification slow algorithm significantly enable audit test debug define gfx_timsort_enable_log insert log key location allow follow closely flow algorithm cpp timsort follow semantic versioning provide follow macro retrieve current major minor patch version test test write catch2 compile cmake ctest project main cmakelists txt cmake variable build_testing default unless project include subdirectory follow cmake variable available change way test cmake gfx_timsort_use_valgrind test valgrind default gfx_timsort_sanitize variable take comma separate list sanitizers option test empty default benchmark benchmark available benchmark subdirectory construct directly pas build_benchmarks variable cmake configuration step bench_sort output time scale sec apple llvm version clang target x86_64 apple darwin14 thread posix wall wextra dndebug std bench cpp bin bench bin bench randomize sequence int size std sort std stable_sort timsort std string size std sort std stable_sort timsort reverse sequence int size std sort std stable_sort timsort std string size std sort std stable_sort timsort sort sequence int size std sort std stable_sort timsort std string size std sort std stable_sort timsort bench_merge output time scale millisecond omit detail different middle iterator position reformatted improve readability spec target x86_64 linux gnu gcc version gcc include wall wextra dndebug std bench_merge cpp bench_merge bench_merge size element type algorithm std inplace_merge timmerge randomize sequence int approx average std string approx average reverse sequence int approx average std string approx average sort sequence int approx average std string approx average detail bench_merge different middle iterator position find projection std identity std inplace merge std invoke std std sort std stable sort
C C++;https://github.com/leafsr/gcc-poison;gcc poison gcc poison simple header developer ban unsafe function application pragma gcc poison directive define number identifier function name unsafe compilation fail present please see information usage include include include gcc poison int main int argc char argv char buf strcpy buf argv return gcc function main error attempt poison strcpy exclude specific function poison point gcc documentation poison identifier appear part expansion macro define identifier poison error let poison identifier without worry system header define macro gcc poison continue allow usage strcat function via macro define _unsafe_strcat strcat include gcc poison int main void char raise error strcat char lol raise error _unsafe_strcat char lol note must define macro include gcc poison handy way allow developer continue certain function libc safe alternative force acknowledge unsafely
C C++;https://github.com/oclint/oclint;oclint github action coverage oclint static analysis tool improve quality reduce defect inspect objective look potential problem visible compiler possible bug empty else try catch finally statement unused unused local variable parameter complicate high cyclomatic complexity npath complexity high redundant redundant statement useless parenthesis smell long method long parameter list bad practice invert logic parameter reassignment information visit
C C++;https://github.com/apache/incubator-mxnet;apache mxnet incubate deep github release late github github github github good first github pull request github twitter apache mxnet deep framework design efficiency flexibility allow mix symbolic imperative maximize efficiency productivity core mxnet contain dynamic dependency scheduler automatically parallelize symbolic imperative operation fly graph optimization layer top make symbolic execution fast memory efficient mxnet portable lightweight scalable many gpus machine mxnet deep project mission democratize collection blue print deep system interest insight system hacker license license branch status centos cpu centos gpu clang edge miscellaneous sanity unix cpu unix gpu website window cpu window gpu documentation centos cpu centos gpu clang edge miscellaneous sanity unix cpu unix gpu website window cpu window gpu documentation feature numpy like program interface integrate new easy gluon interface numpy user easily adopt mxnet start deep automatic hybridization provide imperative program performance traditional symbolic program lightweight memory efficient portable smart device native cross compilation support arm ecosystem project scale multi gpus distribute set auto parallelism extensible backend support full customization allow integration custom accelerator library house hardware without need maintain fork support cloud friendly directly compatible aws azure content api stay connect stay connect social medium social medium new mxnet release mxnet release mxnet release mxnet release mxnet patch release mxnet release mxnet patch release mxnet release mxnet patch release mxnet release mxnet release mxnet release mxnet release mxnet patch release mxnet release mxnet release apache apache incubator project mxnet release release doc architecture release_note_0_9 first official release release nnvm refactor doc architecture release_note_0_9 nnvm branch merge master official release make soon ecosystem news onednn fast cpu performance doc python_docs tutorial performance backend dnnl dnnl_readme mxnet memory monger deep net sublinear memory tutorial nvidia gtc mxnet javascript package deep browser without guide create new operator bind stay connect channel purpose follow mxnet development see mxnet project mxnet confluence wiki mxnet developer wiki information relate project development maintain contributor developer request write access send email send request dev list mailto dev mxnet apache org subject request 20cwiki 20write 20access dev mxnet apache org mail dev list discussion development mxnet subscribe send email dev subscribe mxnet apache org mailto dev subscribe mxnet apache org ask answer mxnet usage question apache slack mxnet connect mxnet apache developer join mxnet slack channel send request dev list mailto dev mxnet apache org subject request 20slack 20access follow mxnet social medium social medium get update new feature event social medium keep connect late mxnet news update apache mxnet twitter contributor user blog mxnet discus mxnet mxnet apache mxnet youtube channel apache mxnet linkedin history mxnet emerge collaboration author project reflect past project mxnet combine aspect project achieve flexibility speed memory efficiency tianqi chen yutian min lin naiyan wang minjie wang tianjun xiao bing chiyuan zhang zheng zhang mxnet flexible efficient machine library heterogeneous distribute neural information process system workshop machine system
C C++;https://github.com/billyquith/ponder;ponder linux osx window current status alpha api unstable feature add change new version replace boost add lua bind refactored remove wart ease future development add serialisation api evolve ponder multi purpose reflection library provide abstraction high level concept class enumeration function property supply good support compile time reflection runtime reflection involve bake compile time reflection executable runtime ponder present simple api bake object runtime bake also optionally userdata support lua script feature api expose object runtime api create object call function read modify property automatic lua bind generation link homepage github release note rel maintainer compiler support require compsupp msvc xcode gcc clang ponder cmake generate project project doc make ponder system cmake support package manager window vcpkg vcpkg vcpkg ponder history ponder fork camp camp retire original author camp rely boost pre ponder boost dependency remove instead feature camp develop technogerma system france tegesoft tege see changelog changelog release note rel detail ponder change rel tege camp vcpkg compsupp
C C++;https://github.com/mtcp-stack/mtcp;readme mtcp highly scalable user level tcp stack multicore system mtcp source distribute modify bsd license detail please refer license license term io_engine driver port application may differ mtcp prerequisite require follow library mtcp libdpdk intel dpdk package libps packetshader engine library netmap driver libnuma libpthread librt libgmp dpdk onvm driver compling psio dpdk netmap onvm driver require kernel header debian ubuntu try apt get linux header uname modify dpdk package export net_device stat intel base ethernet adapter achieve create new lkm dpdk iface kmow also modify rte app ease compilation process mtcp application recommend package dpdk installation ccp support optionally congestion control rather mtcp wide selection congestion control algorithm ccp currently feature experimental revision congestion control disable default require ccp library would like enable ccp simply configure script enable ccp option rust installation method fine recommend rustup ccp command line utility library come reno cubic default ccp get add others also need link application lccp lstartccp demonstrate apps makefie include directory mtcp mtcp source directory mtcp src source mtcp src include mtcp internal header mtcp lib library mtcp include header application io_engine event drive packet engine io_engine io_engine driver driver source io_engine lib io_engine library io_engine include io_engine header io_engine sample sample io_engine application mtcp dpdk intel plane development kit dpdk apps mtcp application apps application see readme mtcp port see apps apache_benchmark mtcp port apache benchmark see readme mtcp util useful source application config sample mtcp configuration may necessary guide mtcp prepare way dpdk version dpdk submodule setup dpdk press compile x86_64 native linuxapp gcc version press igb_uio driver intel nics press setup 2mb hugepages press register ethernet port press quit tool device work dpdk driver list page please make sure nic compatible move next step dpdk submodule dpdk driver fyi pas different dpdk source directory command line argument bring dpdk compatible interface set rte_sdk rte_target environment variable intel nics interface dpdk prefix setup mtcp library default mtcp assume cpu system set cpu limit core system follow command please note nic support queue equal max_cpus value since mtcp expect queue cpu bind case configure script print error follow command step configure checksum offload nic enable default work dpdk moment disable checksum offload check libmtcp mtcp lib check header mtcp include check binary apps check configuration apps epserver conf server side configuration epwget conf client side configuration may write configuration application application revert back change follow script press unbind ethernet port press remove igb_uio driver press remove hugepage mapping press quit tool psio version make io_engine driver check ps_ixgbe please note psio linux kernel linux linux driver refer may need change address setup mtcp library default mtcp assume cpu system set cpu limit core system follow command please note nic support queue equal max_cpus value since mtcp expect queue cpu bind case configure script print error follow command step configure check libmtcp mtcp lib check header mtcp include check binary apps check configuration apps epserver conf server side configuration epwget conf client side configuration may write configuration application application onvm version new mtcp application server client locally local setup useful machine available experiment onvm configuration place conf apps directory onvm basic explain application make sure onvm_mgr also core overlap application onvm_mgr allow opennetvm follow set dpdk interface next bring dpdk register interface setup setup mtcp library default mtcp assume cpu system set cpu limit core system follow command please note nic support queue equal max_cpus value since mtcp expect queue cpu bind case configure script print error follow command step configure checksum offload nic enable default work dpdk moment disable checksum offload check libmtcp mtcp lib check header mtcp include check binary apps check configuration apps epserver conf server side configuration epwget conf client side configuration may write configuration application application revert back change follow script press unbind ethernet port press remove igb_uio driver press remove hugepage mapping press quit tool note start onvm_mgr sometimes mtcp application may fail get launch due error resemble mention prevent base virtual address parameter onvm manager core list arg 0xf8 actually mtcp nfs require netmap version see readme netmap detail test environment mtcp linux base operate system psio generic x86_64 cpu help evaluation provide test environment follow intel xeon octacore cpu ghz ram memory channel gbe nic intel chipset specifically intel x520 da2 debian linux amd64 intel core quadcore cpu ghz ram memory channel gbe nic intel chipset specifically intel x520 da2 ubuntu linux event drive packetshader engine extend io_engine psio currently compatible linux test dpdk version poll driver linux kernel note mtcp currently fix memory pool mean size tcp receive send buff fix startup increase dynamically could performance limit large long live connection sure configure buff size appropriately size workload client side mtcp support mtcp_init_rss create address pool fetch available address space easily congest server side function call application startup support socket option limit right please refer mtcp src api detail counterpart mtcp enable tcp timestamp mtcp test follow ethernet adapter intel ixgbe max queue limit intel ixgbe max queue limit intel i350 igb max queue limit intel x710 i40e max queue limit intel x722 i40e max queue limit frequently ask question quit application gracefully shutdown application consecutive separate sec force quit application address specify ifconfig linux distros ubuntu networkmanager may assign different address delete assign address disable networkmanager temporarily case networkmanager enable upon reboot statically set rout arp table yes mtcp allow static route arp configuration config directory see sample_route conf sample_arp conf copy adapt condition link config directory application directory mtcp find config route conf config arp conf static configuration caution remove driver mtcp application application panic ps_ixgbe dpdk driver contain package place io_engine github contact github issue board prefer way report bug ask question mtcp contact author user mail list eunyoung jeong asim jamshed
C C++;https://github.com/dropbox/json11;json11 json11 tiny json library provide json parse serialization core object provide library json11 json json object represent json value null bool number int double string std string array std vector object std map json object act like value assign copy move compare equality order also helper method json dump serialize json string json parse static parse std string json object easy make json object new initializer syntax json my_json json object key1 value1 key2 false key3 json array std string json_str my_json dump also implicit constructor allow standard user define type automatically convert json class point public int int point int int json to_json const return json array std vector point std string points_json json point dump json value value query inspect json json json array json object std string str json string_value documentation see json11 hpp
C C++;https://github.com/benhoyt/inih;inih ini invent inih ini invent simple ini parser write couple page design _small simple_ good embed system also compatible style ini include rfc style multi line syntax name value entry give ini_parse ini call callback every name value pair parse give string section name value way sax style work well low memory embed system also make kiss also call ini_parse_file parse directly object ini_parse_string parse string ini_parse_stream parse custom fgets style reader function custom release browse source read inih dry macro compile time option control various aspect inih preprocessor define syntax option multi line entry default inih support multi line entry style configparser disable add dini_allow_multiline utf bom default inih allow utf bom sequence 0xef 0xbb 0xbf start ini disable add dini_allow_bom inline comment default inih allow inline comment character disable add dini_allow_inline_comments also specify character start inline comment ini_inline_comment_prefixes start line comment default inih allow start comment begin line override change ini_start_comment_prefixes allow value default inih treat name value line error allow name value add dini_allow_no_value inih call handler function value set null parse option stop first error default inih keep parse rest error stop parse first error add dini_stop_on_first_error report line number default ini_handler callback receive line number parameter need add dini_handler_lineno call handler new section default inih call handler name value pair detect new section ini multiple section name add dini_call_handler_on_new_section handler function call time new section encounter section set new section name name value set null memory option stack heap default inih create fix size line buff stack allocate heap malloc instead specify dini_use_stack maximum line length default maximum line length stack heap byte override add something like dini_max_line note ini_max_line must long line due nul initial malloc size ini_initial_alloc specify initial malloc size heap default byte allow realloc default heap dini_use_stack inih allocate fix size buff ini_initial_alloc byte allow grow ini_max_line byte double need set dini_allow_realloc custom allocator default heap standard library malloc free realloc function custom allocator specify dini_custom_allocator dini_use_stack must define link function name ini_malloc ini_free ini_allow_realloc set ini_realloc must signature stdlib memory allocation function simple stl also easy inireader store value map let get simple api work fine fully fledge plan work api moment want bite power getsections getfields function see fork difference configparser difference inih standard library module ini name value pair give section header treat valid item section section name empty string configparser section error line continuation handle lead whitespace continue line like configparser however instead concatenate continue line together treat separate value key unlike configparser platform specific note window win32 utf filename natively handle unicode path need call _wfopen open ini_parse_file parse inih include wchar_t unicode handle meson note meson require compile inih main purpose distribution default meson set distro installation behavior configure embed case ddefault_library static static library ddistro_install false library header pkg config instal dwith_inireader false disable library compile time option implement meson well take look definition work distro_install set true want inih program may ship distro consider link share library pkg config entry inih inireader case inih meson subproject inih_dep inireader_dep dependency variable might want set default_library static distro_install false subproject official wrap provide packagers want tag version pkg config need downstream add version license tag project function version meson project_version soversion tag library function inih tipi inih easily project simply add follow entry tipi deps require include path project vcpkg inih dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg inih inih port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository relate link conan package conan package manager
C C++;https://github.com/3Hren/blackhole;blackhole eat log pleasure blackhole attribute base logger strong focus gain maximum performance possible kind logger feature attribute attribute core feature blackhole technically speak key value pair escort every log record http server produce access log like splitted index attribute blackhole allow specify number attribute want provide ability work write final destination elasticsearch share library despite header dark past blackhole develop share library radical change distribute process choose many reason mainly header library big disadvantage change may recompiling dependency otherwise weird runtime error symbol load race reason personal aim reduce compile time fuck huge course disadvantage virtual function call cost close door inlining personal benchmark drive development help avoid performance degradation plan share library inline namespaces optional compile time inline message transformation compile time placeholder type check compile time placeholder spec check like format printf like format support inline message attribute scoped attribute wrapper custom verbosity custom attribute format optional asynchronous pipelining queue block overload queue drop overload count drop message handler formatters string pattern optional placeholder configurable leftover placeholder json tree reconstruction sink color terminal output syslog socket udp socket tcp block non block scatter gather logger builder macro line filename attribute initializer json filename string inflector filter category category type sink handler logger experimental note symbol wrap experimental namespace symbol adhere semantic versioning well experimental caution want try super unstable feature change even drop formatters formatters blackhole responsible convert every log record pas byte array representation either human readable string json tree even pack frame string string formatter provide ability configure log output pattern mechanic powerful customization support unlike previous blackhole version string formatter like syntax describe pattern placeholder format specification inside moreover specify timestamp specification directly inside general pattern even format microsecond number since epoch give pattern apply log event expect receive something like may notice severity field align right border see spec pattern timestamp format default representation microsecond extension blackhole attribute place format every custom attribute want scope attribute blackhole support several predefined attribute convenient specification placeholder description severity user provide severity string representation severity severity numeric severity value timestamp number microsecond since unix epoch timestamp spec string representation strftime specification utc timestamp spec string representation strftime specification local timezone timestamp timestamp timestamp process process name process process pid thread thread thread hex opaque value return pthread_self thread thread name unnamed message log message user declare attribute information please read documentation visit follow link general syntax timestamp spec extension note need include brace character literal text escape double special attribute placeholder mean print non reserve attribute reverse order provide key value manner separate comma kind attribute configure special syntax similar timestamp attribute optional separator follow placeholder name value tab separate key value pair like tmethod get pedant full placeholder grammar ebnf let describe precisely give complex leftover placeholder let parse manually see blackhole see give name value parameter description reserve placeholder name indicate blackhole leftover placeholder optional spec marker place placeholder name want apply several extension pattern separator prefix suffix format extension except format surround curly brace name value pattern extension describe attribute format typical blackhole notation suffix require extension identification mean pattern inside pattern write pattern like available sub placeholder attribute name value format spec apply cppformat grammar last format spec also apply entire placeholder 50p separator extension configure key value pair separation nuff say implement yet prefix extension prepended entire empty implement yet suffix extension append entire empty entire format see cppformat rule specification json json formatter provide ability format log record structure json tree attribute handle feature like rename rout mutate much briefly json formatter allow fully dynamic json tree process various external tool like logstash rsyslog lefting however human readable manner blackhole allow control json tree process several predefined option without option produce plain tree level depth log record severity message fatal error please try pair attribute key string look like configuration parameter formatter rename parameter construct hierarchical tree standardize json pointer api information please follow ref attribute rename act much transparently appear rename give attribute name specify alternative attribute rout specify location list attribute place tree construction also specify default location attribute mean root otherwise rout field message severity default pointer mention json look like attribute rename occur rout map message message replace old name new alternative gain maximum speed tree construction filter occur formatter default allow duplicate key mean invalid json tree parser fine really require deal unique key enable unique option involve heap allocation may slow format also formatter allow automatically append newline character end tree strangely require consumer like logstash note json formatter format tree compact style without excess space tab etc convenient formatter construction special builder class implement allow create configure instance class stream api allow avoid constructor make formatter creation look eye candy full table option option type description route object string allow configure nest tree map key must satisfy json specification set new attribute location tree value must either array string mean list attribute configure new place literal mean attribute map object string simple attribute name rename key value newline bool true newline append end message default _false_ unique bool true remove backward consecutive duplicate element attribute list range attribute name name value insert filter last insert default _false_ mutate timestamp string replace timestamp field new value transform give _strftime_ pattern mutate severity string replace severity field string value current severity value sink null sometimes need drop log event matter benchmarking purpose case null output sink ignore record common configuration sink look like console represent console sink responsible write incoming log event directly terminal select standard output ability optionally colorize string sink automatically detect whether destination stream tty disable color output otherwise make possible redirect standard output without escape cod garbage note despite std cout std cerr thread safety undefined behavior guarantee insufficiently safe work multiple thread lead message intermix avoid global mutex internally kind hack stdout stderr usage outside logger probably character mix undefined behavior invoke configuration note currently color configure dynamic factory json yaml etc builder represent sink write format log event locate specify path path contain attribute placeholder mean real destination name deduce runtime provide log record ready yet real open construction time open default append mode mean seek end stream immediately open sink support custom flush policy allow control hardware write load implement policy right fully automatic without configuration mean sink decide whether flush record consume count record write simple counter mean flush least every record consume underlie decide often value mean sink flush every log event dramatically performance degradation count number byte write blackhole know byte megabyte even mibibytes etc note guarantee sink always flush buff destruction time guarantee conjunction thread safe logger reassignment allow implement common sighup reopen log rotation blackhole create intermediate directory potential trouble acl instead exception throw anyway catch internal log system notify stdout note associate open demand first write operation blackhole know follow marginal binary unit byte kilobyte megabyte gigabyte kibibyte kib mibibytes mib gibibyte gib read socket socket sink category contain sink write output remote destination specify host port currently send either tcp udp tcp appender emit format log event connect tcp socket option type description host string require name address system listen log event port u16 require port host listen log event udp nuff say syslog option type description priority i16 require priority map severity number configuration blackhole configure mainly way experimental builder abstract factory gof yeah builder first way involve _experimental_ yet builder library component formatter sink etc appropriate builder specialization create instance associate component flow way std unique_ptr component sorry rust also call static initialization must know configuration log system compile time suit another way factory also call dynamic initialization recommend way configure blackhole implement kind dependency injection external source like json xml folly dynamic blackhole implement initialization json easily extend plugin need implement proper interface allow tree like traverse config object configure library json std unique_ptr object information see class include blackhole config include blackhole config magic happen look implement factory please see src config src config directory facade say raw logger interface inconvenient true unfortunately must work simple case intermediate message format require without attribute complex case lazy message format occur attribute provide remain time fast possible give high performance solution let take look interface avoid manually create structure special extension provide facade word thin template adapter give logger extend interface provide method make log convenient describe method abuse random http log event success serve simple case thin wrapper transform string string view pas sometimes want provide additional attribute case pas initializer list often want format message predefined pattern argument obtain runtime last combine previous obtain something really useful note attribute list argument must last need create logger import facade definition wrap logger show improve runtime type information library successfully compile without rtti fno rtti flag possible bottleneck timestamp format system clock replace specific clock gmtime manual std generation without mutex shit temporary buff affect much another log library first question ask see yet another silver bullet library first require logger attribute support boost log fine compile compiler sad realize bottleneck locate log part boost log log4cxx fit requirement thirdly develop stable old linux distributives relatively old compiler support basic part last least library fatal disadvantage honest let describe popular log library advantage disadvantage may fit requirement may want instead okay boost logv2 develop another crazy russian programmer dark template magic vodka sure first perfect powerful library seriously pro fuck boost many people want depend another library wish apt get instead attribute large community bug highly configurable good documentation con sadly restrict late boost version hard hack extend unless fine template template template variadic template templated template template andrei alexandrescu relatively poor performance high log4cxx enough require rtti log4cxx log framework pattern apache log4j yeah java pro absolutely barrier entry really copy paste tutorial work amaze con leak april attribute really slow performance seem like really support spdlog extremely ultra bloody fuck fast log library least documentation say fast speed light everyone know even light unable leave blackhole pro really fast check header sure advantage small project fine easy extend plain straightforward magically easy understand dependency nice kitty author avatar con attribute custom filter custom verbosity level restrict functionality provide library nothing notable change first entire library completely rewrite performance reason attribute copy unless really require asynchronous log nest attribute organize flatten range drop boost format hell hard find slow library format compilation stage runtime instead perfect library compile time constexpr extension predefined attribute fast read access like message severity timestmap etc cppformat participation new like format syntax placeholder replacement severity map numeric representation string configure generic configuration source requirement compiler yep open additional functionality boost thread development git workflow feature fix develop separate branch bug discover development certain feature may fix branch parent issue also true small feature branch structure master master branch contain stable work version develop development branch fix feature first merge issue issue issue enhancement bug fix coverage
C C++;https://github.com/json-c/json-c;mainpage json overview status overview get help gettinghelp unix buildunix prerequisite installprereq command buildcmds cmake option cmake test test vcpkg buildvcpkg link libjson link json json json json implement reference count object allow easily construct json object output json format string parse json format string back representation json object aim conform rfc skip json check api already json instal ready home page json get help question json please start thread forum believe discover bug report please sure include version json relevant detail fully reproducible test case patch fix problem greatly appreciate fix bug small new feature directly submit pull major new feature large change kind please first start discussion unix git gcc cmake already json instal see link libjson link link program status appveyor appveyor travis travis test status coverage prerequisite gcc clang another compiler cmake recommend cmake test generate doc also need doxygen relatively modern system likely able prerequisite package system apt ubuntu lts instruction json github repo note also possible put directory inside json source directory even separate directory certain thing might work quite right notably make distcheck generate documentation doxygen library documentation generate directly source doxygen tool cmake option json library take option variable type description cmake_install_prefix string location cmake_build_type string default debug build_shared_libs bool default generate dynamic dll library set create static library build_static_libs bool default generate static lib library set create share library disable_static_fpic bool default position independent set create share library disable_bsymbolic bool disable bsymbolic function disable_thread_local_storage bool disable thread local storage have___thread disable_werror bool disable werror disable_extra_libs bool disable extra library libbsd disable_json_pointer bool omit json_pointer support enable_rdrand bool enable rdrand hardware rng hash seed enable_threading bool enable partial thread support override_get_random_seed string block instead default json_c_get_random_seed embed platform even fallback time work must single line pas option cmake command line partial thread support although json support fully multi thread access object tree help make thread program bite safe currently limit atomic operation json_object_get json_object_put since may performance impact least slow accord disable default may turn adjust cmake command denable_threading separately default hash function object field key lh_char_hash compare swap operation ensure random seed generate time operation always compile compare swap operation available cmake configure wrapper script familiar old autoconf autogen configure method cmake configure wrapper script ease transition cmake cmake configure take option option description prefix prefix architecture independent prefix enable thread enable support partly multi thread enable rdrand enable rdrand hardware rng hash seed generation support x86 x64 platform enable share share library default yes enable static static library default yes disable bsymbolic avoid link bsymbolic function disable werror avoid treat compiler warn fatal error test default valgrind available test slow test considerably disable test separate directory recommend test fail check test temporary lasttest log test testsubdir testname testname similar insufficient output try check log unix window vcpkg json dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg json json port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository link libjson system pkgconfig add makefile without pkgconfig might something like project cmake add cmakelists txt might project json json either include json preferably follow specific header json_object core type method json_tokener method parse serialize json object tree json_pointer json pointer rfc retrieve object json object tree json_object_iterator method iterate single json_object instance see also json_object_object_foreach json_object json_visit method walk tree json object json_util miscellaneous utility function full list header see primary type json json_object describe reference count tree json object create either parse text json_tokener json_tokener_parse_ex create json_object_new_object json_object_new_int etc add json_object_object_add json_object_array_add etc individually typically every object tree reference parent tree object call json_object_put root object free recur child object call json_object_put turn get reference single child json_object_object_get json_object_array_get_idx object long parent valid need child object live long parent increment child refcount json_object_get allow survive parent free remove parent json_object_object_del json_object_array_del_idx parse text json_tokener object independent json_object return allocate json_tokener_new multiple time json_tokener_parse_ex free json_tokener_free json_object object live json_object tree serialize back string json_object_to_json_string_ext string return valid next to_json_string call object also free json_object free
C C++;https://github.com/wmcbrine/PDCurses;pdcurses stable beta see git repository git pdcurses public domain curse library window console x11 sdl implement function available open xopen system curse support many compiler platform x11 port let recompile exist text mode curse program produce native x11 application pdcurses distribute mainly source pre compile library may available late version find change see history main documentation doc directory mail list low traffic mail list announcement discussion subscribe email list server first line body message contain subscribe pdcurses read mail list archive link doc doc github page git sourceforge page open curse xopen legal stuff core package port public domain demo x11 xstatus directory subject copyright license describe software provide warranty whatsoever maintainer william mcbrine git history doc history doc doc readme list server mailto majordomo lightlink com archive sourceforge page xopen readme os2 readme sdl sdl2 readme window wincon readme x11 x11 readme demo demo readme distribution status xstatus x11 readme distribution status william mcbrine
C C++;https://github.com/boost-experimental/ut;like put _test beyonce rule motivation motivation quick start quick start overview overview tutorial tutorial user guide user guide faq faq benchmark benchmark single header single module macro free micro unit test framework motivation test important part software development however provide good test facility box often lead poor test experience develop lack test coverage general treat test production additionally well establish test practise test drive development drive development often follow due reason follow snippet common test project quite problem approach name test hard follow intention reader automatic registration test way specific test hard debug assertion provide information fail hard scale easy path forward parameterized test multiple suit parallel execution etc hard integrate easy way custom output xml integration easy make mistake implicit cast float point comparison pointer comparison string etc hard follow good practise tdd bdd lack support section declarative expression try address issue simplify test experience simple step get single integrate project simple concept expect test suite api good okay great would similar test framework already available great question unique feature make worth try firstly support basic unit test framework feature automatic registration test assertion suit etc easy integrate macro free make test experience much nice modern feature instead macro opt rather compulsory still macro macro flexible part framework runner reporter printer customize basically unit test framework implement top primitive small curve simple concept expect test suite api leverage feature support complex test parameterized fast compile execute similar framework make suitable big project without additional hassle benchmark benchmark support tdd bdd workflow support gherkin specification support spec sound intrigue interest tutorial tutorial user guide user guide quick start slide overview dependency cpp test compiler gcc clang apple clang msvc clang single header module macro free work work easy minimal api api test suite operator literal expect fast compile execute benchmark benchmark feature integration tutorial step get get late late header module include import compile optional optional cmake integration project provide cmake config target load find_package import boost target link target add necessary include directory single header demonstrate follow optional integration package available conan include project conanfile boost ext step expect let write first assertion shall okay let make fail notice expression print instead get false let print okay print expect notice user define literal udl 1_i compile time constant integer value allow override comparison operator disallow comparison different type see user guide user guide detail alternatively terse notation expect require expression syntax also available okay case assertion fatal mean program crash unless process terminate nothing easy let add fatal expect expression make fatal expression complex simple comparison problem logic operator also support expect add custom message though sure expect call streamable step group assertion great combine cohesive unit test case way allow group expectation functionality coherent unit alternatively test hello world notice test assert let make first end end test case shall would like nest test though share setup tear lambda represent test section easily achieve let take look follow nice easy believer behaviour drive development bdd support yes bdd syntax top feature scenario alias leverage gherkin yeah let rewrite gherkin specification nice spec notation support well great call test different argument type dry repeat parameterized test rescue alternatively convenient test syntax also provide check read step scale okay project complex scale test suit make possible suite translation unit test define inside automatically register next user guide user guide assertion test skip tag section behavior drive development bdd gherkin spec parameterized whenever need know specific type test fail reflection type_name like suit misc log matcher exception abort config runner reporter printer user guide api configuration option description boost_ut_version current version faq work suite test expect section behaviour drive development bdd spec try online header module fast compilation time benchmark leverage cpp feature avoid unique type lambda expression type name erasure allow type function memoization limit preprocessor work single header module minimal number include simplify version std function std string_view feature api source assertion expect false __file__ __line__ fail false designate configuration cfg filter test non type template constant matcher constant 42_i template parameter list generic parameterized test type _test operator operator operator import boost integration parameterized test expansion statement standardization option personally believe standard could benefit common test primitive expect _test low entry level language need third party library improve education aspect standard way make language coherent stable consistent design feature stable api make test first class citizen show community care aspect language allow publish test standard library stl standard way coherency easy extend allow act additional documentation way verify whether particular conform quality self verification help establish standard vocabulary test common across stl project still macro sure although please notice negative macro error message might clear point wrong line global scope pollute type safety ignore mock stub fake consider follow framework microbenchmarking benchmark benchmark cpp consider follow framework relate material talk boost unit test framework kris future test kris macro free test kris like put _test beyonce rule kris principle unit test dave steffen kris empirical unit test dave contribute contribute github contribute benchmark framework version standard license linkage test configuration boost single header library static library bsd library static library boost single header catch_config_fast_compile mit single header doctest_config_super_fast_asserts boost single header module test assert cpp test assert cpp test assert cpp test assert cpp test assert cpp test assert cpp cpp change test assert cpp test assert cpp header precompiled header module disclaimer official boost library
C C++;https://github.com/boostcon/cppnow_presentations_2013;presentation note presentation exceed github blob size limit 10mb presentation split multiple part clone repo however get access original unsplit monday jeff garland library week boost cookbook cookbook daniel quinlan keynote high performance compute within doe past future rob stewart survey multi thread program support thiago macieira event loop pipereader source boris schaling container tony van eerd low level thread leor zolman zephyr overview eric niebler first look pptx tony van eerd non allocate abel sinkovics boost mpl haskell tuesday jeff garland library week boost cookbook cookbook chandler carruth keynote optimize emergent structure scott schurr sweat small stuff brace initialization union david sankel intellectual ascent hartmut kaiser vinay amatya hpx standard compliant runtime system asynchronous parallel distribute edouard alligand scale phil miller laxmikant kale ramprasad venkataraman parallel program john bandela easy binary compatible interface across ppt michael wong transactional memory dominik charousset matthias vallentin libcppa design actor semantic thiago macieira binary compatibility library wednesday jeff garland library week boost cookbook iii cookbook stanley lippman keynote yet another paradigm shift meta4 pptx joel guzman inside spirit redesign boost spirit part part part part larisse voufo weak hide concept via framework reason name bind program pptx thiago macieira qt5 challenge richard saunders thread safe thread neutral boris kolpackov practical add support john lakos apply hierarchical reuse capitalize bloomberg foundation library part part part pptx joel falcou mathias gaunard boost dispatch generalize tag dispatch infrastructure karl rupp discussion select vienna library computational michael spencer alignment limitation extension jon kalb hijacker guide keynote jens well community development thursday jeff garland library week boost cookbook cookbook alex fabijanic dynamic david sankel debruijn bind powerful bind retain pptx rob stewart multi thread andrew sutton concept lite constrain template alex fabijanic look update html5 boris kolpackov odb orm alisdair meredith allocator boris schaling boost graph marshall clow fun michael caisse solve world problem sumant tambe standardize distribution service api modern sebastian redl overload member access vassil vassilev interactive introspect bryce adelstein lelbach boost asio boost serialization design pattern object pptx zoltan porkolab debug profile template friday jeff garland library week boost cookbook cookbook richard saunders clinton jeffery dynamic recursive heterogeneous type statically type julian storer projucer live cod llvm jit bart janssens finite element matrix expression boost proto eigen sample louis dionne system resource deadlock prevention intrusive dynamic
C C++;https://github.com/Tencent/ncnn;ncnn language grade ncnn high performance neural inference compute framework optimize mobile platform ncnn deeply considerate deployment mobile phone begin design ncnn third party dependency cross platform fast know open source framework mobile phone cpu developer easily deploy deep algorithm mobile platform efficient ncnn create intelligent apps bring artificial intelligence fingertip ncnn currently many tencent application qzone wechat pitu ncnn ncnn cpu ncnn app ncnn qzone pocky mlir yes multi level intermediate representation telegram group discord channel current status matrix system cpu 32bit cpu 64bit gpu 32bit gpu 64bit linux gcc linux clang linux arm linux mips linux risc linux loongarch window window arm macos macos arm android android x86 simulator webassembly risc gcc newlib support commonly cnn cnn classical cnn inception practical cnn light weight cnn face detection detection detection detection detection segmentation pose estimation howto ncnn linux window macos raspberry pi3 android nvidia jetson webassembly allwinner loongson 2k1000 linux nvidia jetson raspberry window x64 arm cortex family hisilicon platform macos allwinner loongson termux prebuild binary package android ncnn detail step recommend beginner ncnn netron ncnn box web ncnn low level operation ncnn param ncnn operation param weight implement custom layer step faq ncnn throw ncnn produce wrong ncnn feature support convolutional neural support multiple input multi branch structure calculate part branch third party library dependency rely blas nnpack compute framework pure cross platform support android arm neon assembly level careful optimization calculation speed extremely high sophisticate memory management structure design low memory footprint support multi core parallel compute acceleration arm big little cpu schedule optimization support gpu acceleration via next generation low overhead vulkan api extensible design support 8bit quantization half precision float point storage import caffe pytorch mxnet onnx darknet kera tensorflow mlir support direct memory copy reference load register custom layer extend well strong afraid stuff qvq blas nnpack android arm neon arm big little cpu vulkan api gpu 8bit tool quantize caffe pytorch mxnet onnx darknet kera tensorflow mlir qvq support platform matrix know work fast good optimization know work speed may fast enough shall work confirm apply window linux android macos intel cpu intel gpu amd cpu amd gpu nvidia gpu qcom cpu qcom gpu arm cpu arm gpu apple cpu apple gpu project license bsd clause license txt
C C++;https://github.com/libsigcplusplus/libsigcplusplus;libsigc typesafe callback framework introduction libsigc implement typesafe callback system standard allow define signal connect signal callback function either global member function regardless whether static virtual libsigc gtkmm wrap gtk signal system depend gtk gtkmm see libsigc web license distribution library component lgpl list copy test public domain compatibility compatible compiler must support decltype auto specifier std invoke whenever possible official binary package approve supplier operate system linux distribution instance ubuntu linux debian linux fedora linux official libsigc package release tarball libsigc release easy git easy meson tarball make meson autotools tarball make autotools maintainer mode know tarball make make meson contain untracked build_scripts untracked doc possibly subdirectory untracked tarball meson call builddir directory call autotools instance tarball autotools instance git git difficult prefer release tarball unless need work libsigc jhbuild good help see jhbuild jhbuild git meson must meson properly instal meson ninja etc also need version high maintainer mode enable default git clone call builddir directory call autotools git autotools must autotools properly instal autoconf automake etc also need git cmake cmake often libsigc developer work would welcome improvement instance microsoft visual see msvc_nmake readme txt
C C++;https://github.com/onqtam/doctest;master branch dev branch doctest new test framework far fast compile time order magnitude doc markdown benchmark runtime compare feature rich alternative bring ability compile language test write directly production thank fast transparent flexible test runner clean interface cii best language grade chat try new feature maintenance work company doctest mean please consider financial support monthly donation via patreon via paypal test single registry executable_dll_and_plugin cost include framework header script benchmark header png allow framework way test write directly production test form documentation able reside near production test make barrier write test much low make separate source include bunch stuff add system add source control write test class piece functionality bottom source even header test production think documentation date comment showcasing apis test internals expose public api header long mind bend exercise test drive never easy framework like without mix production test check feature doc markdown feature doctest part take directly check difference doc markdown faq doctest different catch compare doctest similar checkout cppcon get good understand framework work read jetbrains highlight unique aspect framework short description framework along production could refer github also old february edition accu overload cppcon talk doctest documentation project feature design goal doc markdown feature complete list feature roadmap doc markdown roadmap upcoming feature benchmark doc markdown benchmark compile time runtime supremacy contribute contribute make proper pull request changelog changelog generate changelog base close issue usage tutorial doc markdown tutorial make sure read part documentation assertion macro doc markdown assertion test case subcases test fixture doc markdown testcases parameterized test case doc markdown parameterized test command line doc markdown commandline log macro doc markdown log entry point doc markdown main configuration doc markdown configuration string conversion doc markdown stringification reporter doc markdown reporter extension doc markdown extension faq doc markdown faq system doc markdown system contribute
C C++;https://github.com/danielaparker/jsoncons;jsoncons jsoncons header library construct json like format support format enable work number way variant like structure basic_json doc ref basic_json strongly type structure implement json_type_traits doc ref json_type_traits cursor level access stream parse event somewhat analogous stax pull parse push serialize xml world compare json library jsoncons design handle large json text heart sax style parser serializers support read entire json text memory variant like structure also support efficient access underlie stax style pull parse push serialize support incremental parse user prefer form information user type provide specialization json_type_traits doc ref json_type_traits jsoncons doc ref support familiar json type null booleans number string array object plus byte string addition jsoncons support semantic tag datetimes epoch time big integer big decimal big float binary encode allow preserve type semantics parse json like format cbor jsoncons distribute boost software jsoncons free welcome support sustain development find library helpful please consider make time become heart extension bson doc ref bson bson implement decode encode binary format cbor doc ref cbor cbor implement decode encode ietf standard concise binary object format addition support tag tag type csv doc ref csv csv implement decode encode csv jmespath doc ref jmespath jmespath implement query language transform json document json document jsonpatch doc ref jsonpatch jsonpatch implement ietf standard javascript object notation json json_merge_patch doc ref json_merge_patch json_merge_patch implement ietf standard json merge jsonpath doc ref jsonpath jsonpath implement stefan goessner also support search replace jsonpath expression jsonpointer doc ref jsonpointer jsonpointer implement ietf standard javascript object notation json jsonschema doc ref jsonschema jsonschema implement json schema draft specification validate input json since msgpack doc ref msgpack msgpack implement decode encode format ubjson doc ref ubjson ubjson implement decode encode universal binary json format user say happy come across json library finally decide jsoncons evaluate quite json library library external interface pas well conversion csv json really helpful convert javacode verify need json cbor work perfectly jsonpath feature library great jmespath quite extensively serialization lib choice beautiful mapping ease really good awesome project solid dependable team love repo rock get jsoncons platform library manager jsoncons late unpack zip copy directory include jsoncons include directory wish extension copy include jsoncons_ext well late quick doc reference doc reference ask question suggest idea new library require compiler support addition library define jsoncons endian jsoncons basic_string_view jsoncons optional jsoncons span typedefed standard library equivalent detect otherwise typedefed internal compatible library exception case report error apart jsoncons assertion_error jsoncons exception class implement jsoncons json_error doc ref json_error interface exception disable compile time macro jsoncons_no_exceptions define throw become call std terminate benchmark provide measurement jsoncons compare json library jsontestsuite json_checker test performance benchmark text performance benchmark text jsonpath show jsoncons jsonpath compare work json work cbor work json need include header initialize string json jsoncons allow work number way variant like structure basic_json doc ref basic_json strongly type structure implement json_type_traits doc ref json_type_traits cursor level access doc ref basic_json_cursor stream parse event variant like structure output strongly type structure jsoncons support transform json text structure function decode_json doc ref decode_json encode_json doc ref encode_json convert string stream json structure back decode encode work class json_type_traits doc ref json_type_traits define jsoncons already support many type standard library type support specialize json_type_traits jsoncons namespace output make convenience macro jsoncons_enum_traits jsoncons_n_ctor_getter_traits jsoncons_all_ctor_getter_traits specialize json_type_traits doc ref json_type_traits enum type hiking_experience class hiking_reputon non mandatory member class hiking_reputation mandatory member macro jsoncons_enum_traits generate enum identifier macro jsoncons_n_ctor_getter_traits jsoncons_all_ctor_getter_traits generate get function constructor macro declaration must place outside namespace block see doc way specialize json_type_traits cursor level access typical pull parse application repeatedly process current event call next advance next event return true output apply filter cursor pipe syntax cursor filter1 filter2 output work cbor need include header initialize buff cbor jsoncons allow work cbor similarly json variant like structure basic_json doc ref basic_json strongly type structure implement json_type_traits doc ref json_type_traits cursor level access doc ref cbor basic_cbor_cursor stream parse event variant like structure output strongly type structure output note decode bigfloat decimal fraction std string lose semantic information variant like structure preserve tag serialize back cbor produce text string cursor level access typical pull parse application repeatedly process current event call next advance next event return true output apply filter cursor pipe syntax output support compiler jsoncons require compiler support test continuous integration github undefinedbehaviorsanitizer diagnostics enable select gcc clang since integrate google coverage parser encoders compiler version architecture operate system note microsoft visual studio vs2015 msvc x86 x64 window vs2017 x86 x64 window vs2019 x86 x64 window x64 ubuntu std regex fully implement jsoncons jsonpath regular expression filter support x64 centos std regex fully implement jsoncons jsonpath regular expression filter support red hat x64 fedora release i386 debian clang x64 ubuntu clang xcode x64 osx test suite cmake cross platform tool generate makefiles solution compiler environment choice window window installer linux usually available package ubuntu cmake instal unit test jsoncons directory window unix acknowledgement jsoncons pvs studio static analyzer provide free open source project big thank comp lang community help detail jsoncons platform dependent binary configuration draw excellent mit license thank milo yip author raise quality json library across board publish contact project among others share jsoncons grisu3 algorithm print float point number follow florian loitsch mit license grisu3_59_56 minor modification macro jsoncons_all_member_traits follow approach take martin york jsoncons bson decimal128 string objectid string base apache license special thank
C C++;https://github.com/lballabio/quantlib;quantlib free open source library quantitative finance license bsd clause linux window mac cmake codacy quality coverage quantlib project aim provide comprehensive software framework quantitative finance quantlib free open source library trade risk management real life quantlib non copylefted free software osi certify open source software usage quantlib installation instruction available platform documentation usage design quantlib library available list change past version library browse question feedback prefer channel question large audience quantlib user mail list instruction subscribe bug report github issue patch available open pull request instead see contribute contribute contribution welcome detail
C C++;https://github.com/kgabis/parson;parson lightweight library write feature lightweight simple api address json value dot notation similar structs object language objecta objectb value c89 compatible test suit installation copy parson parson source tree compile test parse json function print basic commit info date sha author github repository call print persistence parson save user information load validate late serialization create json value simple thank dot notation object hierarchy automatically create address specific field follow create simple json value contain basic information person output contribute always merge work bug fix however want add something new api please create issue github first discus end library start implement remember follow parson style write appropriate test project simple program language implement library easy command line flag parse library header emulation library license mit license
C C++;https://github.com/GameTechDev/GTS-GamesTaskScheduler;language top intel game task scheduler gts introduction gts task schedule framework multi processor platform design let developer express application task parallelism let schedule framework maximize physical parallelism available processor key goal simple expression task parallelism highly efficient schedule easy configure extend target audience gts design need current future game engine developer typical engine developer employ highly customize platform scalable task system job system provide dedicate worker thread execute concurrent task thread may also share resource driver middleware video stream thread work synchronize concert deliver glitch free real time render frame per second fps application future game engine cope thread task potentially multiple instruction set architecture isas ever expand hardware landscape gts simple friendly game engine task system case want framework allow game development community experiment different schedule algorithm easily also want framework allow demonstrate state art algorithm task schedule finally want encourage game good express parallelism compute cool stuff enable rich game experience feature easily integrate gts exist game engine complete low level platform override game engine support wide variety operate system hardware platform vary degree custom work arounds since gts possibly support every work around corner case simplify engine integration allow developer completely replace gts platform layer configuration user_config express high level program flow persistent dynamic task dag execute homogeneously heterogeneously macro scheduler jump right parallelism predefined parallel pattern easily communicate thread parallel container carve cpu resource see fit workerpool express low level algorithm highly efficient execution policy micro scheduler task construct remove bottleneck around heap access gts_malloc avoid contention kernel mode synchronization gts user mode synchronization primitive contention reduce construct header free mostly stl free interface gts pollute engine unnecessary header
C C++;https://github.com/fnc12/sqlite_orm;donate twitter sqlite orm sqlite orm light header library modern please read license precisely project agpl license open source project mit license purchase different way contact email fnc12 com status branch travis appveyor advantage raw string query intuitive syntax comfortable interface line per single query modern feature macro external script crud support pure select query support prepare statement support union except intersect support stl compatible custom type bind support blob support map std vector bind custom type foreign key support composite key support join support transaction support migration functionality powerful condition order limit offset support group distinct support index support follow single responsibility principle need write inside class easy integration single header lib dependency libsqlite3 standard style memory database support provide memory empty filename collate support limit set get support user define function support sqlite_orm library allow create easy mapping database schema manage crud object primary key without also allow specify table name column name explicitly matter class actually name take look database predefined schema like create table user integer primary key autoincrement first_name text null last_name text null birth_date integer null image_url text type_id integer null create table user_types integer primary key autoincrement name text null default name_placeholder tell sqlite_orm library schema provide database filename create storage service object crud interface also create every table every column intuitive minimalistic easy specify map type explicitly deduce member pointer pas make column user create column pas argument least name table map class member pointer also add extra argument tell storage column constraint like primary_key autoincrement default_value unique order important not_null deduce type automatically detail make storage find datamodel class private protect member map sqlite make storage setter getter function info crud let create insert new user database first need create user object call insert function return create user throw exception something wrong note need insert new user specify call storage replace user instead insert next let get user probably may like throw exception exception std system_error throw return type get function nullable alternative version get_pointer return std unique_ptr throw not_found_exception nothing find return nullptr std unique_ptr optional sqlite_orm course class optional locate std experimental optional want experimental also update user update row provide user object set non primary_key field value store pas user object assign member user object want call update also non crud update version update_all delete delete pas whole object also need explicitly tell class object want delete function name remove delete delete reserve word also extract object std vector specify return container type explicitly let get user std list std vector container must stl compatible must push_back function case get_all heavy memory iterate row row object object iterate member function return adapter object begin end member function return iterators fetch object dereference operator call crud function get get_pointer remove update insert work type primary key column try get object map storage primary key column std system_error throw sqlite_orm detect want know perform storage without primary key take look date_time cpp folder prepare statement prepare statement strongly type get statement function call allow access field bind statement aggregate function condition also select object custom condition like let select user less select user first name equal john way implement equal different way negation operator case equal also chain several condition operator let try get user query condition like let export user course user exist fact chain together number different condition operator condition templated runtime overhead make sqlite_orm powerful sqlite orm library moreover parenthesis set priority query condition also implement get get_all like let try operator even like look like magic work simple cute function column take class member pointer return special expression middle object operator overload sqlite_orm namespace operator overload act like function is_equal is_not_equal greater_than greater_or_equal lesser_than lesser_or_equal is_null is_not_null simulate binary comparison operator take argument leave hand side right hand side argument may either member pointer map class expression core aggregate function literal subexpression binary comparison function map argument text pas sqlite engine process query member pointer map column name literal variable constant bind automatically next function place bracket around condition add keyword condition text next string append query string process omit function get_all return object table also remove_all function perform delete query type condition raw select need extract single column select column_name table_name condition non crud select function also able select several column vector tuples order support order query option apply get_all select function like order_by function mix single query limit offset available version limit offset option limit limit limit limit offset offset limit offset limit version available interface please beware query limit limit offset mean different limit mean limit offset join support perform simple join cross join inner join leave join leave join query instead join table specify map type doctor visit simple join inner join query join find migration functionality explicit function migration instead sqlite_orm offer sync_schema function take responsibility compare actual schema specify make_storage call something equal alter drop create schema please beware sync_schema guarantee save try save see rule list sync_schema follow call excess table exist ignore drop every table storage compare analog table exist create table exist colums compare table_info column exist storage excess table drop recreate preserve false table copy temporary table without excess column source table drop copy table rename source table sqlite remove column technique preserve true preserve first argument sync_schema function default value false beware set true may take time copy table row column storage exist add alter table add column command table drop add column null default value table drop recreate column exist storage differ property type notnull table drop recreate dflt_value check ambiguity default value please beware best practice call function right storage creation transaction way begin commit rollback transaction explicitly call begin_transaction rollback commit function transaction function begin transaction implicitly take lambda argument return true commit false rollback storage call perform lambda commit rollbacked return true false transaction_guard function return guard object work like lock_guard std mutex explicit call implicit call second way guarantee commit rollback call either way trancations useful change sqlite function return number row modify print number delete user row call change without transaction database locate ram always sqlite_orm open close connection every time call function without transaction also transaction function return true transaction commit false rollbacked useful next action depend transaction transaction_guard function memory database manage memory database provide memory instead filename make_storage comparison libs schema sync yes yes single responsibility principle yes yes stl compatible yes raw string query yes yes yes transaction yes yes yes custom type bind yes yes yes macro external codegen script yes yes aggregate function yes yes yes prepare statement yes yes note work well class must default constructable must const field map database assign query otherwise compile line member assignment operator detail please check project installation note installation necessary plan fetchcontent method see usage popular package manager like vcpkg sqlite orm command source might need admin right last command usage cmake cmake support way cmake another work well support open issue either way choose include path well dependency sqlite3 set automatically target usage straight forward need instal sqlite3 system see requirement find package instal lib system wide path find_package include cmake make target sqlite_orm sqlite_orm available link look find_package full fetch content recommend alternatively cmake project directly github configure stage therefore need lib againt target sqlite_orm sqlite_orm available link look fetch_content full cmake want lib directly make something else set inlcude path correctly correct linux already sqlite_orm sqlite_orm find header lib nothing requirement compatible compiler templated lambda lib sqlite3 instal system path cmake find link project cmake video conference video sqliteman case need native sqlite client macos window sqliteman commercial free native client develop maintainer repo
C C++;https://github.com/fraillt/bitsery;bitsery join chat header binary serialization library design around requirement real time delivery especially game cross platform requirement enforce compile time serialize store meta information small possible bitsery look feedback feature cross platform compatible optimize speed space generation require idl metadata type directly configurable runtime error check deserialization read write source stream stream etc buff vector array etc pay customize serialization via extension notable extension allow fine grain bite level serialization control forward backward compatibility type smart raw pointer allocator support customizable runtime polymorphism easily extendable type allow brief similar verbose syntax good serialization control configurable endianness support macro bitsery look number feature list decide library size ser time time bitsery 6913b 1119ms 1166ms boost 11037b 15391ms 12912ms cereal 10413b 10518ms 10245ms flatbuffers 14924b 9075ms 3701ms msgpack 8857b 3340ms 13842ms protobuf 10018b 21229ms 22077ms yas 10463b 2107ms 1554ms benchmarked ubuntu gcc detail find still convince read library motivation doc design readme section usage detail directly quick start doc tutorial hello_world tutorial documentation comprise part tutorial doc tutorial readme get start reference section doc readme detail documentation progress part empty contribution contribute welcome requirement work compiler additional dependency include bitsery extension might require high standard stdvariant platform library test major compiler window linux macos patch allow bitsery non fully compatible compiler centos gcc license bitsery license mit license license
C C++;https://github.com/OpenImageIO/oiio;readme openimageio cii best introduction primary target audience oiio vfx studio developer tool renderers compositor viewer image relate software would find production pipeline openimageio consist simple powerful imageinput imageoutput apis provide abstraction read write image nearly format without call application need know detail format indeed without call application need aware format available library manage subclass imageinput imageoutput implement specific format format store plug therefore application openimageio apis read write image plugin find runtime plugins implement several popular image format include tiff jpeg jfif openexr png hdr rgbe ico bmp targa jpeg rman zfile fit softimage pic pnm dpx cineon iff openvdb ptex photoshop psd wavefront rla sgi webp gif dicom heif heic avif many raw digital camera format variety movie format readable individual frame develop time several command line image tool base class include oiiotool command line format conversion image process iinfo print detail info image iconvert convert among format type modify metadata idiff compare image igrep search image match metadata image viewer tool base imageinput imageoutput work image format imageio plugins available imagecache class transparently manage cache access truly vast amount image image total multiple efficiently tiny amount megabyte runtime memory texturesystem class provide filter mip map texture lookup atop nice cache behavior imagecache commercial renderers many large vfx animate film imagebuf imagebufalgo function simple class store manipulate whole image memory collection useful computation might want involve image include many image process operation bind major apis license openimageio copyright contributor openimageio project openimageio distribute modify bsd license license also know new bsd clause bsd license documentation license creative common attribution unported plain english bottom line openimageio free well freely modifiable redistributable source binary form may part application whether proprietary open free commercial commercial proprietary application obligate pay particular license term application resource distribute along oiio highly compatible though slightly different license generally mit apache see pdf documentation acknowledgement section third party third party detail installation please read detail instruction openimageio embedplugins remember need set environment variable oiio_library_path point lib directory openimageio instal else able find plugins documentation primary user programmer documentation find html contact report problem simple trouble bug question best ask oiio dev developer mail people see potentially able answer question quickly issue bug problem discover vulnerability relatively certain legit problem give clear instruction reproduce report confidentiality preclude public question issue may contact privately info openimageio org info openimageio org security relate issue security openimageio org security openimageio org contribute openimageio welcome contribution nearly people credit year take contribution via usual github pull request mechanism please see contribute contribute detail instruction web resource main web page github page mail list subscription archive developer mail list release announcement
C C++;https://github.com/p-ranav/csv2;table content csv reader csv reader performance benchmark performance benchmark reader api reader api csv writer csv writer writer api writer api compile test compile test generate single header generate single header contribute contribute license license csv reader performance benchmark benchmark measure average execution time warmup csv2 memory map input csv iterate every cell csv see benchmark main cpp detail hardware apr size row col time denver crime 174s airbnb paris 289s flight delay 047s stacklite stack overflow 505s car 979s title base semantic subject 929s bitcoin tweet 16m 040s ddos balance 648s seattle checkout 883s sha password hash 505s dohui noh 780s reader api public api available row class cell class csv writer library also provide basic csv2 writer class write csv row basic usage writer api public api available compile test generate single header contribute contribution welcome look contribute contribute document information license project available license
C C++;https://github.com/aantron/better-enums;good enums try online wandbox img wandbox travis status travis img travis appveyor status appveyor img appveyor wandbox wandbox img appveyor travis travis img appveyor img license img reflective compile time enum library clean syntax single header without dependency good enums overview sample sample everything compile time convert enums loop find max max statically enforce convention enforce pas along template argument constexpr function reflection available metaprogramming need interface time library provide scoped size enums something see project page project full documentation max enforce project installation simply add enum project additional feature standard though variadic macro support require major compiler support test clang gcc msvc test fast compilation declare dozen enums slow compiler much include iostream performance initializers sparse range like enum control size alignment choose representation type stream operator heap compile exception disable minimal freestanding environment test performance limitation big limitation better_enum macro inside class seem difficult remove nest workaround typedef however better_enum inside namespace macro soft limit declare constant extend follow instruction extend ultimately number constant limit compiler maximum macro argument count case necessary prefix constant channel red explicitly promote type channel comparison msvc may need enable warn c4062 c4062 get switch case exhaustiveness check nest extend c4062 history original version library develop author winter hudson river trade replacement old generator call better_enum
C C++;https://github.com/alandefreitas/matplotplusplus;matplot graphic library visualization visualization help programmer scientist identify trend efficiently communicate peer modern variety scientific application environment benefit considerably graphic library attend typical design goal toward scientific visualization besides option export environment customary alternative either non dedicate library depend exist user interface bind language matplot graphic library visualization provide interactive plot mean export plot high quality format scientific publication compact syntax consistent similar library dozen plot category specialize algorithm multiple cod style support generic backends late read documentation quick start table content gallery gallery integration integration package manager package manager cmake cmake plot type plot type line plot line plot distribution distribution discrete discrete geography geography polar plot polar plot contour plot contour plot vector field vector field surface surface graph graph image image annotation annotation text text text arrow text arrow rectangle rectangle fill polygon fill polygon ellipse ellipse textbox textbox arrow arrow line line appearance appearance label label axis axis grid grid multiplot multiplot colormaps colormaps camera camera figure object figure object line spec line spec object object clear clear export export save manually save manually save programatically save programatically cod style cod style member free stand function member free stand function reactive quiet figure reactive quiet figure method chain method chain range range common utility common utility backends backends motivation detail motivation detail community community get involve get involve idea roadmap idea roadmap contribute guideline contribute guideline contributor contributor reference reference gallery example_plot_1 doc line_plot plot plot_1_thumb png doc complete_gallery plot_1 example_plot3_1 doc line_plot plot3 plot3_1_thumb png doc complete_gallery plot3_1 example_stairs_1 doc line_plot stair stairs_1_thumb png doc complete_gallery stairs_1 example_errorbar_1 doc line_plot errorbar errorbar_1_thumb png doc complete_gallery errorbar_1 example_area_1 doc line_plot area area_1_thumb png doc complete_gallery area_1 example_loglog_1 doc line_plot loglog loglog_1_thumb png doc complete_gallery loglog_1 example_fplot_1 doc line_plot fplot fplot_1_thumb png doc complete_gallery fplot_1 example_fimplicit_1 doc line_plot fimplicit fimplicit_1_thumb png doc complete_gallery fimplicit_1 example_histogram_1 doc data_distribution histogram histogram_1_thumb png doc complete_gallery histogram_1 example_boxplot_1 doc data_distribution boxplot boxplot_1_thumb png doc complete_gallery boxplot_1 example_scatter_1 doc data_distribution scatter scatter_1_thumb png doc complete_gallery scatter_1 example_scatter3_1 doc data_distribution scatter3 scatter3_1_thumb png doc complete_gallery scatter3_1 example_binscatter_1 doc data_distribution binscatter binscatter_1_thumb png doc complete_gallery binscatter_1 example_plotmatrix_1 doc data_distribution plotmatrix plotmatrix_1_thumb png doc complete_gallery plotmatrix_1 example_parallelplot_1 doc data_distribution parallelplot parallelplot_1_thumb png doc complete_gallery parallelplot_1 example_pie_1 doc data_distribution pie pie_1_thumb png doc complete_gallery pie_1 example_heatmap_1 doc data_distribution heatmap heatmap_1_thumb png doc complete_gallery heatmap_1 example_wordcloud_1 doc data_distribution wordcloud wordcloud_1_thumb png doc complete_gallery wordcloud_1 example_bar_1 doc discrete_data bar bar_1_thumb png doc complete_gallery bar_1 example_pareto_1 doc discrete_data pareto pareto_1_thumb png doc complete_gallery pareto_1 example_stem_1 doc discrete_data stem stem_1_thumb png doc complete_gallery stem_1 example_stem3_1 doc discrete_data stem3 stem3_1_thumb png doc complete_gallery stem3_1 example_geoplot_1 doc geography geoplot geoplot_1_thumb png doc complete_gallery geoplot_1 example_geoscatter_1 doc geography geoscatter geoscatter_1_thumb png doc complete_gallery geoscatter_1 example_geobubble_1 doc geography geobubble geobubble_1_thumb png doc complete_gallery geobubble_1 example_geodensityplot_1 doc geography geodensityplot geodensityplot_1_thumb png doc complete_gallery geodensityplot_1 example_polarplot_1 doc polar_plots polarplot polarplot_1_thumb png doc complete_gallery polarplot_1 example_polarscatter_1 doc polar_plots polarscatter polarscatter_1_thumb png doc complete_gallery polarscatter_1 example_polarhistogram_1 doc polar_plots polarhistogram polarhistogram_1_thumb png doc complete_gallery polarhistogram_1 example_compass_1 doc polar_plots compass compass_1_thumb png doc complete_gallery compass_1 example_ezpolar_1 doc polar_plots ezpolar ezpolar_1_thumb png doc complete_gallery ezpolar_1 example_contour_1 doc contour_plots contour contour_1_thumb png doc complete_gallery contour_1 example_contourf_1 doc contour_plots contourf contourf_1_thumb png doc complete_gallery contourf_1 example_fcontour_1 doc contour_plots fcontour fcontour_1_thumb png doc complete_gallery fcontour_1 example_feather_1 doc vector_fields feather feather_1_thumb png doc complete_gallery feather_1 example_quiver_1 doc vector_fields quiver quiver_1_thumb png doc complete_gallery quiver_1 example_surf_1 doc surface surf surf_1_thumb png doc complete_gallery surf_1 example_surfc_1 doc surface surfc surfc_1_thumb png doc complete_gallery surfc_1 example_mesh_1 doc surface mesh mesh_1_thumb png doc complete_gallery mesh_1 example_meshc_1 doc surface meshc meshc_1_thumb png doc complete_gallery meshc_1 example_meshz_1 doc surface meshz meshz_1_thumb png doc complete_gallery meshz_1 example_fsurf_1 doc surface fsurf fsurf_1_thumb png doc complete_gallery fsurf_1 example_fmesh_1 doc surface fmesh fmesh_1_thumb png doc complete_gallery fmesh_1 example_waterfall_1 doc surface waterfall waterfall_1_thumb png doc complete_gallery waterfall_1 example_fence_1 doc surface fence fence_1_thumb png doc complete_gallery fence_1 example_ribbon_1 doc surface ribbon ribbon_1_thumb png doc complete_gallery ribbon_1 example_graph_1 doc graph graph graph_1_thumb png doc complete_gallery graph_1 example_digraph_1 doc graph digraph digraph_1_thumb png doc complete_gallery digraph_1 example_imshow_1 doc image imshow imshow_1_thumb png doc complete_gallery imshow_1 example_image_1 doc image image image_1_thumb png doc complete_gallery image_1 example_imagesc_1 doc image imagesc imagesc_1_thumb png doc complete_gallery imagesc_1 complete gallery example_plot_1 doc line_plot plot plot_1_thumb png doc complete_gallery plot_1 example_plot_2 doc line_plot plot plot_2_thumb png doc complete_gallery plot_2 example_plot_3 doc line_plot plot plot_3_thumb png doc complete_gallery plot_3 example_plot_4 doc line_plot plot plot_4_thumb png doc complete_gallery plot_4 example_plot_5 doc line_plot plot plot_5_thumb png doc complete_gallery plot_5 example_plot_6 doc line_plot plot plot_6_thumb png doc complete_gallery plot_6 example_plot_7 doc line_plot plot plot_7_thumb png doc complete_gallery plot_7 example_plot_8 doc line_plot plot plot_8_thumb png doc complete_gallery plot_8 example_plot_9 doc line_plot plot plot_9_thumb png doc complete_gallery plot_9 example_plot_10 doc line_plot plot plot_10_thumb png doc complete_gallery plot_10 example_plot_11 doc line_plot plot plot_11_thumb png doc complete_gallery plot_11 example_plot_12 doc line_plot plot plot_12_thumb png doc complete_gallery plot_12 example_plot3_1 doc line_plot plot3 plot3_1_thumb png doc complete_gallery plot3_1 example_plot3_2 doc line_plot plot3 plot3_2_thumb png doc complete_gallery plot3_2 example_plot3_3 doc line_plot plot3 plot3_3_thumb png doc complete_gallery plot3_3 example_plot3_4 doc line_plot plot3 plot3_4_thumb png doc complete_gallery plot3_4 example_plot3_5 doc line_plot plot3 plot3_5_thumb png doc complete_gallery plot3_5 example_plot3_6 doc line_plot plot3 plot3_6_thumb png doc complete_gallery plot3_6 example_plot3_7 doc line_plot plot3 plot3_7_thumb png doc complete_gallery plot3_7 example_plot3_8 doc line_plot plot3 plot3_8_thumb png doc complete_gallery plot3_8 example_plot3_9 doc line_plot plot3 plot3_9_thumb png doc complete_gallery plot3_9 example_plot3_10 doc line_plot plot3 plot3_10_thumb png doc complete_gallery plot3_10 example_stairs_1 doc line_plot stair stairs_1_thumb png doc complete_gallery stairs_1 example_stairs_2 doc line_plot stair stairs_2_thumb png doc complete_gallery stairs_2 example_stairs_3 doc line_plot stair stairs_3_thumb png doc complete_gallery stairs_3 example_stairs_4 doc line_plot stair stairs_4_thumb png doc complete_gallery stairs_4 example_stairs_5 doc line_plot stair stairs_5_thumb png doc complete_gallery stairs_5 example_stairs_6 doc line_plot stair stairs_6_thumb png doc complete_gallery stairs_6 example_stairs_7 doc line_plot stair stairs_7_thumb png doc complete_gallery stairs_7 example_stairs_8 doc line_plot stair stairs_8_thumb png doc complete_gallery stairs_8 example_stairs_9 doc line_plot stair stairs_9_thumb png doc complete_gallery stairs_9 example_stairs_10 doc line_plot stair stairs_10_thumb png doc complete_gallery stairs_10 example_errorbar_1 doc line_plot errorbar errorbar_1_thumb png doc complete_gallery errorbar_1 example_errorbar_2 doc line_plot errorbar errorbar_2_thumb png doc complete_gallery errorbar_2 example_errorbar_3 doc line_plot errorbar errorbar_3_thumb png doc complete_gallery errorbar_3 example_errorbar_4 doc line_plot errorbar errorbar_4_thumb png doc complete_gallery errorbar_4 example_errorbar_5 doc line_plot errorbar errorbar_5_thumb png doc complete_gallery errorbar_5 example_errorbar_6 doc line_plot errorbar errorbar_6_thumb png doc complete_gallery errorbar_6 example_errorbar_7 doc line_plot errorbar errorbar_7_thumb png doc complete_gallery errorbar_7 example_errorbar_8 doc line_plot errorbar errorbar_8_thumb png doc complete_gallery errorbar_8 example_errorbar_9 doc line_plot errorbar errorbar_9_thumb png doc complete_gallery errorbar_9 example_errorbar_10 doc line_plot errorbar errorbar_10_thumb png doc complete_gallery errorbar_10 example_area_1 doc line_plot area area_1_thumb png doc complete_gallery area_1 example_area_2 doc line_plot area area_2_thumb png doc complete_gallery area_2 example_area_3 doc line_plot area area_3_thumb png doc complete_gallery area_3 example_area_4 doc line_plot area area_4_thumb png doc complete_gallery area_4 example_loglog_1 doc line_plot loglog loglog_1_thumb png doc complete_gallery loglog_1 example_loglog_2 doc line_plot loglog loglog_2_thumb png doc complete_gallery loglog_2 example_loglog_3 doc line_plot loglog loglog_3_thumb png doc complete_gallery loglog_3 example_loglog_4 doc line_plot loglog loglog_4_thumb png doc complete_gallery loglog_4 example_loglog_5 doc line_plot loglog loglog_5_thumb png doc complete_gallery loglog_5 example_loglog_6 doc line_plot loglog loglog_6_thumb png doc complete_gallery loglog_6 example_loglog_7 doc line_plot loglog loglog_7_thumb png doc complete_gallery loglog_7 example_loglog_8 doc line_plot loglog loglog_8_thumb png doc complete_gallery loglog_8 example_loglog_9 doc line_plot loglog loglog_9_thumb png doc complete_gallery loglog_9 example_semilogx_1 doc line_plot semilogx semilogx_1_thumb png doc complete_gallery semilogx_1 example_semilogy_1 doc line_plot semilogy semilogy_1_thumb png doc complete_gallery semilogy_1 example_fplot_1 doc line_plot fplot fplot_1_thumb png doc complete_gallery fplot_1 example_fplot_2 doc line_plot fplot fplot_2_thumb png doc complete_gallery fplot_2 example_fplot_3 doc line_plot fplot fplot_3_thumb png doc complete_gallery fplot_3 example_fplot_4 doc line_plot fplot fplot_4_thumb png doc complete_gallery fplot_4 example_fplot_5 doc line_plot fplot fplot_5_thumb png doc complete_gallery fplot_5 example_fplot_6 doc line_plot fplot fplot_6_thumb png doc complete_gallery fplot_6 example_fplot3_1 doc line_plot fplot3 fplot3_1_thumb png doc complete_gallery fplot3_1 example_fplot3_2 doc line_plot fplot3 fplot3_2_thumb png doc complete_gallery fplot3_2 example_fplot3_3 doc line_plot fplot3 fplot3_3_thumb png doc complete_gallery fplot3_3 example_fplot3_4 doc line_plot fplot3 fplot3_4_thumb png doc complete_gallery fplot3_4 example_fplot3_5 doc line_plot fplot3 fplot3_5_thumb png doc complete_gallery fplot3_5 example_fimplicit_1 doc line_plot fimplicit fimplicit_1_thumb png doc complete_gallery fimplicit_1 example_fimplicit_2 doc line_plot fimplicit fimplicit_2_thumb png doc complete_gallery fimplicit_2 example_fimplicit_3 doc line_plot fimplicit fimplicit_3_thumb png doc complete_gallery fimplicit_3 example_fimplicit_4 doc line_plot fimplicit fimplicit_4_thumb png doc complete_gallery fimplicit_4 example_histogram_1 doc data_distribution histogram histogram_1_thumb png doc complete_gallery histogram_1 example_histogram_2 doc data_distribution histogram histogram_2_thumb png doc complete_gallery histogram_2 example_histogram_3 doc data_distribution histogram histogram_3_thumb png doc complete_gallery histogram_3 example_histogram_4 doc data_distribution histogram histogram_4_thumb png doc complete_gallery histogram_4 example_histogram_5 doc data_distribution histogram histogram_5_thumb png doc complete_gallery histogram_5 example_histogram_6 doc data_distribution histogram histogram_6_thumb png doc complete_gallery histogram_6 example_histogram_7 doc data_distribution histogram histogram_7_thumb png doc complete_gallery histogram_7 example_histogram_8 doc data_distribution histogram histogram_8_thumb png doc complete_gallery histogram_8 example_histogram_9 doc data_distribution histogram histogram_9_thumb png doc complete_gallery histogram_9 example_histogram_10 doc data_distribution histogram histogram_10_thumb png doc complete_gallery histogram_10 example_histogram_11 doc data_distribution histogram histogram_11_thumb png doc complete_gallery histogram_11 example_histogram_12 doc data_distribution histogram histogram_12_thumb png doc complete_gallery histogram_12 example_histogram_14 doc data_distribution histogram histogram_14_thumb png doc complete_gallery histogram_14 example_boxplot_1 doc data_distribution boxplot boxplot_1_thumb png doc complete_gallery boxplot_1 example_boxplot_2 doc data_distribution boxplot boxplot_2_thumb png doc complete_gallery boxplot_2 example_boxplot_3 doc data_distribution boxplot boxplot_3_thumb png doc complete_gallery boxplot_3 example_scatter_1 doc data_distribution scatter scatter_1_thumb png doc complete_gallery scatter_1 example_scatter_2 doc data_distribution scatter scatter_2_thumb png doc complete_gallery scatter_2 example_scatter_3 doc data_distribution scatter scatter_3_thumb png doc complete_gallery scatter_3 example_scatter_4 doc data_distribution scatter scatter_4_thumb png doc complete_gallery scatter_4 example_scatter_5 doc data_distribution scatter scatter_5_thumb png doc complete_gallery scatter_5 example_scatter_6 doc data_distribution scatter scatter_6_thumb png doc complete_gallery scatter_6 example_scatter_7 doc data_distribution scatter scatter_7_thumb png doc complete_gallery scatter_7 example_scatter_8 doc data_distribution scatter scatter_8_thumb png doc complete_gallery scatter_8 example_scatter3_1 doc data_distribution scatter3 scatter3_1_thumb png doc complete_gallery scatter3_1 example_scatter3_2 doc data_distribution scatter3 scatter3_2_thumb png doc complete_gallery scatter3_2 example_scatter3_3 doc data_distribution scatter3 scatter3_3_thumb png doc complete_gallery scatter3_3 example_scatter3_4 doc data_distribution scatter3 scatter3_4_thumb png doc complete_gallery scatter3_4 example_scatter3_5 doc data_distribution scatter3 scatter3_5_thumb png doc complete_gallery scatter3_5 example_scatter3_6 doc data_distribution scatter3 scatter3_6_thumb png doc complete_gallery scatter3_6 example_binscatter_1 doc data_distribution binscatter binscatter_1_thumb png doc complete_gallery binscatter_1 example_binscatter_2 doc data_distribution binscatter binscatter_2_thumb png doc complete_gallery binscatter_2 example_binscatter_3 doc data_distribution binscatter binscatter_3_thumb png doc complete_gallery binscatter_3 example_binscatter_4 doc data_distribution binscatter binscatter_4_thumb png doc complete_gallery binscatter_4 example_binscatter_5 doc data_distribution binscatter binscatter_5_thumb png doc complete_gallery binscatter_5 example_binscatter_6 doc data_distribution binscatter binscatter_6_thumb png doc complete_gallery binscatter_6 example_binscatter_7 doc data_distribution binscatter binscatter_7_thumb png doc complete_gallery binscatter_7 example_plotmatrix_1 doc data_distribution plotmatrix plotmatrix_1_thumb png doc complete_gallery plotmatrix_1 example_plotmatrix_2 doc data_distribution plotmatrix plotmatrix_2_thumb png doc complete_gallery plotmatrix_2 example_plotmatrix_3 doc data_distribution plotmatrix plotmatrix_3_thumb png doc complete_gallery plotmatrix_3 example_plotmatrix_4 doc data_distribution plotmatrix plotmatrix_4_thumb png doc complete_gallery plotmatrix_4 example_parallelplot_1 doc data_distribution parallelplot parallelplot_1_thumb png doc complete_gallery parallelplot_1 example_parallelplot_2 doc data_distribution parallelplot parallelplot_2_thumb png doc complete_gallery parallelplot_2 example_parallelplot_3 doc data_distribution parallelplot parallelplot_3_thumb png doc complete_gallery parallelplot_3 example_pie_1 doc data_distribution pie pie_1_thumb png doc complete_gallery pie_1 example_pie_2 doc data_distribution pie pie_2_thumb png doc complete_gallery pie_2 example_pie_3 doc data_distribution pie pie_3_thumb png doc complete_gallery pie_3 example_pie_4 doc data_distribution pie pie_4_thumb png doc complete_gallery pie_4 example_pie_5 doc data_distribution pie pie_5_thumb png doc complete_gallery pie_5 example_pie_6 doc data_distribution pie pie_6_thumb png doc complete_gallery pie_6 example_heatmap_1 doc data_distribution heatmap heatmap_1_thumb png doc complete_gallery heatmap_1 example_heatmap_2 doc data_distribution heatmap heatmap_2_thumb png doc complete_gallery heatmap_2 example_heatmap_3 doc data_distribution heatmap heatmap_3_thumb png doc complete_gallery heatmap_3 example_heatmap_4 doc data_distribution heatmap heatmap_4_thumb png doc complete_gallery heatmap_4 example_heatmap_5 doc data_distribution heatmap heatmap_5_thumb png doc complete_gallery heatmap_5 example_heatmap_6 doc data_distribution heatmap heatmap_6_thumb png doc complete_gallery heatmap_6 example_heatmap_7 doc data_distribution heatmap heatmap_7_thumb png doc complete_gallery heatmap_7 example_wordcloud_1 doc data_distribution wordcloud wordcloud_1_thumb png doc complete_gallery wordcloud_1 example_wordcloud_3 doc data_distribution wordcloud wordcloud_3_thumb png doc complete_gallery wordcloud_3 example_wordcloud_4 doc data_distribution wordcloud wordcloud_4_thumb png doc complete_gallery wordcloud_4 example_wordcloud_4 doc data_distribution wordcloud wordcloud_4_thumb png doc complete_gallery wordcloud_4 example_bar_1 doc discrete_data bar bar_1_thumb png doc complete_gallery bar_1 example_bar_2 doc discrete_data bar bar_2_thumb png doc complete_gallery bar_2 example_bar_3 doc discrete_data bar bar_3_thumb png doc complete_gallery bar_3 example_bar_4 doc discrete_data bar bar_4_thumb png doc complete_gallery bar_4 example_bar_5 doc discrete_data bar bar_5_thumb png doc complete_gallery bar_5 example_bar_6 doc discrete_data bar bar_6_thumb png doc complete_gallery bar_6 example_bar_7 doc discrete_data bar bar_7_thumb png doc complete_gallery bar_7 example_bar_8 doc discrete_data bar bar_8_thumb png doc complete_gallery bar_8 example_bar_9 doc discrete_data bar bar_9_thumb png doc complete_gallery bar_9 example_bar_10 doc discrete_data bar bar_10_thumb png doc complete_gallery bar_10 example_bar_11 doc discrete_data bar bar_11_thumb png doc complete_gallery bar_11 example_bar_12 doc discrete_data bar bar_12_thumb png doc complete_gallery bar_12 example_bar_13 doc discrete_data bar bar_13_thumb png doc complete_gallery bar_13 example_pareto_1 doc discrete_data pareto pareto_1_thumb png doc complete_gallery pareto_1 example_pareto_2 doc discrete_data pareto pareto_2_thumb png doc complete_gallery pareto_2 example_pareto_3 doc discrete_data pareto pareto_3_thumb png doc complete_gallery pareto_3 example_pareto_4 doc discrete_data pareto pareto_4_thumb png doc complete_gallery pareto_4 example_stem_1 doc discrete_data stem stem_1_thumb png doc complete_gallery stem_1 example_stem_2 doc discrete_data stem stem_2_thumb png doc complete_gallery stem_2 example_stem_3 doc discrete_data stem stem_3_thumb png doc complete_gallery stem_3 example_stem_4 doc discrete_data stem stem_4_thumb png doc complete_gallery stem_4 example_stem_5 doc discrete_data stem stem_5_thumb png doc complete_gallery stem_5 example_stem_6 doc discrete_data stem stem_6_thumb png doc complete_gallery stem_6 example_stem_7 doc discrete_data stem stem_7_thumb png doc complete_gallery stem_7 example_stem_8 doc discrete_data stem stem_8_thumb png doc complete_gallery stem_8 example_stem_9 doc discrete_data stem stem_9_thumb png doc complete_gallery stem_9 example_stem3_1 doc discrete_data stem3 stem3_1_thumb png doc complete_gallery stem3_1 example_stem3_2 doc discrete_data stem3 stem3_2_thumb png doc complete_gallery stem3_2 example_stem3_3 doc discrete_data stem3 stem3_3_thumb png doc complete_gallery stem3_3 example_stem3_4 doc discrete_data stem3 stem3_4_thumb png doc complete_gallery stem3_4 example_stem3_5 doc discrete_data stem3 stem3_5_thumb png doc complete_gallery stem3_5 example_stem3_6 doc discrete_data stem3 stem3_6_thumb png doc complete_gallery stem3_6 example_stem3_7 doc discrete_data stem3 stem3_7_thumb png doc complete_gallery stem3_7 example_stem3_8 doc discrete_data stem3 stem3_8_thumb png doc complete_gallery stem3_8 example_stem3_9 doc discrete_data stem3 stem3_9_thumb png doc complete_gallery stem3_9 example_stem3_10 doc discrete_data stem3 stem3_10_thumb png doc complete_gallery stem3_10 example_stem3_11 doc discrete_data stem3 stem3_11_thumb png doc complete_gallery stem3_11 example_geoplot_1 doc geography geoplot geoplot_1_thumb png doc complete_gallery geoplot_1 example_geoplot_2 doc geography geoplot geoplot_2_thumb png doc complete_gallery geoplot_2 example_geoplot_3 doc geography geoplot geoplot_3_thumb png doc complete_gallery geoplot_3 example_geoplot_4 doc geography geoplot geoplot_4_thumb png doc complete_gallery geoplot_4 example_geoplot_5 doc geography geoplot geoplot_5_thumb png doc complete_gallery geoplot_5 example_geoplot_6 doc geography geoplot geoplot_6_thumb png doc complete_gallery geoplot_6 example_geoplot_7 doc geography geoplot geoplot_7_thumb png doc complete_gallery geoplot_7 example_geoscatter_1 doc geography geoscatter geoscatter_1_thumb png doc complete_gallery geoscatter_1 example_geoscatter_2 doc geography geoscatter geoscatter_2_thumb png doc complete_gallery geoscatter_2 example_geobubble_1 doc geography geobubble geobubble_1_thumb png doc complete_gallery geobubble_1 example_geobubble_2 doc geography geobubble geobubble_2_thumb png doc complete_gallery geobubble_2 example_geodensityplot_1 doc geography geodensityplot geodensityplot_1_thumb png doc complete_gallery geodensityplot_1 example_polarplot_1 doc polar_plots polarplot polarplot_1_thumb png doc complete_gallery polarplot_1 example_polarplot_2 doc polar_plots polarplot polarplot_2_thumb png doc complete_gallery polarplot_2 example_polarplot_3 doc polar_plots polarplot polarplot_3_thumb png doc complete_gallery polarplot_3 example_polarplot_4 doc polar_plots polarplot polarplot_4_thumb png doc complete_gallery polarplot_4 example_polarplot_5 doc polar_plots polarplot polarplot_5_thumb png doc complete_gallery polarplot_5 example_polarplot_6 doc polar_plots polarplot polarplot_6_thumb png doc complete_gallery polarplot_6 example_polarplot_7 doc polar_plots polarplot polarplot_7_thumb png doc complete_gallery polarplot_7 example_polarplot_8 doc polar_plots polarplot polarplot_8_thumb png doc complete_gallery polarplot_8 example_polarscatter_1 doc polar_plots polarscatter polarscatter_1_thumb png doc complete_gallery polarscatter_1 example_polarscatter_2 doc polar_plots polarscatter polarscatter_2_thumb png doc complete_gallery polarscatter_2 example_polarscatter_3 doc polar_plots polarscatter polarscatter_3_thumb png doc complete_gallery polarscatter_3 example_polarscatter_4 doc polar_plots polarscatter polarscatter_4_thumb png doc complete_gallery polarscatter_4 example_polarscatter_5 doc polar_plots polarscatter polarscatter_5_thumb png doc complete_gallery polarscatter_5 example_polarscatter_6 doc polar_plots polarscatter polarscatter_6_thumb png doc complete_gallery polarscatter_6 example_polarhistogram_1 doc polar_plots polarhistogram polarhistogram_1_thumb png doc complete_gallery polarhistogram_1 example_polarhistogram_2 doc polar_plots polarhistogram polarhistogram_2_thumb png doc complete_gallery polarhistogram_2 example_polarhistogram_3 doc polar_plots polarhistogram polarhistogram_3_thumb png doc complete_gallery polarhistogram_3 example_polarhistogram_4 doc polar_plots polarhistogram polarhistogram_4_thumb png doc complete_gallery polarhistogram_4 example_polarhistogram_5 doc polar_plots polarhistogram polarhistogram_5_thumb png doc complete_gallery polarhistogram_5 example_compass_1 doc polar_plots compass compass_1_thumb png doc complete_gallery compass_1 example_compass_2 doc polar_plots compass compass_2_thumb png doc complete_gallery compass_2 example_ezpolar_1 doc polar_plots ezpolar ezpolar_1_thumb png doc complete_gallery ezpolar_1 example_ezpolar_2 doc polar_plots ezpolar ezpolar_2_thumb png doc complete_gallery ezpolar_2 example_contour_1 doc contour_plots contour contour_1_thumb png doc complete_gallery contour_1 example_contour_2 doc contour_plots contour contour_2_thumb png doc complete_gallery contour_2 example_contour_3 doc contour_plots contour contour_3_thumb png doc complete_gallery contour_3 example_contour_4 doc contour_plots contour contour_4_thumb png doc complete_gallery contour_4 example_contour_5 doc contour_plots contour contour_5_thumb png doc complete_gallery contour_5 example_contour_6 doc contour_plots contour contour_6_thumb png doc complete_gallery contour_6 example_contour_7 doc contour_plots contour contour_7_thumb png doc complete_gallery contour_7 example_contour_8 doc contour_plots contour contour_8_thumb png doc complete_gallery contour_8 example_contourf_1 doc contour_plots contourf contourf_1_thumb png doc complete_gallery contourf_1 example_contourf_2 doc contour_plots contourf contourf_2_thumb png doc complete_gallery contourf_2 example_contourf_3 doc contour_plots contourf contourf_3_thumb png doc complete_gallery contourf_3 example_contourf_4 doc contour_plots contourf contourf_4_thumb png doc complete_gallery contourf_4 example_contourf_5 doc contour_plots contourf contourf_5_thumb png doc complete_gallery contourf_5 example_contourf_6 doc contour_plots contourf contourf_6_thumb png doc complete_gallery contourf_6 example_fcontour_1 doc contour_plots fcontour fcontour_1_thumb png doc complete_gallery fcontour_1 example_fcontour_2 doc contour_plots fcontour fcontour_2_thumb png doc complete_gallery fcontour_2 example_fcontour_3 doc contour_plots fcontour fcontour_3_thumb png doc complete_gallery fcontour_3 example_fcontour_4 doc contour_plots fcontour fcontour_4_thumb png doc complete_gallery fcontour_4 example_fcontour_5 doc contour_plots fcontour fcontour_5_thumb png doc complete_gallery fcontour_5 example_fcontour_6 doc contour_plots fcontour fcontour_6_thumb png doc complete_gallery fcontour_6 example_fcontour_7 doc contour_plots fcontour fcontour_7_thumb png doc complete_gallery fcontour_7 example_fcontour_8 doc contour_plots fcontour fcontour_8_thumb png doc complete_gallery fcontour_8 example_fcontour_9 doc contour_plots fcontour fcontour_9_thumb png doc complete_gallery fcontour_9 example_fcontour_10 doc contour_plots fcontour fcontour_10_thumb png doc complete_gallery fcontour_10 example_fcontour_11 doc contour_plots fcontour fcontour_11_thumb png doc complete_gallery fcontour_11 example_feather_1 doc vector_fields feather feather_1_thumb png doc complete_gallery feather_1 example_quiver_1 doc vector_fields quiver quiver_1_thumb png doc complete_gallery quiver_1 example_quiver_2 doc vector_fields quiver quiver_2_thumb png doc complete_gallery quiver_2 example_quiver_3 doc vector_fields quiver quiver_3_thumb png doc complete_gallery quiver_3 example_quiver_4 doc vector_fields quiver quiver_4_thumb png doc complete_gallery quiver_4 example_quiver_5 doc vector_fields quiver quiver_5_thumb png doc complete_gallery quiver_5 example_quiver_6 doc vector_fields quiver quiver_6_thumb png doc complete_gallery quiver_6 example_quiver3_1 doc vector_fields quiver3 quiver3_1_thumb png doc complete_gallery quiver3_1 example_quiver3_2 doc vector_fields quiver3 quiver3_2_thumb png doc complete_gallery quiver3_2 example_surf_1 doc surface surf surf_1_thumb png doc complete_gallery surf_1 example_surf_2 doc surface surf surf_2_thumb png doc complete_gallery surf_2 example_surf_3 doc surface surf surf_3_thumb png doc complete_gallery surf_3 example_surf_4 doc surface surf surf_4_thumb png doc complete_gallery surf_4 example_surf_5 doc surface surf surf_5_thumb png doc complete_gallery surf_5 example_surf_6 doc surface surf surf_6_thumb png doc complete_gallery surf_6 example_surfc_1 doc surface surfc surfc_1_thumb png doc complete_gallery surfc_1 example_surfc_2 doc surface surfc surfc_2_thumb png doc complete_gallery surfc_2 example_surfc_3 doc surface surfc surfc_3_thumb png doc complete_gallery surfc_3 example_surfc_4 doc surface surfc surfc_4_thumb png doc complete_gallery surfc_4 example_mesh_1 doc surface mesh mesh_1_thumb png doc complete_gallery mesh_1 example_mesh_2 doc surface mesh mesh_2_thumb png doc complete_gallery mesh_2 example_mesh_3 doc surface mesh mesh_3_thumb png doc complete_gallery mesh_3 example_mesh_4 doc surface mesh mesh_4_thumb png doc complete_gallery mesh_4 example_meshc_1 doc surface meshc meshc_1_thumb png doc complete_gallery meshc_1 example_meshc_2 doc surface meshc meshc_2_thumb png doc complete_gallery meshc_2 example_meshc_3 doc surface meshc meshc_3_thumb png doc complete_gallery meshc_3 example_meshz_1 doc surface meshz meshz_1_thumb png doc complete_gallery meshz_1 example_meshz_2 doc surface meshz meshz_2_thumb png doc complete_gallery meshz_2 example_meshz_3 doc surface meshz meshz_3_thumb png doc complete_gallery meshz_3 example_fsurf_1 doc surface fsurf fsurf_1_thumb png doc complete_gallery fsurf_1 example_fsurf_2 doc surface fsurf fsurf_2_thumb png doc complete_gallery fsurf_2 example_fsurf_3 doc surface fsurf fsurf_3_thumb png doc complete_gallery fsurf_3 example_fsurf_4 doc surface fsurf fsurf_4_thumb png doc complete_gallery fsurf_4 example_fsurf_5 doc surface fsurf fsurf_5_thumb png doc complete_gallery fsurf_5 example_fsurf_6 doc surface fsurf fsurf_6_thumb png doc complete_gallery fsurf_6 example_fsurf_7 doc surface fsurf fsurf_7_thumb png doc complete_gallery fsurf_7 example_fsurf_8 doc surface fsurf fsurf_8_thumb png doc complete_gallery fsurf_8 example_fmesh_1 doc surface fmesh fmesh_1_thumb png doc complete_gallery fmesh_1 example_fmesh_2 doc surface fmesh fmesh_2_thumb png doc complete_gallery fmesh_2 example_fmesh_3 doc surface fmesh fmesh_3_thumb png doc complete_gallery fmesh_3 example_fmesh_4 doc surface fmesh fmesh_4_thumb png doc complete_gallery fmesh_4 example_waterfall_1 doc surface waterfall waterfall_1_thumb png doc complete_gallery waterfall_1 example_waterfall_2 doc surface waterfall waterfall_2_thumb png doc complete_gallery waterfall_2 example_waterfall_3 doc surface waterfall waterfall_3_thumb png doc complete_gallery waterfall_3 example_fence_1 doc surface fence fence_1_thumb png doc complete_gallery fence_1 example_fence_2 doc surface fence fence_2_thumb png doc complete_gallery fence_2 example_fence_3 doc surface fence fence_3_thumb png doc complete_gallery fence_3 example_ribbon_1 doc surface ribbon ribbon_1_thumb png doc complete_gallery ribbon_1 example_ribbon_2 doc surface ribbon ribbon_2_thumb png doc complete_gallery ribbon_2 example_ribbon_3 doc surface ribbon ribbon_3_thumb png doc complete_gallery ribbon_3 example_ribbon_4 doc surface ribbon ribbon_4_thumb png doc complete_gallery ribbon_4 example_graph_1 doc graph graph graph_1_thumb png doc complete_gallery graph_1 example_graph_2 doc graph graph graph_2_thumb png doc complete_gallery graph_2 example_graph_3 doc graph graph graph_3_thumb png doc complete_gallery graph_3 example_graph_4 doc graph graph graph_4_thumb png doc complete_gallery graph_4 example_graph_5 doc graph graph graph_5_thumb png doc complete_gallery graph_5 example_graph_6 doc graph graph graph_6_thumb png doc complete_gallery graph_6 example_digraph_1 doc graph digraph digraph_1_thumb png doc complete_gallery digraph_1 example_digraph_2 doc graph digraph digraph_2_thumb png doc complete_gallery digraph_2 example_digraph_3 doc graph digraph digraph_3_thumb png doc complete_gallery digraph_3 example_imshow_1 doc image imshow imshow_1_thumb png doc complete_gallery imshow_1 example_imshow_2 doc image imshow imshow_2_thumb png doc complete_gallery imshow_2 example_imshow_3 doc image imshow imshow_3_thumb png doc complete_gallery imshow_3 example_imshow_4 doc image imshow imshow_4_thumb png doc complete_gallery imshow_4 example_imshow_5 doc image imshow imshow_5_thumb png doc complete_gallery imshow_5 example_imshow_6 doc image imshow imshow_6_thumb png doc complete_gallery imshow_6 example_imshow_7 doc image imshow imshow_7_thumb png doc complete_gallery imshow_7 example_imshow_8 doc image imshow imshow_8_thumb png doc complete_gallery imshow_8 example_imshow_9 doc image imshow imshow_9_thumb png doc complete_gallery imshow_9 example_imshow_10 doc image imshow imshow_10_thumb png doc complete_gallery imshow_10 example_imshow_11 doc image imshow imshow_11_thumb png doc complete_gallery imshow_11 example_image_1 doc image image image_1_thumb png doc complete_gallery image_1 example_image_2 doc image image image_2_thumb png doc complete_gallery image_2 example_image_3 doc image image image_3_thumb png doc complete_gallery image_3 example_image_4 doc image image image_4_thumb png doc complete_gallery image_4 example_image_5 doc image image image_5_thumb png doc complete_gallery image_5 example_imagesc_1 doc image imagesc imagesc_1_thumb png doc complete_gallery imagesc_1 example_imagesc_2 doc image imagesc imagesc_2_thumb png doc complete_gallery imagesc_2 example_imagesc_3 doc image imagesc imagesc_3_thumb png doc complete_gallery imagesc_3 example_imagesc_4 doc image imagesc imagesc_4_thumb png doc complete_gallery imagesc_4 example_text_1 doc annotation text text_1_thumb png doc complete_gallery text_1 example_text_2 doc annotation text text_2_thumb png doc complete_gallery text_2 example_text_3 doc annotation text text_3_thumb png doc complete_gallery text_3 example_text_4 doc annotation text text_4_thumb png doc complete_gallery text_4 example_text_5 doc annotation text text_5_thumb png doc complete_gallery text_5 example_text_6 doc annotation text text_6_thumb png doc complete_gallery text_6 example_text_7 doc annotation text text_7_thumb png doc complete_gallery text_7 example_text_8 doc annotation text text_8_thumb png doc complete_gallery text_8 example_textarrow_1 doc annotation textarrow textarrow_1_thumb png doc complete_gallery textarrow_1 example_textarrow_2 doc annotation textarrow textarrow_2_thumb png doc complete_gallery textarrow_2 example_rectangle_1 doc annotation rectangle rectangle_1_thumb png doc complete_gallery rectangle_1 example_rectangle_2 doc annotation rectangle rectangle_2_thumb png doc complete_gallery rectangle_2 example_rectangle_3 doc annotation rectangle rectangle_3_thumb png doc complete_gallery rectangle_3 example_rectangle_4 doc annotation rectangle rectangle_4_thumb png doc complete_gallery rectangle_4 example_rectangle_5 doc annotation rectangle rectangle_5_thumb png doc complete_gallery rectangle_5 example_fill_1 doc annotation fill fill_1_thumb png doc complete_gallery fill_1 example_ellipse_1 doc annotation ellipse ellipse_1_thumb png doc complete_gallery ellipse_1 example_textbox_1 doc annotation textbox textbox_1_thumb png doc complete_gallery textbox_1 example_arrow_1 doc annotation arrow arrow_1_thumb png doc complete_gallery arrow_1 example_arrow_2 doc annotation arrow arrow_2_thumb png doc complete_gallery arrow_2 example_line_1 doc annotation line line_1_thumb png doc complete_gallery line_1 example_title_1 doc appearance label title title_1_thumb png doc complete_gallery title_1 example_title_2 doc appearance label title title_2_thumb png doc complete_gallery title_2 example_title_3 doc appearance label title title_3_thumb png doc complete_gallery title_3 example_title_4 doc appearance label title title_4_thumb png doc complete_gallery title_4 example_title_5 doc appearance label title title_5_thumb png doc complete_gallery title_5 example_title_6 doc appearance label title title_6_thumb png doc complete_gallery title_6 example_title_7 doc appearance label title title_7_thumb png doc complete_gallery title_7 example_title_8 doc appearance label title title_8_thumb png doc complete_gallery title_8 example_sgtitle_1 doc appearance label sgtitle sgtitle_1_thumb png doc complete_gallery sgtitle_1 example_sgtitle_2 doc appearance label sgtitle sgtitle_2_thumb png doc complete_gallery sgtitle_2 example_xlabel_1 doc appearance label xlabel xlabel_1_thumb png doc complete_gallery xlabel_1 example_xlabel_2 doc appearance label xlabel xlabel_2_thumb png doc complete_gallery xlabel_2 example_xlabel_3 doc appearance label xlabel xlabel_3_thumb png doc complete_gallery xlabel_3 example_xlabel_4 doc appearance label xlabel xlabel_4_thumb png doc complete_gallery xlabel_4 example_xlabel_5 doc appearance label xlabel xlabel_5_thumb png doc complete_gallery xlabel_5 example_xlabel_6 doc appearance label xlabel xlabel_6_thumb png doc complete_gallery xlabel_6 example_xlabel_7 doc appearance label xlabel xlabel_7_thumb png doc complete_gallery xlabel_7 example_xlabel_8 doc appearance label xlabel xlabel_8_thumb png doc complete_gallery xlabel_8 example_ylabel_1 doc appearance label ylabel ylabel_1_thumb png doc complete_gallery ylabel_1 example_ylabel_2 doc appearance label ylabel ylabel_2_thumb png doc complete_gallery ylabel_2 example_ylabel_3 doc appearance label ylabel ylabel_3_thumb png doc complete_gallery ylabel_3 example_ylabel_4 doc appearance label ylabel ylabel_4_thumb png doc complete_gallery ylabel_4 example_ylabel_5 doc appearance label ylabel ylabel_5_thumb png doc complete_gallery ylabel_5 example_ylabel_6 doc appearance label ylabel ylabel_6_thumb png doc complete_gallery ylabel_6 example_ylabel_7 doc appearance label ylabel ylabel_7_thumb png doc complete_gallery ylabel_7 example_ylabel_8 doc appearance label ylabel ylabel_8_thumb png doc complete_gallery ylabel_8 example_zlabel_1 doc appearance label zlabel zlabel_1_thumb png doc complete_gallery zlabel_1 example_zlabel_2 doc appearance label zlabel zlabel_2_thumb png doc complete_gallery zlabel_2 example_zlabel_3 doc appearance label zlabel zlabel_3_thumb png doc complete_gallery zlabel_3 example_legend_1 doc appearance label legend legend_1_thumb png doc complete_gallery legend_1 example_legend_2 doc appearance label legend legend_2_thumb png doc complete_gallery legend_2 example_legend_3 doc appearance label legend legend_3_thumb png doc complete_gallery legend_3 example_legend_4 doc appearance label legend legend_4_thumb png doc complete_gallery legend_4 example_legend_5 doc appearance label legend legend_5_thumb png doc complete_gallery legend_5 example_legend_6 doc appearance label legend legend_6_thumb png doc complete_gallery legend_6 example_legend_7 doc appearance label legend legend_7_thumb png doc complete_gallery legend_7 example_legend_8 doc appearance label legend legend_8_thumb png doc complete_gallery legend_8 example_legend_9 doc appearance label legend legend_9_thumb png doc complete_gallery legend_9 example_xlim_1 doc appearance axis xlim xlim_1_thumb png doc complete_gallery xlim_1 example_xlim_2 doc appearance axis xlim xlim_2_thumb png doc complete_gallery xlim_2 example_xlim_3 doc appearance axis xlim xlim_3_thumb png doc complete_gallery xlim_3 example_xlim_4 doc appearance axis xlim xlim_4_thumb png doc complete_gallery xlim_4 example_xlim_5 doc appearance axis xlim xlim_5_thumb png doc complete_gallery xlim_5 example_xlim_6 doc appearance axis xlim xlim_6_thumb png doc complete_gallery xlim_6 example_ylim_1 doc appearance axis ylim ylim_1_thumb png doc complete_gallery ylim_1 example_ylim_2 doc appearance axis ylim ylim_2_thumb png doc complete_gallery ylim_2 example_ylim_3 doc appearance axis ylim ylim_3_thumb png doc complete_gallery ylim_3 example_ylim_4 doc appearance axis ylim ylim_4_thumb png doc complete_gallery ylim_4 example_ylim_5 doc appearance axis ylim ylim_5_thumb png doc complete_gallery ylim_5 example_ylim_6 doc appearance axis ylim ylim_6_thumb png doc complete_gallery ylim_6 example_zlim_1 doc appearance axis zlim zlim_1_thumb png doc complete_gallery zlim_1 example_zlim_2 doc appearance axis zlim zlim_2_thumb png doc complete_gallery zlim_2 example_zlim_3 doc appearance axis zlim zlim_3_thumb png doc complete_gallery zlim_3 example_zlim_4 doc appearance axis zlim zlim_4_thumb png doc complete_gallery zlim_4 example_zlim_5 doc appearance axis zlim zlim_5_thumb png doc complete_gallery zlim_5 example_zlim_6 doc appearance axis zlim zlim_6_thumb png doc complete_gallery zlim_6 example_axis_1 doc appearance axis axis axis_1_thumb png doc complete_gallery axis_1 example_axis_2 doc appearance axis axis axis_2_thumb png doc complete_gallery axis_2 example_axis_3 doc appearance axis axis axis_3_thumb png doc complete_gallery axis_3 example_axis_4 doc appearance axis axis axis_4_thumb png doc complete_gallery axis_4 example_axis_5 doc appearance axis axis axis_5_thumb png doc complete_gallery axis_5 example_axis_6 doc appearance axis axis axis_6_thumb png doc complete_gallery axis_6 example_axis_7 doc appearance axis axis axis_7_thumb png doc complete_gallery axis_7 example_axis_8 doc appearance axis axis axis_8_thumb png doc complete_gallery axis_8 example_box_1 doc appearance axis box box_1_thumb png doc complete_gallery box_1 example_box_2 doc appearance axis box box_2_thumb png doc complete_gallery box_2 example_box_3 doc appearance axis box box_3_thumb png doc complete_gallery box_3 example_grid_1 doc appearance grid grid grid_1_thumb png doc complete_gallery grid_1 example_grid_2 doc appearance grid grid grid_2_thumb png doc complete_gallery grid_2 example_grid_3 doc appearance grid grid grid_3_thumb png doc complete_gallery grid_3 example_grid_4 doc appearance grid grid grid_4_thumb png doc complete_gallery grid_4 example_xticks_1 doc appearance grid xticks xticks_1_thumb png doc complete_gallery xticks_1 example_xticks_2 doc appearance grid xticks xticks_2_thumb png doc complete_gallery xticks_2 example_xticks_3 doc appearance grid xticks xticks_3_thumb png doc complete_gallery xticks_3 example_xticks_4 doc appearance grid xticks xticks_4_thumb png doc complete_gallery xticks_4 example_xticks_5 doc appearance grid xticks xticks_5_thumb png doc complete_gallery xticks_5 example_xticks_6 doc appearance grid xticks xticks_6_thumb png doc complete_gallery xticks_6 example_xticks_7 doc appearance grid xticks xticks_7_thumb png doc complete_gallery xticks_7 example_xticks_8 doc appearance grid xticks xticks_8_thumb png doc complete_gallery xticks_8 example_yticks_1 doc appearance grid yticks yticks_1_thumb png doc complete_gallery yticks_1 example_yticks_2 doc appearance grid yticks yticks_2_thumb png doc complete_gallery yticks_2 example_yticks_3 doc appearance grid yticks yticks_3_thumb png doc complete_gallery yticks_3 example_yticks_4 doc appearance grid yticks yticks_4_thumb png doc complete_gallery yticks_4 example_yticks_5 doc appearance grid yticks yticks_5_thumb png doc complete_gallery yticks_5 example_yticks_6 doc appearance grid yticks yticks_6_thumb png doc complete_gallery yticks_6 example_yticks_7 doc appearance grid yticks yticks_7_thumb png doc complete_gallery yticks_7 example_yticks_8 doc appearance grid yticks yticks_8_thumb png doc complete_gallery yticks_8 example_zticks_1 doc appearance grid zticks zticks_1_thumb png doc complete_gallery zticks_1 example_zticks_2 doc appearance grid zticks zticks_2_thumb png doc complete_gallery zticks_2 example_zticks_3 doc appearance grid zticks zticks_3_thumb png doc complete_gallery zticks_3 example_zticks_4 doc appearance grid zticks zticks_4_thumb png doc complete_gallery zticks_4 example_zticks_5 doc appearance grid zticks zticks_5_thumb png doc complete_gallery zticks_5 example_zticks_6 doc appearance grid zticks zticks_6_thumb png doc complete_gallery zticks_6 example_xticklabels_1 doc appearance grid xticklabels xticklabels_1_thumb png doc complete_gallery xticklabels_1 example_xticklabels_2 doc appearance grid xticklabels xticklabels_2_thumb png doc complete_gallery xticklabels_2 example_xticklabels_3 doc appearance grid xticklabels xticklabels_3_thumb png doc complete_gallery xticklabels_3 example_xticklabels_4 doc appearance grid xticklabels xticklabels_4_thumb png doc complete_gallery xticklabels_4 example_yticklabels_1 doc appearance grid yticklabels yticklabels_1_thumb png doc complete_gallery yticklabels_1 example_yticklabels_2 doc appearance grid yticklabels yticklabels_2_thumb png doc complete_gallery yticklabels_2 example_yticklabels_3 doc appearance grid yticklabels yticklabels_3_thumb png doc complete_gallery yticklabels_3 example_yticklabels_4 doc appearance grid yticklabels yticklabels_4_thumb png doc complete_gallery yticklabels_4 example_xtickformat_1 doc appearance grid xtickformat xtickformat_1_thumb png doc complete_gallery xtickformat_1 example_xtickformat_2 doc appearance grid xtickformat xtickformat_2_thumb png doc complete_gallery xtickformat_2 example_xtickformat_3 doc appearance grid xtickformat xtickformat_3_thumb png doc complete_gallery xtickformat_3 example_xtickformat_4 doc appearance grid xtickformat xtickformat_4_thumb png doc complete_gallery xtickformat_4 example_xtickformat_5 doc appearance grid xtickformat xtickformat_5_thumb png doc complete_gallery xtickformat_5 example_ytickformat_1 doc appearance grid ytickformat ytickformat_1_thumb png doc complete_gallery ytickformat_1 example_ytickformat_2 doc appearance grid ytickformat ytickformat_2_thumb png doc complete_gallery ytickformat_2 example_ytickformat_3 doc appearance grid ytickformat ytickformat_3_thumb png doc complete_gallery ytickformat_3 example_ytickformat_4 doc appearance grid ytickformat ytickformat_4_thumb png doc complete_gallery ytickformat_4 example_ytickformat_5 doc appearance grid ytickformat ytickformat_5_thumb png doc complete_gallery ytickformat_5 example_ztickformat_1 doc appearance grid ztickformat ztickformat_1_thumb png doc complete_gallery ztickformat_1 example_ztickformat_2 doc appearance grid ztickformat ztickformat_2_thumb png doc complete_gallery ztickformat_2 example_ztickformat_3 doc appearance grid ztickformat ztickformat_3_thumb png doc complete_gallery ztickformat_3 example_ztickformat_4 doc appearance grid ztickformat ztickformat_4_thumb png doc complete_gallery ztickformat_4 example_ztickformat_5 doc appearance grid ztickformat ztickformat_5_thumb png doc complete_gallery ztickformat_5 example_xtickangle_1 doc appearance grid xtickangle xtickangle_1_thumb png doc complete_gallery xtickangle_1 example_xtickangle_2 doc appearance grid xtickangle xtickangle_2_thumb png doc complete_gallery xtickangle_2 example_xtickangle_3 doc appearance grid xtickangle xtickangle_3_thumb png doc complete_gallery xtickangle_3 example_ytickangle_1 doc appearance grid ytickangle ytickangle_1_thumb png doc complete_gallery ytickangle_1 example_ytickangle_2 doc appearance grid ytickangle ytickangle_2_thumb png doc complete_gallery ytickangle_2 example_ytickangle_3 doc appearance grid ytickangle ytickangle_3_thumb png doc complete_gallery ytickangle_3 example_hold_1 doc appearance multiplot hold hold_1_thumb png doc complete_gallery hold_1 example_hold_2 doc appearance multiplot hold hold_2_thumb png doc complete_gallery hold_2 example_hold_3 doc appearance multiplot hold hold_3_thumb png doc complete_gallery hold_3 example_hold_4 doc appearance multiplot hold hold_4_thumb png doc complete_gallery hold_4 example_yyaxis_1 doc appearance multiplot yyaxis yyaxis_1_thumb png doc complete_gallery yyaxis_1 example_yyaxis_2 doc appearance multiplot yyaxis yyaxis_2_thumb png doc complete_gallery yyaxis_2 example_yyaxis_3 doc appearance multiplot yyaxis yyaxis_3_thumb png doc complete_gallery yyaxis_3 example_yyaxis_4 doc appearance multiplot yyaxis yyaxis_4_thumb png doc complete_gallery yyaxis_4 example_yyaxis_5 doc appearance multiplot yyaxis yyaxis_5_thumb png doc complete_gallery yyaxis_5 example_yyaxis_6 doc appearance multiplot yyaxis yyaxis_6_thumb png doc complete_gallery yyaxis_6 example_yyaxis_7 doc appearance multiplot yyaxis yyaxis_7_thumb png doc complete_gallery yyaxis_7 example_colororder_1 doc appearance multiplot colororder colororder_1_thumb png doc complete_gallery colororder_1 example_colororder_2 doc appearance multiplot colororder colororder_2_thumb png doc complete_gallery colororder_2 example_colororder_3 doc appearance multiplot colororder colororder_3_thumb png doc complete_gallery colororder_3 example_colororder_4 doc appearance multiplot colororder colororder_4_thumb png doc complete_gallery colororder_4 example_colororder_5 doc appearance multiplot colororder colororder_5_thumb png doc complete_gallery colororder_5 example_colororder_6 doc appearance multiplot colororder colororder_6_thumb png doc complete_gallery colororder_6 example_colororder_7 doc appearance multiplot colororder colororder_7_thumb png doc complete_gallery colororder_7 example_subplot_1 doc appearance multiplot subplot subplot_1_thumb png doc complete_gallery subplot_1 example_subplot_2 doc appearance multiplot subplot subplot_2_thumb png doc complete_gallery subplot_2 example_subplot_3 doc appearance multiplot subplot subplot_3_thumb png doc complete_gallery subplot_3 example_subplot_4 doc appearance multiplot subplot subplot_4_thumb png doc complete_gallery subplot_4 example_subplot_5 doc appearance multiplot subplot subplot_5_thumb png doc complete_gallery subplot_5 example_subplot_6 doc appearance multiplot subplot subplot_6_thumb png doc complete_gallery subplot_6 example_subplot_7 doc appearance multiplot subplot subplot_7_thumb png doc complete_gallery subplot_7 example_subplot_8 doc appearance multiplot subplot subplot_8_thumb png doc complete_gallery subplot_8 example_subplot_9 doc appearance multiplot subplot subplot_9_thumb png doc complete_gallery subplot_9 example_subplot_10 doc appearance multiplot subplot subplot_10_thumb png doc complete_gallery subplot_10 example_subplot_11 doc appearance multiplot subplot subplot_11_thumb png doc complete_gallery subplot_11 example_subplot_12 doc appearance multiplot subplot subplot_12_thumb png doc complete_gallery subplot_12 example_subplot_13 doc appearance multiplot subplot subplot_13_thumb png doc complete_gallery subplot_13 example_tiledlayout_1 doc appearance multiplot tiledlayout tiledlayout_1_thumb png doc complete_gallery tiledlayout_1 example_tiledlayout_2 doc appearance multiplot tiledlayout tiledlayout_2_thumb png doc complete_gallery tiledlayout_2 example_tiledlayout_3 doc appearance multiplot tiledlayout tiledlayout_3_thumb png doc complete_gallery tiledlayout_3 example_tiledlayout_4 doc appearance multiplot tiledlayout tiledlayout_4_thumb png doc complete_gallery tiledlayout_4 example_tiledlayout_5 doc appearance multiplot tiledlayout tiledlayout_5_thumb png doc complete_gallery tiledlayout_5 example_tiledlayout_6 doc appearance multiplot tiledlayout tiledlayout_6_thumb png doc complete_gallery tiledlayout_6 example_tiledlayout_7 doc appearance multiplot tiledlayout tiledlayout_7_thumb png doc complete_gallery tiledlayout_7 example_tiledlayout_8 doc appearance multiplot tiledlayout tiledlayout_8_thumb png doc complete_gallery tiledlayout_8 example_colormap_1 doc appearance colormaps colormap colormap_1_thumb png doc complete_gallery colormap_1 example_colormap_2 doc appearance colormaps colormap colormap_2_thumb png doc complete_gallery colormap_2 example_colormap_3 doc appearance colormaps colormap colormap_3_thumb png doc complete_gallery colormap_3 example_colormap_4 doc appearance colormaps colormap colormap_4_thumb png doc complete_gallery colormap_4 example_colormap_5 doc appearance colormaps colormap colormap_5_thumb png doc complete_gallery colormap_5 example_colormap_6 doc appearance colormaps colormap colormap_6_thumb png doc complete_gallery colormap_6 example_colormap_7 doc appearance colormaps colormap colormap_7_thumb png doc complete_gallery colormap_7 example_colormap_8 doc appearance colormaps colormap colormap_8_thumb png doc complete_gallery colormap_8 example_colormap_9 doc appearance colormaps colormap colormap_9_thumb png doc complete_gallery colormap_9 example_colorbar_1 doc appearance colormaps colorbar colorbar_1_thumb png doc complete_gallery colorbar_1 example_colorbar_2 doc appearance colormaps colorbar colorbar_2_thumb png doc complete_gallery colorbar_2 example_colorbar_3 doc appearance colormaps colorbar colorbar_3_thumb png doc complete_gallery colorbar_3 example_colorbar_4 doc appearance colormaps colorbar colorbar_4_thumb png doc complete_gallery colorbar_4 example_colorbar_5 doc appearance colormaps colorbar colorbar_5_thumb png doc complete_gallery colorbar_5 example_colorbar_6 doc appearance colormaps colorbar colorbar_6_thumb png doc complete_gallery colorbar_6 example_colorbar_7 doc appearance colormaps colorbar colorbar_7_thumb png doc complete_gallery colorbar_7 example_rgbplot_1 doc appearance colormaps rgbplot rgbplot_1_thumb png doc complete_gallery rgbplot_1 example_rgbplot_2 doc appearance colormaps rgbplot rgbplot_2_thumb png doc complete_gallery rgbplot_2 example_view_1 doc appearance camera view view_1_thumb png doc complete_gallery view_1 example_view_2 doc appearance camera view view_2_thumb png doc complete_gallery view_2 example_view_3 doc appearance camera view view_3_thumb png doc complete_gallery view_3 example_view_4 doc appearance camera view view_4_thumb png doc complete_gallery view_4 example_view_5 doc appearance camera view view_5_thumb png doc complete_gallery view_5 example_view_6 doc appearance camera view view_6_thumb png doc complete_gallery view_6 example_lighting_1 doc appearance camera light lighting_1_thumb png doc complete_gallery lighting_1 example_lighting_2 doc appearance camera light lighting_2_thumb png doc complete_gallery lighting_2 example_lighting_3 doc appearance camera light lighting_3_thumb png doc complete_gallery lighting_3 example_lighting_4 doc appearance camera light lighting_4_thumb png doc complete_gallery lighting_4 example_lighting_5 doc appearance camera light lighting_5_thumb png doc complete_gallery lighting_5 example_lighting_6 doc appearance camera light lighting_6_thumb png doc complete_gallery lighting_6 example_figure_1 doc appearance figure figure_1_thumb png doc complete_gallery figure_1 example_figure_2 doc appearance figure figure_2_thumb png doc complete_gallery figure_2 example_figure_3 doc appearance figure figure_3_thumb png doc complete_gallery figure_3 example_line_spec_1 doc appearance line_spec line_spec_1_thumb png doc complete_gallery line_spec_1 example_axes_1 doc appearance axes_1_thumb png doc complete_gallery axes_1 example_axes_2 doc appearance axes_2_thumb png doc complete_gallery axes_2 example_axes_3 doc appearance axes_3_thumb png doc complete_gallery axes_3 example_axes_4 doc appearance axes_4_thumb png doc complete_gallery axes_4 example_cla_1 doc appearance cla cla_1_thumb png doc complete_gallery cla_1 example_cla_2 doc appearance cla cla_2_thumb png doc complete_gallery cla_2 example_cla_3 doc appearance cla cla_3_thumb png doc complete_gallery cla_3 example_save_1 doc export save save_1_thumb png doc complete_gallery save_1 example_save_2 doc export save save_2_thumb png doc complete_gallery save_2 example_save_3 doc export save save_3_thumb png doc complete_gallery save_3 example_save_4 doc export save save_4_thumb png doc complete_gallery save_4 example_save_5 doc export save save_5_thumb png doc complete_gallery save_5 example_save_6 doc export save save_6_thumb png doc complete_gallery save_6 example_save_7 doc export save save_7_thumb png doc complete_gallery save_7 example_save_8 doc export save save_8_thumb png doc complete_gallery save_8 integration package manager vcpkg vcpkg user matplot port formula homebrew mac user matplot formula andrew arch linux matplot available arch user repository note manually package follow instruction arch aur like recommend ease discus issue relate package refer comment section aur page matplotplusplus cmake embed subdirectory matplot directly cmake project subproject without instal convenient experiment library first time expect user matplot instal system check instal clone whole project add subdirectory cmake project create executable link library target want add header source however large project always recommend look matplot find_package include subdirectory avoid odr embed automatic fetchcontent cmake command automatically matplot repository check instal include fetchcontent cmake script declare source content let cmake repository include subdirectory create executable link library target want add header source however large project always recommend look matplot find_package include subdirectory avoid odr embed cpm cmake nice wrapper around cmake fetchcontent function check instal command add matplot script add header source however large project always recommend look matplot find_package include subdirectory avoid odr script let cpm cmake find external package library instal system call find_package cmake script create executable link library target want add header source see complete test integration cmakelists txt test integration cmakelists txt cmake able locate matplot config cmake script automatically instal library usr local linux mac unfortunately easy default directory find_package window warn default directory default library likely usr local linux mac program window installer try find directory usually keep library always perfect warn find package window unfortunately cmake single default directory package window like usr local lib cmake find matplot window instal library outside default directory linux mac environment variable reliable way set default directory environment variable create environment variable matplotpp_dir add env matplotpp_dir hint section find_package command tend convenient require path command line every time start version cmake implicitly consider _root environment variable hint every find_package call package registry cmake offer package alternative mechanism find package location cmake maintain list package information window registry hkey_current_user software kitware cmake package append cmake_module_path append directory something like list append cmake_module_path program matplotplusplus cmake_module_path list search path cmake module load include find_package command set dir variable directly directly set matplot _dir variable something like set matplot _dir program matplotplusplus lib cmake matplot might good enough small local project hard cod directory script library get local environment need choose option good make variable option require user provide directory command line every time bad support often useful let script matplot find_package fail cpm cmake set cpm_use_local_packages option try find_package matplot matplot fetchcontent follow pattern binary package get binary package release binary refer last release version matplot need recent version matplot binary package library source source source dependency make sure compiler support ubuntu gcc mac clang window msvc warn visit visual website git output something like ubuntu gcc mac clang window msvc warn visit visual website git need update compiler ubuntu gcc update version like gcc gcc instal new version gcc link update alternative instance gcc gcc link update alternative set default gcc recent version mac clang window msvc warn visit visual website git cmake also check cmake version least ubuntu gcc mac clang window msvc cmake instal version old cmake update ubuntu gcc warn alternatively recent version mac clang warn homebrew command fail computer follow instruction warn alternatively recent version window msvc warn recent version gnuplot gnuplot require runtime ubuntu gcc note late version installer make sure mark option add application directory path environment variable mac clang note late version installer make sure mark option add application directory path environment variable window msvc warn gnuplot gnuplot installer make sure mark option add application directory path environment variable warn window gnuplot terminal matplot display without console error gnuplot try gnuplot wxt terminal optional dependency script also look optional dependency manipulate image jpeg tiff zlib png lapack blas fftw opencv embed dependency dependency source 3rd_party source 3rd_party dependency bundle worry olvb nodesoup dtschump cimg define with_system_nodesoup with_system_cimg cmake command line system provide version dependency opengl dependency extra target matplot_opengl experimental opengl backend backends need define build_experimental_opengl_backend cmake command line target case script also look extra dependency opengl glad glfw3 dependency find script case dependency ubuntu gcc mac clang note glfw3 window msvc note glfw3 also see dependency source 3rd_party cmakelists txt source 3rd_party cmakelists txt directory ubuntu gcc mac clang window msvc hint parallel replace parallel parallel note set compiler compiler support default compiler make sure provide cmake compiler location dcmake_c_compiler dcmake_cxx_compiler option instance instal dbuild_examples dbuild_tests bypass test cmake matplot system ubuntu gcc mac clang window msvc hint parallel replace parallel parallel create package also create binary package matplot system ubuntu gcc mac clang window msvc plot type line plot line plot line plot line plot line plot stair stair error bar error bar area area loglog plot loglog plot semilogx plot semilogx plot semilogy plot semilogy plot function plot function plot function plot function plot implicit function implicit function line plot tip understand quickly library visualization interest understand library work late read detail complete article doc white value range read documentation see plot example_plot_1 doc line_plot plot plot_1 svg line_plot plot plot_1 cpp example_plot_2 doc line_plot plot plot_2_thumb png line_plot plot plot_2 cpp example_plot_3 doc line_plot plot plot_3_thumb png line_plot plot plot_3 cpp example_plot_4 doc line_plot plot plot_4_thumb png line_plot plot plot_4 cpp example_plot_5 doc line_plot plot plot_5_thumb png line_plot plot plot_5 cpp example_plot_6 doc line_plot plot plot_6_thumb png line_plot plot plot_6 cpp example_plot_7 doc line_plot plot plot_7_thumb png line_plot plot plot_7 cpp example_plot_8 doc line_plot plot plot_8_thumb png line_plot plot plot_8 cpp example_plot_9 doc line_plot plot plot_9_thumb png line_plot plot plot_9 cpp example_plot_10 doc line_plot plot plot_10_thumb png line_plot plot plot_10 cpp example_plot_11 doc line_plot plot plot_11_thumb png line_plot plot plot_11 cpp example_plot_12 doc line_plot plot plot_12_thumb png line_plot plot plot_12 cpp tip setter return reference allow method chain tip free stand function create plot also object orient style plot discus cod style section cod style cod style plot example_plot_2 doc line_plot plot plot_2 svg line_plot plot plot_2 cpp plot example_plot_3 doc line_plot plot plot_3 svg line_plot plot plot_3 cpp plot example_plot_4 doc line_plot plot plot_4 svg line_plot plot plot_4 cpp plot example_plot_5 doc line_plot plot plot_5 svg line_plot plot plot_5 cpp plot example_plot_6 doc line_plot plot plot_6 svg line_plot plot plot_6 cpp plot example_plot_7 doc line_plot plot plot_7 svg line_plot plot plot_7 cpp plot example_plot_8 doc line_plot plot plot_8 svg line_plot plot plot_8 cpp plot example_plot_9 doc line_plot plot plot_9 svg line_plot plot plot_9 cpp plot example_plot_10 doc line_plot plot plot_10 svg line_plot plot plot_10 cpp plot example_plot_11 doc line_plot plot plot_11 svg line_plot plot plot_11 cpp plot example_plot_12 doc line_plot plot plot_12 svg line_plot plot plot_12 cpp line plot plot example_plot3_1 doc line_plot plot3 plot3_1 svg line_plot plot3 plot3_1 cpp tip method chain example_plot3_2 doc line_plot plot3 plot3_2_thumb png line_plot plot3 plot3_2 cpp example_plot3_3 doc line_plot plot3 plot3_3_thumb png line_plot plot3 plot3_3 cpp example_plot3_4 doc line_plot plot3 plot3_4_thumb png line_plot plot3 plot3_4 cpp example_plot3_5 doc line_plot plot3 plot3_5_thumb png line_plot plot3 plot3_5 cpp example_plot3_7 doc line_plot plot3 plot3_7_thumb png line_plot plot3 plot3_7 cpp example_plot3_8 doc line_plot plot3 plot3_8_thumb png line_plot plot3 plot3_8 cpp example_plot3_9 doc line_plot plot3 plot3_9_thumb png line_plot plot3 plot3_9 cpp example_plot3_10 doc line_plot plot3 plot3_10_thumb png line_plot plot3 plot3_10 cpp plot example_plot3_2 doc line_plot plot3 plot3_2 svg line_plot plot3 plot3_2 cpp plot example_plot3_3 doc line_plot plot3 plot3_3 svg line_plot plot3 plot3_3 cpp plot example_plot3_4 doc line_plot plot3 plot3_4 png line_plot plot3 plot3_4 cpp plot example_plot3_5 doc line_plot plot3 plot3_5 svg line_plot plot3 plot3_5 cpp plot example_plot3_7 doc line_plot plot3 plot3_7 svg line_plot plot3 plot3_7 cpp plot example_plot3_8 doc line_plot plot3 plot3_8 svg line_plot plot3 plot3_8 cpp plot example_plot3_9 doc line_plot plot3 plot3_9 svg line_plot plot3 plot3_9 cpp plot example_plot3_10 doc line_plot plot3 plot3_10 svg line_plot plot3 plot3_10 cpp stair stair object render line stair point denote discrete see example_stairs_1 doc line_plot stair stairs_1 svg line_plot stair stairs_1 cpp example_stairs_2 doc line_plot stair stairs_2_thumb png line_plot stair stairs_2 cpp example_stairs_3 doc line_plot stair stairs_3_thumb png line_plot stair stairs_3 cpp example_stairs_4 doc line_plot stair stairs_4_thumb png line_plot stair stairs_4 cpp example_stairs_5 doc line_plot stair stairs_5_thumb png line_plot stair stairs_5 cpp example_stairs_6 doc line_plot stair stairs_6_thumb png line_plot stair stairs_6 cpp example_stairs_7 doc line_plot stair stairs_7_thumb png line_plot stair stairs_7 cpp example_stairs_8 doc line_plot stair stairs_8_thumb png line_plot stair stairs_8 cpp example_stairs_9 doc line_plot stair stairs_9_thumb png line_plot stair stairs_9 cpp example_stairs_10 doc line_plot stair stairs_10_thumb png line_plot stair stairs_10 cpp plot example_stairs_2 doc line_plot stair stairs_2 svg line_plot stair stairs_2 cpp plot example_stairs_3 doc line_plot stair stairs_3 svg line_plot stair stairs_3 cpp plot example_stairs_4 doc line_plot stair stairs_4 svg line_plot stair stairs_4 cpp plot example_stairs_5 doc line_plot stair stairs_5 svg line_plot stair stairs_5 cpp plot example_stairs_6 doc line_plot stair stairs_6 svg line_plot stair stairs_6 cpp plot example_stairs_7 doc line_plot stair stairs_7 svg line_plot stair stairs_7 cpp plot example_stairs_8 doc line_plot stair stairs_8 svg line_plot stair stairs_8 cpp plot example_stairs_9 doc line_plot stair stairs_9 svg line_plot stair stairs_9 cpp plot example_stairs_10 doc line_plot stair stairs_10 svg line_plot stair stairs_10 cpp error bar see example_errorbar_1 doc line_plot errorbar errorbar_1 svg line_plot errorbar errorbar_1 cpp example_errorbar_2 doc line_plot errorbar errorbar_2_thumb png line_plot errorbar errorbar_2 cpp example_errorbar_3 doc line_plot errorbar errorbar_3_thumb png line_plot errorbar errorbar_3 cpp example_errorbar_4 doc line_plot errorbar errorbar_4_thumb png line_plot errorbar errorbar_4 cpp example_errorbar_5 doc line_plot errorbar errorbar_5_thumb png line_plot errorbar errorbar_5 cpp example_errorbar_6 doc line_plot errorbar errorbar_6_thumb png line_plot errorbar errorbar_6 cpp example_errorbar_7 doc line_plot errorbar errorbar_7_thumb png line_plot errorbar errorbar_7 cpp example_errorbar_8 doc line_plot errorbar errorbar_8_thumb png line_plot errorbar errorbar_8 cpp example_errorbar_9 doc line_plot errorbar errorbar_9_thumb png line_plot errorbar errorbar_9 cpp example_errorbar_10 doc line_plot errorbar errorbar_10_thumb png line_plot errorbar errorbar_10 cpp plot example_errorbar_1 doc line_plot errorbar errorbar_1 svg line_plot errorbar errorbar_1 cpp plot example_errorbar_2 doc line_plot errorbar errorbar_2 svg line_plot errorbar errorbar_2 cpp plot example_errorbar_3 doc line_plot errorbar errorbar_3 svg line_plot errorbar errorbar_3 cpp plot example_errorbar_4 doc line_plot errorbar errorbar_4 svg line_plot errorbar errorbar_4 cpp plot example_errorbar_5 doc line_plot errorbar errorbar_5 svg line_plot errorbar errorbar_5 cpp plot example_errorbar_6 doc line_plot errorbar errorbar_6 svg line_plot errorbar errorbar_6 cpp plot example_errorbar_7 doc line_plot errorbar errorbar_7 svg line_plot errorbar errorbar_7 cpp plot example_errorbar_8 doc line_plot errorbar errorbar_8 svg line_plot errorbar errorbar_8 cpp plot example_errorbar_9 doc line_plot errorbar errorbar_9 svg line_plot errorbar errorbar_9 cpp plot example_errorbar_10 doc line_plot errorbar errorbar_10 svg line_plot errorbar errorbar_10 cpp error bar object include extra line represent error around point log plot utility function adjust logarithmic scale area see example_area_1 doc line_plot area area_1 svg line_plot area area_1 cpp example_area_2 doc line_plot area area_2_thumb png line_plot area area_2 cpp example_area_3 doc line_plot area area_3_thumb png line_plot area area_3 cpp example_area_4 doc line_plot area area_4_thumb png line_plot area area_4 cpp plot example_area_1 doc line_plot area area_1 svg line_plot area area_1 cpp plot example_area_2 doc line_plot area area_2 svg line_plot area area_2 cpp plot example_area_3 doc line_plot area area_3 svg line_plot area area_3 cpp plot example_area_4 doc line_plot area area_4 svg line_plot area area_4 cpp loglog plot see example_loglog_1 doc line_plot loglog loglog_1 svg line_plot loglog loglog_1 cpp example_loglog_2 doc line_plot loglog loglog_2_thumb png line_plot loglog loglog_2 cpp example_loglog_3 doc line_plot loglog loglog_3_thumb png line_plot loglog loglog_3 cpp example_loglog_4 doc line_plot loglog loglog_4_thumb png line_plot loglog loglog_4 cpp example_loglog_5 doc line_plot loglog loglog_5_thumb png line_plot loglog loglog_5 cpp example_loglog_6 doc line_plot loglog loglog_6_thumb png line_plot loglog loglog_6 cpp example_loglog_7 doc line_plot loglog loglog_7_thumb png line_plot loglog loglog_7 cpp example_loglog_8 doc line_plot loglog loglog_8_thumb png line_plot loglog loglog_8 cpp example_loglog_9 doc line_plot loglog loglog_9_thumb png line_plot loglog loglog_9 cpp plot example_loglog_1 doc line_plot loglog loglog_1 svg line_plot loglog loglog_1 cpp plot example_loglog_2 doc line_plot loglog loglog_2 svg line_plot loglog loglog_2 cpp plot example_loglog_3 doc line_plot loglog loglog_3 png line_plot loglog loglog_3 cpp plot example_loglog_4 doc line_plot loglog loglog_4 svg line_plot loglog loglog_4 cpp plot example_loglog_5 doc line_plot loglog loglog_5 png line_plot loglog loglog_5 cpp plot example_loglog_6 doc line_plot loglog loglog_6 svg line_plot loglog loglog_6 cpp plot example_loglog_7 doc line_plot loglog loglog_7 svg line_plot loglog loglog_7 cpp plot example_loglog_8 doc line_plot loglog loglog_8 svg line_plot loglog loglog_8 cpp plot example_loglog_9 doc line_plot loglog loglog_9 svg line_plot loglog loglog_9 cpp semilogx plot see example_semilogx_1 doc line_plot semilogx semilogx_1 svg line_plot semilogx semilogx_1 cpp plot example_semilogx_1 doc line_plot semilogx semilogx_1 svg line_plot semilogx semilogx_1 cpp semilogy plot see example_semilogy_1 doc line_plot semilogy semilogy_1 svg line_plot semilogy semilogy_1 cpp plot example_semilogy_1 doc line_plot semilogy semilogy_1 svg line_plot semilogy semilogy_1 cpp function plot see example_fplot_1 doc line_plot fplot fplot_1 svg line_plot fplot fplot_1 cpp example_fplot_2 doc line_plot fplot fplot_2_thumb png line_plot fplot fplot_2 cpp example_fplot_3 doc line_plot fplot fplot_3_thumb png line_plot fplot fplot_3 cpp example_fplot_4 doc line_plot fplot fplot_4_thumb png line_plot fplot fplot_4 cpp example_fplot_5 doc line_plot fplot fplot_5_thumb png line_plot fplot fplot_5 cpp example_fplot_6 doc line_plot fplot fplot_6_thumb png line_plot fplot fplot_6 cpp plot example_fplot_1 doc line_plot fplot fplot_1 svg line_plot fplot fplot_1 cpp plot example_fplot_2 doc line_plot fplot fplot_2 svg line_plot fplot fplot_2 cpp plot example_fplot_3 doc line_plot fplot fplot_3 png line_plot fplot fplot_3 cpp plot example_fplot_4 doc line_plot fplot fplot_4 png line_plot fplot fplot_4 cpp plot example_fplot_5 doc line_plot fplot fplot_5 png line_plot fplot fplot_5 cpp plot example_fplot_6 doc line_plot fplot fplot_6 svg line_plot fplot fplot_6 cpp instead store point object function line string function store function lambda function string expression object lazy evaluation generate absolute point generate draw function call function plot see example_fplot3_1 doc line_plot fplot3 fplot3_1 svg line_plot fplot3 fplot3_1 cpp example_fplot3_2 doc line_plot fplot3 fplot3_2_thumb png line_plot fplot3 fplot3_2 cpp example_fplot3_3 doc line_plot fplot3 fplot3_3_thumb png line_plot fplot3 fplot3_3 cpp example_fplot3_4 doc line_plot fplot3 fplot3_4_thumb png line_plot fplot3 fplot3_4 cpp example_fplot3_5 doc line_plot fplot3 fplot3_5_thumb png line_plot fplot3 fplot3_5 cpp plot example_fplot3_1 doc line_plot fplot3 fplot3_1 svg line_plot fplot3 fplot3_1 cpp plot example_fplot3_2 doc line_plot fplot3 fplot3_2 svg line_plot fplot3 fplot3_2 cpp plot example_fplot3_3 doc line_plot fplot3 fplot3_3 png line_plot fplot3 fplot3_3 cpp plot example_fplot3_4 doc line_plot fplot3 fplot3_4 svg line_plot fplot3 fplot3_4 cpp plot example_fplot3_5 doc line_plot fplot3 fplot3_5 svg line_plot fplot3 fplot3_5 cpp implicit function see example_fimplicit_1 doc line_plot fimplicit fimplicit_1 svg line_plot fimplicit fimplicit_1 cpp example_fimplicit_2 doc line_plot fimplicit fimplicit_2_thumb png line_plot fimplicit fimplicit_2 cpp example_fimplicit_3 doc line_plot fimplicit fimplicit_3_thumb png line_plot fimplicit fimplicit_3 cpp example_fimplicit_4 doc line_plot fimplicit fimplicit_4_thumb png line_plot fimplicit fimplicit_4 cpp plot example_fimplicit_1 doc line_plot fimplicit fimplicit_1 svg line_plot fimplicit fimplicit_1 cpp plot example_fimplicit_2 doc line_plot fimplicit fimplicit_2 svg line_plot fimplicit fimplicit_2 cpp plot example_fimplicit_3 doc line_plot fimplicit fimplicit_3 svg line_plot fimplicit fimplicit_3 cpp plot example_fimplicit_4 doc line_plot fimplicit fimplicit_4 svg line_plot fimplicit fimplicit_4 cpp distribution histogram histogram boxplot boxplot scatter plot scatter plot scatter plot scatter plot bin scatter plot bin scatter plot plot matrix plot matrix parallel coordinate parallel coordinate pie chart pie chart heatmap heatmap word cloud word cloud histogram histogram object create histogram edge bin draw function call first time lazy evaluation lazy evaluation avoid calculate edge unnecessarily case user change object parameter call draw object include several algorithm automatically delimit edge bin histogram see example_histogram_1 doc data_distribution histogram histogram_1 png data_distribution histogram histogram_1 cpp example_histogram_2 doc data_distribution histogram histogram_2_thumb png data_distribution histogram histogram_2 cpp example_histogram_3 doc data_distribution histogram histogram_3_thumb png data_distribution histogram histogram_3 cpp example_histogram_4 doc data_distribution histogram histogram_4_thumb png data_distribution histogram histogram_4 cpp example_histogram_5 doc data_distribution histogram histogram_5_thumb png data_distribution histogram histogram_5 cpp example_histogram_6 doc data_distribution histogram histogram_6_thumb png data_distribution histogram histogram_6 cpp example_histogram_7 doc data_distribution histogram histogram_7_thumb png data_distribution histogram histogram_7 cpp example_histogram_8 doc data_distribution histogram histogram_8_thumb png data_distribution histogram histogram_8 cpp example_histogram_9 doc data_distribution histogram histogram_9_thumb png data_distribution histogram histogram_9 cpp example_histogram_10 doc data_distribution histogram histogram_10_thumb png data_distribution histogram histogram_10 cpp example_histogram_11 doc data_distribution histogram histogram_11_thumb png data_distribution histogram histogram_11 cpp example_histogram_12 doc data_distribution histogram histogram_12_thumb png data_distribution histogram histogram_12 cpp example_histogram_14 doc data_distribution histogram histogram_14_thumb png data_distribution histogram histogram_14 cpp plot example_histogram_1 doc data_distribution histogram histogram_1 png data_distribution histogram histogram_1 cpp plot example_histogram_2 doc data_distribution histogram histogram_2 png data_distribution histogram histogram_2 cpp plot example_histogram_3 doc data_distribution histogram histogram_3 png data_distribution histogram histogram_3 cpp plot example_histogram_4 doc data_distribution histogram histogram_4 png data_distribution histogram histogram_4 cpp plot example_histogram_5 doc data_distribution histogram histogram_5 png data_distribution histogram histogram_5 cpp plot example_histogram_6 doc data_distribution histogram histogram_6 png data_distribution histogram histogram_6 cpp plot example_histogram_7 doc data_distribution histogram histogram_7 svg data_distribution histogram histogram_7 cpp plot example_histogram_8 doc data_distribution histogram histogram_8 png data_distribution histogram histogram_8 cpp plot example_histogram_9 doc data_distribution histogram histogram_9 png data_distribution histogram histogram_9 cpp plot example_histogram_10 doc data_distribution histogram histogram_10 svg data_distribution histogram histogram_10 cpp plot example_histogram_11 doc data_distribution histogram histogram_11 svg data_distribution histogram histogram_11 cpp plot example_histogram_12 doc data_distribution histogram histogram_12 svg data_distribution histogram histogram_12 cpp plot example_histogram_14 doc data_distribution histogram histogram_14 png data_distribution histogram histogram_14 cpp boxplot see example_boxplot_1 doc data_distribution boxplot boxplot_1 svg data_distribution boxplot boxplot_1 cpp example_boxplot_2 doc data_distribution boxplot boxplot_2_thumb png data_distribution boxplot boxplot_2 cpp example_boxplot_3 doc data_distribution boxplot boxplot_3_thumb png data_distribution boxplot boxplot_3 cpp plot example_boxplot_1 doc data_distribution boxplot boxplot_1 svg data_distribution boxplot boxplot_1 cpp plot example_boxplot_2 doc data_distribution boxplot boxplot_2 svg data_distribution boxplot boxplot_2 cpp plot example_boxplot_3 doc data_distribution boxplot boxplot_3 png data_distribution boxplot boxplot_3 cpp scatter plot see example_scatter_1 doc data_distribution scatter scatter_1 svg data_distribution scatter scatter_1 cpp example_scatter_2 doc data_distribution scatter scatter_2_thumb png data_distribution scatter scatter_2 cpp example_scatter_3 doc data_distribution scatter scatter_3_thumb png data_distribution scatter scatter_3 cpp example_scatter_4 doc data_distribution scatter scatter_4_thumb png data_distribution scatter scatter_4 cpp example_scatter_5 doc data_distribution scatter scatter_5_thumb png data_distribution scatter scatter_5 cpp example_scatter_6 doc data_distribution scatter scatter_6_thumb png data_distribution scatter scatter_6 cpp example_scatter_7 doc data_distribution scatter scatter_7_thumb png data_distribution scatter scatter_7 cpp example_scatter_8 doc data_distribution scatter scatter_8_thumb png data_distribution scatter scatter_8 cpp plot example_scatter_1 doc data_distribution scatter scatter_1 svg data_distribution scatter scatter_1 cpp plot example_scatter_2 doc data_distribution scatter scatter_2 svg data_distribution scatter scatter_2 cpp plot example_scatter_3 doc data_distribution scatter scatter_3 svg data_distribution scatter scatter_3 cpp plot example_scatter_4 doc data_distribution scatter scatter_4 svg data_distribution scatter scatter_4 cpp plot example_scatter_5 doc data_distribution scatter scatter_5 svg data_distribution scatter scatter_5 cpp plot example_scatter_6 doc data_distribution scatter scatter_6 svg data_distribution scatter scatter_6 cpp plot example_scatter_7 doc data_distribution scatter scatter_7 svg data_distribution scatter scatter_7 cpp plot example_scatter_8 doc data_distribution scatter scatter_8 svg data_distribution scatter scatter_8 cpp scatter plot also depend line object line object represent line marker scatter function simply create marker without line scatter plot see example_scatter3_1 doc data_distribution scatter3 scatter3_1 svg data_distribution scatter3 scatter3_1 cpp example_scatter3_2 doc data_distribution scatter3 scatter3_2_thumb png data_distribution scatter3 scatter3_2 cpp example_scatter3_3 doc data_distribution scatter3 scatter3_3_thumb png data_distribution scatter3 scatter3_3 cpp example_scatter3_4 doc data_distribution scatter3 scatter3_4_thumb png data_distribution scatter3 scatter3_4 cpp example_scatter3_5 doc data_distribution scatter3 scatter3_5_thumb png data_distribution scatter3 scatter3_5 cpp example_scatter3_6 doc data_distribution scatter3 scatter3_6_thumb png data_distribution scatter3 scatter3_6 cpp plot example_scatter3_1 doc data_distribution scatter3 scatter3_1 svg data_distribution scatter3 scatter3_1 cpp plot example_scatter3_2 doc data_distribution scatter3 scatter3_2 svg data_distribution scatter3 scatter3_2 cpp plot example_scatter3_3 doc data_distribution scatter3 scatter3_3 svg data_distribution scatter3 scatter3_3 cpp plot example_scatter3_4 doc data_distribution scatter3 scatter3_4 svg data_distribution scatter3 scatter3_4 cpp plot example_scatter3_5 doc data_distribution scatter3 scatter3_5 svg data_distribution scatter3 scatter3_5 cpp plot example_scatter3_6 doc data_distribution scatter3 scatter3_6 png data_distribution scatter3 scatter3_6 cpp bin scatter plot see example_binscatter_1 doc data_distribution binscatter binscatter_1 png data_distribution binscatter binscatter_1 cpp example_binscatter_2 doc data_distribution binscatter binscatter_2_thumb png data_distribution binscatter binscatter_2 cpp example_binscatter_3 doc data_distribution binscatter binscatter_3_thumb png data_distribution binscatter binscatter_3 cpp example_binscatter_4 doc data_distribution binscatter binscatter_4_thumb png data_distribution binscatter binscatter_4 cpp example_binscatter_5 doc data_distribution binscatter binscatter_5_thumb png data_distribution binscatter binscatter_5 cpp example_binscatter_6 doc data_distribution binscatter binscatter_6_thumb png data_distribution binscatter binscatter_6 cpp example_binscatter_7 doc data_distribution binscatter binscatter_7_thumb png data_distribution binscatter binscatter_7 cpp plot example_binscatter_1 doc data_distribution binscatter binscatter_1 png data_distribution binscatter binscatter_1 cpp plot example_binscatter_2 doc data_distribution binscatter binscatter_2 png data_distribution binscatter binscatter_2 cpp plot example_binscatter_3 doc data_distribution binscatter binscatter_3 png data_distribution binscatter binscatter_3 cpp plot example_binscatter_4 doc data_distribution binscatter binscatter_4 png data_distribution binscatter binscatter_4 cpp plot example_binscatter_5 doc data_distribution binscatter binscatter_5 png data_distribution binscatter binscatter_5 cpp plot example_binscatter_6 doc data_distribution binscatter binscatter_6 png data_distribution binscatter binscatter_6 cpp plot example_binscatter_7 doc data_distribution binscatter binscatter_7 svg data_distribution binscatter binscatter_7 cpp bin scatter plot variation histogram algorithm previous section extra step place dimensional bin represent vary color size useful many point scatter plot would impractical visualize plot matrix see example_plotmatrix_1 doc data_distribution plotmatrix plotmatrix_1 svg data_distribution plotmatrix plotmatrix_1 cpp example_plotmatrix_2 doc data_distribution plotmatrix plotmatrix_2_thumb png data_distribution plotmatrix plotmatrix_2 cpp example_plotmatrix_3 doc data_distribution plotmatrix plotmatrix_3_thumb png data_distribution plotmatrix plotmatrix_3 cpp example_plotmatrix_4 doc data_distribution plotmatrix plotmatrix_4_thumb png data_distribution plotmatrix plotmatrix_4 cpp plot example_plotmatrix_1 doc data_distribution plotmatrix plotmatrix_1 svg data_distribution plotmatrix plotmatrix_1 cpp plot example_plotmatrix_2 doc data_distribution plotmatrix plotmatrix_2 png data_distribution plotmatrix plotmatrix_2 cpp plot example_plotmatrix_3 doc data_distribution plotmatrix plotmatrix_3 png data_distribution plotmatrix plotmatrix_3 cpp plot example_plotmatrix_4 doc data_distribution plotmatrix plotmatrix_4 svg data_distribution plotmatrix plotmatrix_4 cpp plot matrix subcategory combination histogram scatter plot create matrix object figure create scatter plot pair set parallel coordinate see example_parallelplot_1 doc data_distribution parallelplot parallelplot_1 svg data_distribution parallelplot parallelplot_1 cpp example_parallelplot_2 doc data_distribution parallelplot parallelplot_2_thumb png data_distribution parallelplot parallelplot_2 cpp example_parallelplot_3 doc data_distribution parallelplot parallelplot_3_thumb png data_distribution parallelplot parallelplot_3 cpp plot example_parallelplot_1 doc data_distribution parallelplot parallelplot_1 svg data_distribution parallelplot parallelplot_1 cpp plot example_parallelplot_2 doc data_distribution parallelplot parallelplot_2 svg data_distribution parallelplot parallelplot_2 cpp plot example_parallelplot_3 doc data_distribution parallelplot parallelplot_3 svg data_distribution parallelplot parallelplot_3 cpp function parallelplot create plot parallel coordinate type plot parallel line object store arbitrary set axis object represent multi dimensional pie chart see example_pie_1 doc data_distribution pie pie_1 svg data_distribution pie pie_1 cpp example_pie_2 doc data_distribution pie pie_2_thumb png data_distribution pie pie_2 cpp example_pie_3 doc data_distribution pie pie_3_thumb png data_distribution pie pie_3 cpp example_pie_4 doc data_distribution pie pie_4_thumb png data_distribution pie pie_4 cpp example_pie_5 doc data_distribution pie pie_5_thumb png data_distribution pie pie_5 cpp example_pie_6 doc data_distribution pie pie_6_thumb png data_distribution pie pie_6 cpp plot example_pie_1 doc data_distribution pie pie_1 svg data_distribution pie pie_1 cpp plot example_pie_2 doc data_distribution pie pie_2 svg data_distribution pie pie_2 cpp plot example_pie_3 doc data_distribution pie pie_3 svg data_distribution pie pie_3 cpp plot example_pie_4 doc data_distribution pie pie_4 svg data_distribution pie pie_4 cpp plot example_pie_5 doc data_distribution pie pie_5 svg data_distribution pie pie_5 cpp plot example_pie_6 doc data_distribution pie pie_6 svg data_distribution pie pie_6 cpp heatmap see example_heatmap_1 doc data_distribution heatmap heatmap_1 png data_distribution heatmap heatmap_1 cpp example_heatmap_2 doc data_distribution heatmap heatmap_2_thumb png data_distribution heatmap heatmap_2 cpp example_heatmap_3 doc data_distribution heatmap heatmap_3_thumb png data_distribution heatmap heatmap_3 cpp example_heatmap_4 doc data_distribution heatmap heatmap_4_thumb png data_distribution heatmap heatmap_4 cpp example_heatmap_5 doc data_distribution heatmap heatmap_5_thumb png data_distribution heatmap heatmap_5 cpp example_heatmap_6 doc data_distribution heatmap heatmap_6_thumb png data_distribution heatmap heatmap_6 cpp example_heatmap_7 doc data_distribution heatmap heatmap_7_thumb png data_distribution heatmap heatmap_7 cpp plot example_heatmap_1 doc data_distribution heatmap heatmap_1 png data_distribution heatmap heatmap_1 cpp plot example_heatmap_2 doc data_distribution heatmap heatmap_2 png data_distribution heatmap heatmap_2 cpp plot example_heatmap_3 doc data_distribution heatmap heatmap_3 png data_distribution heatmap heatmap_3 cpp plot example_heatmap_4 doc data_distribution heatmap heatmap_4 png data_distribution heatmap heatmap_4 cpp plot example_heatmap_5 doc data_distribution heatmap heatmap_5 png data_distribution heatmap heatmap_5 cpp plot example_heatmap_6 doc data_distribution heatmap heatmap_6 png data_distribution heatmap heatmap_6 cpp plot example_heatmap_7 doc data_distribution heatmap heatmap_7 png data_distribution heatmap heatmap_7 cpp word cloud see example_wordcloud_1 doc data_distribution wordcloud wordcloud_1 png data_distribution wordcloud wordcloud_1 cpp example_wordcloud_3 doc data_distribution wordcloud wordcloud_3_thumb png data_distribution wordcloud wordcloud_3 cpp example_wordcloud_4 doc data_distribution wordcloud wordcloud_4_thumb png data_distribution wordcloud wordcloud_4 cpp example_wordcloud_4 doc data_distribution wordcloud wordcloud_4_thumb png data_distribution wordcloud wordcloud_4 cpp plot example_wordcloud_1 doc data_distribution wordcloud wordcloud_1 png data_distribution wordcloud wordcloud_1 cpp plot example_wordcloud_3 doc data_distribution wordcloud wordcloud_3 png data_distribution wordcloud wordcloud_3 cpp plot example_wordcloud_4 doc data_distribution wordcloud wordcloud_4 png data_distribution wordcloud wordcloud_4 cpp plot example_wordcloud_4 doc data_distribution wordcloud wordcloud_4 png data_distribution wordcloud wordcloud_4 cpp word cloud generate text pair word frequency attribute size proportional word frequency algorithm position label iterate word large small word spin word polar coordinate convert cartesian coordinate overlap word default color size depend word frequency customize color pas third parameter wordcloud function discrete bar plot bar plot pareto chart pareto chart stem plot stem plot stem plot stem plot bar plot see example_bar_1 doc discrete_data bar bar_1 png discrete_data bar bar_1 cpp example_bar_2 doc discrete_data bar bar_2_thumb png discrete_data bar bar_2 cpp example_bar_3 doc discrete_data bar bar_3_thumb png discrete_data bar bar_3 cpp example_bar_4 doc discrete_data bar bar_4_thumb png discrete_data bar bar_4 cpp example_bar_5 doc discrete_data bar bar_5_thumb png discrete_data bar bar_5 cpp example_bar_6 doc discrete_data bar bar_6_thumb png discrete_data bar bar_6 cpp example_bar_7 doc discrete_data bar bar_7_thumb png discrete_data bar bar_7 cpp example_bar_8 doc discrete_data bar bar_8_thumb png discrete_data bar bar_8 cpp example_bar_9 doc discrete_data bar bar_9_thumb png discrete_data bar bar_9 cpp example_bar_10 doc discrete_data bar bar_10_thumb png discrete_data bar bar_10 cpp example_bar_11 doc discrete_data bar bar_11_thumb png discrete_data bar bar_11 cpp example_bar_12 doc discrete_data bar bar_12_thumb png discrete_data bar bar_12 cpp example_bar_13 doc discrete_data bar bar_13_thumb png discrete_data bar bar_13 cpp plot example_bar_1 doc discrete_data bar bar_1 png discrete_data bar bar_1 cpp plot example_bar_2 doc discrete_data bar bar_2 png discrete_data bar bar_2 cpp plot example_bar_3 doc discrete_data bar bar_3 png discrete_data bar bar_3 cpp plot example_bar_4 doc discrete_data bar bar_4 png discrete_data bar bar_4 cpp plot example_bar_5 doc discrete_data bar bar_5 png discrete_data bar bar_5 cpp plot example_bar_6 doc discrete_data bar bar_6 png discrete_data bar bar_6 cpp plot example_bar_7 doc discrete_data bar bar_7 svg discrete_data bar bar_7 cpp plot example_bar_8 doc discrete_data bar bar_8 png discrete_data bar bar_8 cpp plot example_bar_9 doc discrete_data bar bar_9 png discrete_data bar bar_9 cpp plot example_bar_10 doc discrete_data bar bar_10 png discrete_data bar bar_10 cpp plot example_bar_11 doc discrete_data bar bar_11 png discrete_data bar bar_11 cpp plot example_bar_12 doc discrete_data bar bar_12 png discrete_data bar bar_12 cpp plot example_bar_13 doc discrete_data bar bar_13 png discrete_data bar bar_13 cpp pareto chart see example_pareto_1 doc discrete_data pareto pareto_1 svg discrete_data pareto pareto_1 cpp example_pareto_2 doc discrete_data pareto pareto_2_thumb png discrete_data pareto pareto_2 cpp example_pareto_3 doc discrete_data pareto pareto_3_thumb png discrete_data pareto pareto_3 cpp example_pareto_4 doc discrete_data pareto pareto_4_thumb png discrete_data pareto pareto_4 cpp plot example_pareto_1 doc discrete_data pareto pareto_1 svg discrete_data pareto pareto_1 cpp plot example_pareto_2 doc discrete_data pareto pareto_2 svg discrete_data pareto pareto_2 cpp plot example_pareto_3 doc discrete_data pareto pareto_3 svg discrete_data pareto pareto_3 cpp plot example_pareto_4 doc discrete_data pareto pareto_4 svg discrete_data pareto pareto_4 cpp pareto chart type chart see example_stem_1 doc discrete_data stem stem_1 svg discrete_data stem stem_1 cpp example_stem_2 doc discrete_data stem stem_2_thumb png discrete_data stem stem_2 cpp example_stem_3 doc discrete_data stem stem_3_thumb png discrete_data stem stem_3 cpp example_stem_4 doc discrete_data stem stem_4_thumb png discrete_data stem stem_4 cpp example_stem_5 doc discrete_data stem stem_5_thumb png discrete_data stem stem_5 cpp example_stem_6 doc discrete_data stem stem_6_thumb png discrete_data stem stem_6 cpp example_stem_7 doc discrete_data stem stem_7_thumb png discrete_data stem stem_7 cpp example_stem_8 doc discrete_data stem stem_8_thumb png discrete_data stem stem_8 cpp example_stem_9 doc discrete_data stem stem_9_thumb png discrete_data stem stem_9 cpp plot example_stem_1 doc discrete_data stem stem_1 svg discrete_data stem stem_1 cpp plot example_stem_2 doc discrete_data stem stem_2 svg discrete_data stem stem_2 cpp plot example_stem_3 doc discrete_data stem stem_3 svg discrete_data stem stem_3 cpp plot example_stem_4 doc discrete_data stem stem_4 svg discrete_data stem stem_4 cpp plot example_stem_5 doc discrete_data stem stem_5 svg discrete_data stem stem_5 cpp plot example_stem_6 doc discrete_data stem stem_6 svg discrete_data stem stem_6 cpp plot example_stem_7 doc discrete_data stem stem_7 svg discrete_data stem stem_7 cpp plot example_stem_8 doc discrete_data stem stem_8 svg discrete_data stem stem_8 cpp plot example_stem_9 doc discrete_data stem stem_9 svg discrete_data stem stem_9 cpp stem plot see example_stem3_1 doc discrete_data stem3 stem3_1 svg discrete_data stem3 stem3_1 cpp example_stem3_2 doc discrete_data stem3 stem3_2_thumb png discrete_data stem3 stem3_2 cpp example_stem3_3 doc discrete_data stem3 stem3_3_thumb png discrete_data stem3 stem3_3 cpp example_stem3_4 doc discrete_data stem3 stem3_4_thumb png discrete_data stem3 stem3_4 cpp example_stem3_5 doc discrete_data stem3 stem3_5_thumb png discrete_data stem3 stem3_5 cpp example_stem3_6 doc discrete_data stem3 stem3_6_thumb png discrete_data stem3 stem3_6 cpp example_stem3_7 doc discrete_data stem3 stem3_7_thumb png discrete_data stem3 stem3_7 cpp example_stem3_8 doc discrete_data stem3 stem3_8_thumb png discrete_data stem3 stem3_8 cpp example_stem3_9 doc discrete_data stem3 stem3_9_thumb png discrete_data stem3 stem3_9 cpp example_stem3_10 doc discrete_data stem3 stem3_10_thumb png discrete_data stem3 stem3_10 cpp example_stem3_11 doc discrete_data stem3 stem3_11_thumb png discrete_data stem3 stem3_11 cpp plot example_stem3_1 doc discrete_data stem3 stem3_1 svg discrete_data stem3 stem3_1 cpp plot example_stem3_2 doc discrete_data stem3 stem3_2 svg discrete_data stem3 stem3_2 cpp plot example_stem3_3 doc discrete_data stem3 stem3_3 svg discrete_data stem3 stem3_3 cpp plot example_stem3_4 doc discrete_data stem3 stem3_4 svg discrete_data stem3 stem3_4 cpp plot example_stem3_5 doc discrete_data stem3 stem3_5 svg discrete_data stem3 stem3_5 cpp plot example_stem3_6 doc discrete_data stem3 stem3_6 svg discrete_data stem3 stem3_6 cpp plot example_stem3_7 doc discrete_data stem3 stem3_7 svg discrete_data stem3 stem3_7 cpp plot example_stem3_8 doc discrete_data stem3 stem3_8 svg discrete_data stem3 stem3_8 cpp plot example_stem3_9 doc discrete_data stem3 stem3_9 svg discrete_data stem3 stem3_9 cpp plot example_stem3_10 doc discrete_data stem3 stem3_10 svg discrete_data stem3 stem3_10 cpp plot example_stem3_11 doc discrete_data stem3 stem3_11 svg discrete_data stem3 stem3_11 cpp geography geoplot geoplot geoscatter plot geoscatter plot geobubble geobubble geodensity plot geodensity plot geoplot see example_geoplot_1 doc geography geoplot geoplot_1 png geography geoplot geoplot_1 cpp example_geoplot_2 doc geography geoplot geoplot_2_thumb png geography geoplot geoplot_2 cpp example_geoplot_3 doc geography geoplot geoplot_3_thumb png geography geoplot geoplot_3 cpp example_geoplot_4 doc geography geoplot geoplot_4_thumb png geography geoplot geoplot_4 cpp example_geoplot_5 doc geography geoplot geoplot_5_thumb png geography geoplot geoplot_5 cpp example_geoplot_6 doc geography geoplot geoplot_6_thumb png geography geoplot geoplot_6 cpp example_geoplot_7 doc geography geoplot geoplot_7_thumb png geography geoplot geoplot_7 cpp plot example_geoplot_1 doc geography geoplot geoplot_1 png geography geoplot geoplot_1 cpp plot example_geoplot_2 doc geography geoplot geoplot_2 png geography geoplot geoplot_2 cpp plot example_geoplot_3 doc geography geoplot geoplot_3 png geography geoplot geoplot_3 cpp plot example_geoplot_4 doc geography geoplot geoplot_4 png geography geoplot geoplot_4 cpp plot example_geoplot_5 doc geography geoplot geoplot_5 png geography geoplot geoplot_5 cpp plot example_geoplot_6 doc geography geoplot geoplot_6 png geography geoplot geoplot_6 cpp plot example_geoplot_7 doc geography geoplot geoplot_7 png geography geoplot geoplot_7 cpp first geography plot matplot call geoplot create fill polygon world map first plot receive tag map subsequent geography plot recognize need recreate world map world map come natural earth provide 10m 50m 110m scale geoplot function initially 110m scale geolimits function update axis limit geography plot difference usual function adjust axis limit xlim ylim geolimits latter also update map resolution accord new limit see example_geoscatter_1 doc geography geoscatter geoscatter_1 png geography geoscatter geoscatter_1 cpp example_geoscatter_2 doc geography geoscatter geoscatter_2_thumb png geography geoscatter geoscatter_2 cpp plot example_geoscatter_1 doc geography geoscatter geoscatter_1 png geography geoscatter geoscatter_1 cpp plot example_geoscatter_2 doc geography geoscatter geoscatter_2 png geography geoscatter geoscatter_2 cpp geobubble see example_geobubble_1 doc geography geobubble geobubble_1 png geography geobubble geobubble_1 cpp example_geobubble_2 doc geography geobubble geobubble_2_thumb png geography geobubble geobubble_2 cpp plot example_geobubble_1 doc geography geobubble geobubble_1 png geography geobubble geobubble_1 cpp plot example_geobubble_2 doc geography geobubble geobubble_2 png geography geobubble geobubble_2 cpp geodensity plot see example_geodensityplot_1 doc geography geodensityplot geodensityplot_1 png geography geodensityplot geodensityplot_1 cpp plot example_geodensityplot_1 doc geography geodensityplot geodensityplot_1 png geography geodensityplot geodensityplot_1 cpp polar plot polar line plot polar line plot polar scatter plot polar scatter plot polar histogram polar histogram compass compass polar function polar function polar line plot see example_polarplot_1 doc polar_plots polarplot polarplot_1 svg polar_plots polarplot polarplot_1 cpp example_polarplot_2 doc polar_plots polarplot polarplot_2_thumb png polar_plots polarplot polarplot_2 cpp example_polarplot_3 doc polar_plots polarplot polarplot_3_thumb png polar_plots polarplot polarplot_3 cpp example_polarplot_4 doc polar_plots polarplot polarplot_4_thumb png polar_plots polarplot polarplot_4 cpp example_polarplot_5 doc polar_plots polarplot polarplot_5_thumb png polar_plots polarplot polarplot_5 cpp example_polarplot_6 doc polar_plots polarplot polarplot_6_thumb png polar_plots polarplot polarplot_6 cpp example_polarplot_7 doc polar_plots polarplot polarplot_7_thumb png polar_plots polarplot polarplot_7 cpp example_polarplot_8 doc polar_plots polarplot polarplot_8_thumb png polar_plots polarplot polarplot_8 cpp plot example_polarplot_1 doc polar_plots polarplot polarplot_1 svg polar_plots polarplot polarplot_1 cpp plot example_polarplot_2 doc polar_plots polarplot polarplot_2 svg polar_plots polarplot polarplot_2 cpp plot example_polarplot_3 doc polar_plots polarplot polarplot_3 svg polar_plots polarplot polarplot_3 cpp plot example_polarplot_4 doc polar_plots polarplot polarplot_4 svg polar_plots polarplot polarplot_4 cpp plot example_polarplot_5 doc polar_plots polarplot polarplot_5 svg polar_plots polarplot polarplot_5 cpp plot example_polarplot_6 doc polar_plots polarplot polarplot_6 svg polar_plots polarplot polarplot_6 cpp plot example_polarplot_7 doc polar_plots polarplot polarplot_7 svg polar_plots polarplot polarplot_7 cpp plot example_polarplot_8 doc polar_plots polarplot polarplot_8 svg polar_plots polarplot polarplot_8 cpp emplace polar plot move polar mode see example_polarscatter_1 doc polar_plots polarscatter polarscatter_1 svg polar_plots polarscatter polarscatter_1 cpp example_polarscatter_2 doc polar_plots polarscatter polarscatter_2_thumb png polar_plots polarscatter polarscatter_2 cpp example_polarscatter_3 doc polar_plots polarscatter polarscatter_3_thumb png polar_plots polarscatter polarscatter_3 cpp example_polarscatter_4 doc polar_plots polarscatter polarscatter_4_thumb png polar_plots polarscatter polarscatter_4 cpp example_polarscatter_5 doc polar_plots polarscatter polarscatter_5_thumb png polar_plots polarscatter polarscatter_5 cpp example_polarscatter_6 doc polar_plots polarscatter polarscatter_6_thumb png polar_plots polarscatter polarscatter_6 cpp plot example_polarscatter_1 doc polar_plots polarscatter polarscatter_1 svg polar_plots polarscatter polarscatter_1 cpp plot example_polarscatter_2 doc polar_plots polarscatter polarscatter_2 svg polar_plots polarscatter polarscatter_2 cpp plot example_polarscatter_3 doc polar_plots polarscatter polarscatter_3 svg polar_plots polarscatter polarscatter_3 cpp plot example_polarscatter_4 doc polar_plots polarscatter polarscatter_4 svg polar_plots polarscatter polarscatter_4 cpp plot example_polarscatter_5 doc polar_plots polarscatter polarscatter_5 svg polar_plots polarscatter polarscatter_5 cpp plot example_polarscatter_6 doc polar_plots polarscatter polarscatter_6 svg polar_plots polarscatter polarscatter_6 cpp polar histogram see example_polarhistogram_1 doc polar_plots polarhistogram polarhistogram_1 svg polar_plots polarhistogram polarhistogram_1 cpp example_polarhistogram_2 doc polar_plots polarhistogram polarhistogram_2_thumb png polar_plots polarhistogram polarhistogram_2 cpp example_polarhistogram_3 doc polar_plots polarhistogram polarhistogram_3_thumb png polar_plots polarhistogram polarhistogram_3 cpp example_polarhistogram_4 doc polar_plots polarhistogram polarhistogram_4_thumb png polar_plots polarhistogram polarhistogram_4 cpp example_polarhistogram_5 doc polar_plots polarhistogram polarhistogram_5_thumb png polar_plots polarhistogram polarhistogram_5 cpp plot example_polarhistogram_1 doc polar_plots polarhistogram polarhistogram_1 svg polar_plots polarhistogram polarhistogram_1 cpp plot example_polarhistogram_2 doc polar_plots polarhistogram polarhistogram_2 svg polar_plots polarhistogram polarhistogram_2 cpp plot example_polarhistogram_3 doc polar_plots polarhistogram polarhistogram_3 svg polar_plots polarhistogram polarhistogram_3 cpp plot example_polarhistogram_4 doc polar_plots polarhistogram polarhistogram_4 svg polar_plots polarhistogram polarhistogram_4 cpp plot example_polarhistogram_5 doc polar_plots polarhistogram polarhistogram_5 svg polar_plots polarhistogram polarhistogram_5 cpp function polarhistogram distribute number bin provide second parameter compass see example_compass_1 doc polar_plots compass compass_1 png polar_plots compass compass_1 cpp example_compass_2 doc polar_plots compass compass_2_thumb png polar_plots compass compass_2 cpp plot example_compass_1 doc polar_plots compass compass_1 svg polar_plots compass compass_1 cpp plot example_compass_2 doc polar_plots compass compass_2 svg polar_plots compass compass_2 cpp polar function see example_ezpolar_1 doc polar_plots ezpolar ezpolar_1 svg polar_plots ezpolar ezpolar_1 cpp example_ezpolar_2 doc polar_plots ezpolar ezpolar_2_thumb png polar_plots ezpolar ezpolar_2 cpp plot example_ezpolar_1 doc polar_plots ezpolar ezpolar_1 svg polar_plots ezpolar ezpolar_1 cpp plot example_ezpolar_2 doc polar_plots ezpolar ezpolar_2 svg polar_plots ezpolar ezpolar_2 cpp contour plot contour contour fill contour fill contour function contour function contour contour see example_contour_1 doc contour_plots contour contour_1 svg contour_plots contour contour_1 cpp example_contour_2 doc contour_plots contour contour_2_thumb png contour_plots contour contour_2 cpp example_contour_3 doc contour_plots contour contour_3_thumb png contour_plots contour contour_3 cpp example_contour_4 doc contour_plots contour contour_4_thumb png contour_plots contour contour_4 cpp example_contour_5 doc contour_plots contour contour_5_thumb png contour_plots contour contour_5 cpp example_contour_6 doc contour_plots contour contour_6_thumb png contour_plots contour contour_6 cpp example_contour_7 doc contour_plots contour contour_7_thumb png contour_plots contour contour_7 cpp example_contour_8 doc contour_plots contour contour_8_thumb png contour_plots contour contour_8 cpp plot example_contour_1 doc contour_plots contour contour_1 svg contour_plots contour contour_1 cpp plot example_contour_2 doc contour_plots contour contour_2 svg contour_plots contour contour_2 cpp plot example_contour_3 doc contour_plots contour contour_3 svg contour_plots contour contour_3 cpp plot example_contour_4 doc contour_plots contour contour_4 svg contour_plots contour contour_4 cpp plot example_contour_5 doc contour_plots contour contour_5 svg contour_plots contour contour_5 cpp plot example_contour_6 doc contour_plots contour contour_6 svg contour_plots contour contour_6 cpp plot example_contour_7 doc contour_plots contour contour_7 svg contour_plots contour contour_7 cpp plot example_contour_8 doc contour_plots contour contour_8 svg contour_plots contour contour_8 cpp subcategories depend contour type also depend lazy evaluation generate contour line function draw call contour class preprocesses contour line dimensional function although relatively simple show heatmap value see example_contourf_1 doc contour_plots contourf contourf_1 svg contour_plots contourf contourf_1 cpp example_contourf_2 doc contour_plots contourf contourf_2_thumb png contour_plots contourf contourf_2 cpp example_contourf_3 doc contour_plots contourf contourf_3_thumb png contour_plots contourf contourf_3 cpp example_contourf_4 doc contour_plots contourf contourf_4_thumb png contour_plots contourf contourf_4 cpp example_contourf_5 doc contour_plots contourf contourf_5_thumb png contour_plots contourf contourf_5 cpp example_contourf_6 doc contour_plots contourf contourf_6_thumb png contour_plots contourf contourf_6 cpp plot example_contourf_1 doc contour_plots contourf contourf_1 svg contour_plots contourf contourf_1 cpp plot example_contourf_2 doc contour_plots contourf contourf_2 png contour_plots contourf contourf_2 cpp plot example_contourf_3 doc contour_plots contourf contourf_3 png contour_plots contourf contourf_3 cpp plot example_contourf_4 doc contour_plots contourf contourf_4 png contour_plots contourf contourf_4 cpp plot example_contourf_5 doc contour_plots contourf contourf_5 png contour_plots contourf contourf_5 cpp plot example_contourf_6 doc contour_plots contourf contourf_6 svg contour_plots contourf contourf_6 cpp function contour see example_fcontour_1 doc contour_plots fcontour fcontour_1 svg contour_plots fcontour fcontour_1 cpp example_fcontour_2 doc contour_plots fcontour fcontour_2_thumb png contour_plots fcontour fcontour_2 cpp example_fcontour_3 doc contour_plots fcontour fcontour_3_thumb png contour_plots fcontour fcontour_3 cpp example_fcontour_4 doc contour_plots fcontour fcontour_4_thumb png contour_plots fcontour fcontour_4 cpp example_fcontour_5 doc contour_plots fcontour fcontour_5_thumb png contour_plots fcontour fcontour_5 cpp example_fcontour_6 doc contour_plots fcontour fcontour_6_thumb png contour_plots fcontour fcontour_6 cpp example_fcontour_7 doc contour_plots fcontour fcontour_7_thumb png contour_plots fcontour fcontour_7 cpp example_fcontour_8 doc contour_plots fcontour fcontour_8_thumb png contour_plots fcontour fcontour_8 cpp example_fcontour_9 doc contour_plots fcontour fcontour_9_thumb png contour_plots fcontour fcontour_9 cpp example_fcontour_10 doc contour_plots fcontour fcontour_10_thumb png contour_plots fcontour fcontour_10 cpp example_fcontour_11 doc contour_plots fcontour fcontour_11_thumb png contour_plots fcontour fcontour_11 cpp plot example_fcontour_1 doc contour_plots fcontour fcontour_1 svg contour_plots fcontour fcontour_1 cpp plot example_fcontour_2 doc contour_plots fcontour fcontour_2 svg contour_plots fcontour fcontour_2 cpp plot example_fcontour_3 doc contour_plots fcontour fcontour_3 svg contour_plots fcontour fcontour_3 cpp plot example_fcontour_4 doc contour_plots fcontour fcontour_4 svg contour_plots fcontour fcontour_4 cpp plot example_fcontour_5 doc contour_plots fcontour fcontour_5 svg contour_plots fcontour fcontour_5 cpp plot example_fcontour_6 doc contour_plots fcontour fcontour_6 png contour_plots fcontour fcontour_6 cpp plot example_fcontour_7 doc contour_plots fcontour fcontour_7 png contour_plots fcontour fcontour_7 cpp plot example_fcontour_8 doc contour_plots fcontour fcontour_8 svg contour_plots fcontour fcontour_8 cpp plot example_fcontour_9 doc contour_plots fcontour fcontour_9 png contour_plots fcontour fcontour_9 cpp plot example_fcontour_10 doc contour_plots fcontour fcontour_10 png contour_plots fcontour fcontour_10 cpp plot example_fcontour_11 doc contour_plots fcontour fcontour_11 png contour_plots fcontour fcontour_11 cpp default function fcontour generate contour line lambda function function contour contourf hand plot contour line fill contour line grid point feather feather quiver quiver quiver quiver quiver see example_quiver_1 doc vector_fields quiver quiver_1 svg vector_fields quiver quiver_1 cpp example_quiver_2 doc vector_fields quiver quiver_2_thumb png vector_fields quiver quiver_2 cpp example_quiver_3 doc vector_fields quiver quiver_3_thumb png vector_fields quiver quiver_3 cpp example_quiver_4 doc vector_fields quiver quiver_4_thumb png vector_fields quiver quiver_4 cpp plot example_quiver_1 doc vector_fields quiver quiver_1 svg vector_fields quiver quiver_1 cpp plot example_quiver_2 doc vector_fields quiver quiver_2 svg vector_fields quiver quiver_2 cpp plot example_quiver_3 doc vector_fields quiver quiver_3 svg vector_fields quiver quiver_3 cpp plot example_quiver_4 doc vector_fields quiver quiver_4 svg vector_fields quiver quiver_4 cpp plot example_quiver_6 doc vector_fields quiver quiver_6 svg vector_fields quiver quiver_6 cpp subcategories depend vector object type dimensional plot value see example_quiver3_1 doc vector_fields quiver3 quiver3_1 svg vector_fields quiver3 quiver3_1 cpp plot example_quiver3_1 doc vector_fields quiver3 quiver3_1 svg vector_fields quiver3 quiver3_1 cpp plot example_quiver3_2 doc vector_fields quiver3 quiver3_2 svg vector_fields quiver3 quiver3_2 cpp feather see example_feather_1 doc vector_fields feather feather_1 svg vector_fields feather feather_1 cpp plot example_feather_1 doc vector_fields feather feather_1 svg vector_fields feather feather_1 cpp surface surface surface surface contour surface contour mesh mesh mesh contour mesh contour mesh curtain mesh curtain function surface function surface function mesh function mesh waterfall waterfall fence fence ribbon ribbon surface see example_surf_1 doc surface surf surf_1 png surface surf surf_1 cpp example_surf_2 doc surface surf surf_2_thumb png surface surf surf_2 cpp example_surf_3 doc surface surf surf_3_thumb png surface surf surf_3 cpp example_surf_4 doc surface surf surf_4_thumb png surface surf surf_4 cpp example_surf_5 doc surface surf surf_5_thumb png surface surf surf_5 cpp example_surf_6 doc surface surf surf_6_thumb png surface surf surf_6 cpp plot example_surf_1 doc surface surf surf_1 png surface surf surf_1 cpp plot example_surf_2 doc surface surf surf_2 svg surface surf surf_2 cpp plot example_surf_3 doc surface surf surf_3 svg surface surf surf_3 cpp plot example_surf_4 doc surface surf surf_4 svg surface surf surf_4 cpp plot example_surf_5 doc surface surf surf_5 svg surface surf surf_5 cpp plot example_surf_6 doc surface surf surf_6 svg surface surf surf_6 cpp surface contour see example_surfc_1 doc surface surfc surfc_1 png surface surfc surfc_1 cpp example_surfc_2 doc surface surfc surfc_2_thumb png surface surfc surfc_2 cpp example_surfc_3 doc surface surfc surfc_3_thumb png surface surfc surfc_3 cpp example_surfc_4 doc surface surfc surfc_4_thumb png surface surfc surfc_4 cpp plot example_surfc_1 doc surface surfc surfc_1 png surface surfc surfc_1 cpp plot example_surfc_2 doc surface surfc surfc_2 svg surface surfc surfc_2 cpp plot example_surfc_3 doc surface surfc surfc_3 png surface surfc surfc_3 cpp plot example_surfc_4 doc surface surfc surfc_4 png surface surfc surfc_4 cpp mesh see example_mesh_1 doc surface mesh mesh_1 png surface mesh mesh_1 cpp example_mesh_2 doc surface mesh mesh_2_thumb png surface mesh mesh_2 cpp example_mesh_3 doc surface mesh mesh_3_thumb png surface mesh mesh_3 cpp example_mesh_4 doc surface mesh mesh_4_thumb png surface mesh mesh_4 cpp plot example_mesh_1 doc surface mesh mesh_1 png surface mesh mesh_1 cpp plot example_mesh_2 doc surface mesh mesh_2 png surface mesh mesh_2 cpp plot example_mesh_3 doc surface mesh mesh_3 svg surface mesh mesh_3 cpp plot example_mesh_4 doc surface mesh mesh_4 svg surface mesh mesh_4 cpp mesh contour see example_meshc_1 doc surface meshc meshc_1 png surface meshc meshc_1 cpp example_meshc_2 doc surface meshc meshc_2_thumb png surface meshc meshc_2 cpp example_meshc_3 doc surface meshc meshc_3_thumb png surface meshc meshc_3 cpp plot example_meshc_1 doc surface meshc meshc_1 png surface meshc meshc_1 cpp plot example_meshc_2 doc surface meshc meshc_2 png surface meshc meshc_2 cpp plot example_meshc_3 doc surface meshc meshc_3 png surface meshc meshc_3 cpp mesh curtain see example_meshz_1 doc surface meshz meshz_1 png surface meshz meshz_1 cpp example_meshz_2 doc surface meshz meshz_2_thumb png surface meshz meshz_2 cpp example_meshz_3 doc surface meshz meshz_3_thumb png surface meshz meshz_3 cpp plot example_meshz_1 doc surface meshz meshz_1 png surface meshz meshz_1 cpp plot example_meshz_2 doc surface meshz meshz_2 png surface meshz meshz_2 cpp plot example_meshz_3 doc surface meshz meshz_3 png surface meshz meshz_3 cpp function surface see example_fsurf_1 doc surface fsurf fsurf_1 png surface fsurf fsurf_1 cpp example_fsurf_2 doc surface fsurf fsurf_2_thumb png surface fsurf fsurf_2 cpp example_fsurf_3 doc surface fsurf fsurf_3_thumb png surface fsurf fsurf_3 cpp example_fsurf_4 doc surface fsurf fsurf_4_thumb png surface fsurf fsurf_4 cpp example_fsurf_5 doc surface fsurf fsurf_5_thumb png surface fsurf fsurf_5 cpp example_fsurf_6 doc surface fsurf fsurf_6_thumb png surface fsurf fsurf_6 cpp example_fsurf_7 doc surface fsurf fsurf_7_thumb png surface fsurf fsurf_7 cpp example_fsurf_8 doc surface fsurf fsurf_8_thumb png surface fsurf fsurf_8 cpp plot example_fsurf_1 doc surface fsurf fsurf_1 png surface fsurf fsurf_1 cpp plot example_fsurf_2 doc surface fsurf fsurf_2 png surface fsurf fsurf_2 cpp plot example_fsurf_3 doc surface fsurf fsurf_3 png surface fsurf fsurf_3 cpp plot example_fsurf_4 doc surface fsurf fsurf_4 png surface fsurf fsurf_4 cpp plot example_fsurf_5 doc surface fsurf fsurf_5 png surface fsurf fsurf_5 cpp plot example_fsurf_6 doc surface fsurf fsurf_6 png surface fsurf fsurf_6 cpp plot example_fsurf_7 doc surface fsurf fsurf_7 png surface fsurf fsurf_7 cpp plot example_fsurf_8 doc surface fsurf fsurf_8 png surface fsurf fsurf_8 cpp function mesh see example_fmesh_1 doc surface fmesh fmesh_1 png surface fmesh fmesh_1 cpp example_fmesh_2 doc surface fmesh fmesh_2_thumb png surface fmesh fmesh_2 cpp example_fmesh_3 doc surface fmesh fmesh_3_thumb png surface fmesh fmesh_3 cpp example_fmesh_4 doc surface fmesh fmesh_4_thumb png surface fmesh fmesh_4 cpp plot example_fmesh_1 doc surface fmesh fmesh_1 png surface fmesh fmesh_1 cpp plot example_fmesh_2 doc surface fmesh fmesh_2 svg surface fmesh fmesh_2 cpp plot example_fmesh_3 doc surface fmesh fmesh_3 png surface fmesh fmesh_3 cpp plot example_fmesh_4 doc surface fmesh fmesh_4 png surface fmesh fmesh_4 cpp waterfall see example_waterfall_1 doc surface waterfall waterfall_1 png surface waterfall waterfall_1 cpp example_waterfall_2 doc surface waterfall waterfall_2_thumb png surface waterfall waterfall_2 cpp example_waterfall_3 doc surface waterfall waterfall_3_thumb png surface waterfall waterfall_3 cpp plot example_waterfall_1 doc surface waterfall waterfall_1 png surface waterfall waterfall_1 cpp plot example_waterfall_2 doc surface waterfall waterfall_2 png surface waterfall waterfall_2 cpp plot example_waterfall_3 doc surface waterfall waterfall_3 svg surface waterfall waterfall_3 cpp fence see example_fence_1 doc surface fence fence_1 png surface fence fence_1 cpp example_fence_2 doc surface fence fence_2_thumb png surface fence fence_2 cpp example_fence_3 doc surface fence fence_3_thumb png surface fence fence_3 cpp plot example_fence_1 doc surface fence fence_1 png surface fence fence_1 cpp plot example_fence_2 doc surface fence fence_2 png surface fence fence_2 cpp plot example_fence_3 doc surface fence fence_3 png surface fence fence_3 cpp ribbon see example_ribbon_1 doc surface ribbon ribbon_1 png surface ribbon ribbon_1 cpp example_ribbon_2 doc surface ribbon ribbon_2_thumb png surface ribbon ribbon_2 cpp example_ribbon_3 doc surface ribbon ribbon_3_thumb png surface ribbon ribbon_3 cpp example_ribbon_4 doc surface ribbon ribbon_4_thumb png surface ribbon ribbon_4 cpp plot example_ribbon_1 doc surface ribbon ribbon_1 png surface ribbon ribbon_1 cpp plot example_ribbon_2 doc surface ribbon ribbon_2 png surface ribbon ribbon_2 cpp plot example_ribbon_3 doc surface ribbon ribbon_3 svg surface ribbon ribbon_3 cpp plot example_ribbon_4 doc surface ribbon ribbon_4 png surface ribbon ribbon_4 cpp graph undirected graph undirected graph direct graph direct graph undirected graph see example_graph_1 doc graph graph graph_1 svg graph graph graph_1 cpp example_graph_2 doc graph graph graph_2_thumb png graph graph graph_2 cpp example_graph_3 doc graph graph graph_3_thumb png graph graph graph_3 cpp example_graph_4 doc graph graph graph_4_thumb png graph graph graph_4 cpp example_graph_5 doc graph graph graph_5_thumb png graph graph graph_5 cpp plot example_graph_1 doc graph graph graph_1 svg graph graph graph_1 cpp plot example_graph_2 doc graph graph graph_2 svg graph graph graph_2 cpp plot example_graph_3 doc graph graph graph_3 svg graph graph graph_3 cpp plot example_graph_4 doc graph graph graph_4 svg graph graph graph_4 cpp plot example_graph_5 doc graph graph graph_5 svg graph graph graph_5 cpp subcategories depend class graph abstract structure represent object relationship object object represent vertex relationship depict edge abstract graph vertex specific position space mathematically graph depend layout however graph layout large impact understandability class calculate appropriate position graph vertex several algorithm kamada kawai algorithm fruchterman reingold algorithm circle layout random layout automatic layout kamada kawai fruchterman reingold algorithm depend nodesoup library automatic layout kamada kawai algorithm small graph fruchterman reingold algorithm large graph direct graph see example_digraph_1 doc graph digraph digraph_1 svg graph digraph digraph_1 cpp example_digraph_2 doc graph digraph digraph_2_thumb png graph digraph digraph_2 cpp example_digraph_3 doc graph digraph digraph_3_thumb png graph digraph digraph_3 cpp plot example_digraph_1 doc graph digraph digraph_1 svg graph digraph digraph_1 cpp plot example_digraph_2 doc graph digraph digraph_2 svg graph digraph digraph_2 cpp plot example_digraph_3 doc graph digraph digraph_3 svg graph digraph digraph_3 cpp image image show image show image matrix image matrix scale image scale image image show see example_imshow_1 doc image imshow imshow_1 png image imshow imshow_1 cpp example_imshow_2 doc image imshow imshow_2_thumb png image imshow imshow_2 cpp example_imshow_3 doc image imshow imshow_3_thumb png image imshow imshow_3 cpp example_imshow_4 doc image imshow imshow_4_thumb png image imshow imshow_4 cpp example_imshow_5 doc image imshow imshow_5_thumb png image imshow imshow_5 cpp example_imshow_6 doc image imshow imshow_6_thumb png image imshow imshow_6 cpp example_imshow_7 doc image imshow imshow_7_thumb png image imshow imshow_7 cpp example_imshow_8 doc image imshow imshow_8_thumb png image imshow imshow_8 cpp example_imshow_9 doc image imshow imshow_9_thumb png image imshow imshow_9 cpp example_imshow_10 doc image imshow imshow_10_thumb png image imshow imshow_10 cpp example_imshow_11 doc image imshow imshow_11_thumb png image imshow imshow_11 cpp plot example_imshow_1 doc image imshow imshow_1 png image imshow imshow_1 cpp plot example_imshow_2 doc image imshow imshow_2 png image imshow imshow_2 cpp plot example_imshow_3 doc image imshow imshow_3 svg image imshow imshow_3 cpp plot example_imshow_4 doc image imshow imshow_4 png image imshow imshow_4 cpp plot example_imshow_5 doc image imshow imshow_5 png image imshow imshow_5 cpp plot example_imshow_6 doc image imshow imshow_6 png image imshow imshow_6 cpp plot example_imshow_7 doc image imshow imshow_7 png image imshow imshow_7 cpp plot example_imshow_8 doc image imshow imshow_8 png image imshow imshow_8 cpp plot example_imshow_9 doc image imshow imshow_9 svg image imshow imshow_9 cpp plot example_imshow_10 doc image imshow imshow_10 svg image imshow imshow_10 cpp plot example_imshow_11 doc image imshow imshow_11 png image imshow imshow_11 cpp subcategories depend matrix class matrix class matrix matrix represent colormap matrix represent red green blue channel matrix fourth matrix represent alpha channel control transparency pixel cimg library load save image cimg handle many common image format long access appropriate library matplot script look compile time follow optional library jpeg tiff zlib png lapack blas opencv x11 fftw3 openexr magick script attempt link library list matplot matplot include convenience function manipulate matrix image imread rgb2gray gray2rgb imresize imwrite function work list matrix image matrix see example_image_1 doc image image image_1 png image image image_1 cpp example_image_2 doc image image image_2_thumb png image image image_2 cpp example_image_3 doc image image image_3_thumb png image image image_3 cpp example_image_4 doc image image image_4_thumb png image image image_4 cpp example_image_5 doc image image image_5_thumb png image image image_5 cpp plot example_image_1 doc image image image_1 png image image image_1 cpp plot example_image_2 doc image image image_2 png image image image_2 cpp plot example_image_3 doc image image image_3 png image image image_3 cpp plot example_image_4 doc image image image_4 png image image image_4 cpp plot example_image_5 doc image image image_5 png image image image_5 cpp scale image see example_imagesc_1 doc image imagesc imagesc_1 png image imagesc imagesc_1 cpp example_imagesc_2 doc image imagesc imagesc_2_thumb png image imagesc imagesc_2 cpp example_imagesc_3 doc image imagesc imagesc_3_thumb png image imagesc imagesc_3 cpp example_imagesc_4 doc image imagesc imagesc_4_thumb png image imagesc imagesc_4 cpp plot example_imagesc_1 doc image imagesc imagesc_1 png image imagesc imagesc_1 cpp plot example_imagesc_2 doc image imagesc imagesc_2 png image imagesc imagesc_2 cpp plot example_imagesc_3 doc image imagesc imagesc_3 png image imagesc imagesc_3 cpp plot example_imagesc_4 doc image imagesc imagesc_4 png image imagesc imagesc_4 cpp annotation text text text arrow text arrow rectangle rectangle fill polygon fill polygon ellipse ellipse textbox textbox arrow arrow line line text annotation category mean create individual object plot rather representation set important difference annotation category category default annotation replace plot already exist object even user call hold function see example_text_1 doc annotation text text_1 svg annotation text text_1 cpp example_text_2 doc annotation text text_2_thumb png annotation text text_2 cpp example_text_3 doc annotation text text_3_thumb png annotation text text_3 cpp example_text_4 doc annotation text text_4_thumb png annotation text text_4 cpp example_text_5 doc annotation text text_5_thumb png annotation text text_5 cpp example_text_6 doc annotation text text_6_thumb png annotation text text_6 cpp example_text_7 doc annotation text text_7_thumb png annotation text text_7 cpp example_text_8 doc annotation text text_8_thumb png annotation text text_8 cpp plot example_text_1 doc annotation text text_1 svg annotation text text_1 cpp plot example_text_2 doc annotation text text_2 svg annotation text text_2 cpp plot example_text_3 doc annotation text text_3 svg annotation text text_3 cpp plot example_text_4 doc annotation text text_4 svg annotation text text_4 cpp plot example_text_5 doc annotation text text_5 svg annotation text text_5 cpp plot example_text_6 doc annotation text text_6 svg annotation text text_6 cpp plot example_text_7 doc annotation text text_7 svg annotation text text_7 cpp plot example_text_8 doc annotation text text_8 svg annotation text text_8 cpp text arrow see example_textarrow_1 doc annotation textarrow textarrow_1 svg annotation textarrow textarrow_1 cpp example_textarrow_2 doc annotation textarrow textarrow_2_thumb png annotation textarrow textarrow_2 cpp plot example_textarrow_1 doc annotation textarrow textarrow_1 svg annotation textarrow textarrow_1 cpp plot example_textarrow_2 doc annotation textarrow textarrow_2 svg annotation textarrow textarrow_2 cpp rectangle see example_rectangle_1 doc annotation rectangle rectangle_1 svg annotation rectangle rectangle_1 cpp example_rectangle_2 doc annotation rectangle rectangle_2_thumb png annotation rectangle rectangle_2 cpp example_rectangle_3 doc annotation rectangle rectangle_3_thumb png annotation rectangle rectangle_3 cpp example_rectangle_4 doc annotation rectangle rectangle_4_thumb png annotation rectangle rectangle_4 cpp example_rectangle_5 doc annotation rectangle rectangle_5_thumb png annotation rectangle rectangle_5 cpp plot example_rectangle_1 doc annotation rectangle rectangle_1 svg annotation rectangle rectangle_1 cpp plot example_rectangle_2 doc annotation rectangle rectangle_2 png annotation rectangle rectangle_2 cpp plot example_rectangle_3 doc annotation rectangle rectangle_3 svg annotation rectangle rectangle_3 cpp plot example_rectangle_4 doc annotation rectangle rectangle_4 png annotation rectangle rectangle_4 cpp plot example_rectangle_5 doc annotation rectangle rectangle_5 png annotation rectangle rectangle_5 cpp rectangle object border curvature see example_fill_1 doc annotation fill fill_1 svg annotation fill fill_1 cpp plot example_fill_1 doc annotation fill fill_1 svg annotation fill fill_1 cpp ellipse see example_ellipse_1 doc annotation ellipse ellipse_1 svg annotation ellipse ellipse_1 cpp plot example_ellipse_1 doc annotation ellipse ellipse_1 svg annotation ellipse ellipse_1 cpp textbox see example_textbox_1 doc annotation textbox textbox_1 svg annotation textbox textbox_1 cpp plot example_textbox_1 doc annotation textbox textbox_1 svg annotation textbox textbox_1 cpp arrow see example_arrow_1 doc annotation arrow arrow_1 svg annotation arrow arrow_1 cpp example_arrow_2 doc annotation arrow arrow_2_thumb png annotation arrow arrow_2 cpp plot example_arrow_1 doc annotation arrow arrow_1 svg annotation arrow arrow_1 cpp plot example_arrow_2 doc annotation arrow arrow_2 svg annotation arrow arrow_2 cpp line see example_line_1 doc annotation line line_1 svg annotation line line_1 cpp plot example_line_1 doc annotation line line_1 svg annotation line line_1 cpp appearance label label title title subplot title subplot title label label label label label label legend legend axis axis limit limit limit limit limit limit adjust axis adjust axis box box grid grid grid background grid background tick tick tick tick tick tick tick label tick label tick label tick label tick format tick format tick format tick format tick format tick format tick angle tick angle tick angle tick angle multiplot multiplot hold hold axis axis color order color order subplots subplots tile layout tile layout colormaps colormaps colormap colormap color bar color bar rgb plot rgb plot camera camera view view light light figure object figure object line spec line spec object object clear clear label title see example_title_1 doc appearance label title title_1 svg appearance label title title_1 cpp example_title_2 doc appearance label title title_2_thumb png appearance label title title_2 cpp example_title_3 doc appearance label title title_3_thumb png appearance label title title_3 cpp example_title_4 doc appearance label title title_4_thumb png appearance label title title_4 cpp example_title_5 doc appearance label title title_5_thumb png appearance label title title_5 cpp example_title_6 doc appearance label title title_6_thumb png appearance label title title_6 cpp example_title_7 doc appearance label title title_7_thumb png appearance label title title_7 cpp example_title_8 doc appearance label title title_8_thumb png appearance label title title_8 cpp plot example_title_1 doc appearance label title title_1 svg appearance label title title_1 cpp plot example_title_2 doc appearance label title title_2 svg appearance label title title_2 cpp plot example_title_3 doc appearance label title title_3 svg appearance label title title_3 cpp plot example_title_4 doc appearance label title title_4 svg appearance label title title_4 cpp plot example_title_5 doc appearance label title title_5 svg appearance label title title_5 cpp plot example_title_6 doc appearance label title title_6 svg appearance label title title_6 cpp plot example_title_7 doc appearance label title title_7 svg appearance label title title_7 cpp plot example_title_8 doc appearance label title title_8 svg appearance label title title_8 cpp subplot title see example_sgtitle_1 doc appearance label sgtitle sgtitle_1 png appearance label sgtitle sgtitle_1 cpp example_sgtitle_2 doc appearance label sgtitle sgtitle_2_thumb png appearance label sgtitle sgtitle_2 cpp plot example_sgtitle_1 doc appearance label sgtitle sgtitle_1 png appearance label sgtitle sgtitle_1 cpp plot example_sgtitle_2 doc appearance label sgtitle sgtitle_2 svg appearance label sgtitle sgtitle_2 cpp label see example_xlabel_1 doc appearance label xlabel xlabel_1 svg appearance label xlabel xlabel_1 cpp example_xlabel_2 doc appearance label xlabel xlabel_2_thumb png appearance label xlabel xlabel_2 cpp example_xlabel_3 doc appearance label xlabel xlabel_3_thumb png appearance label xlabel xlabel_3 cpp example_xlabel_4 doc appearance label xlabel xlabel_4_thumb png appearance label xlabel xlabel_4 cpp example_xlabel_5 doc appearance label xlabel xlabel_5_thumb png appearance label xlabel xlabel_5 cpp example_xlabel_6 doc appearance label xlabel xlabel_6_thumb png appearance label xlabel xlabel_6 cpp example_xlabel_7 doc appearance label xlabel xlabel_7_thumb png appearance label xlabel xlabel_7 cpp example_xlabel_8 doc appearance label xlabel xlabel_8_thumb png appearance label xlabel xlabel_8 cpp plot example_xlabel_1 doc appearance label xlabel xlabel_1 svg appearance label xlabel xlabel_1 cpp plot example_xlabel_2 doc appearance label xlabel xlabel_2 svg appearance label xlabel xlabel_2 cpp plot example_xlabel_3 doc appearance label xlabel xlabel_3 svg appearance label xlabel xlabel_3 cpp plot example_xlabel_4 doc appearance label xlabel xlabel_4 svg appearance label xlabel xlabel_4 cpp plot example_xlabel_5 doc appearance label xlabel xlabel_5 svg appearance label xlabel xlabel_5 cpp plot example_xlabel_6 doc appearance label xlabel xlabel_6 svg appearance label xlabel xlabel_6 cpp plot example_xlabel_7 doc appearance label xlabel xlabel_7 svg appearance label xlabel xlabel_7 cpp plot example_xlabel_8 doc appearance label xlabel xlabel_8 svg appearance label xlabel xlabel_8 cpp label see example_ylabel_1 doc appearance label ylabel ylabel_1 svg appearance label ylabel ylabel_1 cpp example_ylabel_2 doc appearance label ylabel ylabel_2_thumb png appearance label ylabel ylabel_2 cpp example_ylabel_3 doc appearance label ylabel ylabel_3_thumb png appearance label ylabel ylabel_3 cpp example_ylabel_4 doc appearance label ylabel ylabel_4_thumb png appearance label ylabel ylabel_4 cpp example_ylabel_5 doc appearance label ylabel ylabel_5_thumb png appearance label ylabel ylabel_5 cpp example_ylabel_6 doc appearance label ylabel ylabel_6_thumb png appearance label ylabel ylabel_6 cpp example_ylabel_7 doc appearance label ylabel ylabel_7_thumb png appearance label ylabel ylabel_7 cpp example_ylabel_8 doc appearance label ylabel ylabel_8_thumb png appearance label ylabel ylabel_8 cpp plot example_ylabel_1 doc appearance label ylabel ylabel_1 svg appearance label ylabel ylabel_1 cpp plot example_ylabel_2 doc appearance label ylabel ylabel_2 svg appearance label ylabel ylabel_2 cpp plot example_ylabel_3 doc appearance label ylabel ylabel_3 svg appearance label ylabel ylabel_3 cpp plot example_ylabel_4 doc appearance label ylabel ylabel_4 svg appearance label ylabel ylabel_4 cpp plot example_ylabel_5 doc appearance label ylabel ylabel_5 svg appearance label ylabel ylabel_5 cpp plot example_ylabel_6 doc appearance label ylabel ylabel_6 svg appearance label ylabel ylabel_6 cpp plot example_ylabel_7 doc appearance label ylabel ylabel_7 svg appearance label ylabel ylabel_7 cpp plot example_ylabel_8 doc appearance label ylabel ylabel_8 svg appearance label ylabel ylabel_8 cpp label see example_zlabel_1 doc appearance label zlabel zlabel_1 png appearance label zlabel zlabel_1 cpp example_zlabel_2 doc appearance label zlabel zlabel_2_thumb png appearance label zlabel zlabel_2 cpp example_zlabel_3 doc appearance label zlabel zlabel_3_thumb png appearance label zlabel zlabel_3 cpp plot example_zlabel_1 doc appearance label zlabel zlabel_1 png appearance label zlabel zlabel_1 cpp plot example_zlabel_2 doc appearance label zlabel zlabel_2 png appearance label zlabel zlabel_2 cpp plot example_zlabel_3 doc appearance label zlabel zlabel_3 png appearance label zlabel zlabel_3 cpp legend see example_legend_1 doc appearance label legend legend_1 svg appearance label legend legend_1 cpp example_legend_2 doc appearance label legend legend_2_thumb png appearance label legend legend_2 cpp example_legend_3 doc appearance label legend legend_3_thumb png appearance label legend legend_3 cpp example_legend_4 doc appearance label legend legend_4_thumb png appearance label legend legend_4 cpp example_legend_5 doc appearance label legend legend_5_thumb png appearance label legend legend_5 cpp example_legend_6 doc appearance label legend legend_6_thumb png appearance label legend legend_6 cpp example_legend_7 doc appearance label legend legend_7_thumb png appearance label legend legend_7 cpp example_legend_8 doc appearance label legend legend_8_thumb png appearance label legend legend_8 cpp plot example_legend_1 doc appearance label legend legend_1 svg appearance label legend legend_1 cpp plot example_legend_2 doc appearance label legend legend_2 svg appearance label legend legend_2 cpp plot example_legend_3 doc appearance label legend legend_3 svg appearance label legend legend_3 cpp plot example_legend_4 doc appearance label legend legend_4 svg appearance label legend legend_4 cpp plot example_legend_5 doc appearance label legend legend_5 svg appearance label legend legend_5 cpp plot example_legend_6 doc appearance label legend legend_6 svg appearance label legend legend_6 cpp plot example_legend_7 doc appearance label legend legend_7 svg appearance label legend legend_7 cpp plot example_legend_8 doc appearance label legend legend_8 svg appearance label legend legend_8 cpp axis limit see example_xlim_1 doc appearance axis xlim xlim_1 svg appearance axis xlim xlim_1 cpp example_xlim_2 doc appearance axis xlim xlim_2_thumb png appearance axis xlim xlim_2 cpp example_xlim_3 doc appearance axis xlim xlim_3_thumb png appearance axis xlim xlim_3 cpp example_xlim_4 doc appearance axis xlim xlim_4_thumb png appearance axis xlim xlim_4 cpp example_xlim_5 doc appearance axis xlim xlim_5_thumb png appearance axis xlim xlim_5 cpp example_xlim_6 doc appearance axis xlim xlim_6_thumb png appearance axis xlim xlim_6 cpp plot example_xlim_1 doc appearance axis xlim xlim_1 svg appearance axis xlim xlim_1 cpp plot example_xlim_2 doc appearance axis xlim xlim_2 png appearance axis xlim xlim_2 cpp plot example_xlim_3 doc appearance axis xlim xlim_3 svg appearance axis xlim xlim_3 cpp plot example_xlim_4 doc appearance axis xlim xlim_4 svg appearance axis xlim xlim_4 cpp plot example_xlim_5 doc appearance axis xlim xlim_5 svg appearance axis xlim xlim_5 cpp plot example_xlim_6 doc appearance axis xlim xlim_6 svg appearance axis xlim xlim_6 cpp limit see example_ylim_1 doc appearance axis ylim ylim_1 svg appearance axis ylim ylim_1 cpp example_ylim_2 doc appearance axis ylim ylim_2_thumb png appearance axis ylim ylim_2 cpp example_ylim_3 doc appearance axis ylim ylim_3_thumb png appearance axis ylim ylim_3 cpp example_ylim_4 doc appearance axis ylim ylim_4_thumb png appearance axis ylim ylim_4 cpp example_ylim_5 doc appearance axis ylim ylim_5_thumb png appearance axis ylim ylim_5 cpp example_ylim_6 doc appearance axis ylim ylim_6_thumb png appearance axis ylim ylim_6 cpp plot example_ylim_1 doc appearance axis ylim ylim_1 svg appearance axis ylim ylim_1 cpp plot example_ylim_2 doc appearance axis ylim ylim_2 png appearance axis ylim ylim_2 cpp plot example_ylim_3 doc appearance axis ylim ylim_3 svg appearance axis ylim ylim_3 cpp plot example_ylim_4 doc appearance axis ylim ylim_4 svg appearance axis ylim ylim_4 cpp plot example_ylim_5 doc appearance axis ylim ylim_5 svg appearance axis ylim ylim_5 cpp plot example_ylim_6 doc appearance axis ylim ylim_6 svg appearance axis ylim ylim_6 cpp limit see example_zlim_1 doc appearance axis zlim zlim_1 png appearance axis zlim zlim_1 cpp example_zlim_2 doc appearance axis zlim zlim_2_thumb png appearance axis zlim zlim_2 cpp example_zlim_3 doc appearance axis zlim zlim_3_thumb png appearance axis zlim zlim_3 cpp example_zlim_4 doc appearance axis zlim zlim_4_thumb png appearance axis zlim zlim_4 cpp example_zlim_5 doc appearance axis zlim zlim_5_thumb png appearance axis zlim zlim_5 cpp example_zlim_6 doc appearance axis zlim zlim_6_thumb png appearance axis zlim zlim_6 cpp plot example_zlim_1 doc appearance axis zlim zlim_1 png appearance axis zlim zlim_1 cpp plot example_zlim_2 doc appearance axis zlim zlim_2 png appearance axis zlim zlim_2 cpp plot example_zlim_3 doc appearance axis zlim zlim_3 png appearance axis zlim zlim_3 cpp plot example_zlim_4 doc appearance axis zlim zlim_4 svg appearance axis zlim zlim_4 cpp plot example_zlim_5 doc appearance axis zlim zlim_5 svg appearance axis zlim zlim_5 cpp plot example_zlim_6 doc appearance axis zlim zlim_6 svg appearance axis zlim zlim_6 cpp adjust axis see example_axis_1 doc appearance axis axis axis_1 svg appearance axis axis axis_1 cpp example_axis_2 doc appearance axis axis axis_2_thumb png appearance axis axis axis_2 cpp example_axis_3 doc appearance axis axis axis_3_thumb png appearance axis axis axis_3 cpp example_axis_4 doc appearance axis axis axis_4_thumb png appearance axis axis axis_4 cpp example_axis_5 doc appearance axis axis axis_5_thumb png appearance axis axis axis_5 cpp example_axis_6 doc appearance axis axis axis_6_thumb png appearance axis axis axis_6 cpp example_axis_7 doc appearance axis axis axis_7_thumb png appearance axis axis axis_7 cpp example_axis_8 doc appearance axis axis axis_8_thumb png appearance axis axis axis_8 cpp plot example_axis_1 doc appearance axis axis axis_1 svg appearance axis axis axis_1 cpp plot example_axis_2 doc appearance axis axis axis_2 svg appearance axis axis axis_2 cpp plot example_axis_3 doc appearance axis axis axis_3 svg appearance axis axis axis_3 cpp plot example_axis_4 doc appearance axis axis axis_4 png appearance axis axis axis_4 cpp plot example_axis_5 doc appearance axis axis axis_5 png appearance axis axis axis_5 cpp plot example_axis_6 doc appearance axis axis axis_6 png appearance axis axis axis_6 cpp plot example_axis_7 doc appearance axis axis axis_7 svg appearance axis axis axis_7 cpp plot example_axis_8 doc appearance axis axis axis_8 svg appearance axis axis axis_8 cpp box see example_box_1 doc appearance axis box box_1 png appearance axis box box_1 cpp example_box_2 doc appearance axis box box_2_thumb png appearance axis box box_2 cpp example_box_3 doc appearance axis box box_3_thumb png appearance axis box box_3 cpp plot example_box_1 doc appearance axis box box_1 png appearance axis box box_1 cpp plot example_box_2 doc appearance axis box box_2 png appearance axis box box_2 cpp plot example_box_3 doc appearance axis box box_3 svg appearance axis box box_3 cpp grid grid background see example_grid_1 doc appearance grid grid grid_1 svg appearance grid grid grid_1 cpp example_grid_2 doc appearance grid grid grid_2_thumb png appearance grid grid grid_2 cpp example_grid_3 doc appearance grid grid grid_3_thumb png appearance grid grid grid_3 cpp example_grid_4 doc appearance grid grid grid_4_thumb png appearance grid grid grid_4 cpp plot example_grid_1 doc appearance grid grid grid_1 svg appearance grid grid grid_1 cpp plot example_grid_2 doc appearance grid grid grid_2 png appearance grid grid grid_2 cpp plot example_grid_3 doc appearance grid grid grid_3 svg appearance grid grid grid_3 cpp plot example_grid_4 doc appearance grid grid grid_4 svg appearance grid grid grid_4 cpp tick see example_xticks_1 doc appearance grid xticks xticks_1 svg appearance grid xticks xticks_1 cpp example_xticks_2 doc appearance grid xticks xticks_2_thumb png appearance grid xticks xticks_2 cpp example_xticks_3 doc appearance grid xticks xticks_3_thumb png appearance grid xticks xticks_3 cpp example_xticks_4 doc appearance grid xticks xticks_4_thumb png appearance grid xticks xticks_4 cpp example_xticks_5 doc appearance grid xticks xticks_5_thumb png appearance grid xticks xticks_5 cpp example_xticks_6 doc appearance grid xticks xticks_6_thumb png appearance grid xticks xticks_6 cpp example_xticks_7 doc appearance grid xticks xticks_7_thumb png appearance grid xticks xticks_7 cpp example_xticks_8 doc appearance grid xticks xticks_8_thumb png appearance grid xticks xticks_8 cpp plot example_xticks_1 doc appearance grid xticks xticks_1 svg appearance grid xticks xticks_1 cpp plot example_xticks_2 doc appearance grid xticks xticks_2 svg appearance grid xticks xticks_2 cpp plot example_xticks_3 doc appearance grid xticks xticks_3 svg appearance grid xticks xticks_3 cpp plot example_xticks_4 doc appearance grid xticks xticks_4 svg appearance grid xticks xticks_4 cpp plot example_xticks_5 doc appearance grid xticks xticks_5 svg appearance grid xticks xticks_5 cpp plot example_xticks_6 doc appearance grid xticks xticks_6 svg appearance grid xticks xticks_6 cpp plot example_xticks_7 doc appearance grid xticks xticks_7 svg appearance grid xticks xticks_7 cpp plot example_xticks_8 doc appearance grid xticks xticks_8 svg appearance grid xticks xticks_8 cpp tick see example_yticks_1 doc appearance grid yticks yticks_1 svg appearance grid yticks yticks_1 cpp example_yticks_2 doc appearance grid yticks yticks_2_thumb png appearance grid yticks yticks_2 cpp example_yticks_3 doc appearance grid yticks yticks_3_thumb png appearance grid yticks yticks_3 cpp example_yticks_4 doc appearance grid yticks yticks_4_thumb png appearance grid yticks yticks_4 cpp example_yticks_5 doc appearance grid yticks yticks_5_thumb png appearance grid yticks yticks_5 cpp example_yticks_6 doc appearance grid yticks yticks_6_thumb png appearance grid yticks yticks_6 cpp example_yticks_7 doc appearance grid yticks yticks_7_thumb png appearance grid yticks yticks_7 cpp example_yticks_8 doc appearance grid yticks yticks_8_thumb png appearance grid yticks yticks_8 cpp plot example_yticks_1 doc appearance grid yticks yticks_1 svg appearance grid yticks yticks_1 cpp plot example_yticks_2 doc appearance grid yticks yticks_2 svg appearance grid yticks yticks_2 cpp plot example_yticks_3 doc appearance grid yticks yticks_3 svg appearance grid yticks yticks_3 cpp plot example_yticks_4 doc appearance grid yticks yticks_4 svg appearance grid yticks yticks_4 cpp plot example_yticks_5 doc appearance grid yticks yticks_5 svg appearance grid yticks yticks_5 cpp plot example_yticks_6 doc appearance grid yticks yticks_6 svg appearance grid yticks yticks_6 cpp plot example_yticks_7 doc appearance grid yticks yticks_7 svg appearance grid yticks yticks_7 cpp plot example_yticks_8 doc appearance grid yticks yticks_8 svg appearance grid yticks yticks_8 cpp tick see example_zticks_1 doc appearance grid zticks zticks_1 png appearance grid zticks zticks_1 cpp example_zticks_2 doc appearance grid zticks zticks_2_thumb png appearance grid zticks zticks_2 cpp example_zticks_3 doc appearance grid zticks zticks_3_thumb png appearance grid zticks zticks_3 cpp example_zticks_4 doc appearance grid zticks zticks_4_thumb png appearance grid zticks zticks_4 cpp example_zticks_5 doc appearance grid zticks zticks_5_thumb png appearance grid zticks zticks_5 cpp example_zticks_6 doc appearance grid zticks zticks_6_thumb png appearance grid zticks zticks_6 cpp plot example_zticks_1 doc appearance grid zticks zticks_1 png appearance grid zticks zticks_1 cpp plot example_zticks_2 doc appearance grid zticks zticks_2 png appearance grid zticks zticks_2 cpp plot example_zticks_3 doc appearance grid zticks zticks_3 png appearance grid zticks zticks_3 cpp plot example_zticks_4 doc appearance grid zticks zticks_4 svg appearance grid zticks zticks_4 cpp plot example_zticks_5 doc appearance grid zticks zticks_5 svg appearance grid zticks zticks_5 cpp plot example_zticks_6 doc appearance grid zticks zticks_6 png appearance grid zticks zticks_6 cpp tick label see example_xticklabels_1 doc appearance grid xticklabels xticklabels_1 svg appearance grid xticklabels xticklabels_1 cpp example_xticklabels_2 doc appearance grid xticklabels xticklabels_2_thumb png appearance grid xticklabels xticklabels_2 cpp example_xticklabels_3 doc appearance grid xticklabels xticklabels_3_thumb png appearance grid xticklabels xticklabels_3 cpp example_xticklabels_4 doc appearance grid xticklabels xticklabels_4_thumb png appearance grid xticklabels xticklabels_4 cpp plot example_xticklabels_1 doc appearance grid xticklabels xticklabels_1 svg appearance grid xticklabels xticklabels_1 cpp plot example_xticklabels_2 doc appearance grid xticklabels xticklabels_2 svg appearance grid xticklabels xticklabels_2 cpp plot example_xticklabels_3 doc appearance grid xticklabels xticklabels_3 svg appearance grid xticklabels xticklabels_3 cpp plot example_xticklabels_4 doc appearance grid xticklabels xticklabels_4 svg appearance grid xticklabels xticklabels_4 cpp tick label see example_yticklabels_1 doc appearance grid yticklabels yticklabels_1 svg appearance grid yticklabels yticklabels_1 cpp example_yticklabels_2 doc appearance grid yticklabels yticklabels_2_thumb png appearance grid yticklabels yticklabels_2 cpp example_yticklabels_3 doc appearance grid yticklabels yticklabels_3_thumb png appearance grid yticklabels yticklabels_3 cpp example_yticklabels_4 doc appearance grid yticklabels yticklabels_4_thumb png appearance grid yticklabels yticklabels_4 cpp plot example_yticklabels_1 doc appearance grid yticklabels yticklabels_1 svg appearance grid yticklabels yticklabels_1 cpp plot example_yticklabels_2 doc appearance grid yticklabels yticklabels_2 svg appearance grid yticklabels yticklabels_2 cpp plot example_yticklabels_3 doc appearance grid yticklabels yticklabels_3 svg appearance grid yticklabels yticklabels_3 cpp plot example_yticklabels_4 doc appearance grid yticklabels yticklabels_4 svg appearance grid yticklabels yticklabels_4 cpp tick format see example_xtickformat_1 doc appearance grid xtickformat xtickformat_1 svg appearance grid xtickformat xtickformat_1 cpp example_xtickformat_2 doc appearance grid xtickformat xtickformat_2_thumb png appearance grid xtickformat xtickformat_2 cpp example_xtickformat_3 doc appearance grid xtickformat xtickformat_3_thumb png appearance grid xtickformat xtickformat_3 cpp example_xtickformat_4 doc appearance grid xtickformat xtickformat_4_thumb png appearance grid xtickformat xtickformat_4 cpp example_xtickformat_5 doc appearance grid xtickformat xtickformat_5_thumb png appearance grid xtickformat xtickformat_5 cpp plot example_xtickformat_1 doc appearance grid xtickformat xtickformat_1 svg appearance grid xtickformat xtickformat_1 cpp plot example_xtickformat_2 doc appearance grid xtickformat xtickformat_2 svg appearance grid xtickformat xtickformat_2 cpp plot example_xtickformat_3 doc appearance grid xtickformat xtickformat_3 svg appearance grid xtickformat xtickformat_3 cpp plot example_xtickformat_4 doc appearance grid xtickformat xtickformat_4 svg appearance grid xtickformat xtickformat_4 cpp plot example_xtickformat_5 doc appearance grid xtickformat xtickformat_5 svg appearance grid xtickformat xtickformat_5 cpp tick format see example_ytickformat_1 doc appearance grid ytickformat ytickformat_1 svg appearance grid ytickformat ytickformat_1 cpp example_ytickformat_2 doc appearance grid ytickformat ytickformat_2_thumb png appearance grid ytickformat ytickformat_2 cpp example_ytickformat_3 doc appearance grid ytickformat ytickformat_3_thumb png appearance grid ytickformat ytickformat_3 cpp example_ytickformat_4 doc appearance grid ytickformat ytickformat_4_thumb png appearance grid ytickformat ytickformat_4 cpp example_ytickformat_5 doc appearance grid ytickformat ytickformat_5_thumb png appearance grid ytickformat ytickformat_5 cpp plot example_ytickformat_1 doc appearance grid ytickformat ytickformat_1 svg appearance grid ytickformat ytickformat_1 cpp plot example_ytickformat_2 doc appearance grid ytickformat ytickformat_2 svg appearance grid ytickformat ytickformat_2 cpp plot example_ytickformat_3 doc appearance grid ytickformat ytickformat_3 svg appearance grid ytickformat ytickformat_3 cpp plot example_ytickformat_4 doc appearance grid ytickformat ytickformat_4 svg appearance grid ytickformat ytickformat_4 cpp plot example_ytickformat_5 doc appearance grid ytickformat ytickformat_5 svg appearance grid ytickformat ytickformat_5 cpp tick format see example_ztickformat_1 doc appearance grid ztickformat ztickformat_1 svg appearance grid ztickformat ztickformat_1 cpp example_ztickformat_2 doc appearance grid ztickformat ztickformat_2_thumb png appearance grid ztickformat ztickformat_2 cpp example_ztickformat_3 doc appearance grid ztickformat ztickformat_3_thumb png appearance grid ztickformat ztickformat_3 cpp example_ztickformat_4 doc appearance grid ztickformat ztickformat_4_thumb png appearance grid ztickformat ztickformat_4 cpp example_ztickformat_5 doc appearance grid ztickformat ztickformat_5_thumb png appearance grid ztickformat ztickformat_5 cpp plot example_ztickformat_1 doc appearance grid ztickformat ztickformat_1 svg appearance grid ztickformat ztickformat_1 cpp plot example_ztickformat_2 doc appearance grid ztickformat ztickformat_2 svg appearance grid ztickformat ztickformat_2 cpp plot example_ztickformat_3 doc appearance grid ztickformat ztickformat_3 svg appearance grid ztickformat ztickformat_3 cpp plot example_ztickformat_4 doc appearance grid ztickformat ztickformat_4 svg appearance grid ztickformat ztickformat_4 cpp plot example_ztickformat_5 doc appearance grid ztickformat ztickformat_5 svg appearance grid ztickformat ztickformat_5 cpp tick angle see example_xtickangle_1 doc appearance grid xtickangle xtickangle_1 svg appearance grid xtickangle xtickangle_1 cpp example_xtickangle_2 doc appearance grid xtickangle xtickangle_2_thumb png appearance grid xtickangle xtickangle_2 cpp example_xtickangle_3 doc appearance grid xtickangle xtickangle_3_thumb png appearance grid xtickangle xtickangle_3 cpp plot example_xtickangle_1 doc appearance grid xtickangle xtickangle_1 svg appearance grid xtickangle xtickangle_1 cpp plot example_xtickangle_2 doc appearance grid xtickangle xtickangle_2 svg appearance grid xtickangle xtickangle_2 cpp plot example_xtickangle_3 doc appearance grid xtickangle xtickangle_3 svg appearance grid xtickangle xtickangle_3 cpp tick angle see example_ytickangle_1 doc appearance grid ytickangle ytickangle_1 svg appearance grid ytickangle ytickangle_1 cpp example_ytickangle_2 doc appearance grid ytickangle ytickangle_2_thumb png appearance grid ytickangle ytickangle_2 cpp example_ytickangle_3 doc appearance grid ytickangle ytickangle_3_thumb png appearance grid ytickangle ytickangle_3 cpp plot example_ytickangle_1 doc appearance grid ytickangle ytickangle_1 svg appearance grid ytickangle ytickangle_1 cpp plot example_ytickangle_2 doc appearance grid ytickangle ytickangle_2 svg appearance grid ytickangle ytickangle_2 cpp plot example_ytickangle_3 doc appearance grid ytickangle ytickangle_3 svg appearance grid ytickangle ytickangle_3 cpp multiplot hold see example_hold_1 doc appearance multiplot hold hold_1 svg appearance multiplot hold hold_1 cpp example_hold_2 doc appearance multiplot hold hold_2_thumb png appearance multiplot hold hold_2 cpp example_hold_3 doc appearance multiplot hold hold_3_thumb png appearance multiplot hold hold_3 cpp example_hold_4 doc appearance multiplot hold hold_4_thumb png appearance multiplot hold hold_4 cpp plot example_hold_1 doc appearance multiplot hold hold_1 svg appearance multiplot hold hold_1 cpp plot example_hold_2 doc appearance multiplot hold hold_2 svg appearance multiplot hold hold_2 cpp plot example_hold_3 doc appearance multiplot hold hold_3 svg appearance multiplot hold hold_3 cpp plot example_hold_4 doc appearance multiplot hold hold_4 svg appearance multiplot hold hold_4 cpp axis see example_yyaxis_1 doc appearance multiplot yyaxis yyaxis_1 svg appearance multiplot yyaxis yyaxis_1 cpp example_yyaxis_2 doc appearance multiplot yyaxis yyaxis_2_thumb png appearance multiplot yyaxis yyaxis_2 cpp example_yyaxis_3 doc appearance multiplot yyaxis yyaxis_3_thumb png appearance multiplot yyaxis yyaxis_3 cpp example_yyaxis_4 doc appearance multiplot yyaxis yyaxis_4_thumb png appearance multiplot yyaxis yyaxis_4 cpp example_yyaxis_5 doc appearance multiplot yyaxis yyaxis_5_thumb png appearance multiplot yyaxis yyaxis_5 cpp example_yyaxis_6 doc appearance multiplot yyaxis yyaxis_6_thumb png appearance multiplot yyaxis yyaxis_6 cpp plot example_yyaxis_1 doc appearance multiplot yyaxis yyaxis_1 svg appearance multiplot yyaxis yyaxis_1 cpp plot example_yyaxis_2 doc appearance multiplot yyaxis yyaxis_2 svg appearance multiplot yyaxis yyaxis_2 cpp plot example_yyaxis_3 doc appearance multiplot yyaxis yyaxis_3 svg appearance multiplot yyaxis yyaxis_3 cpp plot example_yyaxis_4 doc appearance multiplot yyaxis yyaxis_4 svg appearance multiplot yyaxis yyaxis_4 cpp plot example_yyaxis_5 doc appearance multiplot yyaxis yyaxis_5 svg appearance multiplot yyaxis yyaxis_5 cpp plot example_yyaxis_6 doc appearance multiplot yyaxis yyaxis_6 svg appearance multiplot yyaxis yyaxis_6 cpp color order see example_colororder_1 doc appearance multiplot colororder colororder_1 svg appearance multiplot colororder colororder_1 cpp example_colororder_2 doc appearance multiplot colororder colororder_2_thumb png appearance multiplot colororder colororder_2 cpp example_colororder_3 doc appearance multiplot colororder colororder_3_thumb png appearance multiplot colororder colororder_3 cpp example_colororder_4 doc appearance multiplot colororder colororder_4_thumb png appearance multiplot colororder colororder_4 cpp example_colororder_5 doc appearance multiplot colororder colororder_5_thumb png appearance multiplot colororder colororder_5 cpp example_colororder_6 doc appearance multiplot colororder colororder_6_thumb png appearance multiplot colororder colororder_6 cpp example_colororder_7 doc appearance multiplot colororder colororder_7_thumb png appearance multiplot colororder colororder_7 cpp plot example_colororder_1 doc appearance multiplot colororder colororder_1 svg appearance multiplot colororder colororder_1 cpp plot example_colororder_2 doc appearance multiplot colororder colororder_2 svg appearance multiplot colororder colororder_2 cpp plot example_colororder_3 doc appearance multiplot colororder colororder_3 png appearance multiplot colororder colororder_3 cpp plot example_colororder_4 doc appearance multiplot colororder colororder_4 svg appearance multiplot colororder colororder_4 cpp plot example_colororder_5 doc appearance multiplot colororder colororder_5 svg appearance multiplot colororder colororder_5 cpp plot example_colororder_6 doc appearance multiplot colororder colororder_6 svg appearance multiplot colororder colororder_6 cpp plot example_colororder_7 doc appearance multiplot colororder colororder_7 svg appearance multiplot colororder colororder_7 cpp subplots unlike library subplots base index see example_subplot_1 doc appearance multiplot subplot subplot_1 svg appearance multiplot subplot subplot_1 cpp example_subplot_2 doc appearance multiplot subplot subplot_2_thumb png appearance multiplot subplot subplot_2 cpp example_subplot_3 doc appearance multiplot subplot subplot_3_thumb png appearance multiplot subplot subplot_3 cpp example_subplot_4 doc appearance multiplot subplot subplot_4_thumb png appearance multiplot subplot subplot_4 cpp example_subplot_5 doc appearance multiplot subplot subplot_5_thumb png appearance multiplot subplot subplot_5 cpp example_subplot_6 doc appearance multiplot subplot subplot_6_thumb png appearance multiplot subplot subplot_6 cpp example_subplot_7 doc appearance multiplot subplot subplot_7_thumb png appearance multiplot subplot subplot_7 cpp example_subplot_8 doc appearance multiplot subplot subplot_8_thumb png appearance multiplot subplot subplot_8 cpp example_subplot_9 doc appearance multiplot subplot subplot_9_thumb png appearance multiplot subplot subplot_9 cpp example_subplot_10 doc appearance multiplot subplot subplot_10_thumb png appearance multiplot subplot subplot_10 cpp example_subplot_11 doc appearance multiplot subplot subplot_11_thumb png appearance multiplot subplot subplot_11 cpp example_subplot_12 doc appearance multiplot subplot subplot_12_thumb png appearance multiplot subplot subplot_12 cpp example_subplot_13 doc appearance multiplot subplot subplot_13_thumb png appearance multiplot subplot subplot_13 cpp plot example_subplot_1 doc appearance multiplot subplot subplot_1 svg appearance multiplot subplot subplot_1 cpp plot example_subplot_2 doc appearance multiplot subplot subplot_2 svg appearance multiplot subplot subplot_2 cpp plot example_subplot_3 doc appearance multiplot subplot subplot_3 svg appearance multiplot subplot subplot_3 cpp plot example_subplot_4 doc appearance multiplot subplot subplot_4 svg appearance multiplot subplot subplot_4 cpp plot example_subplot_5 doc appearance multiplot subplot subplot_5 svg appearance multiplot subplot subplot_5 cpp plot example_subplot_6 doc appearance multiplot subplot subplot_6 svg appearance multiplot subplot subplot_6 cpp plot example_subplot_7 doc appearance multiplot subplot subplot_7 svg appearance multiplot subplot subplot_7 cpp plot example_subplot_8 doc appearance multiplot subplot subplot_8 svg appearance multiplot subplot subplot_8 cpp plot example_subplot_9 doc appearance multiplot subplot subplot_9 svg appearance multiplot subplot subplot_9 cpp plot example_subplot_10 doc appearance multiplot subplot subplot_10 png appearance multiplot subplot subplot_10 cpp plot example_subplot_11 doc appearance multiplot subplot subplot_11 svg appearance multiplot subplot subplot_11 cpp plot example_subplot_12 doc appearance multiplot subplot subplot_12 svg appearance multiplot subplot subplot_12 cpp plot example_subplot_13 doc appearance multiplot subplot subplot_13 svg appearance multiplot subplot subplot_13 cpp tile layout see example_tiledlayout_1 doc appearance multiplot tiledlayout tiledlayout_1 svg appearance multiplot tiledlayout tiledlayout_1 cpp example_tiledlayout_2 doc appearance multiplot tiledlayout tiledlayout_2_thumb png appearance multiplot tiledlayout tiledlayout_2 cpp example_tiledlayout_3 doc appearance multiplot tiledlayout tiledlayout_3_thumb png appearance multiplot tiledlayout tiledlayout_3 cpp example_tiledlayout_4 doc appearance multiplot tiledlayout tiledlayout_4_thumb png appearance multiplot tiledlayout tiledlayout_4 cpp example_tiledlayout_5 doc appearance multiplot tiledlayout tiledlayout_5_thumb png appearance multiplot tiledlayout tiledlayout_5 cpp example_tiledlayout_6 doc appearance multiplot tiledlayout tiledlayout_6_thumb png appearance multiplot tiledlayout tiledlayout_6 cpp example_tiledlayout_7 doc appearance multiplot tiledlayout tiledlayout_7_thumb png appearance multiplot tiledlayout tiledlayout_7 cpp example_tiledlayout_8 doc appearance multiplot tiledlayout tiledlayout_8_thumb png appearance multiplot tiledlayout tiledlayout_8 cpp plot example_tiledlayout_1 doc appearance multiplot tiledlayout tiledlayout_1 svg appearance multiplot tiledlayout tiledlayout_1 cpp plot example_tiledlayout_2 doc appearance multiplot tiledlayout tiledlayout_2 png appearance multiplot tiledlayout tiledlayout_2 cpp plot example_tiledlayout_3 doc appearance multiplot tiledlayout tiledlayout_3 svg appearance multiplot tiledlayout tiledlayout_3 cpp plot example_tiledlayout_4 doc appearance multiplot tiledlayout tiledlayout_4 svg appearance multiplot tiledlayout tiledlayout_4 cpp plot example_tiledlayout_5 doc appearance multiplot tiledlayout tiledlayout_5 svg appearance multiplot tiledlayout tiledlayout_5 cpp plot example_tiledlayout_6 doc appearance multiplot tiledlayout tiledlayout_6 svg appearance multiplot tiledlayout tiledlayout_6 cpp plot example_tiledlayout_7 doc appearance multiplot tiledlayout tiledlayout_7 png appearance multiplot tiledlayout tiledlayout_7 cpp plot example_tiledlayout_8 doc appearance multiplot tiledlayout tiledlayout_8 png appearance multiplot tiledlayout tiledlayout_8 cpp tile function convenience shortcut subplot function room next tile automatically rearrange increase number subplot row column fit next tile subplots control subplots colormaps colormap convenience color header contain many function generate color string vice versa see example_colormap_1 doc appearance colormaps colormap colormap_1 png appearance colormaps colormap colormap_1 cpp example_colormap_2 doc appearance colormaps colormap colormap_2_thumb png appearance colormaps colormap colormap_2 cpp example_colormap_3 doc appearance colormaps colormap colormap_3_thumb png appearance colormaps colormap colormap_3 cpp example_colormap_4 doc appearance colormaps colormap colormap_4_thumb png appearance colormaps colormap colormap_4 cpp example_colormap_5 doc appearance colormaps colormap colormap_5_thumb png appearance colormaps colormap colormap_5 cpp example_colormap_6 doc appearance colormaps colormap colormap_6_thumb png appearance colormaps colormap colormap_6 cpp example_colormap_7 doc appearance colormaps colormap colormap_7_thumb png appearance colormaps colormap colormap_7 cpp example_colormap_8 doc appearance colormaps colormap colormap_8_thumb png appearance colormaps colormap colormap_8 cpp example_colormap_9 doc appearance colormaps colormap colormap_9_thumb png appearance colormaps colormap colormap_9 cpp plot example_colormap_1 doc appearance colormaps colormap colormap_1 png appearance colormaps colormap colormap_1 cpp plot example_colormap_2 doc appearance colormaps colormap colormap_2 png appearance colormaps colormap colormap_2 cpp plot example_colormap_3 doc appearance colormaps colormap colormap_3 png appearance colormaps colormap colormap_3 cpp plot example_colormap_4 doc appearance colormaps colormap colormap_4 png appearance colormaps colormap colormap_4 cpp plot example_colormap_5 doc appearance colormaps colormap colormap_5 png appearance colormaps colormap colormap_5 cpp plot example_colormap_6 doc appearance colormaps colormap colormap_6 png appearance colormaps colormap colormap_6 cpp plot example_colormap_7 doc appearance colormaps colormap colormap_7 png appearance colormaps colormap colormap_7 cpp plot example_colormap_8 doc appearance colormaps colormap colormap_8 png appearance colormaps colormap colormap_8 cpp plot example_colormap_9 doc appearance colormaps colormap colormap_9 svg appearance colormaps colormap colormap_9 cpp color bar see example_colorbar_1 doc appearance colormaps colorbar colorbar_1 png appearance colormaps colorbar colorbar_1 cpp example_colorbar_2 doc appearance colormaps colorbar colorbar_2_thumb png appearance colormaps colorbar colorbar_2 cpp example_colorbar_3 doc appearance colormaps colorbar colorbar_3_thumb png appearance colormaps colorbar colorbar_3 cpp example_colorbar_4 doc appearance colormaps colorbar colorbar_4_thumb png appearance colormaps colorbar colorbar_4 cpp example_colorbar_5 doc appearance colormaps colorbar colorbar_5_thumb png appearance colormaps colorbar colorbar_5 cpp example_colorbar_6 doc appearance colormaps colorbar colorbar_6_thumb png appearance colormaps colorbar colorbar_6 cpp example_colorbar_7 doc appearance colormaps colorbar colorbar_7_thumb png appearance colormaps colorbar colorbar_7 cpp plot example_colorbar_1 doc appearance colormaps colorbar colorbar_1 png appearance colormaps colorbar colorbar_1 cpp plot example_colorbar_2 doc appearance colormaps colorbar colorbar_2 png appearance colormaps colorbar colorbar_2 cpp plot example_colorbar_3 doc appearance colormaps colorbar colorbar_3 png appearance colormaps colorbar colorbar_3 cpp plot example_colorbar_4 doc appearance colormaps colorbar colorbar_4 png appearance colormaps colorbar colorbar_4 cpp plot example_colorbar_5 doc appearance colormaps colorbar colorbar_5 svg appearance colormaps colorbar colorbar_5 cpp plot example_colorbar_6 doc appearance colormaps colorbar colorbar_6 png appearance colormaps colorbar colorbar_6 cpp plot example_colorbar_7 doc appearance colormaps colorbar colorbar_7 png appearance colormaps colorbar colorbar_7 cpp rgb plot see example_rgbplot_1 doc appearance colormaps rgbplot rgbplot_1 svg appearance colormaps rgbplot rgbplot_1 cpp example_rgbplot_2 doc appearance colormaps rgbplot rgbplot_2_thumb png appearance colormaps rgbplot rgbplot_2 cpp plot example_rgbplot_1 doc appearance colormaps rgbplot rgbplot_1 svg appearance colormaps rgbplot rgbplot_1 cpp plot example_rgbplot_2 doc appearance colormaps rgbplot rgbplot_2 svg appearance colormaps rgbplot rgbplot_2 cpp camera view see example_view_1 doc appearance camera view view_1 png appearance camera view view_1 cpp example_view_2 doc appearance camera view view_2_thumb png appearance camera view view_2 cpp example_view_3 doc appearance camera view view_3_thumb png appearance camera view view_3 cpp example_view_4 doc appearance camera view view_4_thumb png appearance camera view view_4 cpp example_view_5 doc appearance camera view view_5_thumb png appearance camera view view_5 cpp plot example_view_1 doc appearance camera view view_1 png appearance camera view view_1 cpp plot example_view_2 doc appearance camera view view_2 png appearance camera view view_2 cpp plot example_view_3 doc appearance camera view view_3 svg appearance camera view view_3 cpp plot example_view_4 doc appearance camera view view_4 svg appearance camera view view_4 cpp plot example_view_5 doc appearance camera view view_5 svg appearance camera view view_5 cpp plot example_view_6 doc appearance camera view view_6 png appearance camera view view_6 cpp light see example_lighting_1 doc appearance camera light lighting_1 png appearance camera light lighting_1 cpp example_lighting_2 doc appearance camera light lighting_2_thumb png appearance camera light lighting_2 cpp example_lighting_3 doc appearance camera light lighting_3_thumb png appearance camera light lighting_3 cpp example_lighting_4 doc appearance camera light lighting_4_thumb png appearance camera light lighting_4 cpp example_lighting_5 doc appearance camera light lighting_5_thumb png appearance camera light lighting_5 cpp example_lighting_6 doc appearance camera light lighting_6_thumb png appearance camera light lighting_6 cpp plot example_lighting_1 doc appearance camera light lighting_1 png appearance camera light lighting_1 cpp plot example_lighting_2 doc appearance camera light lighting_2 png appearance camera light lighting_2 cpp plot example_lighting_3 doc appearance camera light lighting_3 png appearance camera light lighting_3 cpp plot example_lighting_4 doc appearance camera light lighting_4 png appearance camera light lighting_4 cpp plot example_lighting_5 doc appearance camera light lighting_5 png appearance camera light lighting_5 cpp plot example_lighting_6 doc appearance camera light lighting_6 png appearance camera light lighting_6 cpp figure object see example_figure_1 doc appearance figure figure_1 svg appearance figure figure_1 cpp example_figure_2 doc appearance figure figure_2_thumb png appearance figure figure_2 cpp example_figure_3 doc appearance figure figure_3_thumb png appearance figure figure_3 cpp plot example_figure_1 doc appearance figure figure_1 svg appearance figure figure_1 cpp plot example_figure_2 doc appearance figure figure_2 svg appearance figure figure_2 cpp plot example_figure_3 doc appearance figure figure_3 svg appearance figure figure_3 cpp line spec see example_line_spec_1 doc appearance line_spec line_spec_1 svg appearance line_spec line_spec_1 cpp plot example_line_spec_1 doc appearance line_spec line_spec_1 svg appearance line_spec line_spec_1 cpp object see example_axes_1 doc appearance axes_1 svg appearance axes_1 cpp example_axes_2 doc appearance axes_2_thumb png appearance axes_2 cpp example_axes_3 doc appearance axes_3_thumb png appearance axes_3 cpp plot example_axes_1 doc appearance axes_1 svg appearance axes_1 cpp plot example_axes_2 doc appearance axes_2 png appearance axes_2 cpp plot example_axes_3 doc appearance axes_3 svg appearance axes_3 cpp clear see example_cla_1 doc appearance cla cla_1 svg appearance cla cla_1 cpp example_cla_2 doc appearance cla cla_2_thumb png appearance cla cla_2 cpp example_cla_3 doc appearance cla cla_3_thumb png appearance cla cla_3 cpp plot example_cla_1 doc appearance cla cla_1 svg appearance cla cla_1 cpp plot example_cla_2 doc appearance cla cla_2 svg appearance cla cla_2 cpp plot example_cla_3 doc appearance cla cla_3 svg appearance cla cla_3 cpp export save manually save manually save programatically save programatically save manually interactive plot window contain widget save current figure widget backend produce interactive image final image match closely user see window save programatically programmatically save figure number format save function see example_save_1 doc export save save_1 png export save save_1 cpp example_save_2 doc export save save_2_thumb png export save save_2 cpp example_save_3 doc export save save_3_thumb png export save save_3 cpp example_save_4 doc export save save_4_thumb png export save save_4 cpp example_save_5 doc export save save_5_thumb png export save save_5 cpp example_save_6 doc export save save_6_thumb png export save save_6 cpp example_save_7 doc export save save_7_thumb png export save save_7 cpp example_save_8 doc export save save_8_thumb png export save save_8 cpp plot example_save_1 doc export save save_1 png export save save_1 cpp plot example_save_2 doc export save save_2 png export save save_2 cpp plot example_save_3 doc export save save_3 png export save save_3 cpp plot example_save_4 doc export save save_4 svg export save save_4 cpp plot example_save_5 doc export save save_5 svg export save save_5 cpp plot example_save_6 doc export save save_6 svg export save save_6 cpp plot example_save_7 doc export save save_7 svg export save save_7 cpp plot example_save_8 doc export save save_8 png export save save_8 cpp first option save filename infer appropriate format filename extension case save filename save filename fileformat function temporarily change backend non interactive backend appropriate draw figure different backend format depend format final image necessarily match interactive plot window reason format purposefully include feature instance consider bar chart generate export image get vector graphic see barchart svg doc img barchart svg export image generate representation image appropriate text markdown see last save image would save image format appropriate embed latex document see barchart latex doc img barchart png export image format label replace latex text plot fit rest document cod style member free stand function like matplotlib support cod style free stand function object orient interface would generate plot free stand function object orient interface freestanding function call function create plot current global current object current object current figure global figure registry instance plot create line plot current create new object need also plot create line plot object verbose small project quick test library look exist create plot object orient interface explicitly create figure call method instance plot plot object create line plot current auto gca plot verbose provide good control large project need pas object around user manage handle contain plot free stand function templated function meta program call main function current object first parameter axes_handle get axes_handle figure registry gca section object object forward parameter function object first parameter axes_handle template function forward parameter first object template free stand function keep cod style maintainable developer note need object function my_function also need get reference object free stand function case free stand function verbose object orient interface adhere free stand function could create version my_function receive axes_handle second version would get axes_handle figure registry call first version my_function expose user library could convenience user however notice move verbosity main function my_function fact free stand function matplot work reactive quiet figure also mode figure reactive interactive mode quiet mode reactive mode quiet mode figure reactive mode update whenever child object change happen touch function get call child object change appearance create interactive mode figure update soon adjust property combine interactive figure free stand function matlab like style plot cod pattern figure registry work stream plot problem cod style user might unnecessarily create useless intermediary plot figure quiet mode update call function draw show section reactive figure reactive figure unless function call nothing change figure combination object orient cod style quiet mode matplotlib like style plot cod style user explicitly decide plot show update beneficial application waste computational resource intermediary figure might valuable application generally free stand function reactive mode object orient interface quiet mode default new figure reactive mode unless non interactive backend turn reactive mode ion ioff free stand function reactive bool quiet bool function figure object figure true figure false explicitly create new figure convenience section reactive mode show function pause console user interact plot window backend base process pip unidirectional close window enough resume user need console unblock execution similar quiet mode would figure update user could replace show function draw function window would close soon execution complete important show caution function mean particular executables interactive plot close user see probably unreasonable call function inside library user would manually interfere execution continue method chain support compact syntax library allow method chain plot object instance create simple line plot modify appearance object handle method chain first snippet work plot return line_handle object line handle modify line plot whenever modify property setter function call touch draw figure reactive mode second option work setter return reference rather void range plot function work range element convertible double instance create line plot set element object function begin end consider iterable range object subclass vector vector store convenience common header include alias vector_1d vector_2d type conversion also work range range unfortunately templated function work exception initializer list initializer list work function explicitly define common utility header common color include number utility include naive function generate manipulate vector string handle rgba color array convert point polar coordinate read string write string calculate gradient read write manipulate image generate vector random number although function might helpful function operate std vector intend library utility sole purpose algorithm simplify backends library currently include gnuplot backend experimental opengl backend come new backends continuous process see complete article doc white description backend interface source matplot backend backend_interface description current default backend gnuplot pipe source matplot backend gnuplot involve possible new backends doc white backends see directory source matplot backend source matplot backend also look test backends main cpp test backends ogl_main cpp hurry summary backends backends consider work gnuplot pro seem work everyone con pip comparatively slow unidirectional practice default backend get right opengl pro efficient many fps con block main thread operate system experimental opengl backend already work plot category see test backends ogl_main cpp opengl see agg pro great vector graphic con unmaintained non interactive see motivation detail interest understand library work read detail complete article doc white describe relationship main object backend interface create new plot category limitation compare library similar alternative community get involve get start library please complete let know improve experience discussion concentrate github page refrain ask question propose idea library help create something interest please divulge community programmer good idea please idea academic collaboration welcome would great see library help people write lot lot academic idea roadmap feel free contribute new feature library complex feature change consider get community first contribute exist base convention might seem intricate first please let discourage share idea many way contribute library test library new environment see contribute interest see source design new backends see source matplot backend backend_interface test backends ogl_main cpp backends doc white backends find problem documentation see write algorithm new plot category see find bug general see whatever idea seem interest thing ask make sure contribution destructive contribution interest like optional feature remove deprecate remove feature support old version provide equivalent alternative remove feature update ______ provide equivalent alternative create high cost promise support ________ forever stick around keep promise doubt please open first contribute guideline contribute please leave opengl backend pedantic mode dbuild_experimental_opengl_backend dbuild_with_pedantic_warnings clion clion setting pedantic mode doc img pedantic_clion png contribute documentation please edit readme readme directly doc doc automatically generate contributor alan freitas duncan ogilvie luis cere matthew hennefarth action user alex rath3t marcus asteborg edvins mineikis gitplcc randy jones sammi amro baali bjc6rn sundin dimitrij mijoski mabnt morwenn niclas wall wennerdal solo super akash patel eagle dai myd7349 wjdragon andrew kane would also like thank icculus reference reference work abadi barham chen chen davis dean devin ghemawat irving isard tensorflow system large scale machine 12th usenix symposium operate system design osdi angerson bai dongarra greenbaum mckenney croz hammarling demmel bischof sorensen lapack portable linear algebra library high performance computer supercomputing proceed acm ieee conference supercomputing ieee antcheva ballintijn bellenot biskup brun buncic canal casadei coueto fine root framework petabyte storage statistical analysis visualization computer physic communication baratov hunter url barrett hunter miller hsu greenfield matplotlib portable plot package astronomical analysis software system xiv volume bezanson edelman karpinski shah julia fresh approach numerical compute siam review cegui team cegui url cornut dear imgui bloat free immediate mode graphical user interface minimal dependency url guzman element url eichhammer qcustomplot url evers matplotlib cpp url freitas pareto front library url frigo johnson fftw adaptive software architecture fft proceed ieee international conference acoustic speech signal process icassp cat 98ch36181 volume ieee fruchterman reingold graph draw force direct placement software practice experience gnu project gnu octave introduction plot url guy eric schalnat andreas dilger grp libpng url hao nana url hunter matplotlib graphic environment compute science engineer doi mcse idea4good guilite url imagemagick studio llc magick url independent jpeg group libjpeg url intel corporation willow garage open source computer vision library opencv url jakob pybind11 url kagstrom basic linear algebra subprogram blas url kainz bogart hess openexr image format siggraph technicalsketches kamada kawai algorithm draw general undirected graph information process letter loup gailly adler zlib url martin hoffman master cmake cross platform system kitware mckinney panda foundational library analysis statistic high performance scientific compute conan conan url melchior cpm cmake url murray cumming gtkmm url natural earth natural earth free vector raster map url networkx developer networkx url olivier birot nodesoup url pezent implot url sam leffler libtiff url schaling boost library boris schaling spitzak fast light toolkit fltk ftlk fast light toolkit available stahlke gnuplot iostream url storer juce url terra informatica software inc sciter url fltk team fltk url mathworks inc matlabgraphics url company url tschumperle cimg url van zijp fox toolkit url vasilev canal naumann russo cling new interactive interpreter root journal physic conference series volume walt svd colbert varoquaux numpy array structure efficient numerical computation compute science engineer wei minigui url williams kelley bersch broke campbell cunningham denholm elber fearick gramme gnuplot wxwidgets wxwidgets url xorg foundation x11 url zaitsev webview url zakai emscripten llvm javascript compiler proceed acm international conference companion object orient program system language application companion
C C++;https://github.com/chrismanning/jbson;jbson library iterate bson json document tableofcontents feature feature header boost license depend boost header standard library note note fully compatible document bson spec strict iterator base json parser mostly compliant json standard note note parse mongodb extend utf string user define json literal _json_set _json_doc _json_arr support filter boolean expression usage usage type function jbson ref jbson namespace element element jbson basic_element class element name value access template parameter container generally non range boost iterator_range jbson element alias jbson basic_element enforce ownership name always copy may change future value may may depend container template parameter type element determine comparison jbson element_type enum class value value access jbson basic_element value member function jbson get free function cpp jbson element_type jbson element elem elem type element_type string_element auto str elem value auto str jbson get elem container contiguous auto str elem value auto str jbson get elem return either std string boost string_ref depend container auto str jbson get elem element modify value member function cpp jbson element_type jbson element elem elem value string assert elem type element_type string_element elem value assert elem type element_type int32_element elem value assert elem type element_type boolean_element elem value assert elem type element_type boolean_element elem value element_type boolean_element assert elem type element_type boolean_element element also access via visitor pattern cpp namespace jbson element elem struct visitor template void operator boost string_ref name element_type etype value const something void operator boost string_ref name element_type etype const element whose type value null_element undefined_element elem visit visitor visitor also return value necessary typedef return_type cpp namespace jbson element elem struct isnull template bool operator boost string_ref element_type const return false bool operator boost string_ref element_type const return true bool null elem visit isnull document array builder array_builder simple class document array respectively allow document array variable rather literal cpp namespace jbson auto str str int num string str int child bool false document doc builder string element_type string_element str int element_type int32_element num element_type document_element builder child bool element_type boolean_element false intent clear little verbose due explicit type omit type compatible json type become cpp namespace jbson auto str str int num string str int child bool false document doc builder string str int num builder child bool false good get array_builder way apart lack name parameter implicitly set integer cpp namespace jbson auto str str int num str child bool false array arr array_builder str num builder child bool false document doc main class jbson template jbson basic_document jbson basic_array jbson basic_element type parameterised underlie container range generally recommend random access range default alias document element parameterised std vector second template parameter basic_document define parameter child basic_element default define boost iterator_range avoid copy though care take element outlive container document else copy jbson element cpp jbson document doc auto element doc std for_each doc begin doc end auto something basic_array implement basic_document class usually interchange freely course basic_document document basic_array array basic_document simply constant wrapper around bson container allow iteration element form basic_element range base loop non modify standard algorithm iterators retain copy element mean iterator contain copy element however document set doc_set basic_document_set alias template std set basic_document basic_array explicitly convertible easily modify exist document cost copy convert entire document constituent element type parameter basic_document_set container range default alias document_set basic_document_set make set basic_element cpp jbson document doc jbson document_set set doc modify set doc set convert back json parse json json document parse json_reader class parse directly bson implicitly convert valid basic_document basic_array basic_document_set also move convert document array efficient conversion cpp jbson json_reader reader reader parse json reader parse json raw string auto doc jbson document std move reader json_reader parse string literal range utf character std string boost string_ref boost iterator_range qbytearray etc parse utf utf document json_reader must pas range iterators char16_t char32_t respectively assume input unit system endian bom byte order mark begin input error json_reader may also work wchar_t though usage non standard non portable unsupported convenience user define literal implement json document cpp jbson literal auto doc json _json_doc equivalent performance performance performance json parser decent measure 2nd rapidjson 3rd qjsondocument small input qjsondocument small iteration parse sec base benchmark qjsondocument large iteration parse sec base benchmark jsoncpp small iteration parse sec base benchmark jsoncpp large iteration parse sec base benchmark rapidjson small iteration parse sec base benchmark rapidjson large iteration parse sec base benchmark jbson small iteration parse sec base benchmark jbson large iteration parse sec base benchmark jsoncons small iteration parse sec base benchmark jsoncons large iteration parse sec base benchmark measurement small object parser average time memory usage jsoncpp qjsondocument jbson medium object parser average time memory usage jsoncpp qjsondocument jbson large object parser average time memory usage jsoncpp qjsondocument dnf jbson note note jbson bson like terminology document root object also embed object bson incompatible json element name contain make name fully utf compliant json require require codecvt header miss gcc gcc stdlib various template alias probably gcc stdlib behind standard know work date libc currently
C C++;https://github.com/emeryberger/Hoard;hoard memory copyright emery hoard memory allocator fast scalable memory efficient memory allocator work range platform include linux mac window hoard drop replacement malloc dramatically improve application performance especially multithreaded program multiprocessor multicore cpu source change necessary link set environment variable see hoard hoard unixmac press multiprocessor machine emery berger excellent hoard multiprocessor memory management drop replacement memory routine fast multiprocessor machine debug application microsoft net microsoft window microsoft improve scalability consider open source alternative hoard memory manager window system program hoard dramatically improve program performance efficient memory moreover hoard provably bound memory blowup low synchronization cost principle parallel program user company hoard product server include aol british telecom blue vector business object formerly crystal decision cisco credit suisse entrust infovista kamakura novell oktal opentext openwave system typhoon twister server pervasive software plath gmbh quest software reuters royal bank canada sap sonus tata communication verite group open source project hoard include asterisk open source telephony project bayonne gnu telephony server cilk parallel program language gnu common system openfoam computational fluid dynamic toolkit safesquid web proxy hoard standard compiler option standard performance evaluation corporation cpu2006 benchmark suite intel open64 compiler license hoard release widely permissive apache license version hoard number problem exist memory allocator make hoard good choice contention multithreaded program often scale heap bottleneck multiple thread simultaneously allocate deallocate memory allocator allocator serialize program make intensive allocator actually slow number processor increase program may allocation intensive without realize instance program make many call standard template library stl hoard eliminate bottleneck false share system provide memory allocator cause insidious problem multithreaded lead phenomenon know false share thread different cpu end memory cache line chunk memory access falsely share cache line time slow access unshared cache line hoard design prevent false share blowup multithreaded program also lead allocator blowup memory consumption effect multiply amount memory need application number cpu machine cpu could mean need time much memory hoard guarantee provably bind memory consumption installation homebrew mac homebrew current version hoard follow brew tap emeryberger hoard brew head emeryberger hoard libhoard hoard library also create hoard command hoard anything command line hoard myprogram hoard source mac linux window wsl2 hoard source follow git clone src make hoard link executable set ld_preload environment variable export ld_preload path libhoard mac export dyld_insert_libraries path libhoard dylib hoard window change src directory window version hoard src nmake hoard link executable source uselibhoard cpp libhoard lib must flag hoard src yourapp cpp source uselibhoard cpp libhoard lib yourapp exe need libhoard dll path benchmark directory benchmark contain number benchmark evaluate tune hoard technical information hoard change quite bite year technical detail first version hoard read hoard scalable memory allocator multithreaded emery berger kathryn mckinley robert blumofe paul wilson ninth international conference architectural support program language operate system asplos cambridge november
C C++;https://github.com/ldionne/hana-cppnow-2015;presentation hana repository contain reveal base presentation hana basic usage open index html browser advance usage root repository connect localhost view locally note future self index html generate index html generate index html hana reveal
C C++;https://github.com/Cogmasters/concord;concord discord api library concord asynchronous c99 discord api library minimal external dependency low level translation discord official documentation minimal minimalistic refer good overview instruction window cygwin make sure instal libcurl gcc make git cygwin installer want check window tutorial doc window linux bsd mac dependency curl high compile libcurl source need ssl support ubuntu debian void linux alpine freebsd set environment clone concord workspace compile concord special note non linux system might trouble compiler linker find curl header something like instance freebsd system macports configure concord follow outline default field config json test copycat bot get bot token add config json assign discord token field well write instruction explain get bot token add server executables copycat bot get copycat bot response type message channel bot part bot send exact copy return terminate copycat bot ctrl ctrl instal concord note mean root include header must concord prefix header libary prefix override standalone executable gcc clang unix compiler note system cygwin require link libpthread usr lib recommend debugger first make sure executable compile flag ensure human readable debugger message valgrind valgrind check memory leak comprehensive guide check valgrind quick gdb gdb check runtime error segmentation fault execute bot gdb environment program crash get backtrace function call lead comprehensive guide check beej quick guide support problem check discord contribute kind contribution welcome ask abide guideline doc contribute want help unsure get start discord api roadmap doc discord_roadmap good start point check link link helpful information get start discord api roadmap doc discord_roadmap useful link migrate
C C++;https://github.com/sgorsten/linalg;linalg release license travis appveyor linalg linalg single public short vector library inspire syntax popular shade compute language intend serve lightweight alternative project domain computer graphic computational geometry physical simulation allow easily write program like follow linalg aim lightweight library define single header line dependency free dependency beyond compliant compiler small subset standard library standard compliant almost operation free undefined behavior evaluate constexpr context generic type operation parameterized scalar type mix within expression type promotion rule roughly match standard consistent name function overload operator perform conceptual operation type support complete restriction operation may apply type easy integrate library define symbol public namespace provide mechanism define implicit conversion external user provide type documentation still progress structure structure vector vector matrix matrix function list function list vector algebra vector algebra quaternion algebra quaternion algebra matrix algebra matrix algebra component wise operation component wise operation reduction reduction optional feature optional feature type alias type alias ostream overload ostream overload user define conversion user define conversion high order function high order function change change v21 structure vector linalg vec define fix length vector contain exactly element type convenience alias float3 float4 int2 provide linalg alias namespace type alias structure store wide variety type include geometric vector point homogeneous coordinate plane equation color texture coordinate situation need manipulate small sequence number vec support set algebraic vector algebra component wise component wise operation function well set standard reduction reduction vec constructible element type explicitly constructible single element type explicitly constructible vec type field support index support unary operator component wise fashion support binary operator component wise fashion support binary operator scalar leave right support operator vector scalar right support operation mix element type support range base flat memory layout matrix linalg mat define fix size matrix contain exactly row column type column major order convenience alias float4x4 double3x3 provide linalg alias namespace type alias structure support set algebraic matrix algebra function component wise component wise operation function well set standard reduction reduction mat constructible column type vec constructible linalg identity explicitly constructible single element type explicitly constructible mat type support index column support retrieval assignment row support unary operator component wise fashion support binary operator component wise fashion support binary operator scalar leave right support operator matrix scalar right support operation mix element type support range base column flat memory layout function list vector algebra cross vec vec vec cross vector vector cross vec vec shorthand cross cross vec vec shorthand cross cross vec vec shorthand cross dot vec vec dot inner vector length vec length magnitude vector length2 vec square length magnitude vector normalize vec vec unit length vector direction undefined length vector distance vec vec euclidean point distance2 vec vec square euclidean point angle vec vec angle vector uangle vec vec angle unit vector undefined non unit vector rot vec vec vector rotate counter clockwise angle nlerp vec vec vec shorthand normalize lerp slerp vec vec vec spherical linear unit vector undefined non unit vector parameter quaternion algebra small set function provide support quaternion math vec value represent quaternion form qmul vec vec vec hamilton quaternion qconj vec vec quaternion qinv vec vec inverse quaternion undefined length quaternion qexp vec vec quaternion qlog vec vec quaternion qpow vec vec quaternion raise exponent second set function provide support unit length quaternion represent spatial rotation undefined quaternion unit length qangle vec angle radian rotation express quaternion qaxis vec axis rotation expression quaternion undefined angle quaternion qrot vec vec vec vector rotate via rotation quaternion qmat vec 3x3 rotation matrix perform operation rotation quaternion qxdir vec efficient shorthand qrot qydir vec efficient shorthand qrot qzdir vec efficient shorthand qrot possible nlerp slerp function interpolate rotation quaternion though simply dimensional vector however rotation quaternion form double spatial rotation dimension mean distinct rotation quaternion represent spatial rotation naively interpolate spatial rotation quaternion could follow short path long path rotation depend specific quaternion interpolate qnlerp vec vec similar nlerp always choose short path rotation represent qslerp vec vec similar slerp always choose short path rotation represent matrix algebra mul mat mat mat matrix matrix mul mat vec vec matrix matrix column matrix contain element vector mul shorthand mul mul outerprod vec vec mat vector diagonal mat vec vector contain element along main diagonal matrix trace mat sum element along main diagonal matrix transpose mat mat matrix adjugate mat mat adjugate classical matrix transpose cofactor matrix numerator expression inverse comatrix mat mat comatrix cofactor matrix transpose adjugate matrix determinant mat matrix inverse mat mat multiplicative invertible undefined singular input component wise operation unary function floor ceil exp log log10 sqrt sin tan asin acos atan sinh cosh tanh round accept vector value argument produce vector value pas individual element function name std namespace define binary function fmod pow atan2 copysign function similarly except either argument vector scalar binary function equal nequal great lequal gequal apply operator respectively component wise fashion return vec either argument vector scalar min vec perform component wise selection less element either argument vector scalar max vec perform component wise selection great element either argument vector scalar clamp vec perform component wise clamp element low high boundary min max argument vector scalar select vec perform component wise ternary operator argument vector scalar lerp vec perform component wise linear interpolation argument vector scalar reduction vec bool true element vector true vec bool true element vector true sum vec sum element vector product vec return product element vector minelem vec return value least element vector maxelem vec return value great element vector argmin vec int return base index least element vector argmax vec int return base index great element vector comparison compare conceptually equivalent operator compare value equivalent shape return value support standard comparison provide order guarantee underlie scalar type vec provide strong order vec provide partial odering optional feature type alias default linalg define symbol global namespace element vector single precision float point value must spell linalg vec various library shade language type might spell float3 vec3 vec3f point3f simd_float3 possibility linalg provide collection useful alias linalg alias namespace name specify namespace suitable user purpose quickly bring scope follow note bring type alias global scope core type function operator overload define library remain namespace linalg spell namespace linalg alias conflict type define global namespace namespaces interest user choose omit namespace directive instead define alias desire course always possible core linalg type directly operate environment additional symbol define set type alias define namespace linalg alias follow vec aliased floatm float1 float2 float3 float4 vec aliased doublem double1 double2 double3 double4 vec aliased intm int1 int2 int3 int4 vec aliased uintm uint1 uint2 uint3 uint4 vec aliased boolm bool1 bool2 bool3 bool4 vec aliased shortm short1 short2 short3 short4 vec aliased ushortm ushort1 ushort2 ushort3 ushort4 vec aliased bytem byte1 byte2 byte3 byte4 mat aliased floatmxn float1x3 float3x2 float4x4 etc mat aliased doublemxn double1x3 double3x2 double4x4 etc mat aliased intmxn int1x3 int3x2 int4x4 etc mat aliased boolmxn boolx3 bool3x2 bool4x4 etc combination element row column provide ostream overload default linalg provide operator interaction standard library stream permit maximum flexibility user wish define format without delimiters row versus column major matrix human readable precision round trip exact however often useful simply able show something write small program provide default stream operator overload bring scope provide behavior output string currently specify stream property width precision pad etc match brace initialization syntax could construct value without extra whitespace user define conversion mechanism exist define automatic conversion linalg user provide type mechanism already define bidirectional conversion linalg vec std array todo explain converter high order function linalg fold fold high order function accept function form repeatedly invoke element_of_b element consume return approximately equal leave fold initial vec element fold least great index mat element fold column major order see also reduction reduction linalg apply apply high order function accept function form apply component wise set element structure compatible shape dimension approximately equal follow shape whether scalar vector matrix dimension thereof determine argument argument non scalar shape argument must agree scalar freely intermix non scalar element type also freely mix element type return value determine return type provide map function support call signature enumerate follow table call type type type type element apply apply vec vec apply mat mat apply apply vec vec apply vec vec apply vec vec vec apply mat mat apply mat mat apply mat mat mat apply apply vec vec apply vec vec apply vec vec vec apply vec vec apply vec vec vec apply vec vec vec apply vec vec vec vec todo explain apply_t sfinae helper see also component wise operation component wise operation change improvement map zip subsume new apply apply support unary binary ternary operation vec apply support unary binary operation mat quat apply also invoke exclusively scalar support arbitrary number argument apply support mix element type template type alias apply_t provide return type apply vec mat specialization provide compare provide way comparison compatible type clamp invoke distinct compatible type select provide component wise equivalent lerp generalize component wise operation vector scalar user specialize converter enable implicit conversion either type vec mat quat identity implement facility serve library undefined behavior accord standard almost operation internally call function constexpr except argmin argmax lambda linalg avoid potential odr violation deprecation operator deprecate pair matrix call cmul original component wise product intend call mul algebraic matrix product intend define linalg_forward_compatible include linalg remove deprecate feature break change beta intend compatibility restore officially tag linalg long support visual studio however know work gcc clang mode visual studio vec mat may arithmetic requirement likely relax require specialize trait type indicate additional scalar type
C C++;https://github.com/SFML/SFML;sfml sfml simple fast multimedia library sfml simple fast cross platform object orient multimedia api provide access windowing graphic audio write bind various language net ruby author laurent gomila laurent sfml dev org marco antognini hiura sfml dev org binary1248 binary1248 hotmail com lukas durrenberger expl0it3r sfml dev org jonathan wachter dewachter jonathan gmail com jan haller bromeon sfml dev org mario liebisch mario sfml dev org stefan schindler tank sfml dev org artur moreira artturmoreira gmail com vittorio romeo vittorioromeo sfml dev org many member sfml community get late official release sfml also get current development version git follow instruction platform compiler sfml support several place sfml official online api community community contribute sfml open source project need help grow improve want get involve suggest additional feature bug report submit patch please look contribution license sfml library source distribute zlib libpng see license license external library sfml distribute license short sfml free commercial personal proprietary open source sfml project without restriction even omit mention sfml although would appreciate external library sfml lgpl _stb _image_ public freetype license gpl bsd bsd bsd cc0
C C++;https://github.com/SergiusTheBest/plog;plog portable simple extensible log library pretty powerful log library line introduction introduction hello log hello log feature feature usage usage step add include step add include step initialization step initialization step log step log basic log macro basic log macro conditional log macro conditional log macro logger severity checker logger severity checker advance usage advance usage change severity runtime change severity runtime custom initialization custom initialization multiple appenders multiple appenders multiple logger multiple logger share log instance across module exe dll dylib share log instance across module exe dll dylib chain logger chain logger architecture architecture overview overview logger logger record record formatter formatter txtformatter txtformatter txtformatterutctime txtformatterutctime csvformatter csvformatter csvformatterutctime csvformatterutctime funcmessageformatter funcmessageformatter messageonlyformatter messageonlyformatter converter converter utf8converter utf8converter nativeeolconverter nativeeolconverter appender appender rollingfileappender rollingfileappender consoleappender consoleappender colorconsoleappender colorconsoleappender androidappender androidappender eventlogappender eventlogappender debugoutputappender debugoutputappender miscellaneous note miscellaneous note lazy stream evaluation lazy stream evaluation stream improvement std ostream stream improvement stdostream automatic pointer capture automatic pointer capture header include header include unicode unicode wide string support wide string support performance performance printf style format printf style format log_xxx macro name clash log_xxx macro name clash disable log reduce binary size disable log reduce binary size extend extend custom type custom type custom appender custom appender custom formatter custom formatter custom converter custom converter sample sample reference reference compete log library compete log library tool useful info tool useful info license license version history version history introduction hello log plog log library design simple small flexible possible create alternative exist large library provide unique feature csv log format csvformatter wide string support wide string support minimal hello log sample output feature small slightly loc easy header 3rd party dependency cross platform window linux freebsd macos android rtems gcc clang msvc mingw mingw w64 icc builder thread type safe formatters txt txtformatter csv csvformatter funcmessage funcmessageformatter messageonly messageonlyformatter appenders rollingfile rollingfileappender console consoleappender colorconsole colorconsoleappender android androidappender eventlog eventlogappender debugoutput debugoutputappender automatic pointer capture automatic pointer capture support msvc lazy stream evaluation lazy stream evaluation unicode aware unicode store utf8 require extendable extend window dependency utc local time modern cmake usage start plog need make simple step step add include first project need know plog add plog include project include path add include cpp precompiled header good place add include step initialization next step initialize logger logger follow plog init function maxseverity logger severity upper limit log message severity high limit message drop plog define follow severity level note message severity level none always print log format determine automatically filename extension csv csv format csvformatter anything else txt format txtformatter roll behavior control maxfilesize maxfiles parameter maxfilesize maximum log size byte maxfiles number log keep log roll disable sample logger initialize write message warn severity csv format maximum log size set byte log keep note see custom initialization custom initialization advance usage step log log perform help special macro log message construct stream output operator thus type safe extendable contrast format string output basic log macro type log macro unconditional log long macro short macro function style macro conditional log macro macro conditional log accept condition parameter perform log condition true long macro short macro function style macro logger severity checker case need perform group action depend current logger severity level special macro help minimize performance penalty logger inactive sample advance usage change severity runtime possible set maximum severity logger initialization time time late special accessor method get logger plog get function sample custom initialization non typical log case require custom initialization follow plog init function construct appender appender parameterized formatter formatter pas plog init function note appender lifetime static sample multiple appenders possible multiple appenders appender within single logger logger case log message write follow method accomplish sample logger initialize way log message write console refer multiappender sample multiappender complete sample multiple logger multiple logger logger simultaneously separate configuration logger logger differ instanceid implement template parameter default instanceid initialization appropriate template plog init function get logger plog get function return null logger initialize log macro special version accept instanceid parameter kind macro underscore end sample refer multiinstance sample multiinstance complete sample share log instance across module exe dll dylib application consist several binary module plog instance local module instance share module instance case share initialize plog module module reuse instance share behavior control follow macro dependent macro behavior plog_global linux unix share plog_local linux unix local plog_export linux unix plog_import linux unix linux unix accord compiler setting plog_global window plog_local window local plog_export window share export plog_import window share import window local share window module plog_export others plog_import also careful linux unix specify share behavior determine compiler setting fvisibility refer share sample share complete sample chain logger logger logger work appender appender another logger logger chain several logger together useful stream log message share library main application binary important forget specify plog_local share mode linux unix system sample sample refer chain sample chain complete sample architecture overview plog design small flexible prefer template interface inheritance main entity show follow uml diagram plog class functional part logger logger main object implement singleton record record keep log time message etc appender appender represent log destination console etc formatter formatter format log string converter converter convert formatter output raw buff log flow show log logger logger logger center object whole log system singleton thus form know single entry point configuration process log logger logger act appender appender another logger logger implement iappender interface also several independent logger parameterized integer instanceid number default instanceid record record record store log include time severity thread pointer log message write within object source line source name function name message note source name capture default enable define plog_capture_file also record record number overload stream output operator construct message see stream improvement std ostream stream improvement stdostream refer demo sample demo sample see write log stream formatter formatter formatter responsible format log record record various string representation binary form base class formatters implement class static function format header see implement custom formatter custom formatter txtformatter classic log format available almost log library good console output easy read without tool txtformatterutctime variant txtformatter txtformatter utc time instead local time csvformatter powerful log format easily read without tool slighlty hard txt format txtformatter heavily analyze open csv aware tool like excel row highlight accord cell value another row hide column manipulate even sql query log recommend format log big require heavy analysis also pointer show object instance tell apart note message size limit char csvformatterutctime variant csvformatter csvformatter utc time instead local time funcmessageformatter format design appenders provide timestamps like androidappender androidappender linux syslog facility messageonlyformatter formatter interest log message converter converter converter responsible conversion formatter formatter output raw buff represent std string rollingfileappender rollingfileappender perform conversion write base class converter implement class static function convert header see implement custom converter custom converter utf8converter utf8converter utf8converter default converter plog convert string utf bom nativeeolconverter converter convert line end window nothing everything else template parameter accept another converter call next default utf8converter utf8converter sample refer nativeeol sample nativeeol complete sample appender appender appender formatter formatter converter converter get desire representation log output append console etc appenders must implement iappender interface interface plog see implement custom appender custom appender rollingfileappender appender output log roll behavior template parameter accept formatter formatter converter converter filename log name maxfilesize maximum log size byte maxfiles number log keep maxfilesize maxfiles roll behavior turn sample name produce appender mylog log current log size maxfilesize mylog log previous log size maxfilesize mylog log previous log size maxfilesize name change arbitrary moment call setfilename well maxfiles maxfilesize change call setmaxfiles setmaxfilesize note low maxfilesize byte note log create first log message consoleappender appender output log stdout stderr template parameter accept formatter formatter colorconsoleappender appender output log stdout stderr color depend log message severity level template parameter accept formatter formatter androidappender androidappender androidappender android log system output log view log window android ides template parameter appender accept formatter formatter usually funcmessageformatter funcmessageformatter eventlogappender appender output log window event log view window event log viewer template parameter accept formatter formatter constructor parameter event source name typically name application subcomponent application must unique whole system eventlogappender eventlogappender must register window registry call constructor helper class registry operation system wide require administrator right also persistent perform application instal uninstalled debugoutputappender debugoutputappender debugoutputappender send log debugger work window template parameter appender accept formatter formatter miscellaneous note lazy stream evaluation log message construct lazy stream evaluation mean log message drop severity stream output operator execute thus performance penalty unprinted log message negligible stream improvement std ostream stream output plog several improvement standard std ostream handle wide char string wchar_t wchar_t std wstring handle null value string char wchar_t implicitly cast object std string std wstring appropriate cast operator support qstring qstringref need include header plog support std filesystem path support manage system string automatic pointer capture pointer capture automatically log print csvformatter csvformatter unfortunately feature support msvc high disable default due compatibility issue __if_exists extension enable define plog_enable_get_this header include core plog functionality provide inclusion plog log extra component require inclusion correspond extra header plog log core component txtformatter txtformatter txtformatterutctime txtformatterutctime csvformatter csvformatter csvformatterutctime csvformatterutctime utf8converter utf8converter nativeeolconverter nativeeolconverter rollingfileappender rollingfileappender unicode plog unicode aware wide string friendly message convert system native char type wchar_t window char system also char treat active page window utf system internally plog nstring nstringstream nchar native define default log store utf bom thank utf8converter utf8converter wide string support whether wchar_t wchar_t std wstring stream log message control plog_enable_wchar_input macro set non value enable wide string support default wide string support enable window disable non window system note wide string support require link iconv macos performance plog asynchronous technique may slow application large volume log message produce single log message take follow amount time cpu time per log call microsec amd phenom 1055t 5ghz window amd phenom 1055t 5ghz linux mint intel core 3120m 5ghz window intel core 2500k 2ghz window intel atom n270 6ghz window assume microsec per log call log call per second slow application acceptable case refer performance sample performance complete sample printf style format plog support printf style format log_xxx macro name clash log_xxx macro name may conflict library case disable log_xxx macro define plog_omit_log_defines plog_xxx define plog_omit_log_defines include project setting disable log reduce binary size log make binary large debug remove log release define macro plog_disable_logging extend plog easily extend support new custom type custom type custom appender custom appender custom formatter custom formatter custom converter custom converter custom type output custom type log message implement follow function refer customtype sample customtype complete sample custom appender custom appender must implement iappender interface also may accept formatter formatter converter converter template parameter however optional refer customappender sample customappender complete sample custom formatter formatter compatible exist appenders must class static method header return header new log format format record record string refer customformatter sample customformatter complete sample custom converter converter must class static method header convert header new log convert convert log message refer customconverter sample customconverter complete sample sample number sample demonstrate various aspect plog find sample sample folder sample description android sample android show androidappender androidappender arduino sample arduino arduino sample finish yet chain sample chain show chain logger share library main logger route message colorconsole sample colorconsole show colorconsoleappender colorconsoleappender customappender sample customappender show implement custom appender store log message memory customconverter sample customconverter show implement custom converter encrypt log message customformatter sample customformatter show implement custom formatter customtype sample customtype show print custom type log stream debugoutput sample debugoutput show debugoutputappender debugoutputappender write window debug output demo sample demo demonstrate log stream ability print various type message disablelogging sample disablelogging show disable log strip binary eventlog sample eventlog show eventlogappender eventlogappender write window event log facility sample facility show log per facility via multiple logger instance useful big project hello sample hello minimal introduction sample show basic step start plog library sample library show plog usage static library multiappender sample multiappender show multiple appenders logger multiinstance sample multiinstance show multiple logger instance instance independent configuration objectivec sample objectivec show plog objectivec path sample path test sample check std filesystem path log performance sample performance measure time per log call setfilename sample setfilename show change log name arbitrary moment share sample share show share logger instance across binary module skipnativeeol sample skipnativeeol show skip nativeeolconverter nativeeolconverter utctime sample utctime show utc time instead local time reference compete log library tool useful info __if_exists control symbol license plog license mpl version freely commercial opensource software version history version feb new ability disable log reduce binary size new ability change maxfiles maxfilesize initialization new log std filesystem path without explicit conversion std string new allow choose stdout stderr console appender new ability change log name runtime new ability control share across module new platform without thread support enh change color function private protect enh include plog init plog log fix widechartomultibyte bug fix qt6 fix compile gcc fix suppress ubsan false positive fix share handle child process fix msvc analyzer warn fix size truncation 2gb window fix new toolchain version oct new nativeeolconverter default new add logger instanceid record new add support printf style format new make severityfromstring case insensitive new define macro name plog instead log order avoid conflict log name define package system header new add option sample per default new add cmake installer new add support qstringref new modernize cmake new allow rolllogfiles call manually new add ability utc time fix disable plog_get_this default fix change regsetvalueexw prototype match window native declaration void byte fix move system string handler free function fix make sure standalone window fix parse error resharper fix parse error clang creator fix print customtype begin stream fix make rollingfileappender work maxfiles set fix clang tidy nullable issue version mar new add wundef support new add support new add intel compiler support new add freebsd support new add wnon virtual dtor support new support ostream operator window well wostream fix fix compilation android fix fix compile cmake version aug new introduce log_enable_wchar_input macro control wide string support new add support manage system string new add miss macro log severity none fix unable nativeeolconverter nativeeolconverter utf8converter utf8converter visual studio fix writeconsolew instead global setlocale write unicode window console fix mention link iconv macos fix if_log macro work curly brace block version may new add nativeeolconverter nativeeolconverter new add messageonlyformatter messageonlyformatter new slightly increase log performance window version apr new ability check whether event log registry entry exist fix update include fix get rid window dependency fix sign unsigned assignment warn fix warn macos sierra version nov fix introduce binary compatible interface record warn compatible version chain mode chain logger mix version nov new default instanceid set via log_default_instance new support qstring new support builder new severityfromstring function new capture source name disable default new add debugoutputappender debugoutputappender new add eventlogappender eventlogappender fix crash process function name fix compatibility fix if_log_ macro else lead miss else branch fix thread safety consoleappender consoleappender colorconsoleappender colorconsoleappender fix support stream manipulator like std endl fix compatibility old visual studio version version nov new add colorconsoleappender colorconsoleappender fix compatibility fix log create name contain unicode character window fix flush stdout fix intellisense error expect identifier version may initial public release
C C++;https://github.com/rism-ch/verovio;license lgpl pypi appveyor action verovio fast portable lightweight library engrave music encode initiative digital score svg image verovio also contain fly converter render plaine easie digital score verovio write standard compile standalone command line tool compile music render library application compile javascript emscripten llvm javascript compiler check javascript toolkit version verovio mei well web integration user interaction choice verovio standard music font layout specification font change personalize output project page verovio available lgpl license see instruction environment see reference libmei attribute class verovio generate mei schema modify version libmei available generate include verovio repository libmei repository need clone verovio major release verovio mei version verovio mei verovio mei verovio development mei since verovio plan even version number verovio release stable version mei odd version number release development version mei mean mei release verovio move version old version mei still support new version verovio mei internally upgrade load verovio apply feature support verovio try maintain future library follow library embed verovio library purpose humdrum import export json parser standard midi export xml parser utf character conversion zip read write contribute see reference output sample page music show generate version dev 2748fed resource verovio name type description verovio humdrum editor online semi graphical humdrum editor also textually edit digital score compliant verovio repertory digital mozart digital score viewer tasso music repertory musical setting poetry torquato measure repertory late medieval music black mensural modern notation probstucke repertory open critical digital edition mattheson test piece bach repertory online edition bach chorale include interactive typesetter allow create musical online display humdrum notation tool javascript interface verovio display multiple musical webpage music sheet tool wordpress plugin display graphical music mei digital score repository github list digital score repository github display verovio link encode description mei complete mei various work encode mei mozart piano humdrum piano sonata mozart alte mozart ausgabe beethoven piano humdrum piano sonata van beethoven edit paul dukas josquin research humdrum score early renaissance music modern edition tasso music humdrum critical edition late renaissance madrigal poetry torquato tasso lyric music scott humdrum digital score scott joplin music chopin humdrum digital score chopin mazurka chopin humdrum digital score chopin prelude hummel prelude humdrum improvisatory prelude every key bach humdrum chorale collect bach father death deutscher humdrum harmonize song vol edit ludwig erk beethoven string humdrum string quartet ludwig van beethoven
C C++;https://github.com/shogun-toolbox/shogun;shogun machine toolbox unify efficient machine since late release cite shogun develop branch status donate shogun via numfocus power buildbot see doc readme doc readme project description see doc readme doc readme installation instruction see doc readme interface doc readme interface call shogun interface see doc readme doc readme detail create api see doc readme develop doc readme develop hack shogun see api api interface see extend developer information interface shogun implement offer automatically generate unify interface octave java scala ruby lua currently work add language include javascript matlab interface status mature know problem octave mature know problem java scala stable know problem ruby stable know problem csharp stable know problem beta work static call unavailable lua alpha many work string typemaps unstable overload method unavailable perl pre alpha work progress quality pre alpha work progress quality see language platform shogun support gnu linux macosx freebsd window see directory content follow directory find source distribution note folder submodules check git submodule update init src source separate source interface doc readmes doc reamde submodule ipython notebook cookbook api license interface set submodule require test unit test continuous integration interface application application shogun outdated benchmark speed benchmark cmake cmake script license shogun generally license gpl3 borrow various external library optional part neither compatible gpl bsd possible compile bsd3 compatible shogun see doc license detail
C C++;https://github.com/Equilibrium-Games/Acid;acid open source cross platform game engine write modern structure fast simple extremely modular vulkan sole graphic api vulkan access apps provide acid render pipeline metal support eventually directx support similar way project work part time single developer heavy development expect bug api change plenty miss feature feature multiplatform window linux macos 32bit 64bit multithreaded command buff thread safety fly glsl spir compilation reflection defer physically base render pbr http ftp udp tcp object serialization json xml resource management serialization event delegate callback scoped function bullet physic entity component system particle effect system multi path search package constraint system msdf font render audio system flac mp3 ogg opus wave shadow map post effect pipeline lensflare glow blur ssao load gltf animation load collada image load png jpeg dng tiff openexr bmp ppm tga dependency vulkan interface audio interface meta loader vulkan api window creation shader compile physic integration archive access third_party source third_party readme small third party dependency snippet screenshots compile platform depend high generate ide make cmake option default build_tests acid_install_examples acid_install_resources instal acid system libs find_package acid work cmake versioning also support find_package acid import target acid acid create acid_resources_dir variable also available point disk location acid resource instal vulkan openal require develop acid make sure environment variable vulkan_sdk openaldir set path vulkan openal instal ensure compiler full support window recommend msvc mingw visual studio must late visual studio installer select desktop development window sdk already instal visual studio acid open cmake workspace folder linux acid require xorg dev libopenal1 libvulkan1 instal read setup vulkan vulkan sdk find setup macos similar setup linux compiler support require xcode contribute contribute acid way want always look help acid style guideline github guideline
C C++;https://github.com/flavio/qjson;qjson json javascript object notation lightweight interchange format represent integer real number string order sequence value collection name value pair qjson base library map json qvariant object json array map qvariantlist instance json object map qvariantmap qjson require great cmake great possible cmake option dcmake_build_type debug enable debug output make easy debug dqjson_build_tests yes dkde4_build_tests yes unit test dcmake_install_prefix home testinstall qjson custom directory dcmake_include_path home testinstall include include custom include directory dcmake_library_path home testinstall lib include custom library directory dlib_destination lib64 bite system separate library bite library dqjson_verbose_debug_output bool debug statement generate parser useful try fix bison grammar unix linux mac mkdir cmake dcmake_install_prefix _preferred_path_ make make sbin ldconfig necessary contribute recommend way submit change via pull request submit patch please ensure patch compile patch fix specific issue implement new feature multiple thing time qjson unit test update qjson unit test pas unit test qjson unit test locate test directory enable pas dqjson_build_tests yes option cmake note well make sure follow instruction unit test move directory type want qjson parser unit test type want qjson serializer unit test type want qjson qobjecthelper test type want test qjson parser specific json object cmdline_tester program binary locate test directory straightforward syntax command convert json object qvariant dump stdout option available via cli option checkout help output note well cmdline_tester rely qdebug dump object qdebug limitation like unable print utf8 char license library license less gnu general public license version see copy lib information resource mail project lead maintainer current flavio castelli mailto flavio castelli name
C C++;https://github.com/redis/hiredis;readme reflect late change master branch see readme documentation late release api abi hiredis hiredis minimalistic client library database minimalistic add minimal support protocol time high level printf alike api order make much high level otherwise suggest minimal base lack explicit bind every redis command apart support send command receive reply come reply parser decouple layer stream parser design easy reusability instance high level language bind efficient reply parse hiredis support binary safe redis protocol redis version library come multiple apis synchronous api asynchronous api reply parse api upgrade note erroneously bump soname skip version simply fix otherwise identical upgrade version mark first stable release hiredis include minor break change mostly make expose api uniform self explanatory also bundle update library sync upstream redis change see changelog changelog _note describe member name change application able upgrade minor change recompiling important break change rediscontext additional member free_privdata privctx redisoptions timeout rename redisoptions connect_timeout add redisoptions command_timeout redisreplyobjectfunctions createarray take size_t instead int length parameter important break change upgrade bulk multi bulk length great llong_max protocol error consistent resp specification bite platform upper bind low size_max change redisreply len size_t denote size string user compare size_t value well compare value cast might necessary remove cast apply upgrade version major overhaul hiredis every aspect however upgrade exist hiredis big pain key thing keep mind upgrade hiredis rediscontext keep state contrast stateless descriptor work synchronous api consume synchronous api function call need introduce connect function redisconnect create call rediscontext context hiredis hold state connection rediscontext struct integer err field non connection error state field errstr contain string description error information error find error section try connect redis redisconnect check err field see establish connection successful note rediscontext thread safe send command several way issue command redis first introduce rediscommand function take format similar printf simple form like specifier interpolate string command strlen determine length string need pas binary safe string command specifier together pointer string require size_t length argument string internally hiredis split command different argument convert protocol communicate redis space separate argument specifier anywhere argument reply return value rediscommand hold reply command successfully execute error occur return value null err field context set see section error error return context reuse set new connection standard reply rediscommand type redisreply type field redisreply test kind reply receive resp2 redis_reply_status command reply status reply status string access reply str length string access reply len redis_reply_error command reply error error string access identical redis_reply_status redis_reply_integer command reply integer integer value access reply integer field type long long redis_reply_nil command reply nil object access redis_reply_string bulk string reply value reply access reply str length string access reply len redis_reply_array multi bulk reply number element multi bulk reply store reply element every element multi bulk reply redisreply object well access via reply element index redis may reply nest array fully support resp3 hiredis also support every new resp3 type follow information protocol see resp3 redis_reply_double command reply double precision float point number value store string str member convert strtod similar redis_reply_bool boolean true false reply value store integer member either redis_reply_map array add invariant always even number element map functionally equivalent redis_reply_array except previously mention invariant redis_reply_set array response entry unique like map type identical array response except duplicate value redis_reply_push array generate spontaneously redis array response always contain least subelements first contain type push message message invalidate second sub array push payload redis_reply_attr array structurally identical map intend meta reply _as redis reply type redis_ redis_reply_bignum string represent arbitrarily large sign unsigned integer value number encode string str member redisreply redis_reply_verb verbatim string intend present user without modification string payload store str member type store vtype member txt raw text markdown reply free freereplyobject function note function take care free sub reply object contain array nest array need user free sub reply actually harmful corrupt memory important current version hiredis free reply asynchronous api mean call freereplyobject api reply clean hiredis _after_ callback return may introduce flag make configurable future version library clean disconnect free context follow function function immediately close socket free allocation create context send command cont together rediscommand function rediscommandargv issue command follow prototype take number argument argc array string argv length argument argvlen convenience argvlen may set null function strlen every argument determine length obviously argument need binary safe entire array length argvlen provide return value semantic rediscommand pipelining explain hiredis support pipelining block connection need understand internal execution flow function rediscommand family call hiredis first format command accord redis protocol format command put output buff context output buff dynamic hold number command command put output buff redisgetreply call function follow execution path input buff non empty try parse single reply input buff return reply could parse continue input buff empty write entire output buff socket read socket single reply could parse function redisgetreply export part hiredis api reply expect socket pipeline command thing need fill output buff command identical rediscommand family apart return reply call either function time redisgetreply receive subsequent reply return value function either redis_ok redis_err latter mean error occur read reply command err field context find error follow show simple pipeline single call write single call read api also implement block subscriber error function call successful depend function either null redis_err return err field inside context non set follow constant redis_err_io error create connection try write socket read socket include errno application global errno variable find wrong redis_err_eof server close connection empty read redis_err_protocol error parse protocol redis_err_other error currently specify hostname connect resolve every case errstr field context set hold string representation error asynchronous api hiredis come asynchronous api work easily event library bundle show hiredis connect function redisasyncconnect establish non block connection redis return pointer newly create redisasynccontext struct err field check creation see error create connection connection create non block kernel able instantly return specify host port able accept connection note redisasynccontext thread safe asynchronous context hold disconnect callback function call connection disconnect either error per user request function follow prototype disconnect status argument set redis_ok disconnection initiate user redis_err disconnection cause error redis_err err field context access find error context object always free disconnect callback fire reconnect need disconnect callback good point set disconnect callback per context subsequent call return redis_err function set disconnect callback follow prototype may pas user callback redisconnectcallback send command callback asynchronous context command automatically pipelined due nature event loop therefore unlike synchronous api single way send command command send redis asynchronously issue command require callback function call reply receive reply callback follow prototype privdata argument curry arbitrary callback point command initially queue execution function issue command asynchronous context function work like block counterpart return value redis_ok command successfully add output buff redis_err otherwise connection disconnect per user request new command may add output buff redis_err return call redisasynccommand family reply command null callback read immediately free callback command non null memory free immediately follow callback reply valid duration callback pending callback call null reply context encounter error disconnect asynchronous connection terminate function call connection immediately terminate instead new command long accept connection terminate pending command write socket respective reply read respective callback execute disconnection callback execute redis_ok status context object free hook event library hook need set context object create see adapter directory bind libev libevent reply parse api hiredis come reply parse api make easy write high level language bind reply parse api consist follow function set function internally hiredis create normal redis context api expose user direct usage usage function redisreadercreate create redisreader structure hold buff unparsed state protocol parser incoming likely socket place internal buff redisreader redisreaderfeed function make copy buff point buf len byte parse redisreadergetreply call function return integer status reply object describe via void reply return status either redis_ok redis_err latter mean something wrong either protocol error memory error parser limit level nest multi bulk payload multi bulk nest level high parser return error customize reply function redisreadergetreply create redisreply make function argument reply point create redisreply variable instance response type redis_reply_status str field redisreply hold status vanilla string however function responsible create instance redisreply customize set field redisreader struct immediately create redisreader customize reply object function create ruby object reader max buff reader api directly indirectly via normal redis context redisreader structure buff order accumulate server usually buff destroy empty large kib order avoid waste memory unused buff however work big payload destroy buff may slow performance considerably possible modify max size idle buff change value maxbuf field reader structure desire value special value mean maximum value idle buff buff never get free instance normal redis context set maximum idle buff unlimited order maximize performance work large payload context set back redis_reader_max_buf soon possible order prevent allocation useless memory reader max array element default hiredis reply parser set maximum number multi bulk element entry need process multi bulk reply many element set value high mean unlimited ssl support ssl support default require explicit flag make use_ssl require openssl development package include header available enable ssl support extra libhiredis_ssl libhiredis_ssl static dynamic library leave original library unaffected additional dependency introduce first need make sure include ssl header also need link libhiredis_ssl addition libhiredis add lssl lcrypto satisfy dependency hiredis implement ssl top normal rediscontext redisasynccontext need establish connection first initiate ssl handshake hiredis openssl wrapper hiredis negotiate ssl connection necessary initialize openssl create context way work directly openssl api initialize library global context create ssl_ctx ssl context ssl object call redisinitiatessl work set hiredis provide wrapper around openssl create redissslcontext object hold configuration redisinitiatesslwithcontext initiate ssl handshake resp3 push reply redis introduce push reply reply type message generate spontaneously arrive time must handle callback default behavior hiredis handler rediscontext redisasynccontext default intercept free push reply detect mean exist work upgrade redis switch resp3 custom push handler prototype callback prototype differ rediscontext redisasynccontext rediscontext redisasynccontext instal custom handler way set push handler set push_cb async_push_cb redisoptions struct connect redisconnectwithoptions redisasyncconnectwithoptions call redissetpushcallback redisasyncsetpushcallback connect context _note redissetpushcallback redisasyncsetpushcallback return currently configure handler make easy override return old value specify handler unique case want hiredis automatically intercept free push reply want configure handler way set redis_opt_no_push_autofree flag redisoptions leave callback function pointer null call redissetpushcallback null connect _note handler configure call rediscommand may generate reply strategy applicable kind block redisgetreply loop monitor subscribe workload allocator injection hiredis pas thru structure function pointer define contain currently configure allocation deallocation function default point libc malloc calloc realloc etc override override allocator like reset allocator default libc function simply call author salvatore sanfilippo antirez gmail pieter noordhuis pcnoordhuis gmail michael grunder michael dot grunder gmail _hiredis release bsd license
C C++;https://github.com/symisc/unqlite;unqlite transactional embed database engine github release april fix memory leak _unqlite_commit cause loss circumstance january symisc system decide revive unqlite project know corruption bug fix expect see new feature compression performance improvement etc push rely production amalgamation header available directly unqlite process software library implement self contain serverless configuration transactional nosql database engine unqlite document store database similar mongodb redis couchdb etc well standard key value store similar berkeleydb leveldb etc unqlite embed nosql key value store document store database engine unlike nosql database unqlite separate server process unqlite read write directly ordinary disk complete database multiple collection contain single disk database format cross platform freely copy database bite bite system big endian little endian architecture unqlite feature include serverless nosql database engine transactional acid database configuration single database temporary cross platform format unqlite self contain library without dependency standard key value store document store json database via jx9 support cursor linear record traversal pluggable time interchangeable storage engine support disk well memory database powerful disk storage engine support lookup thread safe full reentrant simple clean easy api support terabyte size database bsd license product amalgamation source unqlite jx9 combine single source unqlite self contain library without dependency require minimal support external library operate system make well suit embed device lack support infrastructure desktop computer also make unqlite appropriate within application need without modification wide variety computer vary configuration unqlite write ansi thread safe full reentrant compile unmodified platform include restrict embed device compiler unqlite extensively test window unix system especially linux freebsd oracle solaris mac
C C++;https://github.com/capnproto/capnproto;quick release cap proto insanely fast interchange format capability base rpc system think json except binary think protocol except fast fact benchmark cap proto infinity time fast protocol buff read
C C++;https://github.com/vhf/free-programming-books;list free resource many language license page available easy read website intro list originally clone stackoverflow list freely available program contribution karan bhangui george stocker list move github victor felder collaborative update maintenance grow become github popular star watcher commit contributor fork github repo github repo github repo github org github repo github repo free ebook administer repo profit organization devote promote creation distribution archive sustainability free ebooks free ebook foundation tax deductible contribute please read contribute doc contribute new github welcome doc howto remember abide adapt contributor covenant conduct doc code_of_conduct translation translation also available click badge see might able help github repo github repo good issue github help want github repo github repo merge github help want share share share share share resource project list book resource group genre book english program language book free program book langs english subject book free program book subject language arabic arabiya book free program book azerbaijani book free program book bengali book free program book bulgarian book free program book burmese book free program book chinese book free program book czech cestina cesky jazyk book free program book danish dansk book free program book dutch nederland book free program book estonian eesti keel book free program book finnish suomi suomen kieli book free program book french francais book free program book german deutsch book free program book greek book free program book hebrew book free program book hindi book free program book hungarian magyar magyar nyelv book free program book indonesian bahasa indonesia book free program book italian italiano book free program book japanese book free program book korean book free program book norwegian norsk book free program book persian farsi iran book free program book fa_ir polish polski jezyk polski polszczyzna book free program book portuguese brazil book free program book pt_br portuguese portugal book free program book pt_pt romanian romania limba romana roman book free program book russian book free program book serbian srpski jezik book free program book slovak slovencina book free program book spanish espanold castellano book free program book swedish svenska book free program book tamil book free program book thai book free program book turkish turkce book free program book ukrainian book free program book vietnamese tieng viet book free program book cheat sheet language free program cheatsheets free online course arabic arabiya course free course bengali course free course bulgarian course free course english course free course finnish course free course french francais course free course german deutsch course free course greek course free course hebrew course free course hindi course free course indonesian bahasa indonesia course free course italian italiano course free course japanese course free course kazakh course free course khmer course free course korean course free course malayalam course free course persian farsi iran course free course fa_ir polish polski jezyk polski polszczyzna course free course portuguese brazil course free course pt_br portuguese portugal course free course pt_pt russian course free course sinhala course free course spanish espanold castellano course free course thai course free course turkish turkce course free course ukrainian course free course vietnamese tieng viet course free course interactive program resource chinese free program interactive tutorial english free program interactive tutorial portuguese brazil free program interactive tutorial pt_br russian free program interactive tutorial problem set competitive program problem set problem set competitive program podcast screencast free podcast screencasts arabic arabiya cast free podcast screencasts czech cestina cesky jazyk cast free podcast screencasts english cast free podcast screencasts finnish suomi cast free podcast screencasts french francais cast free podcast screencasts hebrew cast free podcast screencasts indonesian bahasa indonesia cast free podcast screencasts persian farsi iran cast free podcast screencasts fa_ir polish polski jezyk polski polszczyzna cast free podcast screencasts portuguese brazil cast free podcast screencasts pt_br portuguese portugal cast free podcast screencasts pt_pt russian cast free podcast screencasts sinhala cast free podcast screencasts spanish espanold castellano cast free podcast screencasts swedish svenska cast free podcast screencasts turkish turkce cast free podcast screencasts program playground write compile within browser try chinese free program playground english free program playground translation volunteer translate many contribute conduct document language cover list english conduct doc code_of_conduct contribute doc contribute doc howto language doc readme translation might notice miss translation doc readme translation perhaps would like help contribute translation doc contribute help contribute translation license include repository license license license
C C++;https://github.com/skypjack/uvw;uvw libuv wrapper modern gitter question require open issue join gitter uvw want say thank support project please consider become help make difference many support still support today introduction uvw start header event base tiny easy wrapper write modern finally available also compilable static library basic idea hide completely ish interface libuv behind graceful api currently uv_ structure actually expose library note uvw stay true api libuv add anything interface reason user library must follow rule libuv handle initialize operation close long motivation main reason uvw write fact exist valid libuv wrapper instruction requirement able uvw user must provide follow system wide tool full feature compiler support least libuv version depend tag uvw requirement mandatory compile test extract documentation cmake version late doxygen version late note libuv part dependency project may clone cmake case see detail user test uvw library compile cmake library uvw dual mode library header form compile static library follow section describe case get uvw runningin project header uvw header library need include uvw hpp header uvw hpp matter add follow line top pas proper argument compiler add src directory include path note user require correctly setup include directory library search path libuv case cmake uvw uvw target export convenience static uvw compile library set build_uvw_libs option cmake include project option trigger generation target name uvw uvw static match version libuv also compile export static convenience case want cmake still compile cpp include get job case user require correctly setup include directory library search path libuv versioning start tag _v1 libuv uvw follow semantic scheme problem version uvw also require track explicitly version libuv bind latter wil append version uvw w_libuv particular follow apply major minor patch version uvw version libuv refer patch version valid term tag look like 0_libuv branch master uvw work progress branch follow branch _v1 libuv least long remain _master_ branch documentation documentation base cmake make doc api reference create html format within directory doc html navigate favorite browser your_favorite_browser doc html index html version also available late release last stable tag look something please eye consider read nice look version available documentation much pleasant read note documentation mostly inspire official libuv api obvious reason test compile test uvw require libuv googletest cmake compile library compile anything else test cmake dbuild_testing make ctest uvw omit uvw also want test libuv dependency crash course vademecum rule uvw always initialize resource terminate resource belong mainly family _handles_ _requests_ handle represent long live object capable perform certain operation active request represent typically short live operation perform either handle standalone follow section explain short mean initialize terminate kind resource detail please refer online handle initialization usually perform hood even pas far handle create loop resource member function side handle keep alive explicitly close memory usage grow user simply forget handle therefore rule quickly become always close handle simple call close member function request usually initialize request object require anyway recommend way create request still loop resource member function request keep alive long bind unfinished underlie activity mean user discard request explicitly therefore rule quickly become feel free make request forget simple call member function loop resource first thing uvw create loop case default enough easy note loop object require close explicitly even offer close member function case user want loop start member function call equivalent available mode default nowait please refer documentation libuv detail order create resource bind give loop follow line create initialize tcp handle share pointer resource return user check pointer correctly initialize case error another way create resource pretty annoy indeed loop recommend approach resource also accept arbitrary user touch case user set get member function follow resource expect std shared_pointer return therefore kind welcome user explicitly specify type void call member function remember previous section handle keep alive invoke close member function know handle still alive bind give loop exist walk member function return handle type therefore overload recommend able intercept type interest function also completely generic approach pending handle close easily follow need keep track event base approach uvw offer event base approach resource small event emitter listener attach attach listener resource recommend way notify change listener must callable object type void eventtype resourcetype eventtype type event design resourcetype type resource originate event mean follow function type valid void eventtype resourcetype void const eventtype resourcetype void eventtype const resourcetype void const eventtype const resourcetype please note need keep around reference resource pas argument whenever event publish exist method attach listener resource resource listener listener automatically remove first event give type resource listener long listener return object type resourcetype connection tcphandle connection connection object late argument erase member function resource remove listener exist also clear member function drop listener note clear invoke non active handle handle exploit event mechanism make available user satisfy pending request invoke clear active handle request still progress risk lead memory leak unexpected behavior almost resource emit errorevent case error event specific give resource document api reference show create simple tcp server uvw note also uvw tcphandle already support _ipv6_ box statement equivalent tcp bind sufficient explicitly specify uvw ipv6 underlie protocol api reference recommend documentation detail resource method raw case user need functionality wrap yet uvw want get underlie structure define libuv reason almost class uvw give direct access please note function directly unless user know exactly risk raw dangerous mainly lifetime management loop handle request completely control library work around could quickly break thing say _going raw_ matter raw member function raw way risk expect support case bug contributor want contribute please send patch pull request branch master check contributor see partecipated far license documentation copyright michele caini logo copyright richard caseres documentation release mit logo release support want support project offer espresso find enough feel free help way prefer
C C++;https://github.com/gracicot/kangaru;kangaru bch codacy language grade cii best join chat github github github try kangaru inversion control container late provide many feature automate dependency injection reduce amount wire boilerplate achieve expose configuration autowiring constructor function parameter injection aim keep simple interface possible keep boilerplate minimum top want intrusive user library kangaru header library extensive template name kangaru come container feature inject service dependency kangaroo awesome documentation wiki doc folder look late stable version check release overview quick demo show usage library basic usage library user class try see autowire api since recent version kangaru support autowire api follow autowire feature non intrusive exist class need modification tell container construct type store inject injection setter autowiring class constructor function parameter injection clean simple api simple case flexible enough complex case low runtime overhead header library clean diagnostics compile time installation kangaru make kangaru available machine must clone repository create directory cmake generate makefile export package information link project cmake already include optionally also kangaru system vcpkg make kangaru available machine appropriate architecture default enter follow want bite window enter add include path must find_package function add include dirs target include library follow skip installation simply tell cmake find kangaru compiler requirement kangaru test continuous integration major compiler version minimum require version msvc update good gcc good clang good appleclang good next feature would like see become real list feel free contribute test compile time error good message compile time error ongoing service source detail even good performance ongoing expose overhead interface case apply move service definition service map get suggestion question discover bug please open issue gladly respond contribute contribute simply open pull request issue discus together make library even awesome see complete contribution detail want help pick issue issue find issue idea make library good please submit respond within day commit address need test test enable cmake option dkangaru_test enable make cmake script try find catch2 library also contain submodule library git repository case available prefix directory option add test target enable test specifically design arount feature dkangaru_test_cxx14 dkangaru_test_cxx17 option kangaru list project make kangaru team game engine people help integrate library project surely kangaru let know project kangaru glad fill list project name acknowledgement big thank louis alexandre review propose various improvement documentation
C C++;https://github.com/CppCon/CppCon2019;cppcon presentation material canonical location presentation cppcon speaker submit material submit index material presentation algorithmic journey concept presentation 6_algorithmic_journeys_with_concepts 6_algorithmic_journeys_with_concepts__taras_shevchenko__cppcon_2019 pdf tara shevchenko approach physical unit presentation a_cpp_approach_to_physical_units a_cpp_approach_to_physical_units__mateusz_pusz__cppcon_2019 pdf mateusz pusz series unfortunate bug presentation a_series_of_unfortunate_bugs a_series_of_unfortunate_bugs__satabdi_das__cppcon_2019 pdf satabdi short life span regular mess presentation a_short_life_span_for_a_regular_mess a_short_life_span_for_a_regular_mess__victor_ciura__cppcon_2019 pdf victor ciura unify abstraction async presentation a_unifying_abstraction_for_async_in_cpp a_unifying_abstraction_for_async_in_cpp__eric_niebler_david_s_hollman__cppcon_2019 pdf eric niebler david hollman abseil open source hashtable year presentation abseils_open_source_hashtable_2_years_in abseils_open_source_hashtable_2_years_in__matthew_kulukundis__cppcon_2019 pdf matthew kulukundis compiler tool presentation abusing_compiler_tools abusing_compiler_tools__reka_kovacs__cppcon_2019 pdf reka kovacs address sanitizers cloud microsoft presentation address_sanitizers__cloud_at_microsoft address_sanitizers__cloud_at_microsoft__jim_radigan__cppcon_2019 pptx jim radigan overview standard range presentation an_overview_of_standard_ranges an_overview_of_standard_ranges__tristan_brindle__cppcon_2019 pdf tristan brindle macro free yet presentation are_we_macrofree_yet are_we_macrofree_yet__zhihao_yuan__cppcon_2019 pdf zhihao yuan pptx presentation are_we_macrofree_yet are_we_macrofree_yet__zhihao_yuan__cppcon_2019 pptx pdf presentation are_we_macrofree_yet are_we_macrofree_yet__zhihao_yuan__cppcon_2019 pdf material presentation are_we_macrofree_yet asynchronous program modern presentation asynchronous_programming_in_modern_cpp asynchronous_programming_in_modern_cpp__hartmut_kaiser__cppcon_2019 pdf hartmut kaiser atomics lock task presentation atomics_locks_and_tasks rainer grimm avoid misuse contract presentation avoid_misuse_of_contracts avoid_misuse_of_contracts__rostislav_khlebnikov__cppcon_2019 pdf rostislav khlebnikov back basic atomics lock task presentation back_to_basics_atomics_locks_and_tasks back_to_basics_atomics_locks_and_tasks__rainer_grimm__cppcon_2019 pdf rainer grimm material presentation back_to_basics_atomics_locks_and_tasks back basic lambda scratch presentation back_to_basics_lambdas_from_scratch back_to_basics_lambdas_from_scratch__arthur_odwyer__cppcon_2019 pdf arthur dwyer back basic move semantics part presentation back_to_basics_move_semantics_part_1 back_to_basics_move_semantics_part_1__klaus_iglberger__cppcon_2019 pdf klaus iglberger back basic move semantics part presentation back_to_basics_move_semantics_part_2 back_to_basics_move_semantics_part_2__klaus_iglberger__cppcon_2019 pdf klaus iglberger back basic oop presentation back_to_basics_oop back_to_basics_oop__jon_kalb__cppcon_2019 pdf jon kalb back basic raii rule presentation back_to_basics_raii_and_the_rule_of_zero back_to_basics_raii_and_the_rule_of_zero__arthur_odwyer__cppcon_2019 pdf arthur dwyer back basic smart pointer presentation back_to_basics_smart_pointers back_to_basics_smart_pointers__arthur_odwyer__cppcon_2019 pdf arthur dwyer back basic test drive development presentation back_to_basics_testdriven_development back_to_basics_testdriven_development__fedor_pikus__cppcon_2019 pdf fedor pikus back basic best part presentation back_to_basics_the_best_parts_of_cpp back_to_basics_the_best_parts_of_cpp__jason_turner__cppcon_2019 pdf jason turner back basic type erasure presentation back_to_basics_type_erasure back_to_basics_type_erasure__arthur_odwyer__cppcon_2019 pdf arthur dwyer back basic virtual dispatch alternative presentation back_to_basics_virtual_dispatch_and_its_alternatives back_to_basics_virtual_dispatch_and_its_alternatives__inbal_levi__cppcon_2019 pdf inbal levi behind scene system presentation behind_the_scenes_of_a_cpp_build_system behind_the_scenes_of_a_cpp_build_system__jussi_pakkanen__cppcon_2019 pdf jussi pakkanen catch baseline unicode plan presentation catching__the_baseline_unicode_plan_for_cpp23 catching__the_baseline_unicode_plan_for_cpp23__jeanheyd_meneide__cppcon_2019 pdf jeanheyd meneide clang base refactoring presentation clang_based_refactoring clang_based_refactoring__fred_tingaud__cppcon_2019 pdf fred tingaud compiler explorer behind scene presentation compiler_explorer_behind_the_scenes compiler_explorer_behind_the_scenes__matt_godbolt__cppcon_2019 pdf matt godbolt readme presentation compiler_explorer_behind_the_scenes readme material presentation compiler_explorer_behind_the_scenes concept revolution evolution presentation concepts_in_cpp20_revolution_or_evolution concepts_in_cpp20_revolution_or_evolution__rainer_grimm__cppcon_2019 pdf rainer grimm concurrency beyond presentation concurrency_in_cpp20_and_beyond concurrency_in_cpp20_and_beyond__anthony_williams__cppcon_2019 pdf anthony williams standard library beyond range presentation cpp20_standard_library_beyond_ranges cpp20_standard_library_beyond_ranges__jeff_garland__cppcon_2019 pdf jeff garland presentation cpp20_whats_in_it_for_you cpp20_whats_in_it_for_you__marc_gregoire__cppcon_2019 pptx marc gregoire first language really presentation cpp_as_a_first_language_really cpp_as_a_first_language_really__patrice_roy__cppcon_2019 pdf patrice roy presentation cpp_at_40 cpp_at_40__bjarne_stroustrup__cppcon_2019 pdf bjarne stroustrup class nature canonical form presentation cpp_class_natures_in_their_canonical_form cpp_class_natures_in_their_canonical_form__peter_sommerlad__cppcon_2019 pdf peter sommerlad smell presentation cpp_code_smells cpp_code_smells__jason_turner__cppcon_2019 pdf jason turner easy elegant powerful presentation cpp_easy_elegant_powerful cpp_easy_elegant_powerful__charles_bay__cppcon_2019 pdf charles bay standard library little thing presentation cpp_standard_library_little_things cpp_standard_library_little_things__billy_oneal__cppcon_2019 pdf billy neal deep cmake library author presentation deep_cmake_for_library_authors deep_cmake_for_library_authors__craig_scott__cppcon_2019 pdf craig scott fragment make exception rtti affordable usable presentation defragmenting_cpp_making_exceptions_and_rtti_more_affordable_and_usable defragmenting_cpp_making_exceptions_and_rtti_more_affordable_and_usable__herb_sutter__cppcon_2019 pdf herb sutter design pattern presentation design_patterns design_patterns__fedor_pikus__cppcon_2019 pdf fedor pikus destructor case study presentation destructor_case_studies destructor_case_studies__pete_isensee__cppcon_2019 pdf pete isensee edsl infinity war mainstreaming symbolic computation presentation edsl_infinity_war_mainstreaming_symbolic_computation edsl_infinity_war_mainstreaming_symbolic_computation__joel_falcou_and_vincent_reverdy__cppcon_2019 pdf joel falcou vincent reverdy embrace modern technology html gui presentation embrace_modern_technology_using_html_5_for_gui_in_cpp embrace_modern_technology_using_html_5_for_gui_in_cpp__borislav_stanimirov__cppcon_2019 pdf borislav stanimirov readme presentation embrace_modern_technology_using_html_5_for_gui_in_cpp readme error handle cancel operation presentation error_handling_is_cancelling_operations error_handling_is_cancelling_operations__andrzej_krzemienski__cppcon_2019 pdf andrzej krzemienski everyday efficiency place construction presentation everyday_efficiency_inplace_construction everyday_efficiency_inplace_construction__ben_deane__cppcon_2019 pdf ben deane expression template efficient generic finance presentation expression_templatesfor_efficient_generic_finance_code expression_templatesfor_efficient_generic_finance_code__bowie_owens__cppcon_2019 pdf bowie owen fix epoch presentation fixing_cpp_with_epochs fixing_cpp_with_epochs__vittorio_romeo__cppcon_2019 pdf vittorio romeo float point charconv make 10x fast final bos presentation floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss__stephan_t_lavavej__cppcon_2019 pdf stephan lavavej pdf presentation floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss__stephan_t_lavavej__cppcon_2019 pdf pptx presentation floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss__stephan_t_lavavej__cppcon_2019 pptx material presentation floatingpoint_charconv_making_your_code_10x_faster_with_cpp17s_final_boss found user group presentation founding_and_running_cpp_user_groups founding_and_running_cpp_user_groups__jens_weller__cppcon_2019 pdf jens well algorithm generic parallel presentation from_algorithm_to_generic_parallel_code from_algorithm_to_generic_parallel_code__dietmar_kuhl__cppcon_2019 pdf dietmar kuhl material presentation from_algorithm_to_generic_parallel_code function lambda callables really work presentation from_functions_to_lambdas_how_do_cpp_callables_really_work from_functions_to_lambdas_how_do_cpp_callables_really_work__walter_e_brown__cppcon_2019 pdf walter brown stl range presentation from_stl_to_ranges from_stl_to_ranges__jeff_garland__cppcon_2019 pdf jeff garland generator coroutines brain unroll sweetness presentation generators_coroutines_and_other_brain_unrolling_sweetness generators_coroutines_and_other_brain_unrolling_sweetness__adi_shavit__cppcon_2019 pdf adi shavit get allocator way presentation getting_allocators_out_of_our_way getting_allocators_out_of_our_way__alisdair_meredith__pablo_halpern__cppcon_2019 pdf alisdair meredith pablo halpern great is_trivial presentation great_cpp_is_trivial great_cpp_is_trivial__jason_turner__cppcon_2019 pdf jason turner high performance graphicsand text render gpu presentation high_performance_graphicsand_text_rendering_on_the_gpu high_performance_graphicsand_text_rendering_on_the_gpu__barbara_geller__ansel_sermersheim__cppcon_2019 pdf barbara geller ansel sermersheim high order function modern exist technique function ref presentation higher_order_functions_in_modern_cpp_existing_techniques_and_function_ref higher_order_functions_in_modern_cpp_existing_techniques_and_function_ref__vittorio_romeo__cppcon_2019 pdf vittorio romeo win card game swar presentation how_cpp_wins_at_card_games_swar how_cpp_wins_at_card_games_swar__eduardo_madrid__cppcon_2019 pdf eduardo madrid choose right standard library container presentation how_to_choose_the_right_standard_library_container how_to_choose_the_right_standard_library_container__alan_talbot__cppcon_2019 pdf alan talbot hold presentation how_to_hold_a_t how_to_hold_a_t__cj_johnson__cppcon_2019 pdf johnson write heap memory profiler presentation how_to_write_a_heap_memory_profiler how_to_write_a_heap_memory_profiler__milian_wolff__cppcon_2019 pdf milian wolff readme presentation how_to_write_a_heap_memory_profiler readme inference big picture presentation inference_in_cpp_the_big_picture inference_in_cpp_the_big_picture__mike_spertus__cppcon_2019 pdf mike spertus infiltrate codebase presentation infiltrating_a_codebase infiltrating_a_codebase__brian_ruth__cppcon_2019 pdf brian ruth late great visual studio developer presentation latest_and_greatest_in_visual_studio_for_cpp_developers latest_and_greatest_in_visual_studio_for_cpp_developers__sy_brand_marian_luparu__cppcon_2019 pdf brand marian luparu leverage modern quantitative finance presentation leveraging_modern_cpp_in_quantitative_finance leveraging_modern_cpp_in_quantitative_finance__daniel_hanson__cppcon_2019 pdf daniel hanson lifetime analysis everyone presentation lifetime_analysis_for_everyone lifetime_analysis_for_everyone__matthias_gehre_gabor_horvath__cppcon_2019 pptx matthias gehre gabor horvath mesh automatically compact application memory presentation mesh_automatically_compacting_your_cpp_applications_memory mesh_automatically_compacting_your_cpp_applications_memory__emery_berger__cppcon_2019 pdf emery berger pptx presentation mesh_automatically_compacting_your_cpp_applications_memory mesh_automatically_compacting_your_cpp_applications_memory__emery_berger__cppcon_2019 pptx pdf presentation mesh_automatically_compacting_your_cpp_applications_memory mesh_automatically_compacting_your_cpp_applications_memory__emery_berger__cppcon_2019 pdf material presentation mesh_automatically_compacting_your_cpp_applications_memory meta presentation meta meta__andrew_sutton__cppcon_2019 pdf andrew sutton minimal structure log autonomous vehicle presentation minimal_structured_logging_for_autonomous_vehicles minimal_structured_logging_for_autonomous_vehicles__robert_keelan__cppcon_2019 pdf robert keelan modern linux debug tools_ cover presentation modern_linux_cpp_debugging_tools__under_the_covers modern_linux_cpp_debugging_tools__under_the_covers__greg_law_and_dewang_li__cppcon_2019 pdf greg law dewang mostly invalid presentation mostly_invalid mostly_invalid__arthur_odwyer__cppcon_2019 pdf arthur dwyer name hard let good presentation naming_is_hard_lets_do_better naming_is_hard_lets_do_better__kate_gregory__cppcon_2019 pdf kate gregory non conform presentation nonconforming_cpp nonconforming_cpp__miro_knejp__cppcon_2019 pdf miro knejp path trace way study style presentation path_tracing_three_ways_a_study_of_cpp_styles path_tracing_three_ways_a_study_of_cpp_styles__matt_godbolt__cppcon_2019 pdf matt godbolt readme presentation path_tracing_three_ways_a_study_of_cpp_styles readme material presentation path_tracing_three_ways_a_study_of_cpp_styles pattern match sneak peek presentation pattern_matching_a_sneak_peek pattern_matching_a_sneak_peek__michael_park__cppcon_2019 pdf michael park polymorphism virtual presentation polymorphism__virtual polymorphism__virtual__john_bandela__cppcon_2019 pdf john bandela practical module presentation practical_cpp_modules practical_cpp_modules__boris_kolpackov__cppcon_2019 pdf boris kolpackov quickly test legacy approval test presentation quickly_testing_legacy_cpp_code_with_approval_tests quickly_testing_legacy_cpp_code_with_approval_tests__clare_macrae__cppcon_2019 pdf clare macrae material presentation quickly_testing_legacy_cpp_code_with_approval_tests range algorithm view action comprehensive guide presentation range_algorithms_views_and_actions_a_comprehensive_guide range_algorithms_views_and_actions_a_comprehensive_guide__dvir_yitzchaki__cppcon_2019 pdf dvir yitzchaki reflection presentation reflection reflections__andrew_sutton__cppcon_2019 pdf andrew sutton release toolchains weekly live head world presentation releasing_cpp_toolchains_weekly_in_a_live_at_head_world releasing_cpp_toolchains_weekly_in_a_live_at_head_world__jorge_gorbe_moya_jordan_rupprecht__cppcon_2019 pdf jorge gorbe moya jordan rupprecht rethink way template presentation rethinking_the_way_we_do_templates_in_cpp rethinking_the_way_we_do_templates_in_cpp__mateusz_pusz__cppcon_2019 pdf mateusz pusz solve hard problem quickly sit solver presentation solve_hard_problems_quickly_using_sat_solvers solve_hard_problems_quickly_using_sat_solvers__martin_ho 99e 88ovsk bd__cppcon_2019 pdf martin horenovsky program myth revisit presentation some_programming_myths_revisited some_programming_myths_revisited__patrice_roy__cppcon_2019 pdf patrice roy speed find mind people presentation speed_is_found_in_the_minds_of_people speed_is_found_in_the_minds_of_people__andrei_alexandrescu__cppcon_2019 pdf andrei alexandrescu business value good api presentation the_business_value_of_a_good_api the_business_value_of_a_good_api__bob_steagall__cppcon_2019 pdf bob steagall design runtime aws lambda presentation the_design_of_the_cpp_runtime_for_aws_lambda the_design_of_the_cpp_runtime_for_aws_lambda__marco_magdy__cppcon_2019 pdf marco magdy readme presentation the_design_of_the_cpp_runtime_for_aws_lambda readme practice pattern real world problem presentation the_networking_ts_in_practice_patterns_for_real_world_problems the_networking_ts_in_practice_patterns_for_real_world_problems__robert_leahy__cppcon_2019 pdf robert leahy material presentation the_networking_ts_in_practice_patterns_for_real_world_problems smart pointer wish presentation the_smart_pointers_i_wish_i_had the_smart_pointers_i_wish_i_had__matthew_fleming__cppcon_2019 pdf matthew fleming truth procedure presentation the_truth_of_a_procedure the_truth_of_a_procedure__lisa_lippincott__cppcon_2019 pdf lisa lippincott videogame programmer stl presentation this_videogame_programmer_used_the_stl this_videogame_programmer_used_the_stl__mathieu_ropert__cppcon_2019 pdf mathieu ropert tmi udl presentation tmi_on_udl tmi_on_udl__stephen_dewhurst__cppcon_2019 pdf stephen dewhurst unicode rabbit hole presentation unicode_going_down_the_rabbit_hole unicode_going_down_the_rabbit_hole__peter_bindels__cppcon_2019 pdf peter bindels unique_pseudofunction presentation unique_pseudofunction unique_pseudofunction__filipp_gelman__cppcon_2019 pdf filipp gelman way comparison presentation using_cpp20s_threeway_comparison_ using_cpp20s_threeway_comparison___jonathan_m bcller__cppcon_2019 pdf jonathan muller survive attack zombie pointer presentation will_your_code_survive_the_attack_of_the_zombie_pointers will_your_code_survive_the_attack_of_the_zombie_pointers__paul_e_mckenney_maged_michael_michael_wong__cppcon_2019 pdf paul mckenney maged michael michael wong lightning talk lunch session algorithm magic lightning 20talks 20and 20lunch 20sessions algorithm_magic algorithm_magic__rene_rivera__cppcon_2019 pdf rene rivera material lightning 20talks 20and 20lunch 20sessions algorithm_magic argument argument lightning 20talks 20and 20lunch 20sessions arguments_over_argument arguments_over_argument__adi_shavit__cppcon_2019 pdf adi shavit catch new trick lightning 20talks 20and 20lunch 20sessions catching_new_tricks catching_new_tricks__martin_ho 99e 88ovsk bd__cppcon_2019 pdf martin horenovsky sample actually compile lightning 20talks 20and 20lunch 20sessions code_samples_that_actually_compile code_samples_that_actually_compile__clare_macrae__cppcon_2019 pdf clare macrae detect program rely undefined behavior lightning 20talks 20and 20lunch 20sessions detecting_programs_that_rely_on_undefined_behavior detecting_programs_that_rely_on_undefined_behavior__geoffrey_l_viola__cppcon_2019 pdf geoffrey viola highlight hard lightning 20talks 20and 20lunch 20sessions highlighting_cpp_with_cpp_is_hard highlighting_cpp_with_cpp_is_hard__marcin_zdun__cppcon_2019 pdf marcin zdun spy little eye lightning 20talks 20and 20lunch 20sessions i_spy_with_my_little_eye i_spy_with_my_little_eye__joel_falcou__cppcon_2019 pdf joel falcou leave input unsanitized lightning 20talks 20and 20lunch 20sessions leaving_no_input_unsanitized leaving_no_input_unsanitized__gabriel_aubutlussier__cppcon_2019 pdf gabriel aubut lussier let cmakeify standard library lightning 20talks 20and 20lunch 20sessions lets_cmakeify_the_cpp_standard_library lets_cmakeify_the_cpp_standard_library__jussi_pakkanen__cppcon_2019 pdf jussi pakkanen postmodern meta lightning 20talks 20and 20lunch 20sessions postmodern_meta_cpp postmodern_meta_cpp__kris_jusiak__cppcon_2019 pdf kris jusiak universe type lightning 20talks 20and 20lunch 20sessions the_universe_of_cpp_types the_universe_of_cpp_types__walter_e_brown__cppcon_2019 pdf walter brown uint32_t lightning 20talks 20and 20lunch 20sessions vuint32_t vuint32_t__matthis_kruse__cppcon_2019 pdf matthis kruse name lambda lightning 20talks 20and 20lunch 20sessions why_are_they_named_lambdas why_are_they_named_lambdas__walter_e_brown__cppcon_2019 pdf walter brown poster study integer sum reduction sycl poster a_study_of_integer_sum_reduction_using_sycl a_study_of_integer_sum_reduction_using_sycl__zheming_jin_hal_finkel__cppcon_2019 pdf zheming jin hal finkel analysis template match compare concurrency cuda opencv poster analysis_of_template_matching_by_comparing_cpp_concurrency_with_cuda_and_opencv analysis_of_template_matching_by_comparing_cpp_concurrency_with_cuda_and_opencv__aditya_immaneni_victor_r_cabrera_vadim_pinskiy_matthew_c_putman__cppcon_2019 pdf aditya immaneni victor cabrera vadim pinskiy matthew putman embrace modern hpc brain scale simulation poster embracing_modern_cpp_in_hpc_for_brain_scale_simulations embracing_modern_cpp_in_hpc_for_brain_scale_simulations__o_awile_t_carel__cppcon_2019 pdf awile carel empirical poster empirical empirical__matthew_andres_moreno_charles_ofria__cppcon_2019 pdf matthew andres moreno charles ofria fix precision adder poster fixed_precision_adder fixed_precision_adder__elmar_westphal__cppcon_2019 pdf elmar westphal flexit another json parser poster flexit_not_just_another_json_parser flexit_not_just_another_json_parser__nipun_jindal_pranay_kumar__cppcon_2019 pdf nipun jindal pranay kumar high level synthesis slx fpga poster highlevel_synthesis_with_slx_fpga highlevel_synthesis_with_slx_fpga__matthias_gehre__cppcon_2019 pdf matthias gehre snap augment reality platform poster how_snap_uses_cpp_to_build_the_mostused_augmented_reality_platform how_snap_uses_cpp_to_build_the_mostused_augmented_reality_platform__evgenii_zaikin_fedir_poliakov_yurii_monastyrshyn__cppcon_2019 pdf evgenii zaikin fedir poliakov yurii monastyrshyn meet beetroot poster meet_beetroot meet_beetroot__adam_ryczkowski__cppcon_2019 pdf adam ryczkowski material poster meet_beetroot yet another fast log poster yet_another_fast_log yet_another_fast_log__ran_regev__cppcon_2019 pdf regev
C C++;https://github.com/the-tcpdump-group/libpcap;libpcap tcpdump report security issue please send mail security tcpdump org report bug problem contribute patch request feature provide generic feedback etc please see guideline contribute contribute documentation directory doc readme specific operate system option anonymous git available via directory contain source libpcap system independent interface user level packet capture libpcap provide portable framework low level monitor application include statistic collection security monitor debug etc since almost every system vendor provide different interface packet capture since develop several tool require functionality create system independent api ease port alleviate need several system dependent packet capture module application support particular platform bpf platform readme system discus issue interface packet capture platform enable support interface default libpcap interface support filter mechanism base architecture bsd packet filter bpf describe winter usenix bsd packet filter new architecture user level packet capture compress gzipped although packet capture interface support kernel filter libpcap utilize kernel filter bpf interface system bpf packet read user space bpf filter evaluate libpcap library incur add overhead especially selective filter ideally libpcap would translate bpf filter filter program compatible underlie kernel subsystem yet implement bpf standard 4bsd bsd netbsd freebsd openbsd dragonfly bsd macos solaris old modify undocumented version standard aix dec osf digital unix tru64 unix packetfilter interface extend accept bpf filter libpcap utilize also add bpf filter support ultrix kernel source object patch available linux number bpf base system libpcap support ebpf mechanism yet although support many memory map receive mechanism see linux specific readme doc readme linux information note linux distribution bsd system include libpcap rule make share library work linux bsd among platform set soname library libpcap libpcap libpcap something maintain binary compatibility libpcap release quite reason tie binary link libpcap particular release libpcap
C C++;https://github.com/orlp/pdqsort;pdqsort pattern defeat quicksort pdqsort novel sort algorithm combine fast average case randomize quicksort fast bad case heapsort achieve linear time input certain pattern pdqsort extension improvement david mussers introsort available free zlib license best average bad memory stable deterministic log log log yes usage pdqsort drop replacement replace call std sort pdqsort start pattern defeat quicksort comparison function branchless call pdqsort_branchless potential big speedup type sort arithmetic comparison function give std std great pdqsort automatically delegate pdqsort_branchless benchmark comparison pdqsort gcc std sort std stable_sort various input distribution performance compile std m64 march native visualization visualization pattern defeat quicksort sort element array duplicate generate timo bingmann sound program tool invaluable development pdqsort purpose visualization cutoff point insertion sort low element best case pdqsort design linear time couple best case pattern linear time achieve input strictly ascend descend order contain equal element strictly ascend order follow place element separate mechanism play achieve equal element smart partition scheme always put equal element partition contain element great pivot new pivot choose compare great element partition compare equal derive element small choose pivot happen switch strategy partition filter element equal pivot get linear time pattern check every partition swap make swap make partition decently balance optimistically attempt insertion sort insertion sort abort constant amount move require sort average case average case pattern detect pdqsort effectively quicksort median pivot selection switch insertion sort number element recursively sort small overhead associate detect pattern best case small lie within error measurement pdqsort get great speedup traditional way implement quicksort sort large array element due new technique describe blockquicksort branch mispredictions affect quicksort stefan edelkamp armin wei short bypass branch predictor small buff entirely cache index element need swap fill buff branch free way quite elegant pseudocode speedup comparison function branchless however default pdqsort detect high type sort arithmetic int either std std great explicitly request branchless partition call pdqsort_branchless instead pdqsort bad case quicksort naturally perform bad input form pattern due partition base sort choose bad pivot many comparison give little progress sort process pattern get break happen many time row bad real world fill pattern traditionally solution randomize pivot selection quicksort technically still allow quadratic bad case chance happen astronomically small late introsort pivot selection keep deterministic instead switch guarantee log heapsort recursion depth become big pdqsort adopt hybrid approach deterministically shuffle element break pattern encounter bad partition encounter many bad partition switch heapsort bad partition bad partition occur position pivot partition 8th percentile percentile partition highly unbalance happen shuffle element fix location partition effectively break many pattern encounter log bad partition switch heapsort 8th percentile choose arbitrarily upper bind quicksorts bad case runtime approximate within constant factor follow recurrence number element percentile pivot partition best case quicksort modern system heapsort profile approximately time slow quicksort choose get big ensure switch heapsort would speed sort reasonably close value cheap compute every platform bitshift
C C++;https://github.com/real-logic/simple-binary-encoding;simple binary encode sbe action total quality osi layer presentation encode decode binary application message low latency financial application repository contain reference java golang rust detail design usage sbe find xsd sbe spec find please address question specification sbe fix late version information change see change maven java sbe work efficiently message system low latency high throughput communication java sbe dependency buff commercial support available sale real logic mailto sale real logic subject sbe binary binary dependency information maven ivy gradle others find maven project full clean gradlew java gradlew runjavaexamples distribution jar executable source javadoc various module find follow directory sbe benchmark libs sbe sample libs sbe tool libs sbe libs execute jar command line jar include agrona dependency java dsbe generate true dsbe target language cpp dsbe target namespace sbe dsbe output dir include gen dsbe errorlog yes jar sbe libs sbe sbe_tool_version jar sbe message xml cmake note linux mac window moment see window test visual studio express convenience cppbuild script full clean test target release cppbuild cppbuild comfortable cmake full clean test look like mkdir cppbuild debug cppbuild debug cmake cmake clean first ctest __note__ include generator currently generator work progress golang first gradle generate sbe jar generate golang test gradlew gradlew generategolangcodecs convenience linux gnu makefile provide test contain gocode make test bench user golang generate see user developer wish enhance golang generator see developer user csharp generate see user developer wish enhance csharp generator see developer rust sbe rust generator produce safe rust crate unsafe generate generate crate dependency library include sbe library yet rust instal see rust get generate rust codecs gradlew generaterustcodecs rust test gradle gradlew runrusttests test directly cargo rust cargo test license see license full license copyright real logic limit copyright marketfactory inc license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license
C C++;https://github.com/ivansafrin/Polycode;polycode cross platform framework creative api standalone script language get easy simple access accelerate graphic hardware shaders sound program physic engine core polycode api write create portable native application top core api polycode offer lua base script system set compilation tool lua api mirror api easily create prototype even publish complete application multiple platform without compile polycode available mit license design develop ivan safrin please see instruction polycode source
C C++;https://github.com/skypjack/meta;header runtime reflection system github reflection system bear within develop enrich project design interest header full feature non intrusive macro free reflection system certainly deserve treat also separately due quality rather peculiar feature meta want say thank support project please consider become help make difference many support still support today table content introduction introduction instruction instruction requirement requirement library library documentation documentation test test crash course crash course name identifier name identifier reflection nutshell reflection nutshell type type enjoy runtime enjoy runtime policy policy name constant enums name constant enums property meta object property meta object unregister type unregister type contributor contributor license license support support introduction reflection rather lack trend topic world look third party library meet need subject always come across detail like macro intrusive many allocation word unsatisfactory finally decide write non intrusive macro free runtime reflection system maybe good others maybe yes time tell instruction requirement able meta user must provide full feature compiler support least requirement mandatory compile test extract documentation cmake version late doxygen version late look version meta feel free contact library meta header library mean include factory hpp meta hpp header enough include library whole matter add follow line top pas proper argument compiler add src directory include path documentation documentation base cmake dbuild_docs make api reference create html format within directory doc html navigate favorite browser your_favorite_browser doc html index html also available late version test compile test meta require googletest cmake compile library compile anything else order without test set cmake option build_testing basic set test cmake make make test crash course name identifier meta system force user specific tool come work name identifier offer api work opaque identifier may may generate mean hash string mean user assign type identifier meta object long numeric matter generate runtime compile time custom function however follow section base std hash provide standard library therefore identifier require likely instance class follow worth likely completely equivalent obviously human readable identifier convenient highly recommend reflection nutshell reflection always start real type user reflect imaginary type would make much sense would talk reflection anymore _reflect_ type library provide reflect function accept type reflect template parameter optional identifier argument identifier important user retrieve meta type runtime search _name_ however case user interest add feature reflect type reflection system correctly hood want allow search type _name_ case return value factory object continue meta type factory member function return factory extend reflect type add follow _constructors_ actual constructor assign reflect type specify list argument free function namely factory well long return type expect client point view nothing change constructor free function actual constructor ctor member function purpose _destructors_ free function set destructors reflect type purpose give user ability free resource require special treatment object actually destroy dtor member function purpose function neither delete explicitly invoke destructor give instance _data members_ real member underlie type static global variable well constant kind attach meta type client point view variable associate reflect type appear part type member function purpose function require argument identifier give meta create user access meta runtime search _name_ member set also mean couple function namely setter getter setter getters either free function member function mix long respect require signature refer inline documentation detail _member functions_ real member function underlie type free function attach meta type client point view function associate reflect type appear part type func member function purpose function require argument identifier give meta function create user access meta function runtime search _name_ _base classes_ base class underlie type actually derive case reflection system track relationship allow implicit cast runtime require base member function purpose wherever base_type require instance derived_type also accept _conversion functions_ actual type convert fact think relationship double int see similar base conversion function allow user define conversion implicitly perform reflection system require conv member function purpose everything user need create meta type enjoy reflection system first glance may seem much user usually appreciate time also forget line hide hood non intrusive macro free system reflection feature definitely worth price least type reflection system come meta type may seem redundant since introduce std fact _type_ return std const reference std type_info define class something everyone want see software furthermore class std type_info suffer design flaw even way _convert_ std type_info meta type thus link world meta object provide api similar famous counterpart serve purpose opaque container type value minimize allocation require almost absent thank _sbo_ technique fact unless user deal _fat types_ create instance though reflection system allocation meta object create object empty container initialize late take burden destroy contain instance require moreover opaque container unmanaged object need word whenever intercept reference_wrapper act reference original instance rather make copy contain object never destroy user must ensure lifetime exceed container meta object type member function return meta type contain value member function try_cast cast convert know underlie object give type base convert implicitly enjoy runtime web reflect type construct matter runtime require search reflect type option type _name_ case search mean resolve function exit also third overload resolve function iterate reflect type case return value instance type type object offer api know _runtime identifier_ type iterate meta object associate even destroy instance underlie type refer inline documentation detail meta object compose meta type access follow way _meta constructors_ access type argument return type ctor may invalid constructor accept supply argument least type derive convert meta constructor offer api know number argument expect meta type invoke therefore construct new instance underlie type _meta destructor_ return dedicate function return type dtor may invalid custom destructor set give meta type meta destructor offer way invoke give instance aware may expect _meta data_ access _name_ return type may invalid meta object associate give identifier meta object offer api query underlie type know const static get meta type variable set get contain value _meta functions_ access _name_ return type func may invalid meta function object associate give identifier meta function object offer api query underlie type know const static function know number argument meta return type meta type parameter addition meta function object invoke underlie function get return value form meta object _meta bases_ access _name_ base type return type base may invalid meta base object associate give identifier meta base mean directly even though freely accessible expose method know meta type base class convert raw pointer type _meta conversion functions_ access type return type conv may invalid meta conversion function associate give type meta conversion function thin meta base similar interface sole difference return newly create instance wrap meta object convert different type object thus obtain well meta type explicitly convert boolean value check valid furthermore meta object exception meta destructors iterate overload accept callback return meta type also construct destroy actual instance underlie type particular construct member function accept variable number argument search match return object may may initialize depend whether suitable constructor find side destroy member function accept instance well actual object reference invoke register destructor aware call destroy may expect purpose give user ability free resource require special treatment actually destroy instance meta type meta object general contain much say plethora function addition list whose purpose unfortunately beyond scope document invite anyone interest subject look experiment read official documentation get best powerful tool policy policy kind compile time directive record reflection information purpose require slightly different behavior default specific case read give member value return wrap object default make copy large object caller want access original instance behavior desirable policy offer solution problem alternative available moment _as is_ policy associate type meta as_is_t default policy general never explicitly since implicitly select policy specify case return value function well property expose member always return copy dedicate wrapper therefore associate original meta type _as void_ policy associate type meta as_void_t purpose discard return value meta object whatever thus make appear type void function obvious must say also possible policy constructor member first case constructor invoke return wrapper actually empty second case instead property accessible read _as alias_ policy associate type meta as_alias_t allow wrapper act alias object initialize modify object contain wrapper _aliasing_ request make possible directly modify instance initialize wrapper policy work constructor object take external container rather create demand member function general long return type lvalue reference rather trivial useful note obvious corner case turn solve policy name constant enums special mention make constant value enums would necessary help distract reader mention member function reflect constant type among thing allow user create meta type enums work exactly like meta type class similarly arithmetic type enrich constant special mean require personally find useful export difference enums class directly space reflect type value thus export appear user constant member reflect type export constant value element enum simple ever without say access trivial well matter follow member meta type side note remember happen behind scene without allocation small object optimization perform meta class property meta object sometimes come create editor might useful able attach property meta object create fortunately possible attach property meta object matter long support property sufficient provide object time construction std get std get valid term property nothing key value pair user put std pair meta object support property offer couple member function name prop iterate search specific property key meta property object fairly poor interface provide key value member function retrieve key value contain form meta object respectively unregister type type register reflection system also unregistered mean unregistering member member function conversion function however base class unregistered since necessarily depend similarly implicitly generate type meta type implicitly generate function parameter need unregistered unregister type user unregister function global namespace function return boolean value true type actually register reflection system false otherwise type register late completely different name form contributor request feature suggestion feedback highly appreciate find help want contribute project experience want get part project reason feel free contact directly find mail promise every contribution accept assure best take seriously decide participate please see guideline contribute doc contribute create issue pull request take also look contributor know participate far license documentation copyright michele caini release mit documentation release support want support project offer espresso find enough feel free help way prefer
C C++;https://github.com/SqliteModernCpp/sqlite_modern_cpp;sqlite modern cpp wrapper library lightweight modern wrapper around sqlite api execute multiple statement separate semicolon additional flag pas additional open flag sqlite config object prepare statement possible retain reuse statments keep query plan case complex query many might increase performance significantly share connection need handle database connection execute sqlite3 command directly get manage shared_ptr close long referenc take deal database backup sqlites function safe modern way transaction transaction begin commit rollback command blob std vector store retrieve blob could char short int long long long float double null value database row may null std unique_ptr retain null value variable database sqlcipher native support want encrypt database include sqlite_moder_cpp sqlcipher header create sqlcipher_database instead null value std optional alternative std unique_ptr work null value support boost optional instead define _modern_sqlite_boost_optional_support import sqlite_modern_cpp header optional library available experimental optional instead note boost support deprecate remove future version variant type support column may flexible type std variant extract value read specific type type match actual type sqlite database yor convert happen variant variant alternative value type mismatch exception throw value type null integer real number text blob support possible value variant error error library throw error class indicate type error error class derive sqlite3 error name error sqlite_constraint error class throw sqlite error constraint sqlite3 extend error name support class sqlite error constraint_primarykey derive sqlite error constraint note error derive sqlite sqlite_exception derive std runtime_exception sqlite sqlite_exception get_code member function get sqlite3 error get_extended_code get extend error additionally get_sql see sql statement lead error also register error log function sqlite error_log header include make function available call sqlite error_log first call sqlite_modern_cpp function program custom sql function extend sqlite custom function implement ndk support make sure full path database sqlite database com package dbfile instal usual way work instal note nothing make need configure simply point compiler hdr directory break change see break change document package manager pull request welcome wink arch linux maintainer nissar nuget todo conan todo license mit license
C C++;https://github.com/MaximAbramchuck/awesome-interviews;environment variable place stop struggle scatter api key hack together home brew tool avoid access control keep team server sync doppler awesome interview curated list list technical interview question make awesome list awesome please read contribution guideline contribute create list guide create list want contribute table content program language framework platform program languagesframeworksplatforms android android angularjs angularjs angular angular backbonejs backbonejs net net clojure clojure cucumber cucumber django django docker docker elastic elastic emberjs emberjs erlang erlang golang golang graphql graphql html html ionic ionic java java javascript javascript jquery jquery front end tool front end tool knockoutjs knockoutjs lisp lisp nodejs nodejs objective objective php php reactjs reactjs rail ruby rail ruby ruby rust rust sas sas scala scala spark spark swift swift vue vuejs wordpress wordpress typescript typescript database technology database technology cassandra cassandra microsoft access microsoft access mongodb mongodb mysql mysql neo4j neo4j oracle oracle postgres postgres sql sql sql lite sql lite cache technology cache technology memcached memcached redis redis linux linux window window algorithm algorithm blockchain blockchain cod exercise cod exercise comprehensive list comprehensive list design pattern design pattern structure structure security security science science program language framework platform android android interview question answer essential android interview question essential android interview question couple android question post quora great list android interview question cover aspect collection android java relate question topic include general developer question java core structure tool program paradigm core android database collection android java question divide rocketskill app android interview android cheat sheet cod program structure android java interview question answer categorize android interview question answer beginner interview question senior android android interview angularjs essential angularjs interview question angularjs exam question beginner expert gdi2290 angularjs interview question answer great article angularjs interview question answer experience angularjs interview question design specially get acquaint nature question may encounter interview subject article discus top occur angularjs interview question top angularjs interview question angularjs interview question quick angular list helpful angular relate question interview potential candidate test completely angular interview list angular interview question angular interview question top angular interview question answer backbonejs essential backbonejs interview question backbonejs interview question answer web technology expert top backbone interview multiple choice question answer interview question essential interview question interview question program quiz computer science portal program question answer relate topic oops concept object class function constructor destructors inheritance leetcode problem solution write basic language technical frequently ask interview question answer include structure pointer interview question answer program interview question answer topic bit byte preprocessors function string language basic program interview question design specially get acquaint nature question may encounter interview subject first set commonly ask program interview question computer science portal second set commonly ask program interview question computer science portal essential interview question top interview question essential interview question interview question top interview question cod interview question oops interview question interview net aspnet interview question asp net core interview great list net interview question cover net platform net interview question answer beginner consist frequently ask question net list question answer gauge familiarity net question gather community great net developer ought know net interview clojure classic fizz buzz interview question clojure clojure interview question experience cod exercise clojure handy practice technical interview experience question clojure developer interview collect reddit interview cake clojure interview question answer fresh experience candidate also find online practice test fight write test certification exam development hire manager potential interviewee may find sample proficiency interview snippet interview question exercise top cascade style sheet interview question cover tricky front end interview handbook question cucumber cucumber web application bdd sample interview guide simple cucumber watir page object pattern django abstract interview question django django basic interview question establish basic level top django interview question fresh experience docker docker interview top docker interview question must prepare top docker interview question docker software interview question docker interview question answer docker interview question top docker interview question top docker interview question answer elastic top elastic stack interview emberjs essential emberjs interview question top emberjs interview question fresh experience erlang top erlang interview question fresh experience golang solution element program interview problem write solution basic cod interview task write top program interview question fresh experience graphql graphql interview question graphql common html typical html interview exercise essential html5 interview question important html interview question html interview question answer fresh experience candidate also find html online practice test fight write test certification exam top html interview question fresh experience common html interview question front end interview handbook html question html interview question html interview question ionic beginner level ionic framework essential ionic interview ionic interview ask ionic interview essential interview question developer interview question answer get ready essential interview question small guide help look hire developer designer work tailor many question could android developer designer well great self test look keep current practice need know technical interview include tip prepare question cod interview question mac developer ceo black interview question answer include topic development basic app state multitasking app state core app interview question senior interview question answer interview question answer part interview question answer part interview question answer part interview question answer part interview question developer designer interview interview question interview question babylon interview rocketskill app interview static dynamic java list java program interview java interview question answer ultimate java interview question practice essential java interview top core java interview essential java interview question collection java interview question answer structure algorithm java useful interview java interview question crack top core java interview top tricky java interview question top frequently ask interview core java interview question top core java interview question answer telephonic top spring interview question must prepare spring interview question interview cake java interview java interview question essetial java interview fundamental java interview javascript practice common algorithm interview question every javascript developer essential javascript interview question best mentor essential javascript interview question essential javascript interview question javascript interview typical javascript interview development hire manager potential interviewee may find sample javascript proficiency interview snippet essential javascript interview javascript interview question design specially get acquaint nature question may encounter interview subject basic tricky interview basic javascript cod challenge interview javascript interview question ask technical javascript front end engineer job top javascript interview interview cake javascript interview best frontend javascript interview question write frontend javascript concept need know front end interview handbook javascript question javascript interview question quick mega interview javascript interview question answer javascript modern interview challenge javascript interview jquery top jquery interview essential jquery interview question top jquery interview question front end tool webpack interview question gulp interview grunt interview question grunt interview knockoutjs interview question question might ask knockoutjs interview fresh experience top interview lisp lisp question top lisp interview question career nodejs essential node interview question essential nodejs interview question node interview question design specially get acquaint nature question may encounter interview subject node interview question top nodejs interview question answer career top node interview question top nodejs interview question node interview question node interview question objective interview objective interview question php php interview question answer essential php interview question common php job interview question essential php interview question php interview question answer top php interview question answer php interview essential php interview question crack php interview question ebook php interview question quick php interview essential interview question interview question essential interview question list question could potentially ask job interview question beginner interview cake interview frequently ask question interview question collect reddit top interview question career interview question corey interview question part interview question part interview question part iii interview question answer interview question quick top interview question edureka ruby rail ruby rail interview question answer essential ruby rail interview question high level ruby rail interview ruby ruby rail interview frequently ask ruby rail question answer ruby rail interview practice top ruby rail interview question ruby rail interview question reactjs reddit user share expectation reactjs essential react interview react interview toptal essential react interview essential reactjs interview react interview question ruby essential ruby interview question question ask ruby list question ruby program quiz art ruby technical interview cake ruby interview frequently ask ruby interview rust top rust program language interview rust program interview question rust exam set question rust program best rust program language interview question sas top sas interview question career top sas interview question scala interview question scala list frequently ask question answer sort list helpful scala relate question interview potential scala developer top scala interview question answer sharepoint sharepoint interview question top sharepoint interview question top script interview question career spark carefully curated spark question additional optimization guide first swift essential swift interview question get prepare next job interview study high quality leetcode solution swift swift interview question swift program language interview question answer top swift question swift interview question answer swift dynamic keyword vue list vuejs interview wordpress top wordpress interview essential wordpress interview typescript typescript interview top typescript interview question answer beginner web developer database technology cassandra top cassandra interview question career microsoft access top microsoft access database interview question career mongodb mongodb nosql database interview question mongodb frequently ask question expert member experience mongodb question answer help strengthen technical skill prepare new job test quickly revise mongodb interview question mongodb interview question design specially get acquaint nature question may encounter interview subject top mongodb interview question career mysql mysql database interview question beginner mysql interview basic mysql interview question database mysql interview question basic mysql interview question top mysql interview question answer career neo4j top neo4j interview question career oracle general oracle interview question postgres postgresql interview frequently ask basic postgresql interview question postgresql interview preparation postgresql interview sql frequently ask sql query interview essential sql interview question common interview question general interview question schema question solution sql sql interview question design specially get acquaint nature question may encounter interview subject sql interview question cheat sqlite top sqlite interview question career cache technology memcached memcached interview question memcached interview question redis redis interview question redis interview question redis interview question career linux job interview question linux system administrator useful random linux interview question basic linux interview question essential linux interview question top linux system admin interview question top linux interview question career test question answer nix system linux interview question quick window top interview question window top window server interview question career window admin interview question devops linux system administrator devops interview top devops interview question must prepare top devops interview question answer devops interview question algorithm comprehensive list interview question top tech great list java interview algorithm playground common interview question write ekalgorithms contain well know algorithm top algorithm cod top structure algorithm interview question java tech interview handbook best practice daily cod interview blockchain top blockchain interview question must prepare blockchain interview top blockchain interview blockchain developer interview question essential blockchain interview question top blockchain interview question fresh frequently ask blockchain interview cod exercise common interview question puzzle solve several interactive test drive cod challenge algorithm structure typically find cod interview cod interview question solve swift cod challenge practice comprehensive list list helpful front end relate question interview potential candidate test completely front end developer interview front end interview simple question interview potential backend design pattern design pattern interview question design specially get acquaint nature question may encounter interview subject design design pattern human ultra simplify design pattern implement design pattern implement structure top structure algorithm interview question java top structure interview question career structure top structure interview top interview question answer career interview security security interview prepare information security job information security interview question daniel top information security interview question fresh science science interview question top tech job interview question top science interview question must prepare top science interview top science interview science interview science interview top science interview license
C C++;https://github.com/jarikomppa/soloud;soloud soloud easy free portable audio engine game zlib libpng license portable easy official site documentation find
C C++;https://github.com/libclsph/libclsph;libclsph opencl base gpu accelerate sph fluid simulation library see action demo demo libclsph create explore possibilty power opencl speed simulation sph fluid mechanic smooth particle hydrodynamics fluid simulation technique produce realistic simulation animation cgi videogames libclsph opencl simulation export industry standard program like simulation property easily modify user get start sure visit information detail instruction get start library load simulation property serialization need import export particle load geometry format
C C++;https://github.com/ben-strasser/fast-cpp-csv-parser;fast csv parser small easy fast header library read comma separate value csv feature automatically rearrange column parse header line disk csv parse overlap thread efficiency parse feature escape string enable disable compile time template pay speed feature actually read multiple reasonable time support custom column separator tab separate value support quote escape string automatic space trim work nix window newlines automatically ignore utf boms exception class enough context format useful error message return error message ready show user get start follow small contain syntax need library installation library need standard conformant compiler dependency library completely contain inside single header therefore sufficient copy place include path library explicitly note however thread compiler gcc require link additional library make work gcc important add lpthread last item link order important reason want thread define csv_io_no_thread include header remember library make feature therefore enable support add std std gnu library develop test gcc note vs2013 compilant therefore work box see need adjust make work documentation libary provide class linereader class efficiently read large line line csvreader class efficiently read large csv note everything contain namespace linereader constructor take name optionally source source provide function try open give name throw error can_not_open_file exception failure source provide name format error message case essentially put string string describe source informative error message some_string_type std string char source std library take care call std fclose std istream stream close library best performance open stream binary mode however text mode also work bytesourcebase provide interface implement source read function fill provide buff size byte source return number byte actually write buff source byte end reach function return fatal error occur throw exception note function call main worker thread however guarenteed call function time line read call next_line function return pointer null terminate string contain line end reach null pointer return newline character include string may modify string long write past null terminator string stay valid destructor call next_line call window nix newlines handle transparently utf boms automatically ignore miss newlines end problem important limit character per line limit exceed error line_length_limit_exceeded exception throw loop line follow way remain function mainly format error message line indicate current position first next_line call second first call name truncate internally string avoid std bad_alloc exception error report note possible exchange line termination character csvreader csvreader policy class static member allow core functionality exchange efficient way column_count template parameter indicate many column want read csv must necessarily coincide actual number column policy govern various aspect parse trim policy indicate character ignore begin end every column default ignore space tab make sure interpret way trim_chars take number template parameter trim_chars also valid character trim trim_chars quote policy indicate string escape also specify column separator predefined policy no_quote_escape string escape sep column separator double_quote_escape string escape quote quote escape consecutive quote sep column separator quote quote character important combine trim quote row first trim unquoted consequence space inside quote conserve want get rid space inside quote need remove important quote quite expensive disable need important quote string may contain unescaped newlines currently support overflow policy indicate integer input large fit variable follow policy predefined throw_on_overflow throw error integer_overflow error integer_underflow exception ignore_overflow nothing let overflow happen set_to_max_on_overflow set value numeric_limits max min pendant comment policy allow skip line base criterion valid predefined policy no_comment ignore line empty_line_comment ignore line empty contain space tab single_line_comment ignore line start com1 com2 first character may space begin line comment character single_and_empty_line_comment ignore empty line single line comment csvreader trim_chars double_quote_escape read column normal csv string escape enable csvreader trim_chars no_quote_escape throw_on_overflow single_line_comment read column tab separate string escape disable line start ignore constructor location function exactly linereader see documentation detail method deal header read_header method read line rearrange column match order also check whether necessary column present set_header method read input header obviously impossible rearrange column check availability order program must match set_header has_column method check whether column present first argument read_header bitfield determine function react column mismatch default behavior throw error extra_column_in_header exception contain column expect error missing_column_in_header enough behavior alter follow flag ignore_no_column default behavior flag set ignore_extra_column column name argument list silently ignore ignore_missing_column column name argument list read_row modify correspond variable ignore_missing_column good idea initialize variable pas read_row default value column optional default value depend column has_column important call has_column within read loop would work correctly significantly slowdown process column name error duplicated_column_in_header exception throw read_header call empty error header_missing exception throw next_line function read line without parse work analogous linereader next_line skip break line csv however nearly application want read_row function read_row function read line split column arrange correctly trim entry unescapes request content interpret integer float point variable pas read_row may follow type builtin sign integer sign char short int long long long input must encode base ascii number optionally precede function detect whether integer large would overflow underflow behave indicate overflow_policy builtin unsigned integer sign counterpart except lead allow builtin float point float double long double input may lead number must base encode decimal point may either dot comma note comma work also column separator number escape base exponent may specify 1e10 syntax may low uppercase valid float point 456e789 input round next float point infinity large small char column content must single character std string column content assign string std string fill trim unescaped version char pointer directly buff string trim unescaped null terminate pointer stay valid read_row call csvreader destroy user define type note inherent overhead char interpret compare parser directly csvreader builtin number parser pure convenience need slightly different syntax char parse faq library throw std system_error get work compiler std thread break define csv _io _no _thread disable thread support value ints string want parse customize type possible read char parse string first seem expensive pointer get point directly memory buff fact inherent reason custom int parser realize way must slow int parser library read char library take care column reorder quote escape leave actual parse note std string slow involve memory copy get lot compiler error compile header please fix enable mode compiler gcc add std commandline resolve problem please open ticket library crash parse large please fix gcc link lpthread read installation section detail resolve issue please open ticket reason crash large first chuck read synchronous whole fit chuck asynchronous call perform alternatively define csv _io _no _thread library support utf library basic utf support precise break pas utf string read char get pointer utf string decode string separator quote comment character library ascii character library support string field span multiple line feature often request past however difficult make work current design without break something else
C C++;https://github.com/Samsung/veles;veles distribute platform rapid deep application development consist platform znicz plugin neural mastodon veles java bridge hadoop soundfeatureextraction audio feature extraction home page name release apache license copyright samsung electronics ltd
C C++;https://github.com/psi4/psi4;status azure devops codecov lgtm lgtm late release last release commit since communication user doc chat dev chat foundation installation obtain anaconda server demo psi4 open source suite initio quantum chemistry program design efficient high accuracy simulation molecular property routinely perform computation basis function multi core machine computationally demand portion write export many class via pybind11 flexible driver psi4 strive friendly user developer user website www psicode org instal psi4 cmake adept see cmakelists txt cmakelists txt manual nightly master branch last release tutorial psithon psi4 job psiapi job forum communication support github authoritative repository continuous integration status azure devops linux window anaconda binary available linux mac window wsl window binstar coverage source line hit test suite interest developer replacement page need welcome fork psi4 psi4 follow github contribution sample input also sample sample tarball dashboard youtube channel license psi4 open source quantum chemistry software package copyright psi4 developer copyright party include correspond psi4 free software redistribute modify term gnu less general public license publish free software foundation version psi4 distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu less general public license detail receive copy gnu less general public license along psi4 write free software foundation inc franklin street fifth floor boston usa full text gnu less general public license version include copy less repository also find citation journal article reference describe psi4 smith burn simmonett parrish schieber galvelis kraus kruse remigio alenaizan jam lehtola misiewicz scheurer shaw schriber xie glick sirianni brien waldrop kumar hohenstein pritchard brook schaefer iii sokolov patkowski deprince iii bozkaya king evangelista turney crawford sherrill psi4 open source software high throughput quantum chemistry chem phys psi4 psi4numpy psi4 alpha release psi3
C C++;https://github.com/mlpack/mlpack;fast flexible machine library mlpack intuitive fast flexible machine library bind language mean machine analog lapack aim implement wide array machine method function swiss army knife machine researcher addition powerful interface mlpack also provide command line program bind julia bind bind bind numfocus fiscal sponsor attribution mlpack open governance governance fiscally sponsor consider make tax deductible help project pay developer time professional service travel workshop variety need content introduction introduction citation detail citation detail dependency dependency mlpack source mlpack source mlpack program mlpack program mlpack mlpack documentation documentation bug report bug report introduction mlpack website find contain numerous tutorial extensive documentation readme serve guide mlpack find documentation website consult information mlpack mlpack development site api documentation citation detail mlpack research software please cite mlpack citation give bibtex format article mlpack2018 title mlpack fast flexible machine library author curtin ryan edel marcus lozhnikov mikhail mentekidis yannis ghaisas sumedh zhang shangtong journal journal open source software volume issue page year doi joss url citation beneficial growth improvement mlpack dependency mlpack follow dependency armadillo boost math_c99 spirit cmake ensmallen cereal available distribution package manager compile hand see documentation package information would like mlpack bind make sure follow package instal setuptools cython numpy panda would like julia bind make sure julia instal would like bind make sure instal package gonum would like bind make sure instal package rcpp rcpparmadillo rcppensmallen roxygen2 stb library header available image load support compile compile armadillo hand ensure lapack blas enable mlpack source document discus mlpack source direction work linux like environment ubuntu macos freebsd etc however mlpack repository many linux distribution may easy package manager system ubuntu mlpack library command line executables mlpack_pca mlpack_kmeans etc follow command sudo apt get libmlpack dev mlpack bin fedora red hat epel sudo dnf mlpack devel mlpack bin note old ubuntu version may recent version mlpack available instance time write ubuntu mlpack available option include upgrade ubuntu version find ppa non official source instal manual note rhel7 centos gcc old compile mlpack option devtoolset see information useful page consult addition section mlpack mlpack source mlpack cmake system allow several flexible configuration option consult cmake tutorial documentation tutorial enough get mlpack instal first unpack mlpack source change unpack directory mlpack version tar xzf mlpack tar mlpack make directory directory name sufficient mkdir next step cmake configure project cmake equivalent configure autotools cmake option configure project debug symbol profile information cmake option specify compile debug information profile information cmake debug profile option specify flag allow option include debug compile debug symbol profile compile profile symbol arma_extra_debug compile extra armadillo debug symbol boost_root path boost path root boost installation armadillo_include_dir path armadillo include path armadillo header armadillo_library path armadillo libarmadillo armadillo library build_cli_executables whether command line program build_python_bindings whether bind python_executable path python_version path specific executable python_install_prefix path path root installation build_julia_bindings whether julia bind julia_executable path julia path specific julia executable build_go_bindings whether bind go_executable path path specific executable build_go_shlib whether share library require bind build_r_bindings whether bind r_executable path path specific executable build_tests whether test build_shared_libs compile share library executables oppose static library disable_downloads whether disable ensmallen_include_dir path ensmallen include path include directory ensmallen stb_image_include_dir path stb include path include directory stb image library use_openmp whether openmp available build_docs doxygen documentation doxygen available default mlpack library cli bind statically follow command cmake build_shared_libs tool also configure cmake document see section detail include full list option default value default command line program dependency cython setuptools numpy panda available bind also openmp parallelization possible default cmake configure library simple type make library component bind make want everything library individual component specify make mlpack_pca mlpack_knn mlpack_kfn want test make mlpack_test target ctest test make mlpack_test ctest fail figure register account github submit issue mlpack developer quickly help figure mlpack alternately mlpack help find irc mlpack chat freenode net wish mlpack usr local include mlpack usr local lib usr local bin make sure root privilege write permission directory simply type make executables name link mlpack lmlpack mlpack header find usr local include mlpack bind access mlpack package program mlpack_knn give error form error load share library libmlpack open share object directory sure runtime linker search directory libmlpack instal probably usr local lib unless set manually way linux ensure ld_library_path environment variable directory contain libmlpack bash set easily export ld_library_path usr local lib ld_library_path whatever directory libmlpack instal mlpack program mlpack executables reside bin call library depend system setting add path call directly documentation assume executables path consider mlpack_knn program find near neighbor reference point query set query reference point query wish know point reference close give query point alternately query reference datasets problem state simply point wish know near point point mlpack program extensive help documentation detail method parameter mlpack_knn query reference datasets find near neighbor simple verbose flag optional give informational output unique mlpack_knn available mlpack program verbose output also give time output end program useful mlpack mlpack instal system mlpack bind automatically pythonpath import mlpack functionality simple access help easy api similar command line program knn near neighbor search numpy matrix find near neighbor simple store output neighbor output neighbor output distance output distance mlpack bind function similarly input output parameter exactly match command line program documentation documentation give fraction available documentation mlpack doxygen instal type make doc documentation locally alternately date documentation available old version mlpack mlpack mlpack development site api documentation development goal mlpack short medium term future see vision bug report see also mlpack find bug mlpack problem numerous rout available help github bug track find easy register account bug mlpack development team try quickly resolve issue addition mail list available mlpack discussion list available mlpack discussion git commit list available commit lastly irc channel mlpack freenode get help
C C++;https://github.com/nothings/stb;stb single public domain mit license library noteworthy image loader stb_image stb_image image writer stb_image_write stb_image_write image resizer stb_image_resize stb_image_resize font text rasterizer stb_truetype stb_truetype typesafe container stb_ds stb_ds library stb except stb_dxt fabian ryg giesen stb_image_resize jorge vinobs rodriguez stb_sprintf jeff robert library last version category loc description stb_vorbis stb_vorbis audio decode ogg vorbis memory float bite sign output stb_hexwave stb_hexwave audio audio waveform synthesizer stb_image stb_image graphic image load decode memory jpg png tga bmp psd gif hdr pic stb_truetype stb_truetype graphic parse decode rasterize character truetype font stb_image_write stb_image_write graphic image write disk png tga bmp stb_image_resize stb_image_resize graphic resize image large small good quality stb_rect_pack stb_rect_pack graphic simple rectangle packer decent quality stb_ds stb_ds utility typesafe dynamic array hash table compile stb_sprintf stb_sprintf utility fast sprintf snprintf stb_textedit stb_textedit user interface gut text editor game etc implement scratch stb_voxel_render stb_voxel_render graphic minecraft esque voxel render engine many feature stb_dxt stb_dxt graphic fabian ryg giesen real time dxt compressor stb_easy_font stb_easy_font graphic quick dirty easy deploy bitmap font print frame rate etc stb_tilemap_editor stb_tilemap_editor game dev embeddable tilemap editor stb_herringbone_wa stb_herringbone_wang_tile game dev herringbone wang tile map generator stb_c_lexer stb_c_lexer parse simplify write parser like language stb_divide stb_divide math useful bite modulus euclidean divide stb_connected_comp stb_connected_components misc incrementally compute reachability grid stb_leakcheck stb_leakcheck misc quick dirty malloc free leak check stb_include stb_include misc implement recursive include support particularly glsl total library total line faq license library public domain anything want legal obligation anything else although appreciate attribution also license mit open source license lawyer unhappy public domain every source include explicit dual license choose library idea behind single header library easy distribute deploy contain single default act header declare function contain actually get compile addition select _exactly one_ source actually instantiate preferably edit frequently define specific macro document per library actually enable function definition stb_image exactly include stb_image regularly instead define stb_image_implementation include stb_image right macro define point right top library single public domain open source library minimal dependency wrap stb library new library new library public domain mit public domain freely relicense whatever license new library want deal sse support gcc base compiler stb_image either sse2 compile msse2 simd rather try detect processor runtime handle correctly understand approve path gcc runtime detection require multiple source cpu configuration stb_image header library compile source approve way sse enable non sse enable variation try work around multiple issue year due specific version gcc break give see library seem redundant exist open source library good somehow generally good easy integrate easy easy release single good api attribution requirement may featureful slow memory already equivalent library probably good reason switch link directly table stb library link directly list list line terrible metric give idea internal complexity library help manage expectation let know get library write style certainly similar style comparison library probably still meaningful note though line include part correspond header documentation single header window standard directory library live make deploy library window lot painful open source developer unix derivates generally realize also make library dependency lot bad window also common problem window library different version runtime library cause link conflict confusion ship libs header mean normally compile straight project without make library thus sidestep problem make single make easy drop project need course still put proper share library tree want header difference big deal difference big deal need zip tar remember attach etc stb something set top box initial name sean barrett choose egomania moderately sane way namespacing filename source function name add image type stb_image stb_image grow become important focus security codebase add new image format increase amount need secure long worth add new format advice create single library yes public domain prefer gpl lgpl bsd zlib etc many reason list primarily also make easy people language c99 stdint declare anywhere etc still msvc ide good human factor late version msvc
C C++;https://github.com/mattreecebentley/plf_stack;plf stack container replicate std stack functionality good performance standard library container stack context etc compatible full documentation function description benchmark
C C++;https://github.com/jsoysouvanh/Refureku;license late overview refureku powerful runtime reflection dynamic library split part generator generation module handle reflection generation actual dynamic library contain reflection api link target program check get start feature reflect namespaces class static method static field variable function enums enum value support runtime load unload dynamic library reflection support class template reflection well multiple inheritance entity need include manipulate reflect entity retrieve name predicate read write reflect field variable value call reflect function method instantiate reflect class without access static type access dynamic type object instance base pointer reference powerful property system allow attach custom metadata entity attribute reflection metadata regenerate change library impose macro syntax user free define highly flexible customizable generation design goal refureku initially develop game engine development mind greatly influence global design architecture usage mostly inspire ue4 api native reflection system concept simple write want reflect include generate generator rest user extra step care reflect entity automatically register reflection system available right away manual reflection absolute error prone time consume another point address library reflection syntax sometimes annoy tie macro syntax third party library especially heavily accross project refureku kodgen user full control generate macro name make reflection integrate well project another key point kodgen simple insert mix custom generate reflection generate refureku generator simple module add kodgen generator user create add many generation module want kodgen allow custom generate injection whole codebase without change single line target program feature single header reflect class get class metadata get class metadata base pointer feature available class publicly derive rfk object include manipulate field manipulate method instantiate class also possible instantiate class parameter provide custom instantiator declare class create custom property attach exampleproperty reflect struct class specify first argument propertysettings attach property entity trigger compilation error explicit error message read entity property cross platform compatibility library test stable follow configuration microsoft window server msvc linux clang clang clang clang clang linux gnu gnu gnu gnu mac appleclang know issue msvc issue reflect class template template template parameter see compilation error reflect protect private nest class template reflect namespace share among different dynamic library specific property bind library remove unload
C C++;https://github.com/Stiffstream/sobjectizer;sobjectizer sobjectizer distinguish sobjectizer distinguish sobjectizer sobjectizer like tbb taskflow hpx sobjectizer like tbb taskflow hpx show show helloworld helloworld ping pong ping pong pub sub pubsub blinkingled blinkingled csp like ping pong csp like ping pong another csp golang like select statement another csp golangs like select statement want know want know useful stuff companion project so5extra useful stuff companion project so5extra limitation limitation obtain obtain sobjectizer require sobjectizer require c17 via mxx_ru via mxx_ru via cmake via cmake android android android ndk android ndk crystax ndk crystax ndk dependency manager dependency manager via vcpkg via vcpkg via conan via conan instal sobjectizer add conanfile txt instal sobjectizer add conanfiletxt add sobjectizer cmakelists txt add sobjectizer cmakeliststxt license license create sobjectizer sobjectizer cross platform opensource actor framework sobjectizer support actor also publish subscribe csp like channel goal sobjectizer significant simplification development concurrent multithreaded application sobjectizer allow creation concurrent app set agent object interact asynchronous message handle message dispatch provide work context message process allow tune thing supply various ready dispatcher distinguish sobjectizer maturity sobjectizer base idea put forward sobjectizer develop since sobjectizer continuously evolve since stability begin sobjectizer business critical application still production break change sobjectizer rare approach carefully cross platform sobjectizer window linux freebsd macos android easy sobjectizer provide easy understand easy api lot sobjectizer distributive plenty information project wiki free sobjectizer distribute bsd clause license development proprietary commercial software free sobjectizer like tbb taskflow hpx sobjectizer often compare tool like intel thread block taskflow hpx similar comparison useless tool intend solve task parallel compute area allow reduce computational time utilize several cpu core reencode video format another within hour cpu core take minute core main goal parallel compute sobjectizer intend slightly different area concurrent compute main goal sobjectizer simplification many different task sometimes need cpu core several cpu core sobjectizer make handle task interaction much easy tricky part fact parallel concurrent compute concurrency mechanism primitive like thread mutexes atomics hood high level point view parallel concurrent compute different task application could implement top sobjectizer list multithreaded proxy server automatic control system broke database server show helloworld classical hello world express sobjectizer agent ping pong let look interest agent message exchange another famous actor framework ping pong agent work work thread bind different work thread simple appropriate dispatcher pub sub sobjectizer support pub sub via multi producer multi consumer message box message send message box receive subscriber message type blinkingled agent sobjectizer finite state machine almost functionality hierarchical finite state machine hsm support child state handler inheritance on_enter on_exit handler state timeouts deep shallow state history except orthogonal state let see agent implement follow statechart look like blink lead statechart dev sample so_5 blinking_led statechart_horizontal png simple demonstrate agent statechart show csp like ping pong sobjectizer allow write concurrent application even without agent inside plain thread csp like channel plain thread ping pong please note main exception safe another csp golang like select statement sobjectizer provide select function similar golang select statement function allow wait incoming message several message chain also allow wait readiness message chain accept new outgo message select allow non block send call handle incoming message target message chain full fibonacci calculation select back pressure mechanism number producer thread wait number reader thread read previous number yet note also main function exception safe want know information sobjectizer find correspond section project useful stuff companion project so5extra separate companion project contain lot various useful thing like asio base dispatcher additional type mboxes revocable timer synchronous request synchronous interaction look like so_5 extra sync stuff sobjectizer intend relatively small project without external dependency so5extra constraint asio base dispatcher environment infrastructure implement so5extra sobjectizer another significant property sobjectizer stability try keep sobjectizer stable possible need try new feature even know yet successful demand so5extra good place experiment new feature could move sobjectizer time find helpful feature sobjectizer let try look maybe already limitation sobjectizer process message dispatch framework support distribute application box external tool library case please take look mosquitto_transport experiment obtain sobjectizer check archive sobjectizer source way sobjectizer first tool second note since support android platform android possible cmake see correspond section sobjectizer also instal via vcpkg conan dependency manager see appropriate section sobjectizer require branch sobjectizer require need support try look old version sobjectizer contact discus port sobjectizer old standard via mxx_ru note standard way sobjectizer way sobjectizer development process sobjectizer necessary ruby language mxx_ru tool ruby mxx_ru via rubygems command already mxx_ru instal please update least version sobjectizer obtain git repository github sobjectizer static share library sobjectizer library place target release subdirectory want share library want static library sobjectizer test sample please note freebsd could necessary define ld_library_path environment variable actual command sequence freebsd could follow html format documentation sobjectizer doxygen tool necessary instal generate html locate sobjectizer dev doc html note specify mxx_ru_cpp_toolset youself mxx_ru try detect toolset automatically want compiler default system please define mxx_ru_cpp_toolset environment variable manually could look like information tune mxx_ru need find correspond via cmake sobjectizer via cmake necessary cmake knowledge follow action demonstration detail info cmake system sobjectizer see dev cmake cmakequickhowto txt get sobjectizer linux freebsd command line command create necessary makefile sobjectizer necessary test make finish target contain subfolders bin sample lib share libso cmake system currently support option sobjectizer_build_static enable sobjectizer static library default sobjectizer_build_shared enable sobjectizer share library default build_all enable test default build_examples enable default build_tests enable test default please note build_all build_examples build_tests turn sobjectizer_build_static sobjectizer_build_shared must turn mean sobjectizer_build_static sobjectizer_build_shared turn build_all build_examples build_tests must turn sobjectizer window visual studio command line necessary build_all cmake invocation since sobjectizer provide sobjectizer config cmake automatically instal lib cmake sobjectizer subfolder allow sobjectizer via cmake find_package command android android possible via rather fresh android ndk crystax android ndk need android sdk android ndk instal system well appropriate version cmake also need properly set environment variable android_home android_ndk issue follow command crystax ndk need crystax ndk high already instal system cmake sobjectizer dependency manager via vcpkg sobjectizer via necessary follow step sobjectizer package add follow line cmakelists txt via conan note since feb new version sobjectizer available via instal sobjectizer add conanfile txt sobjectizer via conan necessary add sobjectizer conanfile txt project also may necessary specify share option sobjectizer sobjectizer static library dependency project add sobjectizer cmakelists txt license sobjectizer distribute clause bsd license license information please see license
C C++;https://github.com/chronoxor/FastBinaryEncoding;fast binary encode fbe awesome linux linux window window window window visual fast binary encode allow describe domain business object complex structure client server request response generate native different program language platform fast binary encode fast binary encode fast binary encode performance comparison protocol find protocol message size serialization time deserialization time byte byte byte byte byte typical usage workflow follow create domain create domain base type enums flag structs generate domain generate domain support program language java javascript kotlin ruby swift domain domain library serialize deserialize fbe serialization object domain unify fast compact fastbinaryencoding fbe format json convert json serialization object domain order web api implement sender receiver interface senderreceiver protocol create communication protocol sample project java javascript kotlin ruby swift content feature feature requirement requirement create domain create domain generate domain generate domain domain domain fbe serialization fbe serialization fbe final serialization fbe final serialization json serialization json serialization package import package import struct key struct key struct numeration struct numeration struct inheritance struct inheritance versioning versioning sender receiver protocol senderreceiver protocol performance benchmark performance benchmark benchmark serialization benchmark serialization benchmark deserialization benchmark deserialization benchmark verify benchmark verify feature cross platform linux macos window generator java javascript kotlin ruby swift generate domain fast binary encode format document fbe support base type byte bool char wchar int8 int16 int32 int64 float double document fbe base type support complex type byte decimal string timestamp uuid document fbe complex type support collection array vector list map hash document fbe collection support nullable optional type enums flag structs document fbe optional type serialization deserialization binary format fbe serialization serialization deserialization json json serialization sender receiver interface communication protocol senderreceiver protocol versioning solution versioning excellent performance performance benchmark requirement linux macos window optional visual linux require package macos require package window require package gil git link setup repository linux macos window cygwin window msys2 window mingw window visual studio create domain fast binary encode provide domain aka business object domain set enums flag structure relate might aggregate hierarchy fast binary encode fbe format specification document fbe sample domain describe account balance order relation abstract trade platform generate domain next step domain compilation fbec compiler create generate require program language follow command create generate possible option fbec compiler follow domain generate domain represent source particular language add project several issue dependency mention standard limit order native support decimal type currently decimal type emulate double type fbe heavy dependency generate source json serialization implement library therefore header available header library json serialization implement library therefore import nuget fast json serialization libraty also available utf8json want try import nuget domain utf8json definition assert test base package get github com stretchr testify json serialization base package get github com json iterator decimal type base package get github com shopspring decimal uuid type base package get github com google uuid java json serialization implement package therefore import maven javascript javascript domain implement ecmascript class etc json serialization set map hash type limit key string type kotlin start version kotlin support unsigned integer number ubyte ushort uint give ability represent fbe domain accurately java language json serialization implement package therefore import maven require ruby ruby dependency instal gem swift swift domain implement tool json serialization implement protocol json serialization set map hash type limit key string type fbe serialization fast binary encode fbe fast compact binary format represent single domain different program language platform also fbe format solve protocol versioning problem versioning follow step order serialize domain object create new domain object fill field collection proto account account create domain write buff fbe proto accountmodel writer serialize domain object domain buff writer serialize account optional verify domain object domain buff assert writer verify access domain buff store send writer buff follow step order deserialize domain object create domain read buff fbe proto accountmodel reader attach source buff domain reader attach writer buff optional verify domain object domain buff assert reader verify deserialize domain object domain buff reader deserialize account exmple fbe serialization language output follow fbe final serialization possible achieve serialization speed protocol mature enough fix final version disable versioning versioning require extra size time process protocol message size serialization time deserialization time verify time fbe byte fbe final byte final domain compile final generate domain flag additional final available serialization follow step order serialize domain object final format create new domain object fill field collection proto account account create domain final write buff fbe proto accountfinalmodel writer serialize domain object domain buff writer serialize account optional verify domain object domain buff assert writer verify access domain buff store send writer buff follow step order deserialize domain object create domain final read buff fbe proto accountfinalmodel reader attach source buff domain final reader attach writer buff optional verify domain object domain buff assert reader verify deserialize domain object domain buff reader deserialize account exmple fbe final serialization language output follow json serialization domain compile json generate domain flag json serialization generate domain object domain object serialize deserialized json please note program language native json support javascript language require third party library get work json require library require package fast package require package java kotlin require package ruby require gem exmple json serialization language output follow package import package declare package name structs offset optional offset add incremented structure type provide explicit simple package declaration package import another enums flag structs reuse current package package offset avoid structs type intersection multiple package import possible well package import implement include directive namespaces package package java kotlin module javascript module ruby require statement struct key struct many mark key attribute correspond compare operator generate allow compare instance struct equality order hash mark field ability allow struct key associative map hash container demonstrate usage key attribute generation language follow comparable class generate struct numeration struct type number automatically increase provide manually possibility shift current struct type number suffix new structs incremented type force set struct type number base suffix affect struct demonstrate idea struct inheritance structs inherit another struct case field base struct present child also possible reuse base struct type number child base operator useful extend struct third party import package versioning versioning simple fast binary encode assume original protocol need extend new enum flag struct value add require value end correspond declaration serialize deserialize structs different combination serialize old deserialize old nothing lose best case serialize old deserialize new old field deserialized new field initialize default value accord definition serialize new deserialize old old field deserialized new field discard serialize new deserialize new nothing lose best case versioning third party protocol able modify third party protocol still solution extend create new protocol import third party extend structs inheritance sender receiver protocol domain compile sender generate domain flag sender receiver protocol generate sender interface contain send struct method domain structs also abstract onsend size method implement send serialize socket pipe etc receiver interface contain onreceive struct handler domain structs also public onreceive type size method fee receiver receive socket pipe etc exmple sender receiver communication protocol language output follow performance benchmark benchmark domain create domain create single account order take cppbenchmark take benchmarkdotnet take test java take jmh javascript take benchmark kotlin take jmh take timeit ruby take benchmark swift take xctest benchmark serialization serialization benchmark serialization benchmark language platform message size serialization rate serialization time win64 byte ops win64 final byte ops win64 json byte ops win64 byte ops win64 final byte ops win64 json byte ops win64 byte ops win64 final byte ops win64 json byte ops java win64 byte ops java win64 final byte ops java win64 json byte ops javascript win64 byte ops javascript win64 final byte ops javascript win64 json byte ops kotlin win64 byte ops kotlin win64 final byte ops kotlin win64 json byte ops win64 byte ops win64 final byte ops win64 json byte ops ruby win64 byte ops ruby win64 final byte ops ruby win64 json byte ops swift macos byte ops swift macos final byte ops swift macos json byte ops benchmark deserialization deserialization benchmark deserialization benchmark language platform message size deserialization rate deserialization time win64 byte ops win64 final byte ops win64 json byte ops win64 byte ops win64 final byte ops win64 json byte ops win64 byte ops win64 final byte ops win64 json byte ops java win64 byte ops java win64 final byte ops java win64 json byte ops javascript win64 byte ops javascript win64 final byte ops javascript win64 json byte ops kotlin win64 byte ops kotlin win64 final byte ops kotlin win64 json byte ops win64 byte ops win64 final byte ops win64 json byte ops ruby win64 byte ops ruby win64 final byte ops ruby win64 json byte ops swift macos byte ops swift macos final byte ops swift macos json byte ops benchmark verify verify benchmark verify benchmark language platform message size verify rate verify time win64 byte ops win64 final byte ops win64 byte ops win64 final byte ops win64 byte ops win64 final byte ops java win64 byte ops java win64 final byte ops javascript win64 byte ops javascript win64 final byte ops kotlin win64 byte ops kotlin win64 final byte ops win64 byte ops win64 final byte ops ruby win64 byte ops ruby win64 final byte ops swift macos byte ops swift macos final byte ops
C C++;https://github.com/nmoinvaz/minizip;minizip minizip zip manipulation library write support window macos linux master branch fuzzing codacy license develop maintain nathan moinvaziri branch name description recent release development change original minizip include winzip aes encryption disk split buff additional fix abi compatible original minizip minizip zlib history minizip originally develop gilles first include zlib distribution additional contribution start zlib since time continually improve upon contribute many people original still find zlib distribution maintain mark adler motivation behind repository need new feature bug fix original library maintain long period time largely refactored rewrite order help improve maintainability readability compatibility layer provide consumer original minizip library feature create extract zip archive add remove entry zip archive read write raw zip entry read write zip archive memory zlib bzip2 lzma zstd compression method password protection traditional pkware winzip encryption buff stream improve performance ntfs timestamp support utc last modify last access creation date disk split support split zip archive multiple preservation attribute across system follow store symbolic link unicode filename support utf encode legacy character encode support cp437 cp932 cp936 cp950 turn compilation compression decompression encryption window win32 winrt macos linux platform support stream interface easy additional platform support apple compression library zlib local header information zip unzip central directory reduce size ability generate verify signature entry recover central directory corrupt miss minizip command line tool generate project platform cmake version late recommend cmake minizip directory option name description default value mz_compat enable compatibility layer mz_zlib enable zlib compression mz_bzip2 enable bzip2 compression mz_lzma enable lzma compression mz_zstd enable zstd compression mz_libcomp enable apple compression apple mz_fetch_libs enable fetch third party library find win32 mz_force_fetch_libs enable fetch third party library always mz_pkcrypt enable pkware traditional encryption mz_wzaes enable winzip aes encryption mz_openssl enable openssl encryption unix mz_libbsd libbsd crypto random unix mz_signing enable zip sign support mz_iconv enable iconv encode conversion mz_compress_only support compression mz_decompress_only support decompression mz_file32_api posix bite api mz_build_tests minizip test executable mz_build_unit_tests minizip unit test project mz_build_fuzz_tests minizip fuzz executables mz_code_coverage coverage flag mz_project_suffix project name suffix package third party library third party library may require base cmake option select system already library instal otherwise cmake retrieve source library official git repository compile mz_fetch_libs option enable project license cmake option comment julian seward domain mz_lzma write igor pavlov lasse collin mark adler jean loup gailly alternatively han kristian rosbach facebook project zlib license license acknowledgment thank people take time contribute review test patch project would good without thank gilles work originally base zip define phil katz pkware
C C++;https://github.com/badaix/popl;popl program option parser library github language grade popl command line argument parser support set option gnu getopt thus closely follow posix guideline command line option program feature single header simply include external dependency platform independent support set option gnu getopt short option long option non option argument support parse ini templatized option parse argument directly cast desire target type automatic creation usage message console help message format help message man page script snippet bash script easy strange brace syntax command line option typesafe object howto key object optionparser populate different option type value option argument switch option without argument implicit option optional argument implicit value argument give next optionparser parse command line pas argc argv fill option object option type initialize short option long option help message basic usage multiple definition option set multiple time command line count value access default value every option type default value set command line string_option is_set false string_option value default value assign variable argument option directly assign variable variable carry value string_option value thus declaration string_option omit attribute option option attribute hide auto create help message classify advance expert cout help cout show hide advance option cout help attribute advance show advance option hide never show user also option flag mandatory assign attribute require call popl hello m23 test produce output like
C C++;https://github.com/unittest-cpp/unittest-cpp;maintenance unittest recently sporadic officially hiatus november subscribe update unittest unittest lightweight unit test framework design test drive development wide variety platform simplicity portability speed small footprint important aspect unittest unittest mostly standard make minimal advance library language feature mean easily portable platform box follow platform support window linux mac documentation full documentation unittest find github wiki content wiki also include git submodule doc folder version specific markdown documentation always available along pre requisite currently bundle automake unittest primarily support late head via git git clone via svn svn checkout unittest cpp late release via git git clone unittest cpp git checkout via svn svn checkout unittest cpp license unittest free software may copy distribute modify term license contain license distribute package license mit consortium license contributor github contributor current maintainer patrick johnmeyer pjohnmeyer gmail com pjohnmeyer charles nicholson charles nicholson gmail com charlesnicholson original author noel llopis llopis convexhull com charles nicholson charles nicholson gmail com contributor include github history jim tilander kim grasman jonathan jansson dirck blaskey rory driscoll dan lind matt kimmel submit permission blue fang game anthony moralez jeff dixon randy coulman lieven van heide historic release note version change check method support check macro accept argument reference introduce long macro form unittest_check make short form optional improve visual studio support full version add require macro end test early select check fail full version pkg config support fix visual studio compilation issue full version visual studio support cmake base management integration sourceforge google version project full version check macro work arbitrary stack depth inside test remove obsolete test_utility macro predicate test execution via testrunner runtestsif good exception handle fixture ctors dtors vc6 support version remove dynamic memory allocation stream mingw support consistent native line end minor bug fix version first pas documentation detail error crash catch fixture standard stream print object check allow standard class type std string custom class stream operator ostream standard stream optionally compile define unittest_use_custom_streams config add name test suit add check_array2d_close posix library name libunittest float point number postfixed failure report version check macro side effect even parameter change state remove check_array_equal similar check_array_close add local global time constraint remove dependency strstream improve posix signal exception translator fail test add visual studio error list fix visual studio project work space directory version initial release
C C++;https://github.com/NVlabs/cub;cub cub provide state art reusable software component every layer cuda program device wide sort prefix scan reduction histogram etc compatible cuda dynamic parallelism block wide collective sort prefix scan reduction histogram etc compatible arbitrary thread block size type warp wide collective warp wide prefix scan reduction etc safe architecture specific thread resource ptx intrinsics device reflection texture cache iterators cache memory allocator etc orientation collective primitive within cuda software cub include nvidia hpc sdk cuda toolkit recommend cub project information simple thread block cub blockradixsort collectively sort input segment class specialize type sort number thread per block number key per thread implicitly target compilation architecture cub blockload cub blockstore class similarly specialize furthermore provide coalesce access device memory primitive configure access memory strip access pattern consecutive thread simultaneously access consecutive item transpose key block arrangement index html sec4sec3 element across thread specialize class expose opaque tempstorage member type thread block storage type statically allocate union share memory need thread block alternatively storage type could aliased global memory allocation support compiler cub regularly test specify version follow compiler unsupported version may emit deprecation warn silence define cub_ignore_deprecated_compiler compilation nvcc nvc gcc clang msvc release cub distribute nvidia hpc sdk cuda toolkit addition github see changelog changelog detail specific release cub release include tbd nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit nvidia hpc sdk cuda toolkit early access cuda early access thrust thrust thrust previously previously previously development process cub thrust depend recommend clone thrust cub component thrust cub cmake unit test header test cub developer follow recipe follow default standard target change cmake information configure cub create pull request find contribute contribute open source license cub available new bsd open source license
C C++;https://github.com/ryanmjacobs/c;much special reason fast love raw speed although drawback write script compile execute script yeah work gif simple type call shebang hook package manager check entire system local user note somewhere usr bin shebang different may something similar home ryan bin okay whatever set change cli multiple cli anything want pas compiler put quote first argument whether flag wall etc name main etc single cli omit quote shebang add shebang set executable ready single shebang add top multiple shebang tack extra flag option want pas compiler sure add terminate character cache default cache size set change default cache path set tmpdir cache change contribute feel free submit idea question problem report issue feel bite brave submit pull request grimace hack away make sure test pas first want clarify tcc tcc compiler know tcc perform set optimization gcc perform clang perform purpose script give simple front end favorite compiler whether gcc clang something else entirely get choose compiler second reason simply satisfy type hello see instantly third reason fan speed definitely offer able write small fast portable script great pas around script like would bash script zsh zsh take advantage zsh suffix alias without chmod package package manager come right place aur bpkg bpkg ryanmjacobs brew brew shebang usr local bin todo maybe late implement cache license mit basically whatever want provide include license notice copy source also liable script break anything
C C++;https://github.com/volt-software/ichor;ichor greek mythos ethereal fluid blood framework middleware thread confinement dependency injection ichor informally stand intuitive compile time hoist object resource although initially start rewrite osgi base framework celix less extent cppmicroservices ichor carve path god fluid ichor great aim bring embed realm mean classic requirement possibility dynamic memory allocation control schedule deterministic execution time focus whilst still allow much standard modern development moreover concept fearless rust attempt apply ichor thread confinement thread confinement fearless concurrency multithreading hard exist plenty method try make easy range actor static analysis software transaction traditional manual lock wrangle thread confinement approach instead protect resource ichor attempt make well define thread instance class push access modify memory thread thereby remove need think atomics mutexes unless thread manage otherwise try circumvent ichor case quickstart minimal minimal_example main cpp require main function initiate least event loop framework logger service quit program gracefully ctrl realtime realtime_example main cpp show trivial program realtime priority show usage ichor priority find directory support linux currently unsupported window untested sure compile relatively easy get baremetal might change someone put effort modify ichor work freestanding far future plan rtos support vxworks wind river dependency ubuntu optional feature feature behind feature flag dependency etcd boost beast recommend boost new window untested late msvc probably work documentation documentation find doc directory doc current design focus magic configuration configuration much possible bundle place much type safety possible prefer compile error time error well define manage multi thread prevent race similar issue event loop multi thread desire provide easy abstraction prevent issue performance orient design part framework make easy get high performance low latency usage memory allocator enable heap allocation usage fully utilise oop raii concept steer user framework correctly implement business logic least amount possible hopefully culminate error prone good time market support feature framework provide several core feature optional service behind cmake feature flag coroutine base event loop event base message pas dependency injection memory allocator heap allocation service lifecycle management sort like osgi lite service race free communication event loop http server client optional service websocket service boost beast http client server service boost beast spdlog log service tcp communication service rapidjson serialization service timer service partial etcd service roadmap edf schedule wcet measurement cmake stuff include ichor library external project expand etcd support currently simply put get support pubsub interface kafka pulsar ecal command trace interface opentracing jaeger docker integration compilation preliminary benchmark benchmark mainly identify bottleneck showcase performance framework proper throughput latency benchmark tbd setup amd 3900x 3600mhz cl17 ram ubuntu thread insert million event process memory usage thread insert million event process memory usage thread create service dependency memory usage thread create service dependency memory usage thread start stop service time memory usage thread start stop service time memory usage thread serialize deserializing json message memory usage thread serialize deserializing json message memory usage realtime vanilla linux benchmark currently lead characteristic create service dependency overhead likely start service stop service overhead likely event handle overhead amortize create thread linearizable case pure event creation handle seem otherwise really latency spike schedule user space order microsecond low proper realtime tune except queue empty force sleep help improve memory usage behaviour would appreciate support feel free make issue pull request sometimes online discord business inquiry send michael volt software faq want non voluntary pre emption scheduler currently ichor mutex insert extract event queue non voluntary user space schedule require lock free structure possible yet possible completely stack base allocation yes see realtime realtime_example terminate program whenever dynamic memory allocation aside allow exception like std locale allocation would like clang knowledge clang certain feature ichor yet soon clang implement work add support window vxworks wind river baremetal machine window program also know much demand start necessary implement ichor platform ichor stl include ichor stl functionality namely realtimemutex conditionvariable compiler support may adequate yet wind river freestanding might necessary baremetal support would stray rather far expertise implement part stl add support memory allocator achieve dynamic memory allocation support particularly std read write mutexes also real time extension mutexes pthread_mutex_adaptive_np pthread_prio_inherit pthread_rwlock_prefer_writer_nonrecursive_np either standard extension expose standard library equivalent license ichor license mit license
C C++;https://github.com/amzeratul/halley;halley halley game engine lightweight game engine write ship wargroove turn base strategy game window mac experimental nintendo switch xbox ps4 experimental android port wip halley game engine license apache license check sample game global game jam entry join discord design guideline objective modern graphic pipeline first class shader support write modern true entity system base component store system operate family component tune high performance first reliance editor generate anything easy game easy implement easy maintain game easy keep work long term grow large project size cross platform support many platform possible legacy bother support legacy system window old android device rich tool possible provide tool assist development debug fast iteration time hot reload wherever possible support script language lua module halley divide several sub project engine core core feature engine include looper api management resource graphic engine audio audio engine entity framework deal entity component system utils utility library net library library plugins asio asio dx11 video dx11 opengl video opengl metal video metal experimental sdl system sdl input sdl audioout sdl winrt system winrt input winrt platform winrt audioout xaudio2 tool editor editor cmd command line interface tool runner provide entry point execution dynamic reload highly experimental tool editor tool generate asset test entity stress test entity system stress test system sample sample project take due outdated sorry platform follow platform support window test window professional bite work low bite mac test mac linux test ubuntu installation tool require cmake capable compiler visual visual studio clang gcc library dependency engine boost header opengl optional sdl recommend optional window sdk optional also require tool boost library filesystem system freetype yaml cpp set ensure dependency set correctly cmake typical engine halley editor test entity whichever project want test launch project documentation full documentation available
C C++;https://github.com/microsoft/vcpkg;vcpkg overview readme_zh_cn espanold readme_es readme_ko_kr francais readme_fr vcpkg help manage library window linux macos tool ecosystem constantly evolve always appreciate contribution never vcpkg try figure vcpkg check get start get start section start vcpkg short description available command instal vcpkg vcpkg help vcpkg help command command specific help github port program slack vcpkg channel discord include vcpkg channel doc documentation doc readme table content vcpkg overview vcpkg overview table content table content get start get start quick start window quick start window quick start unix quick start unix instal linux developer tool instal linux developer tool instal macos developer tool instal macos developer tool vcpkg cmake vcpkg cmake visual studio cmake tool visual studio cmake tool vcpkg visual studio cmake project vcpkg visual studio cmake project vcpkg clion vcpkg clion vcpkg submodule vcpkg submodule tab completion auto completion tab completionauto completion contribute contribute license license security security telemetry telemetry get start first follow quick start guide either window quick start window macos linux quick start unix depend information see instal package get start package library need present vcpkg catalog open issue github repo contribute submit issue vcpkg team community see potentially add port vcpkg get vcpkg instal work may wish add tab completion tab completionauto completion finally interest future vcpkg check manifest get start manifest spec guide experimental feature likely bug try open issue contribute submit issue quick start window prerequisite window new git get start git visual studio get start visual studio update great english language pack first bootstrap vcpkg instal anywhere generally recommend vcpkg submodule cmake project instal globally visual studio project recommend somewhere like src vcpkg dev vcpkg since otherwise may path issue port system library project note x86 library default x64 also search library need search subcommand order vcpkg visual studio follow command may require administrator elevation create new non cmake project open exist instal library immediately ready include would project without additional configuration cmake visual studio continue vcpkg visual studio cmake project order vcpkg cmake outside ide toolchain cmake still need find_package like library check cmake section vcpkg cmake information include cmake ide tool include visual studio check integration guide get start integration quick start unix prerequisite linux git get start git get start linux gcc prerequisite macos apple developer tool get start macos dev tool first bootstrap vcpkg instal anywhere generally recommend vcpkg submodule cmake project library project also search library need search subcommand order vcpkg cmake toolchain cmake still need find_package like library check cmake section vcpkg cmake information best vcpkg cmake cmake tool vscode tool check integration guide get start integration instal linux developer tool across different distros linux different package need debian ubuntu popos debian base distribution centos distribution make sure instal want add instruction specific distro please open contribute submit instal macos developer tool macos thing need follow terminal follow along prompt window come able bootstrap vcpkg along quick start guide quick start unix vcpkg cmake vcpkg cmake follow may help visual studio cmake tool add follow workspace setting json make cmake tool automatically vcpkg library vcpkg visual studio cmake project open cmake setting editor cmake toolchain add path vcpkg toolchain vcpkg clion open toolchains setting setting window linux clion preference macos cmake setting execution deployment cmake finally cmake option add follow line unfortunately add profile vcpkg submodule vcpkg submodule project add follow cmakelists txt first project call instead pas cmake_toolchain_file cmake invocation still allow people vcpkg pas cmake_toolchain_file directly make configure step slightly easy get start package doc instal package get start integration doc user integration get start git get start cmake tool get start linux gcc instal linux developer tool get start macos dev tool instal macos developer tool get start macos brew instal gcc macos get start macos gcc instal gcc macos get start visual studio get start manifest spec doc specification manifest tab completion auto completion vcpkg support auto completion command package name option powershell bash enable tab completion choice depend restart console see documentation doc readme specific walkthroughs include instal package doc instal package add new package zipfile doc package zipfiles add new package github repo doc package github repos doc also available online website really appreciate feedback submit issue see minute video contribute vcpkg open source project thus contribution way contribute submit issue contribute submit issue vcpkg exist package submit fix new package contribute submit please refer contribute guide contribute detail project adopt microsoft open source conduct contribute coc information see conduct faq contribute coc faq email opencode microsoft com mailto opencode microsoft com additional question comment contribute submit issue contribute submit contribute coc contribute coc faq license repository license mit license license txt library provide port license term original author available vcpkg place associate license location instal share copyright security port vcpkg library question original system prefer original developer library source tool official distribution location behind firewall specific access need depend port instal must air gap environment consider instal non air gap environment populate asset cache doc user assetcaching share otherwise air gap environment telemetry vcpkg collect usage order help improve experience collect microsoft anonymous opt telemetry bootstrap vcpkg script disablemetrics pas disable metric vcpkg command line set vcpkg_disable_metrics environment variable read vcpkg telemetry doc privacy
C C++;https://github.com/wjwwood/serial;serial communication library cross platform library interfacing serial like port write provide modern interface workflow design look feel like pyserial speed control provide library several robotics relate project instal like unix library make sudo make catkin project also along side catkin project catkin workspace serial class provide basic interface common serial library open close read write etc require extra dependency also provide tight control timeouts control handshaking line documentation website api documentation dependency require cmake base buildsystem buildsystem script language templating library runtime library catkin optional documentation documentation generation tool graph visualization software get git clone make test make test documentation make doc make license mit license license author william woodall john harrison contact william woodall
C C++;https://github.com/amir-s/jute;simple json parser json main cpp note version provide error check function assume input string valid format json also number format check poor improvement welcome read source loc smile license
C C++;https://github.com/autodiff/autodiff;gitter linux macos window overview autodiff library modern advance program technique enable automatic computation derivative efficient easy intuitive way welcome autodiff recommend improvement think necessary may want chat gitter community channel gitter make proposal create github issue issue demonstration consider follow function evaluate variable minimally transform also derivative compute next section present achieve automatic differentiation algorithm implement autodiff forward mode reverse mode forward mode forward mode automatic differentiation algorithm output variable derivative compute together function evaluation transform way produce value output variable also derivative respect input variable enable forward automatic differentiation calculation derivative autodiff relatively simple previous function need replace float point type double autodiff dual input output variable compute derivative follow auxiliary function autodiff wrt acronym respect indicate input variable select compute partial derivative auxiliary function autodiff indicate value parameter derivative evaluate reverse mode reverse mode automatic differentiation algorithm output variable function evaluate first function evaluation mathematical operation input variable record expression tree traverse tree top level output variable root node bottom level input variable leaf nod possible compute contribution branch derivative output variable respect input variable thus single pas reverse mode calculation compute derivative contrast forward mode require pas input variable note however possible change behavior forward pas many perhaps even derivative output variable compute simultaneously single forward pas evaluate together contrast forward pas compute individual derivative similar autodiff enable reverse automatic differentiation function simply replace type double autodiff var follow demonstrate derivative calculate function autodiff derivative traverse expression tree store variable compute derivative respect input variable store object dud derivative respect input variable extract dud dud operation dud dud dud involve computation extraction derivative previously compute call function autodiff derivative development status autodiff plan long term maintain automatic differentiation project mean algorithm number type still implement currently exist enhance please mind however autodiff still relatively early stage development imply minor break change api may introduce simplify make intuitive consistent new library addition documentation check documentation website detail license mit license copyright allan leal permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software gitter issue
C C++;https://github.com/strukturag/libde265;libde265 open codec libde265 libde265 png libde265 open source video codec write scratch plain api enable simple integration software libde265 support wpp tile base multithreading include sse optimization decoder include feature main profile correctly decode almost conformance stream see wiki list support feature available late news check website library come program dec265 simple player raw bitstreams serve nicely program libde265 sherlock265 base video player additional capability overlay graphical representation bitstream like tree intra prediction mode bitstreams find site ftp ftp bbc hevc anchor bitstreams ra_main approximate performance wpp non tile stream measure timehevc tool gstreamer tool play matroska movie gstreamer fakesink measure average framerate resolution avg fps cpu usage 720p fps 1080p fps fps environment intel core 2700k cpu 50ghz physical cpu core ubuntu 64bit gstreamer get libde265 git repository first need include autogen script generate configure script libde265 dependency library optional program dependency sdl optional dec265 yuv overlay output require sherlock265 libswscale require sherlock265 libvideogfx available libvideogfx require sherlock265 libswscale available optional dec265 libvideogfx obtain disable program configure disable dec265 dec265 decoder program disable sherlock265 sherlock265 visual inspection program additional log information turn configure flag enable log error turn log error level default yes enable log info turn log info level default enable log trace turn log trace level default cmake cmake script libde265 sample script dec265 enc265 include compile command see cmake information cmake platform prebuilt binary binary package obtain launchpad software libde265 libde265 integrate application gstreamer plugin binary vlc plugin binary window directshow filter ffmpeg fork ffmpeg decoder libde265 javascript decoder license library libde265 distribute term gnu less general public license sample application distribute term mit license see copy detail copyright struktur contact dirk farin
C C++;https://github.com/LukasBanana/LLGL;low level graphic library llgl documentation note repository receive bug fix major update pull request may still accept version beta see changelog docu changelog get start llgl docu gettingstarted get 20started 20with 20llgl pdf pdf introduction hello triangle tutorial extensibility llgl reference manual docu refman pdf pdf llgl cod convention docu codingconventions cod 20conventions 20for 20llgl pdf pdf tutorial cpp csharp platform support platform d3d12 d3d11 vulkan opengl opengles metal window window heavy_check_mark heavy_check_mark heavy_check_mark heavy_check_mark gnu linux gnu linux heavy_check_mark heavy_check_mark macos macos heavy_check_mark heavy_check_mark heavy_multiplication_x heavy_check_mark android heavy_multiplication_x heavy_check_mark note script provide window visual studio late require llgl window macos xcode late require llgl macos gnu linux follow development library require llgl gnu linux x11 libx11 dev xf86vidmode libxxf86vm dev xrandr libxrandr dev android android least api level require script generate project currently support gnu linux require cmake late ide platform support currently experimental state thin abstraction layer
C C++;https://github.com/Celtoys/Remotery;remotery realtime cpu gpu profiler host single viewer web browser screenshot screenshot png raw true support platform window window uwp hololens linux osx android xbox freebsd support gpu profile apis d3d opengl cuda metal feature lightweight instrumentation multiple thread cpu web viewer chrome firefox safari custom websockets server transmit sample browser latent thread profile show perform viewer console output log text console input send command game compile window msvc add lib remotery lib remotery program set include directory add remotery lib path require library ws2_32 lib pick pragma comment lib ws2_32 lib directive remotery mac xcode simply add lib remotery lib remotery lib remotery program linux gcc add source lib folder compilation require pthreads library linkage compile lib remotery sample sample lib pthread freebsd easy way take look official port modify port makefile need also package available via pkg remotery define extra macro modify feature compile remotery macro default description rmt_enabled disable include bit remotery rmt_use_tinycrt celtoys tinycrt library release yet rmt_use_cuda assume cuda header libs setup allow cuda profile rmt_use_d3d11 assume direct3d header libs setup allow d3d11 gpu profile rmt_use_opengl allow opengl gpu profile dynamically link opengl library available platform rmt_use_metal allow metal profile command buff basic see sample directory quick int main create main instance remotery need per program remotery rmt rmt_createglobalinstance rmt explicit begin end rmt_begincpusample logtext rmt_logtext time please rmt_endcpusample scoped begin end rmt_scopedcpusample logtext rmt_logtext time destroy main instance remotery rmt_destroyglobalinstance rmt viewer double click launch index html browser sample cuda gpu activity remotery allow profile multiple thread cuda execution different asynchronous stream must share context initialise remotery cuda need bind together call rmtcudabind bind bind context m_context bind ctxsetcurrent cuctxsetcurrent bind ctxgetcurrent cuctxgetcurrent bind eventcreate cueventcreate bind eventdestroy cueventdestroy bind eventrecord cueventrecord bind eventquery cueventquery bind eventelapsedtime cueventelapsedtime rmt_bindcuda bind explicitly point cuda interface allow remotery include anywhere project without need link require cuda library bind complete safely sample cuda activity custream stream explicit begin end rmt_begincudasample unscopedsample stream cuda rmt_endcudasample stream scoped begin end rmt_scopedcudasample scopedsample stream cuda remotery support context thread cuctxgetcurrent cuctxsetcurrent ensure current thread context specify rmtcudabind context sample direct3d gpu activity remotery allow sample d3d11 gpu activity multiple device multiple thread initialise remotery need bind d3d11 single call thread device context parameter id3d11device id3d11devicecontext rmt_bindd3d11 d3d11_device d3d11_context sample simple case explicit begin end rmt_begind3d11sample unscopedsample d3d rmt_endd3d11sample scoped begin end rmt_scopedd3d11sample scopedsample d3d subsequent sample call thread device context combination shutdown d3d11 device context ensure notify remotery shut remotery rmt_unbindd3d11 sample opengl gpu activity remotery allow sample gpu activity main opengl context initialise remotery need bind opengl single call rmt_bindopengl sample simple case explicit begin end rmt_beginopenglsample unscopedsample opengl rmt_endopenglsample scoped begin end rmt_scopedopenglsample scopedsample opengl support multiple context add pretty easily demand feature shutdown opengl device context ensure notify remotery shut remotery rmt_unbindopengl sample metal gpu activity remotery sample metal command buff issue gpu multiple thread metal api support fine grain profile sample return time bind command buff irrespective many issue make sure bind sample command buff call site rmt_bindmetal mtl_command_buffer rmt_scopedmetalsample command_buffer_name api support begin end also rmt_bindmetal mtl_command_buffer rmt_beginmetalsample command_buffer_name rmt_endmetalsample apply configuration setting create remotery instance configure behaviour retrieve setting object rmtsettings setting rmt_settings important setting redirect remotery allocation malloc free additional context pointer get pas callback setting malloc setting free setting mm_context specify input handler receive text input remotery console additional context pointer get pas callback handler call remotery thread synchronization mutex atomics might need avoid race condition thread setting input_handler setting input_handler_context
C C++;https://github.com/uncrustify/uncrustify;coverage add remove space sp_before_sparen _add remove space switch etc sp_compare _add remove space around compare operator etc_ add remove newlines nl_if_brace _add remove newline nl_brace_while _add remove newline statement_ add remove blanklines eat_blanks_before_close_brace _whether remove blank line nl_max _the maximum consecutive newlines blank line indent indent_switch_case _indent_switch_case space indent case switch indent_class_colon _whether indent stuff lead base class colon_ align align_func_params _align variable definition prototype functions_ align_struct_init_span _the span align struct initializer value align modify mod_full_brace_for _add remove brace single line statement_ mod_paren_on_return _add remove unnecessary paren return statement_ configuration source give pretty good idea uncrustify binary pre compile binary window interpret high level program language general purpose program project need extend capability cmake tool generate system makefiles visual studio project xcode project others generate system uncrustify cmake create folder cmake cmake xcode xcode tool system many case simply make window could msbuild visual studio cmake invoke test enable cmake generate test target _build_ system tool usually make test also invoke ctest also target uncrustify executable typically make note cmake configuration system single configuration mean specify type cmake set cmake_build_type variable generate configuration single configuration system makefiles release configuration uncrustify folder system multi configuration mean specify type multi configuration system visual studio project open project visual studio select configuration also command line cmake config release bug post bug issue tracker find project github page please include follow issue description work right input sufficient demonstrate issue expect output configuration option generate output know problem look repository uncrustify look contribute want add feature fix bug implement miss functionality feel free patch welcome area need attention __patches objective support__ really need someone know language plenty open issue good start point would integrate change make unity test java support provide feedback patch test embed sql see work logo sort anything else want make good note pull request firstly take look currently continuous integration system test travisci appveyor test test case format base output command line option test case find test directory every end test test set inside line component single test testnr testconfigfilename testinputfilename lang configuration testconfigfilename locate inside test config input testinputfilename inside test input expect inside test expect directory expect follow name convention testnr testinputfilename optionally follow testnr enable custom rerun configuration rerun configuration need name like testconfigfilename without extension rerun extension also optionally language input provide lang codebase format option set foruncrustifysources cfg fail format source correctly travisci failure command line interface cli output test test_cli_options script locate inside test cli operate subdirectory folder alter cli output inside directory might need manually update often happen option add remove alter keep mind version string line uncrustify 0_f output command like show config replace blank line debug first method uncrustify get debug information get first information give detail parse process indentation give many detail process thru value important variable also dump parse information format step dump step option create series dump_nnn log contain parse information specific point format process dump_000 log list format option combine option get lot detail debug information might useful add line see something happen package unc_tools remove comment line import package add place line compile debug option add option need new option step follow take option sp_trailing_ret_t first define option insert src option _note process make_options must conform particular format option group mark begin upper case low case prevent consider region marker fold follow group description option consist line declaration precede line comment comment form option description take verbatim aside strip lead comment immediately precede option declaration blank line take part description blank line may separate notation description option declaration extern type nname optionally follow value option default value different default construct value type option value must valid take verbatim argument create option instantiation note also line break show require insert src space cpp portability pretty sure nothing specific base software previously test follow operate system linux qnx freebsd netbsd openbsd sun solaris window binary available program __note__ application work reasonably well bug __not__ apply whole codebase without check way flag select configuration flag specify input flag specify output flag without flag output send stdout alternatively multiple single process specify command end without flag flag backup miss every save initial name additional suffix change suffix option description call configure program uncrustify usually read configuration pas via flag flag provide uncrustify try find configuration via uncrustify_config environment variable name uncrustify cfg uncrustify cfg home folder get list available option available option usable configuration format name suggest option produce output add newly introduce option old configuration old configuration pas via flag configuration start point find etc directory ben cfg etc ben cfg modify like quality side side diff tool determine program want repeat style refine ease process bite 3rd party tool available universal indent cross platform graphical configuration editor many beautifiers include uncrustify web configuration tool base uncrustify emscripten interface uncrustify utility documentation browser mac window uncrustify command line tool double click executable open command prompt executable print help message immediately close window uncrustify exit open command prompt interactive terminal window allow command without close soon exit uncrustify exe uncrustify vim look uncrustify intellij look
C C++;https://github.com/jtilly/inih;inih header version inih ini invent simple ini parser write couple page design _small simple_ good embed system also compatible style ini include rfc style multi line syntax name value entry usage need include inireader consider follow inireadertest cpp compile
C C++;https://github.com/cdcseacave/TinyEXIF;tinyexif tiny iso compliant exif xmp parse library jpeg introduction tinyexif tiny lightweight library parse metadata exist inside jpeg third party dependency need parse exif however accesing xmp library need tinyexif easy simply copy source project pas jpeg exifinfo class currently common information like camera make original resolution timestamp focal length lens info stop exposure time gps information etc embed exif xmp metadata fetch easy though extend add miss new exif xmp field usage see main cpp detail copyright redistribution source binary form without modification permit provide follow condition meet redistribution source must retain copyright notice list condition follow disclaimer redistribution binary form must reproduce copyright notice list condition follow disclaimer documentation material provide distribution software provide copyright holder express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall freebsd project contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage
C C++;https://github.com/sahaRatul/sela;sela simple lossless audio license lossless audio codec aim simple possible still good enough compression ratio quality metric reliability maintainability security line requirement cmake msvc gcc clang intel compiler support work libao dev linux bsd window skip dependency current status task status encoder decoder read write wav read write sela multithreaded encode decode player metadata support todo seektable support todo support bite audio todo optimization todo block diagram understand core algorithm see frame namespace frame namespace utilize math implement lpc rice namespaces reference linear prediction digital signal process john proakis dimitris detail golomb rice lossless compression algorithm flac shorten original open source lossless codec ftp svr ftp eng cam pub report robinson_tr156 iso iec part subpart audio lossless cod note get legacy switch legacy branch also check java version codec
C C++;https://github.com/horde3d/Horde3D;horde3d horde3d render engine write effort lightweight conceptually clean possible horde3d require fully opengl compatible graphic card term directx mean card support least shader high mobile operate system android opengl capable device require feature modern cross platform shader base architecture require opengl lightweight non intrusive design dependency avoid complexity possible style api easy usage virtually program language resource management garbage collect resource load virtually type stream hot reload resource increase productivity development access vertex collision detection interoperability physic engine ubershader base customizable render pipeline hot reload pipeline rapid test different render technique support post process effect like bloom dof motion blur support almost forward defer high dynamic range render technique support real time reflection technique require several camera support geometry tessellation compute shaders real time shadow parallel split shadow map pssm particle system cast shadow effect like motion blur unify scene system world skeleton scene nod instead special object frustum cull base spatial graph hardware occlusion cull level detail geometry material unify low level animation system key frame animation joint mesh skeletal animation weight per vertex articulate layer animation blend mix mask additive channel morph target facial animation lip synchronization access joint dynamic animation ragdoll physic content pipeline mixture binary xml format best tradeoff performance productivity pipeline material scene description xml animation binary maximum performance texture common image format png jpeg etc collada converter import asset many common dcc tool calculation tangent space basis normal map optimization geometry gpu post transform vertex cache editor compose scene develop shaders render technique need compiler cmake instal cmake window linux macos cmake meta system create makefiles visual studio generator main way cmake cmake gui interface ccmake curse interface cmake commandline interface instruction commonly generator open cmakelists txt new project follow instruction hit visual start cmake gui choose ogdf source path path press generate open horde3d sln start compile could also generate solution command line mkdir cmake visual studio xyz xyz correct identifier desire version visual studio etc please cmake help info open terminal navigate repository mkdir xcode xcode cmake xcode open generate project inside xcode open terminal navigate repository mkdir make make cmake unix makefiles make hint export job max speed thing open terminal navigate repository mkdir ninja ninja cmake ninja ninja sample order sample need default present system default version automatically link could force behavior horde3d_force_download_glfw flag cmake directory cmake dhorde3d_force_download_glfw sdl horde3d_force_download_sdl flag cmake directory cmake dhorde3d_force_download_sdl debian ubuntu platform also need follow package sudo apt get xorg dev could also skip sample horde3d_build_examples flag cmake directory cmake dhorde3d_build_examples android android require system cmake gradle gradle project include horde3d distribution requirement android android java runtime android studio recommend require cmake gui usage recommend follow instruction depend gui select horde3d source folder folder cmake intermediate binary would store hit add entry button add new cmake variable android_abi test value arm64 v8a hit add entry button add new cmake variable android_platform test value android hit add entry button add new cmake variable android_dl_library cmake may incorrectly specify libdl instead libdl lead problem libsdl manually please set path android ndk toolchains llvm prebuilt sysroot usr lib aarch64 linux android libdl platform window x86_64 linux x86_64 version android target api version hit configure button create folder ask select unix makefiles specify toolchain cross compile select toolchain locate android ndk cmake android toolchain cmake window cmake may able find make exe program ndk please specify make program cmake_make_program field set android ndk prebuilt window x86_64 bin make exe horde3d submenu select opengl es3 render backend deselect gl2 gl4 backends sdl2 please specify sdl2 submenu path include library libsdl2 sdl2 also automatically horde3d please select horde3d_force_download_sdl horde3d submenu set cmake_build_type either debug release wish specify signer key release android apk otherwise would ask debug require key would generate android studio specify android_apk_signer_keystore path keystore android_apk_signer_keystore_pass keystore password android_apk_signer_key_pass key password specify android_sdk_root_path path android sdk require linux specify android_sdk_build_tools_path correct release path signature tool default path android sdk tool generate make window open cmd exe create folder full path make exe launch process android ndk prebuilt window x86_64 bin make exe linux open terminal create folder type make please note parameter multithreaded compilation require input android_apk_signer_keystore_pass android_apk_signer_key_pass cmake otherwise get compilation error apk sign process currently support macos iphone target support ipad tvos test new version cmake recommend cmake test work correctly requirement sdl cmake gui usage recommend follow instruction depend gui sdl require sample automatic disable sdl fail cmake horde3d_force_download_sdl effect please sdl manually xcode project locate xcode sdl setting set enable bitcode option select horde3d source folder folder cmake intermediate binary would store select toolchain locate buildtools toolchain cmake hit configure button check horde3d_use_gles3 flag uncheck horde3d_use_gl2 horde3d_use_gl4 flag set sdl2 include path include sdl library generate libsdl2 usually locate user library developer xcode deriveddata sdl product debug iphoneos libsdl2 category set ios_code_sign_identity ios_development_team property detail check value parameter provide hit generate button xcode project generate launch get development team application utility keychain access login keychain certificate category scroll find development distribution certificate something like apple development double click certificate organizational unit team please note particlevortex tessellator sample opengl available horde3d scene editor also scene editor available horde3d enable editor first make sure new sdk instal enable create makefiles editor via cmake set horde3d_build_editor flag default cmake dhorde3d_build_editor editor need lua dependency either make sure lua development find cmake lua automatically cmake next quick link help get start introduction reference community community license horde3d license eclipse public license epl quite liberal license restriction popular lgpl basically allow horde3d free commercial project long contribute improvement like bug fix optimization refactorings back community epl allow static link viral hence affect module application
C C++;https://github.com/libav/libav;libav libav collection library tool process multimedia content audio video subtitle relate metadata library libavcodec provide wide range codecs libavformat implement stream protocol container format basic access libavutil include hashers decompressors miscellaneous utility function libavfilter provide mean alter decode audio video chain filter libavdevice provide abstraction access capture playback device libavresample implement audio mix resampling routine libswscale implement color conversion scale routine tool command line toolbox manipulate convert stream multimedia content minimalistic multimedia player simple analisys tool inspect multimedia content additional small tool aviocat ismindex faststart documentation offline documentation available doc directory online documentation available main conding available doc directory license libav codebase mainly lgpl license optional component license gpl please refer license detail information
C C++;https://github.com/brofield/simpleini;simpleini test test cross platform library provide simple api read write ini style configuration support ascii mbcs unicode design explicitly portable platform test window wince linux release open source free mit licence feature summary mit licence allow free software include gpl commercial multi platform window window window linux unix load save ini style configuration configuration newline format platform liberal acceptance format key value section key value removal whitespace around section key value support multi line value value embed newline character optional support multiple key name optional case insensitive section key ascii character save section key order load preserve comment section key possible support char wchar_t program interface support mbcs system locale utf encode system locale need utf linux unix load utf support non ascii character section key value comment support non standard character type encode via user write converter class support add modify value programmatically compile warn compiler documentation full documentation interface available doxygen format snippet include distribution automatic test snippet cpp simple usage load get section key get value modify delete save
C C++;https://github.com/rxi/dyad;overview dyad asynchronous library aim lightweight portable easy create small standalone server provide support exist project get start dyad src dyad raw dyad src dyad raw drop exist project window also link ws2_32 overview api find doc api doc api usage find server simple server listen port echo whatever send client simple program connect server print response license library free software redistribute modify term mit license see license license detail
C C++;https://github.com/rbock/sqlpp11;sqlpp11 type safe embed domain specific language sql query documentation find doc doc home sql strongly type language still interface sql base construct query string interpret array map string sqlpp11 templated library represent embed domain specific language edsl allow define type represent table column construct type safe query check compile time syntax error type error name error even semantic error interpret iterate query specific structs appropriately name type member several benefit library user operate comfortably structs function compiler report many kind error long enter unit test production library hide gory detail string construction query interpret return select call library support static dynamic query former offer great benefit term type consistency check latter make easy construct query flight sqlpp11 core vendor neutral specific trait database unsupported non standard feature handle connector library connector library inform developer miss feature compile time also interpret expression specifically need connector could operator concat method string concatenation without developer require change statement connector mariadb mysql postgresql sqlite3 sqlcipher include repository library already production certainly complete yet feature request bug report contribution documentation welcome let assume table class represent something like assume database connection object license sqlpp11 distribute bsd clause status branch compiler clang gcc msvc test coverage master coverage develop coverage additional information available past talk sqlpp11 cod concept within library prune error message template sqlpp11 sqlpp11 sql library worthy modern meet sqlpp11 edsl type safe sql select template toffee sqlpp11 part part requirement __compiler sqlpp11 make heavy require recent compiler stl follow compiler know compile test program clang ubuntu ubuntu cygwin 64bit debian unstable xcode msvc update window server __database connector sqlpp11 require certain api order connect database see database api repository include follow connector mysql mariadb sqlite3 sqlcipher postgresql connector find odbc experimental __date library sqlpp11 require howard hinnant date date date_time type default sqlpp11 fetchcontent pull library automatically project want already instal version library find_package set use_system_date option note depend lib might need see basic usage __build source unpack late release clone repository inside directory follow command last step library system wide therefore might need admins right default core library instal also connector set appropriate variable build_mysql_connector build_mariadb_connector build_postgresql_connector build_sqlite3_connector build_sqlcipher_connector library check require dependency instal system connector instal even dependency yet available system set dependency_check core library sqlite3 connector postgresql connector check dependency sqlite3 instal test __install via homebrew macos connector instal formula see brew info marvin182 zapfhahn sqlpp11 available option __build via vcpkg sqlpp11 dependency manager sqlpp11 port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository follow connector library sqlpp11 maintain separate package vcpkg basic usage __use cmake__ library officially support way cmake find method folder fetchcontent recommend installation require findpackage installation require see method provide sqlpp11 sqlpp11 target well target connector sqlpp11 mysql sqlpp11 mariadb sqlpp11 sqlite3 sqlpp11 sqlcipher sqlpp11 postgresql target make sure require dependency available correctly link include directory set correctly __create ddl files__ create header provide script case get note unsupported column type take look datatypes sqlpp11 data_types hard implement include generate header mytable prefer ruby might want take look contact issue email rbock eudoxos dot join chat
C C++;https://github.com/scylladb/seastar;seastar license n00b introduction seastar event drive framework allow write non block asynchronous relatively straightforward manner understand base seastar detail alternative work flow read hack hack assume would like system package rpm deb seastar dependency first configure release mode compile miss dependency seastar possible configuration process fetch version dependency locally development fetch fmt locally configure seastar like cook repeat many time select multiple dependency mode configure script wrapper around cmake mode argument map cmake_build_type support follow mode cmake mode debug info optimi zations sanitizers allocator check debug debug yes asan ubsan system gdb release relwithdebinfo yes none seastar assert production dev dev custom none seastar assert test cycle sanitize sanitize custom yes asan ubsan system second level test track bug note seastar sensitive allocator optimization usual quick rule thumb relative performance release time fast dev time fast sanitize time fast debug seastar directory without installation possible consume seastar directly directory cmake pkg config assume seastar repository locate directory seastar_dir via pkg config cmake seastar package cmakelists txt my_app cmake_prefix_path value ensure cmake locate seastar compile submodules cmake_module_path value ensure cmake seastar cmake script locate dependency instal seastar also consume seastar instal system important seastar work customize version dpdk default dpdk submodule build_dir _cooking instal first configure installation path target consume pkg config consume cmakelists txt simple cmake invocation seastar instal standard location like usr usr local invoke cmake dcmake_prefix_path my_install_root also instruction host support docker doc docker optional doc dpdk seastar dialect seastar support default late dialect support compiler explicitly select dialect configure option dialect gnu cmake directly set seastar_cxx_dialect cmake variable see compatibity statement doc compatibility information get start mini tutorial doc mini tutorial comprehensive doc tutorial documentation available resource ask question post patch development mail list subscription information archive available send email seastar dev googlegroups com information find main project bug report project issue native tcp stack seastar come userspace tcp stack doc native stack good performance recommend hardware configuration seastar cpu much need seastar highly friendly multi core numa nics fast possible recommend 10g 40g card possible may limit capacity addition hardware queue per cpu good seastar otherwise emulate software disk fast ssds high number iop client machine usually single client machine load server memaslap memcached wrk load match server counter part recommend client different machine server several project seastar driver cassandra scylla base seastar framework web framework write base seastar framework kafka replacement mission critical system fast reliable nosql store compatible cassandra dynamodb fast rpc west
C C++;https://github.com/vanderlin/ofxBox2d;ofxbox2d introduction simple wrapper box2d openframeworks still progressive stable part please open issue suggestion find bug wrapper version box2d thank todd installation first pick branch match version openframeworks instruction make vector object need careful either need make vector pointer shared_ptr object everytime push vector circle object destroy create cause issue b2dbody body object box2d incorrect way store object create vector box2d object installation place ofxbox2d within folder apps folder dir tree openframeworks addons ofxbox2d compatibility ofxbox2d develop current version openframewroks stable version openframeworks want git tag ofxbox2d version select tag github current branch menu clone check git follow command clone ofxbox2d switch tag version git clone git github com vanderlin ofxbox2d git ofxbox2d git checkout
C C++;https://github.com/jorgen/json_struct;structurize json json_struct single header library parse json structs class serialize structs class json intend copy json_struct include folder include path project json_struct need serialize deserialize json structure dependent feature test new version gcc clang also test new structs json_struct parse json automatically populate structure content add metadata structs parse structure define like populate struct would look like serialize struct json could like map sometimes structure json dependent value json say input json describe transportation vehicle look something like could look like fit well static nature json_struct however possible parse json map structure query child member dispatch conversion appropriate type parse json map map let query map contain member enable convert member type convert vehicletype inspect value type child cast entire object desire type cast function signature castto casttovalue castto return value type however object already allocate need populate casttotype casttotype add bonus need specify template type since deduce parameter cast whole object semantics miss name parameter demystify macro js_obj macro add static meta object struct class affect semantics size struct class automatically apply another macro member argument get name member pointer macro verbose give flexibility js_object macro require member pas js_member macro macro apply would look like add value say want different json key member name maybe want add alias key could like difference _with_name _aliases macro _with_name macro ignore member name supply name alias add list name check name member check possible js_member macro js_obj macro since try apply js_member macro twice member typehandler object meta information generate js_obj js_object macro might type fit meta information interface json object type possible define specific class serialize deserialized typehandler interface parsecontext try parse type look template specialisation type number predefined template specialisation type std string double float uint8_t int16_t uint16_t int32_t uint32_t int64_t uint64_t std unique_ptr bool std vector often necessary need define serialization deserialization like give complete control serialization deserialization type unfold json object array need information checkout look complete unit test
C C++;https://github.com/trytouca/touca-cpp;touca sdk support late documentation touca help understand true impact day day change behavior performance overall software write touca touca sdks let describe behavior performance capture value interest variable runtime important function remotely compare description trust version software visualize difference report near real time sneak peak thorough guide touca sdk check directory visit documentation let imagine want test software workflow report whether give number prime unit test hard set input number list expect return value input input output test number boolean test video compression algorithm may video case describe expect output give video would difficult make change compression algorithm accurately reflect change expect value would time consume would need large number input video gain confidence algorithm work correctly touca make easy continuously test workflow complexity number test case touca test main difference compare typical unit test fully decouple test input test logic refer input test case sdk retrieve test case command line remote touca server feed test remove concept _expected values_ touca describe _actual_ behavior performance test capture value interest variable runtime important function anywhere within test case sdk submit description remote server compare description trust version server visualize difference report near real time touca test number input command line touca_api_key touca_api_url obtain touca server command produce follow output feature touca effective address common problem follow situation need test workflow large number input output workflow complex difficult describe unit test interest information check regression expose interface workflow fundamental design feature touca highlight early help test workflow scale decouple test input test logic help manage long list input without modify test logic manage list remote server accessible member team help add note test case explain need track performance change time submit test remote server instead store help avoid mundane task manage process touca server retain test make accessible member team compare test original type report discover difference real time interest member team allow audit software evolve time provide high level information test documentation new touca best place start quickstart documentation website information sdk see sdk wait start write first test touca see api integration touca cmake high conan see section documentation website requirement formally support high standard window linux macos platform test library follow compiler compiler min version x86 gcc x86 clang x64 msvc ask help want touca work well need help question like provide feedback send note intercom email license repository release apache license see
C C++;https://github.com/RSIA-LIESMARS-WHU/LSHBOX;lshbox toolbox locality sensitive hash large scale image retrieval also support matlab change log new lsh method mean base double bite quantization hash kdbq add lshbox july 4th implement kdbq also provide matlab interface interface add lshbox late relate kdbq update synchronously new lsh method double bite quantization hash dbq add lshbox june 4th implement dbq also provide matlab interface interface add lshbox late relate dbq update synchronously chapter introduction locality sensitive hash lsh efficient method large scale image retrieval achieve great performance approximate near neighborhood search lshbox simple robust toolbox provide several lsh algrithms addition integrate matlab language follow lsh algrithms implement lshbox lsh base random bit sample random hyperplane hash lsh base thresholding lsh base stable distribution spectral iterative itq double bite quantization hash dbq mean base double bite quantization hash kdbq repository compilation performance test 3rdparty lshbox compilation lshbox sample performance test addition base itq lshbox part depend think compiler support feature test lshbox vs2010 window 32bit 64bit linux mac test future hope people join test contribute algrithms please feel free contact tanggefu gmail com 20288ly sina xiaozf gmail com question chapter compilation lshbox write also easily many context matlab bind provide toolbox lshbox simple easy want integrate lshbox application need compile need add include directory modify program search path library directly matlab want test contribute cross platform open source system usded tool purpose cmake cmake case want need compile matlab please delete comment last line cmakelists txt find compile progress must rely boost library part library detail information view document compilation create new directory name main directory choose appropriate compiler switch directory finally execute follow command accord machine window linux chapter usage chapter contain small lshbox library different program language matlab get sample audio link invalid also get follow command line tool note1 project format input audio float type binary text binary many advantage lshbox tool create_test_data cpp create binary unsigned type process find binary organize follow format byte type size vector dimension vector binary vector arrange turn application also transform binary format note2 addition center important note window module name pylshbox linux libpylshbox matlab ever find empty string matlab fact save index pas name like follow find next query speed fast first index matlab chapter algorithm lshbox base many approximate near neighbor scheme follow brief description algorithm parameter locality sensitive hash scheme base random bit sample reference parameter accord second assumption coordinate point positive integer although convert coordinate integer multiply suitably large number round near integer think fussy often get criticize much memory large range therefore recommend algorithm locality sensitive hash scheme base random hyperplane reference parameter locality sensitive hash scheme base thresholding reference parameter locality sensitive hash scheme base stable distribution reference parameter spectral hash reference parameter iterative quantization reference parameter double bite quantization hash reference parameter mean base double bite quantization hash reference parameter accord test double bite quantization hash iterative quantization performance good superior scheme iterative quantization get high query accuracy minimum cost double bite quantization hash achieve good query accuracy
C C++;https://github.com/facebook/wdt;wdt_logo png wdt warp speed transfer join chat design philosophy overview goal low possible total transfer time hardware limit disc bandwidth latency efficient possible low cpu memory resource utilization keep dependency minimal order maximize portability ensure small binary size bonus also minimize compile time exception performance reason exception would make hard reason control flow library also believe wdt library easy integrate philosophy write moderately structure encapsulate oppose every feature try minimize number system call reason block thread maximize system throughput give point thread read others write buff path keep subsystem busy minimize kernel userspace switch terminology wdt mbytes everywhere output byte byte technically new mebibyte mib standard felt mbytes line tool clear easy read match traditional megabyte mean historical memory unit address line binary thus power wdt primarily library also small command line tool test useful quick note simple lot small usr bin linux distribution much 5gbyte maximum speed good would still tcp ramp time even though fast parallelization like production case performance internal facebook transfer rocksdb snapshot host able transfer throttle mbytes sec even across long distance high latency link sweden oregon speed previous highly optimize http base solution strain system throttle able easily saturate gbit nic get near theoretical link speed gbytes sec far optimize wdt server fast particular flash card memory read write disk throughput good plan optimize disk well future dependency cmake wdt see gflags google flag library command line library depend gtest google test test glog google log library log macro everything log wdt always prefix wdt help embed another service part facebook folly open source library set cmakefile mostly conv threadlocal checksum support encryption crypto lib part openssl embed wdt library little compiler glog could macro away glog replace print stderr need layout directory top level main wdt class wdt command line source cmakelists txt util utility implement main object test test script relate script utils fbonly stuff specific facebook open source version bench benchmark generation tool main cmakelists txt travis yml travis_linux travis_osx definition cmake generate makefile project favorite ide detail wdtcmdline cpp main program allow server client process exercise library end end test well standalone utility wcp script wdt like scp single big pending split support inside wdt proper script split wcp wdtoptions cpp specify behavior wdt wdt library caller get mutable object option set different option accordingly wdt standalone mode behavior change gflags wdtcmdline cpp wdtthread cpp common functionality setting senderthread receiverthread kind thread inherit base class wdtbase cpp common functionality setting sender receiver wdtresourcecontroller cpp optional factory sender receiver limit number create produce send bytesource interface element send transfer filebytesource cpp concrete subclass bytesource identify relative path root dir identifier path send remotely relative path sourcequeue interface produce next bytesource send directorysourcequeue cpp concrete sourcequeue produce give directory sort decrease size discover start pull queue even find return current large threadtransferhistory cpp every thread maintain transfer history connection break talk receiver find history send class encapsulate logic bookkeeping senderthread cpp implement functionality sender thread bind certain port send sender cpp spawn multiple senderthread thread send across receiver consume receive filecreator cpp create directory necessary say mkdir like receiverthread cpp implement functionality receiver thread responsible listen port receive receiver cpp parent receiver class spawn multiple receiverthread thread receive remote host low level block serversocket cpp encapsulate server socket listen port give descriptor communicate client clientsocket cpp client socket wrapper connection server port protocol cpp decode encode meta information need interpret stream path size byte length socketutils cpp common socket relate utility client server sender receiver side throttler cpp throttle errorcodes header error cod report cpp class represent transfer stats report future development extensibility current work well high efficiency also extensible implement different byte source insert process unit easy plan restructure copy stream buff pipeline maintain efficiency best overall total transfer time time first byte see wdt internal architecture chainable unit disk flash storage compression protocol handle encryption reverse chain receive write end trick variable length input unit change length need process thing block constraint design lock contention possible hard limit memory minimal number copy move memory around still work simple read control write sock current basic possible solution api double link list unit read pull leave pull push right push end stream leave propagate last byte right still fully synchronous block work thank eof handle synchronous give lock free single thread internally unit free parallelization like compression stage likely want need another thing touch process chunk order change header fileid offset size instead filename size assume everything follow continuous block also help case small number large chunk mmap target destination issue create order similar directory creation problem could meta info channel avoid lock contention require synchronization want thing work even second latency without incur second delay send first payload byte submit diffs make change see contribute please test ideally also manual test integration port upcoming wdt_e2e_test wdt_download_resumption_test wdt_network_test wdt_max_send_test facebook make sure follow arc diff check output last step make sure still mbytes sec may need make sure dev shm mostly empty get best memory throughput well ton random process test also update make sure diff task put relevant log output sender receiver diff test plan comment depend change perf wdt wdt_e2e_test mix gbytes sec remote test wdt wdt_remote_test profiler check profile wdt fbonly wdt_prof 80k small gbyte sec
C C++;https://github.com/cossacklabs/themis;themis provide strong usable cryptography busy people general purpose cryptographic library storage message swift android java kotlin react native android desktop java node ruby php rust wasm perfect fit multi platform apps hide cryptographic detail make cryptographer developer themis themis open source high level cryptographic service library secure authentication storage message exchange etc themis solve typical protection case common apps themis help simple complex cryptographic feature easily quickly securely themis allow developer focus main thing develop application case themis solve encrypt store secret apps backend api key session token encrypt sensitive field store database application side field level encryption support searchable encryption tokenisation mask themis exchange secret securely share sensitive party simple chat app patient doctor end end encryption scheme centralise decentralise architecture encrypt locally app encrypt everywhere decrypt authenticate user maintain real time secure session send encrypt message control connect device app receive real time sensitive apps backend compare secret party without reveal knowledge proof base authentication cryptographic library fit themis best fit multi platform apps android electron app node backend provide compatible api work way across support platform cryptosystems themis provide ready make block simplify usage core cryptographic security operation themis provide important cryptographic service secure multi mode cryptographic container suitable store anything encrypt database record format preserve string secure cell around aes gcm aes ctr secure simple encrypt message solution wide scope application exchange key party good pair underlie cryptosystems ecc ecdsa rsa pkcs secure session orient encrypt exchange forward secrecy good security guarantee demand infrastructure secure session perfectly function socket encryption session security high level message primitive additional infrastructure like pki ecdh key agreement ecc aes encryption secure knowledge proof base cryptographic protocol authentication compare secret create themis product top installation refer page themis mobile web desktop server side application highly recommend installation instead source language themis available follow language platform refer language platform documentation version react native android react native swift macos swift objective macos objective java desktop java desktop java java android java android android kotlin android java android android ruby ruby php php cpp node javascript node webassembly javascript webassembly rust rust pnacl google chrome webthemis availability themis support follow cpu architecture x86_64 i386 arm apple silicon arm64 various android architecture verify themis late stable version debian centos ubuntu macos android window experimental msys2 support plan expand list broad set platform would like help improve bring themis favourite platform language get touch mailto dev cossacklabs com documentation documentation contain ever evolve official doc cover everything deployment guideline case brief explanation cryptosystems architecture behind main themis library refer documentation cryptography themis cryptosystems attack cryptography key management fips debug troubleshoot command line thread migration guideline themis themis themis themis themis development security community behind contribute credit honorable project workshop cryptography themis rely prove cryptographic algorithm implement well know cryptography library openssl libressl boringssl refer cryptograhy doc distribution include cryptographic software country currently reside may restriction import possession export another country encryption software encryption software please check country law regulation policy concern import possession export encryption software see permit see information government department commerce bureau industry security classify software export commodity control number eccn 5d002 include information security software perform cryptographic function asymmetric algorithm form manner distribution make eligible export license exception enc technology software unrestricted tsu exception see export administration regulation section object source submit apps app store application themis want submit apple app store certain requirement towards declare cryptography read apple export regulation cryptography find security change themis core library review approve internal team cryptographer security engineer every release perform internal audit cryptographer work themis lot automate security test static analyser fuzzing tool memory analyser unit test per platform integration test find compatibility issue different themis support language x86 x64 architecture read security test practice themis security believe find security relate issue please drop email dev cossacklabs com mailto dev cossacklabs com bug bounty program may apply gdpr hipaa ccpa cryptographic service library mobile server platform themis state encryption tool provide secure exchange storage themis reach good compliance current privacy regulation general protection regulation hipaa health insurance portability accountability dpa protection ccpa california consumer privacy read doc community themis recommend encryption library mobile platform themis widely non commercial commercial project public application library find want feature blog list contributor write mailto dev cossacklabs com project create themis contribute look something contribute gain eternal respect pick thing list head contribution start point support themis numerous platform hard work try best make themis convenient everyone issue user encounter connect installation process dependency management face challenge please let commercial support cossack lab offer professional support service themis application themis support include limit library integration focus web mobile application design end end encryption scheme mobile application security audit house library integration high level protocol custom application development require cryptography consult drop email info cossacklabs com mailto info cossacklabs com check cossack lab cybersecurity contact want ask technical question report bug suggest feature feel free start discussion raise issue issue write dev cossacklabs com mailto dev cossacklabs com talk business wing cossack lab limit drop email info cossacklabs com mailto info cossacklabs com twitter dev medium close pull request bitcode relate
C C++;https://github.com/pytorch/pytorch;pytorch pytorch package provide high level feature tensor computation like numpy strong gpu acceleration deep neural tape base autograd system reuse favorite package numpy scipy cython extend pytorch need trunk health continuous integration signal find pytorch pytorch gpu ready tensor library gpu ready tensor library dynamic neural tape base autograd dynamic neural tape base autograd first first imperative experience imperative experience fast lean fast lean extension without pain extension without pain installation installation binary binary nvidia jetson platform nvidia jetson platform source source dependency dependency get pytorch source get pytorch source pytorch pytorch adjust option optional adjust option optional docker image docker image pre image pre image image image documentation documentation previous version previous version get start get start resource resource communication communication release contribute release contribute team team license license pytorch granular level pytorch library consist follow component component description tensor library like numpy strong gpu support tape base automatic differentiation library support differentiable tensor operation torch compilation stack torchscript create serializable optimizable pytorch neural library deeply integrate autograd design maximum flexibility multiprocessing magical memory share torch tensor across process useful load hogwild dataloader utility function convenience usually pytorch either replacement numpy power gpus deep research platform provide maximum flexibility speed elaborate gpu ready tensor library numpy tensor ndarray tensor illustration doc source _static img tensor_illustration png pytorch provide tensor live either cpu gpu accelerate computation huge amount provide wide variety tensor routine accelerate fit scientific computation need slice index math operation linear algebra reduction fast dynamic neural tape base autograd pytorch unique way neural replay tape recorder framework tensorflow theano caffe cntk static view world neural reuse structure change way behave mean start scratch pytorch technique call reverse mode auto differentiation allow change way behave arbitrarily lag overhead inspiration come several research topic well current past work etc technique unique pytorch fast date get best speed flexibility crazy research dynamic first pytorch bind monolithic framework deeply integrate naturally like would etc write new neural layer favorite library package goal reinvent wheel appropriate imperative experience pytorch design intuitive linear think easy execute line get execute asynchronous view world drop debugger receive error message stack trace understand straightforward stack trace point exactly define hope never spend hour debug bad stack trace asynchronous opaque execution engine fast lean pytorch minimal framework overhead integrate acceleration library intel nvidia maximize speed core cpu gpu tensor neural backends mature test year hence pytorch quite fast whether small large neural memory usage pytorch extremely efficient compare torch alternative write custom memory allocator gpu make sure deep maximally memory efficient enable big deep extension without pain write new neural module interfacing pytorch tensor api design straightforward minimal abstraction write new neural layer torch api favorite numpy base library want write layer provide convenient extension api efficient minimal boilerplate wrapper need write see tutorial installation binary command binary via conda pip wheel website nvidia jetson platform wheel nvidia jetson nano jetson tx2 jetson agx xavier available via follow url stable binary roll weekly binary require jetpack maintain source instal source need late compiler also highly recommend instal environment get high quality blas library mkl get control dependency version regardless linux distro instal instruction want compile cuda support nvidia nvidia compatible cuda note could refer cudnn support cudnn version various support cuda cuda driver nvidia hardware want disable cuda support export environment variable use_cuda potentially useful environment variable may find setup nvidia jetson platform jetson nano tx1 tx2 agx xavier instruction pytorch jetson nano available want compile rocm support amd installation rocm currently support linux system want disable rocm support export environment variable use_rocm potentially useful environment variable may find setup dependency common linux macos window get pytorch source pytorch linux note compile rocm must command first note may experience error cause linker cause conda environment shadow system new version fix issue recommend version macos cuda support macos window choose correct visual studio version sometimes regression new version visual studio best visual studio version pytorch pytorch visual buildtools come visual studio enterprise professional community edition also tool tool come visual studio default want legacy please refer legacy cpu fairly easy cpu note openmp desire openmp intel openmp iomp order link iomp need manually library set environment tweak cmake_include_path lib instruction set mkl intel openmp without configuration cmake microsoft visual openmp runtime vcomp cuda need pytorch cuda nvtx part cuda distributive call nsight compute onto already instal cuda cuda installation check correspond checkbox make sure cuda nsight compute instal visual studio currently ninja support generator cmake ninja exe detect path ninja default generator otherwise ninja select generator late msvc get select underlie toolchain additional library onednn mkldnn often need please refer refer script environment variable configuration adjust option optional adjust configuration cmake variable optionally without first follow adjust pre detect directory cudnn blas step linux macos docker image pre image also pull pre docker image docker hub docker v19 please note pytorch share memory share process torch multiprocessing multithreaded loader default share memory segment size container enough increase share memory size either ipc host shm size command line option nvidia docker image note must docker version dockerfile supply image cuda support cudnn pas python_version make variable specify version miniconda leave unset default documentation documentation various format need readthedocs theme documentation make doc folder make get list available output format get katex error npm katex persist try npm katex previous version installation instruction binary previous pytorch version may find get start pointer get start tutorial get start understand easy understand pytorch across api resource pytorch pytorch pytorch intro deep pytorch intro machine pytorch deep neural pytorch pytorch pytorch pytorch communication forum discus research etc github issue bug report feature request issue rfcs thought etc slack pytorch host primary audience moderate experience pytorch user developer general chat online discussion collaboration etc beginner look help primary medium pytorch need slack invite please fill form newsletter noise way email newsletter important announcement pytorch sign facebook page important announcement pytorch brand guideline please visit website release contribute pytorch day release cycle major release please let know encounter bug appreciate contribution plan contribute back bug fix please without discussion plan contribute new feature utility function extension core please first open issue discus feature send without discussion might end reject might take core different direction might aware make contribution pytorch please see contribution page contribute team pytorch community drive project several skillful engineer researcher contribute pytorch currently maintain adam sam soumith gregory major contribution come talented individual various form mean non exhaustive grow list need mention trevor killeen sasank chilamkurthy sergey zagoruyko adam francisco massa alykhan tejani luca antiga alban desmaison andreas koepf jam bradbury zeming lin yuandong tian guillaume lample marat dukhan natalia gimelshein christian sarofeen martin raison edward yang zachary devito note project unrelated name hugh valuable contributor torch community help many thing torch pytorch license pytorch bsd style license find license license
C C++;https://github.com/CppCon/CppCon2018;cppcon presentation material canonical location presentation cppcon speaker submit material submit index material keynote concept future generic program keynote concepts_the_future_of_generic_programming concepts_the_future_of_generic_programming__bjarne_stroustrup__cppcon_2018 pdf bjarne stroustrup thought powerful simple keynote thoughts_on_a_more_powerful_and_simpler_cpp thoughts_on_a_more_powerful_and_simpler_cpp__herb_sutter__cppcon_2018 pdf herb sutter presentation little order delve stl sort algorithm presentation a_little_order_delving_into_the_stl_sorting_algorithms a_little_order_delving_into_the_stl_sorting_algorithms__fred_tingaud__cppcon_2018 pdf fred tingaud semi compile time map nearly overhead lookup presentation a_semi_compileruntime_map_with_nearly_zero_overhead_lookup a_semi_compileruntime_map_with_nearly_zero_overhead_lookup__fabian_renngiles__cppcon_2018 pdf fabian renn giles readme presentation a_semi_compileruntime_map_with_nearly_zero_overhead_lookup readme material presentation a_semi_compileruntime_map_with_nearly_zero_overhead_lookup allocator handle heap presentation an_allocator_is_a_handle_to_a_heap an_allocator_is_a_handle_to_a_heap__arthur_odwyer__cppcon_2018 pdf arthur dwyer apply best practice presentation applied_best_practices applied_best_practices__jason_turner__cppcon_2018 pdf jason turner avoid disaster strongly type presentation avoiding_disasters_with_strongly_typed_cpp avoiding_disasters_with_strongly_typed_cpp__arno_lepisk__cppcon_2018 pdf arno lepisk good machine large project presentation better_cpp_using_machine_learning_on_large_projects better_cpp_using_machine_learning_on_large_projects__nicolas_fleury_mathieu_nayrolles__cppcon_2018 pdf nicolas fleury mathieu nayrolles good tool clang toolbox presentation better_tools_in_your_clang_toolbox better_tools_in_your_clang_toolbox__victor_ciura__cppcon_2018 pdf victor ciura system simple solution complicate problem presentation build_systems_a_simple_solution_to_a_complicated_problem build_systems_a_simple_solution_to_a_complicated_problem__peter_bindels__cppcon_2018 pdf peter bindels reflection system weekend clang llvm presentation building_a_cpp_reflection_system_in_one_weekend_using_clang_and_llvm building_a_cpp_reflection_system_in_one_weekend_using_clang_and_llvm__arvid_gerstmann__cppcon_2018 pdf arvid gerstmann readme presentation building_a_cpp_reflection_system_in_one_weekend_using_clang_and_llvm readme multi million line project effortlessly meson system presentation building_multimillion_line_cpp_projects_effortlessly_with_the_meson_build_system building_multimillion_line_cpp_projects_effortlessly_with_the_meson_build_system__jussi_pakkanen__cppcon_2018 pdf jussi pakkanen class template argument deduction everyone presentation class_template_argument_deduction_for_everyone class_template_argument_deduction_for_everyone__stephan_t_lavavej__cppcon_2018 pdf stephan lavavej compile time regular expression presentation compile_time_regular_expressions compile_time_regular_expressions__hana_dusikova__cppcon_2018 pdf hana dusikova readme presentation compile_time_regular_expressions readme concept speak presentation concepts_as_she_is_spoke concepts_as_she_is_spoke__arthur_odwyer__cppcon_2018 pdf arthur dwyer cryptozoology compendium cryptic character presentation cpp_cryptozoology_a_compendium_of_cryptic_characters cpp_cryptozoology_a_compendium_of_cryptic_characters__adi_shavit__cppcon_2018 pdf adi shavit dependency management package consumption project development presentation cpp_dependency_management_from_package_consumption_to_project_development cpp_dependency_management_from_package_consumption_to_project_development__boris_kolpackov__cppcon_2018 pdf boris kolpackov everywhere webassembly presentation cpp_everywhere_with_webassembly cpp_everywhere_with_webassembly__damien_buhl__cppcon_2018 pdf damien buhl readme presentation cpp_everywhere_with_webassembly readme module presentation cpp_modules cpp_modules__nathan_sidwell__cppcon_2018 pdf nathan sidwell craft embed domain specific language edsl presentation crafting_embedded_domain_specific_language_in_cpp crafting_embedded_domain_specific_language_in_cpp__gilang_hamidy__cppcon_2018 pdf gilang hamidy material presentation crafting_embedded_domain_specific_language_in_cpp cuda kernel presentation cuda_kernels_with_cpp cuda_kernels_with_cpp__michael_gopshtein__cppcon_2018 pdf michael gopshtein deal aliasing contract presentation dealing_with_aliasing_using_contracts dealing_with_aliasing_using_contracts__gabor_horvath__cppcon_2018 pdf gabor horvath debug without presentation debug_cpp_without_running debug_cpp_without_running__anastasia_kazakova__cppcon_2018 pdf anastasia kazakova declarative style presentation declarative_style_in_cpp declarative_style_in_cpp__ben_deane__cppcon_2018 pdf ben deane design performance presentation design_for_performance design_for_performance__fedor_pikus__cppcon_2018 pdf fedor pikus package library write packagable library presentation dont_package_your_libraries_write_packagable_libraries dont_package_your_libraries_write_packagable_libraries__robert_schumacher__cppcon_2018 pdf robert schumacher pptx presentation dont_package_your_libraries_write_packagable_libraries dont_package_your_libraries_write_packagable_libraries__robert_schumacher__cppcon_2018 pptx pdf presentation dont_package_your_libraries_write_packagable_libraries dont_package_your_libraries_write_packagable_libraries__robert_schumacher__cppcon_2018 pdf dynamix new take polymoprhism presentation dynamix_a_new_take_on_polymoprhism dynamix_a_new_take_on_polymoprhism__borislav_stanimirov__cppcon_2018 pdf borislav stanimirov readme presentation dynamix_a_new_take_on_polymoprhism readme effective replacement dynamic polymorphism std variant presentation effective_replacement_of_dynamic_polymorphism_with_stdvariant effective_replacement_of_dynamic_polymorphism_with_stdvariant__mateusz_pusz__cppcon_2018 pdf mateusz pusz emulate nintendo generative declarative program action presentation emulating_the_nintendo_3ds_generative_and_declarative_programming_in_action emulating_the_nintendo_3ds_generative_and_declarative_programming_in_action__tony_wasserka__cppcon_2018 pdf tony wasserka enough string_view hang presentation enough_string_view_to_hang_ourselves enough_string_view_to_hang_ourselves__victor_ciura__cppcon_2018 pdf victor ciura fancy pointer fun profit presentation fancy_pointers_for_fun_and_profit fancy_pointers_for_fun_and_profit__bob_steagall__cppcon_2018 pdf bob steagall fast conversion utf dfas sse intrinsics presentation fast_conversion_from_utf8_with_cpp_dfas_and_sse_intrinsics fast_conversion_from_utf8_with_cpp_dfas_and_sse_intrinsics__bob_steagall__cppcon_2018 pdf bob steagall feather modern web development framework presentation feather_a_modern_cpp_web_development_framework feather_a_modern_cpp_web_development_framework__yu_qi__cppcon_2018 pdf metaprogramming trick elegance presentation from_metaprogramming_tricks_to_elegance from_metaprogramming_tricks_to_elegance__vincent_reverdy__cppcon_2018 pdf vincent reverdy get rich quick boost beast websockets presentation get_rich_quick_using_boostbeast_websockets_and_networking_ts get_rich_quick_using_boostbeast_websockets_and_networking_ts__vinnie_falco__cppcon_2018 pdf vinnie falco readme presentation get_rich_quick_using_boostbeast_websockets_and_networking_ts readme git cmake conan ship reuse project presentation git_cmake_conan_how_to_ship_and_reuse_our_cpp_projects git_cmake_conan_how_to_ship_and_reuse_our_cpp_projects__mateusz_pusz__cppcon_2018 pdf mateusz pusz argue ment presentation how_to_arguement how_to_arguement__richard_powell__cppcon_2018 pdf richard powell implement cpp core guideline lifetime safety profile clang presentation implementing_the_cpp_core_guidelines_lifetime_safety_profile_in_clang implementing_the_cpp_core_guidelines_lifetime_safety_profile_in_clang__matthias_gehre_gabor_horvath__cppcon_2018 pdf matthias gehre gabor horvath inside visual parallel algorithm presentation inside_visual_cpps_parallel_algorithms inside_visual_cpps_parallel_algorithms__billy_oneal__cppcon_2018 pdf billy neal pptx presentation inside_visual_cpps_parallel_algorithms inside_visual_cpps_parallel_algorithms__billy_oneal__cppcon_2018 pptx pdf presentation inside_visual_cpps_parallel_algorithms inside_visual_cpps_parallel_algorithms__billy_oneal__cppcon_2018 pdf readme presentation inside_visual_cpps_parallel_algorithms readme late great visual studio family developer presentation latest_and_greatest_in_the_visual_studio_family_for_cpp_developers_2018 latest_and_greatest_in_the_visual_studio_family_for_cpp_developers_2018__steve_carroll_marian_luparu__cppcon_2018 pdf steve carroll marian luparu liberate debug experience gdb api presentation liberating_the_debugging_experience_with_the_gdb_python_api liberating_the_debugging_experience_with_the_gdb_python_api__jeff_trull__cppcon_2018 pdf jeff trull make fixable prepare security vulnerability report presentation make_it_fixable make_it_fixable__patricia_aas__cppcon_2018 pdf patricia minidumps gdb compatible software control core dump presentation minidumps_gdbcompatible_software_controlled_core_dumps minidumps_gdbcompatible_software_controlled_core_dumps__matthew_fleming__cppcon_2018 pdf matthew fleming modern api design presentation modern_cpp_api_design_pt_1 modern_cpp_api_design_pt_1__titus_winters__cppcon_2018 pdf titus winter modern api design presentation modern_cpp_api_design_pt_2 modern_cpp_api_design_pt_2__titus_winters__cppcon_2018 pdf titus winter modern embed system saga continue presentation modern_cpp_in_embedded_systems_the_saga_continues modern_cpp_in_embedded_systems_the_saga_continues__michael_caisse__cppcon_2018 pdf michael caisse multi precision arithmetic cryptology time compile time presentation multiprecision_arithmetic_for_cryptology_in_cpp multiprecision_arithmetic_for_cryptology_in_cpp__niek_j_bouman__cppcon_2018 pdf niek bouman name arguements scratch presentation named_arguements_from_scratch named_arguements_from_scratch__richard_powell__cppcon_2018 pdf richard powell readme presentation named_arguements_from_scratch readme material presentation named_arguements_from_scratch oop dead long live orient design presentation oop_is_dead_long_live_dataoriented_design oop_is_dead_long_live_dataoriented_design__stoyan_nikolov__cppcon_2018 pdf stoyan nikolov operator overload presentation operator_overloading operator_overloading__ben_deane__cppcon_2018 pdf ben deane pessimistic program presentation pessimistic_programming pessimistic_programming__patrice_roy__cppcon_2018 pdf patrice roy rapid prototyping graphic shaders modern presentation rapid_prototyping_of_graphics_shaders_in_modern_cpp rapid_prototyping_of_graphics_shaders_in_modern_cpp__valentin_galea__cppcon_2018 pdf valentin galea regular type care presentation regular_types_and_why_do_i_care regular_types_and_why_do_i_care__victor_ciura__cppcon_2018 pdf victor ciura return value optimization hard look presentation return_value_optimization_harder_than_it_looks return_value_optimization_harder_than_it_looks__arthur_odwyer__cppcon_2018 pdf arthur dwyer sane safe class presentation sane_and_safe_cpp_classes sane_and_safe_cpp_classes__peter_sommerlad__cppcon_2018 pdf peter sommerlad save test playback base way presentation save_money_testing_code_the_playbackbased_way save_money_testing_code_the_playbackbased_way__william_clements__cppcon_2018 pptx william clements script speed think lua sol3 presentation scripting_at_the_speed_of_thought_using_lua_in_cpp_with_sol3 scripting_at_the_speed_of_thought_using_lua_in_cpp_with_sol3__jeanheyd_meneide__cppcon_2018 pdf jeanheyd meneide simplicity beginner presentation simplicity_not_just_for_beginners simplicity_not_just_for_beginners__kate_gregory__cppcon_2018 pdf kate gregory pdf presentation simplicity_not_just_for_beginners simplicity_not_just_for_beginners__kate_gregory__cppcon_2018 pdf pptx presentation simplicity_not_just_for_beginners simplicity_not_just_for_beginners__kate_gregory__cppcon_2018 pptx smart reference back presentation smart_references_there_and_back_again smart_references_there_and_back_again__erik_valkering__cppcon_2018 pdf erik valkering software vulnerability presentation software_vulnerabilities_in_c_and_cpp software_vulnerabilities_in_c_and_cpp__patricia_aas__cppcon_2018 pdf patricia standard library compatibility guideline presentation standard_library_compatibility_guidelines standard_library_compatibility_guidelines__titus_winters__cppcon_2018 pdf titus winter state machine battlefield naive stl boost presentation state_machines_battlefield_naive_vs_stl_vs_boost state_machines_battlefield_naive_vs_stl_vs_boost__kris_jusiak__cppcon_2018 pdf kris jusiak surprise object lifetime presentation surprises_in_object_lifetime surprises_in_object_lifetime__jason_turner__cppcon_2018 pdf jason turner teach old compiler new trick transpiling presentation teaching_old_compilers_new_tricks_transpiling_cpp17_to_cpp11 teaching_old_compilers_new_tricks_transpiling_cpp17_to_cpp11__tony_wasserka__cppcon_2018 pdf tony wasserka bit bit presentation the_bits_between_the_bits the_bits_between_the_bits__matt_godbolt__cppcon_2018 pdf matt godbolt execution presentation the_cpp_execution_model the_cpp_execution_model__bryce_adelstein_lelbach__cppcon_2018 pdf bryce adelstein lelbach embed device desk uefi application modern presentation the_embedded_device_under_your_desk_uefi_applications_with_modern_cpp the_embedded_device_under_your_desk_uefi_applications_with_modern_cpp__morris_hafner__cppcon_2018 pdf morris hafner valuable value presentation the_most_valuable_values the_most_valuable_values__juanpe_bolivar__cppcon_2018 pdf juanpe bolivar readme presentation the_most_valuable_values readme practice testable composable asynchronous presentation the_networking_ts_in_practice the_networking_ts_in_practice__robert_leahy__cppcon_2018 pptx robert leahy readme presentation the_networking_ts_in_practice readme material presentation the_networking_ts_in_practice salami method cross platform development presentation the_salami_method_for_cross_platform_development the_salami_method_for_cross_platform_development__adi_shavit__cppcon_2018 pdf adi shavit com object look presentation these_arent_the_com_objects_youre_looking_for these_arent_the_com_objects_youre_looking_for__victor_ciura__cppcon_2018 pdf victor ciura kill mock framework tool technique test callback standard presentation to_kill_a_mocking_framework to_kill_a_mocking_framework__alastair_rankine__cppcon_2018 pdf alastair rankine undefined behavior error presentation undefined_behavior_is_not_an_error undefined_behavior_is_not_an_error__barbara_geller_ansel_sermersheim__cppcon_2018 pdf barbara geller ansel sermersheim unwind stack explore exception work window presentation unwinding_the_stack_exploring_how_cpp_exceptions_work_on_windows unwinding_the_stack_exploring_how_cpp_exceptions_work_on_windows__james_mcnellis__cppcon_2018 pdf jam mcnellis mean say nothing presentation what_do_we_mean_when_we_say_nothing_at_all what_do_we_mean_when_we_say_nothing_at_all__kate_gregory__cppcon_2018 pdf kate gregory pptx presentation what_do_we_mean_when_we_say_nothing_at_all what_do_we_mean_when_we_say_nothing_at_all__kate_gregory__cppcon_2018 pptx pdf presentation what_do_we_mean_when_we_say_nothing_at_all what_do_we_mean_when_we_say_nothing_at_all__kate_gregory__cppcon_2018 pdf mean thread safe presentation what_do_you_mean_threadsafe what_do_you_mean_threadsafe__geoff_romer__cppcon_2018 pdf geoff romer pptx presentation what_do_you_mean_threadsafe what_do_you_mean_threadsafe__geoff_romer__cppcon_2018 pptx pdf presentation what_do_you_mean_threadsafe what_do_you_mean_threadsafe__geoff_romer__cppcon_2018 pdf expect next generation system presentation what_to_expect_from_a_nextgeneration_cpp_build_system what_to_expect_from_a_nextgeneration_cpp_build_system__boris_kolpackov__cppcon_2018 pdf boris kolpackov woe scope guard unique resource presentation woes_of_scope_guards_and_unique_resource woes_of_scope_guards_and_unique_resource__peter_sommerlad__cppcon_2018 pdf peter sommerlad write standard library compliant structure algorithm presentation writing_standard_library_compliant_data_structures_and_algorithms writing_standard_library_compliant_data_structures_and_algorithms__marc_gregoire__cppcon_2018 pptx marc gregoire lightning talk lunch session big infrastructure small scale lightning 20talks 20and 20lunch 20sessions big_infrastructure_at_a_small_scale big_infrastructure_at_a_small_scale__matthew_von_arx__cppcon_2018 pdf matthew von arx readme lightning 20talks 20and 20lunch 20sessions big_infrastructure_at_a_small_scale readme boost inject thing lightning 20talks 20and 20lunch 20sessions boost_di_inject_all_the_things boost_di_inject_all_the_things__kris_jusiak__cppcon_2018 pdf kris jusiak emacs bof lightning 20talks 20and 20lunch 20sessions emacs_bof emacs_bof__jeff_trull__cppcon_2018 org jeff trull fix phase initialization lightning 20talks 20and 20lunch 20sessions fixing_twophase_initialization fixing_twophase_initialization__andreas_weis__cppcon_2018 pdf andreas wei create slide cmake cmake lightning 20talks 20and 20lunch 20sessions how_to_create_slides_about_cmake_with_cmake how_to_create_slides_about_cmake_with_cmake__mateusz_pusz__cppcon_2018 pdf mateusz pusz signal coroutines lightning 20talks 20and 20lunch 20sessions qt_signals_and_the_coroutines_ts qt_signals_and_the_coroutines_ts__jeff_trull__cppcon_2018 pdf jeff trull rof_egnar lightning 20talks 20and 20lunch 20sessions rof_egnar rof_egnar__peter_sommerlad__cppcon_2018 pdf peter sommerlad set forget lightning 20talks 20and 20lunch 20sessions set_it_and_forget_it set_it_and_forget_it__matthew_von_arx__cppcon_2018 pptx matthew von arx study group cppcon report lightning 20talks 20and 20lunch 20sessions study_group_14_cppcon_report study_group_14_cppcon_report__john_mcfarlane__cppcon_2018 pdf john mcfarlane study group story far lightning 20talks 20and 20lunch 20sessions study_group_14_the_story_so_far study_group_14_the_story_so_far__john_mcfarlane__cppcon_2018 pdf john mcfarlane bad big wolf meet rid hood little red lightning 20talks 20and 20lunch 20sessions the_bad_big_wolf_meets_riding_hood_little_red the_bad_big_wolf_meets_riding_hood_little_red__borislav_stanimirov__cppcon_2018 pdf borislav stanimirov shape program lightning 20talks 20and 20lunch 20sessions the_shape_of_a_program the_shape_of_a_program__james_mcnellis__cppcon_2018 pdf jam mcnellis trivially relocatable lightning 20talks 20and 20lunch 20sessions trivially_relocatable trivially_relocatable__arthur_odwyer__cppcon_2018 pdf arthur dwyer poster task framework compile time dispatch type drive priority schedule hpc poster a_cpp_tasking_framework_with_compiletime_dispatching_and_typedriven_priority_scheduling_for_hpc a_cpp_tasking_framework_with_compiletime_dispatching_and_typedriven_priority_scheduling_for_hpc__david_haensel__cppcon_2018 pdf david haensel codechecker static analysis infrastructure llvm clang static analyzer tool chain poster codechecker_a_static_analysis_infrastructure_built_on_the_llvmclang_static_analyzer_tool_chain codechecker_a_static_analysis_infrastructure_built_on_the_llvmclang_static_analyzer_tool_chain__gyorgy_orban_tibor_brunner_gabor_horvath_reka_kovacs__cppcon_2018 pdf gyorgy orban tibor brunner gabor horvath reka kovacs codecompass open software comprehension framework poster codecompass_an_open_software_comprehension_framework codecompass_an_open_software_comprehension_framework__zolta_porkolab_tibor_brunner_marton_csordas_mate_cser a9p_anett_fekete_endre_fulop_gabor_horvath__cppcon_2018 pdf zoltan porkolab tibor brunner marton csordas mate cserep anett fekete endre fulop gabor horvath cpp taskflow fast parallel program task dependency graph poster cpptaskflow_fast_parallel_programming_with_task_dependency_graphs cpptaskflow_fast_parallel_programming_with_task_dependency_graphs__tsungwei_huang_chunxun_lin_guannan_guo_martin_wong__cppcon_2018 pdf tsung wei huang chun xun lin guannan guo martin wong ctwik hot reload quick system poster ctwik_hot_reloading_quickbuild_system ctwik_hot_reloading_quickbuild_system__mohit_saini__cppcon_2018 pdf mohit saini efficiently comprehensively reproduce bug report sciunit poster efficiently_and_comprehensively_reproducing_cpp_bug_reports_with_sciunit efficiently_and_comprehensively_reproducing_cpp_bug_reports_with_sciunit__zhihao_yuan_tanu_malik__cppcon_2018 pdf zhihao yuan tanu malik feedback practical std filesystem recursive_directory_iterator poster feedback_on_practical_use_of_cpp17_stdfilesystemrecursive_directory_iterator feedback_on_practical_use_of_cpp17_stdfilesystemrecursive_directory_iterator__noel_tchidjo_moyo__cppcon_2018 pdf noel tchidjo moyo fight non determinism compiler poster fighting_nondeterminism_in_cpp_compilers fighting_nondeterminism_in_cpp_compilers__mandeep_singh_grang__cppcon_2018 pdf mandeep singh grang fizz poster fizz_a_cpp14_implementation_of_tls_13 fizz_a_cpp14_implementation_of_tls_13__subodh_iyengar_kyle_nekritz__cppcon_2018 pdf subodh iyengar kyle nekritz funky pool active container refactoring legacy poster funky_pools_active_containers_for_refactoring_legacy_code funky_pools_active_containers_for_refactoring_legacy_code__norman_birkett__cppcon_2018 pdf norman birkett hardware memory tag make memory safe poster hardware_memory_tagging_makes_cpp_memorysafer hardware_memory_tagging_makes_cpp_memorysafer__kostya_serebryany__cppcon_2018 pdf kostya serebryany lift machine instruction llvm bitcode poster lifting_machine_code_instructions_to_llvm_bitcode lifting_machine_code_instructions_to_llvm_bitcode__peter_goodman__cppcon_2018 pdf peter goodman modernize hpc software poster modernizing_hpc_software_with_cpp11 modernizing_hpc_software_with_cpp11__ivo_kabadshow_andreas_beckmann_david_haensel__cppcon_2018 pdf ivo kabadshow andreas beckmann david haensel retrofit large visual studio codebases poster retrofit_cpp17_to_large_visual_studio_codebases retrofit_cpp17_to_large_visual_studio_codebases__gabriel_diaconita__cppcon_2018 pdf gabriel diaconita land amaze creature weird beast poster the_cpp_lands_its_amazing_creatures_and_weird_beasts the_cpp_lands_its_amazing_creatures_and_weird_beasts__elena_sagalaeva_vladimir_gorshunin__cppcon_2018 jpg elena sagalaeva vladimir gorshunin improve productivity platform api poster using_cpp_to_improve_productivity_in_platform_with_c_api using_cpp_to_improve_productivity_in_platform_with_c_api__alexius_alvin_gilang_hamidy__cppcon_2018 pdf alexius alvin gilang hamidy
C C++;https://github.com/LiveAsynchronousVisualizedArchitecture/simdb;alt key value store kind like simdb high performance share memory lock free cross platform single dependency key value store simdb part lava live asynchronous visualize architecture series single minimal dependency create highly concurrent software program write live internal visualize hash base key value store create fundamental piece large software architecture high performance real benchmarking need superficial loop seem conservatively small get put call per logical core per second lock free performance scale well least dozen thread share memory share memory map window linux without rely external dependency make __exceptionally good interprocess communication__ lock free user face function thread safe lock free exception constructor avoid race condition multiple process create memory map time cross platform compile visual studio icc window gcc linux gcc clang single simdb hpp standard library need window sdk dependency even parent project apache license need gpl whole program include already debug visualization treat alpha software though know outstanding bug almost certainly bug small design issue wait discover need fix arise get start create share memory name simdb_test temp directory linux osx section object current window session namespace basically temp complicate window nonsense block byte contain megabyte space block actual size 4mb overhead organization though write page memory map disk unless neccesary return list simdb temp directory std vector std string simdb automatically prefix simdb_ thus search easily make interprocess communication easy thing like list available gui convenience largely difficult list temporary memory map window simdb work arbitrary byte buff key value convenience function make common case easy another convenience function reason next direct function wrap see fundamental function interface arbitrary byte buff give key another value keep mind get fail since another thread delete change key read call len get number byte hold value give key call get show del take key delete inside simdb hpp extensive explanation inner work achieve lock free concurrency
C C++;https://github.com/mattreecebentley/plf_nanotimer;plf nanotimer simple etc timer class microsecond precision cross platform benchmarking limit simple possible afford low amount overhead follow plf nanotimer timer timer start something double timer get_elapsed_ns std cout time nanosecond std endl timer start start semantics restart something else timer get_elapsed_ms std cout time millisecond std endl timer start plf microsecond_delay delay program microsecond timer get_elapsed_us std cout time microsecond std endl timer member function void start start restart timer double get_elapsed_ns get elapse time nanosecond double get_elapsed_us get elapse time microsecond double get_elapsed_ms get elapse time millisecond non member function void plf millisecond_delay double delay program millisecond pas void plf microsecond_delay double delay program microsecond pas void plf nanosecond_delay double delay program nanosecond pas timer pause determine pause style function would add much complexity class simple benchmarking turn might interfere performance analysis need pause function something like plf nanotimer timer timer start something double timer get_elapsed_ns something else timer pause timer start stuff timer get_elapsed_ns std cout time nanosecond std endl
C C++;https://github.com/boostcon/cppnow_presentations_2015;presentation tuesday may library week application conference keynote generic program concept parallel compute strategy implication test battle net deploy million cpu functional geometry produce pure lesson type deduction odp yomm11 open multi method constexpr compile biicode dependency manager host boost wednesday may conference keynote numerical weather prediction face future design boost base new library atmospheric think portable make cross heaven dependency management boost compute library develop edsl boost spirit back large scale advance levelization technique part switchany practical exercise template new system new price share pointer pas reference useful lightning talk messagepack msgpack compact fast serialization fun clang survive thrive multiplatform multilanguage multiproduct multisite continuous integration sequence multimethod dynamic curry functional construct general relativity apply cod apis break constexpr include make_unique restrict keynote access tuple runtime thursday may conference keynote range standard pptx review boost library fiber afio type safe configuration reason procedural modern generic program tick fit pdf function want boostache expose internals boost template lock free towards interest lock free mpmc big project cmake git friday may debug exact record program execution detail rule plus minus modern parallelize standard template metaprogramming paradigm fun c11 generic selection iife performance good experimental future spirit overview encryption coroutines app library
C C++;https://github.com/concurrencykit/ck;continuous integration drone travis cirrus compiler test past include gcc clang cygwin icc mingw32 mingw64 suncc across support architecture new architecture require pas integration test extensive review continuous integration currently enable follow target darwin clang x86 freebsd clang x86 linux gcc arm64 linux gcc x86 linux clang x86 linux clang ppc64le compile step configure additional option try configure help step order compile regression require posix thread make regression order compile libck make make step order make uninstall make uninstall see information support architecture concurrency kit support architecture compiler fallback usually performance degradation associate concurrency kit specialize assembly follow architecture aarch64 arm ppc ppc64 s390x sparcv9 x86 x86_64 feature concurrency primitive ck_pr concurrency primitive make available underlie architecture include support atomic operation natively transactional memory pipeline control read ownership ck_backoff simple efficient minimal noise backoff function ck_cc abstract compiler builtins write efficient concurrent structure safe memory reclamation ck_epoch scalable safe memory reclamation mechanism support idle thread various optimization make good competitive many state art solution ck_hp implement support hazard pointer simple efficient lock free safe memory reclamation mechanism structure ck_array simple concurrently readable pointer array structure ck_bitmap efficient multi reader multi writer concurrent bitmap structure ck_ring efficient concurrent bound fifo structure various performance trade include specialization single reader many reader single writer many writer ck_fifo reference first publish lock free fifo algorithm specialization single enqueuer single dequeuer many enqueuer single dequeuer extension allow node ck_hp_fifo reference algorithm implement safe memory reclamation hazard pointer ck_hp_stack reference treiber stack support hazard pointer ck_stack reference efficient lock free stack specialize variant variety memory management strategy bound concurrency ck_queue concurrently readable friendly derivative bsd queue interface couple safe memory reclamation mechanism implement scalable read side queue simple search replace ck_hs extremely efficient single writer many reader hash set satisfy lock freedom bound concurrency without usage atomic operation allow recycle unused delete slot structure recommend general hash set possible compute value key ck_ht specialization ck_hs algorithm allow disjunct key value pair ck_rhs variant ck_hs utilize robin hood hash allow improve performance high load factor high deletion rat synchronization primitive ck_ec extremely efficient event counter good alternative condition variable ck_barrier plethora execution barrier include centralize barrier combine barrier dissemination barrier barrier tournament barrier ck_brlock simple big reader lock write bias reader writer lock scalable read side lock ck_bytelock bytelocks research purpose allow theory fast read side acquisition without atomic operation reality memory barrier require fast path ck_cohort generic lock cohorting interface allow turn lock numa friendly scalable numa lock significant trade fast path acquisition cost specialization include relevant lock concurrency kit read lock cohorting general technique design numa lock ck_elide generic lock elision framework allow turn lock elision aware require support restrict transactional memory underlie hardware ck_pflock phase fair reader writer mutex provide strong fairness guarantee reader writer read spin base reader writer synchronization multiprocessor real time system ck_rwcohort generic read write lock cohorting interface allow turn read write lock numa friendly scalable numa lock significant trade fast path acquisition cost specialization include relevant lock concurrency kit read lock cohorting general technique design numa lock ck_rwlock simple centralize write bias read write lock ck_sequence sequence counter lock popularize linux kernel allow fast read write synchronization simple structure deep copy permit ck_swlock single writer specialize read lock copy safe useful structure must remain small copy contain band mutexes ck_tflock task fair lock fair read write lock derive scalable reader writer synchronization share memory multiprocessor ck_spinlock basic fast spinlock ck_spinlock_anderson scalable fast anderson spinlocks reference early scalable fair lock ck_spinlock_cas basic spinlock utilize compare_and_swap ck_spinlock_dec basic spinlock adaption old optimize linux kernel spinlock x86 primarily reference ck_spinlock_fas basic spinlock utilize atomic exchange ck_spinlock_clh efficient scalable clh lock provide many performance property good fast path ck_spinlock_hclh numa friendly clh lock ck_spinlock_mcs seminal scalable fair lock ck_spinlock_ticket fair centralize lock
C C++;https://github.com/robotology/yarp;yarp logo doc image yarp robot png raw true yarp yarp yarp ___ ____ ____ ___ yet another robot platform late release yarp library toolkit communication device interface everything humanoid embed device documentation yarp installation see full instruction linux window binary macos regular yarp library linux macos yarp compile without ace add dskip_ace true cmake tutorial comprehensive list tutorial license material include yarp copyright istituto italiano tecnologia iit robotcub consortium contributor yarp component release term bsd clause optional component release term lgpl late gpl late gpl late apache license see copy license detail status stats github commit since late github last github commit activity past week week github github close github github pull github close pull github top github language development power
C C++;https://github.com/cesanta/v7;embed javascript engine note project deprecate favor small javascript engine write feature cross platform work anything start arduino window small size compile static size 40k 120k range ram footprint initialization byte freeze feature 15k without freeze feature simple intuitive api easy export exist function javascript environment standard implement javascript usable box provide auxiliary library hardware spi uart etc crypto api source iso iso compliant easy integrate simply copy project make possible program internet thing iot embed device javascript part full stack mongoose documentation developer user guide api reference collection well comment support ask question support forum contribution submit contribution sign cesanta send github pull request retain copyright contribution license release commercial gnu gpl open source license commercial project project become commercialise gplv2 license dictate need either open source fully purchase commercial license cesanta offer full royalty free commercial license without gpl restriction need require custom license would happy work solution contact price prototyping project still prototyping stage sale open source without license restriction
C C++;https://github.com/boostorg/beast;beast thrive review sort feedback user stakeholder interface even question ask review issue provide valuable information improve library hesitate question insignificant unimportant
C C++;https://github.com/Dobiasd/frugally-deep;logo logo fdeep png license mit license license frugally deep kera ease table content introduction introduction usage usage performance performance requirement installation requirement installation faq faq introduction would like kera would like prediction forward pas without link application tensorflow frugally deep exactly frugally deep small header library write modern pure easy integrate depend also header library support inference predict sequential also computational graph complex topology create functional implement small subset tensorflow operation need support prediction much small binary size link tensorflow work box also compile bite executable course bite fine avoid temporarily allocate potentially large chunk additional ram convolution materialize im2col input matrix utterly ignore even powerful gpu system cpu core per prediction quite fast cpu core compare tensorflow performance multiple prediction parallel thus utilize many cpu like improve overall prediction throughput application pipeline support layer type layer type typically image recognition generation support make many popular architecture possible see performance section performance add concatenate subtract multiply average maximum averagepooling1d globalaveragepooling1d bidirectional timedistributed gru lstm cudnngru cudnnlstm conv1d separableconv2d depthwiseconv2d cropping1d zeropadding1d batchnormalization dense flatten normalization dropout alphadropout gaussiandropout gaussiannoise spatialdropout1d spatialdropout2d spatialdropout3d randomcontrast randomflip randomheight randomrotation randomtranslation randomwidth randomzoom maxpooling1d globalmaxpooling1d elu leakyrelu relu selu prelu sigmoid softmax softplus tanh exponential gelu softsign upsampling1d reshape permute repeatvector embed also support multiple input output nest residual connection share layer variable input shape arbitrary complex architecture computational graph custom layer pas custom factory function load_model currently support follow activityregularization averagepooling3d conv2dtranspose faq conv2dtranspose layer support conv3d convlstm2d cropping3d dot grucell lambda faq lambda layer support locallyconnected1d locallyconnected2d lstmcell mask maxpooling3d repeatvector rnn simplernn simplernncell stackedrnncells thresholdedrelu upsampling3d temporal usage kera compile fit test evaluate usual save single hdf5 save include_optimizer false image_data_format must channels_last default tensorflow backend create different image_data_format backends support convert frugally deep format keras_export convert_model finally load fdeep load_model predict invoke forward pas follow minimal show full workflow convert_model test case input correspond output value generate automatically save along fdeep load_model test make sure forward pas frugally deep kera integration please look faq faq performance find average duration multiple consecutive forward pas popular single core intel core cpu 30ghz frugally deep tensorflow compile gcc march native process start cuda_visible_devices taskset cpu list disable gpu allow usage cpu see dockerfile test dockerfile kera frugally deep densenet121 densenet169 densenet201 inceptionv3 mobilenet mobilenetv2 nasnetlarge nasnetmobile resnet101 resnet101v2 resnet152 resnet152v2 resnet50 resnet50v2 vgg16 vgg19 xception requirement installation compatible compiler compiler version fine gcc clang libc visual high tensorflow kera test version somewhat old might work guide different way frugally deep find faq see faq faq disclaimer api library still might change future suggestion find error want give general feedback criticism would love hear issue course contribution pull also welcome license distribute mit license see accompany license license
C C++;https://github.com/TonicAudio/Tonic;tonic fast easy audio synthesis prefer cod patch love clean syntax care performance feel make tonic tonic collection signal generator processor trianglewave tone1 trianglewave sinewave tone2 sinewave sinewave vibrato sinewave freq sinewave tremolo sinewave freq combine intuitive operator generator combinedsignal tone1 tone2 tremolo plug another float basefreq tone1 freq basefreq vibrato tone2 freq basefreq vibrato look tonic create awesome synthesizer couple line controlxyspeed speed controlxyspeed addparameter addparameter outputgen rectwave freq pwm sinewave freq sinewave freq lpf12 cutoff speed create rectangle wave oscillator modulate timbre oscillator sine wave add slow tremelo send filter top map mouse speed cutoff frequency browse synth project tonic come several project find directory plan add demo project window linux future several synth patch demo synths standalone rtaudio non interactive synth patch command line make synths iphone ipad see openframeworks development interest contribute tonic please visit read guideline
C C++;https://github.com/greg7mdp/sparsepp;recommend parallel instead sparsepp unless stick non compatible compiler little bite memory acceptable personally switch parallel believe offer significantly good tradeoff slightly high memory usage much fast sparsepp fast memory efficient hash map sparsepp derive google excellent aim achieve follow objective drop alternative unordered_map unordered_set extremely low memory usage typically byte overhead per entry importantly small memory overhead resize efficient typically fast compiler unordered map set boost support support compiler single header anymore test window vs2010 linux clang macos clang believe sparsepp provide unparalleled combination performance memory usage outperform compiler unordered_map count google dense_hash_map consistently fast cost much great memory usage especially final size map know advance insertion resize hash map like google dense_hash_map open address mean hash table entry conceptually store big array collision resolve link list probe big drawback open address array need resize large high mark memory usage typically time current map size allocate new array twice big current copy old array new sparsepp resolve memory usage issue memory usage high mark show small bump resize detail comparison various hash include sparsepp please see write bench installation compilation need header library installation consist copy sparsepp directory wherever convenient include project warn iterator reference invalidation erase insert erase element likely invalidate iterators call erase insert new element likely invalidate iterators iterator invalidation also happen std unordered_map rehash occur due insertion reference value store sparse_hash_map set likely invalidate insert erase case std unordered_map set usage show need include header include provide follow class class provide interface std unordered_map std unordered_set follow difference call erase may invalidate iterators however conformant standard position range erase function return iterator point position immediately follow last element erase make easy traverse sparse hash table delete element match condition delete odd value std unordered_map order element erase preserve since item group bucket bucket apis adapt max_bucket_count equivalent max_size bucket_count return sparsetable size normally least twice number item insert hash_map value insert sparsepp either copyable movable movable see movable memory allocator window visual studio microsoft compiler provide custom allocator default visual runtime fragment memory reallocate desirable create large sparsepp hash map create lot small hash_maps memory usage may increase instead decrease expect reason instance hash_map custom memory allocator create new memory space allocate typically may big waste item allocate order custom spp allocator define follow preprocessor variable include define spp_use_spp_alloc integer key hash function consideration basic integer type sparsepp provide default hash function mix bit key see integer prevent pathological case insert key sequential lookup non present key become slow course user sparsepp may provide hash function show user provide hash function insert custom class hash map sometimes hash key similar low order bit many collision decrease efficiency hash map address case sparsepp provide optional mix hash key see integer hash enable define proprocessor macro spp_mix_hash provide hash function user define class order sparse_hash_set sparse_hash_map hash function provide even though hash function provide via hashfcn template parameter recommend inject specialization std hash class std namespace std hash specialization person combine hash value first last name convenient spp hash_combine function return combine hash value spp hash_combine provide header sparsepp spp however class definition often appear header desirable limit size header include header provide small header sparsepp spp_utils purpose serialization sparse_hash_set sparse_hash_map easily serialize unserialized connection support implement follow apis follow demonstrate simple sparse_hash_map write read back serializer read write stdio apis would equally simple write serialize stream apis thread safety sparsepp follow thread safety rule standard library particular single sparsepp hash table thread safe read multiple thread give hash table safe read thread thread simultaneously single hash table write thread read write hash table thread must protect give hash table thread write thread must prevent read write safe read write instance type even another thread read write different instance type give hash table type safe write thread read thread
C C++;https://github.com/boostcon/cppnow_presentations_2016;presentation slide deck guideline tuesday may paepcke morning keynote good bethe booz allen hamilton flug morning flowz towards edsl digital signal process typegrind type preserve heap profiler dependency injection afternoon proper inheritance part copperspice next generation signal practical performance practice afternoon proper inheritance part metaprogramming dummy monoids monad applicative functors repeat software pattern wednesday may bethe booz allen hamilton flug morning version boost msm euml diet template reduce bloat templated library variant past present future morning come stream performant simple parallel application raftlib document right tool array_ref multidimensional array reference standard library afternoon pull visitor thread safe observer pattern wrong metaprogramming brave afternoon multithreaded compile time implement lock free atomic_shared_ptr friendship service test design pattern 21st century thursday may bethe booz allen hamilton flug morning let make web match game multithreading answer question part variadic expansion morning ioc ioc framework multithreading answer question part implement static control flow afternoon effective structure marshal demarshalling boost fusion introspection high performance web service preprocessor aware automate refactoring exceptional performance afternoon extend array semantics progress contract support tool support head add script friday may bethe booz allen hamilton flug morning design new toolchain performance practice align vectorise cache jump goodbye metaprogramming hello functional live post metaprogramming era morning understand boost simple hand write parser interest lock free queue part afternoon hpx gpu parallelize stl fiber library implement tuple afternoon basic interface cpu cache instruction order make obvious sane compiler would optimize atomics good typegrind type preserve heap profiler dependency injection proper inheritance part copperspice next generation signal proper inheritance part practical performance practice metaprogramming dummy monoids monad applicative functors repeat software pattern version boost msm euml diet template reduce bloat templated library variant past present future come stream performant simple parallel application raftlib document right tool array_ref multidimensional array reference standard library implement lock free atomic_shared_ptr friendship service test pull visitor thread safe observer pattern wrong metaprogramming brave multithreaded compile time design pattern 21st century let make web match game multithreading answer question part variadic expansion ioc ioc framework multithreading answer question part preprocessor aware automate refactoring extend array semantics progress contract support implement static control flow effective structure marshal demarshalling boost fusion introspection high performance web service add script design new toolchain performance practice align vectorise cache jump goodbye metaprogramming hello functional live post metaprogramming era understand boost simple hand write parser interest lock free queue part hpx gpu parallelize stl fiber library basic interface cpu cache instruction order make obvious sane compiler would optimize atomics
C C++;https://github.com/zaphoyd/websocketpp;websocket websocket header library implement rfc6455 websocket protocol allow integrate websocket client server functionality program interchangeable transport module include base raw char buff base iostreams base asio either via boost standalone end user write additional transport policy support event library need major feature full support rfc6455 partial support hixie hybi draft spec server message event base interface support secure websockets ipv6 explicit proxy flexible dependency management standard library boost interchangeable transport module raw iostream asio custom portable cross platform posix window 64bit intel arm ppc thread safe get involve project website user manual github repository github pull request submit develop branch announcement mail list irc channel websocketpp freenode discussion development support mail list forum author peter thorson websocketpp zaphoyd com
C C++;https://github.com/jonasmr/microprofile;microprofile microprofile embeddable profiler write microprofile host github integration frame call microprofile microprofile cpp must include project nullpointer void device context pas gpu timer microprofile without call microprofileflip case call microprofiledumpfileimmediately save profile html csv disk gpu time gpu timer work like normal timer except put share group gpu insert microprofile_scopegpui gpu timer also support multithreaded renderers please refer demo_nouid3d12 gpu timer available follow apis opengl d3d11 d3d12 vulkan counter microprofile support track various counter show live capture view timeline timeline view capture intend mark long unique timer show stuff like level load level name include intend mark state last long timer long single frame appear aggregation view always active consider unique fancy name custom format string way first unformatted static string literal second option allow arbitrary string require token store profiler identify leave marker live view start microprofile live mode simply point chrome host live view enable different microprofile group control menu group enable time press capture button generate capture default last frame capture capture fully contain webpage save share reference way webserver invoke host capture frame host foo start live view load preset foo host foo start live view load builtin preset foo presets load save directly webbrowser save application name mppresets cfg builtin presets presets load mppresets builtin cfg work like presets except load intend predefined non overwriteable configuration alt text image live png raw true live screenshot capture view capture live view provide complete view record ring buff set amount frame please aware capture far behind marker look might overwrite case marker buff reuse per thread something happen per thread basis alt text image detail png raw true capture screenshot compare capture microprofile support compare different capture save first capture disk open second capture click compare browse first please aware detail view support capture save early version work feature context switch trace enable compare compare register thread dynamic instrumentation intel x86 microprofile support dynamically inject marker support window osx linux test ubuntu feature make sure microprofile_dynamic_instrument_enable define make sure link distorm add include folder include path check dynamic_instrument hold alt pan secondary capture without move first capture please aware still bite experimental aware limitation profiler attempt stop thread instrument potentially cause issue critical moment replace first byte function patch thread execute begin replace program behaviour well define development usually fine instrumentation need program compile link specific way support instrument possible x86 sequence might fail need least byte instruction instrument function linux need link program rdynamic order make possible find function dladdr know way query without link rdynamic would love hear compile link dynamic instrumentation new menu appear module function module menu allow load debug information load module select module load load bar behind module name fill debug information ready module screenshot image module png raw true module screenshot debug symbol load indicate number top function menu start type search function instrument click function attempt instrument instrumentation fail ask report sequence please consider click next function attempt instrument function call function function call also name debug information instrument function screenshot image function png raw true function screenshot noframes microprofile profile application without concept frame dump capture end live view simple frame base live view gpu time d3d11 frame base live view d3d11 gpu timer d3d12 frame base live view d3d12 gpu timer d3d12_multithreading frame base live view d3d12 gpu timer gpu time generate multiple thread frame base live view opengl gpu timer vulkan copy vulkan hologram sample fix microprofile cpu gpu marker test window dynamic_instrument demo dynamic instrumentation workbench workbench development feature microprofile dependency microprofile support generate compress capture distorm disassemble x86 dynamic resource usage microprofile large allocation global instance struct microprofile large allocation per thread track microprofile_per_thread_buffer_size default 2mb large allocation per gpu buff microprofile_per_thread_gpu_buffer_size default 128k thread send thread handle context switch enable 128kb context switch context switch trace enable small variable size buff state buff receive websocket packet state buff load save setting small allocation receive packet sender change microprofile allocate memory define macro compile microprofile microprofile_alloc microprofile_realloc microprofile_free microprofile config microprofile lot predefined macro change modify make sure microprofile_use_config define put change define microprofile config know issue limitation minor know issue limitation currently relative placement gpu time cpu time tend slide bite thus relative position gpu timestamps cpu timestamp correct chrome internal limit big page cache generate capture large 32mb chrome refuse cache cause page redownload save pretty catastrophic since generate capture mitigate miniz drastically reduce size capture point long problem still issue increase chrome disk cache size dynamically create thread must call microprofileonthreadexit thread exit reuse thread log object console support microprofile support major console search microprofile close platform forum license license unlicense license
C C++;https://github.com/kokke/tiny-AES-c;tiny aes small portable aes encryption algorithm write override default key size bite bite define symbol aes192 aes256 api simple look like c99 style annotate type important note pad provide cbc ecb buff multiple byte pad recommendable ecb mode consider unsafe implement stream mode need mode call function every block byte need encrypt see wikipedia article detail library design small size simplicity intend case small binary size low memory footprint portability important high performance speed concern try complex library mbed etc choose mode operation define symbol cbc ctr ecb read comment clarification user include instead error check protection bound memory access error malicious input module byte ram rom compile arm ymmv depend mode enable small see yet contact know something small improvement successfully 64bit x86 32bit arm bite avr platform gcc size output ctr mode compile arm arm none eabi gcc dcbc decb dctr aes size aes text dec hex filename aes compile thumb instruction set end well size arm none eabi gcc mthumb dcbc decb dctr aes size aes text dec hex filename aes free software foundation arm gcc compiler arm none eabi gcc version arm none eabi gcc release copyright free software foundation inc free software see source copy condition warranty even merchantability fitness particular purpose verify national institute standard technology special publication 38a appendix vector mode operation aes appendix document valuable detail pad generation nonce ctr mode etc heartfelt thank nice contribute project material repository public domain
C C++;https://github.com/eyalroz/cuda-api-wrappers;thin flavor wrapper cuda apis runtime driver nvrtc nvtx table content general description general description key feature key feature motivation motivation detail documentation detail documentation requirement requirement coverage apis coverage apis taste feature play taste feature play program program modify cuda sample modify cuda sample coverage program api module coverage program api module bug suggestion feedback bug suggestion feedback general description library integrate _wrappers_ around core part nvidia execution ecosystem low level cuda driver slightly high level cuda runtime nvidia dynamic cuda compilation library nvidia profiler program api also know nvidia toolkit extension library intend would otherwise apis directly make work intuitive consistent make modern language capability program idiom best practice nutshell make cuda api work fun also importantly wrapper seem high level abstract nothing modern aesthetic arrangement nvidia apis wrapper library force abstraction cuda convention regard place perform synchronization etc complete range expression underlie apis key feature contrast library provide seamlessly integrate functionality driver runtime nvrtc api nvtx integrate much seamlessly otherwise readily usable function method throw exception failure carry status information need check return value method function return produce since need return status pre allocate variable pas pointer parameter good compositionality judicious namespacing internal namespace like class clarity semantic group relate functionality proxy wrapper object device stream event kernel context module link process time interval convention remember free release resource forget numeric andhandles proxy class fit everywhere course still get numeric value cooperation cuda relate software various plain old structs adorn convenience method operator device property block grid dimension aim clarity straightforwardness name semantics need refer official documentation understand class function aim conformance core thin lightweight work behind back cache index thing except corner case ensure runtime api driver api compatibility sole exception lazy creation device primary context costly inheritance structure vtables virtual method almost wrapper vanish almost entirely compilation runtime api level action implement disrupt driver api level work permissive free software license motivation nvidia provide main apis runtime api driver api suffer several deficiency style apis target low common denominator language facility abstraction safety ease although runtime api actually need write runtime api supposedly high level convenient version driver api fact miss lot important functionality conjuction cuda facility like nvrtc dynamic compilation library consequently force _both_ runtime driver api difficult runtime driver api conjuction careful mess thing like context stack runtime api make multiple assumption might want make manually check every call every api function everywhere work pointer lot pointer pointer since api function mostly return status cod rather output also prevent compose need remember release resource allocate create else bad thing happen large number api function many relate similar name easy confuse work lot numeric pointer base handle instead class structs poor aesthetic make easy mix resource handle pure number parameter function may notice list read like opposite key feature key feature list idea make library overcome rectify deficiency much possible detail documentation detail doxygen genereated documentation mostly complete runtime api wrapper rest wrapper requirement cuda v11 late recommend v10 late support early version semi support remember nvidia driver compatible cuda version also need instal typically bundle cuda distribution software capable compiler compatible version cuda cmake late easy recent version need nvidia gpu support unify virtual address uva fermi microarchitecture late early gpus memory copy functionality rely automtically determine memory address locate fail coverage apis api call runtime driver nvtx nvrtc cover wrapper specifically follow miss task graph management interoperability opengl direct3d egl vdapu support texture array surface exist partial relevant api function cover indicate feature cover slat future work since currently work anything graphic relate short term plan extend coverage graphic relate apis however welcome taste feature play dream able type my_stream enqueue callback foo cuda stream_t stream cuda status_t status std cout hello foo world work right well slightly serious note though let demonstrate principle list namespaces internal class library would cuda memory host allocate instead cudamallochost cuda device_t memory allocate instead set current device cudamalloc note though device_t memory allocate freestanding function method internal class call might cuda device get my_device_id memory allocate my_size compile version supposedly complicate construct nothing sequence cudasetdevice cudamalloc call adorn pod structs convenience method expression valid comparison true device maxwell late micro architecture despite fact struct cuda compute_capability_t pod type unsigned integer field scalar note struct cuda device properties_t really basically struct cudadeviceprop runtime api compute_capability field meaningful name instead require remember need specify flag create cuda event_t proxy object function default value enum bool create non default parameter event make call easily readable true false program lieu full fledge user guide provide several kind program browse source know know api wrapper sanity check execute follow unix style command cmake dbuild_examples cmake find bin type executable exec main kind program modify cuda sample cuda distribution contain sample program demostrating various feature concept focus device side work adapt api wrapper completely forego direct cuda runtime api find modify cuda program folder coverage program api module gradually program add cuda runtime api approach replace module api call api wrapper demonstrate per module program find bug suggestion feedback notice specific issue need address especially sort bug compatibility problem miss functionality please github would like contribute give specific public feedback write mailto eyalroz1 gmx com also write interest collaborate relate research cod work
C C++;https://github.com/Cyan4973/FiniteStateEntropy;new generation entropy coder library propose high speed entropy coder __huff0__ huffman design modern cpu feature ooo order operation multiple alu arithmetic logic unit achieve extremely fast compression decompression speed __fse__ new kind entropy base theory jarek achieve precise compression accuracy like arithmetic much high speed branch status master dev benchmark benchmark intel core 5600u linux mint bit source compile gcc bit mode test generate provide probagen program benchmark break sample block huff0 fse compare zlibh huffman encoder within zlib provide frederic kayser codec ratio compression decompression proba80 huff0 __600 s__ __1350 s__ fse __8 84__ zlibh proba14 huff0 fse zlibh proba02 huff0 fse zlibh design huffman break bite per symbol limit hence lose efficiency squeeze distribution proba80 fse free limit compression efficiency remain close shannon limit circumstance however accuracy always necessary compressible distribution show little difference huffman side huff0 deliver form massive speed advantage branch policy external contribution welcome encourage master branch mean host stable release dev branch contribution merge want propose patch please commit dev branch dedicate feature branch direct commit master permit
C C++;https://github.com/tbenthompson/cppimport;cppimport version new feature compiler argument multiple source bug fix read import directly let try first linux terminal command pip cppimport simple extension save somecode cpp open interpreter line note big fan workflow enable edit recompilation happen transparently actually technical description cppimport look source match request module exist first mako templating system compilation option produce mako pas compile extension extension share library produce place folder source extension load simple language please sometimes fast enough exist library write extension module library compile recommend bind bind lot year discover productivity floor development process edit test edit compile test plus cppimport combine process compile import extension type modulename cppimport imp modulename worry multiple step internally cppimport look modulename cpp find mako templating system gather compiler option compile load extension module note mako pre process comment around configuration block may omit recompilation happen necessary compilation happen first time module import source compare checksum import determine change additional dependency header track add mako header need set compiler linker args add want multiple source extension need output call cppimport set_quiet false output helpful debug compile error sometimes need force rebuild even checksum match call cppimport force_rebuild cppimport imp want incremental compile extension multiple source uninitiated incremental compilation involve recompiling source change include header change cppimport top setuptools distutils standard library package distribution unfortunately setuptools support incremental compilation recommend follow suggestion ccache massively reduce cost rebuild enable parallel compilation cfg parallel true configuration header need information filepaths module configuration module name available fullname variable module available filepath window know cppimport work window window try happily accept pull request issue fix cppimport mit license
C C++;https://github.com/libtom/libtommath;libtommath git repository free open source portable number theoretic multiple precision integer mpi library write entirely status travis master develop appveyor master develop abi laboratory api abi change check summary develop branch contain development version stable release tag documentation latex tex also limit documentation tommath also document tommath pdf describe goal project many algorithm project make along usual make make clean make several target see makefile detail also makefiles certain specific platform test test locate demo flavor make test create stand alone test binary execute several test routine make mtest_opponent create test binary intend mtest mtest make mtest test execution like mtest mtest mtest_opponent mtest create test vector alternative mpi library test consume vector verify correct behavior ltm instal straightforward gnu linux section libtommath documentation doc pdf detail
C C++;https://github.com/MengRao/fmtlog;fmtlog fmtlog performant asynchronous log library library format feature fast low runtime latency high throughput see header compile feature rich format top excellent fmt library asynchronous multi thread log time order also synchronously single thread custom format custom handle user set callback function handle log msg addition write log filter log level modify runtime well compile time log frequency limitation specific log set minimum log interval platform linux gcc test window msvc test require fmtlog dependent need fmtlib first header version copy fmtlog fmtlog inl project define macro fmtlog_header_only include fmtlog might also want define fmt_header_only fmtlib header way static share lib version cmake copy fmtlog libfmtlog static libfmtlog share generate dir usage also shortcut macro logd logi logw loge define log dbg inf wrn err msg respectively note fmtlog asynchronous nature msg write console immediately log statement simply push queue need call fmtlog poll collect log queue format write fmtlog support multi thread log thread call fmtlog poll default fmtlog create poll thread internally require user poll periodically idea allow user manage thread way full control poll flush behavior however ask fmtlog create background poll thread fmtlog startpollingthread interval poll interval call fmtlog poll thread format fmtlog base fmtlib almost fmtlib feature support except color asynchronous log library fmtlog provide additional support pas argument pointer seldom need fmtlib support void char pointer user pas pointer type argument avoid copy overhead lifetime refer object assure otherwise poll thread refer dangle pointer string arg fmtlog copy string content type std string default pointer type std string addition raw pointer fmtlog support std shared_ptr std unique_ptr well make object lifetime management much easy log header pattern also customize fmtlog setheaderpattern argument fmtlib format string name argument default header pattern hmsf log_test inf support name argument header name mean log level inf base name line num log_test path line num home raomeng fmtlog log_test thread default reset fmt setthreadname main weekday mon month name may year short year month day hour minute second millisecond microsecond nanosecond ymd year month day hour minute second hmse hour minute second millisecond hmsf hour minute second microsecond hmsf hour minute second nanosecond ymdhms year month day hour minute second ymdhmse year month day hour minute second millisecond ymdhmsf year month day hour minute second microsecond ymdhmsf year month day hour minute second nanosecond note concatenate name args efficient seperated ymdhms fast output default fmtlog output stdout normally user want write log instead accomplish fmtlog setlogfile filename truncate performance fmtlog internally buff certain condition buff flush underlie flush condition underlie manage fmtlog fmtlog buff default stdout buff user also pas exist indicate whether fmtlog manage fmtlog setlogfile managefp fmtlog setlogfile stderr false fmtlog log stderr without buff buff size large number reset fmtlog setflushbufsize byte old buff pas specify duration duration default second set fmtlog setflushdelay new log least specify flush log level default flush log level reach log set fmtlog flushon loglevel user actively ask fmtlog flush fmtlog poll true optionally user ask fmtlog close log fmtlog closelogfile subsequent log msg output addition write user register callback function handle log msg fmtlog setlogcb mincbloglevel useful circumstance warn error msg need publish real time alert purpose log callback buff log trigger even close signiture callback function performance benchmark term front end latency throughput comparison nanolog spdlog basic_logger_st test log message nanolog benchmark header pattern spdlog default pattern spdlog info bench check detail linux server intel xeon gold cpu 50ghz message fmtlog nanolog spdlog staticstring stringconcat singleinteger twointegers singledouble complexformat note throughput nanolog comparable output binary log instead human readable text format save int64 timestamp instead long format date time string fmtlog achieve low stable latency key optimization technique employ inspire nanolog allocate single producer single consumer queue log thread background thread poll queue avoid thread contention performance deteriorate thread number increase queue automatically create first log msg thread queue create thread fmtlog thread queue fix size take little time allocate queue recommend user actively call fmt preallocate thread create even first log low latency happen queue full default fmtlog simply dump addtional log msg return alternatively front end log block queue full define macro fmtlog_block log miss normally consumer fmtlog poll keep producer log statments multiple thread log queue seldom become full incautious user could leave log statement invoke unexpected high frequency tcp client spamming connection refuse error without connection retry delay handle problem elegant way fmtlog provide log macro limit mininum interval log fmtlog_limit shortcut logdl logil logwl logel respectively user need pas mininum interval nanosecond first argument optimization static information log format string log level location save table first call fmtlog simply push index static info table entry dynamic argument queue minimize msg size addition fmtlog define decode function log statment invoke fmtlog poll log msg pop queue however decode function bloat program size function consume around byte addition static infomation entry also consume ish byte runtime memory log statement memory overhead may worthwhile infrequent latency insensitive log program initialization info thus fmtlog provide user another log macro disable optimization fmtlog_once couse shortcut logdo logio logwo logeo fmtlog_once create static info table entry add decode function push static info along format msg body onto queue note pas argument pointer support fmtlog_once prefer optimize memory usage filter log compile time macro fmtlog_active_level apply default value fmtlog_level_inf mean debug log simply discard compile time note fmtlog_active_level apply log shortcut macro logi fmtlog similarly runtime log level filter disable define macro fmtlog_no_check_level increase performance reduce generate size bite
C C++;https://github.com/oneapi-src/oneDAL;oneapi analytics library api api distribute multi node mode distribute multi node mode scikit patch scikit patch onedal apache spark mllib sample onedal apache spark mllib sample installation installation documentation documentation support support technical preview feature technical preview feature onedal intel daal onedal intel daal high performance science application onedal onedal capability intel hardware allow get significant performance boost classic machine algorithm provide highly optimize algorithmic block stag analytics preprocessing transformation analysis validation decision make onedal also provide parallel dpc api extension traditional interface size grow exponentially need high performance scalable framework analyze benefit besides superior performance single node onedal also provide distribute computation mode show excellent strong weak scale onedal mean fit strong scale onedal mean fit weak scale doc readme chart intel 20onedal 20kmeans 20strong 20scaling png doc readme chart intel 20onedal 20kmeans 20weak 20scaling png technical detail fptype float32 intel xeon processor 3ghz socket core per socket intel daal mpi4py intel distribution idp detail available article refer documentation documentation information api api onedal api provide standalone library call show daal4py calculate mean cluster distribute multi node mode scientist often require different tool analysis regular big daal4py offer various process make easy enable distribute multi node mode detail browse daal4py scikit patch speed scikit intel extension intel extension scikit speed scikit beyond provide drop patch acceleration achieve oneapi analytics library allow fast usage framework suit scientist machine user doc readme chart scikit acceleration png technical detail 24xlarge aws ec2 instance intel xeon platinum 8275cl socket core per socket scikit version scikit intelex version intel extension scikit provide option replace scikit method onedal solver make possible get performance gain without change patch stock scikit follow command line flag patch also enable programmatically detail browse intel extension scikit onedal apache spark mllib sample onedal provide scala java interface match apache spark mllib api onedal solver hood allow get 18x increase performance compare default apache spark mllib technical detail fptype double 2xlarge aws instance intel daal gold apache spark emr spark config num executor executor core executor memory 19gb task cpu check sample sample tab detail installation specific version source beside api onedal also provide apis dpc java oneapi oneapi documentation system get start developer guide daal4py intel extension scikit release refer github wiki browse full list onedal daal4py support ask question engage discussion onedal developer contributers user follow channel github community may reach project maintainer privately onedal maintainer intel com security report vulnerability refer intel vulnerability report contribute report issue make feature request github welcome community contribution check contribute guideline contribute feedback github provide feedback onedal sample sample onedal different application apache java scala technical preview feature technical preview feature introduce gain early feedback developer technical preview feature subject change future release technical preview feature production base therefore strongly discourage apis technical preview feature locate daal preview oneapi dal preview namespaces java apis technical preview feature locate package com intel daal preview name prefix preview feature list graph analytics undirected graph without edge vertex weight undirected_adjacency_vector_graph vertex index type int32 direct graph without edge weight directed_adjacency_vector_graph vertex index type int32 edge weight type int32 double jaccard similarity coefficient pair vertex batch algorithm process graph block local global triangle count single source short path sssp subgraph isomorphism algorithm induce non induce subgraphs undirected graph integer vertex attribute support edge attribute support onedal intel daal oneapi analytics library extension intel analytics acceleration library intel daal repository contain branch correspond oneapi classical version library encourage onedal locate master branch product late release branch onedal intel daal update license onedal distribute apache license license see license license information onemkl fpk distribute intel simplify software license refer third party program mkl txt third party program mkl txt detail
C C++;https://github.com/mandreyel/mio;mio easy header cross platform memory map library mit license mio create goal easily includable dependency project need memory map without need pull boost please feel free open issue try address concern best memory map best thing since slice bread seriously primary motivation write library instead boost iostreams lack support establish memory map already open handle descriptor possible mio furthermore boost iostreams solution require user pick offset exactly page boundary cumbersome error prone mio hand manage internally accept offset find near page boundary albeit minor nitpick boost iostreams implement memory map std shared_ptr provide share semantics even need overhead heap allocation may unnecessary unwanted mio class cover case move basically cost abstraction system specific mmapping function act like boost iostreams counterpart share semantics create map note must exist create map way map memory constructor throw std system_error failure omit offset size_to_map argument case entire map factory function map member function note constructor require exception enable prefer project fno exception still way moreover case provide either string type path exist valid handle however mio check whether provide descriptor access permission desire map map may fail error report via std error_code parameter pas map function window user library support wide character type function character string expect path parameter mio basic_mmap move multiple copy map need mio basic_shared_mmap std shared_ptr semantics interface mio basic_mmap possible define type byte width char though alias common provide default may useful define type say new std byte type though generally need since mio map user request offset page boundary query underlie system page allocation granularity invoke mio page_size locate mio page hpp single header mio add project single header simply include single_include mio mio hpp single header regenerate time amalgamate script within third_party cmake header library mio compile component nevertheless system provide allow easy test installation subproject composition many platform operate system test mio distribute small suite test mio configure high level cmake project suite executables default mio test executables integrate cmake test driver program cmake support number backends compilation link static configuration tool gnu make ninja dynamic configuration tool visual studio xcode course test step also execute via test target respectively within ide open project generate configuration step mio test also configure operate client software quality dashboard application please see kitware information mode operation installation mio system provide installation target support downstream consumption via cmake intrinsic function cmake allow installation arbitrary location may specify define cmake_install_prefix configure time absense user specification cmake mio conventional location base platform operate system static configuration tool gnu make ninja dynamic configuration tool visual studio xcode note last command installation sequence may require administrator privilege sudo installation root directory lie outside home directory installation copy mio header include mio subdirectory installation root generate copy several cmake configuration share cmake mio subdirectory installation root latter step allow downstream cmake project consume mio via find_package window user mio mio target define win32_lean_and_mean nominmax former ensure import surface area win api minimal latter disable window min max macro intefere std min std max mio header library defintions leak downstream cmake presence cause problem alternative mio mio_full_winapi target add none defintions mio instal non conventional location may necessary downstream project specify mio installation root directory via either cmake_prefix_path configuration option cmake_prefix_path environment variable mio_dir environment variable please see kitware information addition mio support package relocatable installation via follow configuration directory invoke cpack follow generate package installation list support generator vary platform platform see output cpack help complete list support generator platform subproject composition mio subproject copy mio repository project dependency external folder project version control git git submodule git subtree syncronize updstream repository relative git facility beyond scope document brief may establish follow give mio subdirectory project simply add follow line project add mio include directory target include path note subproject mio test cpack integration defer host project
C C++;https://github.com/ThePhD/sol2;sol2 documentation sol2 library bind lua currently support lua version luajit moonjit include sol2 aim easy easy add project library header easy integration project single header drag drop start sneak peek give directory documentation find kind tutorial api documentation case particularly api usertype api table_proxy api function section still get foot directory well need feature fix right find support option right happy wait bore issue get whenever time want donate help find donation sponorship option little heart button near top repository take bevy link donate show support project others feature fast see sol2 bar graph support retrieval set multiple type include std string std wstring std u16string std u32string support view understand work container std map unordered_map style array vector non standard custom container user define type without register type std unique_ptr std shared_ptr optional support pointer type like boost shared_ptr custom optional work reference support inferior std optional support variant similar new type lambda function member function bind support intermediate type check variable exist simple api completely abstract away stack api include protected_function ability error handle function operator style manipulation table type representation lua userdata usertype guarantee cleanup customization point allow object push retrieve lua multiple consecutive object anything else desire overload function call my_function my_function hello lua script route different function call base parameter support table nest table table iteration table for_each begin end iterators string overhead usertype function lookup support compiler sol2 make feature gcc clang std appropriate standard library high able compile without problem however officially support test compiler gcc mingw clang visual studio community visual please make sure std std std good standard flag flag default late version gcc good would like support old compiler cost feature late tag sol2 branch would like support even old compiler feel free contact custom solution sol2 check hand platform well include android base gcc base xcode apple clang work platform long proper standard flag something work need special option may need look different way support project create single header grab single header single forward header library stable version check release tab github provide single header maximum ease script call provide repository bleed edge change publish release page script create single version library include part check single help info cmake also configure generate project generate sol2_single_header also include project cmake cmake detail thank nava2 alkino mrgreywater others help make cmake reality test test turn certain variable cmake test myriad configuration option generate test cmake configure sol2_tests sol2_tests_single sol2_tests_examples sol2_examples make sure sol2_single also need flavor python3 available compiler test suite version lua luajit provide may provide lua_local_dir variable presentation sun moon overhead lua abstraction thephd lua workshop mashape san francisco wrap lua efficiently nicely touch magic thephd boston meetup november cic milk street boston bite cmake bullet thephd boston meetup february cic main street cambridge compile fast fast scale forever look sol2 library thephd hudson common aspen physic center aspen colorado script speed think lua sol2 thephd cppcon keystone meydenbauer center aspen colorado plan tomorrow compile time extension point thephd flug auditorium aspen physic center aspen colorado license sol2 distribute mit license see license txt info need custom solution feel free reach
C C++;https://github.com/DiligentGraphics/DiligentEngine;diligent engine modern cross platform low level graphic library render framework diligent lightweight cross platform graphic api abstraction library render framework design take full advantage direct3d12 vulkan metal support old platform via direct3d11 opengl opengles diligent engine expose common front end api hlsl universal shade language platform render back end platform specific shader representation glsl msl bytecode spirv correspond back end engine intend graphic subsystem game engine application distribute apache license license txt free chat chat appveyor support platform low level graphic apis platform d3d11 d3d12 opengl gles vulkan metal status window heavy_check_mark heavy_check_mark heavy_check_mark heavy_check_mark universal window heavy_check_mark heavy_check_mark linux heavy_check_mark heavy_check_mark android heavy_check_mark heavy_check_mark macos heavy_check_mark heavy_check_mark heavy_check_mark heavy_check_mark heavy_check_mark heavy_check_mark tvos heavy_check_mark heavy_check_mark emscripten heavy_check_mark vulkan api natively support macos tvos platform require vulkan portability available commercial license please contact detail feature cross platform exact client support platform render backends define _win32 elif define linux elif define android define d3d11 elif define d3d12 elif define opengl exact hlsl shaders platform back end high performance modular design component clearly separate logically physically need take need project clear concise api object base stateless key graphic feature automatic shader resource design leverage next generation graphic apis multithreaded command buff generation multithreaded resource creation automatic explicit control resource state descriptor memory management shader resource reflection async compute multiple command queue ray trace mesh shaders tile shaders bindless resource variable rate shade sparse resource wave operation state art capability json base render state description language state package tool extensive validation error report modern feature make fast reliable consistent high quality ensure continuous integration automate unit test source format validation static analysis high level render component atmospheric light scatter tone map physically base gltf2 integration dear table content clone repository clone repository structure repository_structure instruction build_and_run win32 build_and_run_win32 universal window platform build_and_run_uwp linux build_and_run_linux android build_and_run_android macos build_and_run_macos build_and_run_ios emscripten build_and_run_emscripten integrate diligent engine exist system build_and_run_integration option build_option customize build_and_run_customizing get start api get_started render state notation render_state_notation tutorial tutorial sample sample high level render component high_level_components product diligent engine product diligent engine license license contribute contribute reference reference release history release_history clone repository master repository contain get repository submodules follow command update exist repository forget update submodules also good idea cmake perform clean rebuild get late version repository structure master repository include follow submodules submodule implement back end module self contain submodule contain texture load asset load dear imgui native application diligent render state notation offline render state package high level render framework implement various render component module depend core tool module submodule contain tutorial sample application intend demonstrate usage diligent engine api module depend core tool diligentfx module instruction diligent engine cross platform tool start cmake late late require another prerequisite late require follow instuctions issue please take look troubleshoot troubleshoot win32 prerequisite window sdk late require mesh shaders tool visual atl support either cmake gui command line tool generate generate visual studio bite solution project win64 folder navigate engine root folder follow command generate win32 solution target win8 sdk follow command mingw generate make command note however functionality limit mingw recommend way engine warn current full path cmake folder must contain white space enable vulkan validation layer need vulkan add environemt variable vk_layer_path contain path bin directory vulkansdk installation folder open diligentengine sln win64 folder select configuration engine set desire project startup project default gltf viewer select default sample tutorial application show render backend selection dialog box follow command line option force d3d11 d3d12 opengl vulkan mode mode d3d11 mode d3d12 mode mode want application outside visual studio environment application asset folder must set work directory visual studio automatically configure cmake alternatively navigate target folder executable universal window platform generate universal window platform need define follow cmake variable cmake_system_name windowsstore cmake_system_version window sdk version generate visual studio bite solution project uwp64 folder follow command engine root folder target specific sdk version refine cmake_system_version instance set desire project startup project default gltf viewer select default application d3d12 mode select d3d11 d3d12 follow command line option mode d3d11 mode d3d12 note possible generate solution target window define cmake_system_version cmake variable fail visual studio v120 toolset lack proper support linux linux environment need set development already make sure tool date diligent engine modern feature clang late recommend warn gcc seemingly produce invalid binary optimization level avoid crash optimization level downgrade release configuration recommend clang gcc may need follow package gcc clang make essential tool cmake require package configure vulkan also need late vulkan driver library gpu vulkan make sure system properly configure try sample sdk generate make debug configuration follow cmake command engine root folder engine follow command engine root folder contain visual studio setting configure ide engine application directly ide application command line app asset folder must current directory android please make sure machine set android development android configure ndk require tool ndk r22 late require cmake version bundle android studio make sure properly verify environment properly set try teapot well vulkan android know issue native find executable add python_executable variable cmake argument nativeapp gradle dpython_executable path python36 exe native mess shader_list git undo change open diligentsamples android folder android studio tutorial sample android default application opengles mode vulkan mode add follow launch flag mode android studio edit configuration menu macos clone repo follow command engine root folder generate xcode project project locate macos folder note cmake fail find compiler may need follow command configure vulkan environment default vulkan macos diligent engine load vulkan dynamically vulkan portability make sure system properly configure describe particular may need define follow environment variable assume vulkan sdk instal user myname vulkansdk want moltenvk note environment variable set see application launch launchpad desktop gui thus make sure application find vulkan library need start command line due reason xcode project also open open command xcode version late behavior may need enable first follow command please refer detail warn dyld_library_path ld_library_path environment variable ignore macos unless system integrity protection disable generally recommend order executables find vulkan library must rpath vulkan_sdk environment variable set point correct location diligent engine configure rpath application automatically last test vulkan sdk version command engine root folder generate xcode project configure need provide deployment target late require well parameter open xcode project folder engine application device need set appropriate development team project setting configure vulkan environment enable vulkan vulkan loader diligent engine link directly moltenvk xcframework see moltenvk implement vulkan metal enable vulkan diligent engine specify path vulkan sdk cmake assume vulkan sdk instal user myname vulkansdk default engine link moltenvk xcframework locate vulkan sdk desire application want specific library provide full path library via moltenvk_library cmake variable refer moltenvk user information moltenvk installation usage last test vulkan sdk version emscripten prerequisite emscripten sdk ninja activate path environment variable current terminal warn window path_to_emsdk emsdk emsdk_env bat instead source path_to_emsdk emsdk emsdk_env generate project follow cmake command engine root folder engine follow command test emscripten application basic web server open browser navigate demo available integrate diligent engine exist system diligent modular structure project submodules implement require functionality diagram show dependency module forget recursively initialize submodules add diligent repos submodules project project cmake project cmake add diligent engine require line suppose directory structure look like follow step need call add_subdirectory diligentcore add diligentcore list include directory add dependency target implement require render backends cmake copy_required_dlls convenience function copy share library next executable system find load please also take look get start tutorial project cmake project cmake recommend library cmake add system late artifact global cmake installation directory control variable note default usr local unix program project_name window may want cmake_install_prefix local folder instead library header follow cmake command folder diligentcore installation directory contain everything require integrate engine include subdirectory contain require header add directory include search directory lib subdirectory contain static library bin subdirectory contain dynamic library easy way link dynamic library link statically need list diligentcore well third party library engine besides also need specify platform specific system library window platform list library project need link may look like diligent engine header require follow platform macro define platform_win32 platform_universal_windows platform_android platform_linux platform_macos platform_ios control component engine want follow cmake option diligent_install_core diligent_install_fx diligent_install_samples diligent_install_tools another way intergrate engine generate visual studio project add system customization describe help tweak setting specific need option available cmake option summarize table option default value description diligent_no_direct3d11 direct3d11 backend diligent_no_direct3d12 direct3d12 backend diligent_no_opengl opengl backend diligent_no_vulkan vulkan backend diligent_no_metal metal backend diligent_no_archiver archiver diligent_no_render_state_packager render state packager tool diligent_build_tools yes tool module diligent_build_fx yes module diligent_build_samples yes sample module diligent_build_sample_base_only samplebase project sample tutorial diligent_build_tests unit test diligent_no_glslang glslang spriv tool diligent_no_hlsl disable hlsl support non direct3d backends diligent_no_format_validation disable source format validation diligent_load_pix_event_runtime enable pix event support diligent_nvapi_path path nvapi sdk diligent_install_core yes core module diligent_install_tools yes tool module diligent_install_fx yes module diligent_install_samples yes sample module diligent_install_pdb program debug database diligent_dear_imgui_path optional path user provide dear imgui project diligent_args_dir optional path user provide args project diligent_nuklear_dir optional path user provide nuklear project default back end available current platform disable specific back end follow option diligent_no_direct3d11 diligent_no_direct3d12 diligent_no_opengl diligent_no_vulkan diligent_no_metal option set cmake command line additionally individual engine component enable disable follow option diligent_build_tools diligent_build_fx diligent_build_samples want samplebase project diligent_build_sample_base_only option default vulkan back end link glslang enable compile hlsl glsl shaders spirv time time compilation require glslang disable diligent_no_glslang cmake option additionally hlsl support non direct3d backends disable diligent_no_hlsl option enable option significantly reduce size vulkan opengl back end binary may especially important mobile application diligent engine ensure consistent format throughout base validation disable diligent_no_format_validation cmake option note pull request fail format issue find diligent engine extensive validation always enable debug check may enable release configuration set diligent_development cmake option enable pix event support set diligent_load_pix_event_runtime cmake flag enable advance feature nvidia gpus native multi draw indirect support direct3d11 set diligent_nvapi_path cmake variable diligent engine multiple third party library application cmake define library diligent exist target application need make sure setting compatible diligent customize diligent engine allow client customize setting provide configuration script define follow optional cmake custom_configure_build define global property configuration compile flag link flag etc custom_pre_configure_target define custom setting every target call engine system start configure target custom_post_configure_target call engine system configure target let client override property set engine path configuration script provide build_configuration_file variable cmake must relative cmake root folder customize global setting custom_configure_build function define custom_configure_build function call target add default cmake define follow configuration debug release relwithdebinfo minsizerel want define configuration set cmake_configuration_types variable instance want configuration debug releasemt add follow line custom_configure_build function system need know list debug release optimize configuration follow variable must also set cmake_configuration_types variable define note due cmake specific configuration name list debug_configurations release_configurations must capitalize define configuration standard cmake also need set follow variable every new configuration cmake_c_flags_ compile flag cmake_cxx_flags_ compile flag cmake_exe_linker_flags_ executable link flag cmake_shared_linker_flags_ share library link flag instance custom_configure_build function customize individual target setting custom_pre_configure_target custom_post_configure_target function define custom_pre_configure_target call every target create system allow configure target specific property default system set target property custom_pre_configure_target set require property tell system process require set target_configuration_complete parent variable true follow custom_pre_configure_target function client need override setting may define custom_post_configure_target function call engine complete configure target get start api please refer also tutorial sample list good place start render state notation diligent render state notation json base language describe shaders pipeline state resource signature object convenient form json parse dynamically alternatively application packager preprocess pipeline description compile shaders target platform define internal resource layout etc binary archive optimize time load performance tutorial screenshot description hello tutorial show render simple triangle diligent engine api tutorial demonstrate render actual object cube show load shaders create vertex index uniform buff tutorial demonstrate apply texture object show load texture create shader resource bind object sample texture shader tutorial identical tutorial03 implement api tutorial demonstrate instance render multiple copy object unique transformation matrix every copy texture tutorial demonstrate combine instance texture array unique texture every instance tutorial show generate command list parallel multiple thread geometry tutorial show geometry shader render smooth wireframe tutorial show hardware tessellation implement simple adaptive terrain render algorithm tutorial show render multiple quad frequently switch texture blend mode tutorial show dynamic buff map strategy map_flag_discard map_flag_do_not_synchronize flag efficiently stream vary amount gpu resource tutorial demonstrate different way update buff texture diligent engine explain important internal detail performance implication relate method render tutorial demonstrate render cube offscreen render target simple post process effect shadow tutorial demonstrate render basic shadow shadow map compute tutorial show implement simple particle simulation system compute shaders multiple tutorial demonstrate diligent engine render multiple window bindless tutorial show implement bindless resource technique leverage dynamic shader resource index feature enable next gen apis significantly improve render performance tutorial demonstrate multisample anti aliasing msaa make geometrical edge look smooth temporarily stable tutorial demonstrate query retrieve various information gpu operation number primitive render command process duration etc render tutorial demonstrate render pas api implement simple defer shade mesh tutorial demonstrate amplification mesh shaders new programmable stag implement view frustum cull object lod calculation gpu ray tutorial demonstrate basic ray trace api diligent engine hybrid tutorial demonstrate implement simple hybrid renderer combine rasterization ray trace command tutorial demonstrate multiple command queue perform render parallel copy compute operation variable rate tutorial demonstrate variable rate shade reduce pixel shade load sample screenshot description atmosphere sample demonstrate integrate epipolar light post process effect application render physically base atmosphere glfw maze mini game demonstrate glfw create window handle keyboard mouse input gltf sample demonstrate asset gltf pbr load render gltf sample demonstrate shadow render high quality shadow dear imgui sample demonstrate integration engine dear library nuklear sample demonstrate integration engine library hello sample demonstrate diligent engine basic android application sampple performance benchmark render unique textured asteroid allow compare performance different render mode unity integration project demonstrate integration diligent engine unity high level render component high level render functionality implement diligentfx follow component available epipolar light scatter tone map shader gltf2 physically base renderer image base product diligent engine would appreciate could send link case product diligent engine visualization reality software bentley award win sandbox game vrmac cross platform graphic library net disclaimer diligent engine open project may freely everyone start empower community help people achive goal sadly enough everyone goal worthy please associate suspicious project may find web appear diligent engine neither possibly track really anything permissive license give lot leverage license see apache license license txt module third party dependency may independent license core tool sample contribute contribute submit pull repository diligent engine license apache license license txt guarantee content diligentengine repository free intellectual property encumbrance submit content repository license content agree content free intellectual property claim right license term diligent engine ensure consistent source style throughout base format validate commit pull request fail format issue find please refer instruction set clang format automatic format reference cod performance best release history see release history releasehistory diligent engine diligent engine
C C++;https://github.com/ivmai/bdwgc;boehm demers weiser garbage collector travis appveyor coverall test coverage coverity scan lgtm quality lgtm total line github size github package version next release development conservative garbage collector license mit style license might find recent stable version page bdwgc also late bug fix new feature available development overview intend general purpose garbage collect storage allocator algorithm describe boehm weiser garbage collection uncooperative environment software practice experience september boehm demers shenker mostly parallel garbage collection proceed acm sigplan conference program language design sigplan notice june boehm space efficient conservative garbage collection proceed acm sigplan conference program language design sigplan notice june boehm reduce garbage collector cache miss proceed international symposium memory management possible interaction collector optimize compiler discus boehm chase proposal safe compilation journal language translation december boehm simple safe compilation proceed acm sigplan conference program language design unlike collector describe second reference collector operate either mutator stop entire collection default incrementally allocation latter support machine common platform without thread support platform take advantage multiprocessor speed garbage collection many idea underlie collector previously explore others notably time system develop xerox parc early 1980s conservatively scan thread stack locate possible pointer paul rovner add garbage collection runtime type strongly type statically check concurrent language xerox parc csl doug mcilroy write simple fully conservative collector part version unix appear receive widespread rudimentary tool collector leak detector doc leak include fairly sophisticate string package cord make collector see readme cord doc readme cord boehm atkinson plass rope alternative string software practice experience december similar rope package xerox cedar rope package sgi stl distribution collector documentation find overview doc overview know collector list github page general description garbage collect storage allocator intend plug replacement malloc since collector require pointer tag attempt ensure inaccessible storage reclaim however experience typically successful reclaim unused memory program explicit deallocation unlike manually introduce leak amount unreclaimed memory typically stay bound follow object define region memory allocate routine describe object intend collect must point either accessible object register stack statically allocate segment pointer stack register may point anywhere inside object true heap pointer collector compile all_interior_pointers define gc_all_interior_pointers otherwise set default compile without all_interior_pointers may reduce accidental retention garbage object require pointer heap begin object long appear significant issue program occupy small fraction possible address space number routine modify pointer recognition algorithm gc_register_displacement allow certain interior pointer recognize even all_interior_pointers define gc_malloc_ignore_off_page allow pointer middle large object disregard greatly reduce probability accidental retention large object purpose seem best compile all_interior_pointers gc_malloc_ignore_off_page get collector warn allocation large object see doc debug detail _warning_ pointer inside memory allocate standard system malloc see garbage collector thus object point region may prematurely deallocated thus suggest standard malloc memory region buff guarantee contain pointer garbage collectible memory pointer language automatic static register variable correctly recognize note gc_malloc_uncollectable semantics similar standard malloc allocate object trace collector _warning_ collector always know find pointer area associate dynamic library easy remedy know find area operate system see gc_add_roots sunos irix alpha osf linux win32 include default see readme win32 doc readme win32 readme win64 doc readme win64 window detail system pointer dynamic library area may consider collector write program depend collector scan dynamic library area may good idea include least call gc_is_visible ensure area visible collector note garbage collector need inform share read however share library mechanism introduce discontiguous area may contain pointer collector need inform signal process signal may defer collection uninterruptible part allocation process like standard ansi mallocs default unsafe invoke malloc routine signal handler another malloc call may progress allocator collector also configure thread safe operation full signal safety also achieve cost system call per malloc usually unacceptable _warning_ collector guarantee scan thread local storage kind access pthread_getspecific collector scan thread stack though generally best solution ensure pointer store thread local storage also store thread stack duration lifetime arguably longstanding bug fix yet installation portability collector operate silently default configuration event issue usually change define gc_print_stats gc_print_verbose_stats environment variable line descriptive output collection give statistic exhibit peculiarity thing appear add variety reason notably fragmentation loss probably much significant contrive program gctest application unix like platform collector either gnu autoconf base infrastructure type configure make simple case cmake see sample classic makefile type make makefile direct please note collector source repository contain configure similar auto generate thus full procedure autoconf base master branch collector could look like git clone git github com ivmai bdwgc git bdwgc git clone git github com ivmai libatomic_ops git autogen configure make make check clone libatomic_ops optional provide compiler support atomic intrinsics see readme autoconf doc readme autoconf detail note alternatively collector could cmake like mkdir cmake cmake ctest see readme cmake doc readme cmake detail finally target collector could test directly single compiler invocation like gcc include gctest test gctest extra gctest window cmake could library describe type nmake nt_makefile assume microsoft command line tool instal suitably configure see readme win32 doc readme win32 detail library thread support thread safe operation default unless disable thread pas configure denable_threads pas cmake tool library could configure precisely define macro list readme macro doc readme macro focus collector classic makefile makefile direct base process type make check instead make automatically collector setjmp_test gctest setjmp_test give information configure collector useful primarily machine already support gctest somewhat superficial test collector functionality failure indicate core dump message effect collector break gctest take second reasonable vintage desktop may memory multi thread version bite version may make check also last step attempt test cord string library makefile direct generate library libgc link type make makefile direct cord cord library libcord well gnu style process understand usual target make check number test make least libgc libcord try configure help see configuration option currently possible exercise combination option way include need client put include subdirectory normally make cord add cord collector currently design essentially unmodified machine flat bite bite address space include vast majority workstation x86 case win32 separate makefile supply separate host specific doc readme dynamic library completely support sunos solaris even support functional last sun release linux freebsd netbsd irix win32 win32s osf dec axp machine plus perhaps others list near top dyn_load machine recommend follow add dynamic library support send static version library arrange dynamic library standard malloc still dangerous library store pointer garbage collect object nearly standard interface prohibit deal correctly pointer stack allocate object strtok exception case assume pointer alignment consistent enforce standard compiler nonstandard compiler may adjust alignment parameter define gc_priv note may also issue pack record structs enforce alignment pointer port machine byte address bite bite address require major effort port plain msdos win16 hard machine already mention nonstandard compiler port suggestion provide doc port interface allocator follow routine intend directly call user note usually gc_malloc necessary gc_clear_roots gc_add_roots call may require collector trace nonstandard place dynamic library area machine collector already understand machine may desirable set gc_stackbottom good approximation stack base bottom client may include define follow plus many others gc_malloc byte allocate object give size unlike malloc object clear return user gc_malloc invoke garbage collector determine appropriate gc_malloc may return unable acquire sufficient space operate system probable consequence space possible consequence function call fail due lack stack space collector fail way maintain internal structure crucial system process fail take machine possibility independent malloc gc_malloc_atomic byte allocate object give size guarantee contain pointer return object guarantee clear always replace gc_malloc fast collection time collector probably fast large character array etc allocate gc_malloc_atomic statically allocate gc_realloc object new_bytes change size object give size return pointer new object may may pointer old object new object take atomic old new object composite large original object newly add byte clear likely allocate new object gc_free object explicitly deallocate object return gc_malloc gc_malloc_atomic friend necessary minimize collection performance critical probably performance loss small object byte gc_expand_hp byte explicitly increase heap size normally automatically garbage collection fail reclaim enough memory explicit call gc_expand_hp may prevent unnecessarily frequent collection program startup gc_malloc_ignore_off_page byte identical gc_malloc client promise keep pointer somewhere within first byte object live pointer normally declare volatile prevent interference compiler optimization recommend way allocate anything likely large gc_malloc may failure reclaim object gc_set_warn_proc proc redirect warn collector warn rare ignore development gc_enable_incremental enable generational incremental collection useful large heap machine provide access page dirty information dirty bite may interfere debug catch address fault place restriction heap argument system call since write fault inside system call may handle well gc_register_finalizer object proc friend allow registration finalization user supply finalization proc object invoke object become unreachable sophisticate finalization order issue see global variable gc_free_space_divisor may adjust default value space collection time opposite effect set almost disable collection allocation simply grow heap variable gc_non_gc_bytes normally may change reflect amount memory allocate routine consider candidate collection careless may course excessive memory consumption additional tune possible parameter define near top gc_priv gc_malloc intend might appropriate define define malloc gc_malloc define calloc gc_malloc small piece allocation intensive gc_inline include allocation macro may place gc_malloc friend externally visible name garbage collector start gc_ avoid name conflict client avoid prefix except access garbage collector routine provision allocation explicit type information rarely necessary detail find gc_typed interface allocator elli hull interface collector include collector distribution intend type configure enable cplusplus make cmake denable_cplusplus cmake make makefile direct depend system create libgccpp libgctba share library equivalent libgccpp libgctba link either first gccpp second gctba see gc_cpp gcinterface doc gcinterface definition interface interface try approximate elli detlefs garbage collection proposal without compiler change often also necessary gc_allocator allocator declare construct stl structure otherwise subobjects stl structure allocate system allocator object refer may prematurely collect leak detector collector may track leak program intend malloc free extreme real time portability constraint define find_leak makefile cause collector print human readable object description whenever inaccessible object find explicitly free object also automatically reclaim object allocate gc_debug_malloc see next section default human readable object description least contain source line number leak object allocate may sometimes sufficient machine also report cryptic stack trace symbolic sometimes call symbolic stack trace invoke program foo tool callprocs foo short script invoke adb expand program counter value symbolic address largely supply scott schwartz note debug facility describe next section sometimes slightly effective leak find mode since latter gc_debug_free actually reuse object otherwise object simply mark invalid also note test design meaningfully find_leak mode debug facility routine gc_debug_malloc gc_debug_malloc_atomic gc_debug_realloc gc_debug_free provide alternate interface collector provide help memory overwrite error like object allocate way annotate additional information information check garbage collection detect inconsistency report stderr simple case write past end allocate object catch object explicitly deallocated collector invoke object live first deallocation object clear debug info associate object accidentally repeat call gc_debug_free report deallocation object without debug information memory error report stderr addition return null gc_debug_malloc check garbage collection enable first call function slowdown collection frequent heap check desire achieve explicitly invoke gc_gcollect debugger gc_debug_malloc allocate object pas gc_realloc gc_free conversely however acceptable allocate object gc_debug_malloc gc_malloc object provide pool keep distinct case low probability gc_malloc allocate object may misidentified overwrite happen probability probability gc_debug_malloc never call gc_debug_malloc gc_debug_malloc_atomic gc_debug_realloc take additional trail argument string integer interpret allocator store object string copy error involve object detect print macro gc_malloc gc_malloc_atomic gc_realloc gc_free gc_register_finalizer friend also provide require argument correspond nondebugging routine include gc_debug define call debug version function pas current name line number extra argument appropriate include without gc_debug define macro instead define nondebugging equivalent gc_register_finalizer necessary since pointer object debug information really pointer displacement byte object begin translation necessary finalization routine invoke detail store header see definition type dbg_mlc incremental generational collection collector normally interrupt client duration garbage collection mark phase may unacceptable interactive response need program large heap collector also generational mode usually attempt collect object allocate since last garbage collection furthermore mode garbage collection mostly incrementally small amount work perform response large number gc_malloc request mode enable call gc_enable_incremental incremental generational collection effective reduce pause time collector way tell object page recently modify collector source information information provide system may provide several form solaris potentially similar system information dirty page read proc system system sunos4 possible write protect heap catch fault system require system call write heap read handle specially client see os_dep detail information supply programmer object consider dirty call gc_end_stubborn_change provide library compile suitably typically worth short live object note bug cause miss gc_end_stubborn_change gc_reachable_here call likely observe infrequently hard trace bug memory recognizable pointer reclaim exclusive ing forward backward link list cut optimizers may lose last undisguised pointer memory object consequence clever optimization almost never observe practice real time collector standard configuration percentage time require collection constant across heap size collection pause increase large heap decrease number processor parallel mark enable vintage machine time may order per accessible memory need scan process mileage may vary incremental generational collection facility may help case feedback contribution question notification please address bug report new feature idea github submission please check yet someone else want contribute submit pull github need help stack old technical discussion available bdwgc mail list archive compress browse get new release announcement subscribe receive notification email 3rd party free service like ifttt setup notify issue please project github copyright warranty contributor intent make easy bdwgc libgc free proprietary software hence boehm demers weiser conservative garbage collector expect link dynamically statically client application cover license similar spirit mit style exact license information provide license license contributor list author author
C C++;https://github.com/Neargye/nameof;github conan vcpkg try compiler like project please consider donate fund help victim war ukraine nameof header library provide nameof macro function simply obtain name variable type function macro enum feature header dependency free compile time name variable member variable name type variable type name function member function name enum enum variable name macro enum string documentation reference doc reference limitation doc limitation integration integration cpp nameof nameof enum nameof type compile time remark read limitation doc limitation functionality integration add require nameof hpp include nameof hpp project external dependency nameof manage dependency merely add nameof conan require release version want archlinux user nameof package manager aur follow command yay nameof alternatively something like base cmake fetch_content module compiler compatibility clang llvm msvc visual studio xcode gcc gcc nameof_enum license mit license license
C C++;https://github.com/google/ion;ion ion portable suite library tool client application especially graphical small fast robust cross platform across many platform device include desktop mobile device browser embed platform detail fair amount documentation see ion small 500k binary size mobile platform often much small powerful tool fast productivity develop application robust portable application infrastructure aid object lifetime management memory allocation application start static instance thread time set edit automatic performance instrumentation tool graphic analyze graphic scene find performance bottleneck trace opengl call examine argument scene resource multiple context automatically time graphic state introspection time shader edit change shaders immediately see fast graphic minimal overhead application opengl test well test facilitate test application test coverage black white box test unit test integration test mock opengl api allow direct renderer unit test validation integrate remote extensible api allow change arbitrary application setting fly fast development test debug cross platform desktop linux mac osx window opengl handheld android arm x86 mips arm x86 bite variant browser emscripten asm nacl pnacl cross functional many team across google billion device multiple google product note official google product
C C++;https://github.com/tiny-dnn/tiny-dnn;maintainer project may abandon since maintainer look move case anyone interest continue project let know discus next step please visit join chat coverage tiny dnn deep suitable deep limit computational resource embed system iot device linux mac window table content feature feature comparison library comparison library support support dependency dependency contribute contribute reference reference license license gitter room gitter room check info new 0a3 tiny dnn 0alpha tiny dnn move organization account rename tiny dnn tiny dnn feature reasonably fast without gpu tbb thread sse avx vectorization accuracy mnist minute core 3520m portable header anywhere long compiler support include tiny_dnn write nothing easy integrate real application output stdout stderr constant throughput simple parallelization garbage collection work without throw exception import caffe simply implement good library neural comparison library please see wiki support layer type core fully connect dropout linear operation pad power convolution convolutional average pool max pool deconvolutional average unpooling max unpooling normalization contrast normalization forward pas batch normalization split merge concat slice elementwise add activation function tanh asinh sigmoid softmax softplus softsign rectify linear relu leaky relu identity scale tanh exponential linear unit elu scale exponential linear unit selu loss function cross entropy mean square error mean absolute error mean absolute error epsilon range optimization algorithm stochastic gradient descent without normalization momentum nesterov momentum adagrad rmsprop adam adamax dependency nothing need compiler gcc clang tiny dnn header nothing want execute sample program unit test need type follow command change directory executable would like ide like visual studio xcode also cmake generate correspond open sln visual studio window msvc type command linux mac window mingw cmake option available option description default additional requirement use_tbb intel parallelization off1 intel use_omp openmp parallelization off1 openmp use_sse intel sse instruction set intel cpu support sse use_avx intel avx instruction set intel cpu support avx use_avx2 tiny dnn avx2 library support intel cpu support avx2 use_nnpack nnpack convolution operation acceleration package neural multi core use_opencl enable disable opencl support experimental open standard parallel program heterogeneous use_libdnn greentea libdnn convolution operation gpu via opencl experimental universal convolution support cuda use_serializer enable serialization on2 use_double double precision computation instead single precision use_asan address sanitizer clang gcc compiler use_image_api enable image api support use_gemmlowp enable gemmlowp support build_tests unit test off3 build_examples project build_docs profile unit test gprof tiny dnn standard library parallelization default serialization switch speedup compilation time tiny dnn google default framework unit test pre installation require automatically cmake configuration type follow command want intel tbb test customize configuration edit include config customize default behavior construct convolutional neural construct multi layer perceptron mlp another way construct mlp sample read main cpp mnist page contribute since deep community rapidly grow would love get contribution accelerate tiny dnn development quick guide contribute take look contribution document contribute reference bengio practical recommendation gradient base deep arxiv 5533v2 lecun bottou bengio haffner gradient base apply document proceed ieee useful reference list ufldl recommend deeplearning net read license bsd clause license gitter room gitter room discus new feature feel free join developer user
C C++;https://github.com/panda3d/panda3d;panda3d panda3d game engine framework render game development program panda3d open source free purpose include commercial venture thank liberal panda3d capability visit feature panda3d check resource get stick ask help active panda3d license modify bsd license see license detail instal panda3d late panda3d sdk familiar instal package follow command easy way late development panda3d exist installation follow command command fail please make sure version pip date prefer full sdk tool late development obtain automatically keep date late github version panda panda3d window panda3d microsoft visual compiler free visual studio also need window intend target window vista also need window also need third party dependency library available script available url depend whether bite bite system click instruction source acquire dependency panda3d command prompt follow command change msvc version option base version visual remove window sdk option need support window vista require window sdk succeed produce exe panda3d system note may choose remove eigen eigen support order improve runtime performance however cause take hour complete eigen heavily template base library msvc compiler perform well circumstance linux panda3d linux easy need invoke makepanda script version want panda3d makepanda help option see option available usually want specify everything option support feature detect prerequisite dependency installer option produce installable deb rpm depend distribution follow command illustrate panda3d common option probably see warn say unable find several dependency package determine want include respective development package may visit manual overview various dependency ubuntu command cover frequently third party package panda3d either deb rpm package produce depend linux distribution package debian ubuntu linux distribution support deb rpm package may installpanda script instead directly copy appropriate location computer may ldconfig tool order update library cache instal panda3d alternatively add wheel option produce whl instal installation pip macos macos need set precompiled thirdparty package order compile panda3d acquire place thirdparty directory inside panda3d source directory may panda3d command like follow may target specific minimum macos version osxtarget flag follow release number successful makepanda generate dmg source directory contain installer simply open package order sdk onto system freebsd freebsd similar linux need requisite package system package manager recommend set dependency command also need choose version want appropriate package python37 python38 makepanda script choose version successful produce pkg root source directory pkg android although possible panda3d android device recommend route cross compile whl sdk ndk build_apps command application apk aab bundle need get late thirdparty package obtain artifact page last successful include moment extract instead command show compile wheel support android abis possible generate wheel build_apps explain page test pytest command instal panda3d need configure environment point pythonpath variable directory linux also need point ld_library_path variable lib directory convenience alternatively pas test option makepanda report issue encounter bug panda3d please report bug tracker host make sure first search function see bug already report fill bug report make sure include much information possible help developer track issue version panda3d operate system architecture necessary developer reproduce issue sure whether encounter bug feel free ask forum irc channel first support project would like support project financially visit campaign contribution help accelerate development panda3d list backer see backer backer visit sponsor web site thank everyone donate
C C++;https://github.com/catchorg/Clara;clara repository unmaintained fork somewhat maintain simple composable command line parser beyond clara single header library include clara hpp parser single option create like parser directly like note exception error handle combine parser compose like opt specify option start short dash long dash window forward slash also accept automatically interpretted short dash option argument take case opt take second argument hint pure flag case opt argument must boolean option name provide set square bracket description string provide parenthesis first argument opt variable local global member type convert string std ostream arg specify argument tie option square bracket name otherwise work like opt console optimise usage string obtain insert parser stream usage string information supply format console width convenience standard help option help specify help parser take boolean bind usage please see unit test look catch base catch lib net full documentation come soon key feature single header external dependency except std library define interface get parse type conversion usage string redundancy composable opt arg independent parser combine produce composite parser stag across multiple function call even project bind parser directly variable receive parse intermediate dictionary worry also bind parser lambda custom handle deduce type bind variable lambda perform type conversion via ostream error handle behind scene bind parser vector args multiple value type error propagation rather exception yet exception disable come late posix standard short long opt behaviour roadmap see direction clara please see roadmap roadmap old version early version clara please note complete rewrite assume different interface composability big step forward conversion fairly simple mechanical task bite manual work take version ready course able hope find new interface improvement offer new feature move forward expect maintain remain branch
C C++;https://github.com/JosephP91/curlcpp;curlcpp object orient wrapper curl tool want know bite curl libcurl official website donate help improve project donate compile link standalone note curl require add src library path include include path link link curlcpp std cpp lcurlcpp lcurl want terminal std cpp home username path src home username path include lcurlcpp lcurl submodule git submodule cmake buildsystem add follow line cmakelists txt simple usage usage find test folder simple http request get google web page curl_easy interface want get information current curl session could instead creation http post login form would like put return content nothing easy interest let put request output variable implement sender receiver make easy send receive without handle buff simple send receiver would
C C++;https://github.com/torch/torch7;join chat development status torch active developement functionality provide backend torch thnn thc thcunn library actively extend write aten library aten expose operator would expect torch7 cutorch cunn directly include additional support sparse tensor distribute operation note however api semantics backend library torch different semantice provide aten aten provide numpy style broadcast information fork torch library refer interface need help torch7 community support find follow location torch community close non existent question support issue google report bug hang developer user strictly issue large blob text gitter torch package reference manual __torch__ main package structure multi dimensional tensor mathematical operation define additionally provide many utility access serialize object arbitrary type useful utility torch package tensor library tensor doc tensor define _all powerful_ tensor object provide multi dimensional numerical array type templating mathematical operation doc math define tensor object type storage doc storage define simple storage interface control underlie storage tensor object interface library doc abstract interface common operation disk doc diskfile define operation store disk memory doc memoryfile define operation store ram pipe doc pipefile define operation pip command high level operation doc serialization define high level serialization function useful utility timer doc timer provide functionality _measuring time_ tester doc tester generic tester framework cmdline doc cmdline command line argument parse utility random doc random define random number generator package various distribution finally useful utility doc utility function provide easy handle torch tensor type class inheritance useful link community torch torch
C C++;https://github.com/an-tao/drogon;total join chat join telegram group docker english readme readme overview drogon base http application framework drogon easily various type web application server program drogon name dragon american series game throne really like drogon cross platform framework support linux macos freebsd openbsd haikuos window main feature follow non block lib base epoll kqueue macos freebsd provide high concurrency high performance please visit tfb test detail provide completely asynchronous program mode support http1 server side client side base template simple reflection mechanism implement completely decouple main program framework controller view support cooky session support back end render controller generate view generate html page view describe csp template cod embed html page csp tag drogon command line tool automatically generate compilation support view page dynamic load dynamic compilation load runtime provide convenient flexible rout solution path controller handler support filter chain facilitate execution unify logic login verification http method constraint verification etc handle http request support base openssl support websocket server side client side support json format request response friendly restful api application development support upload support gzip brotli compression transmission support pipelining provide lightweight command line tool drogon_ctl simplify creation various class drogon generation view support non block base asynchronously read write database postgresql mysql mariadb database support asynchronously read write sqlite3 database base thread pool support redis asynchronous read write support arm architecture provide convenient lightweight orm support regular object database bidirectional map support plugins instal configuration load time support aop joinpoints support coroutines simple unlike framework main program drogon application keep clean simple drogon trick decouple controller main program rout setting controller macro configuration main program typical drogon application simplify configuration follow drogon provide interface add controller logic directly main function user register handler like drogon interface look intuitive suitable complex business logic scenario assume even handler need register framework good practice implement separately respective class unless logic simple recommend interface instead create httpsimplecontroller follow program automatically generate command line tool drogon_ctl provide drogon command drogon_ctl create controller testctrl user need add business logic controller return hello world string client access url json format response create controller follow let step create demo restful api httpcontroller class show omit source see user httpcontroller map path parameter time convenient way create restful api application addition also find handler interface asynchronous mode response return callback object design performance reason asynchronous mode drogon application handle large number concurrent request small number thread compile source get simple web application good start information please visit contribution every contribution welcome please refer contribution guideline contribute information
C C++;https://github.com/microsoft/mimalloc;window open ide vs2019 mimalloc sln visual studio mimalloc project static library msvc x64 mimalloc override project dll override malloc entire program macos linux bsd etc system library share dynamic library dylib static library single object sudo make library header usr local lib usr local include debug version many internal check maintain detail statistic name share library libmimalloc debug finally _secure_ version guard page encrypt free list etc name share library libmimalloc secure ccmake instead cmake see customize available option note cmake sudo apt get cmake ccmake sudo apt get cmake curse gui single source also directly single src static part project without need cmake make sure also add mimalloc include directory include path library prefer usage include link share static library mi_malloc api exclusively allocation mimalloc safe call mmap virtualalloc exist allocator link program cmake simply cmakelists txt find locally instal mimalloc either link share dynamic library link static library see test cmakelists txt best performance program also recommend override global new delete operator convience mimalloc provide include single source project mimalloc also provide mi_stl_allocator struct implement std allocator interface pas environment variable print verbose message mimalloc_verbose statistic mimalloc_show_stats debug version mi_ prefix api always possible though exist program already standard malloc interface another option override standard malloc interface completely redirect call _mimalloc_ library instead environment option set option either programmatically via environment variable mimalloc_show_stats show statistic program terminate mimalloc_verbose show verbose message mimalloc_show_errors show error warn message mimalloc_page_reset default mimalloc reset purge page signal underlie physical memory reuse reduce memory fragmentation long server program set long improve performance batch like program alternative mimalloc_reset_delay set high 100ms default make page reset occur frequently instead turn completely mimalloc_use_numa_nodes pretend numa nod set actual numa nod detect runtime set may avoid problem virtual environment also set low number actual numa nod fine thread potentially allocate memory across actual numa nod happen case numa local allocation always best effort guarantee mimalloc_large_os_pages large page 2mib available workload significantly improve performance mimalloc_verbose check large page enable usually need explicitly allow large page window window huge linux linux huge however sometimes slow reserve contiguous physical memory large page care system fragment memory reason generally recommend mimalloc_reserve_huge_os_pages instead whenever possible mimalloc_reserve_huge_os_pages number 1gib _huge_ page reserve huge page startup sometimes give large latency performance improvement big workload usually good mimalloc_large_os_pages combination set like large page care reserve contiguous physical memory take long time memory fragment reserve huge page startup note usually need explicitly enable huge page window window huge linux linux huge huge page may beneficial set set mimalloc_eager_commit_delay default delay initial segment 4mib thread allocate huge page prevent thread short live allocate little take space huge page area reset huge page usually allocate evenly among numa nod mimalloc_reserve_huge_os_pages_at numa node start allocate huge page specific numa node instead caution fork combination either large huge page fork copy write page original process include huge page memory write area copy entire 1gib huge page 2mib large page cause memory usage grow large increment linux huge window huge secure mode _mimalloc_ secure mode dmi_secure flag cmake enable various mitigation make mimalloc robust exploit particular internal mimalloc page surround guard page heap metadata behind guard page well buff overflow exploit reach metadata free list pointer per page key prevent overwrite know pointer well detect heap corruption double free detect ignore free list initialize random order allocation randomly choose extension reuse within page mitigate attack rely predicable allocation order similarly large heap block allocate mimalloc also address randomize always evaluate care part overall security strategy mitigation guarantee debug mode _mimalloc_ debug mode various check runtime catch development error statistic maintain detail object size show mimalloc_show_stats runtime object pad end detect byte precise heap block overflow double free free invalid heap pointer detect corrupt free list form free detect override standard malloc override standard malloc new either _dynamically_ _statically_ dynamic override recommend way override standard malloc interface override linux bsd elf base system preload mimalloc share library call standard malloc interface resolve _mimalloc_ library set extra environment variable check mimalloc like debug version get detail statistic override macos macos also preload mimalloc share library call standard malloc interface resolve _mimalloc_ library note certain security restriction may apply override window override window robust particular advantage able redirect malloc free call dynamic runtime allocator include dll library override window require link program explicitly mimalloc dll runtime library dll mdd switch also mimalloc redirect dll mimalloc redirect32 dll must put folder main mimalloc override dll runtime dependency redirection dll ensure call runtime malloc api get redirect mimalloc mimalloc override dll ensure mimalloc dll load time easy insert call mimalloc api main function like mi_version include mi_version switch linker see mimalloc override test project best performance window also recommend also override new delete operation include single source project environment variable mimalloc_disable_redirect disable dynamic override time mimalloc_verbose check mimalloc successfully redirect note principle possible even patch exist executables without recompilation link dynamic runtime ucrtbase dll put mimalloc override dll import table put mimalloc redirect dll folder patch cff static override unix like system also statically link _mimalloc_ override standard malloc interface recommend way link final program _mimalloc_ single object mimalloc override object instead library linkers give preference archive resolve symbol ensure standard malloc interface resolve _mimalloc_ library link first object another way override statically work platform link statically mimalloc show introduction include header source define malloc etc mi_malloc provide work reliably though source control otherwise mix pointer different heap may occur performance last update test _mimalloc_ many top allocator wide range benchmark range various real world program synthetic benchmark see allocator behave extreme circumstance benchmark suite _mimalloc_ outperform lead allocator _jemalloc_ _tcmalloc_ _hoard_ etc similar memory footprint nice property consistently well wide range benchmark general memory allocator interest exist algorithm optimal give allocator usually construct workload well goal thus find allocation strategy perform well wide range benchmark without suffer much underperformance common situation always interpret care since benchmark test synthetic uncommon situation may never apply workload allocator well xmalloc testn include even best industrial allocator like _jemalloc_ _tcmalloc_ world large system like chrome freebsd also benchmark measure behaviour large long server workload bad case latency allocation much work mimalloc work well workload reduce virtual memory fragmentation long service optimization always reflect current benchmark suite show overview specific detail benchmark refer technical benchmark suite automate available separately benchmark core amd 5950x zen3 test core amd 5950x processor 4ghz 9ghz boost 32gib memory 3600mhz ubuntu glibc gcc measure version _mimalloc_ main version tag new beta version xmi tag main version secure mode smi tag allocator google tag gperftools chrome facebook tag jason evans firefox freebsd intel thread block tbb tag v2020 tag mattias jansson original scalable git d880f72 allocator emery berger memory compact git 67ff31a allocator bobby power _et al_ finally default system allocator glibc base _ptmalloc2_ benchmark end logical core parallel average report relative mimalloc mean take long legend also contain _overall relative score_ allocator point maximum allocator fast benchmark single thread _cfrac_ benchmark dave barrett continue fraction factorization many small short live allocation allocator well common usage _mimalloc_ tad fast _tcmalloc_ _jemalloc_ _leann_ program interest large realistic concurrent workload theorem prover compile standard library speedup _tcmalloc_ quite significant lean spend time allocator mean _mimalloc_ fast _tcmalloc_ surprise measure pure allocation benchmark like _alloc test_ conjecture see outsized improvement _mimalloc_ good locality allocation improve performance computation program well single thread _redis_ benchmark show allocator well workload _larsonn_ server benchmark larson krishnan allocate free thread observe behavior call _bleeding_ actual server application benchmark simulate _mimalloc_ quite bite fast _tcmalloc_ _jemalloc_ probably due object migration different thread _mstressn_ workload perform many allocation allocation migrate object thread _larsonn_ however also create destroy _n_ worker thread time keep object alive beyond life time allocate thread observe behavior many large server application benchmark mattias jansson allocator test originally design _rpmalloc_ try simulate realistic allocation pattern multiple thread difference allocator become apparent second benchmark set test specific aspect allocator show even extreme difference _alloc test_ ologn technology allocation intensive benchmark million allocation various size class test scale allocator perform almost identically _alloc test1_ _alloc testn_ mean scale linearly _sh6bench_ _sh8bench_ benchmark develop part smartheap _sh6bench_ _mimalloc_ much good others fast _jemalloc_ explain well believe cause part reverse free ing pattern _sh6bench_ _sh8bench_ variation object migration thread whereas _tcmalloc_ well _sh6bench_ addition object migration cause slow _xmalloc testn_ benchmark lever boreham christian eder simulate asymmetric workload thread allocate others free observe pattern large server application see _mimalloc_ technique non contend sharded thread free list pay outperform others large margin _rpmalloc_ _tbb_ _glibc_ also scale well benchmark _cache scratch_ benchmark emery berger introduce hoard allocator test _passive false_ share cache line single thread perform multiple thread potential allocator induce false share cache line cause large time difference crundal describe detail false cache line share occur _tcmalloc_ design also discus avoid small change _tbb_ _rpmalloc_ _mesh_ allocator also avoid cache line share completely _hoard_ _glibc_ seem mitigate effect kukanov voss describe detail design _tbb_ avoid false cache line share core intel xeon completeness big amazon instance consist core intel xeon cascade lake 4ghz boost 5ghz 144gib ecc memory ubuntu glibc gcc clang time mimalloc allocator xmi smi compile clang compiler instead gcc similar amd interest see difference _larsonn_ _mstressn_ _xmalloc testn_ benchmark peak work set follow figure show peak work set allocator benchmark 18xlarge instance note _xmalloc testn_ memory usage disregard allocate fast program similarly memory usage _larsonn_ _mstressn_ _rptestn_ _sh8bench_ vary depend schedule speed nevertheless hope improve memory usage _mstressn_ _rptestn_ _cfrac_ _larsonn_ _sh8bench_ small work set skew reference emery berger kathryn mckinley robert blumofe paul wilson _hoard scalable memory allocator multithreaded applications_ ninth international conference architectural support program language operate system asplos cambridge november larson krishnan _memory allocation long server applications_ ismm vancouver canada grunwald zorn henderson _improving cache locality memory allocation_ cartwright editor proceed conference program language design page new york usa june barnes hut hierarchical log force calculation algorithm_ nature lever boreham _malloc performance multithreaded linux environment usenix annual technical conference freenix session san diego june available timothy crundal _reducing active false share tcmalloc_ cs16s1 project australian national university alexey kukanov michael voss _the foundation scalable multi core software intel thread block intel technology journal bobby power david tench emery berger andrew mcgregor _mesh compact memory management proceed 40th acm sigplan conference program language design pldi june page contribute project welcome contribution suggestion contribution require agree contributor license agreement cla declare right actually grant right contribution detail visit submit pull request cla bot automatically determine whether need provide cla decorate appropriately label comment simply follow instruction provide bot need across repos cla old release note stable release standard atomics pas tsan test improve handle fail commit window add api call stable release improve error recovery low memory situation support illumos haiku numa support vista improve numa detection amd ryzen ubsan support stable release improve behavior memory situation improve malloc zone macos pic static library default add option abort memory line buff statistic stable release fix compilation android mingw raspberry conda stability fix window fix multiple mimalloc instance executable fix strnlen overload fix align debug pad stable release minor update clang fix alignment issue small object stable release fix potential memory leak improve override thread local support freebsd netbsd dragonfly macosx new byte precise heap block overflow detection debug mode besides double free detection free list corruption detection add nodiscard attribute allocation function enable mimalloc_page_reset default new reclamation strategy abandon heap page good memory footprint stable release improve free performance small bug fix stable release improve performance delay page reset eager concurrent free addition stl allocator fix potential memory leak stable release bug fix improve randomness strong free list secure mode stable release minor update stable release bug fix improve secure mode free list corruption check double free mitigation improve dynamic override window stable release pre release robust window dynamic override initial huge page support pre release various performance improvement
C C++;https://github.com/facebook/proxygen;proxygen facebook http library support linux macos project comprise core http abstraction facebook internally basis many http server proxy client release focus common http abstraction simple httpserver framework future release provide simple client apis well framework support http spdy spdy http http goal provide simple performant modern http library google group general discussion original blog also background project intro video explain like instal note currently project test ubuntu mac osx although likely work many platform need least gib memory compile proxygen dependency easy proxygen directory get dependency proxygen test manually _build make test remove temporary directory _build rebase dependency rebuild reinstall proxygen platform another platform may need several package first proxygen folly autotools base project introduction directory structure content directory purpose proxygen external contain non instal 3rd party proxygen depend proxygen lib core abstraction http specific include http http proxygen lib service connection management server proxygen lib utils miscellaneous helper contain wrap proxygen lib simple server recommend top apis architecture central abstraction understand proxygen lib session codec transaction handler low level abstraction generally recommend directly byte read wire httpcodec store inside httpsession parse high level object associate transaction identifier codec call httpsession responsible maintain map transaction identifier httptransaction object http request response pair separate httptransaction object finally httptransaction forward call handler object implement httptransaction handler handler responsible implement business logic request response handler call back transaction generate egress whether egress request response call flow transaction back session codec convert high level semantics particular call appropriate byte send wire handler transaction interface create request handle response api generic enough allow httpsession specialize slightly differently depend whether connection issue respond http request core proxygen architecture coreproxygenarchitecture png move high level abstraction proxygen http server simple set apis recommend way interface proxygen act server need full control low level abstraction basic component httpserver requesthandlerfactory requesthandler httpserver take configuration give requesthandlerfactory server start instal requesthandlerfactory spawn requesthandler http request requesthandler simple interface user library implement subclass requesthandler inherit protect member responsehandler downstream_ send response proxygen library instal server try ing directory contain echo server proxygen start echo server verify work curl different terminal find sample simple server support http server push simple server static simple fwdproxy curl like client quic http proxygen support http depend facebook library ietf transport make dependency optional http test sample binary quic also handy command line utility http server client sample usage utility support log format start server qlogger_path option many knob tune quic transport layer documentation doxygen proxygen internal documentation generate copy doc doxygen doxyfile project root want look html namespaceproxygen html start also generate folly documentation license see license license contribute contribution proxygen welcome read guideline contribute contribute make sure sign send pull request whitehat facebook bounty safe disclosure security bug find vulnerability please process outline page public issue
C C++;https://github.com/jll63/yomm2;yomm2 complete rewrite yomm11 deprecate library much good see yomm11 yomm2 find familiar concept open multi method prefer read directly synopsis synopsis cpp open method nutshell cross cut concern expression problem matrix math library deal sort matrix dense diagonal tri diagonal etc matrix subtype correspond class hierarchy root matrix would like render matrix object json string representation vary depend exact type object matrix diagonalmatrix need store diagonal element cross cut turn oop offer good solution stick pure virtual to_json function matrix base class override subclass easy solution severe drawback require change matrix class subclass recompile library application contain to_json function even need way virtual function implement may resort type switch application test category generate json accordingly tedious error prone extensible add new matrix subclass require update type switch visitor pattern also suffer flaw would nice could add behavior exist type easily unintrusively extend exist class hierarchy via derivation could solve call expression exactly open method solve expression problem let look declare_method line declare open method call to_json take virtual argument type const matrix return string virtual_ decorator specify argument must take account select appropriate specialization essence thing virtual string to_json const inside class matrix except virtual function live outside class add many want without modify class note specify argument name virtual_ arg permit follow define_method block define to_json method dense matrix diagonal matrix yorel yomm2 update_methods must call method call dynamically load unload share library multiple dispatch method virtual argument handy certain situation implement binary operation matrix performance worry open method almost fast ordinary virtual member function turn optimization clang gcc dispatch call method virtual argument slow call equivalent virtual member function body method amount work difference unnoticeable see note benchmark assembly list instal make sure follow dependency capable compiler cmake version clone repository create directory cmake make want test yomm2 several boost library preprocessor dynamicbitset typetraits include yomm2 header boost test test suite library already available machine find cmake case make sure pre instal library version boost find late version boost header mention section instal along yomm2 decide make also want benchmark case really want release automatically dependency finally extern within root directory yomm2 finally like want library header well cmake package configuration make sure add location cmake_prefix_path find_package yomm2 include project link target_link_library yomm2 yomm2 automatically add necessary include directory need link yomm2 reference reference library come series complete matrix matrix cpp asteroid wikipedia article multiple dispatch asteroid cpp process ast sans clumsy visitor accept_no_visitors cpp adventure method adventure cpp friendship namespaces method container friend declaration container present library cppcon video
C C++;https://github.com/dpilger26/NumCpp;numcpp github github github codacy numcpp templatized header numpy author david pilger dpilger26 gmail com version github tag late license mit test standard compiler visual studio gnu clang boost version release numpy numcpp quick start guide quick start guide mean brief overview thing numcpp full breakdown everything available numcpp library please visit full container main structure numcpp ndarray inherently array class array implement 1xn array also datacube class provide convenience container store array ndarray limit usefulness past simple container numpy numcpp initializers many initializer function provide return ndarray common need numpy numcpp slice broadcast numcpp offer numpy style slice broadcast numpy numcpp random random module provide simple way create random array numpy numcpp concatenation many way concatenate ndarray available numpy numcpp diagonal triangular flip follow return new ndarray numpy numcpp iteration numcpp follow idiom stl provide iterator pair iterate array different fashion numpy numcpp logical logical function numcpp behave numpy numpy numcpp comparison numpy numcpp minimum maximum sort numpy numcpp reducer reducer accumulate value ndarray along specify axis specify value accumulate along numpy numcpp print output method numcpp class support print method stream operator numpy numcpp mathematical function numcpp universal function provide large set number mathematical function basic function numpy numcpp exponential function numpy numcpp power function numpy numcpp trigonometric function numpy numcpp hyperbolic function numpy numcpp classification function numpy numcpp linear algebra numpy numcpp
C C++;https://github.com/gongminmin/KlayGE;klayge github klayge cross platform open source game engine plugin base architecture start since explicit goal klayge arm engine cut edge technology provide framework make game development test port simple possible get start compile klayge cmake must instal first build_all klayge sample tool etc detail please see platform klayge develop platform limitation window desktop macos linux klayge deploy runtime platform support plugins detail window desktop window store android linux macos contribute open source project klayge benefit greatly volunteer work helpful developer good bug report make user bug report feature request notice bug idea would like see come real work bug report feature request typically submit issue tracker engineer workflow want contribute please check submit patch pull request link website wiki
C C++;https://github.com/google/googletest;googletest announcement live head googletest follow abseil live head recommend update late commit main branch often documentation update documentation live github page recommend browse documentation github page rather directly repository release release available come soon plan take dependency documentation improvement plan welcome googletest google test framework repository merger formerly separate googletest googlemock project closely relate make sense maintain release together get start see googletest user documentation recommend start googletest information googletest find googletest readme googletest readme feature test framework test discovery rich set assertion user define assertion death test fatal non fatal failure value parameterized test type parameterized test various option test xml test report generation support platform googletest require codebase compiler compliant standard new googletest officially support follow platform operate system tool list community support community support platform patch complicate may consider notice problem platform please issue googletest github issue pull request contain fix welcome operate system linux macos window compiler gcc clang msvc macos user xcode provide clang system note bazel system team internally test cmake support best effort basis community googletest addition many internal project google googletest also follow notable project chromium behind chrome browser chrome compiler protocol google interchange format computer vision library relate open source project gtest qt5 base automate test runner graphical user interface powerful feature window linux platform googletest test runner test binary allow track progress via progress bar display list test failure click show failure text googletest write gtest tap event listener googletest implement tap test output test runner understand tap may find useful test runner test binary parallel provide significant speed googletest extension allow view googletest tree view debug test extension allow view googletest tree view debug test small gherkin dsl parser generate stub googletest contribute change please read detail contribute project happy test
C C++;https://github.com/JanVanRyswyck/awesome-talks;awesome talk lot screencasts record user group gather conference talk available online try commit watch least new talk every week quite time create list online talk really enjoy watch also update list whenever watch another awesome talk worthy enough suggestion always appreciate pull request without ado particular order category software object orient functional software web test drive computer cognitive software development computer revolution happend alan kay future bret victor invent bret victor medium think bret victor find way chris granger program terrible lesson life thomas figg computer sadness jam mickens rich hickey simple make rich hickey value rich hickey effective program year rich hickey web anil dash grow guy steele mess joe armstrong rus olsen simplify challenge software problem rocket bradley grzesiak short history software engineer idea paolo perrotta linus torvalds linus torvalds bad program language mark rendle unconventional program chemical carin meier ineffective cod habit many kevlin henney wtfs dorothy wingrove program write felienne herman paul phillips real software glenn vanderburg feature branch consider thierry pauw object orient program functional cool know sandro mancuso stop write jack diederich functional program functional principle object orient jessica kerr adventure functional jim weirich functional program robert martin deconstruct functional gilad bracha live post functional daniel spiewak extreme cleverness functional structure daniel spiewak tangible functional conal elliott faith evolution program phillip wadler fear brian beckman functional program design scott wlaschin domain type scott wlaschin proposition philip wadler category theory work philip wadler type like weather type system like matthias felleisen functional architecture pit mark seemann clojure back write rewrite phillip mendonca vieira need high school eric normand solve problem clojure rafal dittwald software design architecture lose robert martin ddd put eric evans unleash greg young art destroy greg young line greg young strategic eric evans reliability availability udi dahan implement micro service fred george immutability change pat helland craft wicked domain jimmy bogard actor hewitt meijer szyperski design good api josh bloch joy pain long live jeremy miller martin fowler stewardship sober brian goetz therapeutic katrina owen evidence orient andreas stefik program language andreas stefik hopelessness confidence distribute system camille fournier kill microservices chad fowler lose art software simon brown web development crockford douglas crockford back douglas crockford good douglas crockford introduction ryan dahl gary bernhardt birth death gary bernhardt hey underscore brian lonsdorf chris williams end chris williams node brian ford life terrible let talk jam mickens critical render path crash course web ilya grigorik thing jquery paul irish david nolen clojurescript skeptic derek slager test drive development tdd ian cooper holistic jimmy bogard gary bernhardt tdd martin fowler kent beck david heinemeier hansson dhh transformation priority robert martin tdd scott bellware test drive development write good evan dorn magic trick sandi metz stop hat justin searls get mock gregory moeck clean talk unit misko hevery tdd software rainsberger sandro mancuso integrate test rainsberger structure interpretation test kevlin henney tdd really lead good sandro mancuso tdd need chew choon keat methodology land scrum robert martin demand professionalism software robert martin spotify engineer culture part spotify development spotify engineer culture part spotify development adopt continuous jez humble death dave thomas agile alistair cockburn implement programmer fred george move past scale michael feather software mary poppendieck minute second fundamental theorem agile software rainsberger explain team michel grootjans computer history brief history stuart brown charm genius apollo guidance brian troutwine history future grady booch future robert martin kevlin henney doom development year john romero database deconstruct rich hickey security keynote speaker keep suggest improve security jam mickens test acceptance test continuous dave farley cognitive development lecture john cleese mean derek sivers become outlier career reboot developer cory house survive framework hype brandon hay stop tread water edward kmett last lecture achieve childhood randy pausch steve job stanford commencement steve job hammock drive rich hickey drive surprise truth motivate rsa animate gary bernhardt cryptocurrencies bitcoin law mathematics andreas antonopoulos deliver liberty andreas antonopoulos license
C C++;https://github.com/SuperV1234/cppcon2014;cppcon2014 repository slide quick game development cppcon talk official video available thank attend check repository
C C++;https://github.com/flashlight/flashlight;flashlight fast flexible machine logo svg quickstart quickstart installation instal cite cite documentation docker image join chat docker image cuda docker image cpu cuda backend cpu backend flashlight fast flexible machine library write entirely facebook research speech team creator torch deep speech core feature include time kernel compilation modern tensor library cuda cpu backends gpu cpu emphasis efficiency scale native support simple extensibility make flashlight powerful research framework hackable core enable fast iteration new experimental setup algorithm without sacrifice performance single repository flashlight provide research across multiple domain automatic speech project documentation flashlight app asr tutorial flashlight app asr tutorial image classification flashlight app imgclass object detection flashlight app objdet language flashlight app project layout flashlight break part flashlight lib flashlight lib contain kernel standalone utility sequence loss beam search decode text process flashlight flashlight core neural library tensor library flashlight app flashlight app application core library machine across domain flashlight pkg flashlight pkg package top flashlight arrayfire specific purpose domain library speech vision text halide extension quickstart first flashlight instal link project project flashlight form sequence flashlight chain computation implement simple convnet easy perform forward backward computation straightforwards see mnist full tutorial include loop abstraction base flashlight tensor operate arrayfire tape base automatic differentiation simple work would expect autograd instal vcpkg library installation vcpkg docker flashlight docker source source source vcpkg source vcpkg project flashlight project flashlight requirement minimum compilation require compiler good support gcc version late make linux base operate system see full dependency dependency list detail source source instruction instal bind find bind readme flashlight setup flashlight break several component describe project layout component incrementally specify correct option option way work flashlight instal library link project best standalone application dependent flashlight source development flashlight project source change rebuild best customize hack core framework flashlight provide app binary flashlight app flashlight way vcpkg instal flashlight vcpkg package source source instal dependency need instal flashlight vcpkg library installation vcpkg flashlight easily instal vcpkg cuda cpu backends support vcpkg either backend first intel cuda backend cuda instal library core flashlight apps flashlight app check feature available installation vcpkg search flashlight cuda vcpkg search flashlight cpu app feature vcpkg flashlight cuda asr asr app cuda backend currently support list feature flashlight app binary flashlight app also select feature instal vcpkg tree tool directory integrate flashlight project vcpkg flashlight installation simple vcpkg cmake toolchain source vcpkg first dependency backend choice vcpkg click expand instal cuda backend dependency vcpkg flashlight cuda backend source dependency instal vcpkg cuda intel rest dependency cuda backend base flashlight feature would like instal cpu backend dependency vcpkg flashlight cpu backend source dependency instal vcpkg intel rest dependency cpu backend base flashlight feature would like vcpkg toolchain flashlight source dependency clone repository source vcpkg cmake subset flashlight feature see option option source source first dependency dependency available system local package manager dependency mark instal automatically find local system fl_build_standalone determine behavior disable dependency flashlight dependency instal clone repository flashlight component set mklroot environment variable export mklroot opt intel oneapi mkl late export mklroot opt intel mkl linux base system help cmake find intel mkl initially find small subset flashlight feature apps see option option complete list option flashlight custom directory cmake argument flashlight library share library cmake argument flashlight modern cmake import target dependency dependency find pas d_dir cmake command export _dir environment variable equal path config cmake help locate dependency system see detail cmake fail locate package check see correspond already create create dependency dependency mark automatically source find system set fl_build_standalone disable behavior dependency mark require distribute enable fl_build_distributed see option option distribute require apps dependency mark installable via vcpkg see instruction instal dependency source vcpkg flashlight source component backend dependency audio library fl_lib_audio cuda cpu blas library openblas etc core cuda cpu runtime package fl_pkg_runtime speech package fl_pkg_speech openblas etc app imgclass app objdet app test option flashlight cmake accept follow option prefix cmake command line name option default value description fl_backend cuda cpu opencl cuda backend component fl_build_standalone dependency find fl_build_all_libs flashlight library fl_build_lib_set flashlight set library fl_build_lib_sequence flashlight sequence library fl_build_lib_audio flashlight audio library fl_build_lib_common flashlight common library fl_build_lib_text flashlight text library fl_build_core flashlight neural net library fl_build_distributed distribute require apps fl_build_contrib contrib apis subject break change fl_build_all_pkgs define default value every pkg see fl_build_pkg_runtime fl_build_all_pkgs runtime package fl_build_pkg_vision fl_build_all_pkgs flashlight vision package fl_build_pkg_text fl_build_all_pkgs flashlight text package fl_build_pkg_speech fl_build_all_pkgs flashlight speech package fl_build_pkg_halide fl_build_all_pkgs flashlight halide package fl_build_all_apps define default value every app see fl_build_app_asr fl_build_all_apps automatic speech recognition app fl_build_app_imgclass fl_build_all_apps image classification app fl_build_app_objdet fl_build_all_apps automatic speech recognition app tool fl_build_app_lm fl_build_all_apps language app fl_build_app_asr_tools fl_build_app_asr automatic speech recognition app tool fl_build_tests test fl_build_examples fl_build_experimental experimental component cmake_build_type see debug see cmake_install_prefix directory see see project flashlight flashlight easily link cmake flashlight export follow cmake target instal flashlight fl_lib_common contain flashlight library common header symbol throughout flashlight flashlight fl_lib_set contain flashlight library header symbol pertain set flashlight fl_lib_sequence contain flashlight library header symbol pertain sequence flashlight fl_lib_audio contain flashlight library header symbol pertain audio flashlight fl_lib_text contain flashlight library header symbol pertain text flashlight flashlight contain flashlight library well flashlight core autograd neural library flashlight fl_pkg_runtime contain flashlight core well common utility log flag distribute utils flashlight fl_pkg_vision contain flashlight core well common utility vision pipeline flashlight fl_pkg_text contain flashlight core well common utility deal text flashlight fl_pkg_speech contain flashlight core well common utility deal speech flashlight fl_pkg_halide contain flashlight core extentions easily interface halide give simple project cpp include link flashlight follow cmake configuration link flashlight set include directory vcpkg flashlight installation instal flashlight vcpkg cmake configuration myproject source flashlight installation source installation flashlight flashlight find automatically cmake flashlight instal custom location cmake_install_prefix pas dflashlight_dir prefix share flashlight cmake argument cmake command help cmake find flashlight flashlight docker flashlight dependency also provide dockerfiles see accompany docker documentation docker information contribute contact contact vineelkpratap com awni com jacobkahn com qiantong com antares com padentomasello com jcai com gab com vitaliy888 com locronan com flashlight actively develop see contribute contribute help acknowledgment flashlight derive cite cite license flashlight mit license see license license information
C C++;https://github.com/siu/minunit;minunit minunit minimal unit test framework self contain single header provide way define configure test suit handy assertion type report summary number test number assertion time elapse note project base minimal test suite write minunit produce follow output check minunit_example see complete compile something like forget add lrt timer link function fabs mu_assert_double_eq setup teardown function define setup teardown function configure test suite macro mu_suite_configure within mu_test_suite declaration assertion type mu_check condition pas condition evaluate true otherwise show condition error message mu_fail message fail show message mu_assert condition message pas condition true otherwise show fail condition message mu_assert_int_eq expect pas number equal show value error message mu_assert_double_eq expect pas value almost equal show value error message value minunit_epsilon set threshold determine value close enough author david sinuela pastor
C C++;https://github.com/stotko/stdgpu;stdgpu efficient stl like structure gpu feature documentation integration contribute license contact feature stdgpu open source library provide several generic gpu structure fast reliable management multiple platform cuda openmp hip support allow rapidly write highly complex agnostic native algorithm look like sequential cpu execute parallel gpu productivity previous library thrust vexcl arrayfire boost compute focus fast efficient various algorithm contiguously store enhance productivity stdgpu follow orthogonal approach focus fast reliable management enable rapid development general flexible gpu algorithm like cpu counterpart interoperability instead provide yet another ecosystem stdgpu design lightweight container library therefore core feature stdgpu interoperability previous establish framework thrust library enable seamless integration new well exist project maintainability follow trend recent standard provide functionality safe reliable program philosophy stdgpu provide clean familiar function strong guarantee encourage user write robust give full control achieve high performance heart stdgpu offer follow gpu structure container addition stdgpu also provide commonly require functionality agnostic context native complex operation creation duplicate free set update block algorithm implement natively custom cuda kernel stdgpu cuda backend enable find since core feature design goal stdgpu interoperability thrust offer full support thrust algorithm instead reinvent wheel information design find relate library please make sure require tool dependency instal system new version support well require compiler gcc ubuntu sudo apt make clang ubuntu sudo apt clang make msvc window visual studio cmake ubuntu ubuntu sudo apt cmake window thrust ubuntu window may already instal backend dependency require cuda backend cuda compiler nvcc already include cuda toolkit clang ubuntu sudo apt clang require least cmake cuda toolkit ubuntu window include thrust require openmp backend openmp gcc ubuntu already instal clang ubuntu sudo apt libomp dev msvc window already instal require hip backend experimental rocm ubuntu include thrust cmake ubuntu ubuntu sudo apt cmake window require first class hip language support library every project make cmake system addition also provide cross platform script make process convenient since script depend select type script debug release command effect bash script setup build_type perform full clean project remove old configure project path default type release project unit test bash script build_type project require project set default type release bash script run_tests build_type unit test require project default type release bash script build_type project configure path default dir bin default type release integration follow show library integrate project cmake integration library project either externally first include find_package embed project subdirectory cmake option configure library set option provide follow option control process option effect default stdgpu_backend device system backend stdgpu_backend_cuda stdgpu_build_shared_libs project share library set static library set build_shared_libs stdgpu_setup_compiler_flags construct compiler flag standalone include via add_subdirectory stdgpu_treat_warnings_as_errors treat compiler warn error stdgpu_build_examples stdgpu_build_tests unit test stdgpu_build_test_coverage test coverage report stdgpu_analyze_with_clang_tidy analyze clang tidy stdgpu_analyze_with_cppcheck analyze cppcheck addition functionality control via configuration option configuration option effect default stdgpu_enable_contract_checks enable contract check cmake_build_type equal release minsizerel otherwise stdgpu_use_32_bit_index bite instead bite sign integer index_t contribute detail information contribute see contact patrick stotko stotko uni bonn
C C++;https://github.com/julianstorer/JUCE;alt juce juce open source cross platform application framework create high quality desktop mobile application include vst vst3 auv3 rtas aax audio plug juce easily integrate exist project via cmake project generation tool via support export project xcode macos visual studio android studio block linux makefiles well contain source editor get start juce repository contain branch develop branch contain late bugfixes feature periodically merge master branch stable tag late release contain pre binary also juce juce project manage either projucer juce project configuration tool cmake projucer repository contain pre projucer need platform xcode visual studio linux makefile project locate extra projucer extra projucer minimum system requirement list __system requirements__ section projucer create new juce project view tutorial also possible include juce module source exist project directly static dynamic library link project help get start please refer juce cmake version high require cmake need either system package manager official comprehensive documentation juce cmake api see juce cmake documentation doc cmake 20api may useful start point new cmake project see cmake directory cmake cmake extra bundle juce simply clone juce follow command replace demorunner name target wish path juce cmake cmake djuce_build_examples djuce_build_extras cmake cmake target demorunner minimum system requirement juce project __macos ios__ xcode macos __windows__ window visual studio update bite __linux__ clang full list dependency see doc linux 20dependencies __android__ android studio window macos linux deployment target __macos__ macos __windows__ window vista __linux__ mainstream linux distribution __ios__ __android__ jelly bean api contribute please see contribution guideline github contribute license core juce module juce_audio_basics juce_audio_devices juce_core juce_events permissively license term isc module cover gpl commercial multiple commercial license tier juce different term juce personal developer startup business revenue 50k usd free juce indie small business revenue 500k usd month juce pro revenue limit month juce educational revenue limit free bona fide educational institute full term see license license
C C++;https://github.com/facebook/zstd;__zstandard__ zstd short version fast lossless compression algorithm target real time compression scenario zlib level good compression ratio back fast entropy stage provide huff0 fse project provide open source dual bsd license gplv2 copy license library command line utility produce decode zst lz4 project require another program language list know port bind provide zstandard development branch status status travisdevbadge travislink status appveyordevbadge appveyorlink status circledevbadge circlelink status cirrusdevbadge cirruslink fuzzing status ossfuzzbadge ossfuzzlink travisdevbadge continuous integration test suite travislink appveyordevbadge window test suite appveyorlink circledevbadge short test suite circlelink cirrusdevbadge cirruslink ossfuzzbadge ossfuzzlink benchmark reference several fast compression algorithm test compare server arch linux linux version arch1 core 9900k cpu 0ghz lzbench open source memory benchmark inikep compile gcc silesia compression corpus lzbench silesia compression corpus gcc compressor name ratio compression decompress zstd zlib brotli zstd fast zstd fast quicklz zstd fast lzo1x lz4 zstd fast lzf snappy zlib lz4 negative compression level specify fast offer fast compression decompression speed exchange loss compression ratio compare level see table zstd also offer strong compression ratio cost compression speed speed compression trade configurable small increment decompression speed preserve remain roughly setting property share compression algorithm zlib lzma follow test server linux debian linux version amd64 core 6700k cpu 0ghz lzbench open source memory benchmark inikep compile gcc silesia compression corpus compression speed ratio decompression speed compression speed ratio doc image cspeed2 png compression speed ratio decompression speed doc image dspeed3 png decompression speed algorithm produce high compression ratio slow speed fall outside graph large picture include slow mode click link doc image dcspeed5 png case small compression previous chart provide applicable typical stream scenario several small come different perspective small amount compress difficult compress problem common compression algorithm reason compression algorithm past compress future begin new set past upon solve situation zstd offer __training mode__ tune algorithm select type zstandard achieve provide sample per sample store call dictionary must load compression decompression dictionary compression ratio achievable small improve dramatically follow github user sample create github public consist roughly 10k record weigh 1kb compression ratio compression speed decompression speed compression ratio doc image dict png compression ratio compression speed doc image dict png compression speed decompression speed doc image dict png decompression speed compression gain achieve simultaneously provide _faster_ compression decompression speed work correlation family small sample specific dictionary efficient _universal dictionary_ hence deploy dictionary per type provide great benefit dictionary gain mostly effective first compression algorithm gradually previously decode content good compress rest dictionary compression create dictionary zstd fullpathtotrainingset dictionaryname compress dictionary zstd dictionaryname decompress dictionary zstd dictionaryname decompress zst instruction makefile system compatible standard make gmake invoke make root directory generate zstd cli root directory available option include make create zstd cli library man page make check create zstd test behavior local platform cmake cmake project generator provide within cmake generate makefiles script create zstd binary libzstd dynamic static library default cmake_build_type set release meson meson project provide within meson meson follow instruction directory also take look travis yml travis yml meson project note default type release vcpkg zstd dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg zstd zstd port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository visual studio window directory find additional possibility project visual studio vs2010 project compatible vs2012 vs2013 vs2015 vs2017 automate script visual compiler vs_scripts zstd cli libzstd library without need open visual studio solution buck zstd binary via buck execute buck program zstd root repo output binary buck gen program test quick local smoke test execute playtest script src test directory env variable zstd_bin datagen_bin need test script locate zstd datagen binary information test please refer test status zstandard currently deploy within facebook continuously compress large amount multiple format case zstandard consider safe production environment license zstandard dual license bsd license gplv2 copy contribute dev branch contribution merge reach release plan propose patch please commit dev branch feature branch direct commit release permit information please read contribute contribute
C C++;https://github.com/vsoftco/qpp;quantum version january status status circleci quantum modern general purpose quantum compute library compose solely template header quantum write standard low external dependency eigen linear algebra header template library available multi process library quantum restrict qubit system specific quantum information process task capable simulate arbitrary quantum process main design factor take consideration ease high portability high performance library simulation capability restrict amount available physical memory typical machine intel 8gb ram quantum successfully simulate evolution qubits pure state qubits mix state reasonably fast report bug ask additional feature enhancement please submit appropriate label interest contribute project feel free contact alternatively fork repository create custom branch add contribution finally create pull request accept pull request merge custom branch late main development branch latter eventually merge future release version contribute preferable solid knowledge modern preferably late include template standard library basic knowledge quantum compute linear algebra work experience eigen additional eigen documentation see simple eigen quick ascii reference see copyright softwareq inc right reserve license distribute mit license please see detail installation instruction documentation please see installation guide comprehensive documentation detail generate full official api documentation latex html format tool dot package must instal sudo apt get graphviz ubuntu debian linux brew graphviz macos doxygen generate documentation directory doc contain html latex documentation html documentation accessible open doc html index html browser choice generate pdf documentation doc latex directory compile doc latex refman tex latex compiler create doc latex refman pdf documentation consult favourite latex manual compile latex specific operate system wrapper pyqpp wrapper quantum pyqpp require dependency quantum instal pip important installation fail due system unable detect location eigen3 matrix library set environment variable eigen3_install_dir point location eigen3 library include include eigen3 part path detail please see
C C++;https://github.com/boazsegev/facil.io;img
C C++;https://github.com/DanBloomberg/leptonica;leptonica library quality total www leptonica org library support many operation useful document image natural image fundamental image process image analysis operation rasterop aka bitblt affine transform scale translation rotation shear image arbitrary pixel depth projective bilinear transform binary grayscale morphology rank order filter convolution seedfill connect component image transformation change pixel depth scale scale change pixelwise mask blend enhancement arithmetic ops etc ancillary utility standard image format _jpg_ _png_ _tiff_ _webp_ _jp2_ _bmp_ _pnm_ _gif_ _ps_ _pdf_ utility handle array image relate type _pixa_ _boxa_ _pta_ utility stack generic array queue heap list number string array etc application enable implement octcube base color quantization dither modify median cut color quantization dither skew determination text image adaptive normalization binarization segmentation page image mix text image location baseline local skew determination jbig2 unsupervised classifier border representation bpp image raster conversion svg postscript generation level image device independent output pdf generation dct flate image device independent output connectivity preserve thin thicken bpp image image warp captcha stereoscopic image dewarping base content textlines watershed transform greedy split component rectangle location large rectangle bpp image search least cost path binary grayscale image barcode reader barcodes early version characteristic _efficient_ image pack binary bite word operation bite whenever possible _simple_ small number structure simple provide efficient _consistent_ allocate heap simple ownership rule function name usually begin primary structure _pix_ simple pattern throughout _robust_ ptr args check extensive accessors exit permit _tested_ thorough regression test provide basic function valgrind test _ansi automatically generate prototype header _portable_ endian independent linux macos mingw cygwin window _nearly thread safe_ ref count structs _documentation_ large number line comment doxygen web page background _examples_ many program provide test show usage approx function library open source project leptonica optical character recognition computer vision library encode multipage binary image document jbig2 compression major contributor leptonica tom power tom support port leptonica window many year make many contribution quality documentation include beautiful unofficial documentation web site david bryan david work year support leptonica multiple platform design many nice feature leptonica severity base error message system identify fix countless bug test distribution many time cross compiler jam cuirot jam write support autotools script leptonica distribution many year help test every distribution since jeff breidenbach jeff every debian distribution leptonica also make many improvement format image include tiff png pdf continuous advocate simplification egor pugin egor maintainer leptonica github port everything include old distribution google shut set leptonica appveyor travis test implement project simplify executables window jurgen buchmuller jurgen write text converter modify leptonica source generate documentation doxygen also write tiff wrapper memory stefan weil stefan work begin clean leptonica github distribution include remove error source also suggest implement coverity scan zdenko podobny zdenko work mostly behind scene primary maintainer tesseract help leptonica platform coordinate tesseract adam korczynski adam expert test library safety open source fuzzers leptonica fuzz project significant coverage
C C++;https://github.com/cycfi/elements;element gui library cmake alt photon introduction element lightweight fine grain resolution independent modular gui library element design requirement mind open source liberal non viral license usable application play well gui library framework corollary second requirement also develop plugins event loop able exist component within plugin host vst resolution independent allow hdpi display rely visual gui editor generator declarative api modern declarative tell rather imperative gui declare keep simple make easy right box lot port new host target easy possible require port element extremely lightweight modular compose fine grain flyweight element form deep element hierarchy declarative interface heavy emphasis reuse status please take note element still much flux inch close towards version release api still undergo continuous change matter element yet production ready prevent element already usable form people ultimately make robust bug report fix api usability matter much welcome suggestion contribution hey open source project like design concept idea behind element much welcome collaboration news january add child window develop merge master due time see september add september linux artist canvas port feature complete september window artist canvas port feature complete september macos artist canvas port feature complete june remove dependency boost require api change app additional argument see may introduce artist canvas artist library eventually replace element canvas may work progress notebook gallery factory notebook branch april simplify installation infra json header submodules march add layout march add design aspect february setup installation guide update window linux february improve font support september linux port complete august window port complete discord feel free join discord discussion chat developer documentation documentation work progress stay tune setup design author joel get electronics program almost everything music first love become electronic digital since guitar effect box synths enjoy play distortion lade rock guitar compose produce music home studio joel guzman principal architect engineer cycfi consultant ciere software engineer specialize advance advocate open source author number highly successful open source project library part boost well respect peer review open source collaborative development effort copyright joel guzman right reserve distribute mit
C C++;https://github.com/sindresorhus/awesome;special thank environment variable place stop struggle scatter api key hack together home brew tool avoid access control keep team server sync doppler app enterprise ready start sell enterprise customer line add single sign minute instead month strapi lead open source headless javascript fully customizable developer first found capital first venture capital platform focusedexclusively support early stage cos commercial open source startup founder instant shareable cloud postgresql database import second share anyone click try without sign dev environment cloud natively integrate gitlab github bitbucket gitpod automatically continuously prebuilds dev environment branch team member instantly start cod fresh dev environment new task matter new feature want fix bug work review dead simple software license distribution api developer scalable feed chat application powerful apis front end component scalable feed chat application powerful apis front end component awesome list contribution guide create list follow update new list addition type content platform platform program language program language front end development front end development back end development back end development computer science computer science big big theory theory book book editor editor game game development environment development environment entertainment entertainment database database medium medium security security content management system content management system hardware hardware business business work work decentralize system decentralize system high education high education event event test test miscellaneous miscellaneous relate relate platform async non block event drive javascript runtime chrome javascript engine write cross platform node frontend mobile operate system apple phone tablet mobile operate system develop google iot hybrid cross platform native desktop apps javascript html javascript api hybrid apps react javascript framework write natively render mobile apps android mobile app development ide test distribution virtual machine allow write efficient powerful trace monitor linux system arch base linux distribution project base arch linux package apps single work various mainstream linux distribution macos operate system apple mac computer open source operate system apple watch amazon web p2p hypermedia protocol mobile development tool cloud platform service raspberry credit card size computer aim teach kid program capable lot cross platform gui app framework cross browser extension system smart create apps different platform simple distraction free desktop environment linux free software community dedicate create open user friendly compute experience open source compiler analysis apis net language amazon virtual home assistant cloud compute platform design developer google mobile sdk native android apps single codebase write dart home open source home automation put local control privacy first ibm cloud platform developer company app development platform google cloud platform robot operate system set software library tool help robot apps adafruit visualize store device cdn dns ddos protection security site action developer platform google assistant low cost microcontrollers wifi broad iot application secure runtime javascript typescript rust operate system x86 base personal computer popular 1980s early 1990s package manager linux unix system make package management reliable reproducible link together different system component functionally cooperate whole program tool wire together hardware device apis online service low allow business professional address need little cod skill program language standard style guide linter must watch micro npm mad science npm impossible sound project exist maintenance npm package package manager test runner linter functional npm task runner second snippet understand second like polyfills without override native apis apple compile program language secure modern programmer friendly fast general purpose program language design readability asynchronous scientific scientific research audio music version microcontrollers analysis machine optional static type lean efficient microcontrollers scala optimize ahead time compiler scala base llvm high level dynamic program language design address need high performance numerical analysis computational science general purpose language bias toward system program embed resource constrain software functional program language environment statistical compute graphic common powerful dynamic multiparadigm language facilitate iterative interactive development popular secure object orient language design flexibility write anywhere server side script language package manager haskell jvm test package software actionscript object orient language target adobe air functional program language jvm general purpose pure functional program language dependent type influence haskell modern program language design large long live apps reliability efficiency essential domain specific program language express quantum algorithm program language inspire ruby compile performant javascript program language design take full advantage glib gnome ecosystem preserve speed formal language environment program specification facilitate interactive development machine check proof simple fast safe compile language develop maintainable software front end development es6 web performance web style sheet language specify html element display screen critical path must watch app framework framework drive react apps react new feature let state react feature without write class web javascript library develop web component app framework app framework markup language website web apps xml base vector image format javascript library dojo javascript toolkit app framework android web web material library produce dynamic interactive visualization easy javascript library dom manipulation web static website functional reactive javascript framework text motion app framework app framework app framework ionic framework chrome tool rich text editor framework react service progressive web app framework state container javascript apps module bundler preprocessor ant enterprise class design language preprocessor javascript api render graphic app framework progressive framework server render react apps library web component declarative template system modern web development architecture base client side javascript reusable apis prebuilt markup web development technology stack wordpress back end gatsby front end mobile web create great mobile web experience development environment component net web framework razor html browser webassembly pagespeed metric help understand page speed user experience tailwind utility first framework rapid development rust framework create web apps webassembly web performance technique ensure certain performance metric website web animation browser javascript svg etc rust framework inspire elm react create multi thread frontend web apps webassembly material design react component fast easy web development block web standalone feature integrate web apps app framework design collection reusable component guide rule ensure consistency speed make single page apps without api template layout component widget rapidly website back end development framework automation virtual machine environment framework play1 php framework php framework php framework tall full stack development solution feature library laravel community web app framework ruby package php framework useful htaccess web server java framework open source platform automate linux container operation php micro framework serverless serverless compute serverless architecture apache java web app framework toolkit reactive apps jvm tool change versioning infrastructure server side development swift web app framework web app framework open source software development framework define cloud infrastructure user account authentication authorization php framework computer science university machine implement apply machine ruby core apple machine framework open source distribute machine platform write java apis scala software engineer machine experiment production level machine solve problem finance machine automatic differentiation xla compilation bring together high performance machine research provide insight explanation interpretability machine method speech natural language nlp question science ask answer natural language machine natural language generation text text conversational agent narrative generation application theory basic cryptography non cryptographer computer deep neural library machine intelligence webgl accelerate machine javascript library deploy tensorflow framework optimize tensorflow device machine cite deep deep open source society functional empirical software evidence base research software system static analysis information develop search engine quantum compute utilize quantum mechanic qubits quantum computer theoretical computer interplay computer science pure mathematics distinguish emphasis mathematical rigour technique big big public framework distribute storage process large set apache unify engine large scale process business intelligence platform visualization analytics report apps platform search monitor analyze structure unstructured machine generate big real time theory practice algorithm artificial search engine competitive recursion traverse nest structure book free program mind expand book elixir editor sublime vim fork focus extensibility usability open source hackable text editor visual studio cross platform open source text editor game game game game engine open source game engine game engine fantasy console game boy construct game engine game engine sandbox video game game material datasets artificial intelligence game haxe game high level strongly type program language produce cross platform native java game framework game engine game actively maintain open source game remake game engine flutter discord chat friend community virtual computer game machine game program language make game video game play sport development environment quick look macos dev user friendly command line zsh host service git repository browser cheat pin dynamic pin gist github profile git cheat sheet git git git enhance git cli git script automate task git workflow cross platform terminal app web technology cross platform object orient alfred productivity app macos terminal github create task automate workflow share others github entertainment science scifi email database nosql database graph compute framework object relational database document orient nosql database distribute scalable big store nosql help non relational distribute open source horizontally scalable database database everything make work database easy logical database organize large complex body knowledge open source distribute wide column store nosql database management system medium creative common text editor font stock image format know animate image open source audio pixel pixel level digital art cross platform solution record convert stream audio video downloadable svg png font icon project light audio video professional environment cross platform medium player software stream server cli interactive tutorial tech dive machine computer program educational play javascript mainly language module product good product manager give clear route improve knowledge skill watch video tutorial youtubers teach technology security application capture flag malware android deception trap design entice attacker attempt compromise information system organization incident vehicle security car web security web apps service art unlock lock manipulate component without key cybersecurity blue group individual identify security flaw information technology system automate software test technique involve feed pseudo randomly generate input embed iot regulation protection privacy individual within integration security practice executable pack unpack executable format content management system refinery ruby rail django focus flexibility user experience lightweight php base extensible php base craft content first net digital market platform combine tool manage multiple website silverstripe php mvc framework serve classic headless hardware internet electronic engineer hobbyist bluetooth electric guitar checklist electric guitar computer control draw machine visual art robot robotic free open tool professional robotic development sensor measure distance illuminate target laser light business open place post okr goal set communication best practice lead lead people manager technology company environment independent developer business tool tool company hacker news clean fight climate change technology wardley provide high situational awareness help improve strategic plan decision make social organization primarily focus social impact least partially self fund engineer team transition software development engineer management developer first product target developer user payment invoice price account marketplace fraud business intelligence work team collaboration remote niche job program review creative business group specialize combine compute design art user experience write guide company hire intern software define real time protocol near simultaneous exchange medium decentralize system bitcoin service tool software developer open source distribute settlement non financial non financial blockchain application open source decentralize microblogging distribute compute platform smart contract development blockchain blockchain project artificial intelligence machine decentralize operate system support industrial scale apps open source blockchain platform design business open source blockchain platform development toolset web apps decentralize solution framework write scalable upgradeable blockchains rust open source peer peer marketplace compute resource smart contract platform secure bitcoin open source proof stake blockchain smart contract compute platform high education computational multidisciplinary science computational approach study nervous system digital computer aid scientific investigation history scientific distraction free scientific write markdown restructuredtext jupyter notebook event creative tech event around globe creative cod tech design music art cool stuff event tech relate event italy event tech relate event netherlands test software test visual regression ensure change break functionality style open source browser automation framework ecosystem test automation tool apps test anything protocol load test performance measurement tool open source developer centric performance monitor load test solution node library automate chromium firefox webkit single api quality assurance start career software test open source load performance test framework base scala akka netty miscellaneous text base interchange format text format store tabular comma separate value discount student recursion illustrate continuous integration continuous service free stack overflow quora etc design app macos boilerplate design development software engineer self production task runner ask anything open source cross platform api render graphic urban regional concern environment community research social medium share unicode standard quirk package resource beginner friendly tool citizen community base non institutional scientist internet thing connectivity protocol hack node cli framework low overhead cross platform graphic compute api typeset language economist starter kit funny markov informatics technique apply problem chemistry choose next color scheme digital distribution platform bot site reliability empathy promote compassionate engineer culture dynamic trace framework enhance browse experience pokemon pokemon manage technical business operation chat falsehood programmer believe domain drive software development approach complex need connect evolve quantify self track technology base config management system web digital designer creative program something expressive instead something functional login web web apps work without login free free freedom prototyping interactive design markup language dev funny developer project open source healthcare software facility provider developer policy expert researcher magento open source ecommerce php graph draw package tex latex context study nervous system brain free alternative program language design experimentation joke rather actual open source monitor system smart home device double entry account command line web free open web standard service allow send money directly browser public domain work crypto currency tool digital currency encryption regulate generation unit verify transfer create inclusive diverse tech community open source company offer tool service free open source project design create good consistent design experience teach theravada buddhist tradition open source java app performance management tool open source experience open source maintainer calculator every platform type challenge response test compute determine whether user human create share document contain equation visualization narrative text first robotics international high school robotics championship humane open source project help improve society conference meetup speaker program design community board table top game fun software fund individual programmer development open source project parasite host pathogen interaction food relate project github mental mental health awareness self care software industry bitcoin payment start accept bitcoin scientific solve complex scientific problem computer amazon open source technology farm garden product design product initial concept production turn database graphql api software discipline design software connectivity good understand access telecommunication internet infrastructure term tech stack different apps feature image base profile biological phenotype computational biologist open source message protocol advertise programmatic medium website find way resolve climate crisis name thing computer science right biomedical information extract information unstructured biomedical text web effort preserve web future generation command line interface wordpress credit method classify credit applicant risk class base open source configuration management automation platform biological interactive visualization biological web type matrix barcode store share small amount information make plant base lifestyle easy accessible transfer mean text language another app automation javascript enable immersive virtual reality augment reality content web relate awesome awesome list github awesome search awesome awesome quick search awesome list discover random page awesome browser extension awesome simple command line tool dive awesome list awesome visualizer awesome list track awesome view late update awesome list
C C++;https://github.com/mattreecebentley/plf_list;plf list drop replacement std list average fast insertion fast erasure fast iteration fast sort fast reversal fast remove remove_if fast unique fast clear trivially destructible type fast destruction trivially destructible type fast performance overall order case benchmarking insertion erasure iteration fly time benchmark perform haswell base cpu gcc insertion erasure iteration percentage obtain average performance across type char large struct plf list etc compatible documentation function description
C C++;https://github.com/michaelrsweet/mxml;mini xml tiny xml parse library apache coverity scan lgtm lgtm mini xml small xml parse library read xml string application without require large non standard library mini xml require make program ansi compatible compiler gcc work vendor ansi compiler mini xml provide follow functionality read utf utf write utf encode xml string store link list tree structure preserve xml hierarchy sax stream read xml string minimize memory usage support arbitrary element name attribute attribute value preset limit available memory support integer real opaque cdata text type leaf nod function create manage tree find walk function easily locate navigate tree mini xml validation type process base upon schema source definition information note version hide definition mxml_node_t structure require various accessor function introduce version mini xml mini xml come autoconf base configure script type follow command get thing configure default prefix usr local override prefix option configure prefix foo configure option find help option configure help configure software type make test program verify thing work follow make mini xml microsoft window visual include project vcnet subdirectory library instead note static library window thread safe instal mini xml target mini xml lib include directory make instal lmxml option link application documentation documentation available doc subdirectory mxml html html mxml epub epub also look testmxml source mini xml mini xml provide single header include include nod element comment process directive integer opaque string real number text string represent mxml_node_t object new nod create mxmlnewelement mxmlnewinteger mxmlnewopaque mxmlnewreal mxmlnewtext function element child nod top node must xml process directive load xml mxmlloadfile function mxml_node_t tree fopen filename xml tree mxmlloadfile null mxml_opaque_callback fclose similarly save xml mxmlsavefile function mxml_node_t tree fopen filename xml mxmlsavefile tree mxml_no_callback fclose mxmlloadstring mxmlsaveallocstring mxmlsavestring function load xml node tree save xml node tree string char buff char ptr mxml_node_t tree tree mxmlloadstring null buff mxml_opaque_callback mxmlsavestring tree buff sizeof buff mxml_no_callback ptr mxmlsaveallocstring tree mxml_no_callback find name element node mxmlfindelement function mxml_node_t node mxmlfindelement tree tree name attr value mxml_descend name attr value argument pas null act wildcards find first element node mxmlfindelement tree tree null null mxml_descend find first element href attribute node mxmlfindelement tree tree href null mxml_descend find first element href url node mxmlfindelement tree tree href mxml_descend find first element src attribute node mxmlfindelement tree tree null src null mxml_descend find first element src foo jpg node mxmlfindelement tree tree null src foo jpg mxml_descend also iterate function mxml_node_t node node mxmlfindelement tree tree name null null mxml_descend node null node mxmlfindelement node tree name null null mxml_descend something mxmlfindpath function find first value node specific element xpath mxml_node_t value mxmlfindpath tree path foo bar mxmlgetinteger mxmlgetopaque mxmlgetreal mxmlgettext function retrieve correspond value node mxml_node_t node int intvalue mxmlgetinteger node const char opaquevalue mxmlgetopaque node double realvalue mxmlgetreal node int whitespacevalue const char textvalue mxmlgettext node whitespacevalue finally xml mxmldelete function recursively free memory particular node entire tree mxmldelete tree get help report problem mini xml project provide access current version software documentation github issue track page legal stuff copyright michael sweet mini xml library license apache license version optional exception allow link gpl2 lgpl2 software see license notice information note exception list notice apply link gpl2 lgpl2 software apache license purist object link apache license mini xml exception ground make mini xml somehow incompatible apache license reason people wish retain apache license purity may omit exception copy mini xml note ianal begin dislike
C C++;https://github.com/epezent/implot;implot implot immediate mode gpu accelerate plot library dear aim provide first class api imgui fan love implot well suit visualize program real time create interactive plot require minimal integrate like imgui burden end user gui state management avoid stl container header external dependency except imgui feature gpu accelerate render multiple plot type line plot shade plot scatter plot vertical horizontal stack bar graph vertical horizontal error bar stem plot stair plot pie chart heatmap chart histogram image likely come mix match multiple plot item single plot configurable range scale linear log subplots time format format iso reversible lockable multiple control zoom pan box selection auto fit control create persistent query range see demo several plot style option marker type adjustable marker size line weight outline color fill color etc colormaps support user add colormaps optional plot title axis label grid label optional configurable legend toggle button quickly show hide plot item default style base current imgui theme completely custom plot style customizable getters stride like imgui plotline accept float double bite sign unsigned integral type see announcement usage api like imgui beginx endx pair first start new plot implot beginplot next plot many item want provide plotx function plotline plotbars plotscatter etc finally wrap thing call implot endplot course much implot demo comprehensive implot feature find implot_demo add source call implot showdemowindow somewhere update loop encourage reference need implement various plot type demo always update show new plot type feature add check back release online version demo host view plot source generate note demo may always date performant desktop give general taste possible implot special thank create host sophisticate demo require lengthy third party library find separate repository find advance signal process implot usage action please read contribute section repository idea new demo integration set environment already add implot implot_internal implot cpp implot_items cpp optionally implot_demo cpp source alternatively get implot create destroy implotcontext wherever imguicontext good want test implot quickly consider try bundle imgui implot several package extremely important note dear imgui bite index default high density implot widget like implot plotheatmap may produce many vertex imdrawlist cause assertion failure truncation visual glitch therefore highly recommend either option enable bite index uncommenting define imdrawidx unsigned int imgui option handle imguibackendflags_rendererhasvtxoffset flag renderer must bite index many default imgui render backends already support imguibackendflags_rendererhasvtxoffset refer information faq imgui incredibly powerful tool rapid prototyping development provide limit mechanism visualization dimensional plot ubiquitous useful almost application able visualize real time give insight good understand application implot right plot library look generate publication quality plot export plot implot library implot gear toward plot application realtime speed high level interactivity implot best create pretty plot indeed quite style option available always favor function form documentation api thoroughly comment implot demo implot_demo cpp enough get start also take look repository implot suitable plot large datasets yes within reason plot point without issue expect million buttery smooth experience say always downsample extremely large datasets tell implot stride large interval need also try experimental backends branch aim provide gpu acceleration support type plot implot plot function accept scalar type float double int8 uint8 int16 uint16 int32 uint32 int64 uint64 array custom structs class vector2f similar easily pas implot function stride feature see implot documentation many plotter provide getter overload accept generate callback plot style modify yes colormaps various style color variable push pop modify permanently startup default style available well automatic style attempt match imgui style implot support logarithmic scale time format yep logscale timescale support implot support multiple yes enable implot support insert plot type maybe check demo gallery announcement see desire plot type show consider submit issue good yet implot support plot likely never since imgui deal render plot line look like crap default anti aliasing line plot performance gain least msaa likely even notice however enable software per plot implotflags_antialiased flag globally implot getstyle antialiasedlines true implot provide analytic tool exactly give ability query plot sub range process however like plot export save image currently screen capture mechanism need capture plot implot suitable render publication quality plot intend visualization tool post process matlab matplotlib purpose compile implot dynamic library like imgui recommend compile link implot static library directly part source however must compile implot imgui separate dlls make sure set current imgui context implot setimguicontext imguicontext ctx ensure global imgui variable correctly share across dll boundary implot language bind yes generate bind high level language provide wrapper among thing provide bind java rust bind currently work emscripten find
C C++;https://github.com/sheredom/json.h;json action simple single header solution parse json json parse read single allocation buff current support compiler gcc clang msvc current support platform window mac linux usage include json json_parse parse json string dom src utf json string parse src_size size src byte return struct json_value_s point root json dom struct json_value_s main struct interact parse json document object dom struct json_value_s payload pointer content value type type struct payload point json_type_e note type json_type_true json_type_false json_type_null payload null json_parse_ex extend parse json string dom src utf json string parse src_size size src byte flags_bitset extra parse flag bitset flag specify enum json_parse_flags_e alloc_func_ptr callback function single allocation null malloc user_data user pas first argument alloc_func_ptr parse parse error occur contain type error source occur null return struct json_value_s point root json dom enum json_parse_flags_e extra parse flag specify json_parse_ex follow json_parse_flags_default default special behaviour enable json_parse_flags_allow_trailing_comma allow trail comma object array true null would allow option json_parse_flags_allow_unquoted_keys allow unquoted key object null would allow option json_parse_flags_allow_global_object allow global unbracketed object null true would allow option json_parse_flags_allow_equals_in_object allow object well key value pair null true would allow option json_parse_flags_allow_no_commas allow object comma separator key value pair null true would allow option json_parse_flags_allow_c_style_comments allow style comment ignore input json json_parse_flags_deprecated deprecate option json_parse_flags_allow_location_information allow location information track value input json useful alert user error precise location information pertain original source option enable json_value_s cast json_value_ex_s json_string_s json_object_element_s name member cast json_string_ex_s retrieve specific location value key note option increase memory budget require dom record json json_parse_flags_allow_single_quoted_strings allow string single quote json_parse_flags_allow_hexadecimal_numbers allow hexadecimal number 0x42 json_parse_flags_allow_leading_plus_sign allow lead sign number json_parse_flags_allow_leading_or_trailing_decimal_point allow decimal point lead trail digit json_parse_flags_allow_inf_and_nan allow infinity nan identifier infinity nan json_parse_flags_allow_multi_line_strings allow string span multiple line json_parse_flags_allow_simplified_json allow simplify json parse simplify json enable set parse option see bitsquid blog introduce json_parse_flags_allow_json5 allow json5 parse json5 enable set parse option see website define extension parse json_parse let say json string true false null foo get part parse json would iterator helper function serve purpose make nice iterate produce json dom json_value_as_string return value string null string json_value_as_number return value number null number json_value_as_object return value object null object json_value_as_array return value array null array json_value_is_true return non value true otherwise json_value_is_false return non value false otherwise json_value_is_null return non value null otherwise let look helper iterators instead see make iterate dom little pleasant extract value dom want extract value dom new allocation json_extract_value json_extract_value_ex friend function let take value subtree dom clone new allocation either single malloc user provide allocation region design json_parse function call malloc slice single allocation support weird wonderful json structure imagine structure always json structs first encode structure original json follow todo add debug output specify printer fail suggest license free unencumbered software release public domain anyone free copy modify publish compile sell distribute software either source form compile binary purpose commercial non commercial mean jurisdiction recognize copyright law author author software dedicate copyright interest software public domain make dedication benefit public large detriment heir successor intend dedication overt act relinquishment perpetuity present future right software copyright law software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author liable claim damage liability whether action contract tort otherwise arise connection software deal software information please refer
C C++;https://github.com/Kigs-framework/kigs;kigs kigs framework modular multi purpose cross platform framework basis many professionnal main goal able develop different type application game simulator viewer quickly totally independent manner kigs framework see game engine general purpose open scalable release platform window x86 x64 opengl d3d wup d3d microsoft visual studio html5 emscripten online compile sample android microsoft visual studio help welcome set android studio state platform maintain year help welcome set xcode help welcome improve exist platform add new linux macos main ide current platform visual studio check kigs framework
C C++;https://github.com/openframeworks/openFrameworks;openframeworks toolkit creative cod new welcome slack status master branch contain new recently update package available nightly section stable branch contain correspond last stable openframeworks release stable package available platform master branch stable branch window msys2 window visual studio linux arm linux linux emscripten emscripten emscripten macos macos macos tvos tvos android arm7 android android folder structure release come several folder addons apps doc export system libs script projectgenerator doc documentation around usage per platform thing consider etc definitely take look osx read osx apps project contain variety project show apps project libs contain library include openframeworks core addons additional functionality part core export dlls dylibs need put compile project script folder template small script automate per platform project generator gui base tool make new project folder package release idea important release design self contain put anywhere hard drive possible mix different release together please keep release separate project may generally work release release guarantee self contain extensive local path throughout important aware directory structure common error take project move level compare root mean link libs break get involve openframeworks forum warm friendly place please ask answer question important part project community tool please join also free software much hard make sense useful etc basic question acceptable worry join conversation social hard alone together get far github site active bug feature request consider open issue developer want help pull request warmly welcome please read contribute guide guideline also developer mail list useful discus issue around development future developer grab copy openframeworks platform check main site work git repository stable branch repository correspond recent release important difference release include simple openframeworks project generator github repository contain libs platform release per platform basis github repository project different generate automatically release tool apps projectgenerator external dependency repository download_libs script platform particular platform folder inside script want work openframeworks github repository need external dependency project generator create project generate project project generator enable advance option setting tab update multiple update project folder path repo set project generator submodule within repo command git submodule init git submodule update whilst inside openframeworks repo info work project generator per platform readmes information see documentation doc table_of_contents versioning openframeworks semantic although strict adherence come effect version
C C++;https://github.com/GHamrouni/Recommender;recommender github github language grade library product recommendation suggestion collaborative filter recommender analyze feedback user implicit explicit preference item pattern predict suitable product particular user feature collaborative filter user item base recommenders external dependency fast time second million rat movielens set memory footprint million rat webpage compile recommender make compilation produce librecommender compile gcc test test src librecommender test src alternatively clang clang test test src librecommender test src keywords collaborative filter recommender system reference
C C++;https://github.com/emilk/loguru;loguru lightweight flexible log library glance loguru terminal output doc terminal_colors png documentation documentation find license software public domain dedication recognize grant perpetual irrevocable license copy modify distribute see fit say would appreciate credit find loguru useful tweet ernerfeldt mail emil ernerfeldt gmail com another log library yet come across nice light weight log library everything want make particular want log produce log human readable easily grep also want able hook log process print severe message screen app dev purpose feature simple integration loguru hpp loguru cpp either link loguru cpp include cpp small simple library small header include fast compile time see separate head dependency cross platform flexible user callback log draw log message screen game user callback fatal error pause attach debugger throw exception support multiple output either trunc append logfile late low verbosity high readability full logfile high verbosity append every full feature verbosity level support assertion check_f nullptr fail open filename support abort abort_f something wrong debug value value stack trace print abort stack trace clean somewhat cleanup some_function_name std __1 vector std __1 allocator std __1 allocator std __1 allocator const cleanup some_function_name std vector const stack trace print right chronological order relevant end signal write stack trace fast configure unbuffered mode loguru g_flush_interval_ms log stderr rmbp ssd clang fast glog macbook pro clang glog linux desktop gcc loguru g_flush_interval_ms set log stderr rmbp ssd clang twice fast glog drop replacement glog except setup choose printf style std cout style format compile time check printf format support compiler support format add define loguru_use_fmtlib include loguru hpp also need set fmtlib include directory well link fmtlib alternatively fmt_header_only preprocessor definition assertion failure mark noreturn benefit static analyzer optimizer log also write stderr color support terminal thread safe configure either flush every loguru g_flush_interval_ms background thread flush output call miss anything even hard crash still fast buff glog prefix log line date time millisecond precision application uptime millisecond precision thread name set name loguru set_thread_name line log level indentation see scope error context catch value local variable print crash see error context scope see scope grep able log line info need date easily filter high verbosity level fact compile include want loguru either compile link loguru cpp cpp include make sure compile std lpthread ldl relevant environment usage prefer log stream info see official grep able log include loguru hpp abhor log library include everything iostream window every compilation unit project log frequent source thus lightweight possible loguru header include mean slow compilation project test medium size project include loguru hpp instead glog log hpp everywhere give speedup compilation time note however give bare bone version loguru printf style log want std ostream style log glog functionality need define loguru_with_streams include make loguru hpp include away around scope library support scope indent log output error_context also optionally log thing crash useful feature stream printf log library support stream style log printf style mean loguru glog become something along line loguru allow whatever style prefer
C C++;https://github.com/TileDB-Inc/TileDB;azure doc anaconda svg anaconda count universal storage engine tiledb powerful engine store access dense sparse multi dimensional array help complex efficiently embeddable library work linux macos window open source permissive mit license develop maintain tiledb distinguish project tiledb offer often refer tiledb embed tiledb include follow feature support dense sparse array support dataframes key value store via sparse array cloud storage aws google cloud storage azure blob storage chunk tile array multiple compression encryption checksum filter fully multi thread parallel versioning rapid update time travel array metadata array group numerous apis top library numerous integration spark dask mariadb gdal etc tiledb store variety application genomics geospatial finance power tiledb stem fact efficiently either dense sparse multi dimensional array format internally science tool store metadata tiledb array abstract storage management pain efficiently access favorite science tool quickstart tiledb library follow alternatively docker image provide include several start follow dense array sparse array documentation find detail tiledb documentation source please see documentation format specification tiledb format open source find format_spec format_spec apis tiledb team maintain variety apis top library integration tiledb also integrate several popular database science tool gdal pdal rasterio gvcf get involve tiledb embed open source project welcome form contribution contributor project read contribution information would love hear drop line hello tiledb com mailto hello tiledb com visit contact follow stay inform update news
C C++;https://github.com/cesanta/frozen;json parser emitter feature iso iso compliant portable small footprint dependency json_scanf scan string directly variable json_printf print variable directly output stream json_setf modify exist json string json_fread read json json_fprintf write json base64 encoder decoder binary parser provide low level callback api high level scanf like api test coverage mongoose operate system connect commercial product low power microcontrollers api reference json_scanf json_vscanf scan json string str perform scanf like conversion accord fmt fmt scanf like format follow difference object key format string quote key order key format string matter format string may omit key fetch interest assume str json string true fetch value key several extra format specifier support consume int char sizeof bool sizeof char expect boolean true false consume char expect quote json encode string scan string malloc caller must free string consume char int expect base64 encode string string base64 decode malloced nul terminate length string store int placeholder caller must free consume int char expect hex encode string fa014f string hex decode malloced nul terminate length string store int placeholder caller must free consume custom scan function pointer void user_data parameter see json_scanner_t definition consume struct json_token fill match token return number element successfully scan convert negative number mean scan error scan arbitrary json string parse array object json_scanf_array_elem helper function scan array item give path index fill token match json token return array element find otherwise non negative token length json_printf freeze print api pluggable box freeze provide way print string buff open stream easy tell freeze print another destination socket etc freeze define output context descriptor pointer low level print function want print another destination define specific print function initialise output context definition output context descriptor freeze provide helper macro initialise output descriptor generate format output give string buff auto escape key superset printf function extra format specifier print json boolean true false accept int print quote escape string null accept const char length accept int const char print quote base64 encode string accept const char int print quote hex encode string accept int const char invoke json_printf_callback_t function callback function consume parameter return number byte print return value big supply buff indicator overflow overflow case overfly byte print print complex object serialise structure object format specifier json_printf_array helper callback print contiguous array consume void array_ptr size_t array_size size_t elem_size char fmt return number byte print json_walk low level parse api json_walk low level callback base parse api json_walk call give callback function scan value callback receive name path value json token point value arbitrary user pointer path construct rule root element empty string path object start dot append path object key parse key name append path array parse element_index append element consider follow json string foo bar baz true sequence callback invocation follow type json_type_object_start name null path value null type json_type_number name foo path foo value type json_type_array_start name bar path bar value null type json_type_number name path bar value type json_type_number name path bar value type json_type_object_start name path bar value null type json_type_true name baz path bar baz value true type json_type_object_end name null path bar value baz true type json_type_array_end name null path bar value baz true type json_type_object_end name null path value foo bar baz true top level element array foo type json_type_array_start name null path value null type json_type_number name path value type json_type_object_start name path value null type json_type_number name foo path foo value type json_type_object_end name null path value foo type json_type_array_end name null path value foo top level element scalar true type json_type_true name null path value true json_fprintf json_vfprintf json_asprintf json_vasprintf char str json_asprintf abc printf str print free str json_fread json_setf json_vsetf json_prettify json_prettify_file json_next_key json_next_elem void null struct json_token key val json_next_key len foo key val null printf key len key ptr val len val ptr minimal mode djson_minimal footprint significantly reduce follow limitation apply configuration integer number support affect parse conversion printf scanf hex base64 conversion disable print json configuration read json configuration modify configuration set json contribution submit contribution sign cesanta send github pull request license freeze release apache commercial support professional service contact
C C++;https://github.com/taocpp/json;welcome taojson window macos linux android taojson header json library provide generic value class doc value class type trait doc type trait interoperate type event interface doc event interface convert json jaxn cbor msgpack ubjson much documentation version doc readme require warn documentation currently quite keep pace hopefully last large pre development burst contact question suggestion regard taojson success failure story kind feedback please feel free join server open pull github contact author taocpp icemx net feature support standard rfc8259 ecma javascript object notation json interchange format achieve conformance score native json benchmark test rfc6901 javascript object notation json pointer rfc6902 javascript object notation json patch rfc7049 concise binary object representation cbor jaxn relax json msgpack messagepack binary format without extension ubjson universal binary json value class doc value class json extend non finite number value binary construction object array via std initializer_list conversion arbitrary user define type via type trait doc type trait around stl container std variant std string std map std vector etc memory allocation value class wrap container allocate normally instance share string binary value user define type via non pointer literal operator value include binary optional base class value doc advance case custom base class value annotate sub value line doc advance case annotate filename line number event interface doc event interface simple straightforward flexible event api event value value event interface parse json jaxn string representation event stream event prettify json jaxn string representation conversion binary format currently cbor ubjson msgpack conversion json library contrib nlohmann cpp contrib nlohmann cpp event comparison hash count schema validation event transformer manipulate event fly status library stable work correctly month multiple real world application library stable construction part api discussion development might change extend version library also serve real world application parse expression grammar template library pegtl parse json jaxn representation format package manager taojson package manager conan taocpp json beta taocpp json package conan keep date conan team member community contributor version date please create issue pull conan center index repository thank niels lohmann json inspiration milo yip native json benchmark reference measure progress art taojson part art taojson certify open source software may purpose include commercial purpose absolutely cost distribute term mit license reproduce copyright colin hirsch daniel frey permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software additional license taojson contain modify portion double conversion license follow copyright project author right reserve redistribution source binary form without modification permit provide follow condition meet redistribution source must retain copyright notice list condition follow disclaimer redistribution binary form must reproduce copyright notice list condition follow disclaimer documentation material provide distribution neither name google inc name contributor may endorse promote product derive software without specific prior write permission software provide copyright holder contributor express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall copyright owner contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage taojson contain modify portion jam edward anhalt iii itoa license follow copyright jam edward anhalt iii permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software taojson contain modify portion ulf adam ryu license follow copyright ulf adam content may term apache license version see accompany license ryu copy alternatively content may term boost software license version see accompany license boost copy unless require applicable law agree write software distribute basis without warranty condition kind either express imply cbor ecma jaxn json reference json schema msgpack mit license native json benchmark open source parse expression grammar template library pegtl rfc6901 rfc6902 rfc7049 rfc8259 ubjson
C C++;https://github.com/tgockel/json-voorhees;json voorhees yet another json json library tout new feature developer friendliness extremely slow speed parser dependency beyond compliant compiler love doxygen check feature include necessarily limit simple value feel terribly different standard library container write valid json operator simple json parse parse reasonable error message parse fail full support unicode fill json encode utf efficient minimal overhead store value value byte bite platform throw move semantics wherever possible easy convert value type extract encode type value to_json safe best case illegal fail compile illegal action throw exception almost utility function strong exception stable worry upgrade api abi change document consumable human answer question might actually ask compiler support gcc clang coverage flattr git json compile json voorhees automatic configuration software linux mac osx boost cmake make instal simply cmake make sudo make want customize compilation installation see option cmakelists txt easy configuration option window also cmake want however probably easy provide visual studio project msvc vs2015 get hit perform nuget restore compile unit test arch linux arch json voorhees easily installable via aur late stable call close tip package call arch installation easy yaourt json voorhees future future plan feature find issue tracker future feature license license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license miscellaneous compiler support support gcc clang experimental msvc ctp5 visual versioning like every software system ever json voorhees describe version part semantic major minor patch version component change specific mean major guarantee whatsoever across major release minor give minor release forward compatible source compliant mean write version recompiled version continue work guarantee make backwards version might add new function patch abi compatible across patch library json voorhees able pas jsonv value library json voorhees change publicly visible structure call convention correspond bump minor version precede statement true version suffix pren value pre release allow whatever feel like release develop follow simple workflow determine version component need change change force user change source yes bump major version change force user recompile continue work yes bump minor version change behavior way yes bump patch version change comment rearrange position indentation etc yes need update part version miss something yes back try character encode library assume really love utf utf8 parse json library happily assume sequence byte utf encode string assume also want utf encode string convert json land assume non ascii content source string treat utf wish encode format std string convenient way beyond conversion every site proposal decode non utf8 potentially address output system take safe route numeric encode deal non ascii std string std string travis gockel travis xc3 xb6ckel encode json travis u00f6ckel despite fact character basic unicode basic multilingual plan generally consider compatible option hopefully every transport mechanism gracefully transmit ascii character sequence without molestation drawback route needlessly lengthen resultant encode component pipeline gracefully deal utf outstanding issue encode utf8 address shortcoming make json voorhees different json library json voorhees write programmer want productive modern world mean ton json library float around tout modern really care json voorhees put focus modern feature set mean library skip string encode detail like full support utf utf8 modern feature sure library mean gallery good api get way let work another thing json voorhees attempt lightweight library fact want kitchen sink anything want json application mean need say library depend strange environment setting still drop cpp hpp project want also include powerful serialization framework convert json type back extensible serialization builder help write application serialization framework design modern application mind like money back integer decimal distinct type json specification json number type whereas library kind integer kind decimal behavior type fairly consistent comparison different kind behave would expect assume expect thing like value value value value wish behavior like javascript feel free as_decimal reason integer decimal single type people tend json look project consume json make distinction integer decimal value even specification land distinction numeric type pretty normal ultimately answer question integer decimal distinct type convenience user nan infinity serialize null json specification json support non finite float point number like nan infinity mean value define object nan std nan infinity infinity get serialize nan null infinity null seem constitute loss information would lead encoder output invalid json text completely unacceptable unfortunately common mistake json library want check information loss encode utility funciton validate throw encode could imagine encoder encode throw something like encode_error instead output null stream however would make operator potentially throw operation extremely uncommon would surprizing imagine try log value throw throw construct value instead wait encode time anything problem library could attack issue source throw exception someone say value infinity choose behavior non finite value issue string representation problem value never encode free json library without parse encode prevent action simply someone might encode many corruption check look find ton place default case switch statement impossible hit without memory corruption unclear happen library detect something like invalid kind library could assert seem overbear reasonable option fall back alternatively library could throw case lead innocuous look operation like able throw somewhat disconcerning really helpful give money would cool name equally cool logo really json serialize decode non utf8 decode numeric encode arbitrarily encode std string encode utf8 issue string encode allow utf output future feature future feature json json specification utf8 utf8 everywhere
C C++;https://github.com/rttrorg/rttr;travis appveyor coverage cii best codacy rttr reflection library rttr stand time type reflection describe ability computer program introspect modify object runtime also name library write release open source library find information permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software installation installation guide find rttr get start take look documentation rttr doc start tutorial rttr tutorial donation rttr would like say thank development happy receive donation rttr doc rttr rttr tutorial
C C++;https://github.com/ZigRazor/CXXGraph;introduction cxxgraph small library header manage graph algorithm word comprehensive graph library alternative boost graph library look look site developer development cxxgraph site moment github page developer committers also first experience guide step step open source world interest please contact zigrazor gmail com contribute project wait roadmap complete description date completition heavy_check_mark first optimization apr memo add benchmark algorithm tbd memo optimization tbd memo release tbd memo const review tbd memo release tbd memo official site release tbd memo reduction issue static analysis tbd memo first stable release tbd memo markov chain algorithm tbd memo release tbd memo graphminer algorithm tbd memo release tbd memo tarjan algorithm tbd memo release tbd memo graph topological sort tbd memo release tbd memo custom export import tbd memo input output format tbd memo release tbd memo multi thread bfs tbd memo release tbd memo thread safe boruvka prim kruskal algorithm tbd memo release tbd memo edge cut partition algorithm tbd memo release tbd memo libra parttition algorithm tbd memo release tbd memo introduce hypergraph tbd memo stable release tbd memo tbd tbd table content cxxgraph cxxgraph introduction introduction look look roadmap roadmap table content table content uninstall uninstall linux tarballs linux tarballs rpm rpm deb deb source source class explanation class explanation requirement requirement unit test execution unit test execution openssl installation openssl installation ubuntu debian ubuntudebian redhat centos rockylinux fedora redhatcentosrockylinuxfedora system system google test installation google test installation compile test compile test test test benchmark execution benchmark execution google benchmark installation google benchmark installation compile benchmark compile benchmark benchmark benchmark benchmark benchmark package package tarballs tarballs rpm rpm fedora centos redhat fedoracentosredhat deb deb debian ubuntu debianubuntu algorithm explanation algorithm explanation dijkstra dijkstra dial dial prim algorithm prim algorithm bfs bfs dfs dfs cycle detection cycle detection bellman ford bellman ford floyd warshall floyd warshall kruskal algorithm kruskal algorithm boruvka algorithm boruvkas algorithm graph slice base connectivity graph slice base connectivity ford fulkerson algorithm ford fulkerson algorithm partition algorithm explanation partition algorithm explanation vertex cut vertex cut edge balance vertex cut edge balance vertex cut greedy vertex cut greedy vertex cut hdrf hdrf ebv ebv contribute contribute site site contact contact support support reference reference credit credit contributor contributor cite cite hacktoberfest 2k21 hacktoberfest 2k21 detail detail author author uninstall linux tarballs unix linux system need execute follow command sudo tar xjf cxxgraph version tar bz2 uninstall sudo usr include graph hpp usr include cxxgraph rpm fedora centos redhat system need execute follow command sudo rpm ivh cxxgraph version noarch rpm uninstall sudo rpm cxxgraph version deb debian ubuntu system need execute follow command sudo dpkg cxxgraph_ version deb uninstall sudo apt get remove cxxgraph source source library cmake compilation phase sudo make library class explanation class explanation find doxygen class requirement minimun standard require compiler version great also require openssl library simple put header need work progess unit test execution unit test require cmake version great google test library openssl installation ubuntu debian redhat centos rockylinux fedora system find information openssl google test installation compile test base directory test compilation executable directory name test_exe simple command test_exe benchmark execution benchmark require cmake version great google test google benchmark library google benchmark installation google compile benchmark base directory benchmark compilation executable directory name benchmark simple command benchmark benchmark check benchmark package tarballs create tarballs package need follow follow step rpm fedora centos redhat create rpm package need follow follow step deb debian ubuntu create deb package need follow follow step algorithm explanation dijkstra graph dijkstras short path algorithm dijkstra short dijkstra algorithm find short path source node reachable nod graph algorithm initially assume nod unreachable give source node mark distance nod infinity infinity source node inf infinity denote unable reach dial dial specialization dijkstra algorithm edge weight small integer bound parameter specialize queue take advantage fact speed dijkstra algorithm first algorithm type dial algorithm dial graph positive integer edge weight bucket queue obtain time source complete algorithm maintain bucket number bucket contain temporarily label nod distance equal nod bucket represent list vertex bucket check sequentially first non empty bucket find node contain first non empty bucket minimum distance label definition nod minimum distance label permanently label delete bucket scan process thus operation involve vertex include check bucket empty add vertex bucket delete vertex bucket position temporarily label vertex bucket update accordingly distance label vertex change process repeat vertex permanently label distance vertex finalize find step step illustration prim algorithm prim prim algorithm greedy algorithm find minimum span tree weight undirected graph mean find subset edge form tree include every vertex total weight edge tree minimize algorithm operate tree vertex time arbitrary start vertex step add cheap possible connection tree another vertex step initialize tree single vertex choose arbitrarily graph grow tree edge edge connect tree vertex yet tree find minimum weight edge transfer tree repeat step vertex tree bfs breadth first search breadth first search algorithm breadth first breadth first search also quote bfs graph traversal algorithm time complexity number vertex number edge graph application breadth first search find short path vertex say path length measure number edge advantage depth first search algorithm ford fulkerson method compute maximum flow flow test bipartiteness graph cheney algorithm copy garbage collection many dfs depth first search depth first search algorithm depth first depth first search also quote dfs graph traversal algorithm time complexity number vertex number edge graph application depth first search find connect component find edge vertex connect component find edge vertex connect component find bridge graph generate word order plot limit set group find strongly connect component many cycle detection cycle graph existence cycle direct undirected graph determine whether depth first search dfs find edge point ancestor current vertex contain back edge back edge dfs skip part cycle undirected graph edge parent node count back edge find already visit vertex indicate back edge case undirected graph time require find cycle vertex graph since edge tree edge many topological sort algorithm detect cycle since obstacle topological order exist also direct graph divide strongly connect component cycle exist within component since cycle strongly connect direct graph distribute message base algorithm algorithm rely idea message send vertex cycle come back distribute cycle detection algorithm useful process large scale graph distribute graph process system computer cluster supercomputer application cycle detection include wait graph detect deadlock concurrent system bellman ford bellman ford find short distance source target node time complexity number vertex number edge graph high dijkstra short path algorithm time complexity dijkstra algorithm log advantage bellman ford dijkstra handle graph negative edge weight graph contain negative weight cycle algorithm detect report presense negative cycle give nice overview algorithm mit give proof bellman ford correctness ability detect negative cycle application distance vector rout protocol rout information protocol rip interior gateway rout protocol igrp floyd warshall floyd warshall initialize solution matrix input graph matrix first step update solution matrix consider vertex intermediate vertex idea pick vertex update short path include pick vertex intermediate vertex short path pick vertex number intermediate vertex already consider vertex intermediate vertex every pair source destination vertex respectively possible case intermediate vertex short path keep value dist intermediate vertex short path update value dist dist dist dist dist dist kruskal algorithm kruskal find minimum span forest undirected edge weight graph time complexity log log number vertex number edge graph main speed limitation algorithm sort edge quick understand algorithm procedure check real life application lan tour operation water gas pipe electric grid algorithm find minimum span forest prim algorithm boruvka algorithm boruvka algorithm boruvka greedy algorithm find minimum span tree graph minimum span forest case graph connect algorithm begin find minimum weight edge incident vertex graph add edge forest repeat similar process find minimum weight edge tree construct far different tree add edge forest repetition process reduce number tree within connect component graph half former value logarithmically many repetition process finish set edge add form minimum span forest boruvka algorithm show take log iteration loop terminate therefore time log number edge number vertex assume graph slice base connectivity mathematical definition problem let set nod graph give node set let non strict subset contain nod reachable let complement third set non strict subset contain nod reachable node problem consist find nod belong currently implement algorithm dfs find nod reachable element set initialize complement nod nod nod apply dfs get list reachable nod set finally remove nod belong solution application algorithm garbage collection system decide object need release give object release ford fulkerson algorithm ford fulkerson greedy algorithm find maximum flow flow idea behind algorithm follow long path source start node sink end node available capacity edge path send flow along path find another path path available capacity call augment path partition algorithm explanation vertex cut vertex cut partition divide edge graph equal size partition vertex hold endpoint edge also place partition edge however vertex unique across partition might replicate cut due distribution edge across different partition replication factor quantify many vertex replicate computer compare number vertex original input graph edge balance vertex cut algorithm simple vertex cut round robin fashion take original graph edge assign partition divide equal similar size algorithm take care optimization vertex replication replication factor balance edge partition greedy vertex cut greedy partition algorithm entire history edge assignment make next decision algorithm store set partition already observe vertex assign current partition size process edge connect vertex greedy algorithm follow simple set rule rule neither assign partition place partition small size rule vertex already assign without loss generality assume assign vertex place partition small size rule edge place partition small size rule place partition small size new vertex replica create accordingly hdrf high degree replicate first hdrf algorithm greedy vertex cut algorithm describe algorithm try optimize replication factor history edge assignements amd incremental vertex degree function take consideration factor calculate best partition assign analyze edge replica create base degree verteices vertex replicate probably call hub node vertex high degree ebv efficient balance vertex cut ebv offline vertex cut algorithm describe algorithm try balance partition respect number edge vertex partition replication factor apply formula evaluate partition assign edge take consideration also total number edge vertex graph evaluation formula follow low value take partition contribute github want give support create pull request github report issue github want change fix issue implement new feature please read contribute want disscuss new feature question suggestion library please open simply chat join chat site cxxgraph contact mail zigrazor gmail com join chat github profile zigrazor github support support add star project github follow github get update watch project github reference reference credit thank community algorithm ispiration thank algorithm inspiration contributor thank people already contribute cxxgraph cite software please follow istruction thank hacktoberfest 2k21 participate hacktoberfest thank contributor detail view estimate value author img
C C++;https://github.com/sofa-framework/sofa;sofa simulation open framework introduction sofa open source framework primarily target real time simulation emphasis medical simulation mainly intend research community help foster new algorithm also efficient prototyping tool sofa advance software architecture allow creation complex evolve simulation combine new algorithm exist algorithm modification key parameter simulation deformable behavior surface representation solver constraint collision algorithm etc simply edit xml synthesis complex simple scene graph description efficient simulation dynamic interact object abstract equation solver comparison various algorithm available sofa installation date instruction please refer sofa documentation contribution sofa community please welcome find way get involve create issue pull request please read carefully contribute information author see license sofa lgpl except application project gpl application tutorial gpl sub directory license specify different license lgpl refer gnu less general public license publish free software foundation either version license option late version gpl refer gnu general public license publish free software foundation either version license option late version contact information contact sofa framework org sofa simulation open framework architecture inria ustl ujf cnrs mgh
C C++;https://github.com/aigamedev/btsk;btsk behavior tree starter kit
C C++;https://github.com/rikyoz/bit7z;bit7z static library offer clean simple interface zip dlls support feature get start requirement donation license introduction bit7z static library allow compress extract many archive format clean simple entirely object orient interface dynamic library zip project support compression extraction filesystem memory read archive metadata update exist archive creation multi volume archive operation progress callback many functionality support feature compression follow archive format bzip2 gzip tar zip wim extraction follow archive format arj bzip2 cab chm cpio cramfs deb dmg ext fat gpt gzip hxs ihex iso lzh lzma mbr msi nsis ntfs qcow2 rar rar5 rpm squashfs tar udf uefi vdi vhd vmdk wim xar zip read metadata archive content test archive error update exist archive compression extraction _to from_ memory compression memory support bzip2 gzip tar format compression extraction _to from_ standard stream compression custom directory system output archive selective extraction specify folder wildcards regexes creation encrypt archive strong aes encryption zip format archive header encryption format choice compression level none ultra support every output archive format choice compression method see support method choice compression dictionary size automatic input archive format detection solid archive multi volume archive operation callback possible obtain real time information ongoing extraction compression operation please note presence feature depend particular dll along bit7z dll support feature 7za dll support format 7zxa dll extract information zip dlls please see wiki end feature _automatic format detection_ _selective extraction regexes_ disable default macro define must compilation available get start library usage show main feature bit7z extract archive compress archive read archive metadata complete api reference available section release package contain _precompiled version_ library _debug_ _release_ mode _public api headers_ need program package available _x86_ _x64_ architecture obviously also clone repository library please see requirement target window x86 x64 compiler msvc great msvc support dlls zip dlls v19 github release package zip dlls ship bit7z available note order library link program bit7z also oleaut32 user32 lbit7z loleaut32 luser32 note even compile late version zip bit7z _should_ work also dlls previous version v16 however _strongly suggested_ dlls version note test msvc bit7z guide library available donation find project useful please consider support small donation buy coffee beer keep improve thank license gpl copyright riccardo ostani
C C++;https://github.com/LiamBindle/MQTT-C;mqtt mqtt client write mqtt lightweight publisher subscriber base message protocol commonly iot application high latency low rate link expect purpose mqtt provide portable mqtt client write embed system alike mqtt provide transparent platform abstraction layer pal make port new platform easy mqtt completely thread safe also perfectly fine single thread system make mqtt well suit embed system microcontrollers finally mqtt small source total line note author great hear place mqtt please hesitate get touch submit issue github get start mqtt first instantiate struct mqtt_client initialize call ref mqtt_init client initialize need connect mqtt broke point client ready subscribe topic like publish topic like basic api good place get start source need mqtt mqtt_pal ansi c89 compatible compile compiler simply include alternatively mqtt cmake provide makefile provide convenience documentation pre documentation find sure check ref api documentation contain documentation application programmer need ref pal documentation contain everything need port mqtt new platform module contain documentation mqtt developer test test mqtt unit test cmocka unit test therefore must instal machine unit test convenience simple makefile include unit test unix like machine unit test follow unit test bin directory unit test like note address port argument optional specify location mqtt broke test address give mosquitto mqtt test port give port portability mqtt provide transparent platform abstraction layer pal mqtt_pal mqtt_pal declare implement type call mqtt require refer ref pal complete documentation pal contribute please feel free submit issue pull request submit pull request please ensure fully document change add appropriate unit test license project license mit see license detail author mqtt initially develop cmpt winter term final project university saskatchewan liam bindle demilade adeoye
C C++;https://github.com/continental/ecal;ecal enhance communication abstraction layer window server ubuntu ubuntu ubuntu nhanced ommunication bstraction ayer ecal middleware enable scalable high performance interprocess communication single computer node different nod computer ecal publish subscribe pattern automatically connect different nod ecal automatically choose best available transport mechanism link share memory local communication incredible fast udp communication visit ecal documentation information doc rst get_started img ecal_concept_notebooks svg fact ecal ecal fast depend payload size check measure performance ecal provide publish subscribe server client pattern ecal brokerless ecal provide interface easy integration language like csharp ecal conjunction matlab simulink ecal simulink simulation prototyping ecal powerful tool flow decentralize ecal simple conf complex configuration communication detail qos setting need ecal message protocol agnostic choose message protocol fit need like google ecal standardize record format ecal integrate gently ros2 environment ecal ecal support intel arm platform ecal wide variety operate system window stable linux stable qnx stable macos experimental freebsd experimental installation provide binary installers window ubuntu need help instal configure ecal please refer window late ecal installer follow setup wizard ecal setup doc rst get_started img setup png support 64bit window ubuntu ecal ppa ppa always upgrade late ecal release roll release ppa intend stay specific release check ppas ubuntu cpu architecture i386 x64 armhf arm64 support time write ecal project exchange simple instal cmake good check hello ecal documentation detail tool ecal ecosystem ecal come set read tool help develop test debug software command line interface version easy gui application available ecal monitor visualize flow inspect message send publisher subscriber ecal recorder record send ecal nod ecal player replay ecal record late ecal sys define system configuration monitor application ecal mon gfx app monitor_imagevisu png project ecal general purpose middleware framework distribute application mathworks simulink toolbox ecal ecal language bind ecal rust language bind ecal ros2 middleware layer ecal gps gateway simple graph visualization ecal demo gateway ecal5 ros2 demo gateway ros2 ecal5 project ecal ftp functionality collect distribute measurement artifact additional tcp transport layer high reliability publication subscription alternative share memory transport layer need activate via cmake option inoffical dockerfiles ecal license ecal license apache license free ecal commercially modify ecal distribute ecal ecal provide basis without warranty condition kind
C C++;https://github.com/hanickadot/compile-time-regular-expressions;compile time regular expression fast compile time regular expression support match search capture compile time runtime single header version directory single header header regenerate make single header info library match search capture content name capture support back reference syntax syntax library implement pcre syntax exception atomic group boundary callouts character property comment conditional pattern control character horizontal vertical character class match point reset name character octal number option mode subroutine unicode grapheme cluster documentation subject input std string like object std string_view string provide begin end function forward iterators pair forward iterators support compiler clang template udl syntax xcode clang template udl syntax gcc template udl syntax gcc cnttp syntax msvc syntax template udl syntax compiler must support n3599 extension gnu extension gcc gcc clang need n3599 extension gcc pedantic mode define macro ctre_enable_literals syntax provide pattern constexpr ctll fixed_string variable test msvc syntax currently compiler support cnttp syntax ctre match subject gcc extract number input link compiler extract value date link compiler capture lexer link compiler range input support preliminary probably api change
C C++;https://github.com/recastnavigation/recastnavigation;recast detour travis linux appveyor window issue issue screenshot navmesh bake sample program recastdemo screenshot png raw true recast recast state art navigation mesh construction toolset game automatic mean throw level geometry get robust mesh fast mean swift turnaround time level designer open source come full source customize heart content recast process start construct voxel mold level geometry cast navigation mesh process consist step voxel mold partition mold simple region peel region simple polygon voxel mold input triangle mesh rasterize triangle multi layer heightfield simple filter apply mold prune location character would able move walkable area describe mold divide simple overlay region region non overlap contour simplify final step process tremendously navigation polygon peel region first trace boundary simplify polygon finally convert convex polygon make perfect pathfinding spatial reason level detour recast accompany detour path find spatial reason toolkit navigation mesh detour course generate recast fit perfectly detour offer simple static navigation mesh suitable many simple case well tile navigation mesh allow plug piece mesh tile mesh allow create system stream new navigation player progress level may regenerate tile world change recast demo find comprehensive demo project recastdemo folder kitchen sink demo contain functionality library new recast detour check sample_solomesh cpp recastdemo source sample_solomesh cpp get start navmeshes navmeshtestertool cpp recastdemo source navmeshtestertool cpp see detour find path recastdemo recastdemo platform specific project make sure available path specify path linux sdl2 dependency accord distro guideline premake5 gmake recastdemo folder gmake make recastdemo bin recastdemo osx grab late sdl2 development library dmg place sdl2 framework library framework navigate recastdemo folder premake5 xcode4 open xcode4 recastnavigation xcworkspace select recastdemo project leave pane buildphases tab expand link binary library remove exist entry sdl2 white box icon add hit plus select add select library framework sdl2 framework suitcase icon set recastdemo project target window grab late sdl2 development library release unzip recastdemo contrib rename sdl folder path recastdemo contrib sdl lib x86 valid premake5 vs2019 recastdemo folder open solution unit test follow instruction recastdemo premake generate another target call test test project generate executable name test recastdemo bin test executable execute unit test indicate fail display count succeed integrate project recommend add source directory debugutils detour detourcrowd detourtilecache recast project depend part project need level tool could include debugutils recast detour game runtime could include detour contribute see contribute document contribute guideline make contribution discus discus recast detour development blog license recast detour license zlib license see license txt information
C C++;https://github.com/taviso/ctypes.sh;ctypes ctypes foreign function interface bash ctypes bash plugin provide foreign function interface directly word allow call routine share library within bash simple help illustrate ctypes extend bash script accomplish task previously impossible would require external helper write ctypes make possible natively script write high performance see prerequisite ctypes dependent follow library program libffi bash libelf optional elfutils optional libdwarf libdw optional fedora recent fedora enough sudo yum elfutils devel dnf utils debuginfo command debug symbol automatic structure support ubuntu recent ubuntu enough sudo apt autoconf libltdl dev libffi dev libelf dev elfutils libdw dev want automatic struct support recommend also make ddebs ctypes instal source like default ctypes instal usr local bin usr local lib overload prefix path define prefix environment variable instal people say ctypes disgust get stop far joke never know could stand cthulhu read ctypes see action
C C++;https://github.com/andlabs/libui;libui portable gui library readme write status azure status status come attention particularly clear usable feature complete libui fool many people expect libui right moment explicitly promise make available apologize sooner libui currently mid alpha software much currently present stabily enough perhaps small program work stability still work progress much already feature complete buggy certain platform lot stuff miss short list feature would like add libui yet tree clipboard support include drag drop good dialog print accessibility uiarea custom control document base program tight integration especially document base program allow program fully feel native rather merely look act native good support standard dialog feature search bar etc opengl support addition list issue generalize exist problem furthermore libui properly fully document yet mainly due fact api initially unstable enough rewrite documentation multiple time addition happy really exist documentation tool say start pin ideal documentation style part notably uiattributedstring apis time plan extend rest header also documentation libui reference though somewhat stale optimally write libui dead work whenever hope get point real quality soon news note today entry eastern time may update late today april system switch meson see instruction change make previous system cmake cause countless headache trivial issue meson choose due unproblematic set libui right well design goal coincidence closely align libui want travis replace azure pipeline much appveyor configuration integrate azure pipeline configuration affect developer september alpha emergency fix alpha fix uiimageappend work document work properly important difference need care require image alpha premultiplied addition uiimage also implement slightly nicely minor documentation typo fix alpha also try make everything properly pic enable august alpha finally everything alpha list release big change still new text draw api new uitable control whole bunch bugfixes hopefully stability thank everybody help contribute alpha hopefully also include automate binary release via thank help set august finally introduce api load image uiimage new control uitable display tabular provide enough basic functionality improve time read documentation new feature thank everyone help get point particular bcampbell initial window everyone else patience may merge previous announcement update section readme single news section merge respective archive single news may thank parro msink libui good include appveyor window automate creation binary release make tag release may add new function work uidatetimepickers uidatetimepickertime uidatetimepickersettime uidatetimepickeronchanged operate standard struct thank cody271 release window msvc fix thank l0calh05t slahn mischnic zentner kyle may gtk clean process static library long intermediate differ configuration certain issue long present new name rule internal symbol libui also start draft runtime symbol edge case still need handle rule apply window become regular thing may window long need carry around libui static need link appropriate manifest window folder still need figure exactly need apart common control dependency least create complete ish template least include alongside executables also mean long see random cmake error static library april introduce new uitimer function timer main thread thank cody271 migrate common directory uipriv prefix everything static first step toward fix static library oddity within libui allow libui truly safely either static library share library march introduce new format text api allow process format text way old api would allow read whole api also new drawtext show whole api glance yet support measure manipulate text currently support function would necessary thing like text editor add back late libui also utf utf utf process allow consistent behavior across platform usage completely propagate throughout libui window port place eventually become libui throughout also introduce formal set contribution guideline see contribute detail still wip february longstanding enter escape crash window finally fix thank lxn alpha quickie release primiarly intend deploy fix package partial binary release sorry new thing come next release also introduce semver call instead alpha also include new control gallery screenshots update yet old announcement find news runtime requirement window window vista sp2 platform update new unix gtk new mac new requirement platform new meson backends section assume reason backends work window either microsoft visual studio new need va_copy either static share library mingw w64 flavor mingw may work static library share library support add follow feature come isolation get theme control dll without need manifest unix nothing else specific mac nothing else specific long cocoa program libui standard meson libui set like complete everything meson note unlike previous process everything default include test important option buildtype debug release control type make default debug full list valid value consult meson default library share static control whether libui share library static library default share currently specify process change depend target type though look change thing possible db_sanitize allow enable choose system support sanitizers list support value meson backend backend allow specify backend instead ninja default list support value meson option work though keep mind handful option override libui depend hold specific value override though libui warn meson meson website documentation depth usage instruction sake completeness note default value layout flat usual mirror make create release archive easy well reduce chance share library fail start window dll another directory always specify manually want backends ninja work untested installation meson also support instal source ninja meson prefix option set installation prefix meson information even list fine grain option control installation arch linux aur documentation need write consult detail language bind libui originally write part package libui separate package become bind libui package official bind people make bind language language bind net framework net core chicken scheme common lisp crystal derelictlibui flat libuid euphoria harbour haskell javascript node libui merge julia kotlin lua nim perl6 php ruby rust scala swift frequently ask question program start background command line normally start program executables directly instead launch coordinate launch program various part system load info app bundle coordination task responsible bring newly launch app foreground call activation binary directly terminal however directly launch service therefore program start background tell activate turn force app activate would trample launch service already know whether activate therefore libui step launch service cost require extra user step directly command line see also contribute see contribute screenshots controlgallery window controlgallery window png unix controlgallery unix png controlgallery darwin png
C C++;https://github.com/godotengine/godot;godot engine cross platform game engine godot feature pack cross platform game engine create game unify interface provide comprehensive set common user focus make game without reinvent wheel game export click number platform include major desktop platform linux macos window mobile platform android well web base platform html5 free open source community drive godot completely free open source permissive mit string attach royalty nothing user game last line engine godot development fully independent community drive empower user help shape engine match expectation support software freedom profit open source february godot develop juan ariel still maintain project several year house engine publish several work hire title screenshot scene godot engine get engine binary official binary godot editor export template find compile source see official compilation instruction every support platform community contribute godot engine ever grow community user engine developer main community channel list best way get touch core engine developer join godot contributor get start contribute project see contribute guide contribute documentation demo official documentation host maintain godot community github class also accessible godot editor also maintain official demo github well list awesome godot community also number provide community text video tutorial demo etc consult community information triagers translate total alert
C C++;https://github.com/jedisct1/libhydrogen;codeql financial contributor open coverity scan trustinsoft hydrogen library small easy hard misuse cryptographic library feature consistent high level api inspire libsodium instead low level primitive expose simple function solve common problem cryptography solve cryptographic block elliptic curve permutation small easy audit implement tiny every set operation add single project take libhydrogen project whole release single liberal license isc dynamic memory allocation low stack requirement median byte max byte make usable constrain environment microcontrollers portable write standard c99 support linux bsd macos window arduino ide box generate cryptographically secure random number even arduino board attempt mitigate implication accidental misuse even system unreliable prg clock non goal multiple primitive serve purpose even provide compatibility library simple key exchange api base noise protocol available strobe base transport api implement interoperability library replace libsodium libhydrogen try keep number apis size minimum libhydrogen documentation maintain libhydrogen legacy libhydrogen leverage xchacha20 siphashx blake2sx curve25519 remain available contributor contributor project exist thank people contribute contribute contribute
C C++;https://github.com/bloomberg/quantum;quantum library scalable coroutine framework quantum full feature powerful framework top boost library framework allow user dispatch unit work _tasks_ coroutines execute concurrently reactor pattern feature new add support simple coroutine api return compute value header library interface base design full integration boost asymmetric coroutine library highly parallelize coroutine framework cpu bind workload support long block task allow explicit implicit cooperative yield coroutines task continuation coroutine chain serialize work execution synchronous asynchronous dispatch future promise similar stl support _streaming futures_ allow fast process large set support _future references_ cascade execution output task continuation _past_ future task prioritization internal error handle exception forward ability write lock free synchronize coroutines dedicate queue coroutine friendly mutexes condition variable lock critical path synchronize access external object fast pre allocate memory pool internal object coroutines parallel foreach mapreduce function various stats api sequencer class allow strict fifo order task base sequence sample quantum simple easy chain task also straightforward produce various type sequence chain new api instal quantum header library target need simply cmake option various cmake option configure output quantum_build_doc doxygen documentation default quantum_enable_dot enable generation dot viewer default quantum_verbose_makefile enable verbose cmake output default quantum_enable_tests test target default quantum_boost_static_libs link boost static library default quantum_boost_use_multithreaded boost multi thread library default quantum_use_default_allocator default system supply allocator instead quantum default quantum_allocate_pool_from_heap pre allocate object pool heap instead application stack default quantum_boost_use_segmented_stacks boost segment stack coroutines default quantum_boost_use_protected_stacks boost protect stack coroutines slow default quantum_boost_use_fixedsize_stacks boost fix size stack coroutines default quantum_install_root specify custom path default usr local include linux program window quantum_pkgconfig_dir specify custom path quantum default quantum_install_root share pkgconfig specify relative path quantum_install_root omit lead quantum_export_pkgconfig generate quantum default quantum_cmake_config_dir specify different directory project config target version default quantum_install_root share cmake quantum_export_cmake_config generate cmake config target version default boost_root specify different boost directory gtest_root specify different gtest directory note option must precede pas argument cmake test follow top directory library simply include application also follow library must include link boost_context pthread quantum library fully compatible language feature see compiler option detail compiler option follow compiler option set application __quantum_print_debug print debug error information stdout stderr respectively __quantum_use_default_allocator disable pool allocation internal object coroutine stack default system allocator instead __quantum_allocate_pool_from_heap pre allocate object pool heap instead application stack default affect internal object allocation coroutines coroutine pool always heap allocate due size __quantum_boost_use_segmented_stacks boost segment stack demand coroutine stack growth note boost context library must property segment stack apply boost_use_ucontext boost_use_segmented_stacks bjam command line __quantum_boost_use_protected_stacks boost protect stack runtime bind check option coroutine creation runtime efficiency become expensive __quantum_boost_use_fixedsize_stacks boost fix size stack default system default allocator application wide setting various application wide setting configure via threadtraits allocatortraits stacktraits documentation please see page detail overview library case scenario class description visit api page
C C++;https://github.com/foonathan/memory;memory project stl allocator various flaw fix certain type almost necessarily require template easily share single allocator multiple type addition get copy container original allocator object least allow stateful make object instance base still many flaw course year many solution propose eastl library another instead try change stl work current sponsor embarcadero like project consider support feature new allocator concept rawallocator similar allocator easy write blockallocator allocator huge memory block several heap_ malloc_ new_allocator virtual memory allocator allocator static memory block locate stack memory stack iteration_allocator different memory pool portable improve alloca form temporary_allocator facility joint memory allocation share big memory block object dynamic memory allocation member adapter wrapper storage class incredible powerful allocator_traits allow allocator rawallocator std_allocator make rawallocator allocator adapter memory resource allocator_deleter class smart pointer optionally type erase allocator_reference storage class memory track wrapper addition container node size debugger obtain information node size stl container compile time specify node size pool debug option leak check double free check buff overflow customizable error handle routine work exception disable everything except stl adapter work freestanding environment basic see installation library cmake subdirectory test gcc clang visual studio new version work fetch git submodules git submodule add ext memory git submodule update init recursive call add_subdirectory ext memory whatever local path make available cmake simply call target_link_libraries your_target public foonathan_memory link library setup include search path compilation option also library cmake dcmake_build_type buildtype dfoonathan_memory_build_examples dfoonathan_memory_build_tests inside library source cmake library cmake_install_prefix repeat type configuration want like debug relwithdebinfo release custom name instal library call find_package foonathan_memory major minor require find library call target_link_libraries your_target public foonathan_memory link library setup require option see detail guide documentation full documentation find tutorial also available rawallocator interface require rawallocator everything optional mark rawallocator need moveable allocator class rawallocators class provide interface specialize allocator_traits read write allocator technical detail concept acknowledgement project greatly support particular thank individual supporter kaido kert big thank contributor well guekka manu343726 miguelcompany asobhy qnx bfierz cho3 gabyx carl kaidokert maksqwe maksqwe moazzamak moazzamak myd7349 myd7349 nicolastagliani quattrinili razr roehling seanyen wtsnyder zhouchengming1 jwdevel eastl cmake www cmake org git submodules foonathan compatibility hptts github com foonathan compatibility
C C++;https://github.com/Tessil/hopscotch-map;fast hash map hash set hopscotch hash hopscotch map library fast hash map hash set open address hopscotch hash resolve collision cache friendly structure offer good performance std unordered_map case closely similar google dense_hash_map memory provide functionality library provide follow main class tsl hopscotch_map tsl hopscotch_set tsl hopscotch_pg_map tsl hopscotch_pg_set first fast power growth policy last prime growth policy instead able cope good poor hash function prime version chance repeat pattern low bit hash store pointer identity hash function see growthpolicy growth policy detail addition class library also provide tsl bhopscotch_map tsl bhopscotch_set tsl bhopscotch_pg_map tsl bhopscotch_pg_set class additional requirement key must lessthancomparable provide good asymptotic upper bind see detail deny service attack nonetheless specific requirement risk hash attack tsl hopscotch_map tsl hopscotch_set sufficient case default pick perform good general overview hopscotch hash detail find benchmark tsl hopscotch_map hash map may find page also give advice hash table structure try case useful bite lose multiple hash table tsl namespace key feature header library add include include directory include path ready cmake also tsl hopscotch_map export target cmakelists txt cmakelists txt fast hash table see number support move non default constructible key value support heterogeneous lookup allow usage find type different key map std unique_ptr key foo std uintptr_t key parameter find without construct std unique_ptr see heterogeneous lookup need reserve sentinel value key possibility store hash value insert fast rehash lookup hash key equal function expensive compute see template parameter hash know lookup possible pas parameter speed lookup see precalculated_hash parameter tsl bhopscotch_map tsl bhopscotch_set provide bad case log lookup deletion make class resistant hash table deny service attack see detail deny service attack library exception disable fno exception option clang gcc without option msvc simply define tsl_no_exceptions std terminate replacement throw instruction exception disable api closely similar std unordered_map std unordered_set difference compare std unordered_map tsl hopscotch_map try interface similar std unordered_map difference exist iterator invalidation insert behave way general operation modify hash table except erase invalidate iterators see detail reference pointer key value map invalidate way iterators key value insert iterators operator operator return reference pointer const std pair instead std pair make value modifiable modify value call value method iterator get mutable reference move type must nothrow move constructor open address possible keep strong exception guarantee rehash move constructor may throw support bucket relate method like bucket_size bucket difference also apply std unordered_set tsl hopscotch_set thread safety exception guarantee std unordered_map set possible multiple reader writer growth policy library support multiple growth policy growthpolicy template parameter policy provide library easily implement need default policy tsl hopscotch_map set policy keep size bucket array hash table power constraint allow policy avoid usage slow modulo operation map hash bucket instead hash hash see fast fast may cause lot collision poor hash function modulo power mask significant bit end default policy tsl hopscotch_pg_map set policy keep size bucket array hash table prime number map hash bucket prime number modulo good distribution hash across bucket even poor hash function allow compiler optimize modulo operation policy lookup table constant prim modulos see detail slow tsl power_of_two_growth_policy secure policy grow map customizable growth factor pas parameter modulo operator map hash bucket slow flexible encounter poor performance check overflow_size may lot hash collision either change hash function something uniform try another growth policy mainly tsl prime_growth_policy unfortunately sometimes difficult guard collision attack hash map need check also tsl bhopscotch_map set offer bad case scenario log lookup instead see detail deny service attack implement policy implement follow interface installation hopscotch map add include include directory include path header library cmake also tsl hopscotch_map export target cmakelists txt cmakelists txt target_link_libraries project instal make also find_package tsl hopscotch map require instead add_subdirectory work standard compliant compiler test gcc clang visual studio test need boost test library cmake usage api find method document yet replicate behaviour std unordered_map std unordered_set except specify otherwise heterogeneous lookup heterogeneous overload allow usage type key lookup erase operation long type hashable comparable key activate heterogeneous overload tsl hopscotch_map set qualify keyequal is_transparent must valid work way either define function object keyequal hash need able deal different type deny service attack addition tsl hopscotch_map tsl hopscotch_set library provide secure option tsl bhopscotch_map tsl bhopscotch_set counterpart addition bad case asymptotic complexity log lookup deletion amortize bad case log insertion amortize due possibility rehash would even hash function map element bucket log would still hold provide security hash table deny service attack achieve secure version binary search tree overfly element see thus need element lessthancomparable additional compare template parameter need license license mit license see license license detail
C C++;https://github.com/libuv/libuv;libuv libuv_banner overview libuv multi platform support library focus asynchronous primarily develop node also feature highlight full feature event loop back epoll kqueue iocp event port asynchronous tcp udp socket asynchronous dns resolution asynchronous system operation system event ansi escape control tty ipc socket share unix domain socket name pip window child process thread pool signal handle high resolution clock thread synchronization primitive versioning start version libuv follow semantic scheme api change backwards compatibility rule indicate semver libuv keep stable abi across major release abi api change track license libuv license mit license check license license documentation license license check license doc license doc community mail documentation official documentation locate doc subdirectory framework make possible documentation multiple format show different support option documentation html documentation html live reload change require sphinx autobuild instal support unix documentation man page documentation epub note window user need make bat instead plain make documentation browse online test also serve api specification usage resource lxjs high level introductory talk libuv document type method libuv mostly read fun profit self guide workshop libuv resource handle libuv maintainer might date please verify open new issue libuv either github verify git tag signature import relevant key necessary key list also available git blob object easy import key usual way import key git blob object verify release git tag sign developer key verify follow start libuv tarballs store sign accompany signature sit alongside release tarball signature verify follow instruction unix like platform include macos method autotools cmake window cmake support method follow prerequisite visual tool visual studio update edition include community edition remember select common tool visual feature installation visual studio edition include tool sku require component msbuild v141 toolset window sdks basic unix tool require test git window include git bash tool include global path autotools cmake cross compile cmake unsupported generally work homebrew note user make sure specify architecture wish arch flag specify delimit space x86_64 i386 test test time sensitive relax test timeouts may necessary slow overload machine test list test test test list invocation cause test driver fork execute test_name child process invocation cause test driver execute test process debug tool test within test driver process uv_run_tests_a test_name test_name tool like gdb valgrind work normally test child test driver process uv_run_tests_a test_name tool fork aware manner fork aware gdb set fork aware valgrind trace child yes parameter benchmark see section test benchmark driver uv_run_benchmarks_a benchmark list test benchmark list support platform check supported_platforms supported_platforms fno strict aliasing recommend turn fno strict aliasing compiler flag project libuv hoc inheritance libuv api may safe presence compiler optimization depend strict aliasing msvc equivalent flag also appear need time write december aix note aix compilation ibm require version great aix support filesystem event require non default ibm bos ahafs package instal package provide aix event infrastructure detect autoconf ibm describe package detail note compilation require instal cmake flag dzoslib_dir specify path create system semaphore message queue persist system process terminate unless event loop close ipcrm command manually clear system resource patch see guideline contribute cmake node guideline contribute libuv_banner visual tool visual studio update visual studio git window
C C++;https://github.com/dmlc/xgboost;extreme gradient boost documentation github cran status pypi conda resource demo readme contributor contributor release note news xgboost optimize distribute gradient boost library design highly efficient flexible portable implement machine algorithm gradient framework xgboost provide parallel tree boost also know gbdt gbm solve many science problem fast accurate way major distribute environment kubernetes hadoop sge mpi dask solve problem beyond billion license contributor license license contribute xgboost xgboost develop group active community member help valuable make package good everyone checkout community reference tianqi chen carlos guestrin xgboost scalable tree boost 22nd sigkdd conference knowledge discovery mine xgboost originate research project university washington sponsor become sponsor get logo see detail sponsor xgboost fund defray cost continuous integration test infrastructure open source collective sponsor backer open sponsor open sponsor become target _blank
C C++;https://github.com/davidmoreno/onion;onion server library travis coverity onion library create simple http server web application master development branch current stable branch onion introduction case exist application new need http interconnection world library add handler specific url generate serve dynamic need also security goal ssl support concentrate want serve serve web server per executable want compare web server web server would module plugin add functionality libonion functionality add webserver plugin wiki available useful information get start onion internal work api documentation mail list collaborate encourage branch github tweak onion project library dual license apache2 license gplv2 make almost anything commercial free software program modify need please join mail list ask question comment success onion also blog keep everybody inform news onion third party package available rpm base raspberry arch linux know package version please send note always may outdated want late great manual compile thank ruediger meier help long rpm package compile manual compile compile debug enable debug message set onion_debug onion_debug0 environment variable contain source name dependency require compiler cmake make epoll linux multiarch multiarch compiler minimum version know work linux gcc clang bind compiler need linux gcc clang optional onion compile functionality available gnutls gcrypt ssl support pthreads thread support libxml2 webdav support libpam http basic auth support pam compiler systemd support listen systemd socket sqlite3 sqlite3 session backend hiredis redis session backend optional cairo libpng2 boehm libjpeg semantic versioning start onion semantic versioning make follow promise version format major minor patch make api abi change major version add functionality minor release remove api function major version change semantics never minor version always abi back compatible mean compile previous minor version major version still compile work add api function minor version fix patch patch revision patch revision non sequential number maybe always increase check onion version information version control ssl support compile time script find gnutls library ssl support compile deactivate anyway cmakelists txt set certificate check check flag o_ssl_activated support compile library ssl user library interface change try set certificate fail anwyay client interface care suport able ssl mandatory may moment program user want support ssl whatever reason speed thread support currently thread mode set server create thread o_threaded create new thread per connection protection listen phase change onion structure nevertheless new handler create must set thread support neccesary deactivate cmakelists txt pthreads lib find system compile also thread support onion server set work another non main thread independant o_threaded operation thread normal application another thread listen process web request set o_detach_listen flag useful add extra web server application add without change flow application need thread protect access web server finally pool mode user set default number thread onion_set_max_threads epoll give thread high performant method 30k web request serve intel core duo cpu t6500 10ghz customize low level allocation thread sometimes may need customize memory allocation thread operation could useful alternative malloc want han boehm conservative garbage collector gnu guile need define memory routine pas onion_low_initialize_memory_allocation call onion likewise customize thread operation call onion_low_initialize_threads see comment header low program onion boehm first define memory failure routine never return program onion boehm initialize memory routine thread like might need define gc_calloc gc_malloc memset version boehm provide low level initialization onion usual could also want call onion_low_initialize_threads want name thread create onion library pthread_setname_np linux change priority pthread_setschedprio etc arm support cross compile arm directly cmake need current system opack otemplate compile want instalation compile libonion current system first test ubuntu gcc arm linux gnueabi arm linux gnueabi instal templating support start development onion templating support via otemplate template system similar django template check information tool otemplate readme rst i18n i18n support check wiki detail fileserver_otemplate systemd systemd integrate want pas flag o_systemd onion_new oterm socket service oterm support freebsd darwin since september support freebsd libev libevent work test linux version compilation error arise please send bug report fix soon possible osx darwin support also available darwin branch work stabilize merge back master environment variable set follow environment variable export builtin bash modify runtime behaviour onion onion_log noinfo disable info output console achieve fast nocolor disable color log nodebug show debug line syslog log syslog change programatically onion_log global function onion_debug0 set filename source debug0 log message write normally verbose onion_sendfile set disable sendfile system work detection place disable binary compatibility break try hard keep binary compatibility sometimes hard list abi break onion object private flag move rely must recompile rely everything keep work
C C++;https://github.com/mikke89/RmlUi;rmlui html user interface library evolve rmlui add booster take control rocket target game application chat rmlui user interface package base html standard design complete solution project interface need fork project introduce new feature bug fix performance improvement rmlui aim light weight performant library layouting engine dependency essence rmlui take html like source turn vertex index draw command bring renderer draw course full access element hierarchy dom event handle interactivity customizability would expect directly optionally script language plugins core library compile fraction size take integrate fully fledge web browser library space rmlui base around xhtml1 css2 standard borrow feature html5 css3 extend feature suit towards real time application take look conformance conformance enhancement enhancement section detail documentation locate feature cross platform architecture window macos linux etc dynamic layout system full animation transform support efficient application wide style custom templating engine fully feature control set button slider drop etc runtime visual debug suite extensible abstract interface plug game engine decorator engine allow custom application specific effect apply element generic event system bind seamlessly exist project easily integrate extensible lua script plugin controllable user control update loop call rmlui desire library strictly call api never background input handle render perform user library generate vertex index texture user render like handle font engine optionally fully replace user dependency however fully replace custom font engine include rmlui core fontengineinterface standard library addition compatible compiler require rmlui rmlui cmake favorite compiler see detail option window binary also available late conveniently possible fetch library dependency manager vcpkg see detail integrate rmlui rmlui include sample git cmake together vcpkg handle dependency make sure replace path vcpkg conan rmlui readily available integrate rmlui general step integrate library application look detail rmlui fetch binary link application implement abstract system interface include rmlui core systeminterface render interface include rmlui core renderinterface initialize rmlui interface create context provide font load document call context update render method loop submit input event compile several sample sample demonstrate everything basic integration complex library feel free look inspiration conformance rmlui aim support common familiar feature html keep library light performant aim fully compliant html particular conflict lightness performance user generally expect author document specifically rmlui experience skill web design transferable rmlui support css2 css3 feature animation transition transform full interpolation support flexbox layout medium query border radius many common html element include detail see rcss property support property difference rml element support element enhancement rmlui add feature enhancement html make sense notably follow bind synchronization application user interface full control style sprite define sprite easy high dpi support make window look consistent translate text document document demonstrate basic document load display document hello_world rml animal text value attribute represent bind synchronize application style sheet window rcss rmlui define style internally thus input element style rml rcss include sample asset rml rcss proper layout common tag initialization loop main cpp render output hello world document sample asset hello_world png user edit text field change animal bind ensure document text well application string my_data animal automatically modify accordingly gallery game game interface invader sample game game menu form form control demo sample sandbox demo sample try transition mouse hover entirely rcss animate transform entirely rcss flexbox layout lottie vector animation lottie svg vector image svg see full screenshots video library action license rmlui publish mit license license txt library include third party source asset license detail rmlui source asset mit license copyright codepoint ltd shift technology ltd contributor copyright rmlui team contributor permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software third party source include rmlui core see include rmlui core container license txt include rmlui core container license txt mit license third party font asset include rmlui debugger see source debugger license txt source debugger license txt sil open font license additional sample asset sample see sample asset license txt sample asset license txt sample basic bitmapfont license txt sample basic bitmapfont license txt sample basic lottie license txt sample basic lottie license txt sample basic svg license txt sample basic svg license txt library include test suite test dependency see test dependency license txt test dependency license txt additional test suite asset test visualtests see test visualtests license txt test visualtests license txt
C C++;https://github.com/CppCon/CppCon2015;cppcon presentation material canonical location presentation cppcon speaker submit material submit index material keynote good structure keynote good 20code 20data 20structures good 20code 20data 20structures 20sean 20parent 20cppcon pdf sean parent key keynote good 20code 20data 20structures good 20code 20data 20structures 20sean 20parent 20cppcon key pdf keynote good 20code 20data 20structures good 20code 20data 20structures 20sean 20parent 20cppcon pdf range standard library keynote range 20for 20the 20standard 20library range 20for 20the 20standard 20library 20eric 20niebler 20cppcon pptx eric niebler write good keynote write 20good 20c write 20good 20c 20bjarne 20stroustrup 20cppcon pdf bjarne stroustrup write good default keynote write 20good 20c 20by 20default write 20good 20c 20by 20default 20herb 20sutter 20cppcon pdf herb sutter presentation face track reconstruction modern presentation 20face 20tracking 20and 20reconstruction 20using 20modern 20c 20face 20tracking 20and 20reconstruction 20using 20modern 20c 20patrik 20huber 20cppcon pdf patrik huber approach date time presentation 20c 20approach 20to 20dates 20and 20times 20c 20approach 20to 20dates 20and 20times 20howard 20hinnant 20cppcon pdf howard hinnant crash course open source license presentation 20crash 20course 20in 20open 20source 20licensing 20crash 20course 20in 20open 20source 20licensing 20kevin 20p 20fleming 20cppcon zip kevin fleming good type presentation 20few 20good 20types 20few 20good 20types 20neil 20macintosh 20cppcon pdf neil macintosh test terrible presentation 20your 20tests 20are 20terrible 20your 20tests 20are 20terrible 20titus 20winters 20and 20hyrum 20wright 20cppcon pdf titus winter hyrum wright allocator allocation vector vexation presentation allocator 20is 20to 20allocation 20what 20vector 20is 20to 20vexation allocator 20is 20to 20allocation 20what 20vector 20is 20to 20vexation 20andrei 20alexandrescu 20cppcon pdf andrei alexandrescu apply functional program design presentation apply 20functional 20programming 20in 20code 20design apply 20functional 20programming 20in 20code 20design 20micha 20dominiak 20cppcon pdf micha dominiak benchmarking presentation benchmarking 20c 20code benchmarking 20c 20code 20bryce 20adelstein 20lelbach 20cppcon pdf bryce adelstein lelbach beyond sanitizers presentation beyond 20sanitizers beyond 20sanitizers 20kostya 20serebryany 20cppcon pdf kostya serebryany boostache expose presentation boostache 20exposed boostache 20exposed 20michael 20caisse 20cppcon pdf michael caisse bridge language cross platform presentation bridge 20languages 20cross platform bridge 20languages 20cross platform 20andrew 20twyman 20and 20jacob 20potter 20cppcon pdf andrew twyman jacob potter coroutines presentation 20coroutines 20coroutines 20gor 20nishanov 20cppcon pdf gor nishanov cross platform development presentation 20for 20cross platform 20vr 20development 20for 20cross platform 20vr 20development 20nicolas 20lazareff 20cppcon pdf nicolas lazareff open source robotics presentation 20in 20open 20source 20robotics 20in 20open 20source 20robotics 20jackie 20kay 20louise 20poubel 20cppcon pdf jackie kay louise poubel audio industry presentation 20in 20the 20audio 20industry 20in 20the 20audio 20industry 20timur 20doumler 20cppcon pdf timur doumler metaprogramming presentation 20metaprogramming 20metaprogramming 20fedor 20pikus 20cppcon pdf fedor pikus metaprogramming paradigm shift presentation 20metaprogramming 20a 20paradigm 20shift 20metaprogramming 20a 20paradigm 20shift 20louis 20dionne 20cppcon pdf louis dionne multi dimensional array computational physic apply mathematics presentation 20multi dimensional 20arrays 20for 20computational 20physics 20and 20applied 20mathematics 20multi dimensional 20arrays 20for 20computational 20physics 20and 20applied 20mathematics 20pramod 20gupta 20cppcon pdf pramod gupta web presentation 20on 20the 20web 20on 20the 20web 20jf 20bastien 20cppcon pdf bastien atomics deep dive presentation 20atomics 20the 20deep 20dive 20atomics 20the 20deep 20dive 20michael 20wong 20cppcon pdf michael wong clang window presentation clang 20c2 20for 20windows clang 20c2 20for 20windows 20jim 20radigan 20cppcon pptx jim radigan comparison simple simple presentation comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler 20lawrence 20crowl 20cppcon odp lawrence crowl odp presentation comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler 20lawrence 20crowl 20cppcon odp ppt presentation comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler 20lawrence 20crowl 20cppcon ppt material presentation comparison 20is 20not 20simple 20but 20it 20can 20be 20simpler compile time tool generic program presentation compile time 20tools 20for 20generic 20programming 20in 20c compile time 20tools 20for 20generic 20programming 20in 20c 20abel 20sinkovics 20cppcon pdf abel sinkovics concurrency editor report presentation concurrency 20ts 20editor 20report concurrency 20ts 20editor 20report 20artur 20laksberg 20cppcon pptx artur laksberg constexpr application presentation constexpr 20applications constexpr 20applications 20scott 20schurr 20cppcon pdf scott schurr constexpr introduction presentation constexpr 20introduction constexpr 20introduction 20scott 20schurr 20cppcon pdf scott schurr contract dependable presentation contract 20for 20dependable 20c contract 20for 20dependable 20c 20gabriel 20dos 20reis 20cppcon pdf gabriel real cross platform mobile app dev presentation cross platform 20mobile 20app 20dev 20with 20vc cross platform 20mobile 20app 20dev 20with 20vc 20ankit 20asthana 20and 20marc 20gregoire 20cppcon pdf ankit asthana marc gregoire declarative control flow presentation declarative 20control 20flow declarative 20control 20flow 20andrei 20alexandrescu 20cppcon pdf andrei alexandrescu demystify float point presentation demystify 20floating 20point demystify 20floating 20point 20john 20farrier 20cppcon pdf john farrier easy compilation touchdevelop arm cortex presentation easy 20compilation 20from 20touchdevelop 20to 20arm 20cortex 20using 20c easy 20compilation 20from 20touchdevelop 20to 20arm 20cortex 20using 20c 20jonathan 20protzenko 20cppcon pptx jonathan protzenko enhance stl container presentation enhance 20stl 20containers enhance 20stl 20containers 20viktor 20korsun 20cppcon pdf viktor korsun evolve legacy presentation evolve 20legacy 20code evolve 20legacy 20code 20rachel 20cheng 20and 20michael 20vanloon 20cppcon pptx rachel cheng michael vanloon executor long story presentation executor 20for 20c 20a 20long 20story executor 20for 20c 20a 20long 20story 20detlef 20vollmann 20cppcon pdf detlef vollmann for_each_argument explain expand presentation for_each_argument 20explained 20and 20expanded for_each_argument 20explained 20and 20expanded 20vittorio 20romeo 20cppcon vittorio romeo material presentation for_each_argument 20explained 20and 20expanded functional parallel stochastic presentation 20functional 20to 20parallel 20stochastic 20modelling 20in 20c 20functional 20to 20parallel 20stochastic 20modelling 20in 20c 20kevin 20carpenter 20cppcon pptx kevin carpenter functional new proper usage presentation functional 20what 20new 20and 20proper 20usage functional 20what 20new 20and 20proper 20usage 20stephan 20t 20lavavej 20cppcon pdf stephan lavavej pdf presentation functional 20what 20new 20and 20proper 20usage functional 20what 20new 20and 20proper 20usage 20stephan 20t 20lavavej 20cppcon pdf pptx presentation functional 20what 20new 20and 20proper 20usage functional 20what 20new 20and 20proper 20usage 20stephan 20t 20lavavej 20cppcon pptx functional design explain presentation functional 20design 20explained functional 20design 20explained 20david 20sankel 20cppcon pdf david sankel functional program functors monad presentation functional 20programming 20functors 20and 20monads functional 20programming 20functors 20and 20monads 20micha 20dominiak 20cppcon pdf micha dominiak haskell design pattern presentation haskell 20design 20pattern haskell 20design 20pattern 20sherri 20shulman 20cppcon pdf sherri shulman stop worry love metaprogramming presentation 20i 20learned 20to 20stop 20worrying 20and 20love 20metaprogramming 20i 20learned 20to 20stop 20worrying 20and 20love 20metaprogramming 20edouard 20alligand 20cppcon pdf edouard alligand make structure wait free read presentation 20to 20make 20your 20data 20structures 20wait free 20for 20reads 20to 20make 20your 20data 20structures 20wait free 20for 20reads 20pedro 20ramalhete 20cppcon pdf pedro ramalhete intro object presentation intro 20to 20c 20object 20model intro 20to 20c 20object 20model 20richard 20powell 20cppcon pdf richard powell key presentation intro 20to 20c 20object 20model intro 20to 20c 20object 20model 20richard 20powell 20cppcon key pdf presentation intro 20to 20c 20object 20model intro 20to 20c 20object 20model 20richard 20powell 20cppcon pdf material presentation intro 20to 20c 20object 20model large scale module presentation large 20scale 20c 20with 20modules large 20scale 20c 20with 20modules 20gabriel 20dos 20reis 20cppcon pdf gabriel real lesson sustainability presentation lesson 20in 20sustainability lesson 20in 20sustainability 20titus 20winters 20cppcon pdf titus winter live lock free deadlock presentation live 20lock free 20or 20deadlock live 20lock free 20or 20deadlock 20fedor 20pikus 20cppcon pdf fedor pikus memory debug presentation memory 20and 20c 20debugging 20at 20ea memory 20and 20c 20debugging 20at 20ea 20scott 20wardle 20cppcon pptx scott wardle number crunch presentation 20and 20number 20crunching 20with 20c 20and 20number 20crunching 20with 20c 20matt 20p 20dziubinski 20cppcon pdf matt dziubinski null pointer compile presentation null 20pointers 20shouldn 20compile null 20pointers 20shouldn 20compile 20jacob 20potter 20cppcon pdf jacob potter organizational leadership modern presentation organizational 20leadership 20with 20modern 20c organizational 20leadership 20with 20modern 20c 20kevin 20kostrzewa 20and 20john 20wyman 20cppcon pdf kevin kostrzewa john wyman panel discussion technical specification presentation panel 20discussion 20on 20c 20technical 20specifications panel 20discussion 20on 20c 20technical 20specifications 20marshall 20clow 20gor 20nishanov 20gabriel 20dos 20reis 20michael 20wong 20michael 20caisse 20beman 20dawes 20and 20eric 20niebler 20cppcon pdf marshall clow gor nishanov gabriel real michael wong michael caisse beman dawes eric niebler parallelize stl presentation parallelize 20the 20c 20stl parallelize 20the 20c 20stl 20grant 20mercer 20and 20daniel 20bourgeois 20cppcon pdf grant mercer daniel bourgeois program effort presentation program 20with 20less 20effort 20in 20c program 20with 20less 20effort 20in 20c 20sylvain 20jubertie 20cppcon pdf sylvain jubertie prune error message template presentation prune 20error 20messages 20from 20your 20c 20template 20code prune 20error 20messages 20from 20your 20c 20template 20code 20roland 20bock 20cppcon pdf roland bock modern user interface presentation 20modern 20user 20interfaces 20for 20c 20modern 20user 20interfaces 20for 20c 20milian 20wolff 20cppcon pdf milian wolff rcpp seamless integration presentation rcpp 20seamless 20r 20and 20c 20integration rcpp 20seamless 20r 20and 20c 20integration 20matt 20p 20dziubinski 20cppcon pdf matt dziubinski reactive stream process rx4dds presentation reactive 20stream 20processing 20rx4dds reactive 20stream 20processing 20rx4dds 20sumant 20tambe 20cppcon pdf sumant tambe reflection technique presentation reflection 20techniques 20in 20c reflection 20techniques 20in 20c 20paul 20fultz 20ii 20cppcon pdf paul fultz simple extensible pattern match presentation simple 20extensible 20pattern 20matching 20with 20c simple 20extensible 20pattern 20matching 20with 20c 20john 20bandela 20cppcon pdf john bandela static analysis presentation static 20analysis 20and 20c static 20analysis 20and 20c 20neil 20macintosh 20cppcon pdf neil macintosh stl algorithm action presentation stl 20algorithms 20in 20action stl 20algorithms 20in 20action 20michael 20vanloon 20cppcon pdf michael vanloon pdf presentation stl 20algorithms 20in 20action stl 20algorithms 20in 20action 20michael 20vanloon 20cppcon pdf pptx presentation stl 20algorithms 20in 20action stl 20algorithms 20in 20action 20michael 20vanloon 20cppcon pptx stop teach presentation stop 20teaching 20c stop 20teaching 20c 20kate 20gregory 20cppcon pptx kate gregory string_view presentation string_view string_view 20marshall 20clow 20cppcon pdf marshall clow test battle net presentation test 20battle net test 20battle net 20ben 20deane 20cppcon pdf ben deane birth study group presentation 20birth 20of 20study 20group 20birth 20of 20study 20group 20nicolas 20guillemot 20sean 20middleditch 20michael 20wong 20cppcon pdf nicolas guillemot sean middleditch michael wong importance const presentation 20importance 20of 20being 20const 20importance 20of 20being 20const 20richard 20powell 20cppcon pdf richard powell key presentation 20importance 20of 20being 20const 20importance 20of 20being 20const 20richard 20powell 20cppcon key pdf presentation 20importance 20of 20being 20const 20importance 20of 20being 20const 20richard 20powell 20cppcon pdf sad story memory_order_consume presentation 20sad 20story 20of 20memory_order_consume 20sad 20story 20of 20memory_order_consume 20paul 20e 20mckenney 20cppcon pdf paul mckenney time program fundamental presentation time 20programming 20fundamentals time 20programming 20fundamentals 20greg 20miller 20cppcon pdf greg miller transactional memory practice presentation transactional 20memory 20in 20practice transactional 20memory 20in 20practice 20brett 20hall 20cppcon pdf brett hall transducer clojure presentation transducer 20from 20clojure 20to 20c transducer 20from 20clojure 20to 20c 20juan 20pedro 20bolivar 20puente 20cppcon juan pedro bolivar puente material presentation transducer 20from 20clojure 20to 20c type trait presentation type 20traits type 20traits 20marshall 20clow 20cppcon pdf marshall clow unexceptional exception presentation unexceptional 20exceptions unexceptional 20exceptions 20fedor 20pikus 20cppcon pdf fedor pikus value semantics presentation value 20semantics value 20semantics 20john 20lakos 20cppcon pdf john lakos variable template compile time computation presentation variable 20templates 20c 20compile time 20computation variable 20templates 20c 20compile time 20computation 20peter 20sommerlad 20cppcon pdf peter sommerlad variadic template guideline compile time computation presentation variadic 20templates 20guidelines 20examples 20and 20compile time 20computation variadic 20templates 20guidelines 20examples 20and 20compile time 20computation 20peter 20sommerlad 20cppcon pdf peter sommerlad open source care presentation 20is 20open 20source 20and 20why 20should 20you 20care 20is 20open 20source 20and 20why 20should 20you 20care 20kevin 20p 20fleming 20cppcon zip kevin fleming new vs2015 presentation 20new 20in 20vs2015 20new 20in 20vs2015 20steve 20carroll 20cppcon pdf steve carroll work steal presentation work 20stealing work 20stealing 20pablo 20halpern 20cppcon pptx pablo halpern write great library easy step presentation write 20great 20libraries 20in 20easy 20steps write 20great 20libraries 20in 20easy 20steps 20zach 20laine 20cppcon zach laine write presentation write 20my 20own 20cms write 20my 20own 20cms 20jens 20weller 20cppcon pdf jens well tutorial overview encryption tutorial 20overview 20on 20encryption 20in 20c 20overview 20on 20encryption 20in 20c 20jens 20weller 20cppcon pdf jens well boost unit correct tutorial boost 20units 20for 20correct 20code boost 20units 20for 20correct 20code 20robert 20ramey 20cppcon zip robert ramey cppreference com community wiki tutorial cppreference com 20the 20community 20wiki cppreference com 20the 20community 20wiki 20sergey 20zubkov 20cppcon pdf sergey zubkov crazy easy script chaiscript tutorial crazy 20easy 20scripting 20with 20chaiscript crazy 20easy 20scripting 20with 20chaiscript 20jason 20turner 20cppcon pdf jason turner effective class property tutorial effective 20c 20implementation 20of 20class 20properties effective 20c 20implementation 20of 20class 20properties 20viktor 20korsun 20cppcon pdf viktor korsun expression template tutorial expression 20templates 20what 20why 20when 20were expression 20templates 20what 20why 20when 20were 20joel 20falcou 20cppcon pdf joel falcou material tutorial expression 20templates 20what 20why 20when 20were future scratch tutorial future 20from 20scratch future 20from 20scratch 20arthur 20o dwyer 20cppcon pdf arthur dwyer component base entity system modern tutorial 20of 20a 20component base 20entity 20system 20in 20modern 20c 20of 20a 20component base 20entity 20system 20in 20modern 20c 20vittorio 20romeo 20cppcon pdf vittorio romeo material tutorial 20of 20a 20component base 20entity 20system 20in 20modern 20c integrate generator edsl boost spirit tutorial integrate 20generators 20edsl 20for 20boost spirit 20x3 integrate 20generators 20edsl 20for 20boost spirit 20x3 20felipe 20magno 20de 20almeida 20cppcon pdf felipe magno almeida kiss template tutorial kiss 20templates kiss 20templates 20roland 20bock 20cppcon pdf roland bock lambda first principle tutorial lambda 20from 20first 20principles lambda 20from 20first 20principles 20arthur 20o dwyer 20cppcon pdf arthur dwyer race filesystem tutorial race 20the 20filesystem race 20the 20filesystem 20niall 20douglas 20cppcon pdf niall douglas secure program tutorial secure 20c 20programming secure 20c 20programming 20gwendolyn 20hunt 20cppcon pdf gwendolyn hunt current state free static analysis tutorial 20current 20state 20of 20free 20static 20analysis 20current 20state 20of 20free 20static 20analysis 20jason 20turner 20cppcon pdf jason turner spirit write parser tutorial 20spirit 20x3 20to 20write 20parsers 20spirit 20x3 20to 20write 20parsers 20michael 20caisse 20cppcon pdf michael caisse demo become gdb power user demo become 20a 20gdb 20power 20user become 20a 20gdb 20power 20user 20greg 20law 20cppcon pdf greg law javascript websockets demo 20c 20javascript 20and 20websockets 20c 20javascript 20and 20websockets 20alex 20fabijanic 20cppcon pdf alex fabijanic visualize template instantiation templator demo demo visualize 20template 20instantiations 20templator 20demo visualize 20template 20instantiations 20templator 20demo 20peter 20sommerlad 20cppcon pdf peter sommerlad lightning talk lunch session different way boost serialization lightning 20talks 20and 20lunch 20sessions 20different 20way 20to 20use 20boost 20serialization 20different 20way 20to 20use 20boost 20serialization 20jens 20weller 20cppcon pdf jens well algorithmic differentiation extremum estimation lightning 20talks 20and 20lunch 20sessions algorithmic 20differentiation 20c 20and 20extremum 20estimation algorithmic 20differentiation 20c 20and 20extremum 20estimation 20matt 20p 20dziubinski 20cppcon pdf matt dziubinski smart pointer lightning 20talks 20and 20lunch 20sessions 20smart 20about 20pointers 20smart 20about 20pointers 20michael 20vanloon 20cppcon pdf michael vanloon devirtualization clang lightning 20talks 20and 20lunch 20sessions 20devirtualization 20in 20clang 20devirtualization 20in 20clang 20piotr 20padlewski 20cppcon pdf piotr padlewski telecom industry lightning 20talks 20and 20lunch 20sessions 20in 20the 20telecom 20industry 20in 20the 20telecom 20industry 20yani 20miguel 20cppcon pdf yani miguel request curl people lightning 20talks 20and 20lunch 20sessions 20requests 20curl 20for 20people 20requests 20curl 20for 20people 20huu 20nguyen 20cppcon pdf huu nguyen wat lightning 20talks 20and 20lunch 20sessions 20wat 20wat 20piotr 20padlewski 20cppcon pdf piotr padlewski completion improve future monad lightning 20talks 20and 20lunch 20sessions completion 20improving 20the 20future 20with 20monads completion 20improving 20the 20future 20with 20monads 20travis 20gockel 20cppcon pdf travis gockel emacs ide lightning 20talks 20and 20lunch 20sessions emacs 20as 20a 20c 20ide emacs 20as 20a 20c 20ide 20atila 20neves 20cppcon pdf atila neve extreme type safety opaque typedefs lightning 20talks 20and 20lunch 20sessions extreme 20type 20safety 20with 20opaque 20typedefs extreme 20type 20safety 20with 20opaque 20typedefs 20kyle 20markley 20cppcon pdf kyle markley give minute change view gdb lightning 20talks 20and 20lunch 20sessions give 20me 20minutes 20and 20i 20change 20your 20view 20of 20gdb give 20me 20minutes 20and 20i 20change 20your 20view 20of 20gdb 20greg 20law 20cppcon pdf greg law heaptrack heap memory profiler lightning 20talks 20and 20lunch 20sessions heaptrack 20a 20heap 20memory 20profiler heaptrack 20a 20heap 20memory 20profiler 20milian 20wolff 20cppcon pdf milian wolff infix lightning 20talks 20and 20lunch 20sessions 20to 20infix 20your 20code 20to 20infix 20your 20code 20pascal 20bormann 20cppcon pdf pascal bormann integrate tinymce3 lightning 20talks 20and 20lunch 20sessions integrate 20tinymce3 20into 20qt integrate 20tinymce3 20into 20qt 20jens 20weller 20cppcon pdf jens well introduce brigand lightning 20talks 20and 20lunch 20sessions introduce 20brigand introduce 20brigand 20edouard 20alligand 20and 20joel 20falcou 20cppcon pdf edouard alligand joel falcou practical move semantics lightning 20talks 20and 20lunch 20sessions practical 20move 20semantics practical 20move 20semantics 20titus 20winters 20cppcon pdf titus winter rapidcheck property base test lightning 20talks 20and 20lunch 20sessions rapidcheck 20property 20based 20testing 20for 20c rapidcheck 20property 20based 20testing 20for 20c 20emil 20eriksson 20cppcon pdf emil eriksson danger style cast lightning 20talks 20and 20lunch 20sessions 20dangers 20of 20c 20style 20casts 20dangers 20of 20c 20style 20casts 20joshua 20gerrard 20cppcon pdf joshua gerrard odp lightning 20talks 20and 20lunch 20sessions 20dangers 20of 20c 20style 20casts 20dangers 20of 20c 20style 20casts 20joshua 20gerrard 20cppcon odp pdf lightning 20talks 20and 20lunch 20sessions 20dangers 20of 20c 20style 20casts 20dangers 20of 20c 20style 20casts 20joshua 20gerrard 20cppcon pdf trait mainstream lightning 20talks 20and 20lunch 20sessions trait 20go 20mainstream trait 20go 20mainstream 20leor 20zolman 20cppcon pdf leor zolman unbounded lock free concurrent queue lightning 20talks 20and 20lunch 20sessions unbounded 20lock free 20concurrent 20queue unbounded 20lock free 20concurrent 20queue 20jaedyn 20draper 20cppcon pdf jaedyn draper
C C++;https://github.com/nanomsg/nanomsg;welcome nanomsg mit linux window nanomsg library simple high performance several scalability protocol scalability protocol light weight message protocol solve number common message pattern request reply publish subscribe surveyor respondent forth protocol variety transport tcp unix socket even websocket information check prerequisite window window vista new window support microsoft visual studio include new mingw w64 specifically mingw old microsoft compiler support test mingw w64 ymmv cmake new available path cmake posix linux macos unix ansi compiler support c89 posix pthreads present modern posix system bsd socket support tcp unix domain socket cmake new available path cmake documentation optional asciidoctor available asciidoctor present doc format leave readable ascii also available line quick instruction step minimum step get default debug cmake many thing include set additional variable set static generation project solution different development environment please check cmake website various option cmake support posix assume project directory cmake suitable compiler require support tool like linkers archivers path mkdir cmake cmake ctest sudo cmake target sudo ldconfig linux window assume command powershell window appropriate variable setup support visual studio typically vcvarsall bat similar appropriate argument also assume project directory cmake cmake config debug ctest debug cmake config debug target may administrator account alternatively nanomsg dependency manager git clone vcpkg bootstrap vcpkg bat vcpkg integrate vcpkg nanomsg nanomsg port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository static library normally dynamic library dll default want static library lib configure pas dnn_static_lib first cmake command posix posix system need link library normally application system might mean lnsl lsocket window also need define nn_static_lib compilation environment program library require way window change symbol name depend whether symbol export dll lib window also need link ws2_32 mswsock advapi32 library nanomsg depend support library consider sustain mode mean new feature development end bug fix make strictly necessary severe issue new development occur project offer protocol api compatibility project please consider nng new project please see support detail resource website source documentation bug tracker mail list gitter chat irc chatroom nanomsg
C C++;https://github.com/chadaustin/sajson;sajson sajson extremely high performance place dom style json parser write originally sajson mean single allocation json support dynamic allocation feature sajson parse input document contiguous ast structure unlike high performance json parser ast efficiently queryable object lookup key array index sajson require input buff null terminate parse straight disk mmap buff sajson situ modify input string parse string value convert utf note sajson pay slight performance penalty require null termination input string sajson situ many case require copy input anyway therefore could convince add option require null termination feature single header simply drop sajson project exception rtti longjmp stack usage document overflow stack number type bit double small size suitable emscripten fuzzed american fuzzy lop ast structure parse ast size compute word per string word per bite integer value bit per float point value word per array number element word per object number member value null true false encode tag bit cost otherwise allocation mode single original sajson allocation mode allocate word per byte input document fast mode ast parse stack guarantee fit allocation check require runtime bite platform sajson allocate byte per input character bite platform sajson allocate byte per input character parse mode handle allocate bad case buff size input document dynamic dynamic allocation mode grow parse stack ast buff need slow single allocation need check memory every time append occasionally buff need reallocate copy bound bound allocation mode take fix size memory buff parse stack ast parse stack ast fit give buff parse succeed allocation mode allow sajson without library make allocation performance sajson performance excellent frequently benchmark fast rapidjson detail available documentation api documentation available downside miss feature sajson support utf utf however never see wild suspect may case aggressive overspecification json specification indicate utf valid encode either way transcode utf first support bite integer something want ask little technical reason support people avoid bite integer json javascript read require ownership semantics awkward express
C C++;https://github.com/tayllan/awesome-algorithms;awesome algorithm curated list awesome place practice algorithm inspire awesome awesome library want contribute please read contribution awesome algorithm awesome algorithm website website online course online course book book cheat sheet cheat sheet github library github library online judge online judge tool tool website website classic algorithm visual guide graph traversal interactive visualization graph traversal algorithm work structure tutorial dsa practice codechef algorithm dozen animate algorithm also create algorithm dense article algorithm visualization big cheat big complexity common algorithm computer science practice problem recommender include codeforces codechef spoj algorithm structure especially popular field competitive program structure visualize behavior structure play operation geek lot lot well explain implement algorithm path visual representation algorithm ida breadth first search best first search others describe path point easy follow tutorial structure algorithm along suitable rosetta program chrestomathy site aim present many algorithm structure different program language sort nice simple animation sort algorithm short cod discussion stoimen web algorithm nicely explain sound sound sort audibilization visualization sort algorithm visualise structure algorithm animation wikipedia course wikipedia tutorial structure algorithm javascript interactive visual explanation math algorithm motivate computer game online course free high quality course online algorithm divide conquer sort search randomize primary topic asymptotic big notation sort search divide conquer randomize algorithm algorithm graph search short path primary topic structure graph primitive application algorithm greedy algorithm minimum span tree dynamic primary topic greedy algorithm dynamic program algorithm short path revisit complete problem primary topic short path completeness mean algorithm designer strategy cop computationally intractable problem algorithm part course cover essential information every serious programmer need know algorithm structure part cover elementary structure sort search algorithm algorithm part part focus graph string process algorithm khan academy algorithm course minister tomas cormen devin balkcom mit well explain algorithm mit similar previous different algorithm mit easy well explain introduction algorithm udacity intro base algorithm course algorithm beginner algorithm course fun illustration base book grokking algorithm yogibearian youtube lot well explain video various computer science subject _account terminate due violation youtube policy book highly regard book algorithm algorithm structure algorithm pretty straightforward problem explain java good practice visualization free online resource algorithm structure classical algorithm structure implement explain javascript algorithm george heineman classic computer science problem great book present dozen cod challenge range simple task cluster mean structure algorithm make great way implement algorithm specific programmable task structure basic concept usage structure elementary awesome book algorithm structure grokking illustrate book algorithm practical introduction essential real world algorithm beginner introduction algorithm reader background advance mathematics computer science swift algorithm practical guide concept theory algorithm design easy read full real world art computer book structure interpretation computer algorithm structure different great way introduce algorithm structure work algorithmic accessible illustration algorithm form puzzle program experience require algorithm analysis sedgewick flajolet introduction analysis advance complete survey intend mathematically mature reader mcconnell analysis accessible brief book algorithm analysis implement include vrajitoru knight practical analysis accessible brief book algorithm analysis implement include randomize algorithm motwani raghavan randomize standard classic book mitzenmacher upfal probability compute randomization probabilistic technique algorithm standard text probability method application randomize algorithm cheat sheet technical interview cheat princeton cheat clrs rice university course useful reddit algo open source collection algorithmic card github library classic algorithm wide variety program language java javascript lua objective php ruby swift language agnostic online judge online judge practice online online judge problem archive acm icpc live problem previous acm icpc regionals world final aizu online japanese online judge algo research base algorithmic problem japanese program contest website baekjoon online korean online judge problem support language hold online contest ioi practice contest problem monthly online contest codeforces program contest web platform practice program tackle next tech interview real world contest online website house support solve algorithm many language vary difficulty decent website algorithm challenge beginner advance level support popular language like javascript ruby firecode machine algorithm along curated real world interview question solution vibrant social community learner get ready next cod interview cod website problem base math structure various algorithm also conduct cod competition hackerearth practice algorithmic problem challenge participate hire challenge feature algorithm functional program online judge chinese english problem solve practice recruitment challenge site romanian online judge algorithmic problem practice prepare interview online judge problem archive korean online judge half english problem learneroo algorithm practice algorithm solve challenge online algorithm prepare interview pku chinese online judge mathematical problem solve algorithm pencil depend much already know platform bioinformatics program problem solve sharecode online judge contest host lot algorithmic problem archive practice introductory course algorithmic problem step step debugger russia problem lot problem real world money worthy problem graphic design science development bangladeshi online judge hold online contest regularly brazilian online judge many problem grow online contest problem previous acm icpc regionals world final others compete land cod job top company blog awesome list blog mainly competitive program refer new topic algorithm awesome list competitive awesome blog resource list book algorithm algorithm good blog petr mitrichev mainly java sport informative blog start sport program algorithm get deep knowledge algorithm think right direction algorithm tutorial tanuj excellent blog tanuj khattar cover tutorial interest structure along problem solve tool tool help algorithm interactive test drive cod challenge algorithm structure relate awesome list freely available lecture note mathematics theoretical computer interdisciplinary mathematics computer science distinguish emphasis mathematical technique rigour license sake copyleft license creative common work license creative common attribution international
C C++;https://github.com/pinam45/dynamic_bitset;dynamic_bitset window window visual simple useful library header dynamic bitset requirement dynamic bitset need late compliant compiler cmake want dynamic bitset subproject need cmake late usage sample possible output bitset1 bitset2 common bit test optional dependency optionally optimize bit count operation header available __has_include dynamic_bitset_no_libpopcnt define integration header library easy way integrate sul dynamic_bitset class project copy sul include sul folder project source optionally also copy libpopcnt default available cmake integration cmake want dynamic bitset subproject clone repository add git submodule sub folder project cmakelists txt add define dynamic_bitset target alias target sul dynamic_bitset add folder contain dynamic_bitset hpp project header folder cmakelists txt add simple project repository git submodule extlibs folder could cmakelists txt similar pull git submodule libpopcnt extlibs extlibs set dynamic bitset cmake option dynamicbitset_use_libpopcnt dynamicbitset_use_libpopcnt_submodule default value folder contain libpopcnt also add header path libpopcnt cmake option description dynamicbitset_no_namespace put dynamic_bitset class global namespace instead sul namespace recommend dynamicbitset_use_libpopcnt enable libpopcnt bit count operation dynamicbitset_use_libpopcnt_submodule enable add libpopcnt submodule include path disable project already include libpopcnt dynamicbitset_use_std_bitops enable available binary operation bite header dynamicbitset_use_compiler_builtin enable available compiler builtins binary operation disable possible dynamicbitset_build_example enable dynamic_bitset dynamicbitset_build_tests enable test dynamic_bitset dynamicbitset_build_docs enable documentation dynamic_bitset dynamicbitset_format_target enable generate format target dynamic_bitset dynamicbitset_headers_target_ide enable generate target header ide dynamic_bitset default value option default value top level project default value subdirectory dynamicbitset_no_namespace dynamicbitset_use_libpopcnt dynamicbitset_use_libpopcnt_submodule dynamicbitset_use_std_bitops dynamicbitset_use_compiler_builtin dynamicbitset_build_example dynamicbitset_build_tests dynamicbitset_build_docs dynamicbitset_format_target dynamicbitset_headers_target_ide test documentation late version documentation available online test documentation git submodules require forget pull submodules repository recursive git clone recursive already clone repository git submodule update init recursive project cmake define option dynamicbitset_build_tests dynamicbitset_build_example dynamicbitset_build_docs enable generation test documentation target option enable default project master project include another cmakelists txt add_subdirectory generate documentation require late target dynamic_bitset_docs test dynamic_bitset_tests target launch test ctest see ctest information linux common way mkdir cmake cmake cmake cmake ctest output failure window batch available configure visual studio project ide ide folder license img align right dynamic_bitset license mit copyright maxime permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
C C++;https://github.com/ibireme/yyjson;yyjson high performance json library write ansi feature fast read write gigabyte per second json modern cpu portable compliance ansi c89 standard strict compliance rfc standard safe complete json form number format utf validation accuracy read write int64 uint64 double number accurately restriction support unlimited json level u0000 non null terminate string extendable option allow comment trail comma nan inf custom memory allocator developer friendly easy integrate limitation array object store like link list access element index key slow iterator duplicate key allow object order key preserve json parse immutable mutable copy require modification performance benchmark project simdjson new demand api fast json field know compile time benchmark project check dom api new benchmark add late aws ec2 amd epyc 7r32 gcc ec2_chart doc image perf_reader_ec2 svg twitter json parse stringify yyjson insitu yyjson simdjson sajson rapidjson insitu rapidjson utf8 cjson jansson iphone apple a14 clang a14_chart doc image perf_reader_a14 svg twitter json parse stringify yyjson insitu yyjson simdjson sajson rapidjson insitu rapidjson utf8 cjson jansson benchmark report interactive chart update platform cpu compiler report intel nuc 8i5 core 8259u msvc window intel nuc 8i5 core 8259u clang ubuntu intel nuc 8i5 core 8259u gcc ubuntu aws ec2 c5a large amd epyc 7r32 gcc ubuntu aws ec2 t4g medium graviton2 arm64 gcc ubuntu apple iphone pro a14 arm64 clang good performance yyjson prefer modern processor high instruction level parallelism excellent branch predictor low penalty misalign memory access modern compiler good optimizer test manually copy yyjson yyjson project start since yyjson ansi compatible configuration need typically yyjson test follow compiler gcc clang msvc icc tcc find compile error please report yyjson feature enable default trim add compile flag disable json writer reduce binary size need serialization disable comment support improve parse performance see compile detail cmake clone repository create directory static library static library test support cmake option dbuild_shared_libs share library instead static library dyyjson_build_tests test dyyjson_disable_reader disable json reader need dyyjson_disable_writer disable json writer need dyyjson_disable_fast_fp_conv disable fast float point number conversion dyyjson_disable_non_standard disable non standard json support compile time sample read json string write json string read json option write json option documentation api sample todo add documentation page add github workflow codecov add test valgrind sanitizer support json pointer query value document add fuzzer add raw type json reader writer add stream api json reader writer add documentation performance optimize performance bite processor license project release mit license
C C++;https://github.com/papers-we-love/papers-we-love;love pwl community around read discus academic computer science repository serve directory best community find bring together document scatter across web also visit love info due always host see scroll emoji next title directory readme provide link location enjoy perhaps stop local chapter meetup join vibrant discussion around also discus pwl event content repository anything relate pwl join paperswelove irc channel freenode chapter official chapter let know interest start city buenos columbus iowa los new york rio san san seoul washington meetups follow conduct code_of_conduct past presentation check audio format channel info look pull request relate add good organization link repos point good place find minute bell system technical journal best award computer google choose subcategory microsoft functional program book mit artificial intelligence lab mit distribute system read arxiv service engineer read read distribute gradual type security science research robert harper carnegie mellon lobste tag morning please check link blog book exchange worth good read read read read blogpost novel handy resource help get start read academic advice read academic read understand scientific read refreshingly reward realm research application idea around love love open favourite terminal scrape markdown link pdfs respective directory see readme script readme option contribute guideline please take look copyright name love logo organization copyright ownership love ltd right reserve start chapter please review ask logo
C C++;https://github.com/ArthurSonzogni/FTXUI;ftxui functional terminal user interface simple library terminal base user interface feature functional style inspire simple elegant syntax opinion keyboard mouse navigation support fullwidth support animation demo demo support draw dependency cross platform linux macos main target webassembly window thank contributor documentation tutorial documentation multiple package cmake prefer vcpkg pkgbuild conan good practise documentation test fuzzers performance test automate automate package etc documentation starter operate system expect cross platform support test webassembly linux macos window cpp vbox hbox text leave border text middle border flex text right border gauge border bash leave middle right short gallery dom module define hierarchical set element element manage layout responsive terminal dimension declare layout element arrange together horizontally hbox vertically vbox inside grid gridbox wrap along direction flexbox element become flexible flex decorator hbox vbox filler gridbox flexbox also style element decorate function bold dim invert underline blink color bgcolor ftxui support pipe operator mean decorator1 decorator2 element element decorator1 decorator2 color ftxui support every color palette color border separator decorator border element separator subdivide text paragraph simple piece text represent text content support text wrap follow space follow function provide paragraph ezgif com gif maker table class easily style table canvas draw make canvas braille block simple character simple complex ezgif com gif maker component ftxui component need want produce dynamic reactive user input define set ftxui component component react event keyboard mouse resize render element see previous section prebuilt component declare gallery multiple component radiobox checkbox input toggle slider menu resizablesplit ezgif dropdown youtube video gif tab ezgif com gif maker ezgif com gif maker project ftxui feel free add project x86 cpu architecture pigeon several game ftxui make game jam play web minesweeper play web grand drag host external package highly recommend cmake fetchcontent depend ftxui way specify commit would like depend follow package create arch linux contributor
C C++;https://github.com/facebook/folly;folly facebook open source library folly folly acronymed loosely facebook open source library library component design practicality efficiency mind folly contain variety core library component extensively facebook particular often dependency facebook open source effort place project share complement oppose compete offer boost course std fact embark define component something need either available meet need performance profile endeavor remove thing folly std boost obsoletes performance concern permeate much folly sometimes lead design idiosyncratic would otherwise see packedsyncptr smalllocks good performance large scale unify theme folly check intro video explain like logical design folly collection relatively independent component simple symbol restriction internal dependency mean give folly module may folly component symbol define top level namespace folly except course macro macro name all_uppercase prefix folly_ namespace folly define internal namespaces internal detail user depend symbol namespaces folly experimental directory well designation connote primarily feel api may change heavily time typically still heavy well test physical design top level folly classic stutter scheme folly folly boost others first directory serve installation root library possible versioning folly second distinguish library include include directory structure flat mimic namespace structure elaborate directory hierarchy possible change future version subdirectory experimental contain inside folly possibly facebook consider stable enough client folly experimental may break update folly folly folly test subdirectory include unittests component usually name componentxyztest cpp componentxyz folly folly doc directory contain documentation folly fairly flat structure best way see look header top level folly also check doc folder folly doc documentation start overview folly doc overview folly publish github note folly provide abi compatibility guarantee commit commit generally recommend folly static library folly support gcc clang msvc linux x86 x86 arm macos window x86 cmake test platform minimum aim support macos linux late ubuntu lts release new getdeps script many meta tool necessary dependency first invoke cmake etc folly help ensure relevant version dependent library take account version instal locally system write need python3 late path work linux macos window setting folly cmake hold getdeps manifest fbcode_builder manifest folly edit locally desire dependency linux macos homebrew instal system dependency save clone repo git clone dependency folly sudo fbcode_builder getdeps system deps recursive would like see package instal fbcode_builder getdeps system deps dry recursive platform linux without system dependency getdeps mostly step dependency getdeps version boost compile support googletest require folly test script necessary dependency first invoke cmake etc folly help ensure relevant version dependent library take account version instal locally system getdeps currently require path getdeps invoke cmake etc clone repo git clone folly system dependency available python3 fbcode_builder getdeps allow system package put output scratch area instal folly lib libfolly library also specify scratch path argument control location scratch directory find default scratch location log python3 fbcode_builder getdeps show inst dir also dir prefix argument provide fine grain control installation directory however give folly provide compatibility guarantee commit generally recommend instal library temporary location point project temporary location rather instal folly traditional system installation directory cmake cmake_prefix_path variable allow cmake find folly temporary installation directory project want invoke cmake iterate helpful run_cmake script output scratch directory find scratch directory log python3 fbcode_builder getdeps show dir test default getdeps test folly folly python3 fbcode_builder getdeps allow system package test bat wrapper linux macos window bat script instead wrapper around getdeps cmake directly want let getdeps invoke cmake default test disable part cmake target test specify dbuild_tests cmake configure time want invoke cmake iterate getdeps helpful run_cmake script output scratch path directory find scratch directory log python3 fbcode_builder getdeps show dir test ctests also work dir python3 fbcode_builder getdeps show dir ctest find dependency non default location boost gtest dependency instal non default location cmake_include_path cmake_library_path variable make cmake look also look header library non standard location also search directory alt include path1 alt include path2 header directory alt lib path1 alt lib path2 library invoke cmake follow ubuntu lts centos stream fedora getdeps approach test ubuntu lts occasionally distros find set system package quite right choose distro specify distro version specific override dependency manifest could probably make work recent ubuntu debian fedora redhat derive distribution time write dec break gcc base system lang_badge_test need badge functionality work around comment cmakelists txt unfortunately fbthrift need window vcpkg note many test disable folly window see log cmake configure step look windows_disabled cmakelists txt say getdeps work window test prefer try vcpkg folly available release may via vcpkg folly x64 window may also vcpkg folly x64 window head main macos getdeps work macos test however prefer try macos package manager homebrew folly available formula release may via brew folly may also folly bootstrap osx homebrew main create directory _build top level macports require package macports double conversion folly parameter list
C C++;https://github.com/uriparser/uriparser;appveyor uriparser uriparser strictly rfc compliant uri parse handle library write c89 ansi uriparser cross platform fast support char wchar_t license new bsd uriparser please check exist cmake project compilation compilation standalone gnu make linux available cmake option default
C C++;https://github.com/leethomason/tinyxml2;tinyxml tinyxml tinyxml simple small efficient xml parser easily integrate program master host github online html version doc relate page tab html doc brief tinyxml parse xml document document object dom read modify save xml stand extensible markup language general purpose human machine readable markup language describe arbitrary random format create store application replace xml parser everything different way access interact xml tinyxml document object dom mean xml parse object browse manipulate write disk another output stream also construct xml document scratch object write disk another output stream even tinyxml stream xml programmatically without create document first tinyxml design easy fast header cpp simply add project xmltest cpp get start tinyxml release zlib license open source commercial detail license top every source tinyxml attempt flexible parser truly correct compliant xml output tinyxml compile reasonably compliant system rely exception rtti stl tinyxml parse dtds document type definition xsls extensible stylesheet language parser much fully feature generally big difficult work browser complete xml need tinyxml parser tinyxml tinyxml tinyxml long focus development well test instead tinyxml tinyxml similar api tinyxml rich test case parser completely write make appropriate game memory fast far memory allocation tinyxml requirement support stl feature page tinyxml utf exclusively interpret xml xml assume utf filename load save pas unchanged underlie memory xmldocument object like stack new delete heap however sub node document xmlelement xmltext etc create call appropriate xmldocument newelement newtext etc method although pointer object still document document delete nod contain white space whitespace preservation default microsoft excellent article white space default tinyxml preserve white space hopefully sane way almost compliant spec tinyxml completely different much similar collapse first step newlines carriage return line feed normalize line fee character require xml spec white space text preserve hello world lead space hello double space comma preserve line feed preserve hello world however white space element preserve although strictly compliant track report inter element space awkward normally valuable tinyxml see xml whitespace collapse application preferable collapse whitespace collapse whitespace give html like behavior sometimes suitable hand type document tinyxml support whitespace parameter xmldocument constructor default preserve whitespace describe however may also collapse_whitespace remove lead trail whitespace convert newlines line feed space character collapse number space character single space character note currently performance impact collapse_whitespace essentially cause xml parse twice error report tinyxml report line number error xml document parse correctly addition nod element declaration text comment etc attribute line number record parse allow application perform additional validation parse xml document application implement dtd validation report line number information error message entity tinyxml recognize pre define character entity mean special character namely recognize xml document read translate utf equivalent instance text xml far away value far away query xmltext object write back xml stream ampersand additionally character specify unicode point syntax non break space character call numeric character reference numeric character reference special entity read write regular point output correct entity syntax preserve print print directly convenience function xmldocument doc doc savefile foo xml xmlprinter class xmlprinter printer doc print printer print memory print memory support xmlprinter xmlprinter printer doc print printer printer cstr const char xml print without xmldocument load xml parser useful however sometimes save get way often set stream construct dom overhead printer support stream case follow print trivially simple xml without ever create xml document xmlprinter printer printer openelement foo printer pushattribute foo bar printer closeelement load parse xml load parse xml xmldocument doc doc loadfile dream xml lookup information lookup information xmldocument doc doc loadfile dream xml structure xml element play root element firstchildelement document element title child root play element text child title element navigate title convenience function dangerous lack error check const char title doc firstchildelement play firstchildelement title gettext printf name play title text another node tinyxml general way get xmltext xmltext textnode doc firstchildelement play firstchildelement title firstchild totext title textnode value printf name play title instal tinyxml tinyxml2 cpp tinyxml2 additionally test xmltest cpp generally speak intent simply include tinyxml2 cpp tinyxml2 project source also cmake include cmake general tinyxml additional system costly maintain tend bite rot visual studio project include largely developer convenience intend integrate well tinyxml vcpkg tinyxml dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg tinyxml2 tinyxml port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository versioning tinyxml semantic versioning release tag github note major version probably change fairly rapidly api change fairly common license tinyxml release zlib license software provide without express imply warranty event author hold liable damage arise software permission grant anyone software purpose include commercial application alter redistribute freely subject follow restriction origin software must misrepresent must claim write original software software product acknowledgment product documentation would appreciate require alter source version must plainly mark must misrepresent original software notice may remove alter source distribution contributor thank much everyone send suggestion bug idea encouragement help make project fun original tinyxml many contributor deserve thank shape successful library extra thank yves berquin andrew ellerton key contributor tinyxml grow effort lee thomason original author tinyxml tinyxml tinyxml improve many contributor thank john mackay tinyxml logo
C C++;https://github.com/HSA-Libraries/Bolt;bolt template library optimize heterogeneous compute bolt design provide high performance library common algorithm scan reduce transform sort bolt interface standard template library stl developer familiar stl recognize many bolt apis customization technique primary goal bolt make easy developer utilize inherent performance power efficiency benefit heterogeneous compute interface easy comprehensive documentation library routine memory management control interface host device share compare write equivalent functionality opencl find bolt require significantly line developer effort bolt design provide standard way develop application execute either regular cpu available opencl capable accelerate compute unit single path link prerequisite window visual studio onwards vs2012 amp test bite window window blue cmake tbb multicore cpu path update see bolt tbb app sdk onwards note user instal visual studio visual studio latter update sp1 linux gcc test opensuse rhel 64bit rhel 32bit ubuntu cmake tbb multicore cpu path update see bolt tbb app sdk onwards note bolt pre binary linux gcc version application else user bolt source gcc high catalyst package late catalyst driver contain recent opencl runtime recommend catalyst package late beta driver high support note support support device amd apu family amd radeon graphic series series series series series series amd radeon graphic series series series amd radeon graphic series series series series series series 6xxxm series amd radeon 2xx graphic 2xx series 2xx series 2xx series amd firepro professional graphic w9100 compile binary window package zip package bolt may host amd developer central website simple show bolt sort random array integer include include include int main generate random host size_t length std vector length std generate begin end rand sort best device platform bolt sort begin end return familiar programmer standard template library difference include bolt sort bolt namespace sort call bolt developer need new device specific program leverage power performance advantage heterogeneous compute include include include include int main size_t length create device_vector initialize bolt device_vector int boltinput length calculate inclusive_scan device_vector bolt inclusive_scan boltinput begin boltinput end boltinput begin create std vector initialize std vector stdinput length calculate inclusive_scan std vector bolt inclusive_scan stdinput begin stdinput end stdinput begin return show bolt simplify management heterogeneous memory creation destruction device resident memory abstract inside bolt device_vector class provide interface familiar nearly programmer bolt provide algorithm take either normal std vector bolt device_vector class allow user control memory transfer host device optimize performance copyright license information advance micro device inc right reserve license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license
C C++;https://github.com/ithewei/libhv;english readme libhv like libevent libev libuv libhv provide event loop non block timer simple api rich protocol feature cross platform linux window macos solaris android high performance eventloop timer idle custom tcp udp client server proxy tcp support heartbeat upstream unpack multithread safe write close etc rudp support with_kcp ssl support via with_openssl with_gnutls with_mbedtls http client server support grpc http static service indexof service sync async api handler http support restful uri router keep alive chunk etc websocket client server mqtt client see makefile cmake vcpkg xmake get start get_started tcp tcp server version tcp_echo_server tcp_echo_server version evpp tcpserver_test cpp evpp tcpserver_test cpp tcp client version version evpp tcpclient_test cpp evpp tcpclient_test cpp http server see golang gin style client see request style axios style version hloop_test hloop_test tcp_echo_server tcp_echo_server tcp_chat_server tcp_chat_server tcp_proxy_server tcp_proxy_server udp_echo_server udp_echo_server udp_proxy_server udp_proxy_server socks5_proxy_server socks5_proxy_server tinyproxyd tinyproxyd jsonrpc jsonrpc mqtt mqtt multi thread multi acceptor process multi thread multi acceptor process multi thread multi acceptor thread multi thread multi acceptor thread multi thread acceptor multi worker multi thread acceptor multi worker version evpp eventloop_test cpp evpp eventloop_test cpp evpp eventloopthread_test cpp evpp eventloopthread_test cpp evpp eventloopthreadpool_test cpp evpp eventloopthreadpool_test cpp evpp tcpserver_test cpp evpp tcpserver_test cpp evpp tcpclient_test cpp evpp tcpclient_test cpp evpp udpserver_test cpp evpp udpserver_test cpp evpp udpclient_test cpp evpp udpclient_test cpp websocket_server_test cpp websocket_server_test cpp websocket_client_test cpp websocket_client_test cpp protorpc protorpc simulate well know command line tool nmap nmap wrk wrk cpp curl curl cpp wget wget cpp consul consul benchmark tcp benchmark throughput benchmark libhv port nginx port libhv nginx png html libhv nginx png test find github
C C++;https://github.com/rui314/8cc;8cc compiler note 8cc long active project successor 8cc compiler program language intend support c11 language feature keep small simple possible compiler able compile see language compiler able compile 8cc source carefully write concise easy read possible source become good study material various technique compiler may find lexer preprocessor parser already useful source process stage optimize compiler generate usually slow gcc plan implement reasonable level optimization future 8cc support x86 linux plan make portable fix know miscompilations implement optimization pas ubuntu development platform work x86 linux distribution though note high expectation compiler try compile program compiler good chance see compile error miscompilations basically man project spend month spare time far make make 8cc come unit test test give test argument make test follow target 8cc time verify stage1 compiler stage2 stage2 stage3 compare stage2 stage3 binary byte byte verify reach fix point make fulltest author rui ueyama link compiler development besides popular book compiler dragon book find follow book document useful develop compiler note standard draft version close ratify version practically standard document lcc retargetable compiler design tcc tiny compiler c99 standard final draft c11 standard final draft dave prosser preprocessing algorithm x86 abi
C C++;https://github.com/ddemidov/vexcl;vexcl documentation coverity scan vexcl vector expression template library opencl cuda create ease gpgpu development vexcl strive reduce amount boilerplate need develop gpgpu application library provide convenient intuitive notation vector arithmetic reduction sparse matrix vector product etc multi device even multi platform computation support source library distribute permissive mit license see vexcl documentation
C C++;https://github.com/svaarala/duktape;duktape test warn master branch undergo incompatible change duktape track duktape follow maintenance branch introduction embeddable javascript engine focus portability compact footprint duktape easy integrate project add duktape duktape duk_config duktape api call ecmascript function vice versa main feature embeddable portable compact ecmascript compliant semantics update es2015 partial support ecmascript ecmascript post es5 feature es2015 typedarray node buff bind whatwg encode api live standard debugger regular expression engine unicode support minimal platform dependency combine reference count mark sweep garbage collection finalization custom feature like coroutines property virtualization subset ecmascript es2015 proxy object bytecode dump load cache compile function distributable include optional log framework commonjs base module load cbor bind etc liberal mit license see license txt see package end user documentation end user also available repo binary unpack form git tag fun support duktape wiki user community stack overflow tag bug feature request github general discussion irc duktape chat freenode net repository repository intend duktape developer contain duktape internals test case internal documentation source duktape org web site etc get start end user embed duktape application package source distributables available see basic distributable src directory contain duk_config configuration header amalgamate source duktape default configuration necessary tool configure create header source customize configuration option see enable fastint support linux tar xvfj duktape tar duktape src custom tool configure source directory src input output directory src custom config metadata config dduk_use_fastint src custom contain duktape duktape duk_config duktape dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg duktape duktape port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository also clone repository make modification source distributable linux macos window util dist need yaml bind get start modify rebuild distributable intend change duktape internals want rebuild source distributable linux macos window linux often package pip node sudo apt get yaml util dist macos node pip pyyaml util dist window org add path node pip pyyaml util dist source distributable directory dist platform specific note see get start development linux development stuff website test case base makefile support linux x86 docker image simplify development setup also document need package also support linux x86 docker image take long time make docker image equivalent make dist source inside container make docker dist source work duktape contain disposable master snapshot make docker master work duktape mount current directory allow edit test etc interactive container make docker wdmount non native image may need limit support develop macos via docker apple make docker image arm64 docker_arch arm64 make docker wdmount branch policy master branch active development even though pull request test merge master may still break time time development new major release start master also get api incompatible change without warn reason generally depend master branch project release tag release maintenance branch maintenance maintenance instead pull request relate branch frequently rebased fork pull request may open test discussion release tag like release match release distributables stable release complete maintenance branch backporting fix feature maintenance release documentation change master maintenance release maintenance create release maintenance release maintenance branch also create major release master move active development next major release maintenance create release last plan release development api incompatible change start master release make maintenance versioning duktape semantic official release duktape repo official release follow strict semver mainly duk_version need compromise value strictly semver conform duktape track late ecmascript specification version compliance fix make minor version even technically backwards compatible see detail report bug see security critical github issue anything lead segfault tag security contribute see copyright license see duktape part duktape documentation copyright license
C C++;https://github.com/cesanta/slre;slre super light regular expression library documentation api reference contribution submit contribution sign cesanta send github pull request license slre release commercial gnu gpl open source license commercial project project become commercialise gplv2 license dictate need either open source fully purchase commercial license cesanta offer full royalty free commercial license without gpl restriction need require custom license would happy work solution contact price
C C++;https://github.com/libtom/libtomcrypt;libtomcrypt previously git repository contain doc crypt pdf detail documentation change available tarball appropriate version page project status master coverage develop coverage coverity scan api abi change check submit patch please branch develop want submit patch patch integration fast test documentation include please update makefiles separate commit update simply updatemakes script something big submit feel free contact beforehand give write access repo open base repo easy follow rebase merge approach even rebase ourself review pull request review make sure line exist base please look get idea approach branch please aware branch besides _master_ _develop_ __can__ __will be__ force push rebased remove want rely _unstable_ branch create fork repository make sure nothing break configuration option default library entire feature set besides katja depend need optimal way numerous configuration option available want trim functionality library please look src header tomcrypt_custom available configuration option follow list small part available often require configuration switch flag behavior ltc_no_test remove algorithm self test library ltc_no_file remove api function require pre define type mostly useful embed target gmp_desc enable mpi provider ltm_desc enable mpi provider tfm_desc enable mpi provider use_gmp gmp mpi provider binary use_ltm libtommath mpi provider binary use_tfm tomsfastmath mpi provider binary possible library mpi provider parallel choose startup time math library please aware tomsfastmath limitation fix max size mpi support time require binary library library several makefile provide please choose fit best makefile case makefile static library gnu make require makefile share share static library gnu make require makefile unix unusual unix platform gnu make makefile mingw usage mingw compiler window makefile msvc usage msvc compiler window libtomcrypt_vs2008 sln visualstudio project window make target makefile provide several target project exclude follow list claim complete resp available across makefile variant target application empty target none give library library library hashsum hashsum binary similar support hash algorithm include library ltcrypt ltcrypt binary implement something similar size size binary print internal size invocation constant constant binary print internal constant invocation openssl enc openssl enc binary compatible openssl test test binary algorithm self test extend test time time binary measure time algorithm mode bin hashsum all_test test hashsum ltcrypt small tv_gen size constant doc developer documentation doc crypt pdf library header install_bins binary create bin target install_docs documentation create doc target install_test test app create test target install_all everything library bin doc test uninstall uninstalls library header also library break configuration therefore default also necessary artifact instal also look installation section want library static library make want library share library make makefile share libtommath instal system want static library test binary self test make cflags duse_ltm dltm_desc extralibs ltommath test tomsfastmath instal system want share library binary make makefile share cflags duse_tfm dtfm_desc extralibs ltfm demo gmp libtommath tomsfastmath instal system want static library time binary measure time gmp make cflags duse_gmp dgmp_desc dltm_desc dtfm_desc extralibs lgmp time libtommath non standard location make cflags duse_ltm dltm_desc opt devel ltm extralibs opt devel ltm libtommath installation exist several _install_ make target describe table target support standard way gnu freebsd modify installation path via follow set variable destdir prefix libpath incpath datapath binpath entire set variable support makefile makefile share makefile unix case makefiles check variable support want static library default path make want share library special path path make makefile share prefix opt special path look developer documentation gnu freebsd get detail explanation variable gnu freebsd
C C++;https://github.com/gabime/spdlog;spdlog fast header log library copy header copy source tree compiler favorite package manager ubuntu apt get libspdlog dev homebrew brew spdlog freebsd usr port devel spdlog make clean fedora yum spdlog gentoo emerge dev libs spdlog arch linux yaourt spdlog git vcpkg vcpkg spdlog platform linux freebsd solaris aix window cygwin mac osx clang android feature fast performance primary goal see benchmark benchmark header copy feature rich call style usage excellent library optional printf syntax support asynchronous mode optional format conditional log multi single thread logger various log target rotate log daily log console log color support syslog window debugger easily extendable custom log target implement single function sink include spdlog sink sink interface severity base filter threshold level modify runtime well compile time benchmark benchmark bench compare popular log library ubuntu bite intel cpu 40ghz synchronous mode time need log line synchronous mode second best thread boost log glog easylogging spdlog 169s 066s 975s 392s 180s 032s 857s 773s 981s 139s 512s 587s asynchronous mode time need log line asynchronous mode time take put async queue second best thread g2log async logger spdlog async mode 850s 39s 943s 416s 959s 413s usage documentation documentation find page
C C++;https://github.com/bombela/backward-cpp;backward cpp backward beautiful stack trace pretty printer bore see default trace doc rude png backward spice pretty stackstrace doc pretty png much say course able display snippet source accessible else see trace source line snippet prefix pipe frame inline next frame see trace function you_shall_not_pass inlined function read2 do_test compiler installation backward hpp backward header library instal backward easy simply drop copy backward hpp along source project also git submodule really way best fit environment long include backward hpp backward cpp want backward automatically print stack trace common fatal error segfault abort handle exception simply add copy backward cpp project forget tell system backward cpp trivial anyway simply copy convenience note library user must define backward signalhandling folly init argc argv configuration dependency integration cmake cmake want configuration ability save trouble easily integrate backward depend obtain library subdirectory case subdirectory contain whole repository backward git submodules case modify cmake_module_path case backward instal subdirectory notice equivalent approach add_subdirectory however cmake import mechanism installation regular package manager case obtain backward package manager package currently available library unwind stack linux macos backtrace back trace walk stack follow library unwind unwind come libgcc equivalent inside clang unwind stacktrace accurate possibly since runtine gcc clang stack unwind exception normally libgcc already link program default libunwind libunwind apt get binutils dev equivalent libunwind provide case accurate stacktrace know decode signal handler frame let edit context register unwind allow stack trace bad function reference best make sure libunwind late add unw_init_local2 support handle signal frame cmake warn configure libunwind version support signal frame macos clang provide libunwind api compatible library part environment third party library necessary compile debug info need compile project generation debug symbol enable usually clang note level optimization modern debug information encode like dwarf take space binary load memory debugger backward make worry impact generation least gnu linux x86 _64 know miss debug information stack trace lack detail source library read debug info backward support pretty print stack trace gnu linux macos window compile fine platform anything pull request welcome also default get really basic stack trace base backtrace_symbols api default trace doc nice png need dependency get ultimate stack trace library currently support difference easy pick poison libbfd apt get binutils dev equivalent forget link lib clang lbfd ldl library require dynamic load provide library hence also link ldl define follow every inclusion backward hpp forget update backward cpp well define backward_has_bfd libdw apt get libdw dev equivalent forget link lib inform backward define backward_has_dw course simply add define dbackward_has_ linkage detail system even auto detect library instal apt get libdwarf dev equivalent forget link lib inform backward define backward_has_dwarf several alternative libdwarf libelf api compatible possible although test replace develop backward bold _libelf_ michael tire _libdwarf_ david libelf libelf libdwarf freebsd elf tool project course simply add define dbackward_has_ linkage detail system even auto detect library instal set get nice stack trace like begin document api want limit default offer backward cpp want take random stack trace whatever reason pretty print way love decide send buddy internet appreciate simplicity backward api stacktrace stacktrace class let take snapshot current stack like public method traceresolver traceresolver heavy lift intend transform simple trace address fully detail resolvedtrace filename source line number inlined function like public method snippetfactory snippetfactory simple helper class automatically load cache source order extract snippet printer simple way pretty print stack trace terminal automatically resolve trace set option signalhandling simple helper class register common signal callback segfault hardware exception handle exception etc backward cpp simply like create object register different signal hook destroy object anything expose method trace object keep memory footprint load stacktrace low side hierarchy trace object minimal trace resolvedtrace simple trace resolve trace resolvedtrace contain maximum detail location trace source note field might set contact copyright francois xavier bourlet copyright google inc right reserve mit license disclaimer although project google inc google support affiliate project
C C++;https://github.com/martinmoene/ring-span-lite;ring span lite circular buff view late try try godbolt content usage usage nutshell nutshell dependency dependency installation installation synopsis synopsis report work report work test test ring_span ring span note reference note reference appendix appendix usage compile nutshell ring span lite single header library represent circular buff view container library aim provide like ring_span late initial inspire reference arthur dwyer intention let interface ring_span follow unfold standard library also include header provide ring buff feature property ring span lite ease installation single header freedom dependency standard library limitation ring span lite license ring span lite distribute boost software license license txt dependency ring span lite dependency standard installation ring span lite single header library put ring_span hpp include include folder directly project source tree somewhere reachable project synopsis content type namespace nonstd type namespace nonstd interface ring span lite interface ring span lite non member function ring span lite non member function ring span lite configuration macro configuration macro type namespace nonstd purpose type note circular buff view template class class popper default_popper bool capacityispowerof2 false class ring_span see note ignore element template class class null_popper return element template class class default_popper return element replace original template class class copy_popper note capacityispowerof2 extension nsrs_config_strict_p0059 capacityispowerof2 true method normalize_ optimize bitwise instead modulo division interface ring span lite class ring_span kind type method note various type type ring_span popper capacityispowerof2 size_type value type value_type pointer reference const_reference iterator type iterator const_iterator reverse_iterator const_reverse_iterator construction ring_span begin end popper popper popper noexcept create empty span ofdistance begin end capacity ring_span begin end first size_type size popper popper popper noexcept create partially fill span ofdistance begin end capacity size element ring_span ring_span default ring_span operator ring_span default ring_span ring_span const implicitly delete ring_span operator ring_span const implicitly delete ring_span ring_span const declare private ring_span operator ring_span const declare private iteration begin noexcept iterator begin noexcept const_iterator cbegin noexcept const_iterator end noexcept iterator end noexcept const_iterator cend noexcept const_iterator reverse iter rbegin noexcept reverse_iterator rbegin noexcept const_reverse_iterator crbegin noexcept const_reverse_iterator rend noexcept reverse_iterator rend noexcept const_reverse_iterator crend noexcept const_reverse_iterator observation empty noexcept true empty full noexcept true full size noexcept current number element capacity noexcept maximum number element element access front noexcept reference element front front noexcept const_reference element front back noexcept reference back element back back noexcept const_reference element back operator size_type idx noexcept reference element specify index operator size_type idx noexcept const_reference element specify index elem extraction pop_front popper return_type p0059 auto pop_back popper return_type elem insertion push_back value_type const value noexcept void restrain push_back value_type const value void unrestrained push_back value_type value noexcept void restrain emplace_back args args noexcept void restrain push_front value_type const value noexcept void restrain push_front value_type const value void unrestrained push_front value_type value noexcept void restrain emplace_front args args noexcept void restrain swap swap ring_span noexcept void class ring_iterator kind type method note various type type ring_span popper difference_type value type value_type pointer reference category iterator_category construction ring_iterator default ring_iterator conversion operator ring_iterator true const noexcept const ring_iterator element access operator const noexcept reference increment operator noexcept ring_iterator operator int noexcept ring_iterator decrement operator noexcept ring_iterator operator int noexcept ring_iterator addition operator int noexcept ring_iterator operator int noexcept ring_iterator difference operator ring_iterator const difference_type note comparison operator ring_iterator const const noexcept bool note operator ring_iterator const const noexcept bool note operator ring_iterator const const noexcept bool note operator ring_iterator const const noexcept bool note operator ring_iterator const const noexcept bool note operator ring_iterator const const noexcept bool note note accept different const ness non member function ring span lite kind function note swap swap ring_span ring_span void iterator offset operator ring_iterator int noexcept ring_iterator operator ring_iterator int noexcept ring_iterator legenda proposal proposal proposal sg14 class ring kind type method note circular buff template class container bool capacityispowerof2 false class ring see note various type size_type value type value_type reference const_reference iterator type iterator const_iterator reverse_iterator const_reverse_iterator construction ring size_type size create empty ring capacity size iteration begin noexcept iterator begin noexcept const_iterator cbegin noexcept const_iterator end noexcept iterator end noexcept const_iterator cend noexcept const_iterator reverse iter rbegin noexcept reverse_iterator rbegin noexcept const_reverse_iterator crbegin noexcept const_reverse_iterator rend noexcept reverse_iterator rend noexcept const_reverse_iterator crend noexcept const_reverse_iterator observation empty noexcept true empty full noexcept true full size noexcept current number element capacity noexcept maximum number element element access front noexcept reference element front front noexcept const_reference element front back noexcept reference back element back back noexcept const_reference element back element access front noexcept reference element front front noexcept const_reference element front back noexcept reference back element back back noexcept const_reference element back operator size_type idx noexcept reference element specify index operator size_type idx noexcept const_reference element specify index elem extraction pop_front popper return_type pop_back popper return_type elem insertion push_back value_type const value noexcept void restrain push_back value_type const value void unrestrained push_back value_type value noexcept void restrain emplace_back args args noexcept void restrain push_front value_type const value noexcept void restrain push_front value_type const value void unrestrained push_front value_type value noexcept void restrain emplace_front args args noexcept void restrain swap swap ring_span noexcept void note capacityispowerof2 extension nsrs_config_strict_p0059 capacityispowerof2 true method normalize_ optimize bitwise instead modulo division class default_popper popper configuration macro tweak header compiler support ring span lite support tweak mechanism provide tweak header nonstd ring_span tweak hpp folder include search path tweak header provide definition document like define nsrs_cplusplus 201103l standard selection macro dnsrs _cplusplus 199711l define macro override auto detection support standard compiler set __cpluplus macro correctly select std ring_span nonstd ring_span default ring_span lite std ring_span available let via namespace nonstd however override default explicitly request std ring_span ring_span lite nonstd ring_span nonstd ring_span via follow macro dnsrs _config _select _ring _span nsrs_ring_span_default define nsrs_ring_span_std select std ring_span nonstd ring_span define nsrs_ring_span_nonstd select nonstd ring_span nonstd ring_span default undefined effect define nsrs_ring_span_default disable extension dnsrs _config _strict _p0059 define omit behaviour present proposal default undefined effect enable popper empty base class optimization dnsrs _config _popper _empty _base _class popper often stateless prevent take space attribute no_unique_address available another way prevent take space make popper base class class ring_span occur macro nsrs_config_popper_empty_base_class define extension proposal p0059 disable extension via macro nsrs_config_strict_p0059 also disable extension default undefined effect enable compilation error dnsrs _config _confirms _compilation _errors define include test compile time error default undefined effect report work table mention compiler version ring span lite report work compiler version window clang llvm gcc visual visual studio gnu linux clang llvm gcc test test need version late instal path suitable compiler report work test include test folder test buck test cmake follow step assume ring span lite source clone directory name ring span lite create directory output particular architecture ring span lite win x86 vc10 ring span lite win x86 vc10 win x86 vc10 configure cmake compiler choice cmake help list cmake visual studio see optional control configuration follow option dring_span_lite_colourise_test colour pas fail default test suite debug configuration alternatively release cmake config debug test suite ctest debug test pas indicate platform support ready ring span lite see table support type function feature ring span bjrn reese circular jan wilmans base bjorn fahller note reference reference p0059 proposal add ring span standard reference guy arthur arthur reference arthur dwyer reference type metadata may phillip johnston create circular buff may jan gaspar boost circular appendix content applet compile time information ring span lite test specification applet applet demonstrate specific case available via tag applet compile time information version ring span lite available via tag version follow tag available information compiler standard library compiler stdc stdlanguage stdlibrary ring span lite test specification note test case assert tag assert assert include command line like test assert partial test name click expand
C C++;https://github.com/zserge/jsmn;jsmn jsmn pronounce like jasmine minimalistic json parser easily integrate resource limit embed project find information json format json org library source available web page information jsmn find philosophy json parser offer bunch function load json parse extract value name jsmn prove check correctness every json packet allocate temporary object store parse json field often overkill json format extremely simple complicate jsmn design robust work fine even erroneous fast parse fly portable superfluous dependency non standard extension course simplicity key feature simple style simple algorithm simple integration project feature compatible c89 dependency even libc highly portable test x86 amd64 arm avr line extremely small footprint api contain function dynamic memory allocation incremental single pas parse library cover unit test design rudimentary jsmn object token let consider json string name jack age hold follow token object name jack age whole object string name jack age key value number jsmn token hold point token boundary json string instead jsmn create token like object string string string number every jsmn token type indicate type correspond json token jsmn support follow token type object container key value pair foo bar array sequence value string quote sequence char foo primitive number boolean true false null besides start end position jsmn token complex type like array object also contain number child item easily follow object hierarchy approach provide enough information parse json make possible copy technique usage jsmn include since jsmn single header header library complex case might need define additional macro define jsmn_static hide jsmn api symbol make static also want include jsmn multiple avoid duplication symbol may define jsmn_header macro api token type describe jsmntype_t typedef enum jsmn_undefined jsmn_object jsmn_array jsmn_string jsmn_primitive jsmntype_t note unlike json type primitive token divide number booleans null easily tell type first character boolean null number token object jsmntok_t type typedef struct jsmntype_t type token type int start token start position int end token end position int size number child nest token jsmntok_t note string token point first character open quote previous symbol final quote make simplify string extraction json job jsmn_parser object initialize new parser jsmn_parser parser jsmntok_t token jsmn_init parser pointer json string token array token available number token available jsmn_parse parser strlen token create parser try parse json token string non negative return value jsmn_parse number token actually parser pas null instead token array would store parse instead function return number token need parse give string useful know yet many token allocate something wrong get error error jsmn_error_inval bad token json string corrupt jsmn_error_nomem enough token json string large jsmn_error_part json string short expect json get jsmn_error_nomem allocate token call jsmn_parse read json stream periodically call jsmn_parse check return value jsmn_error_part get error reach end json info software distribute mit feel free integrate commercial product
C C++;https://github.com/udp/json-parser;low footprint json parser write portable c89 sometimes refer ansi bsd license dependency drop project never recur allocate memory need simple api operator sugar _want serialize check instal makefile produce libjsonparser static dynamic library however _not_ require json parser source json json happy system already place api type field json_value json_object see object length object value name object value value json_array see array length array value json_integer see integer json_double see dbl json_string see string ptr string length json_boolean see boolean json_null compile time option unless otherwise specify compile definition must provide compile json compile source include json json_track_source store source location line column number inside json_value useful application level error report json_int_t default json_int_t define long c89 int_fast64_t otherwise msvc define __int64 regardless language standard support optionally may define json_int_t prefer type name integer type parse json document must sign integer type support unsigned type specify raw primitive type without sign unsigned typdef json_int_max calculate otherwise must provide definition json_int_max high positive integer value represent json_int_t usage djson_int_t short djson_int_t sign char djson_int_max djson_int_t long long djson_int_t __int128 runtime option enable style line block comment amount space allocate end json_value order give application space add metadata custom allocator routine null default malloc free user_data pointer forward json_settings allow application context pas change version utf byte order mark skip present allow cross compilation honor host give wkz maximum size error buff expose header gcc warn static const fix batrick optional support style line block comment add jin name_length field add object value possible retrieve source line column number parse json_value json_track_source enable application may extend json_value value_extra set ambiguate pow call case overload pow fcartegnie fix null pointer reference non exist array close root value present
C C++;https://github.com/bkaradzic/bgfx;cross platform render library license join chat github discord appveyor cross platform graphic api agnostic bring engine framework style render library support render backends direct3d direct3d direct3d gnm license ps4 developer search devnet forum source metal opengl opengl opengl opengl vulkan webgl webgl webgpu dawn experimental support platform android arm x86 mips freebsd iphone ipad appletv linux mips creator ci20 osx playstation raspberrypi uwp universal window xbox wasm emscripten window vista support compiler clang gcc vs2017 language api beef api language api bind language api language api haskell language api lightweight java game library lua language api nim language api pascal language api language api bind language api bind rust language api bind swift language api zig language api airmech airmech free play futuristic action real time strategy video game develop publish carbon game cmftstudio cmftstudio cubemap filter tool crown crown general purpose drive game engine write scratch minimalistic orient design philosophy mind crown offroad legend dogbyte game indie mobile developer studio focus race game torque6 torque mit license engine loosely base torque2d neither torque2d torque3d 6th derivative original torque engine kepler orbit keplerorbits tool calculate position celestial body orbital element web cetech cetech drive game engine toolbox inspire bitsquid stingray engine cetech ioquake3 renderer ioquake3 write bgfx support multiple render apis ioq3 renderer bgfx digital logic simulator game sandbox mame mame multiple arcade machine emulator try mame blackshift blackshift grid base space theme action puzzle game afraid complexity think chip challenge crack real time polygonal light shade linearly transform cosine real time polygonal light shade linearly transform cosine eric heitz jonathan dupuy stephen hill david neubelt acm siggraph dead venture dead venture new drive gun game help handful survival reach safe military base far island regoth open source reimplementation zengine game gothic gothic browser demo ethereal engine etherealengine game engine wysiwyg editor etherealengine rally rally top rally game career mode multiplayer time challenge track creator renderer vector graphic renderer bgfx base idea nanovg imdrawlist dear imgui zombie safari please open world offroad drive game explore massive landscape complete challenge smash zombie find secret location unlock upgrade car weapon smith winston smith winston exploration twin stick shooter ps4 xboxone arrive late smith winston feature massively destructable voxel world rapid twin stick combat physic puzzle metroid style discovery football manager football manager football management simulation video game develop sport interactive publish sega wonderworlds wonderworlds place play user create level story make extensive game tool share whomever want mud purpose app prototyping library focus towards live graphical apps game talk tom pool sling match puzzle game mobile device gplayengine gplayengine cross platform game engine create game base gameplay engine road sandbox road drive simulator coal burnout multiplayer pvp rhythm game talk tom many mini game mobile device neoaxis engine versatile project development environment xatlas mesh parameterization library hero hammerwatch hero hammerwatch rogue lite action adventure game set universe hammerwatch encounter endless horde enemy trap puzzle secret lot loot battle way procedurally generate level reach top forsake spire babylon native cross platform native application power babylon javascript framework babylon nira instantly load view asset device need web browser siggraph project nira instant interactive real time access multi gigabyte size asset openblack open source reimplementation game black white cluster cluster shade physically base render bgfx render library nimby rail nimby rail management design sandbox game railway real world nimby nimby minecraft ffnx next generation driver final fantasy vii final fantasy viii native steam release support shadow gang shadow gang arcade style ninja action game shadow growtopia growtopia free play sandbox mmo game almost endless possibility world creation customization fun friend enjoy item challenge event galaxy trucker digital tabletop spaceship real time turn base mode survive space adventure opponent multiplayer achievement solo campaign galaxy age card tabletop deep strategy game device lead civilization pyramid space flight challenge achievement skilled online multiplayer codenames best party game rival spymaster know secret identity agent teammate know agent codenames simple explain easy understand challenge gameplay peakfinder peakfinder show name mountain peak panorama display peak mount everest little hill around corner ember sword ember sword free play mmorpg directly browser develop publish bright star studio road unleash road unleash sandbox drive game nintendo switch see vehicle bet hop pilot big rig helicopter boat airplane even sand dun freeze plain mountain climb conquer guild war guild war online role play game fast pace action combat rich detail universe story awe inspire landscape explore challenge player player mode subscription fee griftlands griftlands roguelike deck game role play story element science fiction set develop publish klei entertainment license bsd copyright branimir karadzic redistribution source binary form without modification permit provide follow condition meet redistribution source must retain copyright notice list condition follow disclaimer redistribution binary form must reproduce copyright notice list condition follow disclaimer documentation material provide distribution software provide copyright holder contributor express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall copyright holder contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage
C C++;https://github.com/David-Haim/concurrencpp;concurrencpp concurrency library late license concurrencpp task library allow developer write highly concurrent application easily safely task executor coroutines concurrencpp application break big procedure need process asynchronously small task concurrently work operative manner achieve want concurrencpp also allow application write parallel algorithm easily parallel coroutines concurrencpp main advantage able write modern concurrency without rely low level concurrency primitive like lock condition variable able write highly concurrent parallel application scale automatically hardware resource need able write non block synchronous like easily coroutines co_await keyword reduce possibility race condition race deadlock high level object synchronization concurrencpp provide various type commonly executor complete coroutine integration application extend library implement provide executor table content concurrencpp overview concurrencpp overview task task concurrencpp coroutines concurrencpp coroutines executor executor executor api executor api executor type executor type executor executor thread_pool_executor api thread_pool_executor api manual_executor api manual_executor api object object type type api api lazy_result type lazy_result type lazy_result api lazy_result api parallel coroutines parallel coroutines parallel fibonacci parallel fibonacci promise promise result_promise api result_promise api result_promise marshal asynchronous result_promise share object share object shared_result api shared_result api shared_result shared_result termination concurrencpp termination concurrencpp resume executor resume executor utility function utility function make_ready_result make_ready_result function make_exceptional_result make_exceptional_result function when_all when_all function when_any when_any function resume_on resume_on function timer timer queue timer timer queue timer_queue api timer_queue api timer api timer api regular timer regular timer oneshot timer oneshot timer oneshot timer oneshot timer delay object delay object delay object delay object generator generator generator api generator api runtime object runtime object runtime api runtime api create user define executor create user define executor task object task object task api task api user define executor user define executor support platform tool support platform tool instal test instal test concurrencpp overview concurrencpp task centric library task asynchronous operation task offer high level abstraction concurrent traditional thread centric approach task chain together mean task pas asynchronous another task parameter intermediate value another ongoing task task allow application utilize available hardware resource good scale much raw thread since task suspend wait another task produce without block underlie thread task bring much productivity developer allow focus business logic low level concept like thread management inter thread synchronization task specify action execute executor worker object specify execute task executor spare application manage thread pool task queue executor also decouple concept away application provide unify api create schedule task task communicate object object asynchronous pipe pas asynchronous task another ongoing task await resolve non block manner concept task executor associate block concurrencpp executor task communicate send object task executor object work together symbiotically produce concurrent fast clean concurrencpp around raii concept order task executor application create runtime instance begin main function runtime acquire exist executor register new user define executor executor create schedule task might return object marshal asynchronous another task act consumer runtime destroy iterate every store executor call shutdown method every executor exit gracefully unscheduled task destroy attempt create new task throw exception hello world program concurrencpp basic create runtime object acquire thread executor runtime submit pas lambda give callable lambda return void hence executor return object marshal asynchronous back caller main call get block main thread become ready exception throw get return void exception throw get throw asynchronously thread_executor launch new thread execution give lambda implicitly co_return void task finish main unblock concurrent even number count start program create runtime object create vector fill random number acquire thread_pool_executor runtime call count_even count_even coroutine spawn task co_await finish inside max_concurrency_level return maximum amount worker executor support threadpool executor case number worker calculate number core partition array match number worker send every chunk process task asynchronously worker count many even number chunk contain co_return count_even sum every pull count co_await final co_return main thread block call get unblock total count return main print number even number program terminate gracefully task every big complex operation break small chainable step task asynchronous operation implement computational step task anywhere help executor task create regular callables functors lambda task mostly coroutines allow smooth suspension resumption concurrencpp task concept represent concurrencpp task class although task concept central concurrenpp application rarely create manipulate task object task object create schedule runtime external help concurrencpp coroutines concurrencpp allow application produce consume coroutines main way create task concurrencpp support eager lazy task eager task start moment invoke type execution recommend application need fire asynchronous action consume late fire consume late completely ignore asynchronous fire forget eager task return null_result return type tell coroutine marshal return value throw exception fire consume late null_result return type tell coroutine drop ignore fire forget eager coroutines start synchronously caller thread kind coroutines call regular coroutines concurrencpp eager coroutines also start parallel inside give executor kind coroutines call parallel coroutines lazy task hand start co_await type task recommend task mean consume immediately create task lazy task defer bite optimize case immediate consumption need special thread synchronization order marshal asynchronous back consumer compiler might also optimize away memory allocation need form underlie coroutine promise possible fire lazy task execute something else meanwhile fire lazy callee coroutine necessarily mean suspension caller coroutine caller coroutine resume lazy callee coroutine complete lazy task return lazy_result lazy task convert eager task call lazy_result method lazy task inline return object monitor newly start task developer unsure type encourage lazy convert regular eager need function return lazy_result null_result contain least co_await co_return body function concurrencpp coroutine every valid concurrencpp coroutine valid task count even count_even coroutine first spawn count_even inside threadpool executor spawn child task create regular callables eventually join co_await executor concurrencpp executor object able schedule task executor simplify work manage resource thread thread pool task queue decouple away application executor provide unify way schedule execute task since extend concurrencpp executor executor api executor type mention concurrencpp provide commonly executor executor type thread pool executor general purpose executor maintain pool thread thread pool executor suitable short cpu bind task block application encourage executor default executor non block task concurrencpp thread pool provide dynamic thread injection dynamic work balance background executor threadpool executor large pool thread suitable launch short block task like query important note consume executor return call submit bulk_submit important switch execution resume_on cpu bind executor order prevent cpu bind task process inside background_executor thread executor executor launch enqueued task new thread execution thread reuse executor good long task like object work loop long block operation worker thread executor single thread executor maintain single task queue suitable application want dedicate thread execute many relate task manual executor executor execute coroutines application execute previously enqueued task manually invoke execution method derivable executor base class user define executor although inherit directly concurrencpp executor possible derivable_executor crtp pattern provide optimization opportunity compiler inline executor mainly override behavior executor enqueuing task equivalent invoke inline executor bare mechanism executor encapsulate enqueue method method enqueues task execution overload overload receive single task object argument another receive span task object second overload enqueue batch task allow good schedule heuristic decrease contention application rely enqueue alone concurrencpp executor provide api schedule user callables convert task object behind scene application request executor return object marshal asynchronous provide callable call executor submit executor bulk_submit submit get callable return object executor bulk_submit get span callables return vector object similar way submit work many case application interest asynchronous value exception case application executor post executor bulk_post schedule callable span callables execute also tell task drop return value throw exception marshal asynchronous fast marshal way know status ongoing task post bulk_post submit bulk_submit enqueue behind scene underlie schedule mechanism thread_pool_executor api aside post submit bulk_post bulk_submit thread_pool_executor provide additional method manual_executor api aside post submit bulk_post bulk_submit manual_executor provide additional method object asynchronous value exception consume concurrencpp object type represent asynchronous eager task lazy_result represent defer lazy task task eager lazy complete either return valid value throw exception either case asynchronous marshal consumer object object form asymmetric coroutines execution caller coroutine effect execution callee coroutine coroutines independently consume callee coroutine caller coroutine might suspend await callee complete point coroutines independently callee coroutine whether consume lazy_result object form symmetric coroutines execution callee coroutine happen suspension caller coroutine await lazy current coroutine suspend lazy task associate lazy start callee coroutine complete yield caller coroutine resume lazy consume associate lazy task never start object move type content move another object case object consider empty attempt call method operator bool operator throw asynchronous pull object call get operator co_await object become empty emptiness test operator bool await mean suspend current coroutine object ready valid value return associate task return object associate task throw exception throw moment await already ready current coroutine resume immediately otherwise resume thread set asynchronous exception resolve similar await difference co_await expression return object non empty form ready state asynchronous pull get co_await every object status indicate state asynchronous status vary result_status idle asynchronous exception produce yet result_status value associate task terminate gracefully return valid value result_status exception task terminate throw exception status query call lazy_ status type type represent ongoing asynchronous task similar std future aside await resolve object also wait call wait wait_for wait_until get wait finish block operation case asynchronous ready suspend entire thread execution wait asynchronous become available wait operation generally discourage allow root level task context allow like block main thread wait rest application finish gracefully concurrencpp blocking_executor concurrencpp thread_executor await object co_await turn current function task coroutine well prefer way consume object block underlie thread api lazy_result type lazy object represent defer lazy task lazy_result responsibility start associate lazy task marshal defer back consumer await resolve lazy suspend current coroutine start associate lazy task associate task complete asynchronous value marshal caller task resume sometimes api might return lazy application need associate task eagerly without suspend caller task case lazy task convert eager task call associate lazy case associate task start inline without suspend caller task original lazy empty valid object monitor newly start task return instead lazy_result api parallel coroutines regular eager coroutines start synchronously call thread execution execution might shift another thread execution coroutine undergo reschedule await unready object inside concurrencpp also provide parallel coroutines start inside give executor invoke thread execution style schedule coroutines especially helpful write parallel algorithm recursive algorithm concurrent algorithm fork join every parallel coroutine must meet follow precondition return null_result get executor_tag first argument get type type std shared_ptr type concrete class executor second argument contain co_await co_return body apply function parallel coroutine concurrencpp start coroutine suspend immediately reschedule provide executor concurrencpp executor_tag dummy placeholder tell concurrencpp runtime function regular function need start inside give executor application consume parallel coroutine return object parallel fibonacci calculate member fibonacci sequence parallel manner start launch fibonacci step parallel coroutine first argument dummy executor_tag second argument threadpool executor every recursive step invoke new parallel coroutine parallel co_return parent task acquire co_await deem input small enough calculate synchronously curr stop execute recursive step task solve algorithm synchronously compare write without parallel coroutines rely executor submit alone since fibonacci return submit recursively via executor submit promise object main way pas task concurrencpp see executor coroutines produce object sometimes want capability object non task third party library case complete object result_promise result_promise resemble std promise object application manually set asynchronous exception make associate object become ready like object promise move type become empty move similarly set exception promise become empty well promise get scope exception set promise destructor set concurrencpp error broken_task exception set_exception method suspend block task wait associate object resume unblock promise convert callback style async await style whenever component require callback marshal asynchronous pas callback call set_result set_exception depend asynchronous pas promise return associate result_promise api marshal asynchronous result_promise std thread third party executor represent scenario non concurrencpp executor part application life cycle extract object pas promise block main thread become ready my_3_party_executor set co_return share object share special kind object allow multiple consumer access asynchronous similar std shared_future different consumer different thread call function like await get resolve thread safe manner share regular object unlike regular object copyable movable shared_result behave like std shared_ptr object share move another instance share empty try access throw exception order support multiple consumer share object return reference asynchronous value instead move like regular object shared_result return int get await etc call underlie type shared_result void reference type like int return usual asynchronous throw exception throw note acquire asynchronous shared_result multiple thread thread safe actual value might multiple thread acquire asynchronous integer receive reference int make integer thread safe alright mutate asynchronous value asynchronous value already thread safe alternatively application encourage const type begin like const int acquire constant reference like const int prevent mutation shared_result api shared_result termination concurrencpp runtime object get scope main application terminate runtime iterate store executor call shutdown method try access either timer queue executor throw error runtime_shutdown exception executor shut clear inner task queue destroy execute task object task object store concurrencpp coroutine coroutine resume inline error broken_task exception throw case runtime_shutdown broken_task exception throw application terminate current flow gracefully soon possible exception ignore resume executor many concurrencpp asynchronous action require executor resume executor asynchronous action implement coroutine finish synchronously resume immediately call thread execution asynchronous action finish synchronously resume finish inside give resume executor when_any utility function require resume executor first argument when_any return lazy_result become ready least give become ready already ready moment call when_any call coroutine resume synchronously call thread execution call coroutine resume least finish inside give resume executor resume executor important mandate coroutines resume case clear coroutine suppose resume case when_any when_all case asynchronous action process inside concurrencpp worker process specific action application utility function make_ready_result function make_ready_result create ready object give argument await cause current coroutine resume immediately get operator co_await return construct value make_exceptional_result function make_exceptional_result create ready object give exception await cause current coroutine resume immediately get operator co_await throw give exception when_all function when_all utility function create lazy object become ready input complete await lazy return input object ready state ready consume when_all function come flavor accept heterogeneous range object another get pair iterators range object type lastly overload accept object case input object function return ready object empty tuple pas object empty exception throw case input object unaffected function exception handle input object valid empty function return valid ready state output currently when_all accept object overload accept resume executor first parameter await return when_all caller coroutine resume give resume executor when_any function when_any utility function create lazy object become ready least input complete await return helper struct contain input object plus index complete task could time consume ready might already complete asynchronously application call when_any repeatedly order consume ready complete consume when_any function come flavor accept heterogeneous range object another get pair iterators range object type unlike when_all mean await least task finish range completely empty hence overload argument also overload iterators throw exception iterators reference empty range begin end pas object empty exception throw case exception throw input object unaffected function exception handle input object valid empty function return valid state output currently when_any accept object overload accept resume executor first parameter await return when_any caller coroutine resume give resume executor resume_on function resume_on return awaitable suspend current coroutine resume inside give executor important function make sure coroutine right executor application might schedule background task background_executor await return object case await coroutine resume inside background executor call resume_on another cpu bind executor make sure cpu bind line background executor background task complete coroutine schedule another executor resume_on executor shut resume coroutine resume erros broken_task exception throw case application need quite gracefully timer timer queue concurrencpp also provide timer timer queue timer object define asynchronous action executor within well define interval time type timer regular timer onshot timer delay object regular timer property define callable callable schedule task periodically executor executor schedule callable periodically due time time creation interval millisecond timer schedule first time frequency time timer schedule first time interval millisecond callable schedule periodically timer destruct cancel like object concurrencpp timer move type empty timer destruct timer cancel call timer cancel schedule yet execute task ongoing task uneffected timer callable must thread safe recommend set due time frequency timer granularity millisecond timer queue concurrencpp worker manage collection timer process thread execution also agent create new timer timer deadline whether timer due time frequency reach timer queue fire timer schedule callable associate executor task like executor timer queue also adhere raii concept runtime object get scope shut timer queue cancel pending timer timer queue shut subsequent call make_timer make_onshot_timer make_delay_object throw error runtime_shutdown exception application must try shut timer queue timer_queue api timer api regular timer create regular timer timer queue timer schedule callable second fire callable every second give callable threadpool executor oneshot timer oneshot timer time timer due time schedule callable never reschedule oneshot timer create timer second creation timer schedule callable new thread execution concurrencpp thread_executor delay object delay object object become ready due time reach application co_await object delay current coroutine non block way current coroutine resume executor pas make_delay_object delay object create coroutine marshal throw exception delay loop call co_await delay object generator generator lazy synchronous coroutine able produce stream value consume generator co_yield keyword yield value back consumer generator yield member sequence generator mean synchronously co_yield keyword must co_await keyword generator continue produce value long co_yield keyword call co_return keyword call explicitly implicitly generator stop produce value similarly exception throw generator stop produce value throw exception throw consumer generator generator mean range loop generator implicitly produce iterators begin end control execution loop iterators handle access manually generator create start lazy task begin method call generator resume first time iterator return lazy task resume repeatedly call operator return iterator return iterator equal end iterator generator finish execution either exit gracefully throw exception mention early happen behind scene inner mechanism loop generator call directly like object concurrencpp generator move type generator move consider empty try access inner method operator bool throw exception emptiness generator generally occur advise consume generator upon creation loop try call method individually generator api runtime object concurrencpp runtime object agent acquire store create new executor runtime must create value type soon main function start concurrencpp runtime get scope iterate store executor shut call executor shutdown executor exit inner work loop subsequent attempt schedule new task throw concurrencpp runtime_shutdown exception runtime also contain global timer queue create timer delay object upon destruction store executor destroy unexecuted task wait ongoing task finish ongoing task try executor spawn new task schedule task continuation exception throw case ongoing task need quit soon possible allow underlie executor quit timer queue also shut cancel timer raii style task process creation runtime object runtime get scope free concurrent application need communicate termination message explicitly task free executor long runtime object alive runtime api create user define executor mention application create custom executor type inherit derivable_executor class point consider implement user define executor important thing remember executor multiple thread implement method must thread safe new executor create runtime make_executor application must create new executor plain instantiation std make_shared plain new runtime make_executor also application must try instantiate concurrencpp executor like thread_pool_executor thread_executor executor must access exist instance runtime object another important point handle shutdown correctly shutdown shutdown_requested enqueue monitor executor state behave accordingly invoke shutdown tell underlie thread quit join shutdown might call multiple time method must handle scenario ignore subsequent call shutdown first invocation enqueue must throw concurrencpp error runtime_shutdown exception shutdown call task object implement executor rare case application need work concurrencpp task class directly concurrencpp task std function like object difference like std function task object store callable act asynchronous operation unlike std function task move type invocation task object receive parameter return void moreover every task object invoke first invocation task object become empty invoke empty task object equivalent invoke empty lambda throw exception task object receive callable forward reference type type template parameter copy like std function construction store callable happen place allow task object contain callables move type like std unique_ptr concurrencpp task object try different method optimize usage store type task object apply short buff optimization sbo regular small callables inline call std coroutine_handle call directly without virtual dispatch task api implement user define executor store task enqueue call execute accord executor inner mechanism user define executor create executor log action like enqueuing task execute implement executor interface request runtime create store instance call runtime make_executor rest application behave exactly non user define executor support platform tool operate system linux macos window window compiler msvc visual studio version clang clang tool cmake instal test library window release mode test window debug release mode library nix platform release mode test nix platform clang also possible test tsan thread sanitizer support via vcpkg window nix platform alternatively instal library manually developer may get stable release concurrencpp package experiment sandbox concurrencpp come sandbox program developer modify experiment without link compile library different base order play sandbox developer modify sandbox main cpp compile application follow command sandbox window sandbox nix platform
C C++;https://github.com/Sarcasm/irony-mode;irony mode minor mode power libclang libclang ref irony mode emacs minor mode aim improve edit experience objective language work combination emacs package program irony server expose libclang libclang ref feature completion emacs completion point function company mode company ref backend company irony company irony ref syntax check flycheck flycheck ref checker flycheck irony flycheck irony ref eldoc integration irony eldoc irony eldoc ref counsel counsel ref integration dependency elisp dependency dependency instal automatically standard installation installation procedure describe package comment lib lib ref since emacs json json ref since emacs yasnippet yas ref optional may provide post completion expansion function argument irony server prerequisite irony server provide libclang libclang ref interface irony mode simple protocol base expression server write require follow package instal system cmake cmake ref libclang libclang ref installation recommend way irony mode dependency package manager package ret irony ret apt debian derivative sudo apt elpa irony exactly package manager manage irony mode apt melpa package desire uninstall version manage apt likewise instal melpa straight may state require manual workaround late debian support irony mode clang mechanism recommend officially support method access new version debian stable provide debian buster sudo apt buster backports elpa irony require new version clang llvm provide backports follow repository available llvm debian ubuntu nightly unofficial repository maintain sylvestre ledru responsible official debian package repository also support ubuntu derivative unofficial repository recommend _melpa package_ irony mode uninstall elpa irony finally switch apt melpa follow action require irony server ret configuration add hook mode hook irony mode add hook mode hook irony mode add hook objc mode hook irony mode add hook irony mode hook irony cdb autosetup compile option window consideration irony mode work fine window thing take care first libclang dll expect available path emacs exec path emacs require bug previous version make irony unuseable emacs bug w32 pipe read delay default value change issue today version window default value may low mainline emacs future version suggest set w32 pipe buff size introduce emacs set large value default improve irony server communication performance variable customize irony server w32 pipe buff size window configuration tweak add emacs configuration usage first irony mode ask irony server type irony server ret tune irony mode customize customize group ret irony ret order provide context sensitive accurate information irony mode need know compiler flag parse current buff best way achieve compilation database compilation database compilation database order work correctly irony mode need know compile flag irony cdb aim provide automatic possible compile flag discovery minimal user input please refer irony cdb autosetup compile option irony cdb compilation database right irony cdb support follow compilation database json compilation database clang compile ref json format generate various tool name compile_commands json list compile option associate project cmake cmake ref generate compilation database directory issue follow command cmake dcmake_export_compile_commands ninja ninja ref generate json compilation database compdb tool bear bear ref generate json compilation database monitor project typical usage make base project bear make clang_complete clang_complete doc ref root project contain compilation flag per line compatible plugin rip rip clang_complete clang_complete vim ref want generate clang_complete automatically take look cc_args documentation cc_args doc ref detail information compilation database available faq __it slow bug old version clang least cause completion fail standard library type eliminate bug optimisation disable parse translation unit slow parse affect old version clang suggest update libclang installation want take advantage optimization __libclang open share object compile irony server succeed follow message try irony server executable irony server error load share library libclang open share object directory libclang instal non standard location miss path list dynamic loader see conf tell cmake rpath rpath ref instal target irony server enable rpath cmake follow command cmake dcmake_install_rpath_use_link_path also install_name_tool explicitly tell irony server appropriate version libclang dylib live homebrew brew llvm clang libclang dylib library usr local opt llvm lib libclang dylib instruct irony server something like install_name_tool change rpath libclang dylib usr local opt llvm lib libclang dylib irony server irony ref irony ref auto complete bear ref bear cc_args doc ref cc_args documentation lib ref lib clang compile ref clang jsoncompilationdatabase clang_complete doc ref clang_complete clang_complete vim ref clang_complete vim plugin cmake ref cmake counsel ref counsel github company irony ref company irony company ref company mode flycheck irony ref flycheck irony flycheck ref flycheck modern emacs syntax check irony eldoc ref irony eldoc irony mode support eldoc mode json ref introduce json libclang ref libclang interface clang ninja ref ninja rpath ref rpath wikipedia article yas ref yasnippet
C C++;https://github.com/lpereira/lwan;lwan web server lwan high performance scalable web server project web contain detail status arch release debug static analysis test linux x86_64 release debug static analysis report test fuzzing linux armv7 release debug freebsd x86_64 release freebsd debug freebsd macos x86_64 release macos debug macos openbsd x86_64 release openbsd debug openbsd openbsd test instal either lwan container image container image grab package favorite distribution lwan wild instal lwan ensure dependency instal common dependency find gnu linux distribution package name different difficult search whatever package management tool distribution require dependency least version optional dependency system look library enable link available lua luajit disable pas denable_brotli disable pas denable_zstd linux denable_tls default pas alternative memory allocator pas duse_alternative_malloc cmake follow value auto autodetect list fall back libc malloc none find test suite request lua benchmark bundle alongside lwan convenience techempower benchmark suite client library either sqlite bulb note non x86_64 system alongside lwan require connection keep mind package lwan non x86_64 architecture common operate system package name minimum archlinux pacman cmake zlib freebsd pkg cmake pkgconf ubuntu apt get update apt get git cmake zlib1g dev pkg config macos brew cmake optional feature archlinux pacman cmake zlib sqlite luajit libmariadbclient gperftools valgrind mbedtls freebsd pkg cmake pkgconf sqlite3 lua51 ubuntu apt get update apt get git cmake zlib1g dev pkg config lua5 dev libsqlite3 dev libmysqlclient dev libmbedtls dev macos brew cmake mysql connector sqlite lua pkg config command clone repository git clone git github com lpereira lwan lwan create directory lwan mkdir lwan select type select release version debug symbol message enable optimization etc lwan cmake dcmake_build_type release would like enable optimization still debugger instead lwan cmake dcmake_build_type relwithdebinfo disable optimization debug friendly version lwan cmake dcmake_build_type debug lwan lwan make generate binary src bin lwan lwan main lwan executable may execute help guidance src bin testrunner testrunner contain execute test suite src sample freegeoip freegeoip freegeoip sample require sqlite src sample techempower techempower techempower web framework benchmark require sqlite mysql library src sample clock clock clock generate gif always show local time src bin tool mimegen extension mime type table process src bin tool bin2hex generate binary suitable include src bin tool configdump dump configuration configuration reader api rewrite http benchmarking tool remark pas dcmake_build_type release enable compiler optimization tune current architecture exclamation important please release benchmarking default debug log request standard output hold lock severely hold server default pas dcmake_build_type release version suitable debug purpose version valgrind header present include debug message strip release version debug message print every request debug sanitizers enable select lwan specify follow option cmake invocation line dsanitizer ubsan select undefined behavior sanitizer dsanitizer address select address sanitizer dsanitizer thread select thread sanitizer alternative memory allocator select well lwan currently support box either pas dalternative_malloc name cmake invocation line name provide optional dependency section duse_syslog option pas cmake also log system log addition standard output test lwan make testsuite compile testrunner program execute regression test suite src script testsuite benchmark lwan make benchmark compile testrunner execute benchmark script src script benchmark coverage lwan also coverage type specify dcmake_build_type coverage enable generate coverage make target testrunner prepare test coverage report every commit repository trigger generation report publicly set server edit provide lwan conf format explain detail bulb note lwan try find configuration base executable name current directory testrunner conf testrunner binary lwan conf lwan binary configuration load current directory change make lwan serve static locate wwwroot directory lwan listen port interface lwan detect number cpu increase maximum number open descriptor generally try best autodetect reasonable setting environment many setting tweak configuration usually good idea mess magic_wand tip optionally lwan binary shoot static serve without configuration help help configuration format lwan familiar key value configuration syntax comment support character similar script perl nest section create curly bracket section empty case curly bracket optional some_key_name equivalent key name configuration detail read configuration option give version underscore magic_wand tip value contain environment variable syntax variable_name default value specify colon variable_name foo evaluate variable_name set foo otherwise find lwan conf techempower conf value type type description str kind free form text usually application specific int integer number range application specific time time interval see table unit bool boolean value see table valid value time interval time field specify multiplier multiple specify add together instance specify month week day follow table list know multiplier multiplier description second minute hour day day week day month day year bulb note number multiplier table ignore warn issue read configuration space must exist number multiplier boolean value true value false value integer number different true false yes global setting generally good idea let lwan decide best setting environment however every environment decide automatically configuration option provide option type default description keep_alive_timeout time timeout keep connection alive quiet bool false set true print debug message effective release expire time value expire header default month week thread int number thread default number online cpu proxy_protocol bool false enable proxy version support enable set lwan behind proxy proxy support protocol otherwise allow anybody spoof origin address max_post_data_size int set maximum number size post request byte max_put_data_size int set maximum number size put request byte allow_temp_files str temporary set post post request put put request equivalent set post put straitjacket lwan drop privilege user system limit filesystem view chroot bulletproof provide first layer security case bug lwan order feature declare straitjacket section set option require lwan execute root although section write anywhere long top level declaration directory open due instantiate serve_files module lwan refuse start check perform linux safeguard malconfiguration magic_wand tip declare straitjacket right site section way configuration private key reach server initialization take place option type default description user str null drop privilege user name chroot str null path chroot drop_capabilities bool true drop capability capset linux pledge openbsd header need specify custom header response declare header section global scope order section appear important declaration override server header server lwan send set custom header value obtain environment variable with_this_environment_variable header override would cause issue send actual value service request include limit date expire www authenticate connection content type transfer encode access control allow header bulb note header name also case insensitive case preserve override server override server header send way write configuration listener listener support per lwan process http listener listener section http listener tls_listener section listener type allow warn warn support experimental although stable initial test mileage may vary tlsv1 support point tlsv1 plan bulb note support require penguin linux module load support operate system may add future freebsd seem possible operate system seem offer similar feature unsupported operate system terminator proxy good option listener tls_listener section parameter interface address port listen listener syntax address port address either bind interface ipv6 address surround square bracket ipv4 address hostname instance listener localhost would listen interface port listener section take key tls_listener section require cert key point respectively location disk certificate private key locate take optional boolean hsts key control strict transport security header send http response magic_wand tip generate key test purpose openssl command line tool like follow openssl req nod x509 newkey rsa keyout key pem cert pem sha256 day bulb note recommend straitjacket straitjacket chroot option declare right tls_listener section way path certificate key reach point systemd socket activation systemd specify parameter multiple listener systemd specify systemd filedescriptorname specify filedescriptorname follow convention set systemd socket site site section group instance module handler respond request give url prefix rout url module handler order route url lwan match large common prefix request uri set prefix specify listener section request particular prefix handle depend handler module declare listener section handler module similar internally handler merely function hold state module hold state name instance multiple instance module appear listener section special syntax attach prefix handler module configuration parser rule apply name prefix link prefix prefix path either handler name name name begin address operator module name name empty section module specific set option list next section addition configuration option special authorization section present declaration module instance handler take configuration option may include authorization section magic_wand tip list module obtain execute lwan command line argument follow basic documentation module ship lwan serve serve_files module serve static automatically create directory index serve pre compress generally try best serve fast way possible accord heuristic option type default description path str null path directory contain serve index_path str index html name serve index directory serve_precompressed_path bool true exist small new client accept gzip encode transfer auto_index bool true generate directory list automatically index_path present otherwise yield auto_index_readme bool true include content readme part automatically generate directory index directory_list_template str null path mustache template directory list default internal template read_ahead int maximum amount byte read ahead cache open value disable readahead readahead perform low priority thread block thread extent read filesystem cache_for time time keep metadata size compress content open descriptor etc cache lua lua module allow request service script write program language although functionality provide module quite spartan able framework script serve embed configuration load standard lua module optionally luajit optimize cache bulb note lua script global variable may service different thread state available amount time specify cache_period configuration option thread lwan create instance lua lua_state struct every thread lwan coroutine spawn lua thread lua_newthread per request need instance lua module endpoint single script embed configuration otherwise service many different endpoint script suppose implement function follow signature handle_ method endpoint req method http method get post head etc endpoint desire endpoint handle function magic_wand tip root endpoint catchall handler function handle_get_root call handler could find request catchall specify server return find error req parameter point metatable contain method obtain information request set response see req query_param param return query parameter query string key param nil find req post_param param return post parameter post handler key param nil find req set_response str set response string str req say str send response chunk chunk encode http req send_event event str send event server send event req cookie param return cookie name param nil find req set_headers tbl set response header table tbl header may specify multiple time table rather string table value foo bar baz must call send response say send_event req header name obtain header request give name nil find req sleep pause current handler specify amount millisecond req ws_upgrade return connection could upgrade websocket otherwise req ws_write_text str send str websocket upgrade connection text frame req ws_write_binary str send str websocket upgrade connection binary frame req ws_read return string content last websocket frame number indicate status enotconn linux disconnect eagain linux nothing available enomsg linux otherwise return value might change future something lua like req remote_address return string remote address req path return string request path req query_string return string query string empty string query string present req body return request body post put request req request_id return string contain request req request_date return date write date response header return true request service http false otherwise req host return value host header present otherwise nil handler function may return either nil case response generate number match http status attempt return invalid http status anything number nil internal server error response throw option type default description default_type str text plain default mime type response script_file str null path lua script cache_period time time keep lua state load memory script str null inline lua script rewrite rewrite module match url give option either redirect another url rewrite request way lwan handle request make way originally information_source info fork lua regular expresion engine may feature pack general purpose engine choose specifically deterministic finite attempt make kind denial service impossible new url specify simple text substitution syntax lua script magic_wand tip lua script contain metamethods available req metatable provide lua module quite powerful instance rewrite module require pattern action execute pattern match pattern evaluate order appear configuration specify nest section configuration instance consider follow pattern specify define pattern provide nice url hide user another provide different way obtain direct link image host popular image host service request base endpoint imgur mp4 4koznyx redirect directly resource imgur service value rewrite_as redirect_to lua script well case option expand_with_lua must set true instead simple text substitution syntax function name handle_rewrite req capture define instead req parameter document lua module section capture parameter table contain capture order function return new url redirect module option option specify every pattern option type default description rewrite_as str null rewrite url follow pattern redirect_to str null redirect new url follow pattern expand_with_lua bool false lua script redirect rewrite request redirect_to rewrite_as option mutually exclusive must specify least also possible specify condition trigger rewrite specify open condition block specify condition type parameter condition evaluate condition subst syntax section require parameter description cookie yes yes single key value check request cookie key value value query yes yes single key value check request query variable key value value post yes yes single key value check request post key value value header yes yes single key value check request header key value value environment yes yes single key value check environment variable key value value stat yes yes path is_dir is_file check path exist filesystem optionally check is_dir is_file encode yes deflate gzip brotli zstd none check client accept response determine encode deflate yes deflate encode proxied boolean check request proxied proxy protocol boolean check request make http client boolean check request make http has_query_string boolean check request query string even empty method method name check http method specify lua string lua function match req inside string check return true false subst syntax refer ability reference match pattern substitution syntax rewrite redirect action instance condition cookie cookie name foo bar substitute first match pattern condition relate bulb note condition require section write key instance condition has_query_string yes want send site dark mode style cookie value dark send site light mode otherwise write another want send pre compress exist filesystem user request bulb note general necessary serve module automatically pick small available request encode cache show possible similar feature configuration alone redirect redirect module say tin generate move permanently default change see response accord option specify configuration generally rewrite module instead pack feature however module serve also write lwan module line option specify always generate internal server error response specify invalid http lwan know see enum produce move permanently response option type default description str null location redirect int http perform redirect response response module generate artificial response http addition also serve write lwan module carve void module generate allow response git serve serve_files module supply fall outside response cod know lwan find error send instead option type default description int http response fastcgi fastcgi module proxy request http client connect lwan fastcgi server accessible lwan useful instance serve page script language php bulb note preliminary version module well optimize feature miss note request send body post request work lwan implement stdin record yet option type default description address str address connect path unix domain socket ipv4 address aaa bbb ccc ddd port ipv6 address port script_path str location cgi script locate default_index str index php default script execute unspecified request uri authorization section authorization section declare module instance handler provide way authorize fulfillment request standard http authorization mechanism order require authorization access certain module instance handler declare authorization section basic parameter set option option type default description realm str lwan realm authorization usually show user password browser password_file str null path contain username password clear text format configuration format lwan warn warn password store clear text accessible server keep memory second avoid feature possible hack please read section follow plan contribute lwan nothing unexpected mostly follow rule expectation many project every expect thing little bite different another cod style lwan try follow consistent cod style throughout project consider contribute patch project please respect style try match style surround general global_variables_are_named_like_this even though tend rare mark static rare exception local variable usually short local_var conn struct name often short descriptive typedef structs rarely lwan header pragma instead usual include guard hackery function apis expose liblwan prototype add lwan private function short sweet exception may apply public function prefix lwan_ public type prefix lwan_ private function must static name without lwan_ prefix indent space tab suggest line break column enforce old style comment prefer clang format format source acceptable way clang format provide test modify well test area event loop http parser etc please add new integration test make sure send pull request test include new send work test add modify src script testsuite execute either invoke script directly source root execute testsuite target test work linux execute platform fuzz test lwan automatically fuzz test fuzz test locally though follow instruction test currently fuzzing driver request parse configuration parser template parser lua string pattern match library rewrite module add new fuzzers trivial fuzzers implement source place src bin fuzz fuzzers name fuzzer_name _fuzzer look fuzz documentation fuzzers information write compile lwan system rather script fuzz test fuzzer please follow instruction test locally fuzzer environment execute fuzzing corpus provide src fuzz corpus name corpus fuzzer_name unique_id export apis share object version liblwan elf target linux symbol filter script hide symbol consider private library please edit src lib liblwan sym add new symbol export liblwan git pull request lwan try maintain source history flat possible devoid merge commit mean pull request rebased top current master merge sometimes automatically github interface sometimes need manual work fix conflict appreciate contributor fix conflict ask advisable push change fork branch per pull request rather push master branch reason explain please ensure git configure properly name really matter legal name nickname enough credit valid email address need add sign line even though fine send commit change request pull request choice reply ask clarification maybe intention clear enough whoever ask change fully understand try achieve fix issue fix issue find pull request please interactive squash fixup commit add fix top tree create another pull request accomodate change rewrite history locally force push branch update automatically change rewrite history development branch fine force push normal expect enforce recommend create small commit commit split lwan pretty much arbitrary please take look commit history get idea division make git offer plethora command achieve already mention interactive rebase option git add git commit amend good commit message line summary char follow empty line follow paragraph char line explain change paragraph explain change usually necessary summary good enough try write good commit license lwan license gnu general public license version option late version therefore must either lgplv2 gplv2 permissive copyfree license compatible gplv2 mit bsd clause public domain cc0 although program distribute license gplv3 must compatible gplv2 well new license version gpl new likewise license license compatible gplv3 incompatible gplv2 apache suitable inclusion lwan even license specify credit give cc0 license please give credit original author piece contrary popular belief possible gpl piece server without share application binary server share source must available whoever binary merely access lwan server http qualify access binary program server doubt take legal advice readme please consult lawyer understand free software license portability lwan write originally linux port bsd system well system detect support feature support library function appropriate instance implement top linux syscalls gnu extension implement support system blog explain detail include_next performance achieve good performance yield request second core laptop request without disk access without pipelining disk require 16kib yield request second large drop request second shabby either course keep alive connection machine thus resource could webserver without keep alive number drop around fold irc channel irc channel lwan standard irc client lwan wild non definitive list third party stuff lwan see wild help list project cython make possible write handler experimental version node http server maintain beginning web base lwan write complete web offer lwan backends word ladder sample shodan list brave soul expose lwan public internet distribution channel make available well container image available ghcr lpereira lwan github container registry information container image dockerfile maintain available docker buildpack heroku maintain available lwan also available package also available gnu linux distribution arch alpine also available package nanos lwan also benchmark raphael javaux master cite lwan chapter performance analysis lwan benchmark lwan backend benchmark techempower framework feature lwan since round lwan rest api official mention academic journal dynamic predictive race detector program english publish lwan real world high precision race detection method large scale program chinese publish also lwan case study talk mention lwan talk polyconf16 give talk framework rust mention lwan insane thing university seminar lwan presentation sailor web mention lwan performance scale istio service present kubecon europe mention mark lwan server side test due performance robustness multi core http server much fast spoiler present pyconfr smets mention nexedi lwan backend service cython really third party ala author project container image lwan container image available container runtimes like may lwan container pull lwan image ghcr container image tag release version number specific version lwan pull late version docker pull ghcr lpereira lwan late pull specific version docker pull ghcr lpereira lwan image locally clone repository containerfile dockerfile lwan optional dependency enable podman lwan image image expect find static content wwwroot volume contain content mount docker www wwwroot lwan bring lwan conf simply mount lwan conf podman lwan conf lwan conf lwan lwan quote quote find wild lwan present particular order contribution appreciate read lwan source especially part coroutine impressive interest good novel thank server side lwan handle 100k reqs suppose super robust work well insane thing michael never chance thank lwan inspire lot develop let say lwan thing beauty get suck read source pure entertainment good high nice work lwan look _that_ carefully yet far like saw definitely right idea lwan work art every time read almost always awe strike round lwan take crown jeez amaze end end rock solid engineer sell work short spare time coder surprise follow nice impressive even write grokkable nice work lwan complete failure
C C++;https://github.com/CppCon/CppCon2017;cppcon presentation material canonical location presentation cppcon speaker submit material submit index material keynote live head language keynote 20as 20a 27live 20at 20head 20language 20as 20a 27live 20at 20head 20language 20titus 20winters 20cppcon pdf titus winter meta thought generative keynote meta 20thoughts 20on 20generative 20c meta 20thoughts 20on 20generative 20c 20herb 20sutter 20cppcon pdf herb sutter compiler lately unbolt compiler lid keynote 20has 20my 20compiler 20done 20for 20me 20lately 20unbolting 20the 20compiler 20lid 20has 20my 20compiler 20done 20for 20me 20lately 20unbolting 20the 20compiler 20lid 20matt 20godbolt 20cppcon pdf matt godbolt readme keynote 20has 20my 20compiler 20done 20for 20me 20lately 20unbolting 20the 20compiler 20lid readme presentation core guideline need start presentation 20core 20guidelines 20you 20need 20to 20start 20using 20now 20core 20guidelines 20you 20need 20to 20start 20using 20now 20kate 20gregory 20cppcon pptx kate gregory complicate lockfree queue presentation 20not 20so 20complicated 20lockfree 20queue 20not 20so 20complicated 20lockfree 20queue 20tony 20van 20eerd 20cppcon pdf tony van eerd soupcon sfinae presentation 20soupcon 20of 20sfinae 20soupcon 20of 20sfinae 20arthur 20o 27dwyer 20cppcon pdf arthur dwyer tour deep presentation 20tour 20of 20deep 20learning 20with 20c 20tour 20of 20deep 20learning 20with 20c 20peter 20goldsborough 20cppcon pdf peter goldsborough type name presentation 20type 20by 20any 20other 20name 20type 20by 20any 20other 20name 20jon 20cohen 20cppcon pdf jon cohen allocator good part presentation allocator 20the 20good 20parts allocator 20the 20good 20parts 20pablo 20halpern 20cppcon pdf pablo halpern almost unlimited modern kernel mode application presentation almost 20unlimited 20modern 20c 20in 20kernel mode 20applications almost 20unlimited 20modern 20c 20in 20kernel mode 20applications 20billy 20baker 20cppcon pdf billy baker api abi versioning presentation api 20abi 20versioning api 20abi 20versioning 20mathieu 20ropert 20cppcon pdf mathieu ropert module presentation 20c 20modules 20c 20modules 20boris 20kolpackov 20cppcon pdf boris kolpackov readme presentation 20c 20modules readme persistent memory technology presentation 20and 20persistent 20memory 20technologies 20and 20persistent 20memory 20technologies 20tomasz 20kapela 20cppcon pdf tomasz kapela atomics basic advance presentation 20atomics 20from 20basic 20to 20advanced 20atomics 20from 20basic 20to 20advanced 20fedor 20pikus 20cppcon pdf fedor pikus academia presentation 20in 20academia 20in 20academia 20chuck 20allison 20cppcon pptx chuck allison winrt future window presentation 20winrt 20and 20the 20future 20of 20c 20on 20windows 20winrt 20and 20the 20future 20of 20c 20on 20windows 20kenny 20kerr 20cppcon pdf kenny kerr bryce adelstein lelbach class template argument deduction new abstraction presentation class 20template 20argument 20deduction 20a 20new 20abstraction class 20template 20argument 20deduction 20a 20new 20abstraction 20zhihao 20yuan 20cppcon pdf zhihao yuan cnl compositional numeric library presentation cnl 20a 20compositional 20numeric 20library cnl 20a 20compositional 20numeric 20library 20john 20mcfarlane 20cppcon pdf john mcfarlane readme presentation cnl 20a 20compositional 20numeric 20library readme concurrency parallelism coroutines presentation concurrency 20parallelism 20and 20coroutines concurrency 20parallelism 20and 20coroutines 20anthony 20williams 20cppcon pdf anthony williams constexpr thing presentation constexpr 20all 20the 20things constexpr 20all 20the 20things 20jason 20turner 20and 20ben 20deane 20cppcon pdf jason turner ben deane coroutines presentation coroutines 20what 20can 27t 20they 20do coroutines 20what 20can 27t 20they 20do 20toby 20allsopp 20cppcon pdf toby allsopp customize standard container presentation customize 20the 20standard 20containers customize 20the 20standard 20containers 20marshall 20clow 20cppcon pdf marshall clow design pattern low level real time render presentation design 20patterns 20for 20low level 20real time 20rendering design 20patterns 20for 20low level 20real time 20rendering 20nicolas 20guillemot 20cppcon pdf nicolas guillemot pdf presentation design 20patterns 20for 20low level 20real time 20rendering design 20patterns 20for 20low level 20real time 20rendering 20nicolas 20guillemot 20cppcon pdf pptx presentation design 20patterns 20for 20low level 20real time 20rendering design 20patterns 20for 20low level 20real time 20rendering 20nicolas 20guillemot 20cppcon pptx design feature fit presentation design 20a 20feature 20that 20does 20not 20fit design 20a 20feature 20that 20does 20not 20fit 20patrice 20roy 20cppcon pdf patrice roy design unify interface execution presentation design 20a 20unified 20interface 20for 20execution design 20a 20unified 20interface 20for 20execution 20gordon 20brown 20michael 20wong 20cppcon pdf gordon brown michael wong drive future modern presentation drive 20into 20the 20future 20with 20modern 20c drive 20into 20the 20future 20with 20modern 20c 20jan 20babst 20cppcon pdf jan babst dynamic_cast scratch presentation dynamic_cast 20from 20scratch dynamic_cast 20from 20scratch 20arthur 20o 27dwyer 20cppcon pdf arthur dwyer secret weapon package module presentation 20secret 20weapon 20packages 20and 20modules 20secret 20weapon 20packages 20and 20modules 20scott 20wardle 20cppcon pdf scott wardle pdf presentation 20secret 20weapon 20packages 20and 20modules 20secret 20weapon 20packages 20and 20modules 20scott 20wardle 20cppcon pdf pptx presentation 20secret 20weapon 20packages 20and 20modules 20secret 20weapon 20packages 20and 20modules 20scott 20wardle 20cppcon pptx readme presentation 20secret 20weapon 20packages 20and 20modules readme effective edition presentation effective 20qt 20edition effective 20qt 20edition 20giuseppe 20d 27angelo 20cppcon pdf giuseppe angelo way handle non block return presentation 20ways 20to 20handle 20non 20blocking 20returns 20ways 20to 20handle 20non 20blocking 20returns 20sergey 20ignatchenko 20cppcon pdf sergey ignatchenko enhance support value semantics presentation enhance 20support 20for 20value 20semantics 20in 20c 2b17 enhance 20support 20for 20value 20semantics 20in 20c 2b17 20michael 20park 20cppcon pdf michael park esoteric structure find presentation esoteric 20data 20structures 20and 20where 20to 20find 20them esoteric 20data 20structures 20and 20where 20to 20find 20them 20allan 20deutsch 20cppcon pptx allan deutsch everything ever want know dlls presentation everything 20you 20ever 20wanted 20to 20know 20about 20dlls everything 20you 20ever 20wanted 20to 20know 20about 20dlls 20james 20mcnellis 20cppcon pdf jam mcnellis folly function non copyable alternative std function presentation folly 20function 20a 20non copyable 20alternative 20to 20std 20function folly 20function 20a 20non copyable 20alternative 20to 20std 20function 20sven 20over 20cppcon pdf sven readme presentation folly 20function 20a 20non copyable 20alternative 20to 20std 20function readme free function presentation free 20your 20functions free 20your 20functions 20klaus 20iglberger 20cppcon pdf klaus iglberger security performance gpu program explore modern allocator presentation 20security 20to 20performance 20to 20gpu 20programming 20exploring 20modern 20allocators 20security 20to 20performance 20to 20gpu 20programming 20exploring 20modern 20allocators 20sergey 20zubkov 20cppcon pdf sergey zubkov function default argument slingshot shotgun presentation function 20default 20arguments 20slingshot 20or 20shotgun function 20default 20arguments 20slingshot 20or 20shotgun 20michael 20price 20cppcon pdf michael price readme presentation function 20default 20arguments 20slingshot 20or 20shotgun readme game audio program presentation game 20audio 20programming 20in 20c game 20audio 20programming 20in 20c 20guy 20somberg 20cppcon pdf guy somberg howl moon lua programmer presentation howl 20at 20the 20moon 20lua 20for 20c 20programmers howl 20at 20the 20moon 20lua 20for 20c 20programmers 20andreas 20weis 20cppcon pdf andreas wei language support compile time reflection presentation language 20support 20for 20compile time 20reflection language 20support 20for 20compile time 20reflection 20andrew 20sutton 20cppcon pdf andrew sutton language support metaprogramming presentation language 20support 20for 20metaprogramming 20in 20c language 20support 20for 20metaprogramming 20in 20c 20andrew 20sutton 20cppcon pdf andrew sutton launcherone rocket engine presentation launcherone 20rocket 20with 20c 20engine launcherone 20rocket 20with 20c 20engine 20diego 20franco 20cppcon pdf diego franco migrate library case study presentation migrate 20a 20c 2b03 20library 20to 20c 2b11 20case 20study 20wt migrate 20a 20c 2b03 20library 20to 20c 2b11 20case 20study 20wt 20roel 20standaert 20cppcon pdf roel standaert mock framework consider harmful presentation mock 20frameworks 20considered 20harmful mock 20frameworks 20considered 20harmful 20peter 20sommerlad 20cppcon pdf peter sommerlad optimization debug quality presentation optimization 20and 20debug 20quality optimization 20and 20debug 20quality 20samy 20bahra 20cppcon pdf samy bahra parallel stl cpu gpu presentation parallel 20stl 20for 20cpu 20and 20gpu parallel 20stl 20for 20cpu 20and 20gpu 20michael 20wong 20gordon 20brown 20ruyman 20reyes 20christopher 20di 20bella 20cppcon pdf michael wong gordon brown ruyman reyes christopher bella postmodern presentation postmodern 20c postmodern 20c 20tony 20van 20eerd 20cppcon pdf tony van eerd practical technique improve time presentation practical 20techniques 20for 20improving 20c 20build 20times practical 20techniques 20for 20improving 20c 20build 20times 20dmitry 20panin 20cppcon pdf dmitry panin program constraint presentation program 20with 20c 20constraints program 20with 20c 20constraints 20walter 20e 20brown 20cppcon pdf walter brown read copy update presentation read 20copy 20update 20then 20what read 20copy 20update 20then 20what 20fedor 20pikus 20cppcon pdf fedor pikus runtime polymorphism back basic presentation runtime 20polymorphism 20back 20to 20the 20basics runtime 20polymorphism 20back 20to 20the 20basics 20louis 20dionne 20cppcon pdf louis dionne seventeenification presentation seventeenification seventeenification 20roland 20bock 20cppcon pdf roland bock inherit large base presentation 20you 20inherited 20a 20large 20code 20base 20you 20inherited 20a 20large 20code 20base 20david 20sankel 20cppcon pdf david sankel pdf presentation 20you 20inherited 20a 20large 20code 20base 20you 20inherited 20a 20large 20code 20base 20david 20sankel 20cppcon pdf pptx presentation 20you 20inherited 20a 20large 20code 20base 20you 20inherited 20a 20large 20code 20base 20david 20sankel 20cppcon pptx asynchronous parallel program presentation 20asynchronous 20c 20parallel 20programming 20model 20asynchronous 20c 20parallel 20programming 20model 20hartmut 20kaiser 20cppcon pdf hartmut kaiser point view multidimensional index set presentation 20point 20of 20views 20multidimensional 20index 20sets 20point 20of 20views 20multidimensional 20index 20sets 20tobias 20fuchs 20cppcon pdf tobias fuchs thinlto application scalable whole program optimization presentation thinlto 20building 20c 20applications 20with 20scalable 20whole 20program 20optimization thinlto 20building 20c 20applications 20with 20scalable 20whole 20program 20optimization 20teresa 20johnson 20cppcon pdf teresa johnson time travel debug presentation time 20travel 20debugging time 20travel 20debugging 20ken 20sykes 20jordi 20mola 20james 20mcnellis 20cppcon pdf ken sykes jordi mola jam mcnellis travel solar system presentation travel 20the 20solar 20system 20with 20c travel 20the 20solar 20system 20with 20c 20juan 20arrieta 20cppcon pdf juan arrieta type pun avoid pun define behavior presentation type 20punning 20in 20c 2b17 20avoiding 20pun define 20behavior type 20punning 20in 20c 2b17 20avoiding 20pun define 20behavior 20scott 20schurr 20cppcon pdf scott schurr undefined behavior presentation undefined 20behavior 20in undefined 20behavior 20in 20john 20regehr 20cppcon pdf john regehr undefined behavior awesome presentation undefined 20behavior 20is 20awesome undefined 20behavior 20is 20awesome 20piotr 20padlewski 20cppcon pdf piotr padlewski functional program http rout api presentation 20functional 20programming 20to 20build 20a 20http 20routing 20api 20functional 20programming 20to 20build 20a 20http 20routing 20api 20jeremy 20demeule 20and 20quentin 20duval 20cppcon pdf jeremy demeule quentin duval value object reference presentation value 20objects 20and 20references 20oh 20my value 20objects 20and 20references 20oh 20my 20nicole 20mazzuca 20cppcon pptx nicole mazzuca microsecond eternity presentation 20a 20microsecond 20is 20an 20eternity 20a 20microsecond 20is 20an 20eternity 20carl 20cook 20cppcon pdf carl cook machine cod presentation 20machine 20am 20i 20coding 20to 20machine 20am 20i 20coding 20to 20patrice 20roy 20cppcon pdf patrice roy tutorial boost program health fiber tutorial boost 20your 20programs 20health 20with 20fibers boost 20your 20programs 20health 20with 20fibers 20david 20sackstein 20cppcon pdf david sackstein readme tutorial boost 20your 20programs 20health 20with 20fibers readme parallel algorithm tutorial 2b17 20parallel 20algorithm 2b17 20parallel 20algorithm 20dietmar 20ku 88hl 20cppcon pdf dietmar high order function technique application tutorial high order 20functions 20in 20c 20techniques 20and 20applications high order 20functions 20in 20c 20techniques 20and 20applications 20micha 20dominiak 20cppcon pdf micha dominiak write custom allocator tutorial 20to 20write 20a 20custom 20allocator 20to 20write 20a 20custom 20allocator 20bob 20steagall 20cppcon pdf bob steagall enough x86 assembler dangerous tutorial 20enough 20x86 20assembler 20to 20be 20dangerous 20enough 20x86 20assembler 20to 20be 20dangerous 20charles 20bailey 20cppcon pdf charles bailey make class great tutorial make 20classes 20great 20again make 20classes 20great 20again 20vinnie 20falco 20cppcon pdf vinnie falco practical tutorial practical 20c 2b17 practical 20c 2b17 20jason 20turner 20cppcon pdf jason turner understand runtime behavior program uftrace tool tutorial understand 20the 20runtime 20behaviors 20of 20c 20programs 20using 20uftrace 20tool understand 20the 20runtime 20behaviors 20of 20c 20programs 20using 20uftrace 20tool 20honggyu 20kim 20cppcon pdf honggyu kim modern cmake pattern enforce good modular design tutorial 20modern 20cmake 20patterns 20to 20enforce 20a 20good 20modular 20design 20modern 20cmake 20patterns 20to 20enforce 20a 20good 20modular 20design 20mathieu 20ropert 20cppcon pdf mathieu ropert demo modern format library demo 20modern 20formatting 20library 20for 20c 20modern 20formatting 20library 20for 20c 20victor 20zverovich 20cppcon pdf victor zverovich bring clang tidy magic visual studio developer demo bring 20clang tidy 20magic 20to 20visual 20studio 20c 20developers bring 20clang tidy 20magic 20to 20visual 20studio 20c 20developers 20victor 20ciura 20cppcon pdf victor ciura readme demo bring 20clang tidy 20magic 20to 20visual 20studio 20c 20developers readme development visual studio demo 20development 20with 20visual 20studio 20code 20development 20with 20visual 20studio 20code 20rong 20lu 20cppcon pptx rong compile time reflection serialization orm demo compile time 20reflection 20serialization 20and 20orm 20examples compile time 20reflection 20serialization 20and 20orm 20examples 20yu 20qi 20cppcon pdf cross platform apps djinni demo cross platform 20apps 20with 20djinni cross platform 20apps 20with 20djinni 20stephen 20spann 20cppcon pdf stephen spann end end deadlock debug tool facebook demo end end 20deadlock 20debugging 20tools 20at 20facebook end end 20deadlock 20debugging 20tools 20at 20facebook 20kenny 20yu 20cppcon pdf kenny fuzz lose demo fuzz 20or 20lose fuzz 20or 20lose 20kostya 20serebryany 20cppcon pdf kostya serebryany mix test production doctest demo mix 20tests 20and 20production 20code 20with 20doctest mix 20tests 20and 20production 20code 20with 20doctest 20viktor 20kirilov 20cppcon viktor kirilov mpark pattern pattern match demo mpark pattern 20pattern 20matching 20in 20c mpark pattern 20pattern 20matching 20in 20c 20michael 20park 20cppcon pdf michael park naked coroutines live demo naked 20coroutines 20live naked 20coroutines 20live 20gor 20nishanov 20cppcon pdf gor nishanov new standard rescue demo new 20standards 20to 20the 20rescue new 20standards 20to 20the 20rescue 20anastasia 20kazakova 20cppcon pdf anastasia kazakova performance benchmarking celero demo performance 20benchmarking 20with 20celero performance 20benchmarking 20with 20celero 20john 20farrier 20cppcon pdf john farrier tool eco system demo tool 20from 20the 20c 20eco system tool 20from 20the 20c 20eco system 20anastasia 20kazakova 20cppcon pdf anastasia kazakova includeos write fast secure web application demo 20includeos 20to 20write 20fast 20and 20secure 20web 20applications 20includeos 20to 20write 20fast 20and 20secure 20web 20applications 20lukas 20bergdoll 20cppcon pdf lukas bergdoll new upcoming visual studio update demo 20new 20and 20upcoming 20in 20visual 20studio 20updates 20new 20and 20upcoming 20in 20visual 20studio 20updates 20steve 20carroll 20and 20daniel 20moth 20cppcon pptx steve carroll daniel moth lightning talk lunch session thing junior devs get lightning 20talks 20and 20lunch 20sessions 20things 20junior 20c 20devs 20don 27t 20get 20things 20junior 20c 20devs 20don 27t 20get 20victor 20ciura 20cppcon pdf victor ciura preview operator lightning 20talks 20and 20lunch 20sessions 20c 2b20 20preview 20operator 20c 2b20 20preview 20operator 20walter 20e 20brown 20cppcon pdf walter brown datetime program everyone everywhere lightning 20talks 20and 20lunch 20sessions datetime 20programming 20for 20everyone 20everywhere datetime 20programming 20for 20everyone 20everywhere 20tai 20meng 20cppcon pdf tai meng dynamix new take polymorphism lightning 20talks 20and 20lunch 20sessions dynamix 20a 20new 20take 20on 20polymorphism 20in 20c dynamix 20a 20new 20take 20on 20polymorphism 20in 20c 20viktor 20kirilov 20cppcon viktor kirilov lightning 20talks 20and 20lunch 20sessions 20giuseppe 20d 27angelo 20cppcon pdf giuseppe angelo get productive unfamiliar source sourcetrail lightning 20talks 20and 20lunch 20sessions get 20productive 20on 20unfamiliar 20source 20code 20with 20sourcetrail get 20productive 20on 20unfamiliar 20source 20code 20with 20sourcetrail 20eberhard 20gr a4ther 20cppcon pdf eberhard grather make optional optional lightning 20talks 20and 20lunch 20sessions make 20optional 20optional make 20optional 20optional 20roland 20bock 20cppcon pdf roland bock quick bench lightning 20talks 20and 20lunch 20sessions quick 20bench quick 20bench 20fred 20tingaud 20cppcon pdf fred tingaud refactor die lightning 20talks 20and 20lunch 20sessions refactor 20or 20die refactor 20or 20die 20mikhail 20matrosov 20cppcon pdf mikhail matrosov pdf lightning 20talks 20and 20lunch 20sessions refactor 20or 20die refactor 20or 20die 20mikhail 20matrosov 20cppcon pdf pptx lightning 20talks 20and 20lunch 20sessions refactor 20or 20die refactor 20or 20die 20mikhail 20matrosov 20cppcon pptx regular expression redefine lightning 20talks 20and 20lunch 20sessions regular 20expressions 20redefined 20in 20c regular 20expressions 20redefined 20in 20c 20hana 20dusikova 20cppcon pdf hana dusikova scm challenge unique word lightning 20talks 20and 20lunch 20sessions scm 20challenge 20unique 20words scm 20challenge 20unique 20words 20arthur 20o 27dwyer 20cppcon pdf arthur dwyer sign integer fast correct lightning 20talks 20and 20lunch 20sessions sign 20integers 20faster 20and 20correcter sign 20integers 20faster 20and 20correcter 20john 20mcfarlane 20cppcon pdf john mcfarlane solve bug via lateral think lightning 20talks 20and 20lunch 20sessions solve 20a 20bug 20via 20lateral 20thinking solve 20a 20bug 20via 20lateral 20thinking 20giuseppe 20d 27angelo 20cppcon pdf giuseppe angelo speed preprocessor lightning 20talks 20and 20lunch 20sessions speed 20up 20preprocessor speed 20up 20preprocessor 20ivan 20sorokin 20cppcon pdf ivan sorokin std exchange idiom lightning 20talks 20and 20lunch 20sessions std 20exchange 20idioms std 20exchange 20idioms 20ben 20deane 20cppcon pdf ben deane amaze disappear reappear trigraphs lightning 20talks 20and 20lunch 20sessions 20amazing 20disappearing 20reappearing 20trigraphs 20amazing 20disappearing 20reappearing 20trigraphs 20paul 20hampson 20cppcon pdf paul hampson peril implement pdfs lightning 20talks 20and 20lunch 20sessions 20perils 20of 20implementing 20code 20from 20pdfs 20perils 20of 20implementing 20code 20from 20pdfs 20ben 20combee 20cppcon pdf ben combee universal memoization decorator lightning 20talks 20and 20lunch 20sessions universal 20memoization 20decorator universal 20memoization 20decorator 20victor 20komarov 20cppcon pdf victor komarov whitespace comment lightning 20talks 20and 20lunch 20sessions whitespace 20comments 20code whitespace 20comments 20code 20walter 20e 20brown 20cppcon pdf walter brown poster hybrid approach game engine architecture poster 20hybrid 20approach 20to 20game 20engine 20architectures 20hybrid 20approach 20to 20game 20engine 20architectures 20allan 20deutsch 20and 20aaron 20kitchen 20cppcon pdf allan deutsch aaron kitchen best practice constructor template argument deduction poster best 20practices 20for 20constructor 20template 20argument 20deduction best 20practices 20for 20constructor 20template 20argument 20deduction 20mike 20spertus 20cppcon pdf mike spertus datetime program everyone everywhere poster datetime 20programming 20for 20everyone 20everywhere datetime 20programming 20for 20everyone 20everywhere 20tai 20meng 20cppcon pdf tai meng end end deadlock debug tool facebook poster end end 20deadlock 20debugging 20tools 20at 20facebook end end 20deadlock 20debugging 20tools 20at 20facebook 20kenny 20yu 20cppcon pdf kenny iteration intersection set linear time poster iteration 20over 20the 20intersection 20of 20n 20sets 20in 20linear 20time iteration 20over 20the 20intersection 20of 20n 20sets 20in 20linear 20time 20andrew 20aldwell 20and 20allan 20deutsch 20cppcon pdf andrew aldwell allan deutsch simple micro benchmark quick bench com poster simple 20c 20micro 20benchmarks 20with 20quick bench com simple 20c 20micro 20benchmarks 20with 20quick bench com 20fred 20tingaud 20cppcon pdf fred tingaud smartref start smart reference today poster smartref 20start 20using 20smart 20references 20in 20your 20code 20today smartref 20start 20using 20smart 20references 20in 20your 20code 20today 20erik 20valkering 20cppcon pdf erik valkering sourcetrail navigation system software engineer poster sourcetrail 20the 20navigation 20system 20for 20software 20engineers sourcetrail 20the 20navigation 20system 20for 20software 20engineers 20eberhard 20gr a4ther 20cppcon pdf eberhard grather understand runtime behavior program uftrace tool poster understand 20the 20runtime 20behaviors 20of 20c 20programs 20using 20uftrace 20tool understand 20the 20runtime 20behaviors 20of 20c 20programs 20using 20uftrace 20tool 20honggyu 20kim 20and 20namhyung 20kim 20cppcon pdf honggyu kim namhyung kim
C C++;https://github.com/gansm/finalcut;final cut misc logo svg finalcut logo svg library create terminal application text base widget final cut class library widget toolkit full mouse doc mouse control title bar action mouse click support create text base user library support programmer develop application text console allow simultaneous handle multiple text window screen structure framework originally inspiration class design final cut provide common control like dialog box push button check box radio button input line list box status bar analysis badge late release late license class reference arm arm freebsd freebsd netbsd netbsd openbsd openbsd macos macos cygwin cygwin solaris solaris codeql analysis codeql lgtm language grade coverity scan coverity scan sonarcloud quality codefactor installation support platform linux freebsd netbsd openbsd macos cygwin gnu hurd solaris documentation see first step documentation doc first step first step final cut widget toolkit information library frequently ask question general question final cut likely answer already include faq doc faq frequently ask question screenshots ffiledialog widget incremental name search ffiledialog doc fileopen dialog png final cut fprogressbar widget fprogressbar doc progress bar png scrollable text ftextview widget ftextview doc textview png mandelbrot set mandelbrot set doc mandelbrot png final cut newfont graphical text font final font x11 linux console newfont mode doc newfont1 png newfont drive symbol drive symbol doc newfont2 png calculator newfont mode calculator doc calculator png benchmark find test measure character speed doc benchmark benchmark terminal virtual terminal final cut virtual terminal print character via update method screen provide overlie layer virtual window realization window movement update method transfer difference virtual terminal physical screen print printf vterm createvterm restorevterm vwin createarea area putarea area putarea area getarea area resizearea area resizevterm putvterm updateterminalline updateterminal output_buffer flushoutputbuffer putchar char screen real terminal class digramm ftermlinux ftermfreebsd ftermopenbsd ftermdetection ftermcapquirks fkeyevent ftermxterminal fmouseevent ftermcap fwheelevent ftermios ffocusevent fcolorpalette faccelevent foptimove fresizeevent foptiattr fshowevent fkeyboard fhideevent fmousecontrol fcloseevent fsystem ftimerevent fstring fuserevent fdata fstringstream flog flogger fpoint frect fapplication fsize flabel flineedit fterm fspinbox foutput ftermoutput fbutton fevent fbuttongroup fradiobutton fvterm fwidget ftogglebutton fcheckbox fobject fprogressbar fswitch fwidgetcolors fscrollbar ftextview fcombobox fdropdownlistbox fvtermbuffer flistbox flistboxitem flistview flistviewitem fscrollview fdata fstatusbar fstatuskey ffiledialog fwindow fdialog fmessagebox ftooltip fbusyindicator fmenubar fmenulist fmenu fdialoglistmenu fcheckmenuitem fmenuitem fradiomenuitem please send bug report license gnu less general public license version width align right alt lgplv3
C C++;https://github.com/BVLC/caffe;caffe caffe deep framework make expression speed modularity mind develop berkeley research berkeley vision center bvlc community contributor check project detail like diy deep vision tutorial bair reference community installation step step custom distribution intel optimize cpu support multi node particular intel xeon processor opencl amd intel device window community join chat please join caffe user gitter ask question talk method framework development discussion thorough bug report collect happy brew license citation caffe release bsd clause bair bvlc reference release unrestricted please cite caffe publication help research article jia2014caffe author jia yangqing shelhamer evan donahue jeff karayev sergey long jonathan girshick ross guadarrama sergio darrell trevor journal arxiv preprint arxiv title caffe convolutional architecture fast feature embed year
C C++;https://github.com/AshampooSystems/boden;readme boden github svg boden cross platform framework purely native cross platform experience boden feedback doc doc boden demo gif native widget instead draw widget look nearly identical platform design boden native oem widget ensure app always truly native look feel fast boden write modern make development easy apps fast battery friendly open boden open framework welcome contribution feedback community want shape development boden meet requirement note beta release boden api yet fully complete stable table content get start get start first boden application first boden application hello world hello world documentation documentation license license contact feedback contact feedback get start prerequisite mac macos xcode cmake window window cmake oracle jdk android android ndk see installation detail ubuntu sudo apt update sudo apt git cmake ninja python3 distutils openjdk jdk qemu kvm plus android android ndk see installation detail step clone boden repo git clone recurse submodules step generate open ide project boden boden open bodendemo bring xcode macos android studio linux window anything wrong please make sure dependency instal set correctly check extend guide help boden boden boden step boden application xcode select bodendemo target hit cmd android studio select bodendemo target hit shift f10 first boden application create first boden app open terminal command prompt change local boden directory execute follow command boden new awesomeapp awesomeapp boden open create new folder name awesomeapp generate source project simple hello world cross platform application last command prepare open xcode project mac android studio project linux window xcode select awesomeapp target press cmd hello world application android studio wait gradle finish sync configuration process select bodendemo target press cmd application select awesomeapp target press ctrl mac shift f10 linux window hello world application note macos linux also simply type boden instead call boden explicitly want android version app macos boden open android hello world quick look source generate boden new command mainviewcontroller cpp interest part source generate hello world application main view controller instantiate application launch responsible set application user interface detail first create new window set title awesomeapp get automatic layout yogalayout layout set default window size instantiate new button set label hello world button control display set window content view finally make window visible documentation find full boden boden documentation still work progress find information look please hesitate ask open github contact directly contact feedback license may license boden follow open source license gnu general public license version license gpl gnu general public license version license gpl gnu less general public license version license lgpl gnu less general public license version license lgpl commercial proprietary license please contact boden team ashampoo system com contact feedback happy feedback get touch stay date boden follow twitter join boden google email boden team ashampoo system com mailto boden team ashampoo system com find something miss work please consider open github
C C++;https://github.com/arangodb/linenoise-ng;linenoise next generation small portable gnu readline replacement linux window macos capable handle utf character unlike gnu readline gpl library bsd license kind program origin linenoise base work salvatore 10gen inc goal create config bsd license readline replacement usable apache2 bsd license program feature single line multi line edit mode usual key bind implement history handle completion bsd license source subset vt100 escape ansi sys compatible utf8 aware support linux macos window deviate salvatore original goal minimal readline replacement sake support utf8 window deviate 10gen inc goal create interface linenoise library internally user provide pure interface compatible original linenoise api interface requirement library need enable compiler recent version cmake instruction library linux first create directory library library default target location default installation location adjust set destdir variable invoke make library window command command prompt invoke appropriate command create target environment bite cmake visual studio dcmake_build_type release bite cmake visual studio win64 dcmake_build_type release open generate linenoise sln subdirectory visual studio note follow section readme original linenoise repository partly outdated line edit library 20k line line edit support history really important feature command line utility instead retyping almost stuff much good hit arrow edit syntax error order try slightly different command apparently deal terminal sort black magic readline 30k line libedit 20k reasonable link small utility huge library get minimal support line edit usually happen either large program configure script disable line edit readline present system support since readline gpl license libedit bsd clone know available readline real world problem tclsh small program configure script support line edit problem redis cli instance pollution binary without line edit support salvatore spend hour reality check little library really need line edit library 20k line apparently possibe get small configuration trivial embed library solve problem small program include supporing line edit box large program may little library check configure readline libedit available resort linenoise terminal apparently almost every terminal happen today kind support basic vt100 escape sequence salvatore try write lib basic vt100 feature library appear work everywhere salvatore try work even ansi sys compatible terminal since vt220 specific sequence anymore original library currently line order project look source distribution trivial linenoise bsd free software commercial software test linux text console term linux linux kde terminal application term xterm linux xterm term xterm linux buildroot term vt100 mac iterm term xterm mac default terminal app term xterm openbsd osx terminal app term screen ibm aix freebsd xterm term xterm ansi sys emacs comint mode term dumb window please test everywhere report back let push forward patch provide respect linenoise sensibility small easy understand license restriction extension must submit bsd license style contributor license require contribution
C C++;https://github.com/xtaci/algorithms;algorithm structure status goal classical algorithm base linux gcc demo correct ease header per algorithm convention hinclude header per algorithm demosrc demo per algorithm pull request readme please fork pull request correctness important tab space set vim graph dot output format graph dot graphviz demograph demo_graph png implement name array prime test trial prime test miller rabin arbitrary linear congruential maximum subarray binary fibonacci priority queue list bubble selection insertion radix merge double link skip large common binary search avl dynamic order red black interval prefix suffix suffix hash hash universal hash perfect java string fnv string bloom sha message digest strongly connect prim minimum span kruskal breadth first depth first dijkstra bellman ford edmonds karp maximal push relabel huffman word knuth morris pratt queen lca binary contributor samana heavy work msvc compatability wycg1984 mean xmuliang heapsort kruskal mst wyh267 base64 lru bubble sort selection sort zhangyou0122 push relabel algorithm suffix tree usingtcnower suffix array afernandez90 avl tree
C C++;https://github.com/kaldi-asr/kaldi;gitpod kaldi speech recognition toolkit toolkit see instruction valid unix system include various flavor linux darwin cygwin test exotic variety unix window installation instruction exclude cygwin see window system see egs readme txt encounter problem probably please hesitate contact developer see addition specific question please let know specific aspect project feel could improve find confuse etc miss feature wish kaldi information channel hot news kaldi see project documentation info project description technique tutorial cod doxygen reference kaldi forum mail different list user list kaldi help developer list kaldi developer sign mail list development pattern contributor create personal main kaldi github make change name branch different master create branch awesome feature generate pull web interface github general rule please follow google style exception google verify free basic mistake platform specific note powerpc 64bits little endian ppc64le kaldi expect work box rhel ubuntu openblas atlas cuda cuda driver ppc64le find ibm available guide configure cuda android kaldi support cross compile android android ndk clang openblas see blog detail web assembly kaldi support cross compile web assembly browser execution clapack see step step description process
C C++;https://github.com/orangeduck/tgc;tiny garbage collector tgc tiny garbage collector write line base cello garbage usage tgc conservative thread local mark sweep garbage collector support destructors automatically free memory allocate tgc_alloc friend become _unreachable_ memory allocation consider _reachable_ tgc pointer point locate stack least function call deep call tgc_start pointer point inside memory allocate tgc_alloc friend otherwise memory allocation consider _unreachable_ therefore thing _don qualify allocation _reachable_ pointer point address inside start pointer point inside static segment pointer point memory allocate malloc calloc realloc non tgc allocation method pointer point different thread pointer point unreachable location give condition tgc free memory allocation time become _unreachable_ perform iteration _mark sweep_ tgc_alloc call number memory allocation exceed threshold also manually tgc_run memory allocate tgc_alloc manually free tgc_free destructors function memory free register tgc_set_dtor reference start garbage collector current thread begin stack location give stk variable usually find address local variable garbage collector cover memory least function call deep stop garbage collector free internal memory iteration garbage collector free unreachable memory pause resume garbage collector pause garbage collector allocation make allocate memory via garbage collector automatically free become unreachable allocate memory via garbage collector initalise reallocate memory allocate garbage collector manually free allocation make garbage collector destructor register allocate memory via garbage collector give flag destructor flag argument flag tgc_root may specify indicate allocation garbage collection _root_ automatically free instead manually free user tgc_free root automatically free exist normally unreachable location static segment memory allocate malloc flag tgc_leaf may specify indicate allocation garbage collection _leaf_ contain pointer allocation inside benefit performance many case allocate large string point garbage collector scan allocation take long time contain pointer otherwise flag argument set dtor argument let user specify _destructor_ function memory free destructors many often automatically release system resource handle structure finish destructor value null allocate memory via garbage collector give flag destructor initalise register destructor function call memory allocation ptr become unreachable free garbage collector set flag associate memory allocation value tgc_root specify allocation garbage collection root get flag associate memory allocation get destructor associate memory allocation get size memory allocation real safe portable definitely way create _completely_ safe portable garbage collector collector platform specific trick make basic assumption platform architecture continuous call stack implement function frame _should_ safe reasonable architecture find wild test linux window osx easily integrate several large real world program see bzip2 oggenc without issue say normal warn library perform _undefined behaviour_ specify standard risk guarantee something like compiler update mysteriously break happen happen look like pointer unlikely case tgc treat pointer assume memory allocation point still reachable cause application trouble allow large memory allocation free consider free manually tgc_free tgc work increment pointer due way tgc work always need pointer start memory allocation reachable break algorithm follow work incrementing pointer incremented long point start memory allocation make tgc_alloc do_some_processing sweep perform declare unreachable memory free pointer also store elsewhere inside heap structure issue incrementing copy time need worry occasionally may need adjust algorithm significant pointer arithmetic case pointer leave integer index instead behaviour tgc think way deal offset pointer nicely tgc work optimisation enable variable consider reachable function call shallow call tgc_start optimisation enable somtimes compiler inline function remove level indirection portable way get compiler inline function call volatile function pointer tgc work setjmp longjmp unfortunately tgc work properly setjmp longjmp since function cause complex stack behaviour simple option disable garbage collector function enable afterwards get _uninitialised values_ warn valgrind garbage collector scan stack memory naturally contain uninitialised value scan memory safely valgrind access report warn error tgc memory error valgrind easy way disable examine real problem valgrind option undef value error tgc fast moment tgc decent performance competative many exist memory management system definitely claim fast garbage collector market say fair amount low hang fruit anyone interest optimise potential fast exist work basic _mark sweep_ garbage collector thing require first thing list allocation make program second list allocation _in use_ program give time thing algorithm simple compare list free allocation first list second exactly allocation long get list allocation make progam relatively simple make programmer special function prepare case tgc_alloc allocate memory add pointer memory internal list point allocation free tgc_free remove list second list difficult list allocation _in use_ program first semantics pointer arithematic crazy flexibility come might seem like find allocation program point time impossible extent would right actually show problem reduce halt problem general case even language sane slightly adjust problem statement assume deal set _well behaved_ program form come something work first relax goal little instead try find memory allocation _in use_ program instead try find _reachable_ memory allocation allocation pointer point somewhere program memory distinction subtle important _could_ write program make allocation encode return pointer string perform rot13 string late decode string cast back pointer memory nothing happen perfectly valid program crazy memory allocation _is use_ throughout pointer rot13 encode practical way know memory allocation still late instead want make list memory allocation point pointer program memory _well behaved_ program enough tell allocation general memory exist different segment stack heap segment mean pointer certain allocation exist program memory must location challenge find location scan pointer segment difficult portable way get bound segment segment somewhat limit choose ignore tell user allocation point segment consider reachable aside programmer come language might seem like poor solution simply ask programmer store pointer allocation segment many way never good interface _request_ programmer something documentation instead good handle every edge case make impossible create error programmer constantly ask _not_ thing perfectly possible fact thing library try deal fact programmer _asked_ make sure free dynamically allocate memory system place enforce _for perfectly reasonable interface add advantage make far simple far adaptable word bad segment cover heap stack consider heap allocation make via tgc_alloc friend job make easy list allocation also store size allocation need scan memory region allocate task make easy heap segment cover leave stack tricky segment stack something control know reasonable stack continuous area memory expand downwards upwards matter function call contain important memory regard reachability local variable function get memory address top bottom stack scan memory inbetween heap memory add list reachable pointer find inbetween assume stack grow top bottom get conservative approximation bottom stack take address local variable address cover memory local variable whichever function call reason need ensure thing actually call first want make sure flush value register onto stack miss pointer hide register secondly want make sure call stack_bottom inlined compiler spill register stack memory somewhat portable way setjmp put register jmp_buf variable ensure function inlined call via volatile function pointer volatile keyword force compiler always manually read pointer value memory call function ensure inlined get top stack get address local variable time easy simply ask programmer supply programmer wish garbage collector scan whole stack give address local variable main address cover function call deep main store global local variable point get safe approximate upper low bind stack memory allow scan pointer interprit bind void pointer array pointer iterate interpriting memory inbetween pointer
C C++;https://github.com/Microsoft/CNTK;cntk chat window status linux status join chat microsoft cognitive toolkit unify deep toolkit describe neural series computational step via direct graph direct graph leaf nod represent input value parameter nod represent matrix operation upon input cntk allow user easily realize combine popular type fee forward dnns convolutional net cnns recurrent rnns lstms implement stochastic gradient descent sgd error backpropagation automatic differentiation parallelization across multiple gpus server cntk available open source license since april hope community take advantage cntk share idea quickly exchange open source work installation setup window linux cntk backend setup cntk development window linux instal nightly package prefer late cntk bit master cntk nightly package nightly package nightly package cntk contribute cntk follow resource general api evaluation documentation net pretrained pretrainedmodels license license information contribute disclaimer dear community ongoing contribution onnx onnx runtime make easy interoperate within framework ecosystem access high performance cross platform inferencing capability traditional deep neural last year privilege develop key open source machine project include microsoft cognitive toolkit enable user leverage industry wide advancement deep scale today release last main release cntk may subsequent minor release bug fix evaluate case case basis plan new feature development post release cntk release full support onnx encourage seek operationalize cntk take advantage onnx onnx runtime move forward user continue leverage evolve onnx innovation via number framework support user natively export onnx pytorch convert tensorflow onnx tensorflow onnx converter incredibly grateful support receive contributor user year since initial open source release cntk cntk enable microsoft team external user execute complex large scale workload manner deep application historical breakthrough speech recognition achieve microsoft speech researcher originator framework onnx increasingly employ serve across microsoft product bing office dedicate synthesize innovation research rigorous demand production progress ecosystem forward goal make innovation deep across software hardware stack open accessible possible work hard bring exist strength cntk new state art research open source project truly broaden reach technology gratitude cntk team microsoft open source conduct project adopt microsoft open source information see conduct contact opencode microsoft com mailto opencode microsoft com additional question comment news find news official project cntk highlight release move cuda window linux support advance rnn loop onnx export export large 2gb onnx format support fp16 brain script action cntk support cuda cntk support cuda require update environment visual studio v15 window setup runtime environment window visual studio note forward cuda beyond long require specific tool version nvidia cuda powershell devinstall ps1 tool devinstall window devinstall ps1 start visual studio open cntk sln cntk sln setup runtime environment linux docker please unbuntu docker image dockerfiles tool docker linux system please refer dockerfiles setup dependent library cntk support advance rnn loop onnx export cntk recursive loop export onnx scan ops export large 2gb onnx format export large 2gb onnx format cntk function api save self filename format modelformat cntkv2 use_external_files_to_store_parameters false format set modelformat onnx use_external_files_to_store_parameters set true case parameter save external export shall external parameter evaluation onnxruntime support visualize cntk cntk project changelog cntk efficient group convolution group convolution cntk update update move away create sub graph group convolution slice splice instead cudnn7 mkl2017 apis directly improve experience term performance size single group convolution follow attribute input tensor number output channel channel multiplier group depth wise convolution kernel size comparison number single node follow first header gpu exec time millisec avg cpu exec time millisec avg size cntk format old new speedup save approx approx approx sequential convolution sequential convolution cntk update update create separate sequential convolution layer different regular convolution layer operation convolve also dynamic axis sequence filter_shape apply axis update support broad case stride sequence axis sequential convolution batch channel black white image image fix height width variable length width represent sequential axis pad enable stride width height sequentialconvolution reduction_rank pad true stride activation relu input_variable sequence tensor shape shape shape operator depth_to_space space_to_depth break change depth_to_space space_to_depth operator update match onnx specification specifically permutation depth dimension place block spatial dimension vice versa change please refer update doc ops see change tan atan add support trigonometric ops tan atan elu add support alpha attribute elu convolution update auto pad algorithm convolution produce symmetric pad best effort cpu without affect final convolution output value update increase range case could cover mkl api improve performance resnet50 default argument order break change argument property cntk api default behavior update return argument order instead order way return argument order feed ops wish still get argument order simply override global option change affect follow ops time transposetimes gemm internal bug fix update doc convolution layer include group dilation argument add improve input validation group convolution update logsoftmax numerically stable fix gather incorrect gradient value add validation none node clone substitution add validation pad channel axis convolution add cntk native default lotusir logger fix attempt defaultlogger error load onnx add proper initialization onnx typestrtoprotomap update doctest handle different print format new version numpy version fix pool cpu produce correct output value kernel center pad input cell onnx update update cntk onnx import export onnx spec major update batch sequence handle export import complex scenario edge case handle accurately update cntk onnx batchnormalization export import late spec add domain onnx export improve error report import export onnx update depthtospace spacetodepth ops match onnx spec permutation depth dimension place block dimension add support export alpha attribute elu onnx major overhaul convolution pool export unlike ops export explicit pad situation major overhaul convolutiontranspose export import attribute output_shape output_padding pad fully support add support cntk stopgradient add onnx support topk add onnx support sequence ops sequence slice sequence first sequence last sequence reduce_sum sequence reduce_max sequence softmax ops need expand onnx spec cntk onnx exporter computation equivalent graph sequence ops add full support softmax make cntk broadcast ops compatible onnx specification handle to_batch to_sequence unpack_batch sequence unpack ops cntk onnx exporter onnx test export onnx test case toolkits validate fix hardmax softmax logsoftmax import export add support select export add import export support several trigonometric ops update cntk support onnx matmul update cntk support onnx gemm update cntk onnx meanvariancenormalization export import late spec update cntk onnx layernormalization export import late spec update cntk onnx prelu export import late spec update cntk onnx gather export import late spec update cntk onnx imagescaler export import late spec update cntk onnx reduce ops export import late spec update cntk onnx flatten export import late spec add cntk support onnx unsqueeze bug minor fix update lrn match onnx spec size attribute semantics diameter radius add validation lrn kernel size large channel size update min max import handle variadic input fix possible corruption resaving top exist onnx net support cntk core manage library officially convert net standard support net core net framework application window linux start release net developer able restore cntk nuget package new net sdk style project package management format set packagereference follow work window linux var weightparametername weight var biasparametername bias var inputname input var outputdim var inputdim variable inputvariable variable inputvariable new int inputdim datatype float inputname var weightparameter new parameter new int outputdim inputdim datatype float device weightparametername var biasparameter new parameter new int outputdim datatype float device biasparametername function modelfunc cntklib time weightparameter inputvariable biasparameter simply add itemgroup clause csproj net core application sufficient netcoreapp2 x64 bug minor fix fix string char native wstring wchar utf conversion issue linux fix multibyte wide character conversion across codebase fix nuget package mechanism pack net standard fix memory leak issue value class api dispose call upon object destruction misc cntk repack cntk third party library include bundle wheel package cntk change profiler detail output format chrome trace enable per node time work image classification mlp simplemnist per node time create item profiler detail profiler enable usage profiler detail view chrome trace cpu inference performance improvement mkl accelerate common tensor ops intel cpu inference float32 especially fully connect turn cntk cntk_py enable_cpueval_optimization cntk cntk_py disable_cpueval_optimization 1bitsgd incorporate cntk 1bitsgd source available cntk license mit license source 1bitsgd 1bitsgd target merge exist gpu target new loss function hierarchical softmax thank yaochengji contribution distribute multiple learner trainer accept multiple parameter learner distribute change different parameter different learner single session also facilitate distribute gans information please refer basic_gan_distributed image gin basic_gan_distributed cntk learner distributed_multi_learner_test bind cntk learner test distributed_multi_learner_test operator add meanvariancenormalization operator bug fix fix convergence issue tutorial 201b fix pool unpooling support free dimension sequence fix crash cntkbinaryformat deserializer cross sweep boundary fix shape inference bug rnn step function scalar broadcast fix bug mpi improve distribute aggregation speed increase pack threshold expose knob fix memory leak mkl layout fix bug cntk convert api misc converter prevent convert complex onnx update cntk export onnx onnx checker compliant add onnx support cntk optimizedrnnstack operator lstm add support lstm gru operator add support experimental onnx meanvariancenormalization add support experimental onnx identity add support export cntk layernormalization layer onnx meanvariancenormalization bug minor fix axis attribute optional cntk onnx concat operator bug fix onnx broadcast scalar bug fix onnx convtranspose operator backward compatibility bug fix leakyrelu argument alpha revert type double misc add new api find_by_uid cntk log graph cntk support nightly prefer late cntk bit master cntk nightly package nightly package nightly package alternatively also click correspond badge land nightly page cntk highlight move cuda9 cudnn visual studio remove support add volta gpu fp16 support good onnx support cpu perf improvement ops ops top_k operation forward pas compute top large value correspond index along specify axis backward pas gradient scatter top element element top get gradient gather operation support axis argument squeeze expand_dims operation easily remove add singleton zeros_like ones_like operation many situation rely cntk correctly broadcast simple sometimes need actual tensor depth_to_space rearrange element input tensor depth dimension spatial block typical operation implement sub pixel convolution image super resolution space_to_depth rearrange element input tensor spatial dimension depth dimension largely inverse depthtospace sum operation create new function instance compute element wise sum input tensor softsign operation create new function instance compute element wise softsign input tensor asinh operation create new function instance compute element wise asinh input tensor log_softmax operation create new function instance compute logsoftmax normalize value input tensor hard_sigmoid operation create new function instance compute hard_sigmoid normalize value input tensor element_and element_not element_or element_xor element wise logic operation reduce_l1 operation compute norm input tensor element along provide reduce_l2 operation compute norm input tensor element along provide reduce_sum_square operation compute sum square input tensor element along provide image_scaler operation alteration image scale individual value onnx several improvement onnx support cntk update update onnx reshape handle inferreddimension add producer_name producer_version field onnx handle case neither auto_pad pad atrribute specify onnx conv bug fix fix bug onnx pool serialization bug fix create onnx inputvariable batch axis bug fix update onnx transpose match update spec bug fix update onnx conv convtranspose pool ops match update spec operator group convolution fix bug group convolution output cntk convolution change group optimize group convolution expect next release good error report group convolution convolution layer halide binary convolution cntk optional library cntk binaryconvolution dll library netopt module library contain optimize binary convolution operator perform good base binarized convolution operator enable halide please halide set halide_path environment varibale start linux configure halide directory enable information feature please refer see release get release cntk release
C C++;https://github.com/ComputationalRadiationPhysics/alpaka;transfer alpaka repository update local git upstream repository origin please follow command
C C++;https://github.com/amrayn/easyloggingpp;banner manual status status node bind github look maintainer quick link late note changelog changelog sample sample sample table content overview yet another library feature glance get start quick start optional set application argument configuration level configure configuration configuration class line configuration default configuration global configuration log format specifier date time format specifier custom format specifier log flag application argument configuration macro read configuration log basic conditional log occasional log printf like log log verbose log basic conditional occasional verbose level check verbose log vmodule register new logger unregister logger populate exist logger share log repository extra feature performance track conditional performance track make performance track log rotate crash handle instal custom crash handler stacktrace multi thread check macro log perror syslog stl log support template log boost log wxwidgets log extend library log class log third party class manually flush roll log log dispatch callback logger registration callback asynchronous log helper class contribution submit patch report bug compatibility matrix licence disclaimer overview easylogging single header efficient log library application extremely powerful highly extendable configurable user requirement provide ability write _sinks_ sample send via feature refer logdispatchcallback library currently open source project open source source control management sit manual easylogging version please refer correspond github may also interest log server top goto top table content yet another library work small utility large project library handy base single header require link single source originally header change source issue still header library design various thought mind portability performance usability feature easy setup yet another library well answer pretty straight forward write fix issue raise github addition personally see log library base single header design configure extend need get fast performance see single header log library either external library boost support certain feature like thread regular expression date etc library everything prevent usage external library like library fact love project library could take risk depend top goto top table content feature glance easylogging feature rich contain many feature typical advance developer require write software highly configurable configuration extendable extend library extremely fast thread multi thread type safe cross platform compatibility custom log pattern log format specifier conditional occasional log conditional log performance track performance track verbose log verbose log crash handle crash handle helper check macro check macro stl log stl log send syslog syslog third party library log boost wxwidgets etc log third party class extensible log class third party class log class many extra feature top goto top table content get start late version late release please visit release application support please consider stable version lack feature top goto top table content quick start order get start easylogging follow easy step late version include project easylogging easylogging initialize single macro compile simple please note initialize_easyloggingpp otherwise end get compilation error definition several extern variable mean define per application best place put initialization statement int main int char function define right last include statement optional want header system wide via follow option support easylogging cmake turn option lib_utc_datetime define elpp_utc_datetime build_static_lib static library easylogging say still need easylogging order compile header please check low alternatively easyloggingpp dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg easyloggingpp easyloggingpp port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository top goto top table content set application argument always recommend pas application argument easylogging feature easylogging require set application argument verbose log set verbose level vmodules explain late order helper macro helper class top goto top table content configuration level order start configure log library must understand severity level easylogging deliberately hierarchical log order fully control enable say still option hierarchical log loggingflag hierarchicallogging easylogging follow level order hierarchical level level description global generic level represent level useful set global configuration level trace information useful back trace certain event mostly useful debug log debug informational event useful developer debug application applicable ndebug define non _debug define fatal severe error event presumably lead application abort error error information continue application keep warn information represent error application application keep info mainly useful represent current progress application verbose information highly useful vary verbose log level verbose log applicable hierarchical log unknown applicable hierarchical log turn log completely top goto top table content configure easylogging easy configure possible way configuration configuration class inline configuration configuration configuration load runtime configuration class follow format level name start star end colon highly recommend start configuration global level configuration specify automatically configuration global set filename global want level filename set explicitly level library configuration value global automatically follow table contain configuration support configuration configuration name type description enable bool determine whether correspond level logger enable may disable log level global to_file bool whether write correspond log log to_standard_output bool whether write log standard output terminal command prompt format char determine format pattern log correspond level logger filename char determine log full path write log correspond level logger subsecond_precision uint specify subsecond precision previously call millisecond width width within range performance_tracking bool determine whether performance track enable depend logger level performance track always performance logger unless specify max_log_file_size size_t log size correspond level specify size log truncate log_flush_threshold size_t specify number log entry hold flush pending log please double quote anywhere comment might end unexpected behaviour sample configuration explanation configuration content sample straightforward start global level order override level explicitly define subsequent level override configuration global level except debug format datetime log message debug level date day month source function log message rest configuration debug global also notice debug format specify date format default format default value date time information format specifier please refer date time format specifier datetime format specifier section usage configuration convert configuration object constructor ever need like top goto top table content configuration class set configuration reset configuration configuration need set happy default configuration may well top goto top table content line configuration inline configuration mean set configuration std string make sure add new line character etc recommend always messy set configuration object still need configure logger configuration top goto top table content default configuration wish configuration exist future logger logger setdefaultconfigurations configuration configuration bool configureexistingloggers false useful work fairly large scale third party library already easylogging newly create logger default configuration wish configure exist logger well set second argument true default false top goto top table content global configuration level global nothing global configuration concept register configuration logger even register new logger configuration syntax configuration logger start dash write global configuration configure logger register new single function please note possible register new logger global configuration without define configuration must define least single configuration way register logger discus log log section top goto top table content log format specifier customize format log follow specifier specifier replace logger logger thread thread std thread available otherwise getcurrentthreadid window thread_name helper setthreadname set name current thread setthreadname see thread name sample sample stl thread name cpp level severity level info debug error warn fatal verbose trace levshort severity level short version info respectively vlevel verbosity level applicable verbose log datetime date time pattern customizable see date time format specifier user user currently application host computer name application name source full path feature subject availability __file__ macro compiler fbase name source base name line source line number feature subject availability __line__ macro compile func log function loc source filename line number log separate colon msg actual log message escape character level write level subject compiler availability certain macro __line__ __file__ etc top goto top table content date time format specifier customize date time format follow specifier specifier replace day month pad day week short mon tue wed thu fri sit sun day week long monday tuesday wednesday thursday friday saturday sunday month pad month short jan feb mar apr may jun jul aug sep oct nov dec month long january february march april may june july august september october november december year digit etc year digit etc hour hour format hour hour format minute pad second pad subsecond part precision configure configurationtype subsecondprecision designation escape character please note date time limit character top goto top table content custom format specifier also specify format specifier order helper installcustomformatspecifier perfect ip_addr tcp server application top goto top table content log flag form part log set log flag flag support flag description newlineforcontainer make sure new line container log entry allowverboseifmodulenotspecified make sure vmodule specify module verbose log allow via module say param vmodule main verbose log write call something cpp flag enable log write otherwise disallow note defeat purpose vmodule logdetailedcrashreason handle crash default detail crash reason log well disable default issue disableapplicationabortonfatallog allow disable application abortion log fatal level note apply default crash handler application abort crash signal handle add default issue immediateflush flush log every log entry performance sensitive disable default strictlogfilesizecheck make sure log size check every log coloredterminaloutput terminal output colorful support terminal multiloggersupport enable support multiple logger log single message clog info default log default logger disableperformancetrackingcheckpointcomparison disable checkpoint comparison disablevmodules disable usage vmodules disablevmodulesextensions disable vmodules extension mean vmodule vmodule main cover everything start main define cover start main end follow extension cpp cxx inl hxx hpp please note follow vmodule correct vmodule main macro define check main notice double dot want valid look log flag allowverboseifmodulenotspecified wildcards support hierarchicallogging enable hierarchical log applicable verbose log createloggerautomatically create logger automatically available autospacing automatically add space log info dodge output dodge fixedtimeformat applicable performance track prevent format time log instead format sec ignoresigint application crash ignore interruption signal set unset flag static logger addflag logger removeflag check see certain flag available logger hasflag function take strongly type enum loggingflag set flag log flag command line arg need enable functionality define macro elpp_logging_flags_from_arg need make sure start_easyloggingpp argc argv configure argument also set default initial flag elpp_default_logging_flags set numerical value initial flag top goto top table content application argument follow table explain command line argument may define certain behaviour need initialize application argument start_easyloggingpp argc argv main int char function argument description activate maximum verbosity activate verbosity upto verbose level valid range verbose activate maximum verbosity vmodule module_name activate verbosity start main level rest depend log flag allowverboseifmodulenotspecified please see log flag section module separate comma please note vmodules last order precedence check argument verbose log application argument vmodules vmodules ignore log flag set log flag set log flag newlineforcontainer allowverboseifmodulenotspecified see log flag section detail value see macro section disable function default log set default log exist future logger may want consider define elpp_no_default_log_file prevent creation default empty log pre process see macro section disable function top goto top table content configuration macro log option set macro thoughtful decision elpp_thread_safe define thread safe functionality enable otherwise disable make sure head thread safety make easy remember prevent possible conflict macro start elpp_ note macro define follow way define macro option compiler case source cpp delpp_syslog delpp_thread_safe recommend way define macro inside easylogging define macro macro name description elpp_debug_assert_failure abort application first assertion failure assertion due invalid input invalid configuration etc elpp_unicode enable unicode support log require start_easyloggingpp elpp_thread_safe enable thread safety make sure lpthread link linux elpp_force_use_std_thread force standard library thread useful elpp_thread_safe elpp_feature_crash_log applicable gcc enable stacktrace application crash elpp_disable_default_crash_handling disable default crash handle helper setcrashhandler handler elpp_disable_logs disable log preprocessing elpp_disable_debug_logs disable debug log preprocessing elpp_disable_info_logs disable info log preprocessing elpp_disable_warning_logs disable warn log preprocessing elpp_disable_error_logs disable error log preprocessing elpp_disable_fatal_logs disable fatal log preprocessing elpp_disable_verbose_logs disable verbose log preprocessing elpp_disable_trace_logs disable trace log preprocessing elpp_force_env_var_from_bash environment variable could find force alternative bash command find value whoami username macro ld_preload library already easylogging end stack overflow process popen see issue detail elpp_default_log_file full filename want initial create need embed value macro quote delpp_default_log_file log gtest log note double quote inside single quote double quote value const char single quote specify value macro elpp_no_log_to_file disable log initially elpp_no_default_log_file want initialize library default log define macro log null device unix window platform may get error need elpp_default_log_file platform null device welcome elpp_fresh_log_file never append log whenever log create care may cause unexpected user elpp_debug_errors wish find internal error raise easylogging configuration something else enable define macro get error standard output terminal command prompt elpp_disable_custom_format_specifiers forcefully disable custom format specifier elpp_disable_logging_flags_from_arg forcefully disable ability set log flag command line argument elpp_disable_log_file_from_arg forcefully disable ability set default log command line argument elpp_winsock2 window system force winsock2 instead winsock win32_lean_and_mean define elpp_custom_cout advance resolve value define elpp_custom_cout qdebug define elpp_custom_cout std cerr value standard output instead std cout elpp_custom_cout_line advance elpp_custom_cout define write log line custom cout define elpp_custom_cout_line msg qstring fromstdstring msg trim elpp_no_check_macros define check macro elpp_no_debug_macros define debug macro elpp_utc_datetime utc time instead local time essentially gmtime instead localtime family function elpp_no_global_lock lock whole storage dispatch care see issue top goto top table content read configuration wish read configuration certain logger typedconfigurations function logger class top goto top table content log log easylogging collection macro make easy user prevent know unnecessary great detail thing basic provide basic macro order write log log level clog level logger log default logger clog custom log specify logger level please refer configuration level section different logger might different configuration depend need may well write custom macro access custom logger also different macro verbose log explain section simple macro initialize easylogging another way macro log associate macro define macro elpp_default_logger elpp_default_performance_logger logger already register log macro automatically specify logger instead default logger please note define source instead header include header accidently invalid logger quick also write log logger class directly feature available compiler support variadic template explore look sample stl logger log function cpp top goto top table content conditional log easylogging provide certain aspect log aspect conditional log log write certain condition fulfil come handy situation helper macro end _if log_if condition level clog_if condition level logger macro available verbose log begin vlog_if cvlog_if see verbose log section information may complicate condition want depend need top goto top table content occasional log occasional log another useful aspect log easylogging mean log write hit certain time part certain time every 10th hit 100th hit 2nd hit helper macro end _every_n log_every_n level clog_every_n level logger hit count base log way log well base hit count useful macro log_after_n level log reach hit count log_n_times level log time version macro available debug mode macro start debug follow name dlog log debug mode _debug define ndebug undefined top goto top table content printf like log compiler support variadic template ability log like printf available logger class feature thread type safe macro like log info etc step pull register logger logger getlogger log function difference printf log function require arg type safety instead custom format specifier escape follow various function signature info const char const const args warn const char const const args error const char const const args debug const char const const args fatal const char const const args trace const char const const args verbose int vlevel const char const const args simple func line loc format specifier work printf like log top goto top table content log send message implement way log dispatcher api write fully work sample purpose please see send sample sample send top goto top table content verbose log basic verbose log useful every software record information usual useful troubleshoot follow verbose log specific macro vlog verbose level cvlog verbose level logger top goto top table content conditional occasional log verbose log also conditional occasional log aspect vlog_if condition verbose level cvlog_if condition verbose level loggerid vlog_every_n verbose level cvlog_every_n verbose level loggerid vlog_after_n verbose level cvlog_after_n verbose level loggerid vlog_n_times verbose level cvlog_n_times verbose level loggerid top goto top table content verbose level verbose level level verbosity range verbose level active unless either set application argument please read application argument application argument section understand verbose log order change verbose level fly please logger setverboselevel base type verboselevel aka logger setverboselevel int function check current verbose level logger verboselevel top goto top table content check verbose log macro vlog_is_on verbose level check see certain log source specify verbose level return boolean embed condition top goto top table content vmodule vmodule functionality verbose log mention table specify verbosity module source follow explanation vmodule start vmodule loggingflag disablevmodulesextensions flag set vmodule completely disable add flag loggingflag disablevmodules loggingflag allowverboseifmodulenotspecified flag main parser bad good enough explanation verbosity follow allow main cpp cxx inl hxx hpp parser cpp cxx inl hxx hpp log verbose level loggingflag allowverboseifmodulenotspecified flag main parser explanation fall specify module verbose log enable order change vmodules fly instead via command line args logger setvmodules const char const char represent module main parser per top goto top table content register new logger logger unique logger repository register new logger way would get logger getlogger logger helper class function take params first second boolean optional whether register new logger already exist return pointer exist newly create logger class second param optional default true set false logger exist already return nullptr default easylogging register logger internal logger default logger default performance logger performance syslog logger elpp_syslog macro define syslog wish register new logger say business register new logger already exist otherwise get exist pas false second param logger already exist businesslogger nullptr register new logger default configuration see default configuration section also worth notice logger case sensitive top goto top table content unregister logger may unregister logger logger except default really careful function unregister logger create otherwise may end unexpected error want unregister logger initialize third party library may unregister logger logger unregisterlogger logger top goto top table content populate exist logger although rare situation wish get list logger currently repository may logger populateallloggerids std vector function list pas clear fill exist logger top goto top table content share log repository advance log share log repository share static library even library application rare case good follow let say application easylogging configuration import library easylogging want access log repository main application way instead initialize_easyloggingpp share_easyloggingpp access function repository instead initialize_easyloggingpp initialize_null_easyloggingpp helper setstorage base type storagepointer share repository reconfigure repository application library write log top goto top table content extra feature easylogging feature rich log library apart feature already mention extra feature snippet make sense sample need many sample available github repository sample feel free browse around feature require define macro mark prerequisite section enable reduce compile time want enable feature define elpp_feature_all performance track prerequisite define macro elpp_feature_performance_tracking notable feature easylogging ability track performance function block function please note backward compatible previously macro user must define order track performance sure many user avoid read readme old way new way track performance much easy reliable need macro want start track timed_func name timed_scope name block name timed_block name block name usleep execution iter follow macro line timed_func object pointer name timerobj line timed_scope object pointer name timerblkobj block name heavy iter notice block name throw log every hit note timed_func timed_scope block name function name might wonder need object name well easylogging performance track feature take provide ability add call checkpoint checkpoint macro performance_checkpoint time block name performance_checkpoint_with_id time block name take look follow notice macro line also note comment line checkpoint heavy iter block notice follow output also compare checkpoint sub block change performance_checkpoint timerblkobj performance_checkpoint timerobj follow output performance_checkpoint_with_id timerobj mychkpnt instead get follow useful macro define change behaviour macro name description elpp_disable_performance_tracking disable performance track elpp_performance_microseconds track microsecond include initialize base performancetracker well might time accurate note performance track performance logger info level default unless base performancetracker construct manually macro recommend configure logger make sure configure well timerobj timerblkobj type base type performancetrackerptr checkpoint routine base performancetracker access timerobj checkpoint recommend override behaviour macro behaviour like location checkpoint order access base type performancetrackerptr timed_block timerobj timer timed_block macro resolve single loop loop careful define timed_block loop allow line error may interest script parse performance top goto top table content conditional performance track want enable performance track certain condition base certain verbosity level variant timed_func_if timed_scope_if verbosity level give top goto top table content make performance track wish capture performance track right finish extend performancetrackingcallback order handler void helper installperformancetrackingcallback const std string type handler wish uninstall callback helper uninstallperformancetrackingcallback const std string see sample detail track performance handler end infinite loop top goto top table content log rotate easylogging ability roll throw away rotate log reach certain limit configure set max_log_file_size see configuration section rollout check happen easylogging flush log add flag loggingflags strictlogfilesizecheck log output feature section reference manual stuff throw away useful wish back etc helper installprerolloutcallback const prerolloutcallback handler prerolloutcallback typedef type std function please note follow feature sample sample stl logrotate cpp available basis log anything function logger would already lock multi thread application dead lock condition sure log logger feel free give try top goto top table content crash handle prerequisite define macro elpp_feature_crash_log easylogging provide ability handle unexpected crash gcc compiler active default disable define macro elpp_disable_default_crash_handling tell library handle crash late wish handle crash assign crash handler type void func int int signal catch follow signal handle sigabrt elpp_handle_sigabrt macro define sigfpe sigill sigsegv sigint stacktraces print default order define macro elpp_feature_crash_log remember stack trace available gcc compiler default handler stack trace default logger follow useful macro define change behaviour macro name description elpp_disable_default_crash_handling disable default crash handle elpp_handle_sigabrt enable handle sigabrt disable default prevent annoy ctrl behaviour wish abort top goto top table content instal custom crash handler crash handler helper setcrashhandler const base debug crashhandler handler make sure abort application end crash handler helper crashabort int fail get endless loop crash good handler wish log reason crash helper logcrashreason int bool const level const char follow default parameter function top goto top table content stacktrace prerequisite define macro elpp_feature_crash_log easylogging support stack trace print gcc compiler print stack trace anytime call base debug stacktrace format automatically note non gcc compiler end get empty output top goto top table content multi thread prerequisite define macro elpp_thread_safe easylogging thread safe default thread safety disable enable define elpp_thread_safe otherwise see unexpected intentional make library efficient single thread application top goto top table content check macro easylogging support check macro macro quickly check whether certain condition fulfill easylogging write fatal log cause application stop unless define macro prevent stop application fatal check name note check condition check condition check isloggedin log check_eq equality check check_eq getid getloggedonid invalid user log check_ne inequality check check_ne isuserblocked userid false user block check_lt check_lt check_gt great check_gt great check_le equal check_le equal check_ge great equal check_ge equal great check_notnull pointer ensure pointer null function return anything check_streq str1 str2 string equality case sensitive check_streq argv first arg check_strne str1 str2 string inequality case sensitive check_strne username1 username2 usernames check_strcaseeq str1 str2 string inequality case insensitive check_casestreq argv first arg check_strcasene str1 str2 string inequality case insensitive check_strcasene username1 username2 username allow check_bounds val min max check val fall min max range check_bounds list size index bound version macro available debug mode macro start debug follow name dcheck check debug mode _debug define ndebug undefined top goto top table content log perror easylogging support perror style log plog level plog_if condition level pcheck default logger custom logger cplog level loggerid cplog_if condition level loggerid append log error errno end log line top goto top table content syslog prerequisite define macro elpp_syslog easylogging support syslog platform syslog header platform syslog make sure define macro end error ready syslog syslog level syslog_if condition level syslog_every_n level logger syslog want custom logger csyslog level loggerid csyslog_if condition level loggerid csyslog_every_n level loggerid syslog easylogging support style stream log follow syslog support easylogging support follow level level correspond syslog priority follow info log_info debug log_debug warn log_warning error log_err fatal log_emerg follow level support correspond log_notice trace whereas verbose level completely support top goto top table content stl log prerequisite define macro elpp_stl_logging mention early easylogging log stl template include container order need define elpp_stl_logging macro enable include necessary header define necessary function performance container limit log maximum entry behaviour change change header base consts kmaxlogpercontainer recommend order log writer entry cause potential delay really concern performance may change value top goto top table content support template follow template support part stl log note basic primitive type std string long list support anyway follow list contain non basic type container bitset etc std vector std list std deque std queue std stack std priority_queue std set std multiset std pair std bitset std map std multimap specific template support explicit macro definition note also need elpp_stl_logging template macro need std array elpp_log_std_array std unordered_map elpp_log_unordered_map std unordered_multimap elpp_log_unordered_map std unordered_set elpp_log_unordered_set std unordered_multiset elpp_log_unordered_set standard manipulator also support addition std stringstream also support top goto top table content log prerequisite define macro elpp_qt_logging easylogging complete log support core library enable include header support log good follow class container support easylogging qstring qbytearray qlatin qlist qvector qqueue qset qpair qmap qmultimap qhash qmultihash qlinkedlist qstack qchar int similar stl log container also limit log entry per log change behaviour change base consts kmaxlogpercontainer header recommend performance purpose also note log container contain custom class make sure read extend library section top goto top table content boost log prerequisite define macro elpp_boost_logging easylogging support boost template follow table show template support boost container vector boost container stable_vector boost container map boost container flat_map boost container set boost container flat_set boost container deque boost container list boost container string top goto top table content wxwidgets log prerequisite define macro elpp_wxwidgets_logging easylogging support wxwidgets template follow table show template support wxstring wxvector wxlist wxstring wxhashset wxhashmap wxwidgets way declare define template wxlist wx_declare_list macro declare list order setup container log hold pointer object elpp_wx_ptr_enabled otherwise container hold actual object wxhashset elpp_wx_enabled container like wxhashmap contain value pair elpp_wx_hash_map_enabled macro may also look wxwidgets sample top goto top table content extend library extend library various callback handler inheritable class perfect feature log server library call feature rich fact may interest instead library medium large size project log class log class extend loggable class implement pure virtual function void log std ostream const follow show good way extend class top goto top table content log third party class let say third party class access make change yet loggable order make loggable make_loggable classtype classinstance outputstreaminstance make easylogging friendly follow sample show good usage another nice log std chrono system_clock time_point may practically best get point careful time consume overload log base type ostream_t make_loggable get call everytime class log top goto top table content manually flush roll log manually flush log logger flush flush single logger reference log logger flushall flush log level set flag loggingflag strictlogfilesizecheck reason manually check log need roll helper validatefilerolling logger const level top goto top table content log dispatch callback wish capture log message right dispatch class extend logdispatchcallback implement pure virtual function anytime helper installlogdispatchcallback const std string wish uninstall pre instal handler helper uninstalllogdispatchcallback const std string feature send custom destination log stash tcp client etc also look send sample send sample practical usage log anything handler end infinite loop top goto top table content logger registration callback wish capture event logger registration potentially want reconfigure logger without change default configuration loggerregistrationcallback syntax similar callback log dispatch callback basis log anything handler top goto top table content asynchronous log prerequisite define macro elpp_experimental_async asynchronous log experimental stag widely promote may enable test feature define macro elpp_experimental_async find issue feature please report report issue always help constant improvement please note asynchronous work compiler purely std thread compiler support std this_thread sleep_for restriction may may remove future stable version asynchronous log rely asynchronous log production feature experimental stag top goto top table content helper class static helper class available make easy stuff helper logger various cool stuff function class see instance top goto top table content contribution submit patch submit patch develop branch try merge since base single header sometimes difficult merge without merge conflict top goto top table content report bug find bug wish report feel free github issue try look soon possible information provide make easy reproduce platform compiler log location macro define compilation simple compilation please assign issue label try provide much information possible bug clear information ignore close top goto top table content compatibility easylogging require decent compliant compiler compiler know work show table old version please refer readme correspond release github compiler platform note gcc gcc stack trace log close support gcc support strong enum type cast underlie type cause internal compiler error llvm clang stack trace log gcc compliant intel intel workarounds support instead switch strong enum type final keyword etc stack trace log gcc compliant vcpp visual test vs2012 vs2013 argument template instead variadic template crt warn control stack trace log mingw mingw gcc version workarounds support mutex wrapper stack trace log thread window tdm tdm gcc test tdm gcc bite compiler cygwin cygwin test gcc version devcpp dev test dev tdm gcc bite compiler operate system test show table easylogging work major operate system list operate system note win10 window test bite also work bite win8 window test bite also work bite win7 window test bite also work bite winxp window test bite also work bite mac mac osx clang need std stdlib libc successfully compile scientific linux test intel gcc version compatibility mint linux mint bite mainly develop machine compatible linux compiler fedora fedora bite ubuntu ubuntu bite libstdc dev freebsd freebsd github user android android test c4droid galaxy tab raspberrypi raspberrypi test gcc version raspbian contributor solaris solaris i86 test contributor aix ibm aix support add contributor easylogging also test follow library library note test boost boost test boost wxwidgets wxwidgets test wxwidgets gtkmm gtkmm test gtkmm top goto top table content matrix branch platform status develop gnu linux ubuntu bite clang develop gnu linux ubuntu bite develop gnu linux ubuntu bite develop gnu linux ubuntu bite develop gnu linux ubuntu bite master gnu linux ubuntu bite clang master gnu linux ubuntu bite master gnu linux ubuntu bite master gnu linux ubuntu bite master gnu linux ubuntu bite top goto top table content licence top goto top table content disclaimer icon manual compatibility section solely information readability purpose icon anyone issue usage icon please feel free contact via company email look alternative company email address require verify ownership email address purpose ignore pencil icon easylogging logo give credit easylogging library top goto top table content banner ubuntu mint freebsd fedora mac winxp win7 win8 win10 boost wxwidgets devcpp gtkmm tdm raspberrypi solaris aix gcc mingw cygwin vcpp llvm intel android manual sample note top www
C C++;https://github.com/nlohmann/json;json modern coverage coverity scan codacy language grade fuzzing try github github github github average time resolve average time resolve issue cii best github design goal design goal sponsor sponsor support support bug json first class type json first class type serialization deserialization serialization deserialization stl like access stl like access conversion stl container conversion stl container json pointer json patch json pointer json patch json merge patch json merge patch implicit conversion implicit conversion conversion arbitrary type arbitrary type conversion specialize enum conversion specialize enum conversion binary format bson cbor messagepack ubjson binary format bson cbor messagepack ubjson support compiler support compiler integration integration cmake cmake package manager package manager pkg config pkg config license license contact contact thank thank third party tool third party tool project json modern project json modern note note execute unit test execute unit test design goal myriad library may even reason exist class design goal intuitive syntax language json feel like first class type operator magic modern achieve feel check know mean trivial integration whole consist single header library subproject dependency complex system class write vanilla everything require adjustment compiler flag project setting serious test class heavily cover include exceptional behavior furthermore check clang memory leak google additionally fuzz test parser effectively execute billion test far maintain high quality project follow core infrastructure initiative cii best aspect important memory efficiency json object overhead pointer maximal size union enumeration element byte default generalization follow type std string string int64_t uint64_t double number std map object std vector array bool booleans however template generalize class basic_json need speed certainly fast json however goal speed development add json support single header library way know std vector std map already set see contribution information sponsor sponsor library github label name sponsor michael stefan steve robert jefe steve thank everyone support question question please check already answer section please ask new book want library check rest readme look browse help construction want understand api good check api doxygen bug find bug please check know issue design decision please also look issue create new please provide much information possible help understand reproduce issue also documentation browser contain full offline resource beside may want check function contain separate check compile execute json first class type give idea class assume want create json object library could write note case never need tell compiler json value type want want explicit express edge case function help serialization deserialization string create json value deserialization append _json string literal note without append _json suffix pas string literal parse json string value json happy true would store string happy true rather parse actual object also express explicitly also get string representation json value serialize note difference serialization assignment return originally store string value note library support utf store string different encode library call may throw exception unless json error_handler_t replace json error_handler_t ignore error handler stream string stream also stream serialize deserialize operator work subclass std istream std ostream please note set exception bite failbit inappropriate case program termination due noexcept specifier read iterator range also parse json iterator range container accessible iterators whose value_type integral type byte interpret utf utf utf respectively instance std vector std list may leave iterators range begin end custom source since parse function accept arbitrary iterator range provide source implement legacyinputiterator concept sax interface library sax like interface follow function return value function determine whether parse proceed implement sax handler proceed follow implement sax interface class class nlohmann json_sax base class also class function describe implement public create object sax interface class my_sax call bool json sax_parse input my_sax first parameter input like string input stream second parameter pointer sax interface note sax_parse function return bool indicate last execute sax event return json value decide sax event furthermore exception throw case parse error exception object pas parse_error internally sax interface dom parser class json_sax_dom_parser well acceptor json_sax_acceptor see stl like access design json class behave like stl container fact satisfy requirement conversion stl container sequence container std array std vector std deque std forward_list std list whose value construct json value integer float point number booleans string type stl container describe section create json array hold similar associative container std set std multiset std unordered_set std unordered_multiset case order element array depend element order respective stl container likewise associative key value container std map std multimap std unordered_map std unordered_multimap whose key construct std string whose value construct json value see create json object note case multimaps key json object value depend internal order stl container json pointer json patch library support json pointer rfc alternative mean address structure value top json patch rfc allow describe difference json value effectively allow patch diff operation know unix json merge patch library support json merge patch rfc patch format instead json pointer see specify value manipulate describe change syntax closely mimic document modify implicit conversion support type implicitly convert json value recommend implicit conversion json value find detail recommendation switch implicit conversion define json_use_implicit_conversions include json hpp header cmake also achieve set option json_implicitconversions note char type automatically convert json string integer number conversion string must specify explicitly arbitrary type conversion every type serialize json stl container scalar type usually would something along line work quite lot boilerplate fortunately good way basic usage make work type need provide function call json constructor type custom to_json method automatically call likewise call get get_to your_type from_json method call important thing method must type namespace global namespace library able locate namespace person define method must available proper header must include everywhere conversion look issue error may occur otherwise get your_type must way bypass requirement describe late function from_json function access object value rather operator case key exist throw exception handle whereas operator exhibit undefined behavior need add serializers deserializers stl type like std vector library already implement simplify life macro want serialize deserialize structs to_json from_json function lot boilerplate macro make life easy long want json object serialization want member variable name object key object nlohmann_define_type_non_intrusive name member1 member2 define inside namespace class struct create nlohmann_define_type_intrusive name member1 member2 define inside class struct create macro also access private member macro first parameter name class struct remain parameter name member to_json from_json function person struct create private member nlohmann_define_type_intrusive need convert third party type require bite advance technique first let see conversion mechanism work library json serializers convert type json default serializer nlohmann json nlohmann adl_serializer adl mean argument dependent implement like simplify serializer work fine control type namespace however boost optional std filesystem path hijack boost namespace pretty bad illegal add something template specialization std solve need add specialization adl_serializer nlohmann namespace get non default constructible non copyable type way type need specialize adl_serializer well special from_json overload write serializer advance yes might want take look test suite see write serializer need thing different basic_json alias nlohmann json last template parameter basic_json jsonserializer basic_json alias template parameter to_json from_json method nlohmann to_json nlohmann from_json need adl without simplification accept type size adl careful reimplementing serializer stack overflow pay attention specialize enum conversion default enum value serialize json integer case could undesired behavior enum modify order serialize json late serialize json may undefined different enum value originally intend possible precisely specify give enum map json show nlohmann_json_serialize_enum macro declare set to_json from_json function type taskstate avoid repetition boilerplate serialization usage arbitrary type conversion arbitrary type conversion nlohmann_json_serialize_enum must declare enum type namespace global namespace library able locate default integer serialization must available proper header must include everywhere conversion important point get undefined json value default first pair specify map select default pair carefully enum json value specify map first match occurrence top map return convert json binary format bson cbor messagepack ubjson though json ubiquitous format compact format suitable exchange instance hence library support binary json concise binary object representation universal binary json specification efficiently encode json value byte vector decode vector library also support binary type bson cbor byte string messagepack bin ext fixext store default std vector process outside library support compiler though already support still bite sparse currently follow compiler know work gcc possibly late clang possibly late apple clang possibly late intel compiler possibly late nvidia cuda compiler possibly late microsoft visual tool possibly late microsoft visual tool possibly late microsoft visual tool 1def00d3d possibly late would happy compiler version please note gcc bug multiline raw string argument macro multiline raw string directly macro compiler android default old compiler library fix add follow application switch llvm library clang compiler enable feature disable default compile successfully android revision possibly late crystax android version gcc mingw android sdk error to_string member std similarly strtod strtof may occur note issue rather compiler android see new environment mingw please refer information fix bug android ndk app_stl gnustl_static please refer unsupported version gcc clang reject error directive switch define json_skip_unsupported_compiler_check note expect support case follow compiler currently continuous integration drone github compiler operate system provider apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action apple clang clang xcode macos github action gcc ubuntu 4ubuntu2 ubuntu lts github action gcc ubuntu 13ubuntu2 ubuntu lts github action gcc ubuntu 6ubuntu1 ubuntu lts github action gcc ubuntu 17ubuntu1 ubuntu lts github action gcc ubuntu 6ubuntu2 ubuntu lts github action gcc x86_64 posix seh rev0 mingw w64 project window github action gcc i686 posix dwarf rev0 mingw w64 project window github action gcc ubuntu 3ubuntu2 ubuntu lts github action gcc ubuntu 17ubuntu1 ubuntu lts github action gcc ubuntu 5ubuntu1 ubuntu lts github action gcc experimental ubuntu lts github action gcc ubuntu aarch64 drone clang 3ubuntu1 ubuntu lts github action clang 3ubuntu2 ubuntu lts github action clang 2ubuntu2 ubuntu lts github action clang 2ubuntu4 ubuntu lts github action clang 4ubuntu3 ubuntu lts github action clang 1ubuntu1 ubuntu lts github action clang ubuntu lts github action clang ubuntu lts github action clang ubuntu lts github action clang ubuntu lts github action clang ubuntu lts github action clang 4ubuntu1 ubuntu lts github action clang gnu like command line window github action clang gnu like command line window github action clang msvc like command line window github action clang ubuntu20 ubuntu lts github action clang 3ubuntu1 ubuntu lts github action clang cf15ccdeb6d5 1exp120211015003613 ubuntu lts github action clang 55c71c9eac9b 1exp120211221172954 ubuntu lts github action nvcc ubuntu lts github action visual studio msvc engine version window appveyor visual studio msvc engine version g9802d43bc3 net framework window appveyor visual studio msvc engine version g9802d43bc3 net framework window github action visual studio msvc engine version 57a23d249 net framework window github action visual studio msvc engine version 57a23d249 net framework window appveyor integration single require single_include nlohmann release need add want process json set necessary switch enable std gcc clang forward declaration installation json_fwd hpp part cmake step achieve set djson_multipleheaders cmake also nlohmann_json nlohmann_json interface target cmake target populate appropriate usage requirement interface_include_directories point appropriate include directory interface_compile_features necessary flag external library cmake project locate directly find_package namespaced import target generate package configuration package configuration nlohmann_jsonconfig cmake either tree directly tree embed embed library directly exist cmake project place entire source tree subdirectory call add_subdirectory cmakelists txt embed fetchcontent since cmake automatically repository dependency configure time note repository size huge contain benchmark might want depend small repository instance might want replace url support allow project support either externally supply embed json library pattern akin follow thirdparty nlohmann_json complete copy source tree package manager beer type brew nlohmann json set want bleed edge rather late release brew nlohmann json head see information meson add source tree meson may also include zip publish project reduce size vendored source tree alternatively get wrap meson simply meson wrap nlohmann_json please see meson project issue regard package provide meson also alternative cmake instal nlohmann_json system wide case pkg config instal simply system require nlohmann_json pkg config dependency meson prefer object subproject fallback rather subproject directly manage dependency merely add conanfile require release version want please issue experience problem package manage dependency nlohmann json please see spack issue regard package project external dependency nlohmann_json please see hunter project issue regard package library module buckaroo add github com buckaroo nlohmann json please issue demo repo project external dependency nlohmann json vcpkg nlohmann json follow display description please see vcpkg project issue regard package late development version cget nlohmann json specific version instal cget nlohmann json also multiple header version instal add djson_multipleheaders flag cget nlohmann json djson_multipleheaders library add pod nlohmann_json podfile see please issue package please check extensive package please issue package execute conda conda forge nlohmann_json please issue package type pacman mingw w64 i686 nlohmann json pacman mingw w64 x86_64 nlohmann json installation please issue experience problem package execute sudo port nlohmann json package package public repository directly package source project manifest add depend nlohmann json probably version familiar dependency build2 please read please issue experience problem package command wsjcpp get late version note change branch develop exist tag another branch check add cpm project implement follow snippet cmake pkg config bare makefiles pkg config generate include flag point library instal user meson system also able system wide library find pkg config license class contain slightly modify version grisu2 algorithm florian loitsch license mit see copyright florian class contain copy evan nemerson license class contain part google license apache contact question regard library would like invite open issue please describe request problem question detail possible also mention version library well version compiler operate system open issue github allow user contributor library collaborate instance little experience msvc issue regard solve grow community look close see react quite timely case request would contain confidential information please send email mailto mail nlohmann encrypt message please security commit niels sign pgp thank deeply appreciate help follow people implement cmake support lcov integration realize escape unicode handle string parser fix json serialization fix issue double deletion iterator class make iterators class composable library fix bug hind class compile clang tomas ablad find bug iterator joshua fix bug float point serialization aaron implement parse stream incrementally furthermore greatly improve parser class allow definition filter function discard undesired element parse daniel fix bug compilation gcc florian fix bug improve performance comparison operator eric point bug handle nan infinity value also improve performance string escape implement conversion anonymous enums patiently push forward support microsoft visual studio simplify reverse iterators help numerous hint improvement particular push forward user define type caio fix bug unicode handle fix typo daniel clean pointer implement exception safe memory allocation colin take care small namespace issue huu correct variable name documentation overload parse accept rvalue reference fix subtlety msvc type support implement get_ref function get reference store value add workaround allow compilation android ndk replace function mark unsafe visual studio fix small warn glen note potential portability problem has_mapped_type function corbin fix typo contribution guideline fix array subscript operator issue fail msvc float point parse dump add support unsigned integer number implement good roundtrip support parse number volker fix link readme add support american fuzzy lop fix readme note wrong url readme fix namespace issue int64_t uint64_t analyze issue gcc propose partial add useful note readme android robert add fix move iterators improve integration via cmake chris clean cmake tom fix subtle bug msvc also propose michael mario fix small typo find really embarrass performance regression release fix last conversion warn thomas fix warn test case adjust msvc call theo patiently constructively oversee long way toward iterator range also implement magic behind serialization deserialization user define type split single header small chunk fix minor issue documentation vasil fix documentation regard conversion std multiset overwork cmake ease project inclusion vladimir make sfinae hack readable add visual studio matrix denis fix grammar issue readme pierre antoine find subtle bug dump function point avoid much locale joggle find nice performance improvement parser improve benchmarking realize locale independent number parse print idea fix coverity scan jar silence nasty documentation warn yixin fix integer overflow check merge iterator class small help get travis execute test clang sanitizers jonathan fix readme support user define type alexej help get user define type work visual studio jar support user define type note typo martin find way speedup compilation time test suite find propose improvement section note typo readme mihai fix bug comparison nullptr tushar add support speed compilation note typo readme remove unnecessary bite arithmetic fix weffc warn krzysztof make exception visible fix compiler warn make sure push warn properly pop find bug documentation jay implement meson description henry fix warn icc improve iterator vincent maintain package conan package manager fix potential issue msvc std min mike fix typo note mislead documentation comparison float oleg reduce memory consumption replace clean cmake simplify include reuse library nikita allow move value initializer list greg fix typo dmitry fix typo fix issue relate intel osx compiler markus fix typo fix subtle error precondition check note error sample tom report warn icc help fix perry simplify read input stream sonu fix small compilation error jamie fix msvc warn nate add doxygen tag help fix warn icc help fix warn msvc jamie avoid unnecessary string copy find count fix typo jorrit update hunter package link matthias add natvis msvc debug view fix deprecation warn eren fix msvc warn integrate grisu2 algorithm proper float point format allow roundtrip check succeed vadim fix markdown issue readme fix compiler warn allow template string type serialization add possibility override exceptional behavior help fix icc error patrik fix link readme find bug cbor indefinite length string paul fultz add note cget package manager wilson make integration section readme concise detect fix memory leak parser callback allow dump json alternative string type kevin overwork compiler check cmake axel simplify cmake check add support spack package carlos fix typo jam fix version number compiler section chuck adjust cmake cmake package guideline provide documentation cmake integration jan fix typo fix typo matthias remove dependency std stringstream add alternative string allow algorithm item function julius fix meson include directory fix link cppreference com cppreference com sonu fix compilation msvc debug mode fix test suite enable several test case hyeon introduce macro json_internal_catch control exception handle inside library fix compiler warn david fix subtle compilation error clang dennis allow call find_package without instal library hyeon fix issue double macro definition ben make error message understandable fix compilation problem intel compiler fix compilation problem kostiantyn add version license information meson henry add support gcc make sure test suite stall wrong directory antonio fix msvc warn dan implement nlohmann_json_serialize_enum macro quickly define enum json map add line column information parse error add bson support pratik add support structure bind david add support clang ps4 version jonathan implement input adapter read fix link documentation manvendra fix typo documentation fix msvc warn sylvain add avoid issue msvc fix bug json parse input stream millian allow library via meson michael find issue miss namespace nasztanovics fix compilation issue libc andreas fix endian conversion fix warn msvc gareth add operator json pointer note miss header vitaly fix compilation gcc laurent fix compilation gcc ivor help reduce cmake requirement version update buckaroo instruction fix compilation issue gcc centos isaac improve integer serialization performance implement contain function suppress unfixable warn elvis improve meson support matej fix readme mark fix typo fix bug serializer patrick implement push_back pop_back json pointer bruno add support conda michele fix link readme document library nuget mark fix typo help reduce cmake requirement version konstantin maintain package msys2 software distro add gnuinstalldirs cmake taylor fix unit test gabe implement to_string method watal fix clang warn viktor switch unit test juncheng fix typo fix bug contain function fix cppcheck warn fix typo christian add const version json_pointer back julien make item function work custom string type evan update fix bug hedley update library accordingly florian fix lot typo camille fix issue conversion std pair std tuple json anthony fix compile error enum deserialization yuriy note subtle bug preprocessor check fix numerous issue library antony add step gcc fix msvc warn propose improvement float point serialization cbor francois make performance improvement input adapter arthur document library include via fetchcontent rima fix error message alexander fix link readme hubert make cmake version config architecture independent implement binary value cbor messagepack bson ubjson fix compilation issue gcc fix leak evgenii integrate library wsjcpp package manager sergey fix compiler warn miguel fix year copyright gareth fix compilation issue msvc alexander weej fix readme antoine fix typo documentation update link hunter package dave fix link readme joel add instruction build2 package manager paul fix readme sonu fix warn carlos gomes update conan package source konstantin fix msys2 package documentation improve cmake test fix msvc warn quentin fix documentation fix compiler warn fix link readme tanuj improve fuzzer coverage ubsan input fix compiler warn make nlohmann_define_type_non_intrusive inline improve upper bind argument nlohmann_define_type_non_intrusive nlohmann_define_type_intrusive macro jan fix bug cbor parser binary string value fix bug new hash matthew adjust cbor writer create tag binary subtypes implement order map container nlohmann ordered_json erico nogueira add support pkg config propose nlohmann_define_type_non_intrusive nlohmann_define_type_intrusive macro guillaume implement string_view support allow support alex improve cmake support fetchcontent hannes provide gdb pretty printer lars wirzenius review readme jun fix compiler path cmake script ronak fix typo documentation alexander fix move constructor travis leonardo add cpm cmake support joseph fix warn update doctest implement unit test martin fix bug cmake jaakko fix bug input adapter fix markdown issue readme william fix readme fix readme remy fix warn fix documentation ben update doctest doron fix pkg config fix warn david add possibility compile library without support morten fyhn fix typo allow treat library system header cmake jason fix indentation cmake add link conan center documentation update link documentation http rafail fix google benchmark default branch louis fix conversion operator make readme consistent suppress wfloat equal warn ferry fix wswitch enum warn arseniy make gdb pretty printer robust unset variable name amir masoud update homebrew command nlohmann json homebrew core fix wextra semi stmt warn giovanni fix wunused warn json_diagnostics bogdan host offline documentation viewer carl fix assertion error json_diagnostics provide important fix compile clang maarten fix warn shadow variable cristi fix typo operator documentation alex fix spell mistake comment dirk fix typo documentation daniel correct parameter name parse documentation prince fix link faq thank lot help please let know mailto mail nlohmann forget someone third party tool library consist single header license mit license however test document whatnot lot third party tool service thank lot amalgamate amalgamate source header create single header american fuzzy fuzz test continuous window artistic automatic source indentation compilation sanitizers automation measure coverity static static analysis unit test generate upload documentation page github changelog generate google implement benchmark avoid invent several compiler agnostic feature macro process coverage information create html view implement fuzz test fuzz continuous fuzz test library project automate maintainer task close stale issue request miss information detect toxic comment check correct memory management project json modern library currently apple macos sierra sure library happy many device note character encode library support unicode input follow utf encode input support default encode json accord rfc std u16string std u32string parse assume utf utf encode respectively encode support read input container encode latin iso support yield parse serialization error unicode replace library invalid surrogate incomplete pair udead yield parse error string store library utf encode default string type std string note length size function return number store byte rather number character glyph store string different encode library call may throw exception unless json error_handler_t replace json error_handler_t ignore error handler store wide string std wstring need convert utf encode std string see comment json library support comment default reason comment part json may argue allow javascript json javascript oversight douglas crockford write may remove comment json saw people hold parse directive practice would destroy interoperability know lack comment make people sad suppose json keep configuration would like annotate ahead insert comment like pipe jsmin hand json parser dangerous interoperability library would add comment support others please check harmful consequence robustness however pas set parameter ignore_comments true parse function ignore comment comment treat whitespace order object key default library preserve insertion order object element standard compliant json define object unordered collection name value pair want preserve insertion order try type alternatively sophisticate order map like memory release check valgrind address sanitizer asan memory leak find parse program library release memory please consider follow case may unrelated library program compile glibc tunable threshold glibc decide whether actually return memory system whether cache late reuse program make lot small allocation small allocation contiguous block presumably threshold get return relate issue note contain numerous debug assertion switch define preprocessor macro ndebug see documentation particular note implement unchecked access const object give key present behavior undefined think dereferenced null pointer yield assertion assertion switch sure whether element object exist check access furthermore define json_assert replace call assert exact number type define json library try choose best fit number type automatically type double may store number may yield float point certain rare situation float point exception unmask call exception cause library need fix call mask exception prior call library function compile without runtime type identification feature fno rtti compiler flag exception widely within library however switch either compiler flag fno exception define symbol json_noexception case exception replace abort call control behavior define json_throw_user override throw json_try_user override try json_catch_user override catch note json_throw_user leave current scope throw abort continue may yield undefined behavior note explanatory string exception available msvc exception disable see execute unit test compile test need execute note ctest stage several json test external policy forbid artifact test pas directory test via djson_testdatadirectory path cmake internet connectivity require see issue information case library rather check via git test cmake_fetch_content_configure fail please execute ctest git_required skip test see issue information test change instal hence make whole process reproducible please execute ctest not_reproducible skip test see issue information note need call cmake not_reproducible git_required exclude label see issue information intel compiler unsafe float point optimization default unit test may fail flag
C C++;https://github.com/nodejs/http-parser;http parser actively new project project look migrate consider parser http message write parse request response parser design performance http application make syscalls allocation buff interrupt anytime depend architecture require byte per message stream web server per connection feature dependency handle persistent stream keep alive decode chunk encode upgrade support defend buff overflow attack parser extract follow information http message header field value content length request method response status transfer encode http version request url message body usage object per tcp connection initialize struct set callback might look something like request parser receive socket execute parser check error need know end stream sometimes server send response without content length expect client consume input body eof tell eof give fourth parameter callback error still encounter eof must still prepare receive scalar value message information status_code method http version store parser structure temporally store get reset new message information need late copy structure headers_complete callback parser decode transfer encode request response transparently chunk encode decode send on_body callback special problem upgrade support upgrade connection different protocol increasingly common websocket protocol send request like get demo http upgrade websocket connection upgrade host com origin websocket protocol sample follow non http see information websocket protocol support parser treat normal http message without body issue on_headers_complete on_message_complete callback however stop parse end header return user expect check parser upgrade set return non http begin buff supply offset return value callback call callback set execute parser maintain state never look behind buff necessary need save certain late usage callback type callback notification typedef int callback on_message_begin on_headers_complete on_message_complete typedef int const char size_t length callback request on_url common on_header_field on_header_value on_body callback must return success return non value indicate error parser make exit immediately case necessary pas local information callback object field case thread handle socket connection parse request give response socket instantiation thread local struct contain relevant accept socket allocate memory callback write etc parser callback able communicate scope thread scope callback threadsafe manner allow multi thread context case parse http message chunk read request line socket parse read half header parse etc callback may call guarantee pointer valid lifetime callback also read heap allocate buff avoid copy memory around fit application read header may tricky task read parse header partially basically need remember whether last header callback field value apply follow logic on_header_field on_header_value shorten on_h_ state prev callback callback description action nothing first call on_h_field allocate new buff copy callback value on_h_field new header start copy current name value buff header list allocate new buff new name field on_h_field previous name continue reallocate name buff append callback field on_h_value value current header start allocate new buff copy callback value on_h_value value continue reallocate value buff append callback parse url simplistic copy url parser provide user library may wish parse url construct consecutive on_url callback see read header partial node javascript
C C++;https://github.com/cbeck88/visit_struct;visit_struct appveyor boost header library provide structure visitor motivation way iterate member struct type oftentimes application may contain several small pod datatypes would like able easily serialize deserialize print debug info usually programmer write bunch boilerplate list struct member obvious structure visitor naively would like able write something like however syntax never legal iterate loop iterator fix static type member value similarly fix static type struct member type must allow vary visitor usual way overcome issue like without take performance hit visitor pattern purpose visitor generic callable object suppose struct look like suppose function like call visitor member struct comparison see also function boost apply_visitor boost variant library similarly apply visitor value store within variant simulate loop want write variety way instance make template function body loop visitor template function mean even though struct may contain several different type compiler figure function call compile time time polymorphism whole call often inlined basically solve original problem exact way long explicit iterator time loop body instantiate different type need loop internal state output function object object overload operator visitor collect state member also generic lambda sometimes make terse additionally make visitor sometimes verbose would like add benefit generic visitor reuse many time often thing like log serialization want struct get different policy want reuse reflection template function visit struct may let simplify promote reuse however mean still actually define visit every struct want possibly several version take const my_type my_type my_type also quite bite repetitive whole point reduce repetition ideally would able something totally generic like visitor struct template parameter visit member struct unfortunately current version lack reflection possible programmatically inspect list member generic class type template anything else standard even complete type case compiler obviously know member lucky might get something like right way actually implement fully generic for_each mean for_each require help usually form registration macro similar overview library permit follow syntax program intuitively think macro visitable_struct define overload visit_struct for_each structure make succinct lambda thing macro visitable_struct function visit_struct for_each represent important functionality library nice feature visit_struct for_each always respect value category argument my_struct const value reference non const value reference value reference for_each pas field visitor correspondingly visitor also forward properly note already library permit iterate structure like boost fusion much boost hana like modern successor boost fusion take advantage however library single header header library external dependency core visit_struct hpp total line depend count fully functional application visit_struct need additionally syntax kind visitation little nice fusion hana visit_struct much good compiler support right hana hana require high level conformance support gcc instance work version msvc support clang quite good visit_struct many first generation compiler quite old like gcc msvc note macro visitable_struct must filescope error occur within namespace simply include namespaces part type compatibility boost fusion visit_struct also support fusion adapt structure structure boost fusion know also visit_struct for_each include extra header include compatability header mean register struct fusion visit_struct may help migrate library compatiblity boost hana visit_struct also similar compatibility header boost hana include intrusive syntax drawback basic syntax repeat field member name introduce maintenance burden someone add field member update list possible write static assertion member register compare sizeof struct give know register member see test_fully_visitable cpp test_fully_visitable cpp may useful register subset field member serialization may requirement change header struct define still want visit first syntax may pretty much option however none change fact first syntax write name twice visit_struct clang plugin instead header library perhaps could make syntax look like offer clang plugin like offer additional header visit_struct_intrusive hpp macro get pretty close syntax portable declare structure essentially additional member define within type although secret static declaration occur basically bunch typedef intrusive still time overhead line expand separate series declaration within body my_type arbitrary declaration may appear visit_struct for_each member declare visitable visit order declare benefit version need type member name twice need jump namespaces back filescope order register struct main drawback still somewhat verbose bite complicate may useful case like struct want visit belong project change definition binary vistation visit_struct also support visit instance struct type instance function call similar useful implement generic equality comparison operator visitable structure instance generic function struct_eq compare visitable structure equality operator field short circuit properly clang simple compile assembly hand roll equality operator see godbolt compiler visitation without instance besides iteration instance register struct visit_struct also support visit definition struct case instead pas field name field value within instance pas field name pointer member correspond field suppose serialize many structs program json might also want able emit json schema associate struct program expect especially produce good diagnostics load fail visit without instance get type information struct actually instantiate might complicate expensive visit_pointers function call similar may especially useful compiler proper constexpr support case visitation constexpr also nifty metaprogramming purpose check test_fully_visitable cpp test_fully_visitable cpp alternate version visitation visit_types function call similar type_c tag visitor take appropriate action tag dispatch syntax little simple pointer member syntax visit_accessors third version get pas accessor function object implement function compute pointer member call roughly similar accessors convenient easily standard algorithm require function object avoid syntax member pointer well support hana fusion much thank jarod42 patch subsequent suggestion note compatibility header boost fusion boost hana currently support visit_pointers support visit_types visit_accessors knowledge way get pointer member boost fusion boost hana publicly expose interface get really want need able get pointer member pretty good reason visit_struct honestly think need fusion hana compatibility probably avoid anything member pointer stick accessors instead tuple method index access for_each quite powerful craft special visitor lot however thing easily implement std tuple method like std get get member struct library support struct field reflection support way decide support also change for_each work well target add new function allow index access structure metadata get get reference visitable member struct index base analogous std get get_name get string constant represent name member struct type struct type may pas second template parameter instance available may pas argument struct type deduce argument access get_pointer get pointer member visitable element struct type get_accessor get accessor correspond visitable element struct type type_at alias template give declare type member field_count get size_t tell many visitable field function get_name index get string constant represent name structure string token pas visit_struct macro order register structure could useful error message fail match json input struct type foo layout way get name type typeid define behavior sometimes give mangle name however visit_struct name might always acceptable either might contain namespaces depend standard intrusive syntax instance since programmer already take trouble pas name macro register struct think might well give programmatic access string want note equivalent feature fusion hana best knowledge support compatibility header apply_visitor alternate syntax for_each difference visitor come first rather last historically apply_visitor much old part visit_struct for_each syntax similar boost apply_visitor boost variant library long time apply_visitor function library however experience show for_each little nice syntax apply_visitor read like loop bound loop come first structure body loop repeat additionally may often generic lambda little readable lambda come last since may span several line say influence ldionne opinion make point boost hana doc nowadays prefer recommend for_each original apply_visitor syntax deprecate break though trait is_visitable type trait check structure visitable expression resolve boolean true false consider part forward face interface sfinae easily select type visit_struct know limit visitable_struct maximum number member register visit_struct max_visitable_members default intrusive syntax maximum number member visit_struct max_visitable_members_intrusive default limit increase see source comment also implementation_notes implementation_notes compiler support visit_struct target need value reference least intrusive syntax need variadic template also visit_struct know work version gcc version clang appveyor test msvc msvc believe fully support msvc basic syntax support intrusive syntax work test patch welcome much thank jarod42 significant patch relate msvc support constexpr correctness visit_struct attempt target different level constexpr support support support extend support control macro visit_struct_constexpr visit_struct_cxx14_constexpr token would constexpr keyword visit_struct hpp header macro define either constexpr nothing attempt guess appropriate set inspect preprocessor symbol __cplusplus _msc_ver work compiler please open github issue especially know fix meantime want tweak header project override behavior define macro include visit_struct hpp header see define touch defer setting case necessary gcc clang assume least constexpr support enable late standard std turn full constexpr msvc currently setting vs2013 support vs2015 support vs2017 extend support license distribution visit_struct available boost software license see also swansontec ldionne pod flat apolukhin self aware jckarter
C C++;https://github.com/martinus/robin-hood-hashing;robin_hood unordered map set github _note unfortunately time continue development hashmap spend lot time develop improve work quite well case make update unless critical bug fix travis appveyor codacy total language grade coverage robin_hood unordered_map robin_hood unordered_set platform independent replacement std unordered_map std unordered_set fast memory efficient real world case installation usage direct inclusion add project robin_hood unordered_map instead std unordered_map robin_hood unordered_set instead std unordered_set package manager setup cmakelists txt see conan msbuild meson others like create conanfile txt source dir forget update version conan project always robin hood hash package conan keep date conan contributor version date please create issue pull conan center index repository benchmark please see extensive benchmark hashmaps short robin_hood always among fast map far memory std unordered_map design choice memory layout either store flat array node indirection access unordered_flat_map extremely fast due indirection reference element stable also cause allocation spike map resize need plenty memory large object node base map stable reference pointer iterators similar const key pair bite slow due indirection choice either robin_hood unordered_flat_map robin_hood unordered_node_map directly robin_hood unordered_map try choose layout seem appropriate custom allocator node base representation custom bulk allocator try make memory allocation allocate memory reuse allocation spike fast well optimize hash robin_hood hash custom integer type std string fast fall back std hash everything else depend good hash really bad hash performance degrade like std unordered_map map simply fail std overflow_error practice standard robin_hood hash never see happen license license mit license see detail martinus
C C++;https://github.com/gaudecker/qt-json;json project simple collection function parse serialize json qvariant var hierarchy note qt5 introduce native json object class qt5 target qt5 instead parse json parser really easy let say follow qstring json would first call parse function assume parser complete without error hierarchy previous would print follow encode utf plugins ruby length use_space true serialize json write json object simple create assign qvariantmap jsonobject varmap byte array contain valid json serialize json pretty print default serialization create _minified_ version like follow debug log may prefer enable pretty print mode globally serialize obviously disable create qvariantmap create qvariantlist jsonarray varlist append qvariantmaps way create nest structure continue process recursively nest level json structure builder simplicity builder prefer create jsonobject create jsonarray take look rewrite previous contribute send pull request bug maintainer get merge publish make sure add author json standard specification var qvariant class reference qt5 qt5 qjsonobject class reference varmap qt4 qvariantmap class reference varlist qt4 qvariantlist class reference
C C++;https://github.com/simbody/simbody;simbody travis buildstatus_image_travis travisci appveyor buildstatus_image_appveyor appveyorci codecov buildstatus_image_codecov codecovci simbody high performance open source toolkit science engineer quality simulation articulate mechanism include biomechanical structure human animal skeleton mechanical system like robot vehicle machine anything else describe set rigid body interconnect joint influence force motion restrict constraint simbody include multibody dynamic library motion generalize internal coordinate time thy sometimes call featherstone style physic engine simbody provide api domain specific application standalone application biomechanists roboticists biomolecular research macromoleculebuilder artful simulation several rna molecule contain body perform mmb samuel flores flores sam flores simbody rna simulation rna simbios read simbody simbody simple double pendulum simulate visualize link chain double pendulum simulation simbody doublependulum see simbody user guide user step step explanation feature wide variety joint constraint force type easily user extend forward inverse mix dynamic motion drive force prescribe motion contact hertz hunt crossley gradient descent interior point global cma optimizers variety numerical integrator error control visualizer opengl want simbody instal simbody program user view api theory behind extend get support simbody report bug suggest dependency simbody depend follow cross platform late late visual studio compiler visual window late typically linux late apple clang xcode late linear algebra late visualization optional api documentation optional late recommend least simbody create simbody project cmake get start simbody project check cmake samplecmakelists txt cmake samplecmakelists txt instal simbody work window mac linux operate system package manager source provide instruction different way instal simbody window window visual studio source microsoft visual studio linux mac make linux mac make source gcc clang make mac homebrew mac homebrew automate homebrew ubuntu debian ubuntu apt get pre binary apt get freebsd freebsd pre binary pkg window mingw window mingw source mingw window mac linux window mac linux conda pre binary conda package manager linux check see distribution provide package simbody way simbody however mac could cmake xcode gcc clang simbody late feature std flag simbody early feature simbody either see simbody_standard_11 cmake variable version note want flag project simbody must compile flag well window visual studio get dependency need library dependency provide simbody installation window include linear algebra visualization dependency microsoft visual version community edition free sufficient default visual studio provide support instal sure select custom check program language visual common tool visual already instal visual studio without support simply installer select modify late installer select desktop development workload plan simbody compile compiler simbody version high optional want api documentation doxygen version high simbody source method source look high number release click zip button unzip computer assume unzip source simbody source method clone git repository get git many option git advance intermediate good tortoisesvn user github easy clone github repository simbody source follow git bash git find way equivalent command gui client git clone simbody source git checkout simbody last line assume want release version feel free change version want want late development version bleed edge simbody master branch omit checkout line see set release checkout specific version follow command git tag git checkout simbody configure generate project open cmake field source specify simbody source field binary specify something like simbody inside source directory simbody see click configure button prompt select generator dropdown optional platform generator choose x64 bite binary leave blank bite binary old version cmake select generator end win64 bite binary visual studio win64 visual studio win64 select without win64 bite binary visual studio visual studio click finish want simbody computer set change cmake_install_prefix variable assume set simbody choose different installation location make sure simbody play around option build_examples see simbody default build_testing ensure simbody work correctly default build_visualizer able watch system move remotely could turn default build_dynamic_libraries library dynamic library default unless know leave build_static_libraries library static library whose name end _static default must activate either build_dynamic_libraries build_static_libraries build_tests_and_examples_static static library test create statically link test take unlikely statically link library build_tests_and_examples_shared test create dynamically link test unless know leave click configure button click generate make visual studio project open simbody simbody sln visual studio select desire solution configuration drop top debug debugger symbol optimization 10x slow library visualizer name end relwithdebinfo debugger symbol optimize configuration recommend release debugger symbol optimize generate library executables small fast relwithdebinfo minsizerel minimum size optimize may slow relwithdebinfo release least want optimize library configuration debug optimize debug library coexist full installation process twice configuration project all_build right click select test right click run_tests select make sure test pas run_tests_parallel fast test multiple core optional project doxygen get api documentation generate simbody source get warn doxygen version early doxygen upgrade simbody right click select play around within visual studio installation make sure configuration set release configuration relwithdebinfo right click target whose name begin select select startup project type ctrl start program set environment variable test installation simbody opensim skip section allow executables find simbody library dll add simbody bin directory path environment variable start menu window screen window search environment select edit system environment variable click environment variable system variable click path click edit add simbody bin front text field forget semicolon allow simbody project opensim find simbody environment variable window user variable click new variable name type simbody_home variable value type simbody change take effect newly open window close window explorer command prompt window test installation navigate simbody bin simbodyinstalltest exe simbodyinstalltestnoviz exe note binary instal debug configuration present environment however slowly layout installation simbody installation organize bin visualizer share library dll runtime doc manual well api doc simbodyapi html src source bin compile executables instal debug include header necessary project simbody lib import library link cmake cmake useful project simbody linux mac make instruction simbody source either mac ubuntu check compiler version simbody recent feature require modern compiler instal simbody check compiler version command like version clang version case compiler support upgrade compiler upgrade gcc ubuntu instruction upgrade gcc ubuntu distribution sudo add apt repository ppa ubuntu toolchain test sudo apt get update sudo apt get gcc want set gcc default compiler follow command sudo update alternative usr bin gcc gcc usr bin gcc slave usr bin usr bin remember several compiler cmake flag cmake_c_compiler cmake_cxx_compiler select desire simbody configure follow flag cmake dcmake_c_compiler gcc dcmake_cxx_compiler get dependency mac xcode developer package give lapack blas via accelerate framework mac come visualization dependency ubuntu need get dependency open terminal follow command get necessary dependency sudo apt get cmake liblapack dev want cmake gui cmake gui visualization optional sudo apt get freeglut3 dev libxi dev libxmu dev api documentation optional sudo apt get doxygen lapack version high may require application opensim lapack compile follow method sufficient set ld_library_path lapack prefix simbody dbuild_using_other_lapack path path liblapack option cmake get simbody source way get source method source look high number release click zip button unzip computer assume unzip source simbody source method clone git repository get git mac might already especially xcode free app store method brew git terminal ubuntu sudo apt get git terminal clone github repository simbody source git clone simbody source git checkout simbody last line assume want release version feel free change version want want late development version bleed edge simbody master branch omit checkout line see set release checkout specific version follow command git tag git checkout simbody configure generate makefiles create directory simbody assume choose simbody choose location inside simbody source mkdir simbody simbody configure simbody cmake cmake command could also interactive tool ccmake cmake gui configuration option play want fuss option cmake simbody source want simbody default instal usr local great default option especially think version simbody time change via cmake_install_prefix variable let choose simbody cmake simbody source dcmake_install_prefix simbody want library optimize speed contain debugger symbol change via cmake_build_type variable option debug debugger symbol optimization 10x slow library visualizer name end relwithdebinfo debugger symbol optimize configuration recommend release debugger symbol optimize generate library executables small fast relwithdebinfo minsizerel minimum size optimize may slow relwithdebinfo release least want optimize library configuration debug optimize debug library coexist full installation process twice configuration typical different directory type simbody debug simbody release variable might want play build_examples see simbody default build_testing ensure simbody work correctly default build_visualizer able watch system move cluster could turn default build_dynamic_libraries library dynamic library default build_static_libraries library static library whose name end _static build_tests_and_examples_static test create statically link test take unlikely statically link library build_tests_and_examples_shared test create dynamically link test unless know leave combine option another cmake simbody source dcmake_install_prefix simbody dcmake_build_type relwithdebinfo dbuild_visualizer api documentation optional doxygen get warn doxygen installation version old doxygen make doxygen compile flag processor core make test ctest choose cmake_install_prefix location require sudo access write like usr local prepend command sudo make know also uninstall delete cmake place cmake_install_prefix simbody make uninstall play around directory simbody program instance try examplependulum set environment variable test installation simbody opensim skip section allow executables find simbody library dylib add simbody lib directory linker path mac user skip step cmake_install_prefix usr local sudo ldconfig cmake_install_prefix neither usr usr local simbody mac echo export dyld_library_path dyld_library_path simbody lib bash_profile ubuntu echo export ld_library_path ld_library_path simbody lib x86_64 linux gnu bashrc command add line configuration load every time open new terminal ubuntu may need replace x86_64 linux gnu appropriate directory computer allow simbody project opensim find simbody make sure replace simbody cmake_install_prefix mac echo export simbody_home simbody bash_profile ubuntu echo export simbody_home simbody bashrc open new terminal test installation simbody share doc simbody bin simbodyinstalltest simbodyinstalltestnoviz layout installation installation create follow directory cmake_install_prefix directory x86_64 linux gnu exist usr local vary platform even case name directory may different include simbody header necessary project simbody lib x86_64 linux gnu share library dylib cmake simbody cmake useful project simbody pkgconfig pkg config useful project simbody simbody compile executables instal debug libexec simbody simbody visualizer executable share doc simbody manual well api doc simbodyapi html src source bin symbolic link runnable mac homebrew mac homebrew dependency take care open terminal add open source robotics foundation list repository homebrew late release simbody master branch instead append head command simbody instal simbody instal usr local cellar simbody either version number head specify head directory symlinked symbolically link usr local system typically expect find executables share library dylib header etc follow directory simbody installation symlinked include simbody usr local include simbody lib usr local lib share doc simbody usr local share doc simbody layout installation usr local cellar simbody directory include simbody header necessary project simbody lib share library dylib runtime cmake simbody cmake useful project simbody pkgconfig pkg config useful project simbody simbody compile executables instal debug libexec simbody simbody visualizer executable share doc simbody manual well api doc simbodyapi html src source bin symbolic link executable ubuntu apt get start ubuntu simbody available ubuntu debian repository see list simbody package ubuntu version ubuntu package late version simbody usually available ubuntu repository process get new version simbody ubuntu repository could take year open terminal follow command sudo apt get libsimbody dev simbody doc layout installation simbody instal usr directory directory x86_64 linux gnu vary platform usr include simbody header necessary project simbody usr lib x86_64 linux gnu share library cmake simbody cmake useful project simbody pkgconfig pkg config useful project simbody usr libexec simbody simbody visualizer executable usr share doc simbody manual well api doc simbodyapi html src source bin symbolic link executable freebsd pkg simbody available via freebsd package repository open terminal follow command sudo pkg simbody window mingw warn generation experimental still experimental various mingw version available thread exception mechanism compile library simbody depend blas lapack optionnaly glut section give list support version command line instruction reason obvious mingw support mingw version want detail need mingw version posix thread dwarf exception mechanism bite computer posix thread sjlj exception mechanism bite computer version support additional configuration table list various version mingw version test thread exception comment url bit posix sjlj feature support binary include recommend version mingw64 gcc mingw_520_64_posix_sjlj bit posix seh need link user blas lapack mingw64 gcc mingw_520_64_posix_seh bit posix dwarf visualization binary include mingw64 gcc mingw_520_32_posix_dwarf bit posix sjlj visualization need link user blas lapack mingw64 gcc mingw_520_32_posix_sjlj recommend first configuration feature support need additional library compile url allow directly version second version need link user blas lapack cli give blas lapack source 3rd 4th version target bite behaviour visualization possible time due compile link problem glut moreover 4th need provide blas lapack library please note posix version mingw support version support cmake detect configure stop instruction command line instruction various case assume command directory access simbody source command simbody recommend specify installation directory flag cmake_install_prefix dcmake_install_prefix program simbody installation directory program x86 simbody bite computer might confuse since bite installation location instruction blas lapack library provide window terminal mingw path rem cmake configuration cmake simbody mingw makefiles dcmake_build_type release dcmake_install_prefix program simbody rem compilation mingw32 make rem test mingw32 make test rem installation mingw32 make instruction blas lapack library provide window terminal mingw path rem variable path definition set cmake program cmake bin cmake exe set mingwdir program mingw w64 i686 posix sjlj rt_v4 rev0 mingw32 set path mingwdir bin mingwdir i686 w64 mingw32 lib rem cmake configuration cmake simbody mingw makefiles dcmake_build_type release dcmake_install_prefix program simbody dcmake_c_compiler path mingwdir bin gcc exe dcmake_cxx_compiler path mingwdir bin exe dcmake_make_program path mingwdir bin mingw32 make exe rem compilation mingw32 make rem test mingw32 make test rem installation mingw32 make instruction blas lapack library provide msys terminal mingw path cmake configuration cmake simbody msys makefiles dcmake_build_type release dcmake_install_prefix program simbody compilation make test make test installation make instruction provide blas lapack library msys terminal mingw path cmake configuration cmake simbody msys makefiles dcmake_build_type release dcmake_install_prefix program simbody dcmake_c_compiler path program mingw w64 i686 posix sjlj rt_v4 rev0 mingw32 bin gcc exe dcmake_cxx_compiler path program mingw w64 i686 posix sjlj rt_v4 rev0 mingw32 bin exe dbuild_using_other_lapack path program lapack bin liblapack dll program lapack bin libblas dll make test make test installation make mingw detail paragraph explain reason mingw version mingw available thread win32 thread posix thread posix thread since thread functionality std mutex implement ease window simbody provide compile library blas lapack window bit compile dwarf exception mechanism window bit compile sjlj exception mechanism choose mingw compilation need respect exception mechanism program rely mechanism mean want compile library mingw installation exception mechanism otherwise need provide blas lapack library see exception mechanism user look dlls locate bin directory mingw name mechanism present libgcc_xxxx dll xxxx seh sjlj mingw version information also available look gcc version cmake check version mingw exception mechanism different configuration stop difference provide blas lapack library cmake variable build_using_other_lapack compilation mingw always possible window mac linux conda cross platform package manager simbody window mac linux simbody conda must first either provide conda command invoke command line simbody conda channel follow command simbody library header miniconda anaconda installation directory per standard layout operate system describe conda forge simbody recipe find conda forge feedstock acknowledgment grateful past continue support simbody development stanford bioengineering department follow grant nih u54 gm072970 simulation biological structure nih u54 eb020405 mobilize center nih r24 hd065690 simulation rehabilitation research osrf subcontract darpa hr0011 robotics challenge prof scott delp principal investigator grant simbody extensively scott neuromuscular biomechanics basis biomechanical simulation software application medical research buildstatus_image_travis travisci buildstatus_image_appveyor appveyorci buildstatus_image_codecov codecovci user rna doc image simbios_11000_body_rna gif simbios doublependulum doc image doublependulum gif thy flores buildwin buildunix mingw_520_64_posix_sjlj mingw_520_64_posix_seh mingw_520_32_posix_dwarf mingw_520_32_posix_sjlj
C C++;https://github.com/ggerganov/imtui;imtui action imtui badge changelog badge changelog dear imgui version imtui immediate mode text base user interface library support ansi color mouse keyboard input live demo browser even though library suppose terminal convenience demonstrate look like simulate console browser demo demo demo note demo work best chrome detail library base popular dear library imtui simply provide interface order draw interact widget terminal entire dear imgui interface available box basic usage imtui check available sample simple tool browse hacker news terminal text base configure wtf terminal dashboard imtui depend libncurses linux mac window partial window support currently available msys2 mingw pdcurses information checkout follow discussion emscripten changelog changelog changelog badge imgui version badge
C C++;https://github.com/CppCon/CppCon2020;cppcon presentation material canonical location presentation cppcon speaker submit material submit index material presentation year sanitizers presentation 2020_the_year_of_sanitizers 2020_the_year_of_sanitizers__victor_ciura__cppcon_2020 pdf victor ciura new decade visual studio open stl presentation a_new_decade_of_visual_studio_cpp20_open_stl_and_more a_new_decade_of_visual_studio_cpp20_open_stl_and_more__sy_brand_marian_luparu__cppcon_2020 pdf brand marian luparu physical unit library next presentation a_physical_units_library_for_the_next_cpp a_physical_units_library_for_the_next_cpp__mateusz_pusz__cppcon_2020 pdf mateusz pusz relax guide memory_order_relaxed presentation a_relaxed_guide_to_memory_order_relaxed a_relaxed_guide_to_memory_order_relaxed__paul_e_mckenney___cppcon_2020 pdf paul mckenney transaction base multithreaded lock strategy container presentation a_transactionbased_multithreaded_locking_strategy_for_containers a_transactionbased_multithreaded_locking_strategy_for_containers__bob_steagall__cppcon_2020 pdf bob steagall adventure simd think part presentation adventures_in_simd_thinking_part_1 adventures_in_simd_thinking_part_1__bob_steagall__cppcon_2020 pdf bob steagall adventure simd think part presentation adventures_in_simd_thinking_part_2 adventures_in_simd_thinking_part_2__bob_steagall__cppcon_2020 pdf bob steagall back basic algebraic type presentation back_to_basics_algebraic_data_types back_to_basics_algebraic_data_types__arthur_odwyer__cppcon_2020 pdf arthur dwyer back basic class layout presentation back_to_basics_class_layout back_to_basics_class_layout__steve_dewhurst__cppcon_2020 pdf steve dewhurst back basic concurrency presentation back_to_basics_concurrency back_to_basics_concurrency__arthur_odwyer__cppcon_2020 pdf arthur dwyer back basic design pattern presentation back_to_basics_design_patterns back_to_basics_design_patterns__michael_shah__cppcon_2020 pdf michael shah back basic exception presentation back_to_basics_exceptions back_to_basics_exceptions__klaus_iglberger__cppcon_2020 pdf klaus iglberger back basic lambda expression presentation back_to_basics_lambda_expressions back_to_basics_lambda_expressions__barbara_geller__ansel_sermersheim__cppcon_2020 pdf barbara geller ansel sermersheim back basic move semantics presentation back_to_basics_move_semantics back_to_basics_move_semantics__david_olsen__cppcon_2020 pdf david olsen back basic smart pointer presentation back_to_basics_smart_pointers back_to_basics_smart_pointers__rainer_grimm__cppcon_2020 pdf rainer grimm material presentation back_to_basics_smart_pointers back basic template part presentation back_to_basics_templates_part_1 back_to_basics_templates_part_1__andreas_fertig__cppcon_2020 pdf andreas fertig back basic template part presentation back_to_basics_templates_part_2 back_to_basics_templates_part_2__andreas_fertig__cppcon_2020 pdf andreas fertig back basic abstract machine presentation back_to_basics_the_abstract_machine back_to_basics_the_abstract_machine__bob_steagall__cppcon_2020 pdf bob steagall back basic structure program presentation back_to_basics_the_structure_of_a_program back_to_basics_the_structure_of_a_program__bob_steagall__cppcon_2020 pdf bob steagall break dependency solid principle presentation breaking_dependencies_the_solid_principles breaking_dependencies_the_solid_principles__klaus_iglberger__cppcon_2020 pdf klaus iglberger coroutine base job system without standard library presentation building_a_coroutine_based_job_system_without_standard_library building_a_coroutine_based_job_system_without_standard_library__tanki_zhang__cppcon_2020 pdf tanki zhang readme presentation building_a_coroutine_based_job_system_without_standard_library readme call function tutorial presentation calling_functions_a_tutorial calling_functions_a_tutorial__klaus_iglberger__cppcon_2020 pdf klaus iglberger construct generic algorithm presentation constructing_generic_algorithms constructing_generic_algorithms__ben_deane__cppcon_2020 pdf ben deane almost complete overview presentation cpp20_an_almost_complete_overview cpp20_an_almost_complete_overview__marc_gregoire__cppcon_2020 pptx marc gregoire stl feature year development github presentation cpp20_stl_features_1_year_of_development_on_github cpp20_stl_features_1_year_of_development_on_github__stephan_t_lavavej__cppcon_2020 pdf stephan lavavej pdf presentation cpp20_stl_features_1_year_of_development_on_github cpp20_stl_features_1_year_of_development_on_github__stephan_t_lavavej__cppcon_2020 pdf pptx presentation cpp20_stl_features_1_year_of_development_on_github cpp20_stl_features_1_year_of_development_on_github__stephan_t_lavavej__cppcon_2020 pptx string format library overview custom type presentation cpp20_string_formatting_library_an_overview_and_use_with_custom_types cpp20_string_formatting_library_an_overview_and_use_with_custom_types__marc_gregoire__cppcon_2020 pptx marc gregoire cross platform pitfall avoid presentation cross_platform_pitfalls_and_how_to_avoid_them cross_platform_pitfalls_and_how_to_avoid_them__erika_sweet__cppcon_2020 pdf erika sweet design pattern error handle presentation design_patterns_for_error_handling design_patterns_for_error_handling__mark_hoemmen__cppcon_2020 pdf mark hoemmen empirically measure reduce accidental complexity presentation empirically_measuring_and_reducing_cpp_accidental_complexity empirically_measuring_and_reducing_cpp_accidental_complexity__herb_sutter__cppcon_2020 pdf herb sutter exception spotlight presentation exceptions_under_the_spotlight exceptions_under_the_spotlight__inbal_levi__cppcon_2020 pdf inbal levi exploration metaprogramming presentation exploration_of_cpp20_metaprogramming exploration_of_cpp20_metaprogramming__inbal_levi__cppcon_2020 pdf inbal levi function coroutines presentation from_functions_to_coroutines from_functions_to_coroutines__rainer_grimm__cppcon_2020 pdf rainer grimm fuzzing class interface generate test libfuzzer presentation fuzzing_class_interfaces_for_generating_and_running_tests_with_libfuzzer fuzzing_class_interfaces_for_generating_and_running_tests_with_libfuzzer__barnab a1s_b a1gyi__cppcon_2020 pdf barnabas bagyi get thread presentation get_off_my_thread get_off_my_thread__anthony_williams__cppcon_2020 pdf anthony williams halide language fast portable computation image tensor presentation halide_a_language_for_fast_portable_computation_on_images_and_tensors halide_a_language_for_fast_portable_computation_on_images_and_tensors__alex_reinking__cppcon_2020 pptx alex reinking change way write presentation how_cpp20_changes_the_way_we_write_code how_cpp20_changes_the_way_we_write_code__timur_doumler__cppcon_2020 pdf timur doumler time compilation presentation justintime_compilation justintime_compilation__jf_bastien__cppcon_2020 pdf bastien time compilation next big thing presentation justintime_compilation_the_next_big_thing justintime_compilation_the_next_big_thing__ben_deane_kris_jusiak__cppcon_2020 pdf ben deane kris jusiak readme presentation justintime_compilation_the_next_big_thing readme macro free test presentation macrofree_testing_with_cpp20 macrofree_testing_with_cpp20__kris_jusiak__cppcon_2020 pdf kris jusiak readme presentation macrofree_testing_with_cpp20 readme make game start fast presentation making_games_start_fast making_games_start_fast__mathieu_ropert__cppcon_2020 pdf mathieu ropert make iterators view container easy write boost stlinterfaces presentation making_iterators_views_and_containers_easier_to_write_with_booststlinterfaces making_iterators_views_and_containers_easier_to_write_with_booststlinterfaces__zach_laine__cppcon_2020 pdf zach laine managarm fully asynchronous operate system power modern presentation managarm_a_fully_asynchronous_operating_system_powered_by_modern_cpp managarm_a_fully_asynchronous_operating_system_powered_by_modern_cpp__alexander_van_der_grinten__cppcon_2020 pdf alexander van grinten neighborhood band together presentation neighborhoods_banding_together neighborhoods_banding_together__lisa_lippincott__cppcon_2020 pdf lisa lippincott performance matter presentation performance_matters performance_matters__emery_berger__cppcon_2020 pdf emery berger pip plumb make expressive presentation pipes_how_plumbing_can_make_your_cpp_code_more_expressive pipes_how_plumbing_can_make_your_cpp_code_more_expressive__jonathan_boccara__cppcon_2020 pdf jonathan boccara practical memory pool base allocator modern presentation practical_memory_pool_based_allocators_for_modern_cpp practical_memory_pool_based_allocators_for_modern_cpp__misha_shalem__cppcon_2020 pdf misha shalem quickly test desktop application approval test presentation quickly_testing_qt_desktop_applications_with_approval_tests quickly_testing_qt_desktop_applications_with_approval_tests__clare_macrae__cppcon_2020 pdf clare macrae readme presentation quickly_testing_qt_desktop_applications_with_approval_tests readme material presentation quickly_testing_qt_desktop_applications_with_approval_tests retire singleton pattern presentation retiring_the_singleton_pattern retiring_the_singleton_pattern__peter_muldoon__cppcon_2020 pdf peter muldoon scientific unit test presentation scientific_unit_testing scientific_unit_testing__dave_steffen__cppcon_2020 pdf dave steffen thing right presentation some_things_cpp_does_right some_things_cpp_does_right__patrice_roy__cppcon_2020 pdf patrice roy structure interpretation computer program presentation structure_and_interpretation_of_computer_programs structure_and_interpretation_of_computer_programs__conor_hoekstra__cppcon_2020 pdf conor hoekstra readme presentation structure_and_interpretation_of_computer_programs readme taskflow general purpose parallel heterogeneous task program system modern presentation taskflow_a_generalpurpose_parallel_and_heterogeneous_task_programming_system_using_modern_cpp taskflow_a_generalpurpose_parallel_and_heterogeneous_task_programming_system_using_modern_cpp__tsungwei_huang__cppcon_2020 pdf tsung wei huang template metaprogramming type trait presentation template_metaprogramming_type_traits template_metaprogramming_type_traits__jody_hagins__cppcon_2020 pdf jody hagins many shade reference_wrapper presentation the_many_shades_of_reference_wrapper the_many_shades_of_reference_wrapper__zhihao_yuan__cppcon_2020 pdf zhihao yuan scratch object presentation the_networking_ts_from_scratch_io_objects the_networking_ts_from_scratch_io_objects__robert_leahy__cppcon_2020 pdf robert leahy material presentation the_networking_ts_from_scratch_io_objects beauty power primitive presentation the_powr_and_beauty_of_primitive_c the_powr_and_beauty_of_primitive_c__bjarne_stroustrup__cppcon_2020 pdf bjarne stroustrup shape multi dimensional array presentation the_shapes_of_multidimensional_arrays the_shapes_of_multidimensional_arrays__vincent_reverdy__cppcon_2020 pdf vincent reverdy surprise cost void presentation the_surprising_costs_of_void the_surprising_costs_of_void__patrice_roy__cppcon_2020 pdf patrice roy name name presentation whats_in_a_name_whats_a_name_in whats_in_a_name_whats_a_name_in__walter_e_brown__cppcon_2020 pdf walter brown lightning talk picture worth word lightning 20talks a_picture_is_worth_thousand_words a_picture_is_worth_thousand_words__honey_sukesan__cppcon_2020 pdf honey sukesan
C C++;https://github.com/boostcon/cppnow_presentations_2012;presentation monday presentation jeff garland library week leor zolman whirlwind overview boris schaeling boost library scott schurr useful computation duration optimize embed hard real time alisdair meredith fresh karsten ahnert mario mulansky odeint solve ordinary differential equation michael caisse lambda original ciere michael wong openmp good high level parallelism high performance michael wong future john wiegley high level alan talbot ustring modern alternative bartosz milewski eric niebler compile time time functional program compile time time functional program trouble pptx tuesday presentation jeff garland library week sebastian redl boost howard hinnant keynote move forward part page part page keynote full pdf version page available clone get zip tue cppnow_moving_forward_part pdf tony van eerd try work low level thread pps michael caisse ladon distribute state machine original ciere zoltan porkolab abel sinkovics metaparse complie time parse template jon kalb exception safe cod beman dawes move boost alisdair meredith lesson develop standard sumit kumar new visual studio ide josef weinbub utilize modern program technique boost library scientific software wednesday presentation jeff garland library week fabio fracassi move adobe forest marshall clow steven watanabe kevin harris mark jarvin algorithm asl median akira takahashi replace output iterator extend string david vandevoorde keynote module howard hinnant new keynote jean marc gratien implement domain specific embed language low order variational method boost marshall clow generic program real world michael caisse introduction modern original ciere andrew lumsdaine larisse voufo conceptclang pptx howard hinnant smart pointer keynote lucanus simonson andrii sydorchuk robust efficient multi precision algorithm design base boost polygon voronoi scott schurr new tool class library dave abraham cmake modularization ryppl developer thursday presentation jeff garland library week sean parent keynote vignette keynote beman dawes jeff garland howard hinnant alisdair meredith gem jeff alisdair jeroen habraken type string conversion gordon woodhull compile time karsten ahnert mario mulansk metaprogramming apply numerical travis gockel switch solidfire work bryce adelstein lelbach matthew anderson hartmut kaiser hpx parallel runtime patrick mihelich linear program make easy boost nat goodspeed boost coroutine untangle state chandler carruth refactoring beman dawes boost library tony van eerd tony van jon stephan lavavej regex friday presentation jeff garland library week random want speed pas value sean parent value semantics concept base keynote source ale contenti component extension implement domain specific embed language low order variational method boost proto jean marc metaparse compile time parse template metaprogramming bel sinkovics zolt utilize modern program technique boost library scientific software development josef weinbub karl rupp siegfried
C C++;https://github.com/stillwater-sc/universal;universal header template library universal number arithmetic system status information codacy codacy quality assessment fossa fossa open source license dependency scanner codeship status docker container regression github late linux macos window regression test coverage coverage scanner docker docker container pull awesome goal universal number library offer application alternative ieee float point efficient mathematically robust motivation find improvement ieee float point brew hpc community since late algorithm become memory bind computational scientist look alternative provide granularity precision dynamic range even though inefficiency ieee float point measure agree upon hpc community commercial demand deep provide incentive replace ieee alternative half float bfloats alternative tailor application yield speed order magnitude make rapid innovation possible universal library ready header library provide plug replacement native type provide low friction environment start explore alternative ieee float point algorithm basic pattern simple library contain integer decimal fix point rational linear float taper float logarithmic interval adaptive precision integer float number system skeleton get start quickly desire add highly encourage communication channel github bug report feature request etc discussion alternative ieee computational science online chat discussion collaboration user researcher developer citation please cite _universal_ quick start want experiment number system tool test suit want bother clone source docker container get start want work universal number software library cmake version late interactive installers macos window linux portable approach archive usr local ubuntu snap late cmake would prefer method universal library pure template library without dependency even regression test suit enable hassle free installation simply clone github repo ready different component universal library library contain tool work integer decimal fix point float posit valids logarithmic number system contain educational program showcase simple case familiarize different number system application highlight different number system gain performance numerical accuracy finally number system offer verification suite easy way become familiar option process fire cmake gui ccmake headless server cmake output summarize option set output look something like option enable disable follow issue command _make test_ complete test suite enable component regression capability modify source take touch corner window visual studio cmakepredefinedtargets accomplish task visual studio project doc img visual studio project png installation usage clone library test environment via manually via makefile target directory default directory usr local linux also uninstall want number system provide universal project follow cmakelists txt structure control include different component default configuration command line tool playground educational application want full regression suite across number system follow cmake command performance configuration enable specific x86 instruction set sse avx avx2 processor support avx2 instruction set test suit educational avx2 flag turn typically yield performance boost library set useful command utility inspect native ieee float double long double number well custom number system provide universal assume instal library command _ieee_ command handy quickly determine development environment represent truncate specific value specific command _float_ _double_ _longdouble_ focus float double long double representation respectively also command _posit_ help visualize compare posit component field give value field prefix first character posit r10 e00 f00111100000 qne sign field indicate positive number regime field r10 indicate first positive regime name regime exponent field e00 indicate bit exponent fraction field f00111100000 full set fraction bit field value follow quadrant descriptor value representation decimal qne north east quadrant represent number range maxpos value representation posit projection positive regime posit show specific structure see image blow regime structure doc img positive_regimes png motivation modern application demonstrate inefficiency ieee float point format google microsoft jettisonned ieee float point cloud service gain order magnitude good performance similarly application mobile embed application shift away ieee float point application hardly application expose limitation float point cloud scale iot embed control hpc application also limit inefficiency ieee float point format simple change new number system improve scale cost appliations order magnitude performance power efficiency differentiate attribute case complexity ieee float simply compete number system tailor need application advantage posit good fast cheap power efficient core limitation ieee float point cause key problem format inefficient representation real irreproducibility context concurrency complete list issue hold back ieee float point format waste bite pattern bite ieee float point around million way represent nan number bite float point quadrillion approximately 251x10 exact nan exception value represent undefined invalid division mathematically incorrect format specify negative positive different behavior loss associative distributive law due round operation loss associative distributive arithmetic behavior create irreproducible concurrent program ieee float point particularly problematic embed control application overflow inf underflows overflow inf increase relative error infinite factor underflowing lose sign information unused dynamic range dynamic range double precision float whop whereas numerical software architected operate around complicate circuitry denormalized float point number hide bite instead create host special handle requirement complicate compliant hardware gradual overflow fix accuracy accuracy define number significand bit ieee float point fix accuracy number except denormalized number number signficand digit fix denormalized number characterize decrease number significand digit value approach hide bite denormalized number fill underflow gap gap least non value counterpart gradual underflow gradual overflow exist ieee float point contrast _posit_ number system design efficient symmetric mathematically correct concurrency environment economical bite pattern redundant representation infinity denote inf bite pattern valid distinct non real number inf serve replacement nan mathematical elegant representation encode symmetric around associative distributive law support defer round via quire enable reproducible linear algebra algorithm concurrency environment taper accuracy taper accuracy value small exponent digit accuracy value large exponent digit accuracy concept first introduce morris taper float point new float point representation parameterized precision dynamic range posit define size _nbits_ number exponent bit _es_ enable system designer freedom pick right precision dynamic range require application application may pick bite posit without exponent bit improve performance embed dsp application base station may select bite posit exponent bite improve performance per watt simple circuitry special case real denormalized number overflow underflow goal library _universal_ library start bite level arithmetic reference evolve unum type iii posit valid standard however demand support number system adaptive precision integer solve large factorial adaptive precision float act oracle compare linear taper float provide opportunity create complete platform numerical analysis computational mathematics _universal_ platform enable new direction optimization algorithm take advantage mix precision maximize performance minimize energy demand energy efficiency key differentiator embed intelligence application reference library _universal_ offer xtensive test infrastructure validate number system arithmetic operation host utility inspect internal encode operation different number system design space custom arithmetic vast contribution expand capability _universal_ library encourage contribute universal happy accept pull request via github requirement entire regression test suite pas stargazer verification suite normally verification suite part _make test_ command directory however possible specific component test suite validate algorithmic change complex arithmetic function square root exponent logarithm trigonometric function structure tree universal library contain set functional group organize development validation different number system show see universal include universal number posit posit hpp group test suite universal test posit complete list fix size configuration universal number integer arbitrary configuration fix size integer universal number fixpnt arbitrary configuration fix size fix point number system universal number areal arbitrary configuration fix size faithful float point uncertainty bite universal number cfloat arbitrary configuration fix size classic float point number system universal number posit arbitrary configuration fix size posit number system taper float point universal number valid arbitrary configuration fix size valid number system taper float point interval number system universal number quire arbitrary configuration fix size super accumulator number system add sub sqrt universal number unum flexible configuration unum type number system universal number unum2 flexible configuration unum type number system universal number lns logarithmic number system universal number float contain ieee float point augmentation reproducible computation adaptive precision configuration universal number decimal adaptive precision decimal universal number rational adaptive precision rational number system universal number adaptiveint adaptive precision binary integer universal number adaptivefloat adaptive precision linear float point universal number adaptiveposit adaptive precision taper float point functionality group associate test suite locate universal test background information universal number unums short express real number range real number mode operation selectable programmer _posit_ mode _valid_ mode _posit_ mode unum behave much like float point number fix size round near expressible value calculation expressible exactly posit offer accuracy large dynamic range float number bit _valid_ mode unum represent range real number rigorously bind answer much like interval arithmetic posit configuration specific relationship another expand posit new value fall old value small posit new value arithmetic mean number expand bite fraction bite geometric mean number expand bite regime exponent bite page doc positrefinementviz show visualization expansion _posit _posit public domain community resource unum format public domain specification collection web resource manage information discussion around unums posit unum compute google project leverage posit matrix template matrix template library incorporate modern program technique provide easy intuitive interface user enable optimal performance natural mathematical notation mtl4 empower engineer scientist implement algorithm minimal time technical aspect encapsulate library think matlab application smo geometry simulation module pronounce gismo new open source library bring together mathematical tool geometric design numerical simulation develop mainly researcher phd student implement relatively new paradigm isogeometric analysis suggest unify framework design analysis pipeline smo object orient cross platform template library follow generic program principle focus efficiency ease library partition small entity call module available module include dimension independent nurbs module fit solid segmentation module pde discretization module adaptive spline module base hierarchical spline arbitrary dimension polynomial degree fenics popular open source lgplv3 compute platform solve partial differential equation pdes fenics enable user quickly translate scientific efficient finite element high level interface fenics easy get start fenics offer also powerful capability experience programmer fenics multitude platform range laptop high performance cluster odeint modern library numerically solve ordinary differential equation develop generic way template metaprogramming lead extraordinary high flexibility top performance numerical algorithm implement independently underlie arithmetic incredible applicability library especially non standard environment odeint support matrix type arbitrary precision arithmetic even easily cuda gpus several deep library reengineered enable posit inference announce release license fossa
C C++;https://github.com/glfw/glfw;glfw coverity introduction glfw open source multi platform library opengl opengl vulkan application development provide simple platform independent api create window context surface read input handle event etc glfw natively support window macos linux unix like system linux x11 wayland support glfw license zlib libpng late stable release source window binary fetch late branch github release start also correspond annotate source binary archive available online include source binary archive see release new feature caveat deprecation late release detail see version master branch stable integration branch _should_ always compile support platform although detail newly add feature may change include release new feature many bug fix live stable enough merge new glfw may find glfw useful glfw past transition move glfw api glfw exist contribution many people contributor around world whether report bug provide community support add feature review test debug proofread doc suggest feature fix bug compile glfw glfw require header library window system need header context creation api wgl glx egl nsgl osmesa render api opengl opengl vulkan enable support glfw support compilation window visual late mingw mingw w64 macos clang linux unix like system gcc clang likely compile environment well regularly test pre compile window available support compiler see compilation information compile glfw glfw see tutorial guide api reference contribute glfw see contribution information system requirement glfw support window late macos late linux unix like system window system support even without desktop environment modern extension although feature require window clipboard manager osmesa backend require mesa see compatibility documentation information dependency glfw need cmake late header library window system test program depend number tiny library locate deps directory command line option thread load opengl vulkan function linear algebra test write image disk documentation generate cmake find tool report bug bug report issue please check contribution information include report bug changelog add glfw_platform init hint runtime platform selection add glfw_any_platform glfw_platform_win32 glfw_platform_cocoa glfw_platform_wayland glfw_platform_x11 glfw_platform_null symbol specify desire platform add glfwgetplatform function query platform select add glfwplatformsupported function query platform support add glfwinitallocator set custom memory allocator add glfwallocator struct glfwallocatefun glfwreallocatefun glfwdeallocatefun type add glfwinitvulkanloader non default vulkan loader add glfw_resize_nwse_cursor glfw_resize_nesw_cursor glfw_resize_all_cursor glfw_not_allowed_cursor cursor shape add glfw_resize_ew_cursor alias glfw_hresize_cursor add glfw_resize_ns_cursor alias glfw_vresize_cursor add glfw_pointing_hand_cursor alias glfw_hand_cursor add glfw_mouse_passthrough window hint let mouse input pas window add glfw_platform_unavailable error platform detection failure add glfw_feature_unavailable error platform limitation add glfw_feature_unimplemented error incomplete backends add glfw_angle_platform_type init hint glfw_angle_platform_type_ value select angle backend add glfw_x11_xcb_vulkan_surface init hint select x11 vulkan surface extension add glfw_build_win32 cmake option enable win32 support add glfw_build_cocoa cmake option enable cocoa support add glfw_build_x11 cmake option enable x11 support add glfw_library_type cmake variable override library type add glfw_pkg_config_requires_private glfw_pkg_config_libs_private cmake variable expose pkg config dependency make joystick subsystem initialize first make glfw_doublebuffer read window attribute update minimum require cmake version update gamepad mapping upstream disable test default cmake subdirectory rename glfw_use_wayland cmake option glfw_build_wayland remove glfw_use_osmesa cmake option enable null platform remove cmake generate configuration header bugfix cmake config package absolute path relocatable bugfix video mode duplicate screen area discard bugfix compile wextra semi cause warn bugfix mapping fail oems vid pid bugfix extension loader header prevent default opengl header inclusion bugfix buff swap creation single buff window bugfix gamepad map update could spam glfw_invalid_value due incompatible controller share hardware bugfix native access function context handle check api match win32 add glfw_win32_keyboard_menu window hint enable access window menu win32 add version info resource glfw dll win32 disable framebuffer transparency window dwm window opaque win32 bugfix glfw_include_vulkan plus vk_use_platform_win32_khr cause symbol redefinition win32 bugfix cursor position event emit cursor enter event win32 bugfix window hint glfw_maximized move resize window win32 bugfix disable cursor mode interfere non client action win32 bugfix super key release win hotkey win32 bugfix glfwgetkeyname could access bound return invalid pointer win32 bugfix synthetic key event report glfw_key_unknown win32 bugfix non bmp unicode codepoint input report utf win32 bugfix monitor function could return invalid value configuration change win32 bugfix initialization would segfault window win32 bugfix duplicate size event filter win32 bugfix full screen window incorrectly resize dpi change win32 bugfix glfw_scale_to_monitor effect system old window version win32 bugfix use_msvc_runtime_library_dll effect cmake late win32 bugfix compilation llvm window fail win32 bugfix foreground lock timeout override ignore user win32 bugfix content scale query could fail silently win32 bugfix content scale could garbage value monitor recently disconnect win32 bugfix window create maximize undecorated would cover whole monitor win32 bugfix default restore window position lose create maximize window win32 bugfix glfwmaximizewindow would make hide window visible win32 bugfix alt prtsc would emit glfw_key_unknown different scancode prtsc win32 bugfix glfw_key_pause scancode glfwgetkeyscancode match event scancode win32 bugfix instance local operation executable instance cocoa add support vk_ext_metal_surface cocoa add locate vulkan loader runtime application bundle cocoa move main menu creation glfw initialization time cocoa change eglnativewindowtype nsview calayer cocoa change f13 key report print screen cross platform consistency cocoa remove dependency corevideo framework cocoa bugfix glfwsetwindowsize bottom leave anchor point cocoa bugfix window remain screen destruction event poll cocoa bugfix event process window creation would assert cocoa bugfix undecorated window could iconified recent macos cocoa bugfix touch event queue secondary thread main thread would abort cocoa bugfix non bmp unicode codepoint input report utf cocoa bugfix fail retrieve refresh rate display could leak memory cocoa bugfix objective compile cmake cocoa bugfix duplicate video mode filter cocoa bugfix menu bar clickable macos lose regain focus cocoa bugfix monitor name query could segfault macos cocoa bugfix name instal dylib relative cocoa bugfix moltenvk layer content scale update relate event emit cocoa bugfix move cursor programmatically would freeze fraction second cocoa bugfix kiomasterportdefault deprecate macos cocoa bugfix kuttypeurl deprecate macos cocoa bugfix connect apple airplay would emit useless error x11 bugfix cmake check xinput header x11 bugfix key name update keyboard layout change x11 bugfix decoration could enable window creation x11 bugfix content scale fallback value could inconsistent x11 bugfix glfwmaximizewindow effect hide window x11 bugfix clear glfw_floating hide window cause invalid read x11 bugfix change glfw_floating hide window could silently fail x11 bugfix disable cursor mode interrupt indicator window x11 bugfix monitor physical dimension could report x11 bugfix window position event emit resize x11 bugfix glfwfocuswindow could terminate old wms without x11 bugfix query disconnect monitor could segfault x11 bugfix ime input cjk break locale x11 bugfix termination would segfault destroy x11 bugfix start initialization would detect x11 bugfix xlib error cause part application could report glfw error x11 bugfix handle race condition could cause badwindow error x11 bugfix xkb path keysyms instead physical location non printable key x11 bugfix function key map glfw_key_unknown layout combination x11 bugfix key press simultaneously others always report x11 bugfix window attribute apply leave fullscreen x11 bugfix change glfw_floating could leak memory x11 bugfix icon pixel format conversion work accident rely undefined behavior x11 bugfix dynamic load openbsd fail due soname difference x11 bugfix wait event would fail descriptor large x11 bugfix joystick event could lead busy wait x11 bugfix glfwwaitevents continue joystick event x11 bugfix glfwpostemptyevent could ignore due race condition x11 bugfix dynamic load netbsd fail due soname difference x11 bugfix leave shift int constant rely undefined behavior wayland add dynamic load wayland library wayland add support key name via xkbcommon wayland add support path drop event wayland remove support wl_shell wayland bugfix glfw_hand_cursor shape wrong image wayland bugfix clock_monotonic correctly enable wayland bugfix repeat key could report null window wayland bugfix retrieve partial framebuffer size would segfault wayland bugfix scroll offset invert compare platform wayland bugfix client side decoration destroy wrong order wayland bugfix monitor physical size could report wayland bugfix key repeat wayland wayland bugfix non arrow cursor offset hotspot wayland bugfix o_cloexec flag define freebsd wayland bugfix key repeat could lead race condition wayland bugfix activate window would emit input focus event wayland bugfix disable key repeat mechanism window lose input focus wayland bugfix window hide show work wayland bugfix key repeat release window lose focus wayland bugfix show hide window emit window refresh event wayland bugfix full screen window creation ignore glfw_visible wayland bugfix key report wrong key glfw_key_unknown wayland bugfix text input repeat along key repeat wayland bugfix glfwpostemptyevent sometimes effect wayland bugfix glfwsetclipboardstring would fail set glfwgetclipboardstring wayland bugfix source creation error would cause double free termination wayland bugfix partial write clipboard string would cause begin repeat wayland bugfix error would cause clipboard string transfer hang wayland bugfix drag drop misinterpret clipboard string wayland bugfix mime type match perform clipboard string posix remove deprecate function gettimeofday posix bugfix clock_monotonic correctly test enable wgl disable dwm swap interval hack window late nsgl remove enforcement forward compatible flag core context nsgl bugfix glfw_cocoa_retina_framebuffer effect new macos version nsgl bugfix workaround swap interval break nsgl bugfix define gl_silence_deprecation externally cause duplicate definition warn egl add platform selection via egl_ext_platform_base extension egl add angle backend selection via egl_angle_platform_angle extension egl bugfix glfw_doublebuffer context attribute ignore glx bugfix context creation fail glx export glx library contact find late version glfw well news documentation information project question relate glfw glfw irc channel bug report patch submit feature would like request please issue github finally interest help development glfw port favorite platform join forum github irc
C C++;https://github.com/vinniefalco/LuaBridge;luabridge luabridge lightweight dependency free library map function class back forth lua powerful fast lightweight embeddable script language luabridge test work lua revision start although work version lua well luajit luabridge offer follow feature mit license printable reference manual header makefile cpp include simple light nothing else need like boost macro setting configuration script need support different object lifetime management convenient type safe access lua stack automatic function parameter type bind easy access lua object like table function write clear easy debug style please read luabridge reference manual detail api unit test unit test require cmake compliant compiler unit test flavor tests51 lua feature tests51l lua feature tests52 lua feature tests52l lua feature make linux macos generate xcode project macos generate msvs solution window luabridge demo luabridge provide command line program stand alone graphical program compile test suite graphical program bring interactive window enter execute lua statement persistent environment application cross platform work window mac android gnu linux system x11 stand alone program work anywhere application include luabridge lua version necessary produce cross platform graphic application together separate repository additional dependency available github luabridge demo test gui application look like along snippet register class official repository luabridge publish term mit license original version luabridge write nathan reed project take vinnie falco add new functionality write new documentation incorporate contribution nigel atkinson question comment bug report feel free open github issue contact vinnie falco directly email address indicate copyright dmitry tarakanov copyright vinnie falco vinnie falco gmail com copyright nigel atkinson copyright nathan reed portion loki library copyright andrei alexandrescu old version luabridge include distribute bsd clause license see correspond license version distribute separately detail luabridge lua program language luajit probject mit license luabridge reference manual luabridge demo vinnie falco github mailto vinnie falco gmail com vinnie falco email
C C++;https://github.com/include-what-you-use/include-what-you-use;include iwyu depth documentation see doc doc instruction user include mean every symbol type function variable macro foo foo cpp either foo foo include export declaration symbol similarly foo_test either foo_test foo include obviously symbol define foo exclude requirement put state every include header need declare symbol every include possible edit remove unused header without fear accidentally break upwards dependency also become easy automatically track update dependency source caveat alpha quality software best july originally write work specifically google source tree may make assumption gap immediately embarrassingly evident type work get iwyu quality stint new feature prioritize report bug along many exist know bug best chance get problem fix submit patch fix along test case verify fix include make heavy clang internals occasionally break clang update usually discrepancy detect bot fix promptly iwyu master branch follow clang main branch also convenience tag branch release version clang call clang_ clang_5 clang release check correspond branch iwyu configure detail instruction assume already compile llvm clang library system either via package platform source map table combine clang iwyu version correctly clang iwyu version iwyu branch clang_3 clang_3 clang_3 clang_3 clang_4 clang_5 clang_6 clang_7 clang_8 clang_9 clang_10 clang_11 clang_12 clang_13 clang_14 main master note debian ubuntu package available need follow package instal llvm dev libclang dev clang package platform likely subtly different set environment create directory iwyu development iwyu clone iwyu git repo iwyu git clone presumably iwyu release version llvm clang check correspond branch clang instal clang_6 branch iwyu master track llvm clang main iwyu include iwyu include git checkout clang_6 create root cmake generate system link llvm clang prebuilts makefile generator anything work iwyu include iwyu mkdir iwyu clang early iwyu cmake unix makefiles diwyu_llvm_root_path usr lib llvm include iwyu clang late iwyu cmake unix makefiles dcmake_prefix_path usr lib llvm include substitute llvm llvm suffix actual version compatible iwyu branch local llvm clang tree specify cmake_prefix_path iwyu late iwyu cmake unix makefiles dcmake_prefix_path llvm project include cmake generate system invoke directly iwyu make instruction clang available iwyu tree instal pre binary need make sure find clang header stdarg friend clang default policy look path clang executable lib clang include clang instal usr bin search usr lib clang include clang tool policy default order iwyu analyze non trivial need find clang path iwyu lib clang include stand version clang iwyu note distribution package may different default clang print resource dir find base path header system iwyu function correctly need copy clang include directory expect location similarly include print resource dir exactly iwyu want header weirdness track issue hopefully make transparent time original design make number alternative mode come year single source simple way iwyu single source include cxxflags myfile cxxflags flag would normally pas compiler plug exist system typically already system contain relevant compiler flag source replace compiler include generate large batch iwyu advice depend system tool take many form simple gnu make system might look like make cxx include cxxflags xiwyu error_always additional xiwyu error_always switch make include always exit error system know hence need mode include analyze cpp know system along correspond project correspond iwyu ignore unless check_also switch add analysis together possible iwyu individual header provide compiler flag carefully construct match includers cmake cmake grow native support iwyu version see cmake side detail cmake_cxx_include_what_you_use option enable mode cmake first compile source iwyu like mkdir clang cxx clang cmake dcmake_cxx_include_what_you_use include window system mkdir cmake dcmake_cxx_compiler vcinstalldir bin exe dcmake_cxx_include_what_you_use include ninja assume include path consider change value absolute path argument iwyu add cmake semicolon separate list syntax cmake dcmake_cxx_include_what_you_use include xiwyu verbose option appear separately support cmake_c_include_what_you_use note microsoft visual compiler iwyu need driver mode argument understand msvc option cmake compilation database iwyu_tool script pre date native cmake support work compilation database cmake generate database name compile_commands json cmake_export_compile_commands option enable script command line syntax design mimic clang libtooling otherwise unrelated like mkdir clang cxx clang cmake dcmake_export_compile_commands iwyu_tool window system mkdir cmake dcmake_cxx_compiler vcinstalldir bin exe dcmake_c_compiler vcinstalldir bin exe dcmake_export_compile_commands ninja iwyu_tool unless source filename provide project analyze see iwyu_tool help option apply fix also include tool automatically fix source base iwyu recommendation also alpha quality software require make cxx include cxxflags xiwyu error_always tmp iwyu fix_includes tmp iwyu like way fix_includes munges include line control behavior via flag fix_includes help give full list common put blank line system google include nocomments add comment next include correct iwyu mistake fix_includes remove include actually need add back comment iwyu pragma keep end include line note comment case sensitive fix_includes add include need take hope come permanent way fix late fix_includes wrongly add remove forward declare fix manually fix_includes suggest private header instead proper public header fix insert specially craft comment near top private assume write iwyu pragma private include public current iwyu pragmas describe iwyupragmas doc iwyupragmas
C C++;https://github.com/niXman/yas;yas yet another serialization yas create replacement insufficient speed serialization benchmark benchmark yas header library yas depend third party library boost yas require support yas binary archive endian independent support follow type archive binary text json fully comply support follow compiler gcc bite mingw bite clang bite intel untested msvc mode bite emscripten clang version sample easy way save load object var yas save yas load function like type yas mem yas format yas binary yas text yas json yas_object yas_object_nvp yas_object_struct yas_object_struct_nvp macro declare see todo protobuf messagepack support limit object versioning support project support yas project donate btc 12rjx6praxwj1aep6hum54at9wdvscdbsj eth 0x62719ddec96c513699a276107622c73f6cacec47 serialization follow type support project yas mimblewimble crypto currency x17r algorithm kvant original project consensus mimblewimble due maximum anonymity security achieve zkpod lib underlie core library zkpod system fully implement pod proof delivery protocol also provide cli interface together golang bind litecash next generation scalable confidential cryptocurrency base elegant innovative mimblewimble protocol program language large scale system software environment high performance simulation parallel visualization live graph infrastructure synthesis simulation beam next generation scalable confidential cryptocurrency base elegant innovative mimblewimble protocol cross platform infrastructure order management system store node module encrypt package class member annotation geeksys geeksys yas serialize feature image
C C++;https://github.com/kokkos/kokkos;kokkos core library kokkos core implement program write performance portable application target major hpc platform purpose provide abstraction parallel execution management kokkos design target complex node architecture level memory hierarchy multiple type execution resource currently cuda hip sycl hpx openmp thread backend program several backends development kokkos core part kokkos performance portability program ecosystem also provide math kernel well profile debug tool kokkos best way start kokkos kokkos lecture online available contain mix lecture video hand exercise cover important kokkos ecosystem capability program guide api reference find wiki question find slack open github issue non public question send email crtrott sandia gov contribute kokkos open try encourage contribution external developer please first open issue describe contribution issue pull request develop branch large feature may good get guidance core development team first github issue note kokkos core license standard clause bsd term mean contribute kokkos allow anyone else contribution public purpose also close source commercial project specific see license contain repository distribution requirement minimum compiler version generally kokkos work compiler version new minimum however sufficiently complex enough work around compiler bug almost compiler compiler version test may issue unaware gcc clang intel nvcc nvc rocm msvc ibm fujitsu arm clang primary test compiler gcc nvcc clang intel msvc arm clang ibm rocm system cmake require cmake fortran linkage affect mix fortran kokkos see issue knownissues cmake nvc primary test compiler pas release mode warn error also test comprehensive set backend combination openmp pthreads serial openmp serial follow set flag gcc intel clang nvcc compiler test occasionally particular push develop master branch test rigorously without werror select set backends instal kokkos kokkos provide cmake system raw makefile system cmake system strongly encourage rigorously support future release full detail give instruction basic setup show cmake best way kokkos cmake system assume kokkos live srcdir simply type make kokkos cmake package instal path_to_install downstream package validate kokkos configure make test complete cmake project kokkos follow add cmakelists txt configure additionally include location give spack alternative manually cmake spack package manager get start spack bash spack kokkos bash spack kokkos gcc openmp bash spack info kokkos bash spack find kokkos bibtex article author trott christian lebrun grandie damien arndt daniel ciesko jan dang vinh ellingwood nathan gayatri rahulkumar harvey evan hollman daisy ibanez dan liber nevin madsen jonathan mile jeff poliakoff david powell amy rajamanickam sivasankaran simberg mikael sunderland dan turcksin bruno wilke jeremiah journal ieee transaction parallel distribute system title kokkos program extension exascale era year volume number page doi tpds bibtex article author trott christian berger vergiat luc poliakoff david rajamanickam sivasankaran lebrun grandie damien madsen jonathan awar nader gligoric milo shipman galen womeldorff geoff journal compute science engineer title kokkos ecosystem comprehensive performance portability high performance compute year volume number page doi mcse bibtex article carteredwards20143202 title kokkos enable manycore performance portability polymorphic memory access pattern journal journal parallel distribute compute volume number page year note domain specific language high level framework high performance compute issn doi url author carter edward christian trott daniel sunderland term contract na0003525 ntess government retain certain right software
C C++;https://github.com/ukoethe/vigra;vigra computer vision library copyright ullrich koethe part vigra computer vision library may modify distribute software accord term state license txt include vigra distribution vigra website please direct question bug report contribution ullrich koethe iwr uni heidelberg vigra informatik uni hamburg software provide without express imply warranty include without limitation imply warranty merchantibility fitness particular purpose installation installation instruction find documentation yet generate development snapshot find instruction online documentation official release documentation find vigra_path doc vigra start vigra_path doc vigra index html online development version github generate documentation make doc vigra official development repository vigra vigra computer vision library put main emphasis flexible algorithm algorithm represent principal know field library consequently generic program introduce stepanov musser exemplify standard template library write adapter image iterators accessors vigra algorithm top structure within environment alternatively also structure provide within vigra easily adapt wide range application vigra flexibility come almost free since design compile time polymorphism template performance compile program approach traditional hand tune inflexible solution
C C++;https://github.com/zeroc-ice/ice;join chat ice comprehensive rpc framework ice help software minimal effort take care interaction low level program interface ice allow focus effort application logic ice need worry detail open connection serialize deserializing transmission retry fail connection attempt name dozen low level detail ice release zeroc github repository source see branch branch information language ice support follow program language java javascript matlab objective php ruby swift typescript platform ice wide range platform android linux linux embed device macos node unix system aix web browser window feature efficient high performance binary protocol support wide range program language platform easy type safe api interface type define program language neutral idl slice support secure encrypt communication take advantage platform native ssl stack familiar object orient program ability transmit proxy reference remote object remote application support synchronous asynchronous call client side invocation server side dispatch automatic discovery remote object udp multicast come number optional service dns like service ice object support server deployment replication monitor load balance lightweight topic base pub sub service sysadmin friendly solution rout ice communication firewall branch master primary development branch unstable frequently update ice plus various patch stable frequently update ice plus various patch stable ice plus various patch stable ice plus various patch stable copyright license ice single copyright project source ice copyright zeroc inc exception copyright owner zeroc license ice different license term offer follow license ice gpl popular open source license strong condition default license commercial close source license license ice gpl license fee sign license agreement need comply gpl term condition see ice_license ice_license license license information purchase commercial close source license ice must comply term condition list associate license agreement gpl term condition apply ice software remain difference open source ice commercial ice license term documentation ice release ice
C C++;https://github.com/Qihoo360/evpp;evpp project status active project reach stable usable state actively introduction readme_cn evpp modern library develop high performance service tcp udp http protocol evpp provide tcp server support multi thread nonblocking event drive server also http udp server support http udp protocol feature modern interface modern functional bind style callback instead style function pointer multi core friendly thread safe nonblocking multi thread tcp server nonblocking tcp client nonblocking multi thread http server base buildin server libevent nonblocking http client nonblocking multi thread udp server async dns resolve eventloop threadpool timer well test evpp well test unit test stress test daily production production process billion communication every day production easy evpp package deb rpm tar single command straight forward distribution integration also provide library base evpp evmc nonblocking async memcached membase cluster client library library currently production send billion request every day see evmc readme apps evmc readme detail evnsq nonblocking async nsq client library library currently production process billion message every day see evnsq readme apps evnsq readme detail note master development branch may stable time origin business system need tcp long connection gateway tcp service survey open source find appropriate library demand accord business characteristic ideal library must feature simple enough interface support multi thread multi process base libevent preferable project give old application base libevent preferable new framework also base reduce overall time effort cost completion actually old application base libevent describe many option choose develop ourself design interface highly inspire muduo golang let take explain duration time interval class time unit reference duration golang project see many case time interval without unit timeout mean second millisecond microsecond need read document carefully even need read cod duration class self explations time unit additionally std chrono duration stl similar little bite complicate buff memory buff class advantage project muduo golang http server class work thread pool thread safe dispatch task simply string format port represent address reference design golang http client connection pool highly performance future add feature class load balance failover addition pay seriously attations thread safe problem event relate resource must initialize release eventloop thread minimize possibility thread safe error order achieve goal reimplemented event_add event_del function call event_add store resource thread local storage call event_del check whether store thread local storage check thread local storage see whether resource destructively release process exit detail cod harshly pursuit thread safety make program quietly exit reload deep understand develop system forever develop system quietly exit period time totally different thing get start please see quick start doc quick_start benchmark benchmark report event performance benchmark boost asio doc benchmark_ioevent_performance_vs_asio evpp high asio case ping pong benchmark boost asio doc benchmark_ping_pong_spend_time_vs_asio evpp high asio case throughput benchmark libevent2 doc benchmark_throughput_vs_libevent evpp high libevent case throughput benchmark boost asio doc benchmark_throughput_vs_asio evpp asio similar performance case throughput benchmark boost asio doc benchmark_throughput_vs_asio_cn evpp asio similar performance case throughput benchmark muduo doc benchmark_throughput_vs_muduo_cn evpp muduo similar performance case throughput throughput benchmark evpp high libevent2 similar boost asio muduo although evpp base libevent evpp good throughput benchmark libevent evpp implement buff instead libevent evbuffer echo tcp server echo http server echo udp server please see source todo async redis client add zipkin trace support add asio chat room fix comment write mandarin problem add benchmark boost asio cpp netlib beast library muduo libevent libuv production welcome join list thank thank support thank libevent glog gtest golang leveldb rapidjson project evpp highly inspire muduo thank chen
C C++;https://github.com/CopernicaMarketingSoftware/PHP-CPP;php cpp php cpp library library develop php extension offer collection well document easy class extend native extension php full documentation find watch php library update work php version wish create extension old php version library instead php cpp php cpp legacy library almost identical api easily port extension php php way around php cpp create maintain copernica www copernica com write mostly php need effective way combine language php cpp come appreciate work look high quality solution check solution php www php com copernica market suite www copernica com mailerq mta www mailerq com responsive email web service www responsiveemail com power php cpp unlike regular php extension really hard implement require deep knowledge zend engine pointer manipulation extension php cpp difficult develop fact thing need write function php cpp library power offer convert parameter return value function php function native function php cpp export function php single method call work parameter return value easy method call export function php cpp library ensure variable php internally complicate structure automatically convert integer pas function return value my_plus function also convert back php variable type conversion native type php variable handle php cpp feature language matter function accept string integer booleans native parameter php cpp take care conversion return value function also transform php cpp php complicate structure handle php cpp well would like return nest associative array function function equivalent follow function php information available official website
C C++;https://github.com/MediaArea/MediaInfoLib;mediainfolib readme mediainfo lib convenient unify display relevant technical tag video audio mediainfolib copyright mediaarea net sarl right reserve program freeware bsd clause license condition see license html information
C C++;https://github.com/ntop/PF_RING;pfring pfring_logo ntop ntop_logo pf_ring introduction pf_ring linux kernel module user space framework allow process packet high rat provide consistent api packet process application need pf_ring basically everyone handle many packet per second term many change accord hardware traffic analysis range 80k pkt sec 2ghz arm 20m pkt sec per core low end 5ghz xeon pf_ring enable capture packet fast also capture packet efficiently preserve cpu cycle documentation want pf_ring please visit user api detail information pf_ring ntop technology please visit license pf_ring kernel module driver distribute gnu gplv2 license lgplv2 user space pf_ring library available source format pfring_logo ntop_logo
C C++;https://github.com/jll63/yomm11;yomm11 deprecate thank star feedback language implement open method library process fresh idea applicable also colleague david goffredo educate power modern preprocessor macro consequently set implement yomm11 scratch feel much good library read improvement long actively develop yomm11 consider strongly recommend switch yomm2 though old content library implement open multi method salient feature syntax relatively unclutter limitation number virtual argument virtual non virtual argument arbitrarily mix virtual multiple inheritance support speed close virtual function call hierarchy involve virtual argument collaborate library call method nothing single virtual argument single inheritance hierarchy slow equivalent virtual function call difference become unnoticeable function perform simple math operation see test benchmark cpp size dispatch table construct term class group table devoid redundancy support foreign class hierarchy library without modification exist class cost low performance collaborate foreign argument freely mix performance still quite good see benchmark next pointer next specialize method available inside method specialization see next cpp alternatively possible call specialization directly documentation see also article project support discussion yomm11 google group author jean louis leroy yorel
C C++;https://github.com/lefticus/cppbestpractices;cppbestpractices join chat collaborative collection best practice information please see preface preface online resource part jason turner collection best practice resource best practice weekly youtube ultimate cmake starter best practice reilly
C C++;https://github.com/NVIDIAGameWorks/PhysX-3.4;nvidia physx sdk copyright nvidia corporation right reserve redistribution source binary form without modification permit provide follow condition meet redistribution source must retain copyright notice list condition follow disclaimer redistribution binary form must reproduce copyright notice list condition follow disclaimer documentation material provide distribution neither name nvidia corporation name contributor may endorse promote product derive software without specific prior write permission software provide copyright holder express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall copyright owner contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage introduction welcome nvidia physx apex sdk source repository depot include physx sdk apex sdk kapla demo application note apex sdk need either physx sdk demo deprecate provide continue support exist application recommend follow library replacement apex clothe nvcloth apex destruction blast apex particle flex apex turbulence flow documentation online documentation documentation also find repository physx_3 documentation apex_1 doc please also see follow readme physx_3 readme_ html apex_1 readme txt instruction begin clone repository onto local drive physx apex sdks physx sdk open solution find physx_3 source compiler support platform window linux osx android apex sdk distribution contain pre binary support gpu acceleration apex sdk remove support gpu acceleration solution find apex_1 compiler support platform window linux android ______________________________________________________________ physx snippet open solution find physx_3 snippet compiler physx sample window open solution find physx_3 sample compiler apex snippet open solution find apex_1 snippet compiler apex sample open solution find apex_1 samples_v2 compiler kapla demo kaplademo sample compiler please make sure physx sdk visual studio version configuration compile kapla demo make sure appropriate dlls copy kaplademo bin directory acknowledgement depot contain external third party open source software copyright respective owner alexander chemeris android open source project brian paul brodie thiesfield electronic art emil mikulic freeimage hewlett packard company independent jpeg group john ratcliff julio jerez kevin bray khronos group inc kitware inc mark kilgard microsoft corporation open dynamic framework group software foundation univ western ontario assimp clang glew development team
C C++;https://github.com/protocolbuffers/upb;small fast protos often write upb small write upb core runtime protobuf language extension soon upb offer api api abi stable reason upb generally offer library direct consumption release feature upb comparable speed protobuf order magnitude small size like main protobuf support generate api reflection binary json wire format text format serialization standard feature protobufs oneofs map unknown field extension etc full conformance protobuf conformance test upb also support feature optional reflection generate message agnostic whether reflection link global state pre main registration global state fast reflection base parse message load runtime parse fast compile message however feature support text format parse deep descriptor verification upb descriptor validation exhaustive protoc ruby php alternatively upb dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg upb upb port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository contribute please see contribute contribute
C C++;https://github.com/libass/libass;coverity scan libass libass portable subtitle renderer ssa advance substation alpha substation alpha subtitle format mostly compatible vsfilter get see github late release release bug fix release see detail list change source available github contact please issue report bug feature request irc channel talk note online time answer irc question leave channel even get immediate response keep irc client open eventually get back relate link follow project company libass assrender plugin unmaintained kodi punkgraphicsstream subtitle javascript via wasm libass subtitlesoctopus assrender information format specification override tag aegisub vsfilter source ssa vsfilter vsfilter custom format extension sorayuki bugfixes thread defunct vsfilter defunct subsume vsfilter defunct fork guliverkli2 defunct defunct defunct defunct
C C++;https://github.com/paulftw/hiberlite;hiberlite orm object relational map api inspire awesome boost serialization mean _almost api learn_ usage compile link src project include main header feature key feature hiberlite boost serialization like api generator preprocessors support many many many relation automatic generation lazy load smart pointer need inherit single base class contrast serialization library sql serializers object map hiberlite behave similar active record pattern force follow read modify small part write everything back path people need reliable storage acid transaction simple random access like cod sql tutorial typical rdbms application developer deal follow task open database create database schema populate table read modify hiberlite greatly reduce task create database open database simple open sqlite3 exist create another option constructor automatically open create create database schema deal class object know object want store database hiberlite figure store define first must prepare class hiberlite suppose develop social application define person class let hiberlite know internal structure class add access method export declaration inside hibernate archive method list field want persist database macro hiberlite_export_class person invoke register class name hiberlite remember invoke per class project place person cpp good idea point hiberlite able map person database create table database schema hiberlite simply set class store database programmer define set class hiberlite determine need table column instance database maintain copy database schema set class insert new class set registerbeanclass template method application several class store database usually call registerbeanclass several time class register database create table map createmodel execute several create table query dropmodel clean database execute drop table exist query table schema besides uninstallers method may destroy old table probably obsolete scheme call createmodel save database proper schema open put person object copybean template method create copy argument save database return smart pointer bean_ptr bean_ptr inspire boost shared_ptr main difference addition deletion bean_ptr guarantee reference object also save database long need internal primary key autogenerated object database read sqlid_t bean_ptr get_id another way create bean createbean template method load several method query database bean_ptr database loadbean sqlid_t load bean give case object load bean_ptr return bean_ptr lazy pointer wrap object load first need person load late try access name field std vector bean_ptr database getallbeans return vector bean give class object load load object return bean_ptr point bean delete bean remove object database call bean_ptr destroy put together sample cpp demonstration see poor man unit test test cpp user define class first define class plan store database note friend declaration hibernate template method piece necessary hiberlite access internal structure user define class hiberlite_nvp macro create name value pair reference argument hiberlite_export_class define root table name class late store hiberlite table represent myclass instance database table myclass root table myclass contain row per object column store value correspond int double field hiberlite_export_class myclass macro simply declare instance myclass must store int myclass root table subtables myclass_vs_items table subtable myclass store element vector hiberlite_parent_id reference hiberlite_id root table hiberlite_entry_indx index string element vector item value element object database call bean add new bean database call copybean create internal copy argument invoke copy constructor new myclass save database return bean_ptr point copy bean_ptr smart pointer perform reference count care save destroy bean long object lose store database way remove call bean_ptr destroy way create bean database bean_ptr database createbean create bean default constructor return bean_ptr database managebean ptr take control argument wrap bean_ptr must call delete ptr call managebean ptr bean_ptr necessary load call return vector object database bean_ptr smart pointer forget mention also lazy pointer bean load getallbeans primary key give user access underlie object bean_ptr operator overload object create fetch database first operator user define primitive type sometimes number string suitable representation field object case possible extend hiberlite conversion mechanism support type support give enum macro hiberlite_nvp cause compile error member type order convert enum number back conversion safety consideration may apply possible define custom conversion define allow follow work
C C++;https://github.com/sourcey/libsourcey;libsourcey evolve circle libsourcey collection cross platform module class provide developer arsenal rapidly develop high performance base p2p medium stream application think power performance libuv combine feature ffmpeg opencv webrtc integrate ease readability stl standard library documentation repository licence lgpl license basic feature event base core module top libuv underlie library power nodejs event base asynchronous throughout maximize performance minimize concurrency reliance mission critical native server side apps cross platform codebase cross platform compile system access modern compiler modular library library modular easy integration exist project include need without incur extra incumbent bloat well test core module well test unit test stress test daily production clean readable modern design principle adhere throughout clean readable easy package installation libsourcey compile instal platform cmake straight forward distribution integration exist project library also package deb rpm tar zip format single docker image semantically versioned image available docker type docker pull sourcey libsourcey grab late solid layer core libsourcey solid blaze fast layer libuv openssl primitive tcp ssl udp socket web server client http stack provide include server client websockets medium stream transfer authentication http parser base super fast nginx medium stream encode library consist thin wrapper around ffmpeg opencv medium capture encode record stream analysis realtime message libsourcey aim bridge gap desktop mobile web provide performance orient message solution work across platform socket socket client support late protocol revision read symple sourcey home grow realtime message protocol work top socket provide rostering presence many feature necessary online game chat application webrtc support webrtc native support allow p2p desktop server side application inherit libsourcey realtime message medium capability take look stream live webcam microphone stream browser also record live webrtc stream server side get start see installation doc get start play libsourcey good way get acquaint new library tasty http echo server let start classic http echo server look something like cpp srv srv connection conn conn payload conn const mutablebuffer buff conn send buffercast buff buff size conn close srv start pretty neat right crazy fast especially linux kernel new optimize kernel level multicore socket load balance take word though benchmark wrk libsourcey bash wrk d10s timeout test thread connection thread stats avg stdev max stdev latency 76us 62us 42ms req sec 84k 26k 57k request 01s 39mb read request sec transfer sec 04mb nodejs echo server bash wrk d10s timeout test thread connection thread stats avg stdev max stdev latency 70us 11us 83ms req sec 69k 46k 52k request 01s 97mb read request sec transfer sec 19mb see almost twice fast dead simple nodejs echo server bad performance gain web lead technology tout performance check sample full include nodejs echo server benchmarking process interact system process pip painful follow ping sourcey com stdio exit callback cpp process proc ping sourcey com proc onstdout std string line handle process output proc onexit std int64_t status handle process exit proc spawn write random stdin pipe proc random packet stream good start point libsourcey packetstream let create dynamic delegate chain pip process output arbitrary packet method layer packet processor make possible develop complex process application fly capture live webcam stream encode finally broadcast realtime internet cpp create packetstream pas packet input device capture encoder socket packetstream stream setup encoder option encoderoptions option option oformat format mp4 mp4 libx264 yuv420p aac aac fltp create device manager instance enumerate system device devicemanager devman device device create attach default video capture videocapture ptr video devman getdefaultcamera device video open device video getencoderformat option iformat stream attachsource video true create attach default audio capture audiocapture ptr audio devman getdefaultmicrophone device audio open device audio getencoderformat option iformat stream attachsource audio true create attach multiplex encoder multiplexpacketencoder ptr encoder option stream attach encoder attach output net socket instance instantiate elsewhere broadcast encode packet stream attach socket start stream method call start device capture begin pump encode medium output socket stream start plenty demo sample play page contributor massive thank everyone contribute make libsourcey awesome kam low primary developer yury shulbn toolchain platform fix vinci window documentation test update michael fig fix compiler flag without ffmpeg hyunuk kim fix std codecvt unicode character conversion window damian zelim fix compiler flag norm ovenseri add verbose log output system alexey fix cross platform ffmpeg script kryton fix segfaults sample tidy valgrind warn contribute pull request always welcome fix make anything good feel free float back upstream fork libsourcey create feature branch git checkout new feature commit change git commit add feature push branch git push origin new feature create new pull request
C C++;https://github.com/sheredom/utest.h;utest action simple header solution unit test usage include utest current support platform linux macos window current support compiler gcc clang msvc exe clang exe command line option utest support command line option help output help message filter filter test case useful particular offend test case list test list testnames per line output name pas filter output output xunit xml test jenkins travis appveyor parse test enable mix unit enable per test output contain mix unit random order randomize order test optional argument provide random start seed design utest single header library enable fun unit test library design provide output similar google googletest framework utest_main must call macro utest_main call utest instantiate testcases unit test framework alternatively want write main call utest instead call ready call utest framework define testcase define test case follow utest macro take parameter first set test case belong second name test allow test group convenience define fixtured testcase fixtured testcase struct instantiate share across multiple testcases thing note demonstrate new implicit variable within macro utest_fixture pointer struct decide fixture mytestfixture instead specify testcase set like utest macro instead specify name fixture struct every fixture utest_f_setup utest_f_teardown macro even nothing body multiple testcases utest_f fixture expect_ assert_ macro within body fixture setup teardown macro define index testcase sometimes want fixture _and_ testcase repeatedly perhaps subtly change variable within index testcases come note utest_i_ prefix setup teardown function utest_i declare testcases access new variable utest_index setup teardown function slightly vary fixture provide number third parameter utest_i macro number time test case index must literal test macro match googletest provide variant error check condition assert expect assert fail test case cease execution utest continue next test case expect fail remainder test case still execute allow check carry currently provide follow macro within utests assert_true assert evaluate true non assert_false assert evaluate false assert_eq assert equal assert_ne assert equal assert_lt assert assert_le assert equal assert_gt assert great assert_ge assert great equal assert_streq assert string equal assert_strne assert string equal assert_strneq assert string equal length string assert_strnne assert string equal length string assert_near epsilon assert float point value within epsilon distance expect_true expect evaluate true non expect_false expect evaluate false expect_eq expect equal expect_ne expect equal expect_lt expect expect_le expect equal expect_gt expect great expect_gt expect great equal expect_streq expect string equal expect_strne expect string equal expect_strneq expect string equal length string expect_strnne expect string equal length string expect_near epsilon expect float point value within epsilon distance type support check library support assert builtin integer float point pointer type license free unencumbered software release public domain anyone free copy modify publish compile sell distribute software either source form compile binary purpose commercial non commercial mean jurisdiction recognize copyright law author author software dedicate copyright interest software public domain make dedication benefit public large detriment heir successor intend dedication overt act relinquishment perpetuity present future right software copyright law software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author liable claim damage liability whether action contract tort otherwise arise connection software deal software information please refer
C C++;https://github.com/mattiasflodin/reckless;performance chart quad core cpu doc image performance_mandelbrot_difference png doc performance introduction reckless extremely low latency high throughput log library doc performance create need perform extensive diagnostic log without worry performance log boast ability throw log message away quickly reckless boast ability keep without worry performance impact filter wait want read log need clean disk space work low latency mean time call library return caller short could make generate call site consist push argument share lockless queue non contend case roughly cost make function call actual message format write perform asynchronously separate thread remove hide several cost transition kernel call site kernel easily overlook important cost transition cost time pollute cpu cache word avoid make non log fast library enter kernel perform work lock need take synchronization thread unless queue fill see performance article information implication text format need perform resume main task program wait actual operation complete burst log call multiple item queue batch single operation improve throughput without sacrifice write latency detail performance discussion statistic see performance article doc performance catch string format asynchronously single thread caveat need aware choose pas log argument reference pointer must ensure reference remain valid least log flush close unless interest log value pointer best option dynamically allocate typically std string std shared_ptr std unique_ptr must take special care handle crash want make sure log prior crash save unique asynchronous log fprintf buff flush asynchronous log arguably make issue bad library provide convenience function aid string format single thread could theoretically limit scalability application format expensive program generate high volume log entry parallel performance become somewhat predictable hard measure rather put cost log thread call log library may suspend thread make room log thread basic would give follow output platform library work window linux bsd roadmap apple computer happen unless someone send patch buy hardware alternative visual studio window recommend visual studio library simply open reckless sln choose batch select press library place subdirectory program library need set library path point appropriate library configuration set include path reckless reckless include reckless give reckless property point reckless source directory alternative make library gnu make clone git repository make work gcc compatible compiler program library give variable reckless point reckless root directory alternative cmake library cmake clone git repository follow command program library cmake add follow line program cmakelists txt subsequently link library program your_executable add follow program cmakelists txt information detail see manual doc manual alternative log library similar asynchronous design another deviate design since log binary require postprocessing read log
C C++;https://github.com/ARMmbed/mbedtls;readme mbed mbed library implement cryptographic primitive certificate manipulation ssl dtls protocol small footprint make suitable embed system mbed include reference psa cryptography api psa cryptography api currently preview evaluation purpose configuration mbed box system platform specific option available fully document configuration include mbedtls mbedtls_config also place feature select edit manually programmatic way script script config help usage instruction compiler option set conventional environment variable cflags make cmake system see provide non standard configuration focus specific case configs directory read configs readme txt documentation documentation mbed interface default library configuration available part mbed generate local copy library documentation html format tailor compile time configuration make sure instal make apidoc browse apidoc index html apidoc module html source documentation see support support document compile currently active system within mbed release gnu make cmake microsoft visual studio main system development cmake gnu make system always complete date others reflect change present cmake make system although feature may port automatically make cmake system create library libmbedcrypto libmbedx509 libmbedtls note libmbedtls depend libmbedx509 libmbedcrypto libmbedx509 depend libmbedcrypto linkers expect flag specific order gnu linker want lmbedtls lmbedx509 lmbedcrypto tool version need follow tool library provide makefiles gnu make tool cmake support c99 toolchain compiler linker archiver actively test gcc clang iar visual studio recent version work slightly old version may work generate test generate sample program development branch perl test generate source development branch cmake late cmake microsoft visual studio late visual studio doxygen late documentation slightly old version work generate source development branch source mbed include automatically generate script whose content depend mbed source platform library configuration include development branch mbed generate include official release section explain generate miss development branch follow tool require perl library source visual studio package library source sample program test necessary package compiler host platform test cross compile must set environment variable compiler host platform generate configuration independent follow method available generate configuration independent cross compile make target make automatically generate require non window system cross compile cmake generate require automatically make generated_files generate configuration independent unix posix system test script check generate generate configuration independent window script make_generated_files bat generate configuration independent make require gnu make library sample program gnu make compiler sufficient advance target require unix linux tool intentionally minimum functionality makefiles order keep simple independent different toolchains possible allow user easily move different platform user need feature recommend cmake order source gnu make enter command line make order test enter make check test need perl instal skip test make no_test still able much small set test program test selftest order window platform windows_build target window environment unix like instance cross compile compile msys window environment window instance mingw32 make case target available set variable share environment share library addition static library set debug give debug override cflags ldflags set environment make command line compiler warn option may override separately warning_cflags directory specific option directive still preserve please note set cflags override default value set warning_cflags override default value start wall wextra want add warn option default set cflags werror set warning_cflags useful want get rid default content compiler accept wall option directory specific option override command line depend platform might issue please check makefiles library program test option manually add remove specific platform also check mbed knowledge article platform issue case find need something else well please let know add mbed knowledge cmake order source cmake separate directory recommend enter command line mkdir path build_dir path build_dir cmake path mbedtls_source cmake order test enter ctest test suit need perl execute instal want disable test suit cmake denable_testing path mbedtls_source disable test suit keep program enable still much small set test program test selftest configure cmake share library cmake duse_shared_mbedtls_library path mbedtls_source many different mode available within cmake buildsystem available gcc clang though compiler specific release generate default without unnecessary information binary debug generate debug information disable optimization coverage generate coverage information addition debug information asan instrument addresssanitizer check memory error include leaksanitizer recent version gcc clang recent version clang mode also instrument undefinedsanitizer check undefined behaviour asandbg asan slow debug information good stack trace memsan instrument memorysanitizer check uninitialised memory read experimental need recent clang linux x86 _64 memsandbg memsan slow debug information good stack trace origin track check activate compiler warn depend optimization treat warn error switch mode cmake simple debug mode enter command line cmake cmake_build_type debug path mbedtls_source list available cmake option cmake note cmake adjust compiler flag initial invocation cmake mean your_cc make make your_cc work similarly cflags variable variable need adjust invoke cmake first time your_cc cmake path mbedtls_source already invoke cmake want change setting need remove directory create note possible place however overwrite provide makefiles see script tmp_ignore_makefiles want prevent git status show modify order mbed source directory cmake make want change cflags afterwards need remove cmake cache follow command gnu find find iname cmake name cmakelists txt exec make desire change your_cc cmake make regard variable also note set cflags invoke cmake value cflags override content provide cmake depend mode see merely prepended consume mbed mbed provide package config consumption dependency cmake project include mbed cmake target find_package mbedtls prompt set mbedtls_dir your_mbedtls_install_dir cmake create follow target mbedtls mbedcrypto crypto library mbedtls mbedtls library mbedtls mbedx509 x509 library directly target_link_libraries add_executable xyz target_link_libraries xyz public mbedtls mbedtls mbedtls mbedcrypto mbedtls mbedx509 link mbed library library application add include directory target transitively case public interface link library mbed subproject mbed support cmake subproject add_subdirectory parent cmake project include mbed subproject microsoft visual studio microsoft visual studio generate visual studio solution mbedtls sln contain basic project need library program test generate compile need perl environment well however selftest program program test still available development branch mbed visual studio solution need generate first describe generate source development branch generate source development branch program include program lot different feature program program readme please note goal sample program demonstrate specific feature library may need adapt real world application test mbed include elaborate test suite test initially require generate test test _suite _mpi generate function suit test _suite _mpi function suit test _suite _mpi function contain test function contain test case specify parameter pas test function machine unix openssl optionally gnutls instal additional test script available test ssl opt integration test various option renegotiation resumption etc test interoperability option test compat test interoperability every ciphersuite test script test ref configs test various reduce configuration test script key exchange test configuration single key exchange enable test script combination test plus various option asan full mbedtls_config etc port mbed mbed port many different architecture platform start port may find follow knowledge base article useful port mbed new environment external dependency mbed rely configure mbed mbed mostly write portable c99 however platform requirement beyond standard meet modern architecture byte must bit bit must valid representation null pointer sign integer must represent complement int size_t must least bit wide type uint8_t uint16_t uint32_t sign equivalent must available psa cryptography api psa api design arm platform security architecture holistic set threat security analyse hardware firmware architecture specification open source firmware reference psa provide recipe base industry best practice allow security consistently design hardware firmware level psa cryptography provide access set cryptographic primitive dual purpose first psa compliant platform service secure boot secure storage secure communication second also independently psa component platform design goal psa cryptography api include api distinguish caller memory internal memory allow library implement isolate space additional security library call implement direct function call isolation desire remote procedure call isolation desire structure internal hide application allow substitute alternative time time order take advantage hardware accelerator access key happen key identifier allow support external cryptoprocessors transparent application interface algorithm generic favor algorithm agility interface design easy hard accidentally misuse arm welcome feedback design api think something could improve please open issue github repository alternatively prefer provide feedback privately please email mbed crypto arm com mailto mbed crypto arm com feedback receive email treat confidentially psa api documentation browsable copy psa cryptography api document available psa cryptography interface documentation format psa mbed mbed include reference psa cryptography api yet mature rest library part review thoroughly part psa yet well optimize size psa cryptography limit subset operation enable support activate compilation option mbedtls_use_psa_crypto mbedtls_config currently deviation library yet implement late version specification please refer compliance issue date list upcoming feature future release library include driver program interface make possible hardware accelerator instead default software choose algorithm support external key store manipulate exclusively separate cryptoprocessor configuration mechanism compile algorithm need application wide set cryptographic algorithm license unless specifically indicate otherwise mbed provide license see license license full text license contributor must accept contribution make apache license enable lts long term support branch software provide either apache gpl late license contribute gratefully accept bug report contribution community please see contribute guideline contribute detail contact report security vulnerability mbed please email information see security security report bug request feature mbed please issue please see support support channel discussion support mbed
C C++;https://github.com/lz4/lz4;lz4 extremely fast compression lz4 lossless compression algorithm provide compression speed per core scalable multi core cpu feature extremely fast decoder speed multiple per core typically reach ram speed limit multi core system speed tune dynamically select acceleration factor trade compression ratio fast speed end high compression derivative lz4_hc also provide trade cpu time improve compression ratio version feature decompression speed lz4 also compatible dictionary level ingest input dictionary though final 64kb capability combine zstandard dictionary order drastically improve compression performance small lz4 library provide open source software bsd clause license branch status dev status travisdevbadge travislink status appveyordevbadge appveyorlink travisdevbadge continuous integration test suite travislink appveyordevbadge window test suite appveyorlink benchmark benchmark lzbench inikep compile gcc linux bit ubuntu reference system core 9700k cpu 9ghz turbo boost benchmark evaluate compression reference silesia corpus single thread mode lzbench silesia corpus compressor ratio compression decompression memcpy lz4 default lzo quicklz snappy zstandard lzf zlib deflate lz4 zlib deflate zlib zstandard lz4 also compatible optimize x32 mode provide additional speed performance installation lz4 makefile support standard makefile convention include stag redirection command redefinition compatible parallel makefile convention stag redirection command redefinition lz4 vcpkg lz4 dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg lz4 lz4 port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository documentation raw lz4 block compression format detail within lz4_block_format arbitrarily long stream compress multiple block stream requirement block organize frame define lz4_frame_format interoperable version lz4 must also respect frame format lz4_block_format doc lz4_block_format lz4_frame_format doc lz4_frame_format source version beyond reference source many contributor create version lz4 multiple language java perl ruby etc list know source port maintain lz4 homepage lz4 homepage
C C++;https://github.com/Microsoft/cpprestsdk;cpprestsdk maintenance mode recommend new project continue fix critical bug address security issue welcome rest sdk microsoft project cloud base client server communication native modern asynchronous api design project aim help developer connect interact service get start vcpkg homebrew ubuntu fedora rawhide opensuse tumbleweed debian test window debian ubuntu fedora osx window android platform option source take look library look walk setup project rest sdk make basic http request cmake sdk feature http client server json uri asynchronous stream websockets client oauth ppl task powerful compose asynchronous operation base feature platform window desktop window store uwp linux unix android support visual studio debugger visualizer contribute back feature miss would like see find bug fix idea interest help library let know would love work good start point head feature idea take look request feature big small would like take back help improve rest sdk everyone interest contact askcasablanca microsoft dot com trouble would love get review score whether good bad even want fix problem submit issue review able respond problem ask follow question may necessary efficient way open issue issue quick link issue project adopt microsoft open source information see conduct contact opencode microsoft com mailto opencode microsoft com additional question comment
C C++;https://github.com/ycm-core/YouCompleteMe;youcompleteme completion engine vim gitter coverage help advice support look help advice support problem get ycm work first carefully read installation instruction installation recommend supply full installation guide rare advance case user server start get youcompleteme unavailable error check troubleshoot wiki troubleshoot guide next check user guide user guide section semantic complete objective objective cuda _must_ read section family semantic completion finally check faq wiki faq read installation user guide check faq still trouble check contact contact section get touch please vim freenode support please contact youcompleteme maintainer directly contact detail contact content intro intro installation installation requirement requirement macos macos linux bite linux bite window window freebsd openbsd freebsdopenbsd full installation guide full installation guide quick feature summary quick feature summary user guide user guide general usage general usage client server architecture client server architecture completion string rank completion string rank general semantic completion general semantic completion signature help signature help family semantic completion family semantic completion java semantic completion java semantic completion semantic completion semantic completion semantic completion semantic completion rust semantic completion rust semantic completion semantic completion semantic completion javascript typescript semantic completion javascript typescript semantic completion semantic completion language semantic completion language lsp configuration lsp configuration write new semantic completers write new semantic completers diagnostic display diagnostic display diagnostic highlight group diagnostic highlight group symbol search symbol search command command ycmcompleter subcommands ycmcompleter subcommands goto command goto command semantic information command semantic information command refactoring command refactoring command miscellaneous command miscellaneous command function function autocommands autocommands option option faq faq contributor conduct contributor conduct contact contact license license sponsorship sponsorship intro youcompleteme fast type fuzzy search completion comprehension refactoring engine vim several completion engine support protocol compliant language server work practically language youcompleteme contain identifier base engine work every program language powerful clangd base engine provide native semantic completion objective objective cuda refer family language jedi base completion engine omnisharp roslyn base completion engine gopls base completion engine tsserver base completion engine javascript typescript rust analyzer base completion engine rust jdt base completion engine java generic language server protocol language plug arbitrary lsp server omnifunc base complete vim omnicomplete system provide semantic completion many language ruby php etc youcompleteme gif completion explanation happen last gif demo first realize keyboard shortcut press get list completion candidate point demo user type suggestion pop user find completion suggestion relevant want type completion engine interfere user see useful completion string offer press tab key accept insert completion string repeat press tab key cycle offer completion offer completion relevant enough user continue type filter unwanted completion critical thing notice completion filter base input string prefix completion work input need subsequence match_ completion fancy way say input character need present completion string order appear input abc subsequence xaybgc xbyxaxxc filter complicate sort system rank completion string relevant rise top menu usually need press tab work program language identifier base completion engine collect identifier current visit tag search type identifier put per filetype group demo also show semantic engine user press type insert mode different trigger language semantic engine trigger also trigger keyboard shortcut see rest doc last thing see demo ycm diagnostic display feature little red show leave gutter inspire syntastic edit family complete engine compile detect warn error present various way need save press keyboard shortcut trigger happen background ycm might vim completion engine correct unicode support though assume utf everywhere youcompleteme gif unicode ycm also provide semantic ide like feature quick feature summary number language include display signature help argument hint enter argument function call vim find declaration definition usage goto command etc identifier interactive symbol finder symbol search display type information gettype subcommand class variable function etc display documentation method member etc preview window getdoc subcommand popup next cursor gycm_auto_hover option vim fix common cod error fixit subcommand like miss semi colon typo etc semantic rename refactorrename subcommand variable across format remove unused import sort import etc demo signature help signature help early see ycm able thing retrieve reference across declaration definition expand auto fix common error fixit show gif gotoimplementation gototype server support youcompleteme gif subcommands documentation show hover popup automatically manually hover feature vary type make sure check type feature summary quick feature summary full list complete subcommands ycmcompleter subcommands find available favourite language also find ycm filepath completers try type complete integrate ultisnips installation requirement support vim version policy support vim version late lts ubuntu currently ubuntu contain vim nox vim must work runtime compile enable share enable framework check py3 import sys print sys version neovim user policy require late release version currently neovim require please note feature available neovim neovim officially support support compiler order provide best possible performance stability ycmd update require version bump minimum support compiler new requirement compiler current min gcc clang msvc ycm require cmake great cmake old may able simply pip user cmake get really new version individual complete requirement enable language support particular language may runtime requirement need java development kit java support general ycm control require version downstream compiler though best signal know macos quick start instal completers ycm plugin via vundle cmake macvim note pre instal macos system vim support due break integration mono mono project mono macos note intel mac also brew mono arm mac may require rosetta java support must jdk way homebrew pre instal macos system vim support need either vim support macvim homebrew brew option instal vim support option instal macvim compile ycm intel arm64 mac bundle libclang clangd work trouble find system framework standard library try homebrew llvm edit vimrc add follow line homebrew llvm clangd arbitrary lsp server check relevant section plug arbitrary lsp server explanation quick start instruction quick way youcompleteme however may work everyone follow instruction work check full installation guide full installation guide support vim version require macvim good option even terminal ycm work pre instal vim apple support break already vim support macvim homebrew brew cmake well brew vim cmake brew macvim cmake youcompleteme vundle remember ycm plugin compile component update ycm vundle ycm_core library apis change happen rarely ycm notify recompile rerun process note want family completion must late xcode instal along late command line tool instal automatically clang first time manually xcode select compile ycm semantic support family language clangd compile ycm without semantic support family language follow additional language support option available support mono macos package mono macos add complete call support add complete call javascript typescript support node npm npm add complete call rust support add rust complete call java support jdk jdk add java complete call simply compile everything enable flag language feature ensure xbuild node npm tool instal path simply refer _user guide_ section ycm forget want family semantic completion engine work need provide compilation flag project ycm user guide ycm come sane default option still may want take look available configuration interest option conservatively turn default may want turn linux bite follow assume ubuntu quick start instal completers ycm plugin via vundle cmake vim mono complete node java npm compile ycm plug arbitrary lsp server check relevant section plug arbitrary lsp server explanation quick start instruction quick way youcompleteme however may work everyone follow instruction work check full installation guide full installation guide make sure support version vim support support compiler late lts ubuntu minimum platform simple installation early release distribution may work acquire dependency vim version old may need compile vim source vim worry easy youcompleteme vundle remember ycm plugin compile component update ycm vundle ycm_core library apis change happen rarely ycm notify recompile rerun process development tool cmake header fedora like distribution ubuntu lts compile ycm semantic support family language clangd compile ycm without semantic support family language follow additional language support option available support mono mono linux add complete call support add complete call javascript typescript support node npm npm add complete call rust support add rust complete call java support jdk jdk add java complete call simply compile everything enable flag language feature ensure xbuild node npm tool instal path simply refer _user guide_ section ycm forget want family semantic completion engine work need provide compilation flag project ycm user guide ycm come sane default option still may want take look available configuration interest option conservatively turn default may want turn window quick start instal completers ycm plugin via vundle visual studio tool visual studio cmake vim node npm compile ycm add set encode utf vimrc plug arbitrary lsp server check relevant section plug arbitrary lsp server explanation quick start instruction quick way youcompleteme however may work everyone follow instruction work check full installation guide full installation guide important assume cmd exe command prompt know add executable path environment variable make sure support vim version support check version support type version inside vim look feature include python3 dyn take note vim architecture bite important choose installer recommend bite client daily update installers bite bite vim support vim win available add follow line vimrc already present option require ycm note prevent edit another encode utf specify enc argument enc command youcompleteme vundle remember ycm plugin compile component update ycm vundle ycm_core library apis change happen rarely ycm notify recompile rerun process follow software win sure pick version correspond vim architecture _windows x86_ bite vim _windows x86 64_ bite vim recommend instal additionally version must match exactly version vim look type version look bottom page list compiler flag look flag look similar ddynamic_python3_dll python36 dll indicate vim look need instal match version number exactly cmake cmake add cmake executable path environment variable tool visual studio visual studio setup select tools_ _workloads_ compile ycm semantic support family language clangd compile ycm without semantic support family language follow additional language support option available support add complete call sure utility msbuild path add msbuild path support add complete call javascript typescript support node npm npm add complete call rust support add rust complete call java support jdk jdk add java complete call simply compile everything enable flag language feature ensure msbuild node npm tool instal path simply specify microsoft visual msvc version msvc option ycm officially support msvc msvc visual studio msvc visual studio refer _user guide_ section ycm forget want family semantic completion engine work need provide compilation flag project ycm user guide ycm come sane default option still may want take look available configuration interest option conservatively turn default may want turn freebsd openbsd quick start instal completers ycm plugin via vundle cmake xbuild node npm compile ycm plug arbitrary lsp server check relevant section plug arbitrary lsp server explanation quick start instruction quick way youcompleteme however may work everyone follow instruction work check full installation guide full installation guide note openbsd freebsd officially support platform ycm make sure support vim version support support compiler cmake perhaps youcompleteme vundle remember ycm plugin compile component update ycm vundle ycm_core library apis change happen rarely ycm notify recompile rerun process compile ycm semantic support family language clangd compile ycm without semantic support family language executable present default compile specify interpreter explicitly follow additional language support option available support mono add complete call support add complete call javascript typescript support node npm npm add complete call rust support add rust complete call java support jdk jdk add java complete call simply compile everything enable flag language feature ensure xbuild node npm tool instal path simply refer _user guide_ section ycm forget want family semantic completion engine work need provide compilation flag project ycm user guide ycm come sane default option still may want take look available configuration interest option conservatively turn default may want turn full installation guide full installation guide wiki full move wiki quick feature summary general language super fast identifier complete include tag syntax element intelligent suggestion rank filter path suggestion suggestion vim omnifunc ultisnips snippet suggestion family language objective objective cuda semantic auto completion automatic fix signature help real time diagnostic display include declaration definition goto etc find symbol gotosymbol interactive search document outline gotodocumentoutline interactive search view documentation comment identifier getdoc type information identifier gettype automatically fix certain error fixit reference find gotoreferences rename symbol refactorrename format format semantic auto completion signature help real time diagnostic display declaration definition goto etc gotoimplementation find symbol gotosymbol interactive search view documentation comment identifier getdoc type information identifier gettype automatically fix certain error fixit management omnisharp roslyn server instance rename symbol refactorrename format format semantic auto completion signature help definition goto find symbol gotosymbol interactive search reference find gotoreferences view documentation comment identifier getdoc type information identifier gettype rename symbol refactorrename semantic auto completion signature help real time diagnostic display declaration definition goto etc type definition gototype gotoimplementation document outline gotodocumentoutline interactive search automatically fix certain error fixit view documentation comment identifier getdoc type information identifier gettype format format management gopls server instance javascript typescript semantic auto completion automatic import insertion signature help real time diagnostic display definition goto gotodefinition gotodeclaration identical type definition gototype gotoimplementation find symbol gotosymbol interactive search reference find gotoreferences view documentation comment identifier getdoc type information identifier gettype automatically fix certain error fixit rename symbol refactorrename format format organize import organizeimports management tsserver server instance rust semantic auto completion real time diagnostic display declaration definition goto etc gotoimplementation reference find gotoreferences document outline gotodocumentoutline interactive search view documentation comment identifier getdoc automatically fix certain error fixit type information identifier gettype rename symbol refactorrename format format management rust analyzer server instance java semantic auto completion automatic import insertion signature help real time diagnostic display definition goto gotodefinition gotodeclaration identical type definition gototype gotoimplementation find symbol gotosymbol interactive search reference find gotoreferences document outline gotodocumentoutline interactive search view documentation comment identifier getdoc type information identifier gettype automatically fix certain error include generation fixit rename symbol refactorrename format format organize import organizeimports detection java project execute custom server command executecommand management jdt server instance user guide general usage offer completion broad keep type character ycm continue refine offer completion base input filter smart case smart diacritic sensitive type lowercase letter case insensitive input contain uppercase letter uppercase letter query must match uppercase letter completion string lowercase letter still match top letter diacritic mark match letter without mark match foo foo foo foo foo foo foo foo tab key accept completion continue press tab cycle completion shift tab cycle backwards note console vim gvim macvim likely shift tab bind work console pas vim remap key see option option section know little bite ycm work internally prevent confusion ycm several completion engine identifier base complete collect identifier current visit tag search type identifier put per filetype group also several semantic engine ycm libclang base clangd base completers provide semantic completion family language jedi base complete semantic completion also omnifunc base complete vim omnicomplete system provide semantic completion native complete exist language ycm also completion engine like ultisnips complete filepath complete ycm automatically detect completion engine would best situation occasion query several merge output present client server architecture ycm client server architecture vim part ycm thin client talk ycmd http json server ycmd vast majority ycm logic functionality server start stop automatically start stop vim completion string rank subsequence filter remove completion match input sort system kick actually complicate lot factor suffice say word boundary subsequence character match worth non match effect mean give input gua completion getuseraccount would rank high list fooguxa completion subsequence match word boundary character capital character character precede underscore first letter character completion string signature help valid signature display second popup menu current signature highlight along current argument signature help trigger insert mode automatically ycm_auto_trigger enable support enable signature popup hide match signature leave insert mode key bind clear popup detail feature demo check propose signature help dismiss signature help signature help popup sometimes get way toggle visibility map ycm provide plug map ycmtogglesignaturehelp hide show signature help popup press ctrl insert mode imap ycmtogglesignaturehelp _note_ default map provide insert mapping difficult create without break override exist functionality ctrl suggestion general semantic completion ctrl space trigger completion suggestion anywhere even without string prefix useful see top level function available family semantic completion note ycm originally libclang base engine family user migrate clangd provide feature good performance user rely override_filename ycm_extra_conf need stay old libclang engine instruction stay old engine available wiki libclang instruction feature clangd project wide index clangd dynamic static index support dynamic index store date symbol come currently edit whereas static index contain project wide symbol information symbol information completion navigation whereas libclang limit current translation unit navigation clangd provide goto request libclang provide improve mention index information contain project wide information rather current rename clangd perform semantic rename operation current whereas libclang support functionality completion clangd perform completion low latency libclang also information symbol project suggest item outside current also provide proper include insertion item signature help clangd provide signature help see name type argument call function format clangd provide format either select line whole whereas libclang functionality performance clangd fast parse completion time compare libclang installation support architecture script suitable clangd clangd complete libclang clang complete support architecture linux glibc intel armv7 aarch64 ubuntu macos intel arm64 intel compatibility per clang llvm org arm64 macos window intel compatibility per clang llvm org clangd typically clangd instal ycm installer either clangd complete pre clangd binary architecture architecture support old compatible clangd ycm_clangd_binary_path point libclang libclang enable also clang complete clangd ycm try version libclang suitable environment environment support acquire libclang specify please note custom clangd libclang _must_ match version ycm require currently ycm require clang compile flag order perform semantic analysis completion goto diagnostics youcompleteme clangd make clang compiler sometimes also refer llvm like compiler clang also require set compile flag order parse simply put clang parse youcompleteme provide semantic analysis method provide compile flag clang option compilation database compdb easy way get ycm compile compilation database compilation database usually generate system cmake contain compiler invocation compilation unit project information generate compilation database see clang documentation compdb short cmake add dcmake_export_compile_commands configure add set cmake_export_compile_commands cmakelists txt copy symlink generate database root project ninja check compdb tool compdb doc ninja compdb gnu make check compiledb bear system check ycm_extra_conf option provide flag manually ycm_extra_conf option provide flag manually find youcompleteme automatically try load compilation database ycm look name compile_commands json directory open directory hierarchy recursively find local ycm_extra_conf youcompleteme stop search directory let clangd take handle flag option provide flag manually compilation database able generate tell youcompleteme compile way every family project different possible ycm guess compiler flag supply project fortunately ycm provide mechanism generate flag particular _arbitrary complexity_ achieve require provide module implement trivial function give name argument return list compiler flag compile ycm look ycm_extra_conf directory open directory hierarchy recursively find load module ycm call setting method module provide information necessary compile current also provide path global configuration ycm_global_ycm_extra_conf gycm_global_ycm_extra_conf option option fallback prevent execution malicious write ycm ask per ycm_extra_conf safe load disable white blacklist see ycm_confirm_extra_conf gycm_confirm_extra_conf option ycm_extra_conf_globlist gycm_extra_conf_globlist option option respectively system design way user perform arbitrary sequence operation produce list compilation flag ycm hand clang note highly recommend include flag libclang correct language detect particularly header common value objc objective cuda cuda give impression project trivial usual compilation command wall wextra werror follow ycm_extra_conf enough get semantic analysis youcompleteme see trivial ycm call setting method return dictionary single element flag element list compiler flag pas libclang current absolute path accessible filename key kwargs dictionary actually enough project complex project uncommon integrate directly exist system full power language elaborate see ycmd ycm_extra_conf ycmd_flags_example able _as start point_ copy paste somewhere expect thing magically work project need different flag hint replace string flag variable compilation flag necessary project enough project could also consider ycm generator ygen generate ycm_extra_conf error compilation clang encounter error compile header include probably take long time get completion completion menu finally appear large number unrelated completion string type function name actually member clang fail precompiled preamble error include header preamble key get fast completion call ycmdiags command see error warn detect java semantic completion java quick start ensure enable java complete see installation guide installation detail create project gradle maven root directory java project follow instruction optional configure lsp server lsp configuration jdt configuration option jdtls preference find codebase previously eclim syntastic java disable java edit java project java project order provide semantic analysis java completion engine require knowledge project structure particular need know class path compile fortunately jdt support eclipse project eclipse project maven project mvn project gradle project gradle project note recommendation either maven gradle project diagnostic display syntastic native support java include ycm native realtime diagnostics display conflict diagnostics plugins like syntastic enable java support please manually disable syntastic java diagnostics add follow vimrc diagnostic display eclim native support java include ycm native realtime diagnostics display conflict diagnostics plugins like eclim enable java support please manually disable eclim java diagnostics add follow vimrc note recommend disable eclim entirely edit java ycm native java support temporarily eclimdisable eclipse project eclipse style project require project eclipse dot project classpath eclipse dot classpath project already due previously set within eclipse setup require jdt load project fine basically eclipse however possible easy fact craft manually though recommend good gradle maven see simple eclipse style project ycmd eclipse project find ycmd test directory normally require copy root project edit classpath add additional library may also necessary change directory source locate path relative project note eclipse project classpath public interface highly recommend maven gradle project definition already eclipse manage project maven project maven need name pom xml mvn project root project simple pom xml ycmd mvn pom xml find ycmd source format pom xml mvn project way beyond scope document recommend various tool generate familiar already gradle project gradle project require gradle gradle project trivial ycmd test ycmd gradle project format gradle gradle project way beyond scope document recommend various tool generate familiar already user experience issue jdt groovy language gradle try instead troubleshoot get completion diagnostics check server health java completion engine take start parse project able see progress command line ycmdebuginfo ensure follow line present line appear minute check jdt ycmd log ycmtogglelogs ycmtogglelogs command jdt log call log reason get message classpath incomplete make sure correctly configure project java project get message unresolved import make sure correctly configure project java project particular check classpath set correctly semantic completion ycm rely omnisharp roslyn provide completion navigation omnisharp roslyn need solution project way let ycm know solution automatically discover solution ycm scan parent directory currently edit look sln extension manually specify solution ycm load ycm_extra_conf contain csharpsolutionfile function ycm try determine solution useful want override default behaviour specify solution parent directory currently edit path return csharpsolutionfile actual ycm fall back way find semantic completion ycm rely jedi engine provide completion navigation default pick version ycmd server ycmd sys path fine simple project need configurable work virtual environment project third party package next section explain work virtual environment common practice work project dependency virtual environment develop project inside environment support ycm need know interpreter path virtual environment specify create ycm_extra_conf root project follow content path virtual environment path virtual environment work typically executable find script folder virtual environment directory window bin folder platform like create ycm_extra_conf root project would prefer specify interpreter path vim option read configure vim option configure vim option section work third party package another common practice put dependency directly project add path sys path runtime order import ycm need tell path manipulation support dependency create ycm_extra_conf root project must define setting kwargs function return dictionary list path prepend sys path sys_path key instance follow ycm_extra_conf add path path third_party package path another third_party package start sys path would rather prepend path sys path vim option read configure vim option configure vim option section need control add path sys path define pythonsyspath kwargs function ycm_extra_conf keyword argument sys_path contain default sys path interpreter_path path interpreter trivial insert path third_party package path second position sys path advance find ycm ycm_extra_conf ycm_flags_example configure vim option may find inconvenient create ycm_extra_conf root project order set path interpreter add path sys path would prefer able configure vim option worry possible ycm_extra_conf_vim_data gycm_extra_conf_vim_data option option create global extra configuration let take suppose want set interpreter path ycm_python_interpreter_path option prepend path sys path ycm_python_sys_path option suppose also want name global extra configuration global_extra_conf want put home folder add follow line vimrc create global_extra_conf follow content note need restart server set option ycm automatically pick new value rust semantic completion ycm rust analyzer rust semantic completion note previously ycm rls rust completion long support rust community decide rust analyzer future rust tool completion goto command within current crate dependency work box additional configuration provide ycm rust complete flag see installation section installation detail script take care instal rust source rust src configuration necessary rust analyzer support myriad option configure lsp configuration lsp configuration document semantic completion completion goto command work box provide ycm complete flag see installation section installation detail server work project canonical layout gopls also handful undocumented option source gopls preference reference javascript typescript semantic completion note ycm originally tern engine javascript due tern maintain anymore main author tsserver engine offer feature ycm move tsserver affect already tern encourage switch delete third_party ycmd third_party tern_runtime node_modules directory ycm folder new user still want tern pas complete option script installation instruction setup ycm tern available wiki tern instruction javascript typescript feature provide tsserver engine include typescript sdk enable feature node npm npm call script complete flag tsserver rely jsconfig json jsconfig json javascript tsconfig json tsconfig json typescript analyze project ensure exist root project get diagnostics javascript set checkjs option true jsconfig json semantic completion language family java rust javascript typescript language support natively youcompleteme clang omnisharp roslyn gopls jdt jedi rust analyzer tsserver engine respectively check installation installation section instruction enable feature desire plug arbitrary lsp server similar lsp client ycm arbitrary lsp server help ycm_language_server gycm_language_server option option value option would dictionary contain follow key name string mandatory configure lsp server lsp configuration value name key kwargs language anything like filetypes list string mandatory list vim filetypes server project_root_files list string optional list filename search try determine project root cmdline list string optional supply server start command line list element command line word typically server start stdio communication supply port must supply port number optional supply ycmd connect server localhost tcp remote server support capability dict optional supply dictionary merge lsp client capability report language server enable disable certain feature support configuration section workspace configuration see lsp project configure like php ruby kotlin lsp configuration many lsp server allow level user configuration ycm enable help ycm_extra_conf jdt user configure like php ruby kotlin many many key tell ycm dictionary pas lsp server lsp server configuration look respective server documentation server request setting arbitrary section configuration concept configuration section vim specify additional config_sections dictionary map section dictionary config require server section option value complete server specific rarely well document omnifunc semantic completion ycm omnifunc see omnifunc vim source semantic completion native semantic completion engine filetype vim come rudimentary omnifuncs various language like ruby php etc depend language get stellar omnifunc ruby eclim make sure _latest_ eclim instal configure mean eclim eclipse instal eclim remember create new eclipse project within application type projectcreate ruby inside vim forget let eclimcompletionmethod omnifunc vimrc make ycm eclim play nice ycm eclim omnifuncs source semantic completion provide auto trigger subsequence base match ycm feature top write new semantic completers option write omnifunc vim omnicomplete system ycm omni complete custom complete ycm complete api complete api difference approach vimscript write omnifunc get write complete api make want api complete api _much_ powerful way integrate ycm provide wide set feature instance make complete query semantic back end asynchronous fashion thus block vim gui thread completion system process stuff impossible vimscript ycm completers complete api performance complete api good since execute fast vimscript want omnifunc system see relevant vim doc complete function complete api see api doc complete api want upstream complete ycm source complete api diagnostic display ycm display diagnostic notification family java javascript rust typescript language since ycm continuously recompiles type get notify error warn fast possible various piece diagnostic icon show vim gutter line diagnostic region text relate diagnostics highlight default red wavy underline gvim red background vim move cursor line diagnostic echo diagnostic text vim location list automatically populate diagnostic default see option new diagnostics display next time press key keyboard stop type wait new diagnostics come _will work_ need press key gui update press key get update unfortunate change due way vim internals operate way background task update vim gui finish _have to_ press key make ycm check pending diagnostics update _can_ force full block compilation cycle ycmforcecompileanddiagnostics command may want map command key try put nnoremap ycmforcecompileanddiagnostics vimrc call command force ycm immediately recompile display new diagnostics encounter note recompilation command may take time vim gui _will_ block ycm display short diagnostic message move cursor line error get detail diagnostic message key map change option ycm provide cursor line diagnostic also see full diagnostic message diagnostics current vim locationlist open lopen lclose command make sure set let ycm_always_populate_location_list vimrc good way toggle display locationlist single key map provide another small vim plugin call listtoggle also make possible change height locationlist window also write truly diagnostic highlight group change style highlight group ycm sign vim gutter relevant group ycmerrorsign fall back group syntasticerrorsign error exist ycmwarningsign fall back group syntasticwarningsign todo exist also style line warn error group ycmerrorline fall back group syntasticerrorline exist ycmwarningline fall back group syntasticwarningline exist note line highlight group work ycm_enable_diagnostic_signs gycm_enable_diagnostic_signs option option set want highlight line sign vim gutter set signcolumn option vimrc syntax group highlight region text error warn ycmerrorsection fall back group syntasticerror exist spellbad ycmwarningsection fall back group syntasticwarning exist spellcap would change style group symbol search feature require vim support neovim ycm provide way search jump symbol current project document support language search symbol current workspace gotosymbol request support current document gotodocumentoutline support quick demo see type ycm filter list type current set match display popup window centre screen select entry keyboard jump position match add quickfix list enable nmap ycmfindsymbolinworkspace nmap ycmfindsymbolindocument nmap yfw ycmfindsymbolinworkspace nmap yfd ycmfindsymbolindocument search ycm open prompt buff top screen input put insert mode mean hit normal mode input command support prompt buff type character search update popup open follow key intercept select next item select previous item jump screenful item jump screenful item jump first item jump last item jump select item cancel dismiss popup search also cancel leave prompt buff window time window command close popup note press close popup must ctrl window command mouse leave prompt buff window command ycmrestartserver command ycmd completion server ycmd suddenly stop reason restart command ycmforcecompileanddiagnostics command call command force ycm immediately recompile display new diagnostics encounter note recompilation command may take time vim gui _will_ block may want map command key try put nnoremap ycmforcecompileanddiagnostics vimrc ycmdiags command call command fill vim locationlist error warn detect open give error warn fix call ycmcompleter fixit fixit available append error warn text see fixit complete subcommand information note absence fixit available strictly imply fix available completers able provide indication sharp complete provide many fix add additional indication ycm_open_loclist_on_ycm_diags option prevent location list open still fill new diagnostic see _options_ section detail ycmshowdetaileddiagnostic command command show full diagnostic text user cursor line diagnostic option argument pas argument popup diagnostic text display popup cursor position prefer detail diagnostic always show popup let ycm_show_detailed_diag_in_popup ycmdebuginfo command print various debug information current useful see compile command semantic completion engine ycmtogglelogs command command present list logfiles create ycm ycmd server ycmd semantic engine server current filetype logfiles open editor close already open enter correspond number click mouse additionally command take logfile name argument key key define wildchar option complete argument cycle depend value wildmode option logfile give argument directly open close already open editor debug purpose ycmcompleter command command give access number additional ide like feature quick feature summary ycm thing like semantic goto type information fixit refactoring command accept range either specify selection vim visual mode see visual command line instance 5ycmcompleter apply command line line useful format subcommand format subcommand call ycmcompleter without argument list command call current complete see type feature summary quick feature summary overview feature available type see _ycmcompleter subcommands_ section information available subcommands usage ycmcompleter subcommands note see doc ycmcompleter command tackle section invoke subcommand automatically rout currently active semantic complete ycmcompleter gotodefinition invoke gotodefinition subcommand semantic complete currently active clang complete currently active family language may also want map subcommands something verbose instance nnoremap ycmcompleter goto map sequence long subcommand invocation goto command command useful jump around explore move cursor subcommands add entry vim jumplist ctrl jump back invoke command ctrl jump forward see jumplist detail destination quickfix list see quickfix populate available location open full width bottom screen change behavior ycmquickfixopened autocommand ycmquickfixopened autocommand gotoinclude subcommand look current line header jump support filetypes cpp objc objcpp cuda gotodeclaration subcommand look symbol cursor jump declaration support filetypes cpp objc objcpp cuda java javascript rust typescript gotodefinition subcommand look symbol cursor jump definition note family language work certain situation namely definition symbol current translation unit translation unit consist edit include include directive directly indirectly support filetypes cpp objc objcpp cuda java javascript rust typescript goto subcommand command try perform sensible goto operation currently mean try look symbol cursor jump definition possible definition accessible current translation unit jump symbol declaration family language first try look current line header jump also consider prefer support filetypes cpp objc objcpp cuda java javascript rust typescript gotoimprecise subcommand warn command trade correctness speed goto command except recompile libclang look nod ast useful edit take long compile know make change since last parse would lead incorrect jump browse around codebase command spare quite bite latency support filetypes cpp objc objcpp cuda gotosymbol subcommand find definition symbol match specify string note sort smart fuzzy match however interactive symbol search symbol search also available support filetypes cpp objc objcpp cuda java javascript typescript gotoreferences subcommand command attempt find reference within project identifier cursor populate quickfix list location support filetypes cpp objc objcpp cuda java javascript typescript rust gotoimplementation subcommand look symbol cursor jump non interface multiple instead provide list choose support filetypes java rust typescript javascript gotoimplementationelsedeclaration subcommand look symbol cursor jump else jump declaration multiple instead provide list choose support filetypes gototype subcommand look symbol cursor jump definition type symbol object definition class support filetypes java javascript typescript gotodocumentoutline subcommand provide list symbol current document quickfix list see also interactive symbol search symbol search support filetypes cpp objc objcpp cuda java rust gotocallers gotocallees subcommands populate quickfix list caller callees respectively function associate current cursor position semantics differ depend filetype language server support lsp server provide callhierarchyprovider capability semantic information command command useful find static information type variable view declaration documentation string gettype subcommand echo type variable method cursor differ derive type invoke command return std string std basic_string note cause parse current translation unit support filetypes cpp objc objcpp cuda java javascript typescript rust gettypeimprecise subcommand warn command trade correctness speed gettype command except recompile libclang look nod ast useful edit take long compile know make change since last parse would lead incorrect type browse around codebase command spare quite bite latency support filetypes cpp objc objcpp cuda getparent subcommand echo semantic parent point cursor semantic parent item semantically contain give position line definition semantic parent class function member declaration semantic context lexical context first lexical context second translation unit global declaration semantic parent translation unit note cause parse current translation unit support filetypes cpp objc objcpp cuda getdoc subcommand display preview window populate quick info identifier cursor depend type include thing like type declaration identifier doxygen javadoc comment docstrings etc support filetypes cpp objc objcpp cuda java javascript typescript rust getdocimprecise subcommand warn command trade correctness speed getdoc command except recompile libclang look nod ast useful edit take long compile know make change since last parse would lead incorrect doc browse around codebase command spare quite bite latency support filetypes cpp objc objcpp cuda refactoring command command make change source order perform refactoring correction youcompleteme perform action undo never save write disk fixit subcommand available attempt make change buff correct diagnostics current line multiple suggestion available multiple way resolve give warn multiple diagnostics report current line option present select completers provide diagnostics may also provide trivial modification source order correct diagnostic include syntax error miss trail semi colon spurious character error semantic engine deterministically suggest correction fix available current line diagnostic current line command effect current buff modification make number change make buff echo user may editor undo command revert diagnostic available ycm_echo_current_diagnostic set text fixit append echo diagnostic complete able add indication text fixit available also append diagnostic text output ycmdiags command diagnostics available fix complete provide indication note cause parse current translation unit support filetypes cpp objc objcpp cuda java javascript rust typescript refactorrename subcommand support type command attempt perform semantic rename identifier cursor include rename declaration definition usage identifier language appropriate action specific behavior define semantic engine similar fixit command apply automatic modification source rename operation may involve change multiple may may open vim buff time youcompleteme handle behavior describe follow section multi refactor support filetypes cpp objc objcpp cuda java javascript typescript rust multi refactor refactor fixit command touch multiple youcompleteme attempt apply modification exist open visible buff current tab buff find youcompleteme open new small horizontal split top current window apply change hide window note buff remain open must manually save confirmation dialog open prior remind happen modification make quickfix list see help quickfix populate location modification review automatic change make copen typically ctrl combination open select new split possible customize quickfix window open ycmquickfixopened autocommand ycmquickfixopened autocommand buff save automatically must save modify buff manually review change quickfix list change undo vim powerful undo feature see help undo note vim undo per buff undo change undo command must apply modify buff separately note apply modification vim may find already open swap command abort select abort quit prompt leave refactor operation partially complete must manually correct vim undo feature quickfix list populate case inspect buff equivalent see help buff see buff open command format subcommand command format whole buff part accord value vim option shiftwidth expandtab see respectively format specific part document either select vim visual mode see visual command directly enter range command line 5ycmcompleter format format line line support filetypes cpp objc objcpp cuda java javascript typescript rust organizeimports subcommand command remove unused import sort import current also group import module typescript resolve import java support filetypes java javascript typescript miscellaneous command command general administration rather ide like feature cover thing like semantic engine server instance compilation flag executecommand subcommand lsp completers currently java completers support execute server specific command consult jdt documentation find command support argument expect support executecommand implement support plugins like vimspector debug java limit specific case restartserver subcommand restart downstream semantic engine server semantic engine work separate server ycm talk support filetypes cpp objc objcpp cuda java javascript rust typescript reloadsolution subcommand instruct omnisharp roslyn server clear cache reload disk useful add remove rename solution change outside vim whenever omnisharp roslyn cache sync support filetypes function youcompleteme geterrorcount function get number ycm diagnostic error error present function return function youcompleteme getwarningcount useful integrate ycm vim plugins lightline user could add diagnostics section statusline would display number error warn youcompleteme getwarningcount function get number ycm diagnostic warn warn present function return youcompleteme getcommandresponse function complete subcommand ycmcompleter subcommands return string useful display getgoc output popup window note real hover support see ycm_auto_hover gycm_auto_hover option complete subcommand string fixit location complete subcommand raise error empty string return call check complex error condition argument function argument ycmcompleter command name subcommand follow additional subcommand argument ycmcompleter command first argument request target specify filetype complete advance usage necessary case note request synchronously block vim response receive recommend part autocommand trigger frequently youcompleteme getcommandresponseasync callback function work exactly like youcompleteme getcommandresponse except instead return supply callback argument argument must funcref function take single argument response callback call command response point late immediately youcompleteme getcommandresponse function call callback empty string request send sort error similar see ycm_auto_hover gycm_auto_hover option proper hover support note callback may call immediately stack frame call function note command request outstanding attempt request second response first outstanding second callback immediately call autocommands ycmlocationopened autocommand user autocommand fire ycm open location list window response ycmdiags command default location list window open bottom current window height set fit entry behavior override ycmlocationopened autocommand trigger cursor location list window instance ycmquickfixopened autocommand user autocommand fire ycm open quickfix window response goto refactorrename subcommands default quickfix window open full width bottom screen height set fit entry behavior override ycmquickfixopened autocommand trigger cursor quickfix window instance option option reasonable default plug work installation need change option option configure vimrc script vimrc include line like note change option vimrc script vimrc restart ycmd ycmrestartserver command change take effect ycm_min_num_of_chars_for_completion option option control number character user need type identifier base completion suggestion trigger option set user type second alphanumeric character whitespace character completion suggestion trigger option semantic completion set option high number like effectively turn identifier completion engine leave semantic engine default ycm_min_num_identifier_candidate_chars option option control minimum number character completion candidate come identifier complete must show popup menu special value mean limit note option apply identifier complete effect various semantic completers default ycm_max_num_candidates option option control maximum number semantic completion suggestion show completion menu apply suggestion semantic completion engine see ycm_max_identifier_candidates option gycm_max_num_identifier_candidates option limit number suggestion identifier base engine special value mean limit note set option value great recommend slow completion large number suggestion default ycm_max_num_candidates_to_detail option completion engine require completion candidate resolve order get detail info inline documentation method signature etc information display ycm preview window completeopt contain popup info popup next completion menu default info popup candidate ycm defer resolve candidate select completion menu otherwise ycm must resolve detail upfront costly neither popup preview completeopt ycm disable resolve altogether information would display set override default control number completion candidate resolve upfront typically user need change ycm work appropriate value base completeopt ycm_add_preview_to_completeopt setting however may override calculation set value number resolve candidate front never resolve candidate front resolve many candidate front number candidate great value candidate resolve late case completeopt contain popup candidate resolve demand asynchronously default neither popup preview completeopt popup completeopt preview completeopt ycm_max_num_identifier_candidates option option control maximum number completion suggestion identifier base engine show completion menu special value mean limit note set option value great recommend slow completion large number suggestion default ycm_auto_trigger option set option turn ycm identifier complete type popup _and_ semantic trigger popup would get type say still force semantic completion shortcut want turn identifier complete keep semantic trigger set ycm_min_num_of_chars_for_completion high number like default ycm_filetype_whitelist option option control vim filetypes see filetype ycm turn option value vim dictionary key filetype string like cpp etc value unimportant dictionary like hash set mean key matter key special match filetypes default whitelist contain key ycm also ycm_filetype_blacklist option list filetypes ycm turn ycm work filetypes whitelist blacklist allow blacklist allow filetype _not_ key let assume want ycm work cpp filetype filetype present whitelist either directly cpp key whitelist indirectly special key _not_ present blacklist filetypes block either list completely ignore ycm mean neither identifier base completion engine semantic engine operate get filetype current vim set default completion buff filetype exception rule ycm support completion buff filetype set must _explicitly_ whitelisted identify buff filetype ycm_nofiletype pseudo filetype enable completion buff filetype set ycm_filetype_blacklist option option control vim filetypes see filetype ycm turn option value vim dictionary key filetype string like cpp etc value unimportant dictionary like hash set mean key matter see ycm_filetype_whitelist option detail work default see next line addition ycm_nofiletype represent buff filetype set blacklist ycm_nofiletype _explicitly_ whitelisted ycm_filetype_whitelist ycm_filetype_specific_completion_to_disable option option control vim filetypes see filetype ycm semantic completion engine turn option value vim dictionary key filetype string like cpp etc value unimportant dictionary like hash set mean key matter list filetypes ignore ycm semantic completion engine identifier base completion engine still trigger filetypes note even semantic completion turn specific filetype get semantic completion semantic engine support filetype get filetype current vim set default see next line ycm_filepath_blacklist option option control vim filetypes see filetype filepath completion disable option value vim dictionary key filetype string like cpp etc value unimportant dictionary like hash set mean key matter key special match filetypes key want completely disable filepath completion get filetype current vim set default see next line ycm_show_diagnostics_ui option set option turn ycm diagnostic display feature see _diagnostic display_ section _user manual_ detail specific part diagnostics like gutter sign text highlight diagnostic echo auto location list population individually turn see option detail note ycm diagnostics support family language set option also make ycm remove syntastic checker set cpp objc objcpp cuda filetypes since would conflict ycm diagnostics ycm identifier complete family language clang base semantic complete language _and_ want gcc syntastic checker unset option default ycm_error_symbol option ycm value option symbol error vim gutter option part syntastic compatibility layer option set ycm fall back value syntastic_error_symbol option option default default ycm_warning_symbol option ycm value option symbol warn vim gutter option part syntastic compatibility layer option set ycm fall back value syntastic_warning_symbol option option default default ycm_enable_diagnostic_signs option option set ycm put icon vim gutter line diagnostic set turn also turn ycmerrorline ycmwarningline highlight option part syntastic compatibility layer option set ycm fall back value syntastic_enable_signs option option default default ycm_enable_diagnostic_highlighting option option set ycm highlight region text relate diagnostic present line option part syntastic compatibility layer option set ycm fall back value syntastic_enable_highlighting option option default default ycm_echo_current_diagnostic option option set ycm echo text diagnostic present current line move cursor line fixit available current diagnostic fixit append option part syntastic compatibility layer option set ycm fall back value syntastic_echo_current_error option option default default ycm_auto_hover option option control whether ycm show documentation popup cursor location short delay support vim option set cursorhold popup display cursorhold autocommand see help cursorhold detail mean display updatetime millisecond set empty string popup automatically display addition set ycmhover map manually trigger hide popup work like toggle dismiss popup map automatically trigger cursor move cursormoved autocommand display documentation depend complete current language support select heuristically order preference gethover markdown syntax getdoc syntax gettype syntax current customise manually set ycm_hover like buff local variable set dictionary follow key command ycm complete subcommand hover syntax syntax set syntax popup window highlight syntax highlight popup family language add something like vimrc default cursorhold ycm_filter_diagnostics option option control diagnostics render ycm option hold dictionary key value key vim filetype string delimit comma value dictionary describe filter filter dictionary key value key type filter value list argument filter case single item list may omit bracket provide argument directly filter match diagnostic drop ycm render follow filter type support regex accept string regular expression type match regex treat case insensitive find anywhere diagnostic text search match level accept string level either warn error type match diagnostic level specify level error remove error diagnostics note regex syntax vim default follow java filetype remove error level diagnostics also remove anything contain taco ycm_always_populate_location_list option option set ycm populate location list automatically every time get new diagnostic option default interfere might place location list see help location list vim location list option part syntastic compatibility layer option set ycm fall back value syntastic_always_populate_loc_list option option default note ycm error visible might ycm update old location list see help lhistory lolder default ycm_open_loclist_on_ycm_diags option option set ycmdiags automatically open location list force compilation fill list diagnostic see help location list vim location list default ycm_complete_in_comments option option set ycm show completion menu even type inside comment default ycm_complete_in_strings option option set ycm show completion menu even type inside string note turn default filename completion inside string useful instance family type include trigger start filename completion turn option turn filename completion situation well default ycm_collect_identifiers_from_comments_and_strings option option set ycm identifier complete also collect identifier string comment otherwise text comment string ignore default ycm_collect_identifiers_from_tags_files option option set ycm identifier complete also collect identifier tag list tag examine retrieve tagfiles vim function examine tag vim option see tag detail ycm index tag detect modify support tag format exuberant ctags format ctags format format plain ctags support ctags need call field option lowercase ycm need language field tag output see _faq_ pointer ycm appear read tag option default make vim slow tag directory default ycm_seed_identifiers_with_syntax option option set ycm identifier complete seed identifier database keywords program language write since keywords extract vim syntax filetype keywords may collect depend syntax write usually least keywords successfully extract default ycm_extra_conf_vim_data option semantic completion family option might come handy way send vim setting function ycm_extra_conf option suppose list vimscript expression string evaluate every request ycmd server ycmd pas setting function client_data keyword argument instance set option version setting function call like client_data parameter dictionary map vim expression string value time request correct way define parameter setting function get client_data kwargs client_data default ycm_server_python_interpreter option ycm default search appropriate interpreter system option override behavior force specific interpreter choose note interpreter ycmd server ycmd ycm client inside vim always interpreter embed inside vim default ycm_keep_logfiles option option set ycm ycmd completion server ycmd keep logfiles around shut delete shutdown default see logfiles call ycmdebuginfo default ycm_log_level option log level ycm ycmd completion server ycmd valid value follow verbose least verbose debug info warn error critical note debug _very_ verbose default info ycm_auto_start_csharp_server option set omnisharp roslyn server automatically start per vim session open default ycm_auto_stop_csharp_server option set omnisharp roslyn server automatically stop upon close vim default ycm_csharp_server_port option ycm_auto_start_csharp_server set specify port omnisharp roslyn server listen set unused port provide default ycm_csharp_insert_namespace_expr option default ycm insert namespace insert statement near statement may prefer statement insert somewhere preserve sort set option override behavior option set instead insert statement ycm set global variable ycm_namespace_to_insert namespace insert evaluate option value expression option expression responsible insert namespace default insertion occur default ycm_add_preview_to_completeopt option option set ycm add preview string vim completeopt option see completeopt completeopt option already preview set effect alternatively set popup version vim support popup window see help popup popup string instead see current state completeopt set set completeopt yes question mark important preview present completeopt ycm preview window top store detail information current completion candidate candidate come semantic engine instance would show full function prototype function overload window current completion function name popup present completeopt ycm instead popup window side completion popup store detail information current completion candidate addition ycm may truncate detail completion information order give popup sufficient room display detail information default ycm_autoclose_preview_window_after_completion option option set ycm auto close preview window user accept offer completion string preview window trigger preview string completeopt option irrelevant see ycm_add_preview_to_completeopt option detail default ycm_autoclose_preview_window_after_insertion option option set ycm auto close preview window user leave insert mode option irrelevant ycm_autoclose_preview_window_after_completion set preview window trigger see ycm_add_preview_to_completeopt option detail default ycm_max_diagnostics_to_display option option control maximum number diagnostics show user error warn detect option relevant family java javascript typescript language special value mean limit default ycm_key_list_select_completion option option control key mapping select first completion string invoke repeatedly cycle forward completion list user like add list default ycm_key_list_previous_completion option option control key mapping select previous completion string invoke repeatedly cycle backwards completion list note default mean shift tab map probably work gui vim gvim macvim plain console vim terminal usually forward modifier key combination vim default ycm_key_list_stop_completion option option control key mapping close completion menu useful menu block view need insert character want expand snippet ultisnips navigate default ycm_key_invoke_completion option option control key map invoke completion menu semantic completion default semantic completion trigger automatically type insert mode semantic completion support compile key map trigger semantic completion anywhere useful search top level function class console vim gvim macvim pas vim user type ycm make sure map command edit console vim gui vim mean press console gui vim ycm right thing set option empty string make sure map create default ycm_key_detailed_diagnostics option option control key map show full diagnostic text user cursor line diagnostic basically call ycmshowdetaileddiagnostic set option empty string make sure map create prefer detail diagnostic show popup let ycm_show_detailed_diag_in_popup default ycm_show_detailed_diag_in_popup option make ycmshowdetaileddiagnostic always show popup rather echo command line default ycm_global_ycm_extra_conf option normally ycm search ycm_extra_conf compilation flag see user guide detail work option specify fallback path config ycm_extra_conf find place global anywhere filesystem default ycm_confirm_extra_conf option option set ycm ask per ycm_extra_conf safe load prevent execution malicious ycm_extra_conf write selectively get ycm ask ask load certain ycm_extra_conf see ycm_extra_conf_globlist option default ycm_extra_conf_globlist option option list may contain several globbing pattern pattern start ycm_extra_conf match pattern blacklist load confirmation dialog show pattern start match pattern whitelisted note option confirmation disable ycm_confirm_extra_conf item early list take precedence late rule match everything match single character seq match character seq seq match char seq first rule match everything contain dev directory ycm_extra_conf load second rule match everything home directory ycm_extra_conf load first rule take precedence everything home directory exclude dev directory blacklist note glob pattern first expand path expanduser resolve path abspath match filename default ycm_filepath_completion_use_working_dir option default ycm filepath completion interpret relative path like relative folder currently active buff set option force ycm always interpret relative path relative vim current work directory default ycm_semantic_triggers option option control character base trigger various semantic completion engine option hold dictionary key value key vim filetype string delimit comma value list string string trigger set key value pair dictionary _adds_ semantic trigger internal default set list remove default trigger add new trigger sequence character trigger semantic completion type instance cpp filetype list trigger user type foo semantic engine trigger serve foo list member function variable since also list trigger thing would happen user type foo also possible regular expression trigger prefix trigger signify regex trigger instance would trigger regex match note regex syntax vim default see next line ycm_cache_omnifunc option omnicompletion engine work well ycm cache particular might produce possible give prefix unsetting option ensure omnicompletion engine query every keypress ensure completion present might cause stutter lagginess omnifunc slow default ycm_use_ultisnips_completer option default ycm query ultisnips plugin possible completion snippet trigger option turn behavior default ycm_goto_buffer_command option define goto command open take follow value buff split split exist window option set buff current buff switch buff modify nohidden option set open split option set split exist window already open window current tab page tab page tab modifier see jump window otherwise open split option set split customize way new window split prefix goto command follow modifier aboveleft belowright botright leftabove rightbelow topleft vertical instance split vertically right current window command open new tab page tab modifier split split exist window option default buff ycm_disable_for_files_larger_than_kb option define max size consider completion option set check make size open default ycm_use_clangd option option control whether clangd completion engine family language take follow value mean ycm clangd clangd binary exist third party provide ycm_clangd_binary_path option ycm never clangd complete default ycm_clangd_binary_path option ycm_use_clangd option set option set path clangd binary default ycm_clangd_args option option control command line argument pas clangd binary append new option override exist default ycm_clangd_uses_ycmd_caching option option control rank filter algorithm completion item take value ycmd cache filter logic clangd cache filter logic default ycm_language_server option option let ycm arbitrary language server protocol lsp server unlike many completion system officially support completers favour custom lsp override exist complete mean first make sure ycm choose exist complete first place simple work option find section call semantic completion language semantic completion language many work find ycm lsp repo default ycm_disable_signature_help option option allow disable signature help completion engine way disable per complete option _reserved_ mean signature help support remain experimental value mean may change may remove future version default ycm_gopls_binary_path option case system wide gopls binary new bundle set option path system wide gopls would make ycm instead path gopls ycm search path ycm_gopls_args option similar ycm_clangd_args gycm clangd args option allow pas additional flag gopls command line default ycm_rls_binary_path ycm_rustc_binary_path option ycm long rls rust option therefore long support custom rust analyzer see ycm_rust_toolchain_root ycm_rust_toolchain_root option optionally specify path custom rust toolchain include least support version rust analyzer ycm_tsserver_binary_path option similar gopls path gycm gopls binaty path option tell ycm tsserver executable locate ycm_roslyn_binary_path option similar gopls path gycm gopls binaty path option tell ycm omnisharp roslyn executable locate ycm_update_diagnostics_in_insert_mode option async diagnostics lsp server might send new diagnostics mid type see new diagnostics type desire option set default faq faq section move wiki wiki faq contributor conduct please note project release contributor conduct ccoc participate project agree abide term contact question plugin need help please join gitter room gitter ycm user mail list bug report feature suggestion please issue tracker tracker please carefully read contribute contribute ask important diagnostics team help get late version plugin available author homepage please vim freenode support please contact youcompleteme maintainer directly contact detail contact license software license gpl license gpl youcompleteme contributor sponsorship like ycm much wiling part hard earn cash please consider donate follow charity meaningful current maintainer particular order greyhound rescue cancer research iccf charity choose please note ycm maintainer specifically endorse necessarily relationship charity disclosure note key maintainer family trustee greyhound rescue wale ycmd clang vundle brew cmake macvim vimrc gpl vim syntastic lightline ycm_flags_example ycmd_flags_example compdb subsequence listtoggle vim tracker complete api eclim jedi ultisnips ctags format ycm user omnisharp roslyn bear ygen gopls gopls preference tsserver jsconfig json tsconfig json vim win win visual studio mono macos mono linux npm tern instruction libclang instruction tern rls rust analyzer rust src add msbuild path ccoc gitter ninja compdb enc contribute jdt jdk mvn project eclipse project gradle project eclipse dot project eclipse dot classpath ycmd eclipse project ycmd mvn pom xml ycmd gradle project jdtls preference diacritic clangd vimspector compiledb signature help wiki faq wiki full wiki troubleshoot lsp
C C++;https://github.com/abseil/abseil-cpp;abseil common library repository contain abseil library abseil open source collection compliant design augment standard library table content abseil quickstart quickstart abseil support support codemap codemap release release license license link link abseil abseil open source collection library design augment standard library abseil library collect google base extensively test production depend daily cod live case abseil provide piece miss standard others abseil provide alternative standard special need find usage google base denote case clearly within library provide abseil mean competitor standard library find many utility serve purpose within base want provide resource community whole quickstart want get start make sure least abseil quickstart contain information set development environment abseil test get simple binary work abseil official system abseil see information abseil bazel system require cmake support please check cmake instruction cmake readme cmake support abseil officially support many platform see abseil platform support detail support operate system compiler cpu etc codemap abseil contain follow library component base absl base abseil fundamental base library contain initialization abseil depend within base may depend standard library algorithm absl algorithm algorithm library contain addition library container base version algorithm cleanup absl cleanup cleanup library contain control flow construct like type absl cleanup execute callback scope exit container absl container container library contain additional stl style container include abseil unordered swiss table container debug absl debug debug library contain useful enable leak check stacktrace symbolization utility hash absl hash hash library contain hash framework default hash functor hashable type abseil memory absl memory memory library contain compatible version std make_unique relate memory management facility meta absl meta meta library contain compatible version type check available within version library numeric absl numeric numeric library contain compatible bite integer profile absl profile profile library contain utility profile entity currently private dependency abseil library status absl status status contain abstraction error handle specifically absl status absl statusor string absl string string library contain variety string routine utility include compatible version std string_view type synchronization absl synchronization synchronization library contain concurrency primitive abseil absl mutex class alternative std mutex variety synchronization abstraction time absl time time library contain abstraction compute absolute point time duration time format parse time within time zone type absl type type library contain non container utility type like compatible version std optional type utility absl utility utility library contain utility helper release abseil recommend user live head update late commit master branch often possible however realize philosophy work every project also provide long term support backport fix severe bug see release document detail license abseil library license term apache license see license license information link information abseil consult abseil read adopt understand design philosophy peruse abseil compatibility understand promise expect return
C C++;https://github.com/xianyi/OpenBLAS;openblas join chat travis appveyor introduction openblas optimize blas library base gotoblas2 bsd version please read document openblas wiki page binary package provide binary package follow platform window x86 x86_64 host installation source project homepage check cod git github com xianyi openblas git normal compile type make detect cpu automatically type make target xxx set target cpu make target nehalem full target list targetlist txt cross compile please set cross toolchains set hostcc host compiler last set target explicitly x86 box compile library loongson3a cpu make binary mips64el unknown linux gnu gcc mips64el unknown linux gnu gfortran hostcc gcc target loongson3a x86 box compile library loongson3a cpu loongcc base open64 compiler make loongcc loongf95 hostcc gcc target loongson3a cross cross_suffix mips64el linux gnu no_lapacke no_shared binary debug version make debug compile mass support power cpu optional dependency ibm library consist set mathematical function fortran language application tune optimum performance power architecture openblas mass require bite little endian power library instal ubuntu wget sudo apt key add echo deb trusty main sudo tee etc apt source list ibm compiler eval list sudo apt get update sudo apt get libxlmass devel rhel centos wget sudo rpm import repomd xml key wget sudo ibm compiler eval repo etc yum repos sudo yum libxlmass devel instal mass library compile openblas use_mass compile power8 mass support make use_mass target power8 directory optional make prefix your_installation_directory default directory opt openblas support cpu please read gotoblas_01readme txt additional support cpu x86 x86 intel xeon 56xx westmere gotoblas2 nehalem cod intel sandy bridge optimize level level blas avx x86 intel haswell optimize level level blas avx2 fma x86 amd bobcat gotoblas2 barcelona cod amd bulldozer x86 gemm fma4 kernel thank werner saar amd piledriver bulldozer cod optimization amd steamroller bulldozer cod optimization mips64 ict loongson optimize level blas part level ict loongson experimental arm armv6 optimize blas vfpv2 vfpv3 d16 bcm2835 cortex armv7 optimize blas vfpv3 d32 cortex a15 arm64 armv8 experimental arm cortex a57 experimental ibm zenterprise system z13 optimize level blas support gnu linux mingwin visual studio cmake window please read darwin mac experimental although gotoblas2 support darwin beginner mac freebsd support community test library android support community please read usage link libopenblas lopenblas share library set number thread environment variable export openblas_num_threads export goto_num_threads export omp_num_threads priority openblas_num_threads goto_num_threads omp_num_threads compile lib use_openmp set omp_num_threads environment variable openblas ignore openblas_num_threads goto_num_threads use_openmp set number thread runtime provide function control number thread runtime void goto_set_num_threads int num_threads void openblas_set_num_threads int num_threads compile lib use_openmp function report bug please add issue contact openblas user mail list openblas developer mail list changelog please see changelog txt obtain difference gotoblas2 bsd version troubleshoot please read first please gcc version compile sandy bridge avx kernel linux mingw bsd please clang version compile library sandy bridge microarchitecture clang generate wrong avx binary number cpu core equal linux x86_64 amd64 experimental support cpu core numa nod library bignuma openblas set processor affinity default linux enable processor affinity comment line no_affinity makefile rule may cause conflict loongson make test would fail pthread_create error error eagain however testcase contribute check open open fresh issue start discussion around feature idea bug fork repository start make change write test show bug fix feature work expect send pull request make sure add contributor donation please read wiki
C C++;https://github.com/facebook/wangle;support travis wanglec librarywangle library make easy protocol application client application server like netty finagle smooshed together instal main dependency folly library fizz library cmake openssl least version preferably extension support folly instal follow inside wangle directory test wangle tutorial tutorial tutorial explain basic wangle show echo server client see directory wangle server client license wangle apache license contribute see contribute help documentation wangle interface asynchronous interface currently base client server abstraction probably familiar java netty twist similar library top folly async level stack similar abstraction like boost asio serverbootstrap easily manage creation threadpools pipeline clientbootstrap client pipeline set series handler modify socket request response abstraction roughly equivalent finagle library aim provide easy test load balance client pool retry logic etc request response type service thrift etc service match interface client server server implement interface client call protocol specific servicefilter generic filter service stats request timeouts rate limit servicefactory factory create client connection protocol specific setup servicefactoryfilter generic filter control connection create client load balance pool idle timeouts markdowns etc serverbootstrapeasily create new serverserverbootstrap work set multiple acceptor thread multiple set thread thread pool so_reuseport automatically support multiple accept thread tcp common although udp also support method childpipeline pipelinefactory pipeline set pipeline factory new connection pipeline per connection create group iothreadpoolexecutor accept iothreadpoolexecutor set thread pool accept thread pool thread accept group so_reuseport default single accept thread thread per core bind socketaddress bind port bind port automatically start accept bind stop stop listen socket join join threadpools current read write complete method return note however accept thread pool stop method thread pool share care must take share pool shutdown waitforstop wait stop call another thread method channelfactory serversocketfactory set type server default tcp asyncserversocket asyncudpserversocket also support receive udp message practice serverbootstrap useful udp need multiplex message across many thread tcp connection time etc simple usage asyncudpsocket probably need complexity serverbootstrap pipeline pipelinefactory acceptpipeline pipeline method get accept socket udp message hand thread steer accept thread particular thread log see also acceptroutinghandler routingdatahandler additional help read accept socket get attach thread hash incoming socket specific thread childhandler acceptorfactory previously facebook lot acceptorfactories instead pipeline method support backwards compatible acceptorfactory responsible create acceptor set pipeline set asyncsocket read callback etc simple serverbootstrap telnetpipeline server server childpipeline std make_shared telnetpipelinefactory server bind flags_port server waitforstop clientbootstrapcreate client easilyclientbootstrap thin wrapper around asyncsocket provide future interface connect callback pipeline interface read callback method group iothreadpoolexecutor set thread group thread take place callback also make thread bind port optionally bind specific port future pipeline connect socketaddress connect select address future complete initialize pipeline return note future cancel call cancel outstanding connection attempt pipelinefactory pipelinefactory pipeline set pipeline factory connection successful clientbootstrap telnetpipeline client client group std make_shared folly wangle iothreadpoolexecutor client pipelinefactory std make_shared telnetpipelinefactory synchronously wait connect finish auto pipeline client connect socketaddress flags_host flags_port get close pipeline finish pipeline close pipelinesend socket series tubesa pipeline series handler intercept inbound outbound event give full control event handle handler add dynamically pipeline event call context object pas handler mean state store context object single instantiation individual handler entire program netty documentation channelhandler usually bottom pipeline wangle asyncsockethandler read write socket requirement pipeline templated input output type eventbase base_ pipeline iobufqueue std unique_ptr iobuf pipeline pipeline addback asyncsockethandler asyncsocket newsocket eventbase create pipeline add single asyncsocket handler push read event pipeline socket get byte let try handle socket event class myhandler public inboundhandler folly iobufqueue public void read context ctx folly iobufqueue override iobufqueue chainlength append split ctx fireread handler handle read inbound inherit inboundhandler ignore outbound type order inbound outbound handler pipeline matter check least byte available pas next handler yet byte available nothing wait add handler pipeline like pipeline addback myhandler remove easily pipeline remove myhandler staticpipeline instantiate handler pipeline hit allocator pretty hard way try allocation staticpipeline allow handler pipeline instantiate memory block hit allocator option allocate handler startup reuse many pipeline mean state save handlercontext object instead handler since handler multiple pipeline context per pipeline get around limitation handlersthe stuff come boxbyte byte handler asyncsockethandler almost always first handler pipeline client server connect asyncsocket pipeline handler nice mock test become trivial outputbufferinghandler output buff send per event loop logic exactly thriftserver similar exist proxygen improve throughput small write eventbasehandler put right asyncsockethandler mean write happen thread eventbase runineventbasethread automatically call put correct thread intrinsically make pipeline thread safe though write different thread may interleave handler stag must thread thread safe etc addition read still always call eventbase thread codecs fixedlengthframedecoder decoder split receive iobufs fix number byte fix length protocol lengthfieldprepender prepends fix length field length field length configurable lengthfieldbasedframedecoder receive portion lengthfieldprepender decode base fix frame length optional header tailer section linebasedframedecoder decode line optional end detection type text base protocol stringcodec convert iobufs std string back text base protocol must frame decodersserviceshow add new protocolfinagle documentation service highly recommend service pipeline read write method stream byte direction write return future future set byte successfully write pipeline easy way match request response rpc service rpc abstraction client server implement interface server implement handle request client implement send request server complete dispatcher adapter pipeline service match request response several dispatcher however anything advance may need write client server implement interface mock either client server trivially easy servicefilters servicefilters provide way wrap filter around every request response thing like log timeouts retry request etc implement servicefilters exist servicefilters include closeonreleasefilter reject request connection close often conjunction expiringfilter idle timeout max connection time usually client timeoutfilter request timeout time usually server client future within specify timeouts individually executorfilter move request different executor servicefactories service factory help instantiate client finagle frequently provide easy specific protocol memcache etc servicefactoryfilters servicefactoryfilters provide filter get client include connection orient thing like connection pool selection dispatch load balance etc exist servicefactoryfilters
C C++;https://github.com/seladb/PcapPlusPlus;pcapplusplus github language grade multiplatform library capture parse craft packet design efficient powerful easy pcapplusplus enable decode forge capability large variety protocol also provide easy wrapper popular packet process engine table content feature overview feature overview get start get start api documentation api documentation multi platform support multi platform support support protocol support protocol dpdk pf_ring support dpdk pf_ring support benchmark benchmark provide feedback provide feedback contribute contribute license license choose github release page package manager pcapplusplus detail please visit page pcapplusplus web site github release page homebrew homebrew formula vcpkg window macos linux vcpkg port conan package conancenter clone git repository follow instruction accord platform page pcapplusplus web site feature overview __packet capture__ easy wrapper popular packet capture engine intel ntop raw __packet parse crafting__ include detail analysis protocol layer packet generation packet edit large variety __read write packet files__ __pcap__ __pcapng__ format __packet process line rate__ efficient easy wrapper __multiplatform support__ pcapplusplus fully support linux macos window android freebsd __packet reassembly__ unique __tcp reassembly__ include tcp retransmission order tcp packet miss tcp __ip fragmentation defragmentation__ create reassemble ipv4 ipv6 fragment __packet filtering__ make libpcap bpf filter lot user friendly __tls fingerprinting__ ja3 fingerprint get start write application pcapplusplus easy intuitive simple application show read packet pcap parse find much information get page pcapplusplus web site page walk easy step app api documentation pcapplusplus consist library __packet library parse create edit packet __pcap library intercept send packet provide nic info stats etc actually wrapper packet capture engine libpcap winpcap npcap dpdk pf_ring __common library common utility packet pcap find extensive api documentation api documentation pcapplusplus web site see miss please contact provide feedback multi platform support pcapplusplus currently support __windows__ __linux__ __macos__ __android__ __freebsd__ please visit pcapplusplus web site see support refer section start pcapplusplus platform support protocol pcapplusplus currently support parse edit creation packet follow protocol ethernet ieee ethernet sll linux cook capture null loopback raw ipv4 ipv6 ipv4 ipv6 arp vlan vxlan mpls pppoe gre tcp udp gtp icmp igmp igmpv1 igmpv2 igmpv3 support ipsec esp parse edit capability sip sdp radius dns dhcp dhcpv6 bgp ssh parse edit capability http header request response ssl parse edit capability ntp packet trailer footer pad generic payload dpdk pf_ring support plane development kit set plane library interface controller driver fast packet process new type socket dramatically improve packet capture speed framework provide fast packet process line speed many application router firewall load balancer etc pcapplusplus provide abstraction layer dpdk pf_ring abstraction layer provide easy interface remove lot boilerplate involve framework visit support page pcapplusplus web site benchmark matias fontanini project compare performance pcapplusplus similar library libtins libcrafter see page pcapplusplus web site provide feedback would happy get feedback please feel free reach follow way open github ticket post message pcapplusplus google group ask question stack overflow send email follow twitter like project please __star github help star star please visit pcapplusplus contribute would much appreciate contribution project interest contribute please visit contribution pcapplusplus web site license pcapplusplus release unlicense
C C++;https://github.com/libigl/libigl;libigl simple geometry process library documentation tutorial instruction important late version libigl introduce break change cmake system please read page instruction update project accordingly
C C++;https://github.com/mattreecebentley/plf_colony;plf colony unordered container provide fast iteration insertion erasure maintain pointer iterator reference validity non erase element documentation function description conan package colony available build2 package colony available plf colony compatible
C C++;https://github.com/richgel999/miniz;miniz miniz lossless high performance compression library single source implement zlib rfc deflate rfc compress format specification standard support commonly function export zlib library completely independent zlib license requirement apply miniz also contain simple function write png format image read write append zip format archive miniz compression speed tune comparable zlib also specialize real time compressor function design compare well fastlz minilzo usage release available release pair miniz miniz simply add project create pair different source header alternatively cmake meson module system choice feature mit license portable single source header library write plain test gcc clang visual studio easily tune trim define drop replacement zlib api test several open source project zlib libpng libzip fill single thread performance compression ratio gap several popular real time compressor zlib level miniz compress around good minilzo approx slow level miniz design compare favorably zlib ratio speed see miniz performance comparison page time block base compressor miniz fully support stream base process coroutine style zlib style api function call single byte time get easy low level compressor tdefl decompressor tinfl simple state structs save restore need simple memcpy low level codec api heap way entire inflater include optional zlib header parse adler check implement single function coroutine separately available small line source miniz_tinfl fairly complete totally optional set zip archive manipulation extraction api archive functionality intend solve common problem encounter embed mobile game development situation archive api purposely powerful enough write entire archiver give bite additional high level logic know problem support encrypt archive sure useful stuff practice minimal documentation assumption user already familiar basic zlib api need write api wiki try place key comment enum api include demonstrate module major feature special thank thank alex evans png writer function also thank paul holden thorsten scheuermann feedback test matt pritchard encouragement sean barrett various public domain library inspiration encourage write miniz much enjoyable painful think would consider program long thank bruce dawson report problem level_and_flags archive api parameter fix general feedback janez zemva indirectly encourage write patent recently ask miniz avoid patent issue miniz purposely core algorithm zlib compressor vanilla hash chain describe also see gzip opinion miniz fall prey patent attack zlib gzip likely serious risk
C C++;https://github.com/hyperrealm/libconfig;libconfig library process structure configuration visit libconfig project distribution tarballs info
C C++;https://github.com/codeplea/tinyexpr;tinyexpr tinyexpr small recursive descent parser evaluation engine math expression handy want add ability evaluation math expression runtime without add bunch cruft project addition standard math operator precedence tinyexpr also support standard math function runtime bind variable feature c99 dependency single source header simple fast implement standard operator precedence expose standard math function sin sqrt etc add custom function variable easily bind variable eval time release zlib license free nearly easy integrate thread safe provide malloc tinyexpr self contain tinyexpr tinyexpr tinyexpr simply add project short minimal evaluate expression runtime usage tinyexpr define function te_interp te_interp take expression immediately return parse error te_interp return nan error pointer argument te_interp set error position parse error failure set error success usage te_compile te_eval te_free give te_compile expression unbind variable list variable name pointer te_compile return te_expr evaluate late te_eval failure te_compile return optionally set pas error location parse error may also compile expression without variable pas te_compile second third argument give te_eval te_expr te_compile te_eval evaluate expression current variable value finish make sure call te_free usage long complete evaluate expression pas command line also error check bind variable respectively produce output example2 sqrt evaluate sqrt error near example2 sqrt evaluate sqrt bind custom function tinyexpr also call custom function implement short work te_compile simple recursive descent parser compile expression syntax tree expression sin parse syntax tree doc png raw true te_compile also automatically prune constant branch compile expression return te_compile would become syntax tree doc png raw true te_eval automatically load variable pointer evaluate return expression te_free always call compile expression speed tinyexpr pretty fast compare expression short expression hard calculation exponentiation work simplify te_compile tinyexpr slow compare expression long involve basic arithmetic performance number take include benchmark program expression te_eval time native time slowdown sqrt slow slow slow slow slow grammar tinyexpr parse follow grammar addition whitespace token ignore valid variable name consist letter follow combination letter digit underscore constant integer decimal number scientific notation 1e3 lead require function support tinyexpr support addition subtraction negation multiplication division exponentiation modulus normal operator precedence exception exponentiation evaluate leave right change see follow math function also support call fabs acos asin atan atan2 ceil cosh exp floor call log log call log10 default see log10 pow sin sinh sqrt tan tanh follow function also provide tinyexpr fac factorial fac ncr combination ncr npr permutation npr also follow constant available compile time option default tinyexpr exponentiation leave right design way spreadsheet excel google sheet would rather exponentiation work right leave need define te_pow_from_right compile tinyexpr comment define near top option enable behaviour match many script language ruby also would like log default natural log instead log10 define te_nat_log hint function type start letter allow constant optimization surround constant expression parenthesis evaluate expression compile time compile entire expression save runtime calculation parenthesis important tinyexpr change order evaluation instead compile tinyexpr insist add first add second
C C++;https://github.com/rpclib/rpclib;rpclib look rpclib coverage rpclib rpc library provide client server modern require recent compiler main highlight expose function program call via rpc language implement msgpack rpc call function rpc program write language idl generation step integrate look feel server srv call rpclib start server loop listen incoming connection try dispatch call bind function function call thread call also async_run spawn worker thread return immediately client status plan feature test current state production ready rpclib list update people library let know want project list microsoft thank rpclib effort fantastic project particular order messagepack takatoshi kondo christopher kohlhoff rename fmtlib victor zverovich google martinho fernandes shoutouts travis asan help spot resolve many bug
C C++;https://github.com/GarageGames/Torque2D;torque move _all torque engine move new organization torque game engine torque2d find repository update encourage new repository instead thank torque mit license open source version torque garagegames maintain t2d steer committee contribution community dedicate game development torque extremely powerful flexible fast engine professional game true cross platform solution provide access window osx linux android web codebase include opengl batch render system box2d physic openal audio skeletal spritesheet animation automate asset management modular project structure taml object persistence like script language branch overview branch find torque repository master branch contain current stable release production environment development branch dedicate active development contain late bug fix new feature update pull request need development branch try best test incoming change possible mistake slip therefore branch always consider unstable page branch currently contain html page generate doxygen engine torquescript reference precompiled version wish compile source precompiled binary window osx available torque release source copy source follow project platform provide find engine compiler folder window visual studio work free community edition osx xcode linux make xcode_ios android android studio web emscripten cmake see available guide platform setup development battery include torque first time box start sandbox sandbox collection simple toy module demonstrate various feature t2d default toy side scroll level monster truck see list available module toy choose click show tool button low right corner screen naturally script asset toy available module folder practical t2d sandbox also excellent framework rapidly prototyping game idea allow easy integration additional module provide numerous debug feature like console access real time metric documentation documentation open source version torque find github wiki contain many tutorial detail technical information engine system script reference guide automatically generate source article contribute open source development community alone join active torque community ask question talk t2d general game development topic late news post blog promote game show additional engine feature t2d fork torque forum torque also might able find useful information active garagegames website torque beginner torque professional garagegames community support torque completely free like thing take time energy maintain develop support t2d become sponsor patreon ensure t2d continue receive attention need remain competitive become also support development directly submit pull request join steer committee see wiki detail license copyright garagegames llc permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
C C++;https://github.com/Dobiasd/FunctionalPlus;logo logo fplus png license boost license functionalplus help write concise readable table content introduction introduction usage usage type deduction useful error message type deduction useful error message tutorial tutorial forward application composition forward application composition find function need find function need performance performance comparison range comparison range requirement installation requirement installation introduction great mostly self document reality find deal low level stuff like iterators hand write loop distract actual essence functionalplus small header library support reduce noise deal single level abstraction time increase brevity maintainability improve productivity fun long pursue goal provide pure easy function free implement commonly flow control say list number interest odd different possibility attain goal write range base loop std copy_if stl keep_if functionalplus think version could pleasant work might like functionalplus still think hand write loop easy understand also consider would happen loop body correspond lambda function call fplus keep_if would much long read keep_if would still immediately know odds contain element come value select possibly complicate predicate loop case idea happen read whole loop body loop version probably would need comment top state keep_if would tell first glance usage find short show nice thing function container functionalplus old song test content container various property team also convenience function retrieve property container count occurrence character string output cut kitty find high rat element container simple compare hand write output function composition bind map creation let say follow function want create std map contain string representation collatz number implement nicely functional way output function show work default stl container like std vector std list std deque std string etc also custom container provide similar interface type deduction useful error message functionalplus deduce type possible let take line collatz collatz_seq function take uint64_t return list show_ints take list return string make function_traits write possible automatically deduce expression fplus compose collatz_seq show_ints function take uint64_t return string manually provide type hint compiler function whose connect type match pas unambiguous error message describe issue generate functionalplus compile time assertion avoid confusingly long error message compiler generate face type error function template change way program write loop nest ifs compose small function error compile time pay error runtime also precise compile time error reduce time spend debug tutorial article functional program functionalplus library today hackerrank challenge provide smooth introduction library show could develop elegant solution problem functionalplus approach also udemy course functional program make heavy functionalplus explain general functional concept forward application composition gemstone tutorial explain apply functional think arrive solution follow problem find number character present every line input text functionality namespace fwd get along without temporary variable make clear whole process simply push input chain function similar pipe concept unix command line fplus fwd find many fplus function partially version fplus foo counterpart fplus foo make style possible alternatively forward application version also write define function composition way case need parameter binary function different order namespace fplus fwd flip also exist fplus bar analogue fplus fwd bar also fplus fwd flip bar find function need look specific functionalplus function know name yet course auto complete feature ide browse content namespace fplus recommend way simply functionalplus api search quickly search keywords function type signature prefer also simply browse source performance basic function fast thank concept abstraction without overhead measurement first take standard desktop compile gcc flag compiler seem good job optimize inlining everything basically equal machine performance wise complex function though sometimes could write optimize way functionalplus performance critical scenario profile show need fast version function please let even help improve functionalplus internally often operate place give container value chain call thus avoid many unnecessary allocation copy case situation however thank work multi paradigm language easily combine manually optimize imperative fplus function luckily experience aka profile show case vast majority application relevant overall performance memory consumption initially focus developer productivity readability good idea comparison range functionalplus thing common follow snippet show difference though range range lazy mean intermediate memory allocate single step process chain like also range probably part point future functionalplus hand work normal stl container also implement new simple compare write new range additionally functionalplus provide much function box api search choice library depend preference project need requirement installation compatible compiler need compiler version fine gcc clang libc visual studio xcode guide different way functionalplus find disclaimer functionality library initially grow due personal need regular basis try best make error free comfortable api still might change future suggestion find error miss function want give general feedback criticism would love hear course contribution contribute also welcome license distribute boost software license version see accompany copy
C C++;https://github.com/taywee/args;args note library essentially maintenance mode time work give love deserve add new feature fix bug also gladly accept pull request cpp travis appveyor coverage read simple small flexible single header argument parse library design appear somewhat similar argparse static type check hopefully lot fast also allow fully nestable group logic argparse utf support limit best normalization perform non ascii character best keep flag combine glyph probably mess help output utf necessary internationalization work case though heavily combinatory utf alphabet may wreak havoc program mit license header restriction would appreciate attribution readme man page something feel generous require remove license name header args hxx source redistribution pretend write welcome addition update wherever feel like contribute api documentation find also somewhat extensive find complete test case well describe usage push boundary let handle flag flag value positional argument simply elegantly full help static typechecking allow type pretty simple way let count flag list argument accept type allow full validation group require argument though output pretty something fail group validation user validation function accept group fully nestable generate pretty help good tweakable parameter let customize prefix separator allow create infinite number different argument syntax let parse default type stream extractor operator work supply function parse string like let decide allow separate argument value flag join like disallow foo bar require foo bar inverse short option allow create subparsers reuse argument multiple command refactor command logic function lambda allow value flag take specific number value like foo first second foo slurp argument allow value flag optionally accept value provide autocompletion bash ton thing library ever allow intermix multiple different prefix type foo foo parser though shortopt longopt prefix different allow make flag sensitive order like gnu find make sensitive relative order positionals order order sensitive positionals relative another list positionals flag value respective item allow positional list positionals last argument list slurp subsequent positional argument logic allow would lot would like would make static check much difficult require sort std string argument pair positional argument assign rather currently assign good simplicity speed library stop try first positional list slurp follow positionals somewhere special default usr local also copy source tree want absolutely sure keep stable api project also want man page require doxygen want doxygen documentation locally doc doc html depend tipi simply add follow entry tipi deps optionally remove section target head easily create argumentparser modify attribute fit need add argument regular argument object create match args matcher object check construction detail doxygen documentation either call args argumentparser parsecli full command line program name args argumentparser parseargs argument parse argument group variable interpret boolean see match variable pull include boolean match status regular args flag variable args get group validation weird get helpful output fail validation unfortunately possible give power group available instance group validation work like xor library able determine exactly wrong fail know entire expression evaluate false specifically user wrong double fact validation operation ordinary function without special mean library understand logic program want useful group message catch validationerror special case check group spit message accordingly develop regression test yes test cxx git repository set standard test still relatively small number would welcome expansion thank travis appveyor test every single push test library complete output simple boolean flag special group type different matcher construction argument flag positional argument list command refactoring command custom type parser std tuple see type validation get little weird make sure check throw parse error whatever error want catch fully deduce type validator throw unextracted character leave stream long description proper wrap list customize parser prefix style window style line replace group nest help menu text map argument write long test case able discern mean fast really question ask look argument parse library every test show args fast tclap fast boost program_options simple benchmark throw together follow parse command line char char parser parse int list char positional parameter list double command line originally much complex tclap limitation make trim could common command line across library also copy argument list every tclap permute argument list comparison would unfair without compare equally surprisingly affect much also test pull argument fast compare parse would expect benchmark top flexible small easy read fast common alternative
C C++;https://github.com/h2o/picohttpparser;picohttpparser copyright kazuho tokuhiro daisuke shigeo picohttpparser tiny primitive fast http request response parser unlike parser stateless allocate memory accept pointer buff output structure setup pointer latter point necessary portion buff widely deploy within perl application popular module include also http parser check test find parser software dual license perl license mit license usage library expose function phr_parse_request phr_parse_response phr_parse_headers phr_decode_chunked phr_parse_request read http request socket sock read parse phr_parse_request print detail phr_parse_response phr_parse_headers phr_parse_response phr_parse_headers provide similar interface phr_parse_request phr_parse_response parse http response phr_parse_headers parse header phr_decode_chunked decode incoming chunk encode decode place benchmark benchmark benchmark internals describe extent blog entry
C C++;https://github.com/SOCI/soci;soci database access library github github mail status branch github action appveyor documentation coverity scan master doc release doc history originally soci develop maciej abstraction layer oracle simple oracle call interface late several database backends develop soci thus long name lose practicality currently like soci may stand simple open database call interface something similar cern also user soci library serve database access layer control system component maciej sobczak license soci library distribute term boost software requirement core compiler boost library optional header boost datetime backend specific client library db2 firebird mysql odbc specific database driver oracle postgresql sqlite see documentation detail maciej
C C++;https://github.com/Organic-Code/Breep;breep breep breep bridge peer peer library mean mean even though construct peer peer may direct connection dude say connection impossible due poorly configure port case breep attempt another peer bridge breep also high level library care peer connect disconnect send send class simply register listener get notify peer come send stuff may even serialization send object directly listener say want listen pile byte instead say want listen fancy myclass breep best way read tutorial tutorial alternatively may read online little preview hello world type create start listen port send hello budy connect breep_declare_type involve tell breep listen send std string forget get compile time error opposite start listen port try connect localhost print first message see disconnect please get confuse udp lib yet breep awesome high level directly send receive object overhead low set well serialization fix 64bits extra overhead compare send raw byte p2p comparison tcp 320bits overhead header easy get read see breep test much probably break bigendian architecture way test sorry warn display architecture slow compile requirement resource requirement compiler compliant boost road map milestone feature status peer peer management complete instantiate object delivery complete improve serialization complete multiple object delivery complete client server management hold project currently test stage release breep license work european union public license license may get copy license language european commission extract article linguistic version licence approve european commission identical value party take advantage linguistic version choice author lucas student frustrate able properly java break library inspire
C C++;https://github.com/facebookresearch/flashlight;flashlight fast flexible machine logo svg quickstart quickstart installation instal cite cite documentation docker image join chat docker image cuda docker image cpu cuda backend cpu backend flashlight fast flexible machine library write entirely facebook research speech team creator torch deep speech core feature include time kernel compilation modern tensor library cuda cpu backends gpu cpu emphasis efficiency scale native support simple extensibility make flashlight powerful research framework hackable core enable fast iteration new experimental setup algorithm without sacrifice performance single repository flashlight provide research across multiple domain automatic speech project documentation flashlight app asr tutorial flashlight app asr tutorial image classification flashlight app imgclass object detection flashlight app objdet language flashlight app project layout flashlight break part flashlight lib flashlight lib contain kernel standalone utility sequence loss beam search decode text process flashlight flashlight core neural library tensor library flashlight app flashlight app application core library machine across domain flashlight pkg flashlight pkg package top flashlight arrayfire specific purpose domain library speech vision text halide extension quickstart first flashlight instal link project project flashlight form sequence flashlight chain computation implement simple convnet easy perform forward backward computation straightforwards see mnist full tutorial include loop abstraction base flashlight tensor operate arrayfire tape base automatic differentiation simple work would expect autograd instal vcpkg library installation vcpkg docker flashlight docker source source source vcpkg source vcpkg project flashlight project flashlight requirement minimum compilation require compiler good support gcc version late make linux base operate system see full dependency dependency list detail source source instruction instal bind find bind readme flashlight setup flashlight break several component describe project layout component incrementally specify correct option option way work flashlight instal library link project best standalone application dependent flashlight source development flashlight project source change rebuild best customize hack core framework flashlight provide app binary flashlight app flashlight way vcpkg instal flashlight vcpkg package source source instal dependency need instal flashlight vcpkg library installation vcpkg flashlight easily instal vcpkg cuda cpu backends support vcpkg either backend first intel cuda backend cuda instal library core flashlight apps flashlight app check feature available installation vcpkg search flashlight cuda vcpkg search flashlight cpu app feature vcpkg flashlight cuda asr asr app cuda backend currently support list feature flashlight app binary flashlight app also select feature instal vcpkg tree tool directory integrate flashlight project vcpkg flashlight installation simple vcpkg cmake toolchain source vcpkg first dependency backend choice vcpkg click expand instal cuda backend dependency vcpkg flashlight cuda backend source dependency instal vcpkg cuda intel rest dependency cuda backend base flashlight feature would like instal cpu backend dependency vcpkg flashlight cpu backend source dependency instal vcpkg intel rest dependency cpu backend base flashlight feature would like vcpkg toolchain flashlight source dependency clone repository source vcpkg cmake subset flashlight feature see option option source source first dependency dependency available system local package manager dependency mark instal automatically find local system fl_build_standalone determine behavior disable dependency flashlight dependency instal clone repository flashlight component set mklroot environment variable export mklroot opt intel oneapi mkl late export mklroot opt intel mkl linux base system help cmake find intel mkl initially find small subset flashlight feature apps see option option complete list option flashlight custom directory cmake argument flashlight library share library cmake argument flashlight modern cmake import target dependency dependency find pas d_dir cmake command export _dir environment variable equal path config cmake help locate dependency system see detail cmake fail locate package check see correspond already create create dependency dependency mark automatically source find system set fl_build_standalone disable behavior dependency mark require distribute enable fl_build_distributed see option option distribute require apps dependency mark installable via vcpkg see instruction instal dependency source vcpkg flashlight source component backend dependency audio library fl_lib_audio cuda cpu blas library openblas etc core cuda cpu runtime package fl_pkg_runtime speech package fl_pkg_speech openblas etc app imgclass app objdet app test option flashlight cmake accept follow option prefix cmake command line name option default value description fl_backend cuda cpu opencl cuda backend component fl_build_standalone dependency find fl_build_all_libs flashlight library fl_build_lib_set flashlight set library fl_build_lib_sequence flashlight sequence library fl_build_lib_audio flashlight audio library fl_build_lib_common flashlight common library fl_build_lib_text flashlight text library fl_build_core flashlight neural net library fl_build_distributed distribute require apps fl_build_contrib contrib apis subject break change fl_build_all_pkgs define default value every pkg see fl_build_pkg_runtime fl_build_all_pkgs runtime package fl_build_pkg_vision fl_build_all_pkgs flashlight vision package fl_build_pkg_text fl_build_all_pkgs flashlight text package fl_build_pkg_speech fl_build_all_pkgs flashlight speech package fl_build_pkg_halide fl_build_all_pkgs flashlight halide package fl_build_all_apps define default value every app see fl_build_app_asr fl_build_all_apps automatic speech recognition app fl_build_app_imgclass fl_build_all_apps image classification app fl_build_app_objdet fl_build_all_apps automatic speech recognition app tool fl_build_app_lm fl_build_all_apps language app fl_build_app_asr_tools fl_build_app_asr automatic speech recognition app tool fl_build_tests test fl_build_examples fl_build_experimental experimental component cmake_build_type see debug see cmake_install_prefix directory see see project flashlight flashlight easily link cmake flashlight export follow cmake target instal flashlight fl_lib_common contain flashlight library common header symbol throughout flashlight flashlight fl_lib_set contain flashlight library header symbol pertain set flashlight fl_lib_sequence contain flashlight library header symbol pertain sequence flashlight fl_lib_audio contain flashlight library header symbol pertain audio flashlight fl_lib_text contain flashlight library header symbol pertain text flashlight flashlight contain flashlight library well flashlight core autograd neural library flashlight fl_pkg_runtime contain flashlight core well common utility log flag distribute utils flashlight fl_pkg_vision contain flashlight core well common utility vision pipeline flashlight fl_pkg_text contain flashlight core well common utility deal text flashlight fl_pkg_speech contain flashlight core well common utility deal speech flashlight fl_pkg_halide contain flashlight core extentions easily interface halide give simple project cpp include link flashlight follow cmake configuration link flashlight set include directory vcpkg flashlight installation instal flashlight vcpkg cmake configuration myproject source flashlight installation source installation flashlight flashlight find automatically cmake flashlight instal custom location cmake_install_prefix pas dflashlight_dir prefix share flashlight cmake argument cmake command help cmake find flashlight flashlight docker flashlight dependency also provide dockerfiles see accompany docker documentation docker information contribute contact contact vineelkpratap com awni com jacobkahn com qiantong com antares com padentomasello com jcai com gab com vitaliy888 com locronan com flashlight actively develop see contribute contribute help acknowledgment flashlight derive cite cite license flashlight mit license see license license information
C C++;https://github.com/kosua20/herebedragons;dragon hic sunt dracones repository contain multiple scene different apis framework various platform goal provide comparison multiple render method inherently bias due variety algorithm available cpu gpu configuration hopefully still provide interest insight render check video current version runnning image png follow version currently available blender custom real time renderer see github nintendo nintendo game boy playstation follow version tentatively plan directx opengl console hardware another raytracing approach directory version find source correspond resource method format quality constraint along readme describe method resource scene compose main element plane represent grind pavement texture dragon stanford dragon monkey head suzanne rotate around vertical axis skybox surround scene textured cloudy sky additionally sun simulate directional light camera able rotate around scene initial texture contain opengl resource find apis combine program language submit awesome people opengl version cprogrammer1994 see vulkan version vazgriz
C C++;https://github.com/erincatto/Box2D;box2d status box2d box2d physic engine game contribute please submit pull request new feature core library change instead please issue first discussion bug prefer detail bug report pull request feature collision continuous collision detection contact callback begin end pre solve post solve convex polygon circle multiple shape per body shoot contact manifold dynamic tree broadphase efficient pair management fast broadphase aabb query collision group category physic continuous physic time impact solver persistent body joint contact graph island solution sleep management contact friction restitution stable stack linear time solver revolute prismatic distance pulley gear mouse joint joint type joint limit motor friction momentum decouple position correction fairly accurate reaction force impulse system small block stack allocator centralize tune parameter highly portable stl container testbed opengl glfw graphical user interface imgui extensible test framework support load world dump ensure cmake user path visual studio bat command prompt otherwise bash sub folder window open box2d sln box2d vcpkg box2d dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg box2d box2d port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository note vcpkg support provide box2d project xcode add cmake path zprofile default terminal zsh export path application cmake app content bin path mkdir cmake xcode open box2d xcodeproj select testbed scheme edit scheme set custom work directory make box2d testbed testbed instal cmake library doc command sequence require doxygen window try program thus require admin privilege alternatively target another directory something like documentation license box2d develop erin catto mit sponsorship support development box2d github
C C++;https://github.com/apolukhin/magic_get;library basic reflection give access structure element index provide std tuple like method user define type without macro boilerplate part boost however boost pfr header library depend boost copy content include folder github project library work fine version library without boost namespace see test branch test coverage info develop coverage master coverage late developer motivate output motivate output motivate output requirement limitation see license distribute boost software license version
C C++;https://github.com/ClickHouse/clickhouse-cpp;clickhouse client window window client support type array date datetime datetime64 datetime timezone datetime64 timezone decimal32 decimal64 decimal128 enum8 enum16 fixedstring float32 float64 ipv4 ipv6 nullable string lowcardinality string lowcardinality fixedstring tuple uint8 uint16 uint32 uint64 int8 int16 int32 int64 int128 uuid please note client instance thread safe must create separate client thread utilize synchronization technique
C C++;https://github.com/nanodbc/nanodbc;nanodbc nanodbc banner nanodbc banner small wrapper native odbc api please see online documentation nanodbc user information usage propaganda detail source level documentation github github status branch linux osx window coverage coverity documentation master none master appveyor badge appveyor coverity_scan coverity badge coverity note coverity status coverity_scan nanodbc coverity branch master significant amount work push merge change coverity_scan well keep status date philosophy native api work odbc exorbitantly verbose ridiculously complicate fantastically brittle nanodbc address frustration goal nanodbc make developer happy common task easy require concise simple late standard cpp std best practice cpp core _enthusiastically_ incorporate make library future proof possible accommodate user late great semantic versioning semver release note clarify require feature standard particular version design decision complex object nanodbc follow pimpl pointer pimpl idiom provide separation interface value semantics clean nanodbc header include nothing standard header nanodbc wrap odbc provide simple way thing try featureful possible guarantee never write support odbc personally never major feature beyond already support odbc within scope nanodbc nano part nanodbc become relevant library _as minimal possible_ mean dependency beyond standard typical odbc header library link feature unsupported exist odbc api call nanodbc intentionally small enough drag drop header project want also provide cmake cmake library object include test cmake also support source test catch catch test framework cmake automatically fetch late version catch time nanodbc test also need either unixodbc iodbc instal discoverable cmake easy homebrew brew unixodbc brew unixodbc system provide iodbc early test attempt connect sqlite sqlite database sqlite odbc driver instal time write happen nice sqlite odbc driver sqliteodbc available christian werner website also available via homebrew sqliteobdc test expect find source name sqlite nix system sqlite3 odbc driver window system odbcinst ini must section like follow process convenient create directory source require cmake generate makefiles make nanodbc share object make check test also nanodbc system make test fail please hesitate report nanodbc new issue create issue detail test log prepend make command env ctest_output_on_failure enable verbose output please option follow option available via cmake command line option cmake doc cmake nanodbc need set correspond compile define flag boolean option follow cmake option cmake option default value convention initial value provide standard cmake option dbuild_shared_libs nanodbc share library need nanodbc_enable_boost option configure environment boost boost cmake option possible value detail nanodbc_disable_async disable async feature may resolve issue old odbc version nanodbc_disable_examples nanodbc_disable_install generate target nanodbc_disable_libcxx libc available system nanodbc_disable_tests test nanodbc_enable_boost boost unicode string convertions require boost locale boost locale workaround issue nanodbc_enable_unicode enable unicode support nanodbc string become std u16string std u32string nanodbc_enable_workaround_nodata enable sql_no_data workaround issue nanodbc_odbc_version sql_ov_odbc3 force odbc version default sql_ov_odbc3_80 available otherwise sql_ov_odbc3 note iodbc window sizeof wchar_t sizeof sqlwchar yet unix system sizeof wchar_t unixodbc sizeof sqlwchar iodbc sizeof sqlwchar sizeof wchar_t lead incompatible abis application driver iodbc option nanodbc_use_unicode nanodbc string std u32string case std u16string exercise unicode enable iodbc driver guarantee test pas entirety system iodbc recommendation unixodbc must iodbc consider _disabling_ unicode mode avoid wchar_t issue contribute style clang format clang format handle format nanodbc utility brew installable brew brew clang format available major platform see clang format configuration detail style script utility style format repository automatically clang format single follow please auto format submit pull request source level documentation source level documentation provide via github page page available nanodbc nanodbc update preform follow step doc readme doc readme quick setup test development environment get nanodbc fast possible consider provide dockerfile dockerfile docker compose yml docker compose yml vagrantfile vagrantfile spin docker docker container suitable test development nanodbc spin complete multi container environment database service ssh vagrant vagrant virtualbox test important objective maintain nanodbc cover test new contribution submit via pull request must include correspond test important ensure quality new feature good news add test easy test structure test base_test_fixture include set common test case test _test cpp source independent test program include common database specific test case add new test case test base_test_fixture add new test case method base_test_fixture class void my_feature_test test _test cpp copy paste test_case_method boilerplate update name tag etc feature require database specific test case database skip test base_test_fixture step write dedicate test case directly test _test cpp publish release process local master branch ready publish semantic versioning semver utility publish script script bump major minor patch version update repository version txt add prepare commit create git tag appropriately make minor update would utility publish minor review cmake configuration documentation sphinx configuration update version number wherever necessary important always update changelog changelog information new change bug fix feature make new release utility change script aid composition document publish script attempt verify changelog properly update manually instead follow step minor update echo version txt git add version txt git commit prepare release git tag git push origin next switch page branch late documentation commit push finally announce new release public future work good want someday refactor test follow bdd pattern update codebase idiom pattern write test goal much high coverage test large variety driver include performance test clean bind_ family function reduce duplication improve documentation main website api doc responsive provide documentation detail point gotchas versioned generate source level api documentation matesr previous release add howto documentation window linux mit mit lexicalunit mloskot author contributor contributor mit author contributor nanodbc nanodbc banner nanodbc coverity nanodbc makefile nanodbc new issue nanodbc release boost boost locale brew catch clang format cmake doc cmake cmake option cpp core cpp std docker doxygen page iodbc jekyll pimpl semver sqlite sqliteodbc unixodbc vagrant appveyor appveyor badge coverity coverity badge
C C++;https://github.com/protocolbuffers/protobuf;protocol buff google interchange format copyright google inc overview protocol buff protobuf google language neutral platform neutral extensible mechanism serialize structure find protobuf documentation google developer readme contain protobuf installation instruction protobuf need protocol compiler compile proto protobuf runtime choose program language protocol compiler installation protocol compiler write please follow installation instruction src readme protoc along runtime non user simple way protocol compiler pre binary release page section release find pre binary zip package protoc version platform zip contain protoc binary well set standard proto distribute along protobuf look old version available release page check maven repo pre binary provide release version want github main version head need modify protobuf recommend protoc binary source would like protoc binary source see installation instruction src readme protobuf runtime installation protobuf support several different program language program language find instruction correspond source directory protobuf runtime specific language language source include runtime protoc src src java java java objective objectivec objectivec csharp csharp javascript ruby ruby ruby php php php dart quick start best way protobuf follow tutorial developer guide want take look directory documentation complete documentation protocol buff available via web
C C++;https://github.com/adamstark/AudioFile;audiofile simple header library read write audio current support format wav aiff author audiofile write maintain adam stark usage create audiofile object include audiofile audiofile audiofile load audio audiofile load path audiofile wav get information load audio int samplerate audiofile getsamplerate int bitdepth audiofile getbitdepth int numsamples audiofile getnumsamplesperchannel double lengthinseconds audiofile getlengthinseconds int numchannels audiofile getnumchannels bool ismono audiofile ismono bool isstereo audiofile isstereo quick shortcut print summary console audiofile printsummary access sample directly int channel int numsamples audiofile getnumsamplesperchannel int numsamples double currentsample audiofile sample channel replace audiofile audio buff another create audiobuffer btw audiobuffer vector vector audiofile audiobuffer buff set channel buff resize set number sample per channel buff resize buff resize something fill buff sample include somewhere earler m_pi sinf int numchannels int numsamplesperchannel float samplerate float frequency int numsamplesperchannel float sample sinf m_pi float samplerate frequency int channel channel numchannels channel buff channel sample put audiofile object bool audiofile setaudiobuffer buff resize audio buff set number channel number sample per channel audiofile setaudiobuffersize numchannels numsamples set number sample per channel audiofile setnumsamplesperchannel numsamples set number channel audiofile setnumchannels int numchannels set bite depth sample rate audiofile setbitdepth audiofile setsamplerate save audio disk wave implicit audiofile save path desire audiofile wav wave explicit audiofile save path desire audiofile wav audiofileformat wave aiff audiofile save path desire audiofile aif audiofileformat aiff please see folder library usage note type audiofile template class instantiate float point precision audiofile audiofile double precision audiofile audiofile simply reflect type would like store underlie audio sample still read write bite audio regardless type unless system precision float desire bite depth hear people library type design case let know interest support specific type formally error message default library log error message console provide information wrong try load exist prefer see message disable error log behaviour audiofile shouldlogerrorstoconsole false version 15th january move project mit licence add option load audio already memory workflow improvement bug fix 23rd january fast load audio bug fix 18th october cmake support construct instance path bug fix 3rd july support bite audio support multi channel audio read write ixml 29th february make error log console optional fix lot compiler warn 14th october add include good support visual studio 13th october change header library include audiofile bug fix 28th october bug fix documentation update 6th june bug fix contribution multichannel channel audio support read write ixml chunk remove warn good support ubuntu fast load audio improvement github action workflow pull request review want contribute would like submit pull request library please kindly follow follow simple guideline make change concise possible change propose avoid unnecessarily change large number line commit change number space indentation line keep style library juce cod license mit license copyright adam stark permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
C C++;https://github.com/g-truc/glm;glm doc manual logo mini png opengl glm header mathematics library graphic software base opengl shade language glsl glm provide class function design implement name convention functionality glsl anyone know glsl glm well project limit glsl feature extension system base glsl extension convention provide extend capability matrix transformation quaternion pack random number noise etc library work perfectly also ensure interoperability third party library sdk good candidate software render raytracing rasterisation image process physic simulation development context require simple convenient mathematics library glm write take advantage support compiler platform independent library dependence officially support follow compiler high intel high high apple clang high visual high high experimental experimental test compiler information glm please look manual manual api reference source documentation license either happy bunny license modify mit mit license manual section0 thank contribute project submit pull last project health service system compiler status travis macosx linux bit clang clang gcc gcc travis window visual studio visual studio visual studio release note glm feature add glm_ext_scalar_reciprocal test add glm_ext_vector_reciprocal test add glm iround glm uround glm_ext_scalar_common glm_ext_vector_common add glm_ext_matrix_integer test improvement add constexpr qualifier cross product add constexpr qualifier dot product fix fix incorrect assertion glm min glm max fix quaternion orientation glm decompose fix singularity quaternion euler angle roll conversion fix quat glm pow handle small magnitude quaternion fix glm fastnormalize error fix glm ismultiple error fix glm adjugate calculation fix glm angle discard sign angle range remove ban glm string_cast cuda host glm feature add glm_ext_vector_intx glm_ext_vector_uintx extension add glm_ext_matrix_intx glm_ext_matrix_uintx extension improvement add glm clamp glm repeat glm mirrorclamp glm mirrorrepeat function glm_ext_scalar_commond glm_ext_vector_commond extension test fix fix unnecessary warn matrix_projection inl fix quaternion glm slerp overload interpolate extra spin fix glm length arch64 fix singularity check glm quatlookat glm improvement improve neon support function optimize add cmake glm interface add glm fma base std fma add miss quat constexpr add glm_force_quat_data_wxyz store quat instead fix fix equal ulp variation negative sign fix intersection ray plane add relate test fix arm 64bit detection fix glm_ext_matrix_clip_space warn fix wimplicit int float conversion warn clang fix glm_ext_matrix_clip_space perspectivefov glm feature add neon support add sycl support add glm_ext_scalar_integer extension power multiple scalar function add glm_ext_vector_integer extension power multiple vector function improvement add visual detection add visual detection add miss gentype check glm bitcount glm bitfieldreverse fix fix std set __cplusplus instead fix hash hash qua instead tquat fix natvis structs rename fix glm ldexp glm frexp declaration fix miss const quaternion conversion operator fix glm_ext_scalar_ulp glm_ext_vector_ulp api cod style fix quaternion componant order fix glm_has_cxx11_stl break clang linux fix clang gcc due wrong glm_has_if_constexpr definition fix cuda deprecation remove cmake uninstall script glm fix fix error define glm_enable_experimental fix constexpr warn fix miss declaration glm frexp glm ldexp glm feature add glm mix matrix glm_ext_matrix_common add cmake build_shared_libs build_static_libs option improvement add glm_force_intrinsics enable simd instruction path default disable allow constexpr support default optimize inversetransform fix fix glm mat4x3 conversion fix constexpr issue gcc fix glm mix improve glsl conformance fix glm int8 define unsigned char compiler fix glm vec1 include ignore vscode glm feature add glm equal glm notequal overload max ulps parameter scalar number add glm_force_silent_warnings silent glm warn language extension wpedantic warn add adjugate function glm_gtx_matrix_operation add glm_force_aligned_gentypes enable align type simd instruction enable disable constexpr improvement add constant time ulp distance float add glm_force_silent_warnings suppress glm warn fix fix glm simplex noise double fix glm bitfieldinsert accord glsl spec fix glm refract negative glm fix fix glm_force_cxx section manual fix default initialization vector quaternion type glm_force_ctor_init glm feature add bitfielddeinterleave glm_gtc_bitfield add miss glm equal glm notequal epsilon quaternion type glm_gtc_quaternion add glm_ext_matrix_relational glm equal glm notequal epsilon matrix type add miss align matrix type glm_gtc_type_aligned add detection add visual language standard version detection add pdf manual markdown improvement add section manual contribute glm refactor manual list configuration define add miss glm vec1 base constructor redesign constexpr support exclude simd constexpr add detection visual toolsets add identity function splitted header ext extension improve compilation time add separate performance test clarify refract valid range index refraction inclusively fix fix simd detection clang gcc fix problem due std printf std clock_t fix int mod anonymous union require language extension fix glm ortho fix visual warn vector relational fix icc error constexpr fix default operator constructor fix invalid conversion int scalar vec4 constructor sse instruction fix infinite loop random function negative radius value assert glm feature add rgbm encode glm_gtc_packing add glm_gtx_color_encoding extension add glm_gtx_vec_swizzle fast compile time swizzling swizzle operator add glm_gtx_exterior_product vec2 glm cross add glm_gtx_matrix_factorisation factor matrix various form add glm_enable_experimental manual section7_4 enable experimental feature add pack function integer vector add conan package configuration add glm quatlookat glm_gtx_quaternion add glm fmin glm fmax glm fclamp glm_gtx_extended_min_max add glm_ext_vector_relational extend glm equal glm notequal take epsilon argument add glm_ext_vector_relational glm openbounded glm closebounded add glm_ext_vec1 vec1 type add glm_gtx_texture level function add spearate function nagative near clip plan add glm_force_single_only glm platform support double add glm_gtx_easing interpolation function improvement default initialization vector matrix quaternion type add lowp variant gtc_color_space convertlineartosrgb replace manual markdown version improve api documentation optimize gtc_packing optimize gtc_noise function optimize gtc_color_space hsv rgb conversion optimise gtx_color_space_ycocg ycocgr conversion optimize gtx_matrix_interpolation axisangle function add faq window header error remove gcc shadow warn add error include different version glm add glm_force_ignore_version ignore error cause include different version glm reduce warn strict compilation flag length member function constexpr add support weverything clang improve exponential function test coverage enable warn error clang unit test conan package external repository clarify quat_cast documentation apply pure rotation matrix fix remove doxygen reference glm_gtc_half_float remove fix glm decompose fix glm intersectraytriangle fix dual quaternion operator fix usused variable warn glm_gtx_spline fix reference glm_force_radians remove fix glm fastinversesqrt fast inverse square fix glm axisangle nan fix integer pow glm_gtx_integer null exponent fix quat normalize error fix visual warn regard __has_feature definision fix documentation warn fix glm_has_openmp openmp enable fix good follow glsl min max specification fix quaternion constructor vector special case fix glm to_string quaternion wrong component order fix glm acsch fix glm isnan cuda deprecation require visual studio gcc clang cuda icc compiler remove glm_gtx_simd_vec4 extension remove glm_gtx_simd_mat4 extension remove glm_gtx_simd_quat extension remove glm_swizzle glm_force_swizzle instead remove glm_messages glm_force_messages instead remove glm_depth_zero_to_one glm_force_depth_zero_to_one instead remove glm_left_handed glm_force_left_handed instead remove glm_force_no_ctor_init remove glm uninitialize glm feature add conan package support fix fix clang version detection source fix glm packf3x9_e1x5 exponent pack fix error min max specialization integer fix simd_mat4 error glm fix fix glm_gtc_packing test fail gcc x86 due denorms fix popcnt optimization clang fix glm intersectrayplane return true parallel case fix gcc compiler warn fix glm_gtx_matrix_decompose glm decompose fix gcc old fix visual internal error declare global vec type siwzzle expression enable fix glm_force_cxx11 clang libstlc stl feature glm improvement broad support glm_force_unrestricted_gentype fix fix android error compiler stl fix glm_gtx_transform2 shear function fix interaction glm_force_unrestricted_gentype glm ortho function fix glm bitcount avx bite fix cmake find_package version specification glm improvement add visual detection add clang detection add warn message glm_force_cxx compiler know fully support request version refactored glm_compiler_vc value make quat vec mat type component length static fix fix visual constexpr error glm improvement optimize quaternion glm log function fix fix gcc warn filter replace pedantic wpedantic fix simd faceforward bug fix gcc compilation option fix visual studio align type warn fix pack unpack function fix 5_6_5 5_5_5_1 glm feature add right leave hand projection clip control support add glm compnormalize glm compscale function glm_gtx_component_wise add glm packf3x9_e1x5 glm unpackf3x9_e1x5 glm_gtc_packing rgb9e5 add packhalf glm_gtc_packing add packunorm packsnorm glm_gtc_packing add 16bit pack unpack glm_gtc_packing add 8bit pack unpack glm_gtc_packing add miss bvec operator add glm iround glm uround glm_gtc_integer fast round positive value add raw simd api add align qualifier add glm_gtc_type_aligned align vec type add glm_gtc_functions extension add quaternion version glm isnan glm isinf add glm lowestbitvalue glm_gtx_bit add glm_force_unrestricted_gentype allow non basic gentype improvement improve simd swizzle operator interaction gcc clang improve glm_gtc_random linearrand documentation improve glm_gtc_reciprocal documentation improve glm_force_explicit_ctor coverage improve openmp support detection clang gcc icc improve glm_gtx_wrap simd friendliness add constexpr vec mat quat dual_quat type add neon instruction set detection add mips cpu detection add powerpc cpu detection cuda function function cuda compiler factorize glm_compiler_llvm glm_compiler_apple_clang glm_compiler_clang warn long long add information message fix fix glm_gtx_extended_min_max filename typo fix glm intersectraytriangle unintentional backface cull fix long long warn gcc clang fix sign sign integer function non x86 architecture fix strict aliasing warn fix miss glm vec1 overload glm length2 glm distance2 function fix glm test fast command line option incompatible fix quaterion mat3 cast function glm mat3_cast glm_gtc_quaternion fix glm_gtx_io cuda deprecation remove glm_force_size_func define deprecate glm_gtx_simd_vec4 extension deprecate glm_gtx_simd_mat4 extension deprecate glm_gtx_simd_quat extension deprecate glm_swizzle glm_force_swizzle instead deprecate glm_messages glm_force_messages instead glm improvement add pkg config update list compiler version detect improve stl detection fix fix stl detection icc fix miss vec1 overload length2 distance2 function fix long long warn gcc clang fix scalar reciprocal function gtc_reciprocal glm improvement add visual clang toolset detection fix fix uaddcarry warn fix roundpoweroftwo floorpoweroftwo fix visual simd instruction set automatic detection bit fix to_string glm_force_inline fix glm_force_inline binary vec4 operator fix gtx_extended_min_max filename typo fix intersectraytriangle unintentional backface cull glm fix fix asinh atanh warn stl fix polar coordinate function latitude fix outerproduct defintions operator signature mat2x4 vec4 fix eulerangles precision error return nan fix undefined reference error fix miss glm_platform_cygwin declaration fix various undefined reference error glm improvement add avx512 detection fix fix cmake policy warn fix gcc detection fix clang window fix bit constant warn gcc glm fix fix gtc_round floormultiple ceilmultiple fix gtc_packing unpackunorm3x10_1x2 fix gtc_matrix_inverse affineinverse fix icc linux error fix ldexp frexp compilation error fix declaration shadow field warn fix glm_compiler_vc2005 define warn fix various define warn fix miss unary operator fix cygwin error glm improvement improve constexpr constant function coverage add to_string quat dual_quat gtx_string_cast improve overall execution time unit test fix fix strict alignment warn fix link error compiler support default function fix compilation warn vec4 fix non identity quaternion equal vector fix excessive gtx_fast_trigonometry execution time fix visual studio hide class member warn fix builtin bitscan never remove unused func_noise glm feature add gtc_color_space convertlineartosrgb convertsrgbtolinear function add fmod overload gtx_common test leave hand perspective lookat function add function euleranglexyz extracteuleranglexyz add perform std hash glm type add texcoord wrap add static component precision member vector quat type add gitignore add support default function glm type union improvement change usage __has_include support intel compiler specialize integer ycocg show status message findglm quiet option set add master branch continuous integration service linux clarify manual regard angle unit glm add faq update list compiler version fix fix default precision quat dual_quat type fix int64 msb lsb handle arch fix multi line comment warn fix specifier removal std make_pair fix perspective fovy argument documentation remove m64 cause issue linux fix isfinite compiler fix intel compiler error linux fix libstdc clang fix quaternion pow fix decompose warn fix matrix conversion deprecation remove integer specification mod gtc_integer remove gtx_multiple replace gtc_round glm fix android stl glm feature add display glm version glm_messages add arm instruction set detection improvement remove assert perspective zfar znear add visual studio natvis support vec1 quat dualqual type clean feature detection clarify glm license fix fix faceforward fix conflict xlib define true fix decompose function vs2010 templating issue fix mat4x3 mat2x3 mat4x2 operator fix warn f2x11_1x10 pack function gtc_packing fix visual studio natvis support vec4 fix gtc_packing pack norm add test disable gtx_scalar_multiplication gcc fail test fix visual constexpr error disable partial support fix function inlined clang fix memory corruption undefined behaviour glm feature add glm_lang_cxx14_flag glm_lang_cxx1z_flag language feature flag add detection improvement clean glm_messages compilation log report detect capability fix fix scalar uaddcarry error cuda fix explicit conversion operator detection fix miss explicit conversion integer log2 vec1 type fix bit integer gtx_string_cast to_string bite compiler fix android issue stl support ndk fix unsupported _bitscanforward64 _bitscanreverse64 vc10 fix visual bite fix glm_force_size_func pragma message fix fix conflict gtx_compatibility gtc_quaternion fix language restriction glm_force_cxx glm feature expose template vector matrix type glm namespace add gtx_scalar_multiplication compiler add gtx_range compiler add closestpointonline function tvec2 gtx_closest_point add gtc_vec1 extension vec1 support vec type update gtx_associated_min_max vec1 support add support precision integer linearrand add integer type support gtx_string_cast add vec3 slerp add gtx_common isdenomal add glm_force_size_func replace length size add glm_force_no_ctor_init add uninitialize explicitly initialize glm type add gtc_bitfield extension promote gtx_bit add gtc_integer extension promote gtx_bit gtx_integer add gtc_round extension promote gtx_bit add glm_force_explicit_ctor require explicit type conversion add gtx_type_aligned align vector matrix quaternion type improvement rely implement isinf isnan remove glm_force_cuda cuda implicitly detect separate apple clang llvm compiler detection pragma undetected compiler automatically compile glm_force_cxx98 glm_force_pure add function glsl specification vc12 optimize bitfieldreverse bitcount function optimize findlsb findmsb function optimize matrix vector multiple performance cuda reduce integer type redifinitions rewrite gtx_fast_trigonometry make type trivially copyable remove glm test std feature within glm without redeclaring optimize cot function optimize sign function add explicit cast quat mat3 mat4 fix fix std nextafter support android fix miss value_type dual quaternion fix return type dual quaternion length fix infinite loop isfinite function gcc fix visual studio compiler warn fix implicit conversion another tvec2 type another tvec2 fix lack consistency quat dualquat constructor fix uaddcarray fix float comparison warn deprecation require visual studio gcc apple clang llvm cuda icc compiler remove degree function parameter remove glm_force_radians active default remove support remove gcc support remove llvm gcc support remove llvm support remove cuda support glm fix non utf8 character add findglm cmake fix gtx_color_space saturation fix glm isinf glm isnan android ndk fix builtin glm_arch_sse4 optimize quaternion vector rotation fix miss doxygen endcond tag fix instruction set detection clang fix orientate3 function fix lerp costheta close quaternion slerp add gtx_io fix fastdistance ambiguity fix tweakedinfiniteperspective add user define epsilon tweakedinfiniteperspective fix std copy std vector glm type fix strict aliasing issue fix std nextafter support android fix corner case exp log function quaternion glm add instruction set auto detection visual _m_ix86_fp arch compiler argument fix gtx_raw_data dependency fix gcc instruction set detection add glm_gtx_matrix_transform_2d extension fix cuda issue add support extension gtx_string_cast cuda fix strict aliasing warn gcc android ndk fix miss bitfieldinterleave definisions fix usubborrow fix eulerangle consistent right hand coordinate system add full test eulerangle function add workaround cuda compiler bug glm fix initializer list ambiguity fix warn android ndk fix non power matrix product fix mix function link error fix sse include glm test pure platform fix undefined reference fastinversesqrt fix glm_force_radians error fix dot product clamp range vector angle function tentative fix strict aliasing warn gcc android ndk fix glm_gtc_constants description brief glm fix angle orientedangle sometimes return nan value deprecate degree function parameter display message add possible static_cast conversion glm type fix error inverse member glm glm unproject fix mismatch declaration definition fix inverse link error namespace glm optimize matrix inverse division add intersectrayplane function fix outerproduct return type glm add forward declaration glm fwd hpp fast compilation add per feature header minimize glm internal dependency improve intel compiler detection add bitfieldinterleave _mm_bit_interleave_si128 function add gtx_scalar_relational add gtx_dual_quaternion add rotation function gtx_quaternion add precision variation type add quaternion comparison function fix gtx_multiple negative value remove gtx_ocl_type extension fix post increment decrement operator fix perspective znear remove value swizzle operator clean compiler detection unsupported compiler replace cast cast fix length return int size_t add glm_force_size_t_length glm length_t remove unnecessary conversion optimize pack unpack function remove normalization argument lookat function add low precision specialization inversesqrt fix ldexp frexp increase assert coverage increase static_assert coverage replace glm trait stl trait possible allow include individual core feature increase unit test completness add create quaternion vector add initializer list fix umulextended imulextended vector type fix cuda coverage gtc extension add gtx_io extension improve glm message enable define glm_messages hide matrix _inverse function detail private section glm fix detection select last know compiler new version fix is_int is_uint duplication gcc fix test suite clang mode add mode support cmake test suite remove extension mode cmake visual add pedantic mode cmake test suite clang gcc add gcc frontend unix icc visual front window icc add compilation error unsupported compiler version fix glm orientation glm_force_radians define fix const ref issue assignment operator take scalar parameter fix glm eulerangley glm fix cuda support fix inclusion intrinsics pure mode fix language detection gcc mode enable fix issue register deprecate fix issue cuda issue add window detection add miss value_ptr quaternion glm fix slerp costheta close fix mat4x2 value_type constructor fix glm natvis visual add assert inversesqrt detect division fix miss swizzle operator fix cuda warn fix glm natvis vc11 fix glm_gtx_multiple negative value fix glm perspective znear glm detect qualifier clang fix mode gcc could enable without extension fix squad intermediate exp quaternion function fix gtx_polar_coordinates euclidean function take vec2 instead vec3 clarify license apply manual add docx copy manual fix glm_gtx_matrix_interpolation fix isnan isinf android clang autodetected version __cplusplus value fix mix bool bvec third parameter glm fix compadd gtx_component_wise fix simd support intel compiler window fix isnan isinf cuda compiler fix glm_force_radians glm perspective fix gcc warn fix packdouble2x32 xcode fix mix vec4 sse fix 0x2013 dash character comment issue window japanese mode fix documentation warn fix cuda warn glm improve half support case implicit conversion fix intel composer compiler support linux fix interaction quaternion euler angle fix gtc_constants fix gtx_multiple fix quat slerp mix function costheta close improve fvec4simd fmat4x4simd fix assert message add slerp lerp quaternion function test glm add intel composer compiler support promote gtc_espilon extension promote gtc_ulp extension remove glm website source repository add glm_force_radians function take radian argument fix detection clang llvm gcc macos add debugger visualizer visual require visual studio gcc clang cuda icc compiler glm add sse4 avx2 detection remove virtrev_xstream incompatibility generate gcc fix compiler option gcc remove language extension option gcc fonctionnal fix bitfieldextract vector type fix warn fix sse include glm fix isinf isnan improve compatibility intel compiler add cmake test option simd fast math land ext fix simd mat4 test gcc fix perspectivefov fix matrixcompmult none square matrix fix namespace issue stream operator fix various warn add vc11 support glm fix doxygen documentation fix clang version detection fix simd mat4 operator glm fix platform detection fix warn remove detail doxygen doc glm add cpp check project fix conflict window header fix isinf fix boost conflict fix warn glm add support chrone native client add epsilon constant remove value_size function vector type fix roundeven gcc improve api documentation fix modf fix step function accuracy fix outerproduct glm improve doxygen documentation add new swizzle operator compiler add new swizzle operator declare function add glsl length vector matrix type promote glm_gtc_noise extension simplex perlin periodic noise function promote glm_gtc_random extension linear gaussian various random number generation distribution add glm_gtx_constants provide useful constant add extension versioning remove many unused namespaces fix half base type contructors add glsl core noise function glm add swizzling constructor add miss none square matrix product glm fix half base type old gcc fix warn visual fix miss value swizzle operator glm fix floatbittoxint function fix pack unpack function fix round function glm fix extension bug glm fix issue glm expend matrix constructor flexibility improve quaternion fix many warn across platform compiler glm automatically detect cuda support improve compiler detection fix error warn extension disable fix test glm_gtx_vector_angle fix test glm_gtx_rotate_vector glm add cuda support add ctest test suite add glm_gtx_ulp extension add glm_gtx_noise extension add glm_gtx_matrix_interpolation extension update quaternion slerp interpolation glm fix bug glm fix bug glm fix bug glm fix bug glm update api documentation improve simd fix linux glm add quaternion product operator clarify glm header library glm add simd support add new swizzle function improve static assert error message static_assert new setup system reduce branch fix trunc glm add glsl pack function add operator every type glm many matrix bug fix glm improve clang support fix bug glm add autoexp glm fix bug glm fix non square matrix operator glm add glm_gtx_int_10_10_10_2 fix bug glm fix extension error glm objective support fix warn update documentation glm git transition remove experimental release fix bug glm base glsl specification add new core function add implicit conversion support glm improve possible error message improve declaration definition match glm remove deprecate feature internal redesign glm final fix warn glm final fix half float arithmetic fix setup define glm final fix half float add glm final update documentation fix macos glm final add gcc vc2010 support add matrix optimization glm final fix bug glm final update glm accord glsl spec fix bug glm final fix bug glm final add glm_gtc_quaternion add glm_gtc_type_precision glm final fix old extension system glm final add stable extension add new extension system glm final fix bug glm final fix bug glm final fix bug glm final fix bug glm final fix bug glm final new method extension glm beta3 add cmake support glm test glm beta2 improve half scalar vector support glm beta1 improve glsl conformance add glsl support improve api documentation glm final improve standard comformance add static assert type check glm final add message system visual studio pedantic gcc glm final add external dependency system glm final fix bug add new extension group glm final update documentation add preprocessor option glm final disable half gcc fix extension glm final change mit license add new documentation glm fix swizzle operator glm fix type access fix 3dsmax sdk conflict glm fix extension glm fix namespace error add extension glm add new extension namespace mecanium add automatic compiler detection glm fix swizzle operator glm upgrated glsl add swizzle operator add setup setting glm add opengl glm add miss operator vec mat add first glsl feature fix window glm window require glm fix texcoord component access fix mat4 imat4 division operator glm add gcc support macos add gcc support linux add optimisation glm improve glsl type conversion construction compliance add experimental extension add doxygen documentation add optimisation fix bug glm improve adaptative glsl add experimental extension base opengl extension process fixe bug glm add vec2 vec3 vec4 glsl type add ivec2 ivec3 ivec4 glsl type add bvec2 bvec3 bvec4 glsl type add mat2 mat3 mat4 glsl type add almost function
C C++;https://github.com/symengine/symengine;symengine test symengine standalone fast symbolic manipulation library optional thin wrapper allow usage library language wrapper allow usage basis wrapper wrapper allow easy usage integration repository ruby wrapper repository julia wrapper repository haskell wrapper repository try symengine tutorial interactive session symengine license license mit license see license license information third party package license bsd clause license see license mailinglist chat symengine mailinglist installation conda package manager conda symengine conda forge conan package manager conan symengine source prerequisite debian base system ubuntu etc apt get cmake libgmp dev rpm base system fedora etc yum cmake gmp devel symengine mkdir cmake make make configure symengine default release mode compiler optimization system test ctest development travis check release debug mode possible check send github pull request enough mode want develop however best way develop symengine linux debug mode bfd support cmake dcmake_build_type debug dwith_bfd yes bfd support turn nice like stack trace exception assert error segfaults debug mode automatically turn with_symengine_rcp teuchos rcp full debug time check with_symengine_assert yes segfault debug mode long style convention raw pointer follow easy check visual inspection give pull request release mode default perform manual reference count raw pointer bug could segfault case turn debug mode get nice exception stack trace make with_bfd yes work need binutils dev first otherwise get cmake error configure debian base system ubuntu etc apt get binutils dev rpm base system fedora etc yum binutils devel opensuse additionally need glibc devel cmake option cmake option configure default value indicate cmake dcmake_install_prefix path usr local installation prefix dcmake_build_type string release type debug release dwith_bfd bool bfd library require binutils dev dwith_symengine_assert bool test symengine_assert statement dwith_symengine_rcp bool fast special rcp dwith_symengine_thread_safe bool thread safety dwith_ecm bool gmp ecm library integer factorization dwith_primesieve bool primesieve library dwith_flint bool flint library dwith_arb bool arb library dwith_tcmalloc bool tcmalloc link dwith_openmp bool openmp enable dwith_piranha bool piranha library dwith_mpfr bool mpfr library dwith_mpc bool mpc library dwith_llvm bool llvm library dwith_system_cereal bool cereal header system instead vendored copy dbuild_tests bool test dbuild_benchmarks bool benchmark dbuild_benchmarks_google bool google benchmark benchmark dinteger_class string gmp choose storage type integer gmp gmpxx flint piranha boostmp dbuild_shared_libs bool share library dcmake_install_rpath_use_link_path bool add dependency rpath share lib openmp enable symengine_thread_safe also enable automatically irrespective user input with_symengine_thread_safe cmake print value option end want different compiler clang cxx clang cmake want set additional compilation flag cxxflags cxxflags march native cmake environment variable check first cmake delete directory cmakecache txt environment variable pick subsequent integer_class boostmp would remove dependency gmp boost multiprecision integer rational class would make boost dependency would permissive license namely mit bsd clause boost license piranha with_piranha depend boost default benchmarked seem depend order execute benchmark give executable due internal malloc find order dependence reduce enable with_tcmalloc since also speed benchmark recommend always tcmalloc benchmarking release mode symengine default external library cmake_prefix_path specify prefix external library cmake dcmake_prefix_path header libs include lib respectively cmake_library_path cmake_include_path cmake still find library specify path library cmake dpkg_library path libname pkg replace name external library gmp arb bfd flint mpfr similarly dpkg_include_dir header recommend option package manager package symengine recommend gmp mpfr mpc flint llvm dependency available thread safety cmake dwith_gmp dwith_mpfr dwith_mpc dinteger_class flint dwith_llvm dwith_symengine_thread_safe optimize optimization dependency option also cxxflags march native cmake dwith_tcmalloc dwith_symengine_thread_safe developer documentation please follow style guide doc doxygen style_guide develop design decision document
C C++;https://github.com/lemire/simdjson;ubuntu ubuntu license img license doxygen simdjson parse gigabyte json per second json everywhere internet server spend lot time parse need fresh approach simdjson library commonly available simd instruction microparallel algorithm parse json fast rapidjson 25x fast json modern fast fast commonly production grade json parser record break feature minify json validate utf ndjson easy first class easy carefully document apis strict full json utf validation lossless parse performance compromise automatic select cpu tailor parser runtime configuration need reliable memory allocation error handle simdjson design avoid surprise peer review research appear venue like vldb journal software practice experience library part awesome modern list table content quick start quick start documentation documentation performance performance real world usage real world usage bind port simdjson bind port simdjson simdjson simdjson fund fund contribute simdjson contribute simdjson license license quick start simdjson library easily consumable single cpp prerequisite version good clang version good bite system command line linux macos freebsd also support program environment like visual studio xcode different step need pull simdjson singleheader simdjson simdjson cpp singleheader simdjson cpp directory along sample twitter json jsonexamples twitter json create quickstart cpp quickstart quickstart cpp simdjson cpp quickstart documentation usage documentation available basic doc basic overview simdjson apis performance doc performance show advance scenario tune selection doc selection describe runtime cpu detection work contain automatically generate api documentation performance simdjson library quarter instruction state art parser knowledge simdjson first fully validate json parser gigabyte per commodity processor parse million json document per second single core follow figure represent parse speed parse various intel skylake processor ghz gnu gcc compiler flag compare best fast library benchmark load process simdjson library offer full unicode validation exact number parse simdjson library offer high speed whether process tiny byte large 3mb follow plot present parse speed synthetic various size generate ghz skylake processor gnu gcc experiment ndjson exceed multithreaded parse real world usage microsoft yandex clang shopify plan simdjson product please work release bind port simdjson distinguish bind wrap port another program language reimplements everything swift bind simdjson project high speed bind simdjson bind simdjson project high speed bind simdjson project rust port rust wrapper bind version net core bind full port node bind simdjson project php bind simdjson project ruby bind simdjson project ruby bind simdjson project port golang assembly bind erlang bind lua bind haskell bind simdjson simdjson library take advantage modern microarchitectures parallelize simd vector instruction reduce branch misprediction reduce dependency take advantage cpu multiple execution core people enjoy read description design simdjson research article geoff langdale daniel lemire parse gigabyte json per vldb journal depth focus utf validation john keiser daniel lemire validate utf instruction per software practice experience also informal blog post provide background video incline simdjson qcon san francisco best vote talk kind proud fund work support natural science engineer research council canada grant number rgpin license license license img contribute simdjson head contribute contribute information contribute simdjson hack hack information source architecture design license make available apache license window tool window dirent_portable outside library liberal business friendly mit license compiler support bundle string view library publish boost like apache license boost license permissive license allow commercial redistribution efficient number serialization bundle florian loitsch grisu2 algorithm binary decimal float point number slightly modify json modern library florian loitsch json modern provide mit license runtime dispatch pytorch project license clause bsd
C C++;https://github.com/nCine/nCine;ncine ncine cross platform game engine release mit license copyright angelo theodorou additional information information dependency glew glfw sdl libpng libwebp openal soft libogg libvorbis libvorbisfile lua dear imgui nuklear support platform compiler window msvc mingw w64 msys2 macos clang linux gcc clang android gcc clang emscripten development tool git cmake creator doxygen graphviz valgrind cppcheck clang format google test gcovr tracy frame profiler google benchmark renderdoc graphic debugger development convention cod convention indent tab space space continuation line alignment allman bracket bracket around line conditional statement pad space parenthesis header switch align pointer reference operator variable function name inline keyword always virtual static mark override method override specifier remove virtual access specifier order public protect private half indent access specifier space declaration order typedefs enums member constructor destructors method friend define private section class everything else space pad around operator explicit keyword time make sense name convention pascal case class enumeration typedefs constant camel case variable function parameter upper case enumerator enumeration document convention put doxygen brief description header additional documentation style doxygen detail description end period
C C++;https://github.com/lieff/minimp3;minimp3 minimalistic single header library decode mp3 minimp3 design small fast sse neon support accurate iso conformant find rough benchmark measure perf 6700k include cpu heat address speedstep vector sample sec clockticks clockticks per second psnr max diff compl bite 759m he_32khz bite 560m he_44khz bite 988m he_48khz bite 348m hecommon bite 022m he_free bite 632m he_mode bite 659m bite 326m si_block bite 533m si_huff bite 442m sin1k0db bite 509m conformance test pas vector psnr 96db comparison keyj comparison feature keyj minimp3 current fix point float point source 84kb 70kb binary 34kb 20kb compress 30kb 20kb vector opt sse neon intrinsics free format free format support find benchmark conformance test keyj minimp3 vector sample sec clockticks clockticks per second psnr max diff compl bite 143m he_32khz bite 870m he_44khz bite 886m he_48khz bite 194m hecommon bite 039m he_free bite he_mode bite 203m bite 817m si_block bite 394m si_huff bite 780m sin1k0db bite 355m keyj minimp3 conformance test fail vector psnr 96db free format unsupported cause problem main motivation work usage first need initialize decoder structure note must define minimp3_implementation exactly source include minimp3 many like also minimp3_only_mp3 define strip mp1 mp2 decode minimp3_only_simd define control generic non sse neon generation always enable x64 arm64 target case want platform specific simd optimization define minimp3_no_simd minimp3_nonstandard_but_logical define save byte enforce non standard logical behaviour mono stereo transition rare case minimp3_float_output make mp3dec_decode_frame output float instead short additional function mp3dec_f32_to_s16 available float short conversion need decode input stream frame frame mp3dec_decode_frame function decode full mp3 frame input buff must large enough hold full frame decoder analyze input buff properly sync mp3 stream skip id3 well valid short buff may cause false sync produce squeal artefact big size input buff reliable sync procedure recommend many consecutive mp3 frame 16kb input buff time end stream pas rest buff sync procedure work even frame stream except free format garbage end mess thing id3v1 ape tag must remove first free format minimum frame need proper sync frame detect frame length next frame check detect good size consume mp3 return mp3dec_frame_info_t field frame_bytes struct must remove correspond frame_bytes field input buff next decoder invocation decode function return number decode sample follow case possible mp3 find input buff layer mpeg layer otherwise follow description possible combination number sample frame_bytes field value sample frame_bytes succesful decode sample frame_bytes decoder skip id3 invalid sample frame_bytes insufficient frame_bytes field may uninitialized unchanged frame_bytes field available application may call mp3dec_init change decode position necessary special case decoder support already split mp3 stream mp4 demux case input buff must contain _exactly one_ non free format frame seek seek byte stream call mp3dec_decode_frame work almost case completely guarantee probablility sync procedure failure low max_frame_sync_matches value grow default max_frame_sync_matches probablility sync failure low granule accidentally detect valid mp3 header short audio artefacting possible high level mp3dec_ex_seek function support precise seek sample mp3d_seek_to_sample index binary search track length detect know cbr frame equal size lack id3 tag allow decode first frame calculate frame position frame_bytes however pad frame differ size even case general case whole stream scan need calculate length scan omit vbr tag present add encoders like lame ffmpeg contain length info high level function automatically vbr tag present high level api need decode buff precise seek optional high level api include minimp3_ex instead follow additional function minimp3_no_stdio define exclude stdio function minimp3_allow_mono_stereo_transition allow mix mono stereo case mp3dec_frame_info_t channel report correct channel number pas progress_cb callback frame mp3dec_frame_info_t structure mp3d_progress_cb optional null decode decode seek capability bind bind rust no_std bind allocate rust bind nodejs bind bind wasm bind delphi bind low level rust bind minimp3_ex interest link
C C++;https://github.com/vincenthz/libjson;libjson simple efficient json parser printer introduction libjson simple library without dependancies parse pretty print json format rfc json format concise structure format feature interruptible parser append state want object integrate small codebase handcoded parser efficient factorisation make small perfect embed fast efficient small parse table maximum efficiency full json support utf8 validation input number conversion user convert way want secure optional limit nest level size optional comment yaml style style optional user define allocation function libjson parser interruptible handcoded state parse parser take character string input since interruptible user fee stream parser permit complete flexibility whether come pipe socket disk serial line craft user parser create object tree time come element callback user type find type associate compare sax way xml hence call saj simple api json parser convert number native format instead callback string valid json number json number size user decide whetever number map native type int32 int64 complex integer type well user choice refuse integer callback stage length appropriate parser optionally allow yaml comment ignore config structure set accordingly otherwise json _error _comment _not _allowed return embed system primary case piece provide json capability program library without add extra dependency add project directly integrate without fuss system available library way test everything library conform specification feature necessarily intend way portable dynamic library dll work simple case linux bsds though others window obscure unix much simple integrate library program library directly simple fix platform accept though contribute open pull request new feature simple fix documentation fix please conform cod style spirit library policy impose library parser api parser api really simple total api call json _parser _init json _parser _char json _parser _string json _parser _is _done json _parser _free json _parser _init initialize new parser context parser config take callback userdata callback function everything parser need communicate type value client side library json _parser _char take character inject parser parse success return value parse error return parse error represent type error encounter see json _error full set return value json _parser _string similar json _parser _char except take string length also return number character process useful parser error happen stream pinpoint json _parser _is _done permit test whetever parser terminate state involve beeing structure json _parser _free opposite init free allocate structure printer api printer api simple json _printer _init json _printer _free json _printer _pretty json _printer _raw json _printer _init initialise print context take callback userdata call every character printer want output caller printer callback redirect anything want json _printer _free opposite init json _printer _raw take json type optional length value depend type caller verify order type json compliant otherwise generate document able parse json _printer _pretty work like json _printer _raw targetted human read append newlines space jsonlint utility program jsonlint utility provide library verify reformat json stream also useful library
C C++;https://github.com/Celtoys/clReflect;clreflect reflection clang installation instruction executables bin directory directly require msvc x86 quick tour date test clreflect library show database load runtime primitive reflect default need mark clcpp_reflect reflection spec reflect attribute detail find first clscan parse output readable database type information database merge module clmerge finally clexport convert text database binary memory map database quickly load give runtime loadable database limitation function parameter return type reflect call address unison get type runtime instead efficient make sure pay attention report warn inspect output log suspect problem reflect function address platform support parse output compiler map match function address reflect equivalent database modify clexport call achieve constant time stringless type operator constant time stringless gettype gettypenamehash function need ask clmerge generate compile link generate rest load database call generate initialisation function perform time setup feature clreflect available match compiler setting clscan forward compiler option underlie clang compiler add end clscan command line pas option want advise command line option generate database window msvc compatible
C C++;https://github.com/juniandotnet/cpp-awesome-pack;awesome sample pack
C C++;https://github.com/cpputest/cpputest;cpputest coverage conancenter cpputest unit test mock framework information project slack channel join link get start need follow get start source unix base cygwin macosx git clone git github com cpputest cpputest git cpputest_build autoreconf configure make make want cpputest system wide also cmake also work window visual studio late version cmake cmakelists txt make get start need follow add include path makefile something like cppflags cpputest_home include add memory leak macro makefile need additional debug info something like cxxflags include cpputest_home include cpputest memoryleakdetectornewmacros cflags include cpputest_home include cpputest memoryleakdetectormallocmacros add library link makefile something like ld_libraries cpputest_home lib lcpputest lcpputestext write first test command line switch help show late help include parameter implement update readme page verbose print test name repeat test number time default default specify handy experience memory leak relate static cache random shuffle test execution order integer seed random number generator optional omit seed value choose automatically different order every time seed value print console make possible reproduce previously generate execution order handy detect problem relate dependency test group test whose group contain substring group name test whose name contain substring name crash fail test normal test fail crash rather report failure normal way test macro test group name define test ignore_test group name turn execution test test_group group declare test group certain test belong also create link need another library test_group_base group base test_group different base class utest test_setup declare void setup method test_group declare void setup test_teardown declare void setup method test_group import_test_group group export name test group link library need main set tear support test_group may contain setup teardown method setup call prior test body teardown call test body assertion macro failure macro cause current test immediately exit check boolean condition check boolean check_true boolean condition check true check_false boolean condition check false check_equal expect actual check equality entity class support operator macro compare instance strcmp_equal expect actual check const char string equality strcmp longs_equal expect actual compare number bytes_equal expect actual compare number bit wide pointers_equal expect actual compare const void doubles_equal expect actual tolerance compare double within tolerance enums_equal_int except actual compare enums underlie type int enums_equal_type underlying_type except actual compare enums underlie type fail text always fail test_exit exit test without failure useful contract test implement assert fake customize check_equal work type support operator create function simplestring stringfrom const yourtype extension directory default check testplugin cpputest support extra check functionality insert testplugins testplugin derive testplugin class insert testregistry via installplugin method testplugins system stability resource handle like memory connection clean cpputest memory leak detection via default enable testplugin main testplugin memory leak detection platform specific memory leak detection mechanism provide test fail allocate memory prior fail memory clean teardown memory leak report best chase memory leak error eliminate lazy initialization appear leak really gcc stringstream early release standard library call allocate something free main never find memory leak due lazy initialization set switch test twice signature situation first show leak second show leak show leak leak find memory leak detection implement setup memory usage checkpoint record teardown another checkpoint take compare original checkpoint visual studio debug heap capability gcc simple new delete count override operator new new delete delete leaky fix tell test ignore certain number leak main test script helpful create initial cpp test see script readme txt conan cpputest available conan center conan center conanfile txt cmake integration external cmake project sometimes want cpputest project without instal system control version little snippet get want version github library like conan center
C C++;https://github.com/kerukuro/digestpp;digestpp experimental header message digest library derive cppcrypto attempt devise modern yet flexible universal api cryptographic hash function test clang visual calculate blake2b digest double quote string output hex format calculate blake2b digest std string output hex format calculate sha digest vector output hex format calculate sha digest array output hex format calculate sha digest output hex format generate sha3 digest multiple call absorb output binary digest vector output binary digest raw array output binary digest stream generate long output shake extendable output function multiple call squeeze generate byte digest customizable cshake algorithm print hex format hasher class hasher main class template implement public api hash template parameter hashprovider class implement algorithm via traditional init update final interface provide hash function list next section traditional interface allow anyone trivially implement provider wrapper popular library openssl crypto botan mixin class template inject additional function public api hasher set customization string cshake salt blake etc individual hash algorithm define typedefs support algorithm hash function typedef description support output size optional parameter blake original blake algorithm salt blake2b blake2b salt personalization key blake2s blake2s salt personalization key blake2xb blake2xb arbitrary salt personalization key blake2xs blake2xs arbitrary salt personalization key groestl grstl kmac128 kmac128 arbitrary key customization kmac256 kmac256 arbitrary key customization kupyna kupyna md5 md5 sha1 sha sha224 sha sha256 sha sha384 sha sha512 sha sha3 sha skein256 skein256 arbitrary personalization key nonce skein512 skein512 arbitrary personalization key nonce skein1024 skein1024 arbitrary personalization key nonce sm3 sm3 streebog streebog whirlpool whirlpool extendable output function typedef description optional parameter blake2xb_xof blake2xb xof mode salt personalization key blake2xs_xof blake2xs xof mode salt personalization key k12 kangarootwelve customization m14 marsupilamifourteen customization shake128 shake shake256 shake cshake128 cshake function name customization cshake256 cshake function name customization kmac128_xof kmac128 xof mode key customization kmac256_xof kmac256 xof mode key customization skein256_xof skein256 xof mode personalization key nonce skein512_xof skein512 xof mode personalization key nonce skein1024_xof skein1024 xof mode personalization key nonce design rationale question answer difference hash function variable output size extendable output function xof hash function require digest size know moment initialization normally produce unrelated output different digest size blake2b blake2b produce completely different digest xofs function need know output size advance produce output unrestricted size byte generate xofs depend input digest size generally recommend hash function instead xofs output size know advance difference digest squeeze digest hash function retrieve digest certain length define algorithm specify constructor call digest hexdigest change internal state function call produce output squeeze xof function call multiple time squeeze arbitrary number output byte invocation squeeze internal state change next call squeeze generate different additional output byte hash function variable output size output size template parameter sha3 may seem cool make output size template parameter usage scenario require digest size know compile time simple argon2 password hash algorithm require hash state blake2b dynamically calculate digest size large digest size truncate hash function unlike xofs produce completely different digest depend request output size template parameter digest size would encumber algorithm additionally hash function support arbitrary output size limit security level function skein blake2x parallelhash function specifically design usable hash xof mode require output size know advance even runtime take factor consideration specify output size compile time seem like good design hasher support hash non byte type cryptographic hash function always define sequence byte support type unambiguosly convert byte sequence char sign char unsigned char type convert sequence byte non ambiguous way hash wide string could encode utf another encode beyond scope library since output size provide constructor separate typedefs sha256 sha512 instead hasher output size parameter sha2 sha2 sha family hash function special sha produce output size bit sha sha512 calculate sha hash different sha length thus sha independent hash function support variable output size hand bite version sha define bite bite output widely know sha sha decide different typedefs sha sha require user sha256 get sha digest would confuse internally sha function implement template class separate typedefs skein256 skein512 skein1024 instead hasher output size parameter skein skein skein skein256 skein512 skein1024 different algorithm produce digest size output unrelated skein256 skein512 skein1024 internally skein variant implement template class many typedefs blake2 hash function blake2 many variant produce incompatible digest output size support different variant via different typedef bite version blake2b old algorithm produce digest size bit blake2xb produce large digest require output size know advance merge blake2b output different digest size blake2xb_xof xof mode output size know advance bite version blake2s support variant well internally blake2 variant implement template class know limitation include provider write standard may slow simd optimize complete byte support input output big endian system support attempt make make every algorithm constant time reference documentation reference documentation
C C++;https://github.com/google/tink;tink multi language cross platform library provide cryptographic apis secure easy correctly hard misuse ubuntu macos kokoro ubuntu ubuntu_badge kokoro macos macos_badge ubuntu_badge macos_badge index introduction introduction current status current status get start get start contact mail list contact mail list maintainer maintainer introduction crypto application devs_are_users_too_slides feel like juggle chainsaw dark tink crypto library write group cryptographer security engineer google bear extensive experience work google product team fix weakness provide simple apis safely without need crypto background tink provide secure apis easy correctly hard misuse reduce common crypto pitfall user center design careful review extensive test google tink standard crypto library deploy product system get quick overview tink design please take look slide tink_talk_slides talk tink tink_talk_recording present real world crypto devs_are_users_too_slides tink_talk_slides doc tink a_cryptographic_library realworldcrypto2019 pdf tink_talk_recording current status java android doc java howto doc cpp howto doc objc howto doc golang howto doc howto field test ready production late version release javascript typescript alpha state test get start documentation project locate currently detail variety common usage scenario cover java site populate content time alternatively look demonstrate perform simple task tink variety language golang java android objective java doc java howto doc cpp howto doc objc howto doc golang howto doc howto security usability design goal doc security usability support crypto primitive doc primitive key management doc key management manage key tinkey doc tinkey know issue doc know issue community drive port box tink support wide range language still support every language fortunately user like tink much port favorite language find notable port warn usually review port notice maintain plan support foreseeable future contact mail list want contribute please read contribute doc contribute send pull request also report bug feature request would like talk developer get notify major product update may want subscribe mail maintainer tink maintain moreno ambrosin taymon beal daniel bleichenbacher william conner thai duong thomas holenstein stefan kolbl charles lee cindy lin fernando lobato meeser atul luykx rafael misoczki sophie schmieg laurent simon elizaveta tretiakova jurg wullschleger alumnus haris andrianakis tanuj dhir quan nguyen bartosz przydatek enzo puig veronika slivova paula vidas
C C++;https://github.com/h2o/h2o;h2o optimize http server support http http http experimental fuzzing copyright dena kazuho tatsuhiko domingo alvarez nick marc masahiro jeff marrison daisuke laurentiu justin tatsuhiro ryosuke masaki masayoshi chul woong shota satoh fastly david frederik jonathan yannick harrison kazantsev h2o new generation http server fast also provide much quick response end user compare old generation http server write license mit also library information please refer documentation report security issue please report vulnerability h2o vuln googlegroups com see security security information
C C++;https://github.com/openssl/openssl;welcome openssl project openssl logo www openssl org github action badge github action appveyor badge appveyor job openssl robust commercial grade full feature open source toolkit transport layer security protocol formerly know secure socket layer ssl protocol protocol base full strength general purpose cryptographic library also stand alone openssl descend ssleay library develop eric young tim hudson official home page openssl project www openssl org table content overview overview documentation documentation license license support support contribute contribute legality legality overview openssl toolkit include libssl protocol version tlsv1 rfc libcrypto full strength general purpose cryptographic library constitute basis also independently openssl openssl command line tool swiss army knife cryptographic task test analyze creation key parameter creation certificate csrs crls calculation message digest encryption decryption ssl client server test handle mime sign encrypt mail production source tarballs official release openssl project distribute toolkit binary form however large variety operate system precompiled version openssl toolkit available particular linux unix operate system normally recommend link precompiled share library provide distributor vendor test development although test development could theory also source tarballs local copy git repository entire project history give much insight base official openssl git repository locate git openssl org github mirror repository github com openssl openssl update automatically former every commit local copy git repository obtain clone original openssl repository git clone git git openssl org openssl git github mirror git clone intend contribute openssl either fix bug contribute new feature need fork openssl repository openssl openssl github clone public fork instead git clone necessary development openssl nowadays via github pull request detail see contribute contribute obtain source look detail instruction instal openssl platform installation instruction amend platform specific document note unix like platform note unix note android platform note android note window platform note window note platform djgpp note djgpp note openvms platform note vms note perl note perl note valgrind note valgrind specific note upgrade openssl previous version find migration_guide 7ossl manual page documentation manual page manual page master branch current stable release available online openssl openssl openssl wiki wiki wiki openssl org currently active contain lot useful information date license openssl license apache license mean free get commercial non commercial purpose long fulfill condition see license txt license txt detail support various way get touch correct channel depend requirement see support support detail contribute interest contribute openssl project please take look contribute contribute legality number nation restrict export cryptography potentially subject restriction seek legal advice attempt develop distribute cryptographic copyright copyright openssl project copyright eric young tim hudson right reserve www openssl org openssl homepage git openssl org openssl git repository git openssl org openssl git repository github com openssl openssl openssl github mirror wiki openssl org openssl wiki migration_guide 7ossl openssl migration guide rfc openssl logo doc image openssl svg openssl logo github action badge github action status github action github action appveyor badge appveyor status appveyor job appveyor job
C C++;https://github.com/cesanta/mongoose;mongoose embed web server embed library license status fuzzing mongoose library implement event drive non block apis tcp udp http websocket mqtt design connect device bring online market since vast number open source commercial product even international space station mongoose make embed program fast robust easy feature include cross platform work linux unix macos window android freertos etc support embed architecture esp32 nrf52 stm32 nxp protocol plain tcp udp http mqtt websocket ssl support mbedtls openssl custom via api asynchronous dns resolver tiny static time footprint source iso iso compliant work stack socket api like lwip freertos plus tcp easy integrate copy mongoose mongoose tree detail commercial mongoose business fortune500 giant like siemens schneider electric broadcom bosch google samsung qualcomm caterpillar small business solve wide range business need like implement web interface device restful api service telemetry exchange remote control product remote software update remote monitor others deploy million device production environment worldwide see case respect customer like schneider industrial automation semiconductor industrial automation others see engineer integrate mongoose commercial product provide evaluation commercial consultancy integration assistance hesitate contact security take security seriously mongoose repository continuous integration test power unit test every commit repository unit modern address sanitizer technology help find security vulnerability early mongoose repository integrate google fuzz continuous scan potential vulnerability continuously receive periodic vulnerability report independent security group like cisco microsoft security response mitre compass others case vulnerability find act accord industry best practice hold publication fix software notify customer appropriate subscription customer nasa specific security requirement independent security audit get notify case issue act similar supplement software software often together mongoose json parser emitter json rpc engine implement restful apis json implement exchange mqtt websocket json encapsulation tiny javascript engine implement script support contribution contribution welcome please follow guideline sign cesanta send github pull request make sure commit deal issue
C C++;https://github.com/bloomen/transwarp;transwarp transwarp header library task concurrency allow easily create graph task every task execute asynchronously transwarp write depend standard library copy src transwarp project test gcc clang icc visual studio support enable define transwarp_cpp11 compile time important tag release transwarp production table content api doc api doc create task create task schedule task schedule task executor executor range function range function cancel task cancel task event system event system task pool task pool time task time task optimize efficiency optimize efficiency feedback feedback contributor contributor create task connect form level graph task schedule twice computation thread graph look like every bubble represent task every arrow edge task first line within bubble task name second line denote task type follow task task level graph api doc brief api doc transwarp detail check follow namespace alias transwarp create task transwarp support different task type task type pas first parameter make_task create consume task simply functor denote callable parent1 parent task functor pas make_task need fulfill certain requirement base task type give parent _root_ task root top graph task get execute first functor root task parameter since task parent task another way define root task _value task_ create value task require schedule always return value exception _accept_ task require least parent _accepts_ parent future without unwrap hence child decide proceed since call get potentially throw exception _accept_any_ task require least parent functor take exactly future namely future parent first finish parent abandon cancel note cancel work already task functor sub class transwarp functor _consume_ task follow rule accept difference parent future unwrap get call pas child hence consume child task child task invoke parent throw exception _consume_any_ task follow rule accept_any difference parent future unwrap get call _wait_ task functor take parameter task must least parent simply wait completion parent unwrap future call child functor _wait_any_ task work similar wait task call functor soon first parent complete abandon cancel remain parent task generally task create make_task allow number parent however common case child parent next directly call parent object create _continuation_ child single parent task whose functor consume integer schedule task task create schedule nothing else specify task current thread however parallel executor task push thread pool execute asynchronously regardless schedule task retrieve chain multiple task together direct acyclic graph every task schedule individually though many scenario useful compute task right order single call also schedule executor instance task parallel depend executor see pas executor schedule schedule_all additionally assign task directly task specific executor always prefer executor schedule task transwarp define executor interface implement perform custom behavior schedule task interface look like functor denote function task task functor belong range function convenience function apply iterator range for_each transform similar standard library counterpart except return task defer possibly asynchronous execution cancel task task cancel call task cancel true default affect task currently yet however create functor inherit transwarp functor terminate task transwarp functor look like place call transwarp_cancel_point strategic place functor denote well define point functor exit associate task cancel task also cancel throw transwarp task_canceled directly mention task explicitly cancel client request addition task consider abandon accept_any consume_any wait_any operation also cancel order terminate soon computation become superfluous event system transwarp provide event system allow subscribe specific event task start finish event task event enumerate event_type enum listener create sub class listener interface listener pas add_listener function task add new listener remove_listener function remove exist listener task pool task pool useful want graph parallel purpose transwarp provide task_pool manage pool task request idle task parallel graph execution time task order identify bottleneck often useful know much time spend task transwarp provide timer listener automatically time task listen optimize efficiency compile time switch default transwarp provide full functionality client however many case actually require transwarp provide compile time switch reduce task size switch get minimal task size single switch define time release unused memory default every task graph keep reschedule manual task reset releaser listener allow automatically release task task child consume releaser also accept executor give control _where_ task release feedback get touch question suggestion make good library post submit pull request create github issue simply email contributor serious contribute transwarp would awesome please submit pull request keep mind unit test add new extend exist unit test suite space throughout contributor
C C++;https://github.com/VerbalExpressions/CppVerbalExpressions;cppverbalexpressions regular expression make easy verbalexpressions header library help construct difficult regular expression lib base original javascript library see date list port get start case compliant standard library still boost regex couple simple give idea verbalexpressions work test valid url replace string shorthand string replace find api documentation verbal expression basic usage basic usage verbal expression start expression verex chain method afterwards describe term section api term anything anything_but const std string value something something_but const std string value end_of_line find const std string value maybe const std string value start_of_line const std string value special character group const std string value any_of const std string value linebreak range const std vector args range const std std string const std string tab word modifier with_any_case search_one_line search_global function replace const std string source const std string value test add expression multiple const std string value alt
C C++;https://github.com/MattPD/cpplinks;link categorize list resource category analysis program analysis dynamic analysis analysis dynamic instrumentation translation sanitizers static analysis analysis static static analysis static checker compiler verification assembly arm assembly arm arm aarch64 risc assembly riscv x86 assembly x86 atomics lock free memory atomics lockfree memory_model system performance optimization community community compiler compiler correctness compiler correctness computer architecture comparch fpga comparch fpga gpu comparch gpu microarchitecture channel comparch micro channel microarchitectural channel debug debug read debug read article documentation software debug software gdb debug gdb lldb debug lldb debug windbg debug windbg stack trace unwind debug stack trace unwind talk debug talk debug error handle error_handling executables executables executable object format dll executables dll elf executables elf mach executables mach executables debug format dwarf executables dwarf pdb executables pdb program database link load executables linking_loading linkers loader library interoperability ffi interoperability ffi foreign function interface ffis portability interoperability portability general library interoperability portability general abi interoperability portability abi name mangle interoperability portability name mangle teach learning_teaching performance tool performance tool standard standardization std test test part community happen across interest link attempt categorize thank saurabh malpani enthusiast suggestion ongoing work progress effort comment feedback suggestion welcome hopefully find interest
C C++;https://github.com/dmlc/minerva;minerva fast flexible system deep late news clear quite lot minerva dependency make easy basically almost need please see wiki information minerva tutorial api document release minerva migrate could find many awesome machine repository minerva evolve cudnn_v2 please new minerva support late version caffe configuration protobuf format old version error may occur please upgrade configure overview minerva fast flexible tool deep provide ndarray program interface like numpy bind bind available cpu gpu multi gpu support easy please refer see multi gpu set minerva fast flexible tool deep provide ndarray program interface like numpy bind bind available cpu gpu multi gpu support easy please refer see multi gpu set quick try instal minerva owl package bind try run_owl_shell minerva root directory enter 10x5 array fill value minerva support many numpy style ndarray operation please see api information feature array program interface easy integration numpy api automatically parallel execution execute concurrently achieve see feature highlight flow lazy multi gpu multi cpu support execute card simultaneously achieve see feature highlight multi gpu tutorial document tutorial high level concept could find wiki step step walk mnist could find also tool directly read caffe configure see api document could find performance keep update late performance could achieve section speed speed image second alexnet vggnet googlenet card card card performance measure machine gtx titan card card load minibatch size alexnet vggnet googlenet respectively therefore total minibatch size increase number card grow alexnet card minibatch size end end also provide end end cod owl package could load caffe perform note minerva tool caffe focus part logic fact implement play minerva powerful flexible program interface could implement caffe like trainer around line cod error time compare caffe note minerva could finish googlenet day gpu card error test error rate several minerva scratch show correctness follow table show error rate different different test setting test error rate alexnet vggnet googlenet single view top multi view top single view top multi view top alexnet except multi group convolution googlenet vggnet scratch transform minerva format test find follow link try machine script next plan get rid boost library dependency cython large scale minerva easy support user define new operation license support minerva provide apache open source license issue tab github report bug non bug issue please send email minerva support googlegroups com subscribe discussion group wiki information contribute minerva please visit wiki page
C C++;https://github.com/Dead2/zlib-ng;zlib zlib compression library next generation system maintain han kristian rosbach aka dead2 zlib circlestorm dot org status github action master branch master branch master branch buildkite fuzz fuzzing feature zlib compatible api support dual link modernize native api base zlib api ease port modern c99 syntax clean layout deflate medium quick algorithm base intels zlib fork support cpu intrinsics available adler32 ssse3 avx2 neon vsx crc32 pclmulqdq acle hash table crc32 intrinsics x86 arm slide hash sse2 avx2 neon vsx compare256 sse4 avx2 inflate chunk copy sse2 avx2 neon support hardware accelerate deflate ibm dfltcc unaligned memory read write large bite buff improvement include improvement cloudflare intel fork configure cmake nmake system support comprehensive set cmake unit test sanitizers fuzzing coverage github action continuous integration window macos linux emulate arm aarch64 ppc ppc64 sparc64 s390x qemu history motivation fork come see several 3rd party contribution contain new optimization get implement official zlib repository mark adler maintain zlib long time great job hopefully continue long time yet idea zlib replace zlib exist drop replacement low threshold change zlib long history incredibly portable even support lot system predate internet great complicate development maintainability zlib numerous workarounds old compiler understand ansi accommodate system limitation operate bite environment many workarounds maintenance burden pretty huge wise printf workaround whop different cater various old compiler many workarounds clutter throughout new programmer idea interest zlib need take time figure seemingly strange thing work within confine decide make fork merge intel optimization merge cloudflare optimization conflict plus couple small patch start clean workarounds various dead contrib little point fork various reason lot improvement zlib since start numerous people company contribute small big improvement valuable test please read license simple liberal way zlib cmake zlib cross platform makefile generator cmake alternatively cmake configuration gui tool ccmake configure zlib bash configure script option cmake configure description default zlib_compat zlib compat compile zlib compatible api zlib_enable_tests test binary with_gzfileop without gzfileops compile support gzfile relate function with_optim without optimization optimisation with_new_strategies without new strategy new strategy with_native_instructions native compile full instruction set support host gcc clang march native with_sanitizer sanitizer sanitizer memory address undefined with_fuzzers fuzzers test fuzz with_maintainer_warnings project maintainer warn with_code_coverage enable coverage report warn recommend manually instal unless really know potentially override system default zlib library incompatibility wrong configuration zlib make whole system unusable require recovery reinstall still want manual recommend opt path prefix linux distros alternative way zlib compile zlib compat mode instead zlib _ld_preload_ environment variable program dynamically link zlib zlib temporarily instead program without risk system wide instability cmake zlib system wide cmake configure zlib system wide configure script contribute zlib aim open contribution would delight receive pull request github remember submit must must zlib license help test review pull request etc also much appreciate interest contribute please consider join irc channel zlib freenode irc acknowledgment thank servebolt com sponsor maintainership zlib thank people company take time contribute review test patch zlib would nearly good without deflate format zlib define phil katz deflate zlib specification write peter deutsch zlib originally create jean loup gailly compression mark adler decompression advance option cmake configure description default zlib_dual_link dual link test system zlib unaligned_ok allow unaligned read x86 arm force sse2 skip runtime check sse2 instruction always x86_64 x86 with_avx2 avx2 intrinsics with_sse2 sse2 intrinsics with_sse4 sse4 intrinsics with_pclmulqdq pclmulqdq intrinsics with_acle without acle acle intrinsics with_neon without neon neon intrinsics with_power8 power8 optimisation with_dfltcc_deflate dfltcc deflate dfltcc intrinsics compression ibm with_dfltcc_inflate dfltcc inflate dfltcc intrinsics decompression ibm with_unaligned allow optimization unaligned read safe current arch with_inflate_strict strict inflate distance check with_inflate_allow_invalid_dist fill inflate invalid distance install_utils copy minigzip minideflate relate project fork popular minigzip tool benchmark minigzip minideflate tool benchmark pigz 3rd party patch zlib compatibility
C C++;https://github.com/attractivechaos/klib;klib generic library overview klib standalone lightweight library distribute mit x11 license component independent external library except standard library independent component library need copy couple source tree without worry library dependency klib strive efficiency small memory footprint component khash kbtree ksort kvec among efficient similar algorithm structure program language term speed memory new documentation available include information readme common component khash khash generic hash table open address kbtree kbtree generic search tree base tree kavl kavl generic intrusive avl tree wiki avl ksort ksort generic sort include introsort merge sort heap sort comb sort knuth shuffle small algorithm kseq kseq generic stream buff fasta fastq format parser kvec generic dynamic array klist generic single link list memory pool kstring basic string library kmath numerical routine include mt19937 pseudorandom generator basic nonlinear program special math function ketopt ketopt portable command line argument parser getopt _long like api component specific case ksa construct suffix array string multiple sentinel base revise sais algorithm knetfile random access remote http ftp kopen smart stream open khmm basic hmm library ksw strip smith waterman algorithm knhx newick tree format parser methodology generic container klib extensively macro structure usually need instantiate method expand long macro make source look unusual even ugly add difficulty debug unfortunately efficient generic program lack template macro solution macro write generic container instantiate compete type specific container efficiency generic library glib void type implement container usually slow memory klib see benchmark effectively klib important understand achieve generic program hash table library include khash khash_map_init_int m32 char instantiate structs method int main int ret is_missing khint_t khash_t m32 kh_init m32 allocate hash table kh_put m32 ret insert key hash table ret kh_del m32 kh_value set value kh_get m32 query hash table is_missing kh_end test key present kh_get m32 kh_del m32 remove key value pair kh_begin kh_end traverse kh_exist test bucket contain kh_value kh_destroy m32 deallocate hash table return second line instantiate hash table unsigned key type char value type m32 name type hash table type function associate name macro explain late macro kh_init initiate hash table kh_destroy free kh_put insert key return iterator position hash table kh_get kh_del get key delete element respectively macro kh_exist test iterator position fill immediate question piece look like valid program lack semicolon assignment _apparent_ function call _apparent_ undefined m32 variable understand correct let bite source khash whose skeleton look like define khash_init name scope key_t val_t is_map _hashf _hasheq typedef struct int n_buckets size n_occupied upper_bound unsigned flag key_t key val_t vals kh_ name scope inline kh_ name init_ name return kh_ name calloc sizeof kh_ name scope inline int get_ name kh_ name key_t scope inline void destroy_ name kh_ name free key free flag free vals free define _int_hf key unsigned key define _int_heq define khash_t name kh_ name define kh_value vals define kh_begin define kh_end n_buckets define kh_init name init_ name define kh_get name get_ name define kh_destroy name destroy_ name define khash_map_init_int name val_t khash_init name static unsigned val_t is_map _int_hf _int_heq khash_init huge macro define structs method macro call inside insert preprocess place call macro call multiple time multiple copy insert avoid name conflict hash table different key value type library token concatenation preprocessor feature whereby substitute part symbol base parameter macro end preprocessor generate follow fee compiler macro kh_exist little complex expand simplicity typedef struct int n_buckets size n_occupied upper_bound unsigned flag unsigned key char vals kh_m32_t static inline kh_m32_t init_m32 return kh_m32_t calloc sizeof kh_m32_t static inline int get_m32 kh_m32_t unsigned static inline void destroy_m32 kh_m32_t free key free flag free vals free int main int ret is_missing khint_t kh_m32_t init_m32 put_m32 ret ret del_m32 vals get_m32 is_missing n_buckets get_m32 del_m32 n_buckets kh_exist vals destroy_m32 return program know see macro preprocessor play key role klib klib fast partly compiler know key value type compile time able optimize level type specific generic library write void get performance boost massively insert upon instantiation may remind slow compile speed huge binary size stl boost klib much good respect due small size component independency insert several line make compile obviously slow resource library documentation present available header find test directory obsolete documentation hash table library find sourceforge readme partly adapt old documentation blog post describe hash table library blog post void generic program may inefficient blog post generic stream buff blog post evaluate performance kvec blog post argue tree may good structure binary search tree blog post evaluate performance khash kbtree among many old version benchmark also available blog post benchmarking internal sort algorithm blog post small algorithm blog post hooke jeeve algorithm nonlinear program wiki avl kbtree khash kseq ksort kavl ketopt
C C++;https://github.com/Stiffstream/restinio;restinio restinio header library give embed http websocket server base standalone version asio target primarily asynchronous process http request since boost asio high also support see note basic restinio consider task write application must support rest api restinio represent solution task currently stable beta state let see feel like simple case server main thread respond request hello world message course get access structure give http request apply complex logic handle request feature async request handle get response immediately store request handle somewhere pas another execution context get back ready http pipelining work well async request handle might increase server throughput dramatically timeout control restinio take care bad connection like send get stick response builder need chunk encode body restinio special response builder obviously builder expressjs like request rout see experimental typesafe request router allow avoid problem expressjs like router help static check compiler possibility chain several request handler somewhat similar expressjs middleware work query string parameter several ready helper work http header support http header relate upload support send part sendfile linux unix transmitfile window support compression deflate gzip support http basic websocket support simply restinio websocket basic upgrade request handle start websocket session correspond connection external asio io_context restinio separate execution context tune option set acceptor socket option restinio pool thread connection accept parallel enhance express router license restinio distribute bsd clause license full documentation restinio find issue bug issue tracker discussion section discussion group
C C++;https://github.com/eduardsui/tlse;tlse single without weak cipher libtomcrypt crypto library also support dtls tlse may want compile tomcrypt alternatively may libtomcrypt see compile work alternative efficient rsa sign curve25519 allow compilation alternatively without tomcrypt device memory size issue note implement rtt client side support experimental like project may donate bitcoin project 14lqvmzffaj82c7wy5iavvtf9hpelywsax compile simple client gcc tlshello tlshello ltomcrypt ltommath dltm_desc debug connection debug flag must set ddebug simple server gcc tlsserverhello tlsserverhello ltomcrypt ltommath dltm_desc entire library single include source library may also libtomcrypt amalgamation case client may compile gcc tlshello tlshello dtls_amalgamation server gcc tlsserverhello tlsserverhello dtls_amalgamation tlse optional safe include tlse alternatively may include tlse add tlse makefile useful link thread safety need need call tls_init let thread object multiple thread without mutex tlse libtomcrypt thread safe also may want define ltc_pthread libtomcrypt tlse support ktls linux kernel high ktls linux kernel tls_rx define ktls send may send sendfile send may recv also negotiation must handle tlse ktls support need define with_ktls compile dwith_ktls note clear header include linux structure may need check structure constant usage include tlse everything single feature main feature ability serialize context via tls_export_context import via tls_import_context another pre fork worker process socket descriptor may send via sendmsg support tls_legacy_support define default rsa ecdsa dhe ecdhe cipher tls_dhe_rsa_with_aes_128_cbc_sha tls_dhe_rsa_with_aes_256_cbc_sha tls_dhe_rsa_with_aes_128_cbc_sha256 tls_dhe_rsa_with_aes_256_cbc_sha256 tls_dhe_rsa_with_aes_128_gcm_sha256 tls_dhe_rsa_with_aes_256_gcm_sha384 tls_ecdhe_rsa_with_aes_128_cbc_sha tls_ecdhe_rsa_with_aes_256_cbc_sha tls_ecdhe_rsa_with_aes_128_cbc_sha256 tls_ecdhe_rsa_with_aes_128_gcm_sha256 tls_ecdhe_rsa_with_aes_256_gcm_sha384 tls_ecdhe_ecdsa_with_aes_128_cbc_sha tls_ecdhe_ecdsa_with_aes_256_cbc_sha tls_ecdhe_ecdsa_with_aes_128_cbc_sha256 tls_ecdhe_ecdsa_with_aes_256_cbc_sha384 tls_ecdhe_ecdsa_with_aes_128_gcm_sha256 tls_ecdhe_ecdsa_with_aes_256_gcm_sha384 follow cipher support disable default tls_rsa_with_aes_128_cbc_sha tls_rsa_with_aes_256_cbc_sha tls_rsa_with_aes_128_cbc_sha256 tls_rsa_with_aes_256_cbc_sha256 tls_rsa_with_aes_128_gcm_sha256 tls_rsa_with_aes_256_gcm_sha384 enable cipher tlse must compile dno_tls_robot_mitigation robot attack mitigate default recommend disable rsa encryption avoid future vulnerability tlse support chacha20 poly1305 cipher tls_ecdhe_rsa_with_chacha20_poly1305_sha256 tls_ecdhe_ecdsa_with_chacha20_poly1305_sha256 tls_dhe_rsa_with_chacha20_poly1305_sha256 cipher enable default low level interface efficient non block asynchronous socket block libssl style interface implement need protocol version pem parser tomcrypt rsa ecdsa aes gcm cbc encryption decryption sha1 sha256 sha384 sha512 hmac function support client certificate request client certificate call tls_request_client_certificate tlscontext follow tls_accept tlscontext implement sni extension server name indication get sni string call tls_sni tlscontext also implement scsv alpn see tls_add_alpn struct tlscontext const char const char tls_alpn struct tlscontext library support certificate validation tls_certificate_chain_is_valid tls_certificate_chain_is_valid_root tls_certificate_valid_subject tls_certificate_is_valid check note certificate feed tls_certificate_chain_is_valid must correct order certificate sign certificate certificate sign certificate also certificate first certificate key exchange library write project concept application concept application server concept native concept client simple client simple server simple block client libssl ish api simple block server libssl ish api compile work directory put fullchain pem privkey pem directory call testcert server certificate generation free important security note note dtls implement state machine dtls udp server may expose server attack license public domain bsd mit choose
C C++;https://github.com/etr/libhttpserver;reference manual codacy gitter library high performance restful web server upon provide simple api developer create http service feature http compatible request parser restful orient interface flexible handler api cross platform compatible http compliant multiple thread support ipv6 support shoutcast support incremental process post optional support basic digest authentication optional support require libgnutls optional table content introduction introduction requirement requirement get start get start structure class type definition structure class type definition create work webserver create work webserver resource object resource object register resource register resource parse request parse request response request response request blacklist whitelisting blacklist whitelisting authentication authentication http community conduct separate contribute separate appendix copy statement copy gnu lgpl gnu less general public license gnu less general public license say copy share almost gnu fdl gnu free documentation license gnu free documentation license say copy share documentation introduction mean constitute easy system http server rest fashion base like daemon library part documentation fact match wrap library mission library support possible http feature directly simple semantic allow user concentrate application http request handle detail library suppose work transparently client implement business logic library realize interface user want must able change every behavior library registration callback able decode certain body format automatically format object orient fashion true query argument post put request body application www form urlencoded multipart form header pas function guarantee completely reentrant thread safe unless differently specify additionally client specify resource limit overall number connection number connection per address memory per connection avoid resource exhaustion back toc table content requirement without dependency aside minimum version require clang optionally http support need optionally compile reference need additionally mingw window need libwinpthread mingw w64 thread posix version mingw need libgnurx furthermore testcases need compile library please refer readme particular distribution important note back toc table content standard system usual process involve bootstrap mkdir configure make make optionally system back toc table content optional parameter configure script complete list parameter obtain configure help list specific option canonical configure option also support enable directory enable compile directory heavily discourage def enable debug enable debug generation def disable doxygen doc generate doxygen documentation doxygen automatically invoke present system automatically disable otherwise enable fastopen enable tcp_fastopen def yes enable static enable static link def yes back toc table content get start basic create server handle request path hello include namespace class hello_world_resource public public const render const return string_response hello world int main int argc char argv webserver create_webserver hello_world_resource hwr register_resource hello hwr start true return test could follow command terminal curl xget also check back toc table content structure class type definition _webserver represent daemon listen socket http traffic _create_webserver builder class support creation webserver represent resource associate specific endpoint represent request receive resource process represent response send server resource finish work _string_response simple string response _file_response response get content _basic_auth_fail_response failure basic authentication _digest_auth_fail_response failure digest authentication _deferred_response response get content callback back toc table content create work webserver see create webserver standard configuration quite simple webserver create_webserver create_webserver class support _builder_ class ease webserver chain syntax basic startup option section explore basic option configure server advance option custom callback support etc discus separately port int port port server listen also pas consturctor create_webserver create_webserver max_connections int max_conns maximum number concurrent connection accept default fd_setsize maximum number descriptor support select minus stdin stdout stderr server socket word default large possible note set low connection limit easily get trouble browser request pipelining connection limit browser may open first connection access index html keep open second connection retrieve image like fact modern browser typically default configure parallel connection single server happen library refuse even accept second connection first connection close happen timeout browser fail render page seem hang expect server operate close connection limit first consider low timeout value also possibly add connection close header response ensure request pipelining connection close immediately request complete content_size_limit size_t size_limit set maximum size content client send single block default unlimited connection_timeout int timeout determine many second inactivity connection time automatically default timeout second memory_limit int memory_limit maximum memory size per connection follow size_t default byte value 128k unlikely much benefit half memory typically tcp buff unlikely support window size 64k system per_ip_connection_limit int connection_limit limit number concurrent connection make server address prevent take allow connection try establish specify number connection immediately reject default mean limit number connection address bind_socket int socket_fd listen socket pas listen socket daemon systemd style option daemon open listen socket argument pas must type int refer exist socket bind port listen max_thread_stack_size int stack_size maximum stack size thread create library specify option value mean system default likely differ base platform default system default use_ipv6 no_ipv6 enable disable ipv6 protocol support default support ipv4 specify local platform support start server throw exception default use_dual_stack no_dual_stack enable disable support ipv6 ipv4 protocol time default support ipv4 specify local platform support start server throw exception note mean ipv4 address return ipv6 map format structsockaddrin6 format ipv4 ipv6 default pedantic no_pedantic enable pedantic check protocol oppose tolerant possible specifically moment flag cause library reject http connection without host header require standard course violation liberal possible accept norm recommend turn test client library production default debug no_debug enable debug message library default regex_checking no_regex_checking enable pattern match endpoint read register resource default post_process no_post_process enable disable library automatically parse body request argument querystring format read parse request default put_processed_data_to_content no_put_processed_data_to_content enable disable library copy parse body content store argument map default file_upload_target file_upload_target_t file_upload_target control library store upload default value file_upload_memory_only file_upload_memory_only content store memory depend put_processed_data_to_content part argument map additionally content file_upload_disk_only content store system path create file_upload_dir either random name generate_random_filename_on_upload true actually upload name file_upload_memory_and_disk content store memory system file_upload_dir const std string file_upload_dir specify directory store upload default value tmp generate_random_filename_on_upload no_generate_random_filename_on_upload enable disable library generate unique unused filename store upload otherwise actually upload name default defer no_deferred enable disable ability server suspend resume connection simply put enable disable ability deferred_response read response request default single_resource no_single_resource set unsets server single resource mode limit endpoint serve single resource resultant webserver process request match endpoint skip complex semantic option incompatible regex_checking require resource register empty endpoint root endpoint resource also register family information resource registration read register resource default thread start_method const start_method operate different thread select method default value internal_select mode single thread handle listen port process request mode preferable spawn thread connection would costly http server able quickly produce response without much computational overhead connection mode great choice note still start single thread way main program continue operation call start method naturally http server need interact share state main application synchronization require synchronization provide response block http server operation connection stall mode bad choice response always provide instantly reason generate response block since would block connection hand response available immediately start busy wait need scale along number concurrent connection scale multiple thread specify value max_threads see thus enable thread pool different thread_per_connection new thread spawn connection mode start thread listen port new connection spawn new thread handle connection mode great http server hardly state share connection synchronization issue may need perform block operation extensive handle individual connection max_threads int max_threads thread pool combine internal_select mode benefit require scalability say default mode single thread combine thread pool option possible handle multiple connection multiple thread value great option activate thread pool contrast thread_per_connection mode thread handle connection thread pool handle large number concurrent connection internal_select combination thread pool typically scalable also hard debug mode operation default value option incompatible thread_per_connection custom default error message allow override internal error retrieve function provide custom message http client case implement logic invoke find resource library able match url request client implement object allow method http client request method explicitly mark allow info allow disallow method resource exception throw case would provide standard http response client correct error respectively library allow user specify custom callback call replace default behavior not_found_resource const resource specify function handle request match register endpoint exist url request client method_not_allowed_resource const resource specify function handle request ask method mark allow match internal_error_resource const resource specify function handle request cause uncaught exception execution remember callback cause exception standard default response report http client custom error include namespace const not_found_custom const req return std shared_ptr new string_response find custom text plain const not_allowed_custom const req return std shared_ptr new string_response allow custom text plain class hello_world_resource public public const render const return string_response hello world int main int argc char argv webserver create_webserver not_found_resource not_found_custom method_not_allowed_resource not_allowed_custom hello_world_resource hwr hwr disallow_all hwr set_allowing get true register_resource hello hwr start true return test follow command terminal curl xget try either follow command see custom error curl xget return custom find error curl xpost return custom allow error also check custom log callback log_access void log_access_ptr const std string functor specify function log access request server log_error void log_error_ptr const std string functor specify function log error generate server custom log callback include include namespace void custom_access_log const std string url std cout access url std endl class hello_world_resource public public const render const return string_response hello world int main int argc char argv webserver create_webserver log_access custom_access_log hello_world_resource hwr register_resource hello hwr start true return test follow command terminal curl xget notice terminal server log print output request receive also check http use_ssl no_ssl determine whether http mode set compile without ssl support library throw exception start server default cred_type const cred_type daemon credential type either certificate anonymous acceptable value none credential certificate certificate credential anon anonymous credential srp srp credential psk psk credential credential std string filename string represent path contain private key http daemon must conjunction std string filename string represent path contain certificate http daemon must conjunction std string filename string represent path contain certificate http daemon authenticate trust client certificate presence option activate request certificate client request client mark optional responsibility server check presence certificate need note browser present client certificate match specify send certificate otherwise std string priority_string ssl protocol version cipher must follow string specify ssl protocol version cipher acceptable application string pas unchanged gnutls_priority_init option specify normal minimal http include namespace class hello_world_resource public public const render const return string_response hello world int main int argc char argv webserver create_webserver use_ssl hello_world_resource hwr register_resource hello hwr start true return test follow command terminal curl xget also check blacklist whitelisting support blacklist whitelisting internal feature section explain startup option relate blacklist whitelisting see specific section blacklist whitelisting read topic ban_system no_ban_system enable disable ban system default default_policy const default_policy specify default behavior receive request possible value accept reject default accept authentication parameter basic_auth no_basic_auth enable disable parse basic authorization header send client default digest_auth no_digest_auth enable disable parse digest authentication send client default nonce_nc_size int nonce_size size array nonce nonce counter map option represent size number element map nonce nonce counter option specify default value might small server handle many request calculate value nc_size base number connection per second multiply expect session duration plus factor hash table collision expect digest authenticate connection per second average user stay site minute likely need value hand expect digest authenticate connection per second tolerate browser get fresh nonce request expect http request latency value fine digest_auth_random const std string nonce_seed digest authentication nonce seed security provide fresh random nonce actually digest authentication production chain syntax create webserver webserver create_webserver no_ssl no_ipv6 no_debug no_pedantic no_basic_auth no_digest_auth no_comet no_regex_checking no_ban_system no_post_process webserver create_webserver use_ssl start stop webserver webserver create manage execution follow method webserver class void webserver start bool block allow start server block flag pas true block execution current thread call stop webserver object perform void webserver stop allow stop server immediately stop bool webserver is_running check server void webserver sweet_kill allow stop server guarantee immediate halt allow thread termination connection closure back toc table content resource object class represent logical collection http method associate url register webserver class design extension ideally live webserver match request resource see resource registration register resource method correspondent request get post etc see call resource give class contain follow extensible method also call handler render method const req invoke http get request const req invoke http post request const req invoke http put request const req invoke http head request const req invoke http delete request const req invoke http trace request const req invoke http option request const req invoke http connect request const req invoke backup method match method implement whenever want invocation url activate behavior regardless http method request default render method return empty response render method include namespace class hello_world_resource public public const render_get const return string_response get hello world const render const return string_response hello world int main int argc char argv webserver create_webserver hello_world_resource hwr register_resource hello hwr start true return test follow command terminal curl xget return get hello world curl xpost return hello world try request method beside post verify message return also check allow disallow method resource default method resource allow mean http request method invoke possible mark method allow resource method allow request resource default method_not_allowed method invoke default overriden explain section custom default error message custom default error message base class set method allow disallow http method void std string method bool allow allow disallow method method parameter string represent http method get post put etc void mark http method allow void mark http method allow method allow disallow include namespace class hello_world_resource public public const render const return string_response hello world int main int argc char argv webserver create_webserver hello_world_resource hwr hwr disallow_all hwr set_allowing get true register_resource hello hwr start true return test follow command terminal curl xget try follow command see method_not_allowed error curl xpost also check back toc table content register resource create resource extend method register resource webserver register resource associate endpoint allow webserver route webserver class offer method register resource bool register_resource const std string endpoint resource bool family false register resource endpoint endpoint string represent path webserver want resource serve path resource optional family parameter allow register resource family resource match path nest specify family set true endpoint set path webserver route resource request path also everything nest path path previous specify endpoint essentially way specify endpoint string simple path path resource case webserver try match exactly value endpoint regular exception case webserver try match url request regex pas pas path decimal request url like path decimal path decimal match instead url like path decimal parametrized path path resource arg1 arg2 url case webserver match argument value pas addition argument pas resource part argument readable method see parse request pas path resource arg1 arg2 url match request url value place arg1 arg2 parametrized path custom parameter normal parametrized path allow specify regular expression argument path resource arg1 arg2 url case webserver match argument value pas satisfy regex addition argument pas resource part argument readable method see parse request pas path resource arg1 arg2 url match request url like path resource url like path resource url mark family match request url path prefix path pas family set true endpoint set path webserver route resource request path also everything nest path path previous include namespace class hello_world_resource public public const render const return string_response hello world class handling_multiple_resource public public const render const req return string_response url req get_path class url_args_resource public public const render const req return string_response args req get_arg arg1 req get_arg arg2 int main int argc char argv webserver create_webserver hello_world_resource hwr register_resource hello hwr handling_multiple_resource hmr register_resource family hmr true register_resource with_regex_ hmr url_args_resource uar register_resource url arg1 arg2 uar register_resource url parametric args arg1 arg2 uar start true return test follow command terminal curl xget return hello world message curl xget return url family message curl xget return url family suffix message curl xget return url with_regex_10 message curl xget return args message change value observe url still match parameter read curl xget return args message change value match regexes observe url still match parameter read conversely observe url match follow give find message curl xget curl xget also check back toc table content parse request see documentation every extensible method take input object webserver take responsibility extract http request heavy lift instance class set method access implement handler const std string get_path const return path request http client const std vector get_path_pieces const return component path request http client piece path split const std string get_path_piece int index const return piece path request http client piece select index parameter index const std string get_method const return method request http client const std string get_header const std string key const return header name equal key present http request return empty string otherwise const std string get_cookie const std string key const return cookie name equal key present http request return empty string otherwise const std string get_footer const std string key const return footer name equal key present http request chunk encode return empty string otherwise const std string get_arg const std string key const return argument name equal key present http request argument querystring parameter path argument case parametric endpoint parameter parse http request body body application www form urlencoded multipart form format postprocessor enable webserver enable default const std mapwith_header myheader myvalue return response int main int argc char argv webserver create_webserver hello_world_resource hwr register_resource hello hwr start true return test could follow command terminal curl xget receive message custom header reply also check back toc table content blacklist whitelisting provide natively system blacklist whitelist address enable disable system possible ban_system no_ban_system method create_webserver class way specify want default behavior allow default disallow default default_policy method see create work webserver system support ipv4 ipv6 manage transparently requirement ipv6 enable server enable use_ipv6 method create_webserver explicitly ban allow address follow method webserver class void ban_ip const std string add range list ban take input string contain range ban default_policy accept void allow_ip const std string add range list allow take input string contain range allow default_policy reject void unban_ip const std string remove range list ban take input string contain range remove list default_policy reject void disallow_ip const std string remove range list allow take input string contain range remove list default_policy reject string format string format represent ipv4 ipv6 address normalize webserver operate sapce valid ipv4 ipv6 textual representation work also possible specify range omit octect want express range specify place valid include standard ipv4 range ipv4 address everything db8 3a90 standard ipv6 cluster empty range fully support db8 3a90 range ipv6 address ffff ipv4 nest ipv6 ipv4 nest ipv6 without ffff prefix ffff range ipv4 nest ipv6 whitelisting blacklist include namespace class hello_world_resource public public const render const return string_response hello world int main int argc char argv webserver create_webserver allow_ip hello_world_resource hwr register_resource hello hwr start true return test could follow command terminal curl xget also check back toc table content authentication support type client authentication basic authentication simple authentication method base base64 algorithm username password exchange clear client server method must non sensitive content session protect basic authentication access clear password possibly allow create chain authentication toward external authentication server enable disable support basic authentication basic_auth no_basic_auth method create_webserver class digest authentication way authentication method base md5 hash algorithm hash transit hence protect user password nonce prevent replay attack method appropriate general especially encrypt session enable disable support digest authentication digest_auth no_digest_auth method create_webserver class client certificate authentication certificate client strong authentication mechanism require http client certificate authentication simultaneously basic digest authentication order provide level authentication like instance separate machine user authentication enable disable support certificate authentication use_ssl no_ssl method create_webserver class basic authentication include namespace class user_pass_resource public public const render_get const req req get_user myuser req get_pass mypass return std shared_ptr new basic_auth_fail_response fail test com return std shared_ptr new string_response req get_user req get_pass text plain int main int argc char argv webserver create_webserver user_pass_resource hwr register_resource hello hwr start true return test follow command terminal curl xget myuser mypass receive back user password pas input try pas wrong credential see failure also check digest authentication include define my_opaque 11733b200778ce33060f31c9af70a870ba96ddd4 namespace class digest_resource public public const render_get const req req get_digested_user return std shared_ptr new digest_auth_fail_response fail test com my_opaque true else bool reload_nonce false req check_digest_auth test com mypass reload_nonce return std shared_ptr new digest_auth_fail_response fail test com my_opaque reload_nonce return std shared_ptr new string_response success text plain int main int argc char argv webserver create_webserver digest_resource hwr register_resource hello hwr start true return test follow command terminal curl xget digest user myuser mypass localhost hello receive success response observe response message server detail see full interaction try pas wrong credential send request without digest active see failure also check back toc table content http utils provide set constant help develop http server would redudant list please consult list directly back toc table content return response include namespace class file_response_resource public public const render_get const req return std shared_ptr new file_response test_content text plain int main int argc char argv webserver create_webserver file_response_resource hwr register_resource hello hwr start true return test follow command terminal curl xget localhost hello also check defer response callback include namespace static int counter ssize_t test_callback std shared_ptr closure_data char buf size_t max counter return else memset buf max strcat buf test counter return std string buf size class deferred_resource public public const render_get const req return std shared_ptr new deferred_response test_callback nullptr cycle callback response int main int argc char argv webserver create_webserver deferred_resource hwr register_resource hello hwr start true return test follow command terminal curl xget localhost hello also check defer response callback pas additional along include include namespace std atomic counter ssize_t test_callback std shared_ptr closure_data char buf size_t max int reqid closure_data nullptr reqid else reqid closure_data first connection establish reqid return else respond correspond request client std string str str std to_string reqid memset buf max std copy str begin str end buf keep send reqid sleep return ssize_t max class deferred_resource public public const render_get const req std shared_ptr closure_data new std atomic counter return std shared_ptr new deferred_response test_callback closure_data cycle callback response int main int argc char argv webserver create_webserver deferred_resource hwr register_resource hello hwr start true return test follow command terminal curl xget localhost hello also check back toc table content copy manual library create embed rest http server permission grant copy distribute modify document term gnu free documentation license version late version publish free software foundation invariant section front cover text back cover text copy license include section entitle gnu free documentation license back toc table content gnu less general public license version february copyright free software foundation inc franklin street fifth floor boston usa everyone permit copy distribute verbatim copy license document change allow _this first release version less gpl also count successor gnu library public license version hence version number preamble license software design take away freedom share change contrast gnu general public license intend guarantee freedom share change free software make sure software free user license less general public license apply specially designate software package typically library free software foundation author decide suggest first think carefully whether license ordinary general public license good strategy particular case base explanation speak free software refer freedom price general public license design make sure freedom distribute copy free software charge service wish receive source get want change software piece new free program inform thing protect right need make restriction forbid distributor deny right ask surrender right restriction translate certain responsibility distribute copy library modify distribute copy library whether gratis fee must give recipient right give must make sure receive get source link library must provide complete object recipient relink library make change library recompiling must show term know right protect right step method copyright library offer license give legal permission copy distribute modify library protect distributor want make clear warranty free library also library modify someone else pas recipient know original version original author reputation affect problem might introduce others finally software patent pose constant threat existence free program wish make sure company effectively restrict user free program obtain restrictive license patent holder therefore insist patent license obtain version library must consistent full freedom specify license gnu software include library cover ordinary gnu general public license license gnu less general public license apply certain designate library quite different ordinary general public license license certain library order permit link library non free program program link library whether statically share library combination legally speak combine work derivative original library ordinary general public license therefore permit link entire combination fit criterion freedom less general public license permit lax criterion link library call license less general public license protect user freedom ordinary general public license also provide free software developer advantage compete non free program disadvantage reason ordinary general public license many library however less license provide advantage certain special circumstance rare occasion may special need encourage wide possible certain library become facto standard achieve non free program must allow library frequent case free library job widely non free library case little gain limit free library free software less general public license case permission particular library non free program enable great number people large body free software permission gnu library non free program enable many people whole gnu operate system well variant gnu linux operate system although less general public license protective user freedom ensure user program link library freedom wherewithal program modify version library precise term condition copy distribution modification follow pay close attention difference work base library work library former contain derive library whereas latter must combine library order term condition copy distribution modification license agreement apply software library program contain notice place copyright holder authorize party say may distribute term less general public license also call license licensee address library mean collection software function prepare conveniently link application program function form executables library refer software library work distribute term work base library mean either library derivative work copyright law say work contain library portion either verbatim modification translate straightforwardly another language hereinafter translation include without limitation term modification source work mean prefer form work make modification library complete source mean source module contain plus associate interface definition plus script control compilation installation library activity copy distribution modification cover license outside scope act program library restrict output program cover content constitute work base library independent library tool write whether true depend library program library may copy distribute verbatim copy library complete source receive medium provide conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty keep intact notice refer license absence warranty distribute copy license along library may charge fee physical act transfer copy may option offer warranty protection exchange fee may modify copy copy library portion thus form work base library copy distribute modification work term section provide also meet condition modify work must software library must cause modify carry prominent notice state change date change must cause whole work license charge third party term license facility modify library refer function table supply application program facility argument pas facility invoke must make good faith effort ensure event application supply function table facility still operate perform whatever part purpose remain meaningful function library compute square root purpose entirely well define independent application therefore subsection require application supply function table function must optional application supply square root function must still compute square root requirement apply modify work whole identifiable section work derive library reasonably consider independent separate work license term apply section distribute separate work distribute section part whole work base library distribution whole must term license whose permission license extend entire whole thus every part regardless write thus intent section claim right contest right work write entirely rather intent exercise right control distribution derivative collective work base library addition mere aggregation another work base library library work base library volume storage distribution medium bring work scope license may opt apply term ordinary gnu general public license instead license give copy library must alter notice refer license refer ordinary gnu general public license version instead license new version version ordinary gnu general public license appear specify version instead wish make change notice change make give copy irreversible copy ordinary gnu general public license apply subsequent copy derivative work make copy option useful wish copy part library program library may copy distribute library portion derivative section object executable form term section provide accompany complete correspond machine readable source must distribute term section medium customarily software interchange distribution object make offer access copy designate place offer equivalent access copy source place satisfy requirement distribute source even though third party compel copy source along object program contain derivative portion library design work library compile link call work library work isolation derivative work library therefore fall outside scope license however link work library library create executable derivative library contain portion library rather work library executable therefore cover license section state term distribution executables work library material header part library object work may derivative work library even though source whether true especially significant work link without library work library threshold true precisely define law object numerical parameter structure layout accessors small macro small inline function line length object unrestricted regardless whether legally derivative work executables contain object plus portion library still fall section otherwise work derivative library may distribute object work term section executables contain work also fall section whether link directly library exception section may also combine link work library library produce work contain portion library distribute work term choice provide term permit modification work customer reverse engineer debug modification must give prominent notice copy work library library cover license must supply copy license work execution display copyright notice must include copyright notice library among well reference direct user copy license also must thing accompany work complete correspond machine readable source library include whatever change work must distribute section work executable link library complete machine readable work library object source user modify library relink produce modify executable contain modify library understand user change content definition library necessarily able recompile application modify definition suitable share library mechanism link library suitable mechanism time copy library already present user computer system rather copy library function executable operate properly modify version library user long modify version interface compatible version work make accompany work write offer valid least year give user material specify subsection charge cost perform distribution distribution work make offer access copy designate place offer equivalent access copy specify material place verify user already receive copy material already send user copy executable require form work library must include utility program need reproduce executable however special exception material distribute need include anything normally distribute either source binary form major component compiler kernel operate system executable unless component accompany executable may happen requirement contradict license restriction proprietary library normally accompany operate system contradiction mean library together executable distribute may place library facility work base library side side single library together library facility cover license distribute combine library provide separate distribution work base library library facility otherwise permit provide thing accompany combine library copy work base library uncombined library facility must distribute term section give prominent notice combine library fact part work base library explain find accompany uncombined form work may copy modify sublicense link distribute library except expressly provide license attempt otherwise copy modify sublicense link distribute library void automatically terminate right license however party receive copy right license license terminate long party remain full compliance require accept license since sign however nothing else grant permission modify distribute library derivative work action prohibit law accept license therefore modify distribute library work base library indicate acceptance license term condition copy distribute modify library work base time redistribute library work base library recipient automatically receive license original licensor copy distribute link modify library subject term condition may impose restriction recipient exercise right grant herein responsible enforce compliance third party license consequence court judgment allegation patent infringement reason limit patent issue condition impose whether court order agreement otherwise contradict condition license excuse condition license distribute satisfy simultaneously obligation license pertinent obligation consequence may distribute library patent license would permit royalty free redistribution library receive copy directly indirectly way could satisfy license would refrain entirely distribution library portion section hold invalid unenforceable particular circumstance balance section intend apply section whole intend apply circumstance purpose section induce infringe patent property right claim contest validity claim section sole purpose protect integrity free software distribution system implement public license practice many people make generous contribution wide range software distribute system reliance consistent application system author donor decide distribute software system licensee impose choice section intend make thoroughly clear believe consequence rest license distribution library restrict certain country either patent copyright interface original copyright holder place library license may add explicit geographical distribution limitation exclude country distribution permit among country thus exclude case license incorporate limitation write body license free software foundation may publish revise new version less general public license time time new version similar spirit present version may differ detail address new problem concern version give distinguish version number library specify version number license apply late version option follow term condition either version late version publish free software foundation library specify license version number may choose version ever publish free software foundation wish incorporate part library free program whose distribution condition incompatible write author ask permission software copyright free software foundation write free software foundation sometimes make exception decision guide goal preserve free status derivative free software promote share reuse software generally warranty library license free charge warranty library extent permit applicable law except otherwise state write copyright holder party provide library without warranty kind either express imply include limit imply warranty merchantability fitness particular purpose entire risk quality performance library library prove defective assume cost necessary service repair correction event unless require applicable law agree write copyright holder party may modify redistribute library permit liable damage include general special incidental consequential damage arise inability library include limit loss render inaccurate loss sustain third party failure library operate software even holder party advise possibility damage end term condition apply term new library develop new library want great possible public recommend make free software everyone redistribute change permit redistribution term alternatively term ordinary general public license apply term attach follow notice library safe attach start source effectively convey exclusion warranty least copyright line pointer full notice find copyright library free software redistribute modify term gnu less general public license publish free software foundation either version license option late version library distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu less general public license detail receive copy gnu less general public license along library write free software foundation inc franklin street fifth floor boston usa also add information contact electronic mail also get employer work programmer school sign copyright disclaimer library necessary sample alter name yoyodyne inc hereby disclaim copyright interest library frob library tweak knob write jam random hacker april coon president vice back toc table content gnu free documentation license version november copyright free software foundation inc everyone permit copy distribute verbatim copy license document change allow preamble purpose license make manual textbook functional useful document free sense freedom assure everyone effective freedom copy redistribute without modify either commercially noncommercially secondarily license preserve author publisher way get credit work consider responsible modification make others license kind copyleft mean derivative work document must free sense complement gnu general public license copyleft license design free software design license order manual free software free software need free documentation free program come manual provide freedom software license limit software manual textual work regardless subject matter whether publish print book recommend license principally work whose purpose instruction reference applicability definition license apply manual work medium contain notice place copyright holder say distribute term license notice grant world wide royalty free license unlimited duration work condition state herein document refer manual work member public licensee address accept license copy modify distribute work way require permission copyright law modify version document mean work contain document portion either copy verbatim modification translate another language secondary section name appendix front matter section document deal exclusively relationship publisher author document document overall subject relate matter contain nothing could fall directly within overall subject thus document part textbook mathematics secondary section may explain mathematics relationship could matter historical connection subject relate matter legal commercial philosophical ethical political position regard invariant section certain secondary section whose title designate invariant section notice say document release license section fit definition secondary allow designate invariant document may contain invariant section document identify invariant section none cover text certain short passage text list front cover text back cover text notice say document release license front cover text may word back cover text may word transparent copy document mean machine readable copy represent format whose specification available general public suitable revise document straightforwardly generic text editor image compose pixel generic paint program draw widely available draw editor suitable input text formatters automatic translation variety format suitable input text formatters copy make otherwise transparent format whose markup absence markup arrange thwart discourage subsequent modification reader transparent image format transparent substantial amount text copy transparent call opaque suitable format transparent copy include plain ascii without markup texinfo input format latex input format sgml xml publicly available dtd standard conform simple html postscript pdf design human modification transparent image format include png xcf jpg opaque format include proprietary format read edit proprietary word processor sgml xml dtd process tool generally available machine generate html postscript pdf produce word processor output purpose title page mean print book title page plus follow page need hold legibly material license require appear title page work format title page title page mean text near prominent appearance work title precede begin body text publisher mean person entity distribute copy document public section entitle xyz mean name subunit document whose title either precisely xyz contain xyz parenthesis follow text translate xyz another language xyz stand specific section name mention acknowledgement dedication endorsement history preserve title section modify document mean remain section entitle xyz accord definition document may include warranty disclaimer next notice state license apply document warranty disclaimer consider include reference license regard disclaim warranty implication warranty disclaimer may void effect mean license verbatim copy may copy distribute document medium either commercially noncommercially provide license copyright notice license notice say license apply document reproduce copy add condition whatsoever license may technical measure obstruct control read copy copy make distribute however may accept compensation exchange copy distribute large enough number copy must also follow condition section may also lend copy condition state may publicly display copy copy quantity publish print copy copy medium commonly print cover document number document license notice require cover text must enclose copy cover carry clearly legibly cover text front cover text front cover back cover text back cover cover must also clearly legibly identify publisher copy front cover must present full title word title equally prominent visible may add material cover addition copy change limit cover long preserve title document satisfy condition treat verbatim copy respect require text either cover voluminous fit legibly put first list many fit reasonably actual cover continue rest onto adjacent page publish distribute opaque copy document number must either include machine readable transparent copy along opaque copy state opaque copy computer location general public access public standard protocol complete transparent copy document free add material latter option must take reasonably prudent step begin distribution opaque copy quantity ensure transparent copy remain thus accessible state location least year last time distribute opaque copy directly agent retailer edition public request require contact author document well redistribute large number copy give chance provide update version document modification may copy distribute modify version document condition section provide release modify version precisely license modify version fill role document thus license distribution modification modify version whoever posse copy addition must thing modify version title page cover title distinct document previous version list history section document may title previous version original publisher version give permission list title page author person entity responsible authorship modification modify version together least principal author document principal author unless release requirement state title page name publisher modify version publisher preserve copyright notice document add appropriate copyright notice modification adjacent copyright notice include immediately copyright notice license notice give public permission modify version term license form show addendum preserve license notice full list invariant section require cover text give document license notice include unaltered copy license preserve section entitle history preserve title add item state least title year new author publisher modify version give title page section entitle history document create state title year author publisher document give title page add item describe modify version state previous sentence preserve location give document public access transparent copy document likewise location give document previous version base may place history section may omit location work publish least year document original publisher version refer give permission section entitle acknowledgement dedication preserve title section preserve section substance tone contributor acknowledgement dedication give therein preserve invariant section document unaltered text title section number equivalent consider part section title delete section entitle endorsement section may include modify version retitle exist section entitle endorsement conflict title invariant section preserve warranty disclaimer modify version include new front matter section appendix qualify secondary section contain material copy document may option designate section invariant add title list invariant section modify version license notice title must distinct section title may add section entitle endorsement provide contain nothing endorsement modify version various party statement peer review text approve organization authoritative definition standard may add passage word front cover text passage word back cover text end list cover text modify version passage front cover text back cover text may add arrangement make entity document already include cover text cover previously add arrangement make entity act behalf may add another may replace old explicit permission previous publisher add old author publisher document license give permission name publicity assert imply endorsement modify version combine document may combine document document release license term define section modify version provide include combination invariant section original document unmodified list invariant section combine work license notice preserve warranty disclaimer combine work need contain copy license multiple identical invariant section may replace single copy multiple invariant section name different content make title section unique add end parenthesis name original author publisher section know else unique number make adjustment section title list invariant section license notice combine work combination must combine section entitle history various original document form section entitle history likewise combine section entitle acknowledgement section entitle dedication must delete section entitle endorsement collection document may make collection consist document document release license replace individual copy license various document single copy include collection provide follow rule license verbatim copy document respect may extract single document collection distribute individually license provide insert copy license extract document follow license respect regard verbatim copy document aggregation independent work compilation document derivative separate independent document work volume storage distribution medium call aggregate copyright compilation limit legal right compilation user beyond individual work permit document include aggregate license apply work aggregate derivative work document cover text requirement section applicable copy document document half entire aggregate document cover text may place cover bracket document within aggregate electronic equivalent cover document electronic form otherwise must appear print cover bracket whole aggregate translation translation consider kind modification may distribute translation document term section replace invariant section translation require special permission copyright holder may include translation invariant section addition original version invariant section may include translation license license notice document warranty disclaimer provide also include original english version license original version notice disclaimer case disagreement translation original version license notice disclaimer original version prevail section document entitle acknowledgement dedication history requirement section preserve title section typically require change actual title termination may copy modify sublicense distribute document except expressly provide license attempt otherwise copy modify sublicense distribute void automatically terminate right license however cease violation license license particular copyright holder reinstate provisionally unless copyright holder explicitly finally terminate license permanently copyright holder fail notify violation reasonable mean prior day cessation moreover license particular copyright holder reinstate permanently copyright holder notify violation reasonable mean first time receive notice violation license work copyright holder cure violation prior day receipt notice termination right section terminate license party receive copy right license right terminate permanently reinstate receipt copy material give right future revision license free software foundation may publish new revise version gnu free documentation license time time new version similar spirit present version may differ detail address new problem concern see version license give distinguish version number document specify particular number version license late version apply option follow term condition either specify version late version publish draft free software foundation document specify version number license may choose version ever publish draft free software foundation document specify proxy decide future version license proxy public statement acceptance version permanently authorize choose version document relicensing massive multiauthor collaboration site mmc site mean world wide web server publish copyrightable work also provide prominent facility anybody edit work public wiki anybody edit server massive multiauthor collaboration mmc contain site mean set copyrightable work thus publish mmc site mean creative common attribution share alike license publish creative common corporation profit corporation principal place business san francisco california well future copyleft version license publish organization incorporate mean publish republish document whole part part another document mmc eligible relicensing license license work first publish license somewhere mmc subsequently incorporate whole part mmc cover text invariant section thus incorporate prior november operator mmc site may republish mmc contain site site time august provide mmc eligible relicensing addendum license document license document write include copy license document put follow copyright license notice title page copyright year name permission grant copy distribute modify document term gnu free documentation license version late version publish free software foundation invariant section front cover text back cover text copy license include section entitle gnu free documentation license invariant section front cover text back cover text replace text line invariant section list title front cover text list back cover text list invariant section without cover text combination merge alternative suit situation document contain nontrivial program recommend release parallel choice free software license gnu general public license permit free software back toc table content thank library originally develop zencoders flag community always support along work happy put logo readme see tree know come across zencoders open zencoders num number synchronize datetime glob sys argv def myclass oscla org class displ hook public static void functor myclass method impport sys pipe param name fcl system cmd myc card array srand format list conc myi sys myvalue myvalue sys console try rais connec select table mycnf acco desc selector clas openldap string sys print zenc appe fir import tkinter paste obh myval bro roll require case super expr say room account proc meth animate send open putd endif whi myc cont main import loop end onload union tab timer end begin true gtklabel label doto partition let auto mushup zenc myclass flv element qfiledi myc toa channel myc isempty bodt class public pol str mycalc add zencoders core namespac boost function std int assert cout endl public genus include ost myna const cast mys size_t return int getnextvalue void double sa_family_t famil put int main int argc char struct nam float typedef enum put getchar else define char strcat int total sle getc strcpy prin scanf get int void myfunc int retu beq bneqz andi sys xor syscall sltiu mflo jal bne bltzal lui noop multu sllv mov add jump beq andi information visit website author sebastiano merlino back toc table content
C C++;https://github.com/jbeder/yaml-cpp;yaml cpp yaml cpp parser emitter match yaml usage see emit reference old api see parse problem find bug post question yaml cpp please post tag yaml cpp support cross platform resource proceed basic step note provide installer platform make sure add cmake bin folder path navigate source directory create folder cmake generator option system would like cmake without argument see full list available generator window might visual studio bit visual studio win64 bit might xcode unix like system omit option makefile yaml cpp static library default may want share library specify dyaml_build_shared_libs option customize see command need depend generator choose early note clean remove directory recent release yaml cpp release release require long depend boost yaml cpp still available want old api old api continue support still receive bugfixes version old api release new api release api documentation autogenerated api reference host third party integration follow project officially support unrealengine
C C++;https://github.com/antirez/sds;simple dynamic string note version update version attempt finally unify redis disque hiredis stand alone version version binary compatible verison api compatible switch new lib trivial note version may slow certain workload memory compare since header size dynamic depend string alloc moreover include api function notably sdscatfmt fast version sdscatprintf simple case order avoid libc printf family function performance penalty string work string library design augment limit libc string handle functionality add heap allocate string simple binary safe computationally efficient yet compatible normal string function achieve alternative design instead structure represent string binary prefix store actual pointer string return user header binary safe alike string null term pointer return user meta store actual return pointer prefix every string implicitly add null term end string regardless actual content string string work well together string user free interchangeably std string function access string read string develop past everyday program need late move redis extensively modify order suitable high performance operation extract redis fork stand alone project many year life inside redis provide high level function easy string manipulation also set low level function make possible write high performance without pay penalty high level string library advantage disadvantage normally dynamic string library implement structure define string structure pointer field manage string function look like string already mention follow schema instead single allocation prefix live address actually return string advantage disadvantage approach traditional approach disadvantage many function return new string value since sometimes require create new string space api call look like see input sdscat also set value return api call since sure call modify string pas allocate new remember assign back return value sdscat similar function variable hold string bug disadvantage string share different place program modify reference modify string however time need share string much good encapsulate structure reference count otherwise easy incur memory leak advantage pas string function design function without access struct member call function like library something like advantage access individual char straightforward low level language important operation many program string access individual char natural library best chance assign string buf call function get string pointer char pointer work however since library may reallocate buff implicitly every time call function may modify string get reference buff advantage single allocation good cache locality usually access string create string library structure different allocation structure represent string actual buff hold string time buff reallocate likely end totally different part memory compare structure since modern program performance often dominate cache miss may perform good many workload basic type string char pointer char however define type alias char header type order make sure remember give variable program hold string string however mandatory simple program write something small program already show important thing string create heap allocate via sdsnew function similar function see moment string pas printf like string string require free sdsfree since heap allocate create string many way create string sdsnew function create string start null terminate string already saw work sdsnewlen function similar sdsnew instead create string assume input string null terminate get additional length parameter way create string binary note sdslen return value cast int return size_t type right printf specifier instead cast sdsempty function create empty length string sdsdup function duplicate already exist string obtain string length already sdslen function order get length string function work like strlen libc except constant time since length store prefix string call sdslen expensive even call large string function binary safe like string function length true length string regardless content problem string include null term character middle binary safeness string follow note string always null terminate end even case null term however print string printf would print since libc treat string like normal string destroy string destroy string call sdsfree string pointer note even empty string create sdsempty need destroy well otherwise memory leak function sdsfree perform operation instead string pointer null pas need check null explicitly call concatenate string concatenate string string likely operation end dynamic string library provide different function concatenate string exist string main string concatenation function sdscatlen sdscat identical difference sdscat explicit length argument since expect null terminate string sometimes want cat string another string need specify length time string need null terminate contain binary special function usage straightforward sometimes want append special string want make sure least give number byte compose whole string sdsgrowzero function nothing current string length already len byte otherwise enlarge string len pad byte format string special string concatenation function accept printf alike format specifier cat format string specify string often need create string directly printf format specifier sdscatprintf actually function concatenate string need concatenate string empty string sdscatprintf order convert number string however slow special function make efficient fast number string operation create string integer may common operation certain kind program may sdscatprintf performance hit big provide specialize function like trim string get range string trim common operation set character remove leave right string another useful operation regard string ability take range large string provide operation sdstrim sdsrange function however note function work differently function modify string since return value void basically function always destructively modify pas string never allocate new trim range never need room operation remove character original string behavior function fast involve reallocation string trim newlines space remove string basically sdstrim take string trim first argument null terminate set character remove leave right string character remove long interrupt character list character trim space string preserve take range similar instead take set character take index represent start end specify base index inside string obtain range retain index negative specify position start end string mean last character penultimate forth sdsrange useful implement server process protocol send message follow implement write handler redis cluster message bus nod every time socket node want send message writable attempt write much byte possible sdsrange order remove buff already send function queue new message send node cluster simply sdscatlen order put send buff note redis cluster bus implement binary protocol since binary safe problem goal provide high level string api programmer also dynamically allocate buff easy manage string copy dangerous infamus function standard library probably strcpy perhaps funny context good design dynamic string library concept copy string almost irrelevant usually create string content want concatenate content need however feature string copy function useful performance critical section however guess practical usefulness limit function never manage get call context 50k line compose redis base string copy function call sdscpylen work like see function receive input string also return string common many function modify string way return string may original modify newly allocate enough room old string sdscpylen simply replace old string new pas pointer length argument similar function call sdscpy need length expect null terminate string instead may wonder make sense string copy function library since simply create new string scratch new value instead copy value exist string reason efficiency sdsnewlen always allocate new string sdscpylen try reuse exist string enough room old new content specify user allocate new need quote string order provide consistent output program user debug purpose often important turn string may contain binary special character quote string quote string mean common format string literal program source however today format also part well know serialization format like json csv definitely escape simple goal represent literal string source program quote string literal follow first byte byte last byte newline non alphanumerical character inside string concatenation function goal concatenate exist string quote string representation input string scscatrepr repr mean representation follow usualy string function rule accept char pointer length string normal string strlen len argument binary follow usage rule sdscatrepr conversion quote backslash quote special character non printable character pas isprint test quote form backslash follow follow digit hex number represent character byte value function always add initial final double quote character function able perform reverse conversion document tokenization section tokenization tokenization process split large string small string specific case split perform specify another string act separator follow string substring separate separator common separator consist single character comma many progrems useful process line order obtain sub string compose provide function return array string give string separator usually function work string normal string first argument len specify string tokenize argument sep seplen separator tokenization final argument count pointer integer set number token sub string return return value heap allocate array string return array heap allocate single element array normal string free everything call sdsfreesplitres alternativey free release array free function free individual string usually valid approach set array element reuse way null sdsfreesplitres free rest command line orient tokenization split separator useful operation usually enough perform common task involve non trivial string manipulation implement command line interface program also provide additional function allow split argument provide user via keyboard interactive manner via mean token sdssplitargs function return array string exactly like sdssplitlen function free also identical sdsfreesplitres difference way tokenization perform input follow line function return follow token call sabrina mark smith basically different token need separate space every single token also quote string format sdscatrepr able emit string join function reverse tokenization join string single function take input array string length argc separator length produce output string consist specify string separate specify separator difference sdsjoin sdsjoinsds former accept null terminate string input latter require string array string however sdsjoinsds able deal binary error handle function return pointer may also return null memory basically check need perform however many modern program handle memory simply abort program may want well wrap malloc relate memory allocation call directly internals advance usage begin documentation explain string allocate however prefix store pointer return user classify header without detail advance usage good dig internals show structure implement see structure may resemble conventional string library however buf field structure different since pointer array without length declare buf actually point first byte free integer order create string allocate piece memory large sdshdr structure plus length string plus additional byte mandatory null term every string len field structure quite obvious current length string always compute every time string modify via function call free field instead represent amount free memory current allocation store character actual layout len free null term free space pointer return user may wonder free space end string look like waste actually new string create free space end allocation small possible hold header string null term however access pattern create extra free space end like follow program since try efficient afford reallocate string every time new append since would inefficient preallocation free space every time enlarge string preallocation algorithm follow every time string reallocate order hold byte actual allocation size perform time minimum require instance string currently hold byte concatenate byte instead allocate byte total allocate byte however hard limit allocation perform ahead define sds_max_prealloc never allocate 1mb additional space default change default shrink string sometimes class program require little memory string concatenation trim range string may end non trivial amount additional space end possible resize string back minimal size order hold current content function sdsremovefreespace also function order get size total allocation give string call sdsallocsize note low level api cammelcase order warn play fire manual modification string void sdsupdatelen sometimes may want hack string manually without function follow implicitly change length string however want logical length reflect null terminate string function sdsupdatelen update internal length information specify string length obtain via strlen share string write program advantageous share string across different structure absolutely advise encapsulate string structure remember number reference string function increment decrement number reference approach memory management technique call reference count context advantage likely create memory leak bug due non free string free already free string need update every reference string modify since new string may point different memory location definitely common program technique outline basic idea create structure like new string create structure allocate return refcount set function change reference count share string incrementstringrefcount simply increment refcount structure call every time add reference string new structure variable whatever decrementstringrefcount remove reference function however special since refcount drop automatically free string mysharedstring structure well interaction heap checker return pointer middle memory chunk allocate malloc heap checker may issue however popular valgrind program detect string possibly lose memory never definitely lose easy tell leak valgrind redis year every real leak consistently detect definitely lose osx instrumentation tool detect string leak able correctly handle pointer point middle memory chunk copy append syscalls point tool dig inside library read source however interest pattern mount low level api export inside redis order improve performance sdsincrlen sdsmakeroomfor possible mount follow schema cat byte come kernel end string without copy intermediate buff sdsincrlen document inside source embed project simple copy follow inside project sdsalloc source small every c99 compiler deal without issue different allocator internally allocator define sdsalloc header define macro malloc realloc free default libc malloc realloc free edit order change name allocation function program call allocator order manipulate pointer usually need sometimes program may want advance thing api export order call allocator especially useful program link different allocator compare api access allocator compose function sds_malloc sds_realloc sds_free credit license create salvatore sanfilippo release clause license see license source distribution information oran agra improve version add dynamic size header order save memory small string allow string great 4gb
C C++;https://github.com/mackron/dr_libs;public domain single audio decode library library description dr_flac dr_flac flac audio decoder dr_mp3 dr_mp3 mp3 audio decoder base dr_wav dr_wav wav audio loader writer library library may interest library description public domain single library audio playback record
C C++;https://github.com/basiliscos/cpp-rotor;rotor reactive reactive manifesto sobjectizer blog cpp supervisor tree supervisor reliable reliable request response blog cpp req_res rotor event loop friendly actor micro framework codacy feature minimalistic loop agnostic core hierarchical supervisor see various event loop support boost asio plan gtk etc asynchornous message pas interface message cancellation capability mpmc multiple producer multiple consumer message aka pub sub cross platform window macosx linux inspire reactive manifesto reactive sobjectizer performance inter thread message cross thread message message second message second setup intel core 8550u void linux backend independent measure boost asio ping pong single simple ping pong apply backend measure thread ping pong thread boost asio ping pong theads ping pong thread license mit documentation please read tutorial design principle manual changelog mar improvement preliminary support package manager bugfix fix compilation warn window msvc bugfix add miss header rotor thread installation feb improvement superviser create spawner policy auto spawn new actor instance previous instance shutdown similar escalate_failure supervise see dedicate improvement actor autoshutdown_supervisor shutdown improvement actor escalate_failure trigger shutdown supervisor finish failure improvement message delivery order preseverd per locality see issue thread ping pong spawner new autoshutdown new escalate failure new documentation update design principe documentation update documentation update introduction dec improvement performance improvement inter thread cross thread message bugfix supervisor shut self rare condition fail initialize self bugfix link_server plugin ignore unlink_notifications bugfix avoid cycle memleak rare case supervisor shutdown external message arrive process dec improvement add static_assert noexcept check hanler signature improvement add mirror bugfix fix potential free backend oct bugfix fix installation issue cmake thank melpon bugfix fix miss header thank melpon drop travis sake circle aug improvement significant message throughtput increase std thread boost asio backends upto time improvement extended_error access root reason improvement delivery plugin debug mode dump discovery request response improvement break detail fatal error system_context thread ping pong thread cpp new ping pong thread new apr bugfix lifetime_plugin_t unsubscribe foreign subscription bugfix foreigners_support_plugin_t safely deliver message foreign subscriber actor feb dedicate article highlight improvement actor identity introduce configure generate via address_maker plugin improvement actor do_shutdown optionally take shutdown reason improvement break instead std error_code extended_error class wrap std error_code provide string context pointer next extended_error greatly simplfies error track error every response contain field instead improvement actor shutdown reason form extended_error pointer improvement delivery plugin debug mode dump shutdown reason shutdown trigger message improvement actor identity on_unlink method get know unlinked server actor improvement add resource plugin supervisor break response extended_error pointer instread std error_code break shutdown_request_t shutdown_trigger_t message shutdown reason form extended_error pointer bugfix link_client_plugin_t invoke custom callback erase request case failure bugfix child_manager_plugin_t reactivate self child create plugin bugfix registy actor incorrectly resolve postpone request wrong address dec improvement delivery plugin debug mode dump discard message break state_response_t remove bugfix allow acquire release resource via resources_plugin_t plugin configuration bugfix foreigners_support_plugin_t deactivate self properly cause assertion fail supervisor shutdown foreign subscription bugfix link_client_plugin_t notify link server actor actor shutdown server actor request unlink bugfix starter_plugin_t sometimes crash subscription confirmation message arrive actor non initialize phase shut bugfix root supervisor shutdown properly link server dec improvement add std thread backend supervisor bugfix active timer cancel upon actor shutdown finish bugfix supervisor shutdown message lose rare case right child actor start thread sha512 cpp new documentation update event loop platform documentation update pattern block multiplexing deprecate state_response_t state_request_t remove nov improvement supervisor shut self due child init failure supervisor init error failure escalation documentation update advance bugfix actor shut self timer properly cancel bugfix rare case supervisor start event child fail init bugfix asio correct timer cancellation bugfix correct shutdown avoid memory leak rare case nov improvement break generic timer interface improvement request cancellation support improvement add make_response method message create send late delay improvement debug information message delivery plugin documentation integration event loop documentation request cancellation timer demonstrate advance doc section boost asio ping pong timer cpp new boost asio beast scrapper cpp update bugfix avoid double configuration plugin certain case interact resource plugin bugfix correct cmake installation thank jorge lopez tello ltdjorge oct dedicate article highlight improvement rewrite whole documentation improvement break plugin system introduce actor instead behavior improvement actor_config_t introduce hold pointer supervisor init shutdown timeouts improvement builder pattern introduce simplify actor construction break supervisor_config_t change inherit actor_config_t break actor_base_t supervisor_t constructor change appropriate config take single parameter descendant class change break custom config type actor supervisor define config_t inside class templated config_builder_t break supervisor actor accessibe via pointer instead refence bugfix supervisor_ev_t always correctly release resource lead leak bugfix actor_base_t shutted properly even start yet apr bugfix message argument correctly forward bugfix actor argument correctly forward actor creation rotor supervisor_t rotor asio supervisor_asio_t bugfix rotor asio forwarder_t correctly dispatch boost asio event actor method work correctly async_accept method socket_acceptor apr improvement modern cmake usage nov improvement registy actor add allow via name address runtime match service discovery improvement break minor change supervisor behavior consider initialied child confirm initialization improvement supervisor_policy_t introduce control supervisor behavior child actor startup failure pong registry cpp registry doc pattern registry add sep improvement response inherit rotor arc_base allow forward request without copy intrusive pointer create boost asio beast scrapper cpp add demonstrate app pool actor worker request response forward sep improvement request response approach integrate support basic reliable message response notification failure deliver expect response arrive time improvement lambda subscribiers support improvement actor behavior introduce offload actor interface break supervisor construct help supervisor_config_t contain shutdown timeout value break supervisor spawn timeout timer overall shutdown procedure instead per child timer spawn root supervisor way monitor child supervisor shut break supervisor create_actor method take child max init time value confirm child actor ask shut break shutdown request send child actor timeout track supervisor message type change message shutdown_request_t break init request send child actor timeout track supervisor message type change message init_request_t break actor state request message type message state_request_t follow generic request response pattern response type message state_response_t break asio supervisor configs rename correspond suffix aug improvement locality notion introduce lead possibilty superving tree see blog cpp supervisor break outbound field rotor supervisor_t rename queue break rotor address_t contain const void locality break rotor asio supervisor_config_t contain std shared_ptr strand instead create private strand supervisor bugfix redundant do_start method rotor supervisor_t remove since supervisor able start self compliting initialization bugfix rotor supervisor_t send initialize_actor_t self advance state initialize via common actor mechanism instead change state directly early initialization phase do_initialize bugfix rotor asio forwarder_t correctly dispatch boost asio event actor method bugfix rotor supervisor_ev_t properly handle refcounter aug add libev support jul initial version
C C++;https://github.com/Microsoft/DirectXTK;directx directx tool kit directx copyright microsoft corporation march package contain directx tool kit collection helper class write direct3d universal window platform uwp apps window window xbox win32 desktop application window service pack late design visual studio visual studio late visual studio clang window v11 late window may update sdk late require component design work without require content legacy directx sdk detail see directx directory layout inc public header directx namespace audio low level audio api xaudio2 directxtk audio public header bufferhelpers helper create d3d resource cpu commonstates factory provide commonly d3d state object ddstextureloader light weight texture loader directxhelpers misc helper d3d program effect set shaders common render task gamepad gamepad controller helper xinput geometricprimitive draw basic shape cub sphere graphicsmemory helper manage dynamic graphic memory allocation keyboard keyboard state track helper draw mesh load cmo sdkmesh vbo mouse mouse helper postprocess set shaders common post process operation primitivebatch simple efficient way draw user primitive screengrab light weight screen shoot saver simplemath simplify wrapper directxmath spritebatch simple efficient sprite render spritefont bitmap base text render vertextypes structure commonly vertex format wictextureloader wic base image texture loader xboxddstextureloader xbox exclusive apps variant ddstextureloader src directxtk source internal header audio directxtk audio source internal header makespritefont command line tool generate binary resource spritefont xwbtool command line tool xact style wave bank directxtk audio wavebank class documentation documentation available github notice content source package subject term mit late version directxtk bug report etc please visit project site release note march release legacy xbox xdk support require xdk april release late october release dgsleffect long directly support skin instead make skinneddgsleffect derive dgsleffect august release makespritefont require net version target pack instal optional individual component net framework development tool microsoft net component targetingpack start june release library make type enum bitmask per recommendation standard_ section bitmask type may break change impact client pas literal flag value instead must make appropriate default enum value audioengine_default soundeffectinstance_default modelloader_clockwise wic_loader_default enum type instead dword flag value locally bitmask operation uwp project win10 classic desktop project include configuration arm64 platform require update late arm64 toolset instal clang llvm arm64 platform window sdk require compileshaders cmd script must window style crlf line end change linux style line end fail require shaders support question consider stack directxtk tag directx discord dx9 dx11 developer channel bug report feature request please github project contribute project welcome contribution suggestion contribution require agree contributor license agreement cla declare right actually grant right contribution detail visit submit pull request cla bot automatically determine whether need provide cla decorate appropriately status check comment simply follow instruction provide bot need across repos cla project adopt microsoft open source information see conduct contact opencode microsoft com mailto opencode microsoft com additional question comment trademark project may contain trademark logo project product service authorize microsoft trademark logo subject must follow microsoft trademark brand microsoft trademark logo modify version project must confusion imply microsoft sponsorship third party trademark logo subject third party policy credit _directx tool kit_ work shawn hargreaves chuck walbourn contribution aaron rodriguez hernandez dani roman thank shanon drone sdkmesh format thank adrian tsai geodesic sphere thank garrett serack help create nuget package directx tool kit thank roberto sonnino help cmo dgsl render starter kit animation thank pete lewis justin saunders normal map pbr shaders
C C++;https://github.com/FidoProject/Fido;fido mit join chat fido lightweight highly modular machine library embed electronics robotics fido especially suit robotic embed context write minimal standard library come package robotic simulator provide easy interface write robotic driver check project information library adapt universal robot control author fido library primarily develop michael joshua help develop fido robotic simulator commit schematic decouple research michael perform together beta status library beta couple project api may still change backward incompatible way definetly bug contribute send pull request look thing check repo open issue find bug trouble library please open issue happy help
C C++;https://github.com/CppCon/CppCon2014;cppcon speaker material canonical location presentation cppcon single presentation github single presentation navigate folder contain presentation click presentation filename click view raw link near bottom page speaker submit material submit material email speaker cppcon org mailto speaker cppcon org link attachment small possible please submit slide pdf format allow wide group people read easily possible may also submit powerpoint ppt pptx zip folder contain keynote html question email speaker cppcon org mailto speaker cppcon org ask source zip tar fine please include large please ensure distribute cppcon public may mark place public domain include suitable license bsd mit apache lgpl gpl rely ensure license appropriately help make job easy please name slide follow presentation title speaker name cppcon bjarne stroustrup keynote slide would name make simple task simple bjarne stroustrup cppcon worry name archive unzip
C C++;https://github.com/CGAL/cgal;cgal installation doc_html image cgal_2013_grey png computational geometry algorithm library cgal library aim provide easy access efficient reliable algorithm computational geometry cgal release primary vector distribution cgal source tarballs release twice year announce web site get start cgal since version cgal header library mean long need cgal library head cgal usage guide tutorial get start smoothly license see license license cgal git repository layout git repository cgal different layout release tarballs contain cmakelists txt serve anchor configure program set subfolders call package package implement structure algorithm cgal convex_hull_2 triangulation_3 however package serve special need installation meta cmake support maintenance infrastructural support core cgalimageio qt_widget graphicsview component library script script simplify developer user work testsuite infrastructure testsuite documentation infrastructure cgal manual stl_extension extension standard template library information cgal web late cgal release documentation late cgal master documentation page update cgal daily testsuite guideline cgal information new
C C++;https://github.com/bytedeco/javacpp;javacpp maven sonatype nexus commercial support introduction javacpp provide efficient access native inside java unlike way compiler interact assembly language need invent new language instead similar strive exploit syntactic semantic similarity java hood jni work java addition instruction instruction android avian robovm specifically compare approach elsewhere platform lwjgl panama etc map naturally efficiently many common feature afford language often consider problematic include overload operator class function template callback function pointer function object aka functors virtual function member function pointer nest struct definition variable length argument nest namespaces large structure contain arbitrary cycle virtual multiple inheritance pas return value reference string vector anonymous union bite field exception destructors share unique pointer via either try resource garbage collection documentation comment obviously neatly support whole would require work although could argue intrinsic neatness release proof concept case point already produce complete interface opencv ffmpeg libdc1394 pgr flycapture openkinect videoinput artoolkitplus leptonica tesseract gsl llvm hdf5 mkl cuda caffe mxnet tensorflow system apis others part javacpp subproject also demonstrate early parse capability header show promise useful please feel free ask question mail discussion encounter problem software sure far perfect archive contain jar available also everything instal automatically maven inside pom xml gradle inside gradle leiningen inside project clj sbt inside sbt another option available gradle user gradle similarly scala user require software javacpp need follow software java new openjdk oracle jdk ibm jdk compiler test gnu compiler linux etc window x86 x64 llvm clang mac etc microsoft compiler part visual studio produce binary android new also android ndk new similarly target need either gluon robovm new modify source please note project create maven finally deal native bug easily crash virtual machine luckily hotspot provide tool help debug circumstance troubleshoot guide java hotspot get start understand javacpp mean first take look map recipe high level overview basic also available understand big picture repository javacpp provide complex template also include wiki page create new explain structure detail along small complete sample project start experiment key case implement native method javacpp generate appropriate jni pas compiler native library point need get hand dirty jni makefiles native tool important thing realize customization inside java language annotation javacpp produce overhead compare manually cod jni function verify generate cpp convince moreover runtime loader load method automatically load native library java resource place right directory process even archive jar change nothing user simply need figure make system load characteristic make javacpp suitable either access native apis access native apis complex type complex type optimize performance optimize performance create callback function create callback function addition provide feature tool please refer map recipe well source javacpp information api may refer documentation generate matter course work scala language well make process even smooth hard add support native property declaration like native var could generate native getter setter method access native apis common case involve access native library write inside name nativelibrary contain class get job javacpp easily define java class although could parser produce header demonstrate javacpp subproject follow principle outline map recipe compile java source usual way also need javacpp execute let everything follow complex type demonstrate relative ease even face complex type imagine function take vector argument support type could define bare bone class like execute program command produce follow output optimize performance time may wish include cuda performance reason suppose profiler identify method name processor process take program execution time many day hard work sweat engineer figure hack manage make ratio drop know manager still satisfy could try rewrite even assembly language matter via inline assembler place function name say processor adjust java source something like would compile execute like create callback function application also require way call back jvm javacpp provide simple way define custom callback either function pointer function object virtual function although exist framework arguably hard map complete java apis since invoke java method native take least order magnitude time way around make much sense opinion export api design java nevertheless suppose want perform operation java plan wrap function name foo call method inside class foo write follow name foo cpp take care initialize jvm necessary either javacpp_init mean may declare function call apply method define functionpointer follow since function also pointer functionpointer instance accordingly way similar funptr type haskell java lang throwable object throw get translate std exception sample command linux x86_64 produce expect output functionpointer object get create implicitly call native function pointer could define instead contain native call apply method create instance explicitly class also extend java create callback like normal pointer object must allocate native void allocate method please remember hang reference java get garbage collect bonus functionpointer call apply map fact overload operator function object pas function annotate parameter byval byref sort function also possible thing virtual function whether pure consider follow class define name foo function foo bar override java declare method peer class either native abstract annotate virtual output would naturally assume instruction android avian robovm easy get work avian compile openjdk class library let start create program describe without modification directly execute command however case android need bite work command line system base ant inside directory project copy javacpp jar libs subdirectory command produce library libs armeabi make everything automatic may also insert command xml alternatively integration android studio gradle similarly robovm assume compile class class subdirectory copy javacpp jar project directory follow command produce native binary instead loader load library load system load lib case might require project lead samuel audet samuel audet gmail com mailto samuel audet gmail com developer site discussion group
C C++;https://github.com/SRombauts/SQLiteCpp;sqlitec travis linux travis linux status appveyor window appveyor window status github action githhub action status coverall test coverage coverity scan status join chat sqlitec sqlitecpp smart easy sqlite3 wrapper sqlitec sqlitec offer encapsulation around native apis sqlite intuitive well document class license copyright sebastien rombauts sebastien rombauts gmail com distribute mit license mit see accompany license txt copy note redistribution sqlite source state mit license welcome reuse modify redistribute sqlitecpp source way want git submodule subdirectory selection source would love mention readme web link sqlite repository mention author none mandatory sqlite underlie library sqlite library implement serverless transactional sql database engine widely deploy sql database engine world documentation sqlite dedicate public domain author goal sqlitec offer best exist simple sqlite wrapper elegantly write good design stl exception raii idiom keep dependency minimum stl sqlite3 portable light fast thread safe much sqlite multi thread mode see good unit test coverage api name stick sqlite library well document doxygen tag good well maintain permissive mit license similar bsd boost proprietary commercial usage design resource acquisition initialization raii idiom see throw exception case sqlite error except destructors assert instead sqlitec object must construct valid sqlite database connection always valid destroy support platform require compiler branch late pre development development test follow ubuntu travis window window server window server appveyor travis github action valgrind memcheck tool follow ides compiler gcc clang xcode visual studio community appveyor dependency modern stl gcc clang visual studio exception support class exception inherit std runtime_error sqlite library minimum either link dynamically statically libsqlite3 dev package debian ubuntu mint linux add source project base source provide src sqlite3 window sqlite_enable_column_metadata macro define see get start installation wrapper need add sqlitec source src directory project base compile link sqlite library easy way add wrapper library cmakelists txt define static library provide root directory simply add_subdirectory sqlitecpp main cmakelists txt link sqlitecpp wrapper library linux thus sqlitecpp repository directly git submodule see side repository standalone scratch debian ubuntu mint linux libsqlite3 dev package want embed sqlite3 library unit test git clone repository init update submodule googletest sqlitecpp system wide installation instal package system sqlitecppconfig cmake generate instal system let link sqlitecpp library cmake project cmakelists txt cmake test cmake configuration also provide multi platform support test typical generic visual studio window bat bat generate linux makefile debug execute test cmake option option customize see troubleshoot linux get multiple linker error like undefined reference sqlite3_xxx lack sqlite3 library libsqlite3 dev package get single linker error column cpp undefined reference sqlite3_column_origin_name sqlite3 library compile sqlite_enable_column_metadata macro define see either recompile seek help online comment follow line src column continuous integration project continuously test ubuntu linux gcc clang compiler travis community service cmake test procedure also test way window server visual studio compiler appveyor continuous integration service detail see online thread safety sqlite support mode thread safety describe sqlite multiple thread see sqlitec wrapper add lock mutexes thread safety mechanism sqlite library design lightness speed thus sqlitec naturally support multi thread mode sqlite mode sqlite safely multiple thread provide single database connection simultaneously thread sqlitec support fully thread safe serialize mode sqlite way share underlie sqlite precompiled statement custom share pointer see inner class statement ptr first sample demonstrate query database get second sample show manage transaction handle assertion sqlitec exception shall destructors sqlitec sqlitecpp_assert check error destructors want assert call enable define assert handler show set flag sqlitecpp_enable_assert_handler compile lib contribute github website efficient way help contribute wrapper project tool provide github please fill bug report feature request fork repository make small change submit pull request contact also email directly try answer question request whenever get time cod style guideline source camelcase name style variant type name class struct typedef enums begin capital letter cpp name like class contain function variable name begin low case letter member variable begin function argument begin booleans pointer class method member variable document doxygen tag brace line see also good guideline see also simple sqlite wrapper see bellow short comparison wrapper time write raii design simple dependency utf utf new bsd license boost modern design lpgpl modern design inspire boost mit license boost system boost license famous project old design bsd license manage table structure object complex modern mit license modern header raw string query bsd license
C C++;https://github.com/moderngpu/moderngpu;moderngpu moderngpu productivity library general purpose compute gpus header library write cuda unique value library accelerate primitive solve irregularly parallel problem sean drop line mailto moderngpu gmail com full documentation github heavy construction quick start guide cite
C C++;https://github.com/NativeInstruments/ni-media;medium medium library read write audio stream develop native motivation goal modern library deal audio stream idiomatic style modern clear separation concern modular instead fat class support range iterators idiomatic base std stream integrate well stl algorithm boost follow demonstrate stream entire audio vector component audiostream audiostream readme main library read write audio stream pcm pcm readme small library convert type dependency algorithm endian filesystem format icl iostream local program option regex system flac support cmake option nimedia_enable_flac_decoding ogg vorbis support cmake option nimedia_enable_ogg_decoding test cmake option nimedia_tests platform medium require compliant compiler currently support test platform window require visual studio update high mac require xcode clang high require xcode clang high linux require gcc high clang high also work first boost filesystem iostream system program option path dependency optionally codecs want configure medium version high require specific codecs enable disable pas additional cmake option audiostream doc ifstream medium test require test need instal path dependency unit test enable cmake option nimedia_tests test reference test need execute test contribution much appreciate contribution want contribute please get touch maintainer marc nathan moritz please provide clang format possible add test open pull request
C C++;https://github.com/fenbf/AwesomePerfCpp;content talk talk article article sit blog sitesblogs tool tool library library book book talk native andrei alexandrescu write quick native stephan lavavej rand consider native sean parent dive conference scott meyers cpu cache cppcon andrei alexandrescu optimization tip hustle cppcon mike acton orient design cppcon chandler carruth efficiency algorithm performance dive conference andrei alexandrescu write fast dive conference andrei alexandrescu write fast cppcon chandler carruth tune benchmark cpu compiler cppcon bryce adelstein lelbach benchmarking meet understand compiler optimization chandler carruth open accu fastware andrei timur doumler performance practice align vectorise cache david stone exceptional jason turner practical performance cppcon timur doumler want fast know hardware cppcon jason turner practical performance practice cppcon chandler carruth high performance hybrid structure cppcon mckenney beyond issaquah challenge high performance scalable complex cppcon dechev zhang high performance concurrent transactional cppcon matthew bentley colony performance care cppcon christiaan pretorius cache optimize hash table cppcon tim haines improve performance compiler switch article optimization tip andrei alexandrescu facebook engineer gnu grep hash function way ara follow cpu multiple cache etw randomascii micro benchmarking library bartek blog start software flexible particle experiment series bartek blog take advantage cache coherence gallery processor cache effect beat stl binary benchmark std vector std list container associative container performance core guideline performance best practice performance normal performance odd gprof valgrind gperftools evaluation tool application level cpu profile performance api papi roofline performance time strategy compare window baremetalcode blog simply complex orient design guide openmp easy multithreading program optimization bibliography kurt manual intel architecture optimization reference sit blog agner cpu agner software optimization ryg random every computer performance supercomputing daniel lemire wojciech mula site 0x80 article performance bartek program tool free amd window performance toolkit performance diagnostic tool visual studio tau performance google performance tool linux perf nvidia visual qualcomm snapdragon oracle solaris studio performance linux pay intel intel vectorization thread aqtime pro high performance window heap handle allocation profiler library celero micro benchmarking nonius hayai micro benchmarking google benchmark book pdf optimize agner fog free optimize free software optimization cookbook high performance recipe platform 2nd edition video game optimization eric preisz optimize prove technique heighten performance kurt guntheroth power performance software analysis optimization jim kukunas system performance enterprise cloud brendan gregg every computer performance book bob wescott concurrency action second edition anthony williams list start bartlomiej filipek like help please read contribute instruction make pull request repo license creative common work license creative common attribution international
C C++;https://github.com/datenwolf/linmath.h;linmath small library linear math require computer graphic linmath provide type require program computer graphic vec3 element vector float vec4 element vector float 4th component homogenous computation mat4x4 element matrix computation column major order quat quaternion type deliberately name like type glsl fact mean client side computation pas type glsl uniform
C C++;https://github.com/MariadeAnton/MiLi;mili set minimal library compose header copyright daniel gutson fudepan see online documentation new version issue track note adaptation original library enable biicode github repository link biicode repository link basic usage copy content include directory header include mili want enclose mili class mili namespace define mili_namespace library define disable inclusion platform_detection no_platform_detection bitwise_enums no_bitwise_enums promotion_disable no_promotion_disable prepos_caller no_prepos_caller delete_container no_delete_container factory no_factory invariant no_invariants type_mapper no_type_mapper property no_properties string_utils no_string_utils container_utils no_container_utils stream_utils no_stream_utils arith_utils no_arith_utils binary_streams no_binstreams loop_unrolling no_loop_unrolling compile_assert no_compile_assert template_info no_template_info coroutines no_coroutines fast_list no_fast_list ranker no_ranker variants_set no_variants_set random_gen no_random_gen generic_exception no_generic_exception raii no_raii auto_array no_auto_array metaprogramming_utils no_metaprogramming_utils license_text no_license_text might want copy include include directory script sudo include send comment info fudepan org thank fudepan team
C C++;https://github.com/facebook/infer;infer static analysis tool java objective infer write installation read get page detail package version infer infer source see contribute see contribute contribute license infer mit license note enable java support may require component license gpl
C C++;https://github.com/memononen/nanovg;project actively maintain nanovg nanovg small antialiased vector graphic render library opengl lean api html5 canvas api aim practical fun toolset scalable user interface visualization screenshot screenshot text render witht sample program screenshot png raw true usage nanovg api loosely html5 canvas api know canvas speed nanovg time create draw context draw context create platform specific constructor function opengl back end context create follow first parameter define flag create renderer nvg_antialias mean renderer adjust geometry include anti aliasing msaa omit flag nvg_stencil_strokes mean render good quality render overlap stroke quality mostly visible wide stroke want speed omit flag currently opengl back end nanovg nanovg_gl src nanovg_gl opengl opengl opengl core profile opengl choose define see header info note render target render must stencil buff draw shape nanovg draw simple shape nanovg consist step begin new shape define path draw set fill stroke finally fill stroke path call nvgbeginpath clear exist path start draw blank slate number number function define path draw rectangle round rectangle ellipse common moveto lineto bezierto arcto api compose path step step understand composite path way render backend nanovg draw composite path path consist multiple path define hole fill bite involve nanovg even odd fill rule default path wind counter clockwise order keep mind draw low level draw api order wind predefined shape hole call nvgpathwinding nvg_hole nvgpathwinding nvg_cw _after_ define path render wrong make sure create nanovg context nvgcreatexxx call make sure initialise opengl stencil buff make sure clear stencil buff make sure render call happen nvgbeginframe nvgendframe enable check opengl error add nvg_debug flag nvgcreatexxx problem still persist please report issue opengl state touch backend opengl back end touch follow state texture upload update follow pixel store set default gl_unpack_alignment gl_unpack_row_length gl_unpack_skip_pixels gl_unpack_skip_rows texture bind also affect texture update happen user load image new font glyph add glyph add need call nvgbeginframe nvgendframe whole frame buff flush nvgendframe follow illustrate opengl state touch render api reference see header nanovg src nanovg api reference port dx11 chris metal olli bgfx branimir project nanovg process api simulation nanovg net invoke license library license zlib license license txt font roboto license apache entypo license noto emoji license sil open font license version discussion nanovg mail link optionally font render image load
C C++;https://github.com/renatoGarcia/icecream-cpp;icecream cpp badge link license badge license link icecream cpp little single header library help print debug forward try content nix nix conan conan usage usage return value icecream apply macro return value icecream apply macro output format output format format string syntax format string syntax configuration configuration enable disable enabledisable output output prefix prefix show_c_string show_c_string line_wrap_width line_wrap_width include_context include_context context_delimiter context_delimiter print logic print logic string string pointer like type pointer like type iterable type iterable type tuple like type tuple like type optional type optional type variant type variant type exception type exception type standard layout type standard layout type clang pitfall pitfall similar project similar project icecream cpp execution inspection cod instead print something like test cpp void my_function int double test cpp void my_function int double also variable inspection like simplify print sum library inspire aim behave identical possible original library icecream cpp header library stl dependency direct way copy icecream hpp header inside project properly system wide together cmake project icecream cpp project root directory nix commit version master branch instal archive tar could tag commit hash master branch instance master head commit environment wide specific commit nix pkgs variable evaluate nixpkgs conan release version available usage cmake add instal directory include path list include icecream hpp header source name test cpp macro define call argument print prefix default source name current line number current function signature print test cpp void my_function int double call argument print prefix argument name value print bla functionality icecream cpp library implement macro ic_ output format ic_a return value icecream apply macro ic_a_ output format return value icecream apply macro call argument macro return void call argument return argument call multiple argument return tuple way inspect function argument call point change create myclass instance pas my_function exactly macro my_function keep receive rvalue reference myclass object approach however practical function many argument besides write time macro print output split distinct line something like unfortunately wrap argument single call work return value std tuple my_function expect argument work around ic_a macro ic_a behave exactly macro receive function callable actually first argument call function follow argument print last rewrite time print ic_a return value return callable behave exactly print value output format possible configure value must format print follow print 0x2a 0x14 output format configuration wrap format string value function icecream like print 0x0014 0x001e format string apply value macro call ic_ macro shortcut icecream rewrite ic_ configure format ic_a return value icecream apply macro macro macro ic_a_ like ic_a receive format string first argument print 0xa 0x14 format string syntax adopt format string strongly base stl follow syntax fill align fill character char presence fill character signal character follow must alignment option mean alignment option follow symbol mean leave align within available space right align within available space default internally align fill character place digit either base sign apply integer float point note unless minimum field width define field width always size fill alignment option mean case sign sign option valid number type follow symbol mean sign nonnegative well negative number sign negative number default cause alternate form conversion alternate form define differently different type option valid integer float point type integer binary octal hexadecimal output option add prefix respective output value whether prefix low case upper case determine case type specifier prefix type float point number alternate form cause conversion always contain decimal point character even digit follow normally decimal point character appear conversion digit follow addition conversion trail remove width decimal integer define minimum field width specify field width determine content precision precision decimal number indicate many digit display decimal point float point value format decimal point float point value format non number type field indicate maximum field size word many character field content precision allow integer character boolean pointer value note string must null terminate even precision specify type determine present available integer presentation type symbol mean would decimal integer output number base octal format output number base hex format output number base low case letter digit option type add prefix output value hex format output number base upper case letter digit option type add prefix output value available presentation type float point value symbol mean hexadecimal float point format print number base prefix low case letter digit indicate exponent except upper case letter prefix digit indicate exponent exponent notation print number scientific notation letter indicate exponent exponent notation except upper case separator character fix point display number fix point number fix point convert nan nan inf inf general format give precision round number significant digit format either fix point format scientific notation depend magnitude precision treat equivalent precision general format except switch number get large representation infinity nan uppercased configuration icecream class internally implement singleton configuration change unique object share across program thread configuration view accessor method icecream object allow method chain idiom set method return reference object simplification purpose follow icecream statement presume enable disable enable disable output macro enable default set print output set serialize textual print default print standard error output std cerr set type class inherit std ostream class method push_back char output iterator accept operation instance print output str string warn icecream class take property argument care must take user keep alive prefix text print output set string nullary callable return object overload operator ostream number instance print prefix concatenation element set print show_c_string control char variable interpret null terminate string true pointer char false default value true get set print line_wrap_width maximum number character output break multiple line default value get set include_context context source name line number function name print even print variable default value false get set context_delimiter string separate context text variable value default value get set print logic print type precedence overload function operator ostream always available exception rule string string std string std string_view char bound array string enclose char enclose array consider iterables rather let decay raw pointer general overload operator ostream available type call compile error exception rule icecream cpp print type even without operator overload discus note however even user implement custom operator ostream take precedence instead string string ambiguous char foo variable interpret pointer single char null terminate string likewise char bar variable array single character null terminate string char baz array single character string size plus interpretation foo bar baz would print distinct way output correct distinct interpretation flavor variable icecream cpp policy handle bound char array array know size array single character print unbounded char array array unknown size decay char pointer print either string pointer configure show_c_string show_c_string option pointer like type std unique_ptr boost scoped_ptr type print like usual raw pointer std weak_ptr boost weak_ptr type print address valid expire otherwise print iterable type type instance follow operation valid type define iterable overload operator ostream item print instead print tuple like type std pair std tuple type variable print element print optional type std optional type variable print value nullopt otherwise print variant type std variant boost variant2 variant type variable print value print exception type type inherit std exception print return std exception method beyond inherit boost exception response boost diagnostic_information also print print standard layout type clang exception see issue clang standard layout compatible structs roughly speak printable even without operator ostream overload print pitfall preprocessor macro care must take argument comma argument comma must enclose parenthesis work print something like sum also since preprocessor macro cause conflict identifier change macro long icecream define icecream_long_name inclusion icecream hpp header compiler work fine standard require least argument call variadic macro handle nullary macro ic0 icecream0 define alongside icecream similar project library focus print readable type name support print variable name value alongside type badge link license badge license link
C C++;https://github.com/edenhill/librdkafka;librdkafka apache kafka client library copyright magnus librdkafka library apache protocol provide producer consumer admin client design message delivery reliability high performance mind current figure exceed million msg second producer million msg second consumer librdkafka license clause bsd license kafka register trademark apache software foundation license librdkafka librdkafka affiliation endorse apache software foundation feature full exactly semantics eos support high level producer include idempotent transactional producer high level balance kafkaconsumer require broke simple legacy consumer admin client compression snappy gzip lz4 zstd support gssapi kerberos sspi plain scram oauthbearer support full list support kip introduction support kip broke version support see broke version compatibility introduction broke version compatibility guarantee api stability apis abi safety guarantee statistic statistic metric debian package librdkafka1 librdkafka dev debian ubuntu rpm package librdkafka librdkafka devel gentoo package dev libs librdkafka portable linux macos window solaris freebsd aix documentation public api header src rdkafka header src cpp rdkafkacpp introduction manual configuration property statistic metric frequently ask step step tutorial get start apache kafka note master branch actively develop late production installation instal prebuilt package mac osx librdkafka homebrew debian ubuntu librdkafka confluent apt repository see instruction librdkafka redhat centos fedora librdkafka confluent yum repository instruction librdkafka window reference nuget package visual studio project platform follow source instruction instal librdkafka vcpkg librdkafka dependency manager librdkafka package vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository source requirement gnu toolchain gnu make pthreads zlib dev optional gzip compression support libssl dev optional ssl sasl scram support libsasl2 dev optional sasl gssapi support libzstd dev optional zstd compression support note static link zstd require zstd producer enable encode original size compression frame header speed consumer static_lib_libzstd path libzstd configure enable static enable static zstd link macosx static_lib_libzstd brew zstd grep libzstd configure enable static configure automatically dependency system package manager configure deps dependency source configure deps source deps make sudo make note see readme win32 readme win32 instruction window microsoft visual studio note see cmake instruction package cmake readme experimental cmake unsupported usage see get start apache kafka basic tutorial refer directory producer basic producer idempotent producer transactional producer consumer basic consumer read batch message performance latency test tool refer github connect cloud stream service base apache kafka link program lrdkafka lrdkafka commercial support commercial support available confluent community support late official support community member bug report feature request github question discussion welcome forum confluent community client channel language bind net base common lisp like like erlang haskell kafka conduit avro schema registry lua node ocaml perl php php ruby ruby rust tcl apache kafka command line tool swift see power incomplete list librdkafka user
C C++;https://github.com/walkerje/C-Turtle;turtle try turtle port turtle facility intent close analog package develop intent student usage academic set design easy possible package release mit license accordingly give intend education orient package ease setup process create header simply copy cturtle hpp alongside cimg hpp include path project ready package heavily display draw function must available include path alongside cturtle turtle cturtle either work prefix nod single dependency project cturtle quickly become preference reference name header cturtle hpp whereas turtle originally though proper name time progress spell become synonymous mean direct comparison follow table contain exact thing turtle turtle include cturtle hpp namespace cturtle int main int argc char argv turtlescreen scr turtle turtle scr turtle speed ts_slowest turtle fillcolor purple turtle begin_fill int turtle forward turtle right turtle end_fill scr bye return import turtle turt turtle turtle turt fillcolor purple turt speed slow turt begin_fill range turt forward turt right turt end_fill turt bye headless mode turtle also support draw animate gif instead display headless configurable headless preprocessor definition see follow write gifs turtle wonderful public domain gif library create jon olick avoid imagemagick dependency cimg default save animate gifs headless mode turtlescreen functionality relate input background image remove due lack display receive event notification lack guarantee safely usable filesystem load image work assumption filesystem safe save however headless mode take long save gif frame add gif every change state turtle include rotation pen change size change etcetera choose display every frame thus save every frame take advantage tracer setting see function turtlescreen documentation dramatically reduce size write time exchange frame image headless mode print html base64 default headless mode develop intention embed web application namely runestone textbook print html display execute print base64 encode version gif let cturtle easily embed without need extra trick external kind backend disable inclusion cturtle derivative work package alongside cturtle find directory root repository many derive runestone interactive textbook sierpinski triangle knight tour multiple turtle recursion tree others koch fractal derive berea college coursework manually convert headless knight koch koch fractal recursive recursive sierpinski multiple derivative work follow work share permission creator mark liu university kentucky fantastic game voice control play provide particularly interest change command line button base interface connect voice control connect voice control tic tac toe student work showcase time progress afford opportunity provide visual work student library none produce work turtle generation however permission give post work artwork generate style piet mondrian part assignment recursion azis toktobaev berea college mondrian art bryar frank berea college mondrian art karina agliullova berea college mondrian art
C C++;https://github.com/oatpp/oatpp;img alt join chat oat news tada welcome new oatpp version good ever see detail tada oat modern web framework fully load contain necessary component effective production level development also light small memory footprint start get support late benchmark million contribute oat contribute join community talk oat developer oat user follow oat twitter follow oat subreddit stackoverflow post question quick overview shortcut oat high level get quick overview oat feature complete crud service userservice oat rest swagger sqlite powerful api document swagger see detail access database keep consistent see oat detail frequently ask question oat name oat something light organic green easily cook consume effort give hint something main area oat application oat many different purpose rest apis embed device microservices highly load cloud application majority case appear iot robotics portable oat theoretically oat easily port everywhere thread stack additional comparably small effort port almost everywhere depend much strip would final binary size see support additional info size minimal oat application 1mb depend std lib oatpp version oat api choose simple async always choose simple api wherever possible simple api develop make clean async api design small specific task high concurrency level serve large number concurrent user user stream large number client websocket chat server purpose simple api rest api rest complete crud service userservice oat rest swagger sqlite rest project retrofit like client wrapper apiclient work websocket feature complete room base chat user client plus server collection oatpp websocket yuv websocket project create yuv image stream v4l device webcam websockets database complete crud service rest swagger sqlite production grade entity service store information postgresql swagger configuration profile project work mongodb oatpp mongo mondule project web service basic crud swagger iot project create philip hue compatible rest api discover controllable hue compatible smart home device like amazon alexa google echo stream http live stream project stream server oat asynchronous api yuv websocket project create yuv image stream v4l device webcam websockets project setup secure connection serve via http microservices consul project consul integration project microservices oat consolidate microservices technique asynchronous api async project asynchronous api handle large number simultaneous connection
C C++;https://github.com/jcupitt/libvips;libvips image process library fuzzing coverity introduction libvips demand drive horizontally image process library compare similar library libvips quickly little libvips license lgpl around cover arithmetic histogram convolution morphological operation frequency filter colour resampling statistic others support large range numeric bite int bite complex image number band support good range image format include jpeg jpeg2000 jpeg tiff png webp heic avif fit matlab openexr pdf svg hdr ppm pgm pfm csv gif analyze nifti deepzoom openslide also load image via imagemagick graphicsmagick let work format like dicom come bind full bind available libvips image process engine sharp sharp ruby others official libvips gui strange combination spreadsheet photo editor package unix like operate system include macos check package manager binary window libvips detail libvips source tarball keep pre bake tarballs untar libvips directory able configure check summary end configure carefully libvips must essential pkg config libglib2 dev libexpat1 dev need dev package format support want basic jpeg tiff support need libtiff5 dev libjpeg turbo8 dev libgsf dev see dependency section full list thing libvips configure configure look compile usual make sudo make default usr local test test suite make check specific test pytest test test suite test_foreign test_tiff libvips git clone late source git clone git github com libvips libvips git git need package need least gtk doc gobject introspection see dependency section brew gtk doc generate system autogen prefix home john vip debug cflags wall cxxflags wall configure prefix home john vip enable debug make make loader libvips number loader saver disable wish configure prefix user john vip without nsgif without ppm dependency libvips libglib2 dev libexpat1 dev dependency optional optional dependency suitable version find libvips add support follow library automatically see configure help set flag control library detection package generally find pkg config make sure work library like nifti pkg config libvips also look default path prefix instal version library different location libvips see switch libvips configure like configure prefix user john vip nifti include opt local include nifti library opt local lib perhaps cflags wall opt local include opt local lib cxxflags wall opt local include opt local lib configure prefix user john vip libjpeg ijg jpeg library turbo version libexif available libvips add support exif metadata jpeg librsvg usual svg loader present vip try load svgs via imagemagick instead pdfium present libvips attempt load pdfs pdfium prebuilt pdfium binary untar libvips prefix vip tar pdfium linux tgz create pdfium like update version number vipshome home john vip cat vipshome lib pkgconfig pdfium eof prefix vipshome exec_prefix prefix libdir exec_prefix lib includedir prefix include name pdfium description pdfium version require libs libdir lpdfium cflags includedir eof pdfium detect libvips look poppler glib instead poppler glib poppler pdf renderer glib api present vip try load pdfs via imagemagick libgsf available libvips add support create image pyramid dzsave libtiff tiff library need support jpeg zip compression 4b037 late know fftw3 libvips find library fourier transform lcms2 present vips_icc_import vips_icc_export vips_icc_transform manipulate image icc profile libspng present libvips load png libspng moment libpng still necessary save libpng libspng present libpng libvips load png libpng always save png libpng libimagequant present libvips write bite palette ised pngs imagemagick optionally graphicsmagick available libvips add support load libmagick support image type magickpackage graphicsmagick graphicsmagick instead imagemagick need module package ims think libvips untrusted image perhaps web server consider security implication enable package large attack surface pangocairo available libvips add support text render need package pangocairo pkg config list orc available vip accelerate operation time compiler matio available vip load image matlab save cfitsio available vip load fit image libwebp available vip load save webp image libniftiio available vip load save nifti image openexr available libvips directly read write sadly openexr image openjpeg available libvips read write jpeg2000 image libjxl available libvips read write jpeg image openslide available libvips load openslide support virtual slide aperio hamamatsu leica mirax sakura trestle ventana libheif available libvips load save heic avif image libheif turn need correct decoder encoders check contributor contributor project exist thank people contribute organization support project organization logo show link website
C C++;https://github.com/charto/nbind;quick start quick start requirement requirement feature feature user guide user guide contribute contribute license license nbind flowchart doc image diagram png doc image diagram png nbind set header make library accessible javascript single include statement compiler generate necessary bind without additional tool library usable node addon compile asm directly web page without plugins nbind work dependency management tool set node gyp compile library without need configuration list source name nbind mit license base template macro inspire quick start everywhere easy step node nbind start point step bind step prepare original include string include iostream struct greeter static void sayhello std string name std cout hello name list class method original add include nbind nbind nbind_class greeter method sayhello add script script autogypi autogypi node gyp node gyp emcc path emcc path copyasm copyasm ndts ndts step step step command line npm save nbind autogypi node gyp npm autogypi init gyp nbind hello compile native binary npm node gyp configure asm npm node gyp configure asmjs call node var nbind require nbind var lib nbind init lib lib greeter sayhello web browser see require copy paste mention prompt take shortcut see note good start point development requirement need new may also work require node gyp see follow compiler gcc clang emscripten visual studio community fine feature nbind allow api javascript without extra effort node electron web browser asm chrome firefox edge linux window without change simply add separate short description end distribute native asm fallback binary automatically generate typescript definition ide autocompletion compile time check javascript side detail export multiple class even visible export method simply mention name auto detect argument return type declaration automatically convert type type conversion structure language call method javascript type check pas javascript callback call type pas instance compatible class value language stack goal provide stable api bind javascript internals relate javascript engine hide away single api already support extremely different platform work platform target development platform linux window native asm test manually dependency npm roadmap come work ongoing precompile single native library version node electron platform precompiled addons different node version efficiently call library provide nbind support native android iphone apps future version remain completely backwards compatible match otherwise minor change break change list release note version equal contribute please report issue github mention platform target node asm electron something else pull request welcome warn rebase within develop feature branch master develop new feature write test first work best possible please try get work node asm otherwise pull request get merge master maintainer fix platform instal emscripten develop asm tricky require set path correctly please refer emscripten bin emcc script package wrapper actual emcc compiler binary path rebuild asm library test follow user guide instal instal create project create project configuration configuration call node call nodejs nbind header nbind header function function class constructor class constructor inheritance inheritance new method property method property overload function overload function new getters setter getters setter pas structure pas structure callback callback object object type conversion type conversion update buff buff new bite integer bite integer new error handle error handle publish npm publish npm ship asm fallback ship asmjs fallback web browser web browser update typescript typescript update bind plain bind plain bind external library bind external library debug debug alternative alternative instal nbind show user guide also available easy test follow extract zip enter directory create project requirement requirement instal nbind autogypi node gyp need compile native node addon source instal distribute asm version save dev instead save user need compile next command without instal globally practical add script section package json npm init generate let add script well emcc path need internally nbind compile asm fix command line option node gypi generate emscripten compiler like leave compile native addons script anyone package call autogypi node gyp compile native addon autogypi npm package information set correct include path compiler need distribute addons npm compiler find header nbind nan package instal user machine initialize like replace hello name source add multiple option source nbind mean nbind multiple option add add package compatible autogypi init gyp command generate bind gyp autogypi json distribute package autogypi node gyp know script ready start write compile configuration refer autogypi set dependency package package include library usable directly asmjs exist configuration option nbind pas node gyp call like node gyp configure asmjs compile package emscripten instead default compiler produce asm output call node first nbind need initialize call nbind init take follow optional argument base path look compile binary default process cwd __dirname good alternative binary export object class api export nbind add member default empty object exist option see asm configure emscripten must follow base path may set null undefined node style callback parameter error present otherwise null binary export object contain class nbind initialize synchronously node asynchronously browser node purely synchronous easy future proof callback also support asynchronous initialization callback pas init currently get call synchronously node asynchronously browser avoid release wrap call promise nbind header possible include nbind api type nbind namespace javascript callback inside include class definition cause depend nbind nbind nbind expose api javascript include class definition avoid accidentally invoke macro header automatically hide target node asm safe project include nbind nbind end source bind header define macro name like construct method may otherwise break conflict header include nbind nbind also target javascript environment node gyp define building_node_extension macro emscripten define emscripten macro undefined include nothing include nbind api header type nbind namespace need report error error handle without throw exception want pas around callback callback object object ifdef nbind_class guard skip nbind export definition header load nbind callback javascript node header instal instal print function function belong class export inside nbind_global block macro call function functionname take name function argument without quotation mark function get export javascript name rename add second argument quotation mark function cppfunctionname jsexportedname function overload multifunction macro must instead see overload function overload function note put several function call line otherwise get error redefine symbol javascript class constructor nbind_class classname macro take name class argument without quotation mark export javascript name follow curly brace enclose block method export function definition class rename javascript side pas string second argument especially useful bind template class specialization reasonable name nbind_class intdata constructor export macro call construct type comma separate list argument constructor int int call construct multiple time allow overload overload must different number argument constructor argument type nbind detect automatically different constructor argument count type javascript node class instal instal print inheritance class inherit another inherit macro allow call parent class method child class pas child class instance method expect parent class instance internally javascript prototype base single inheritance support multiple inheritance simulate nbind parent class child class prototype copy content parent prototype otherwise effect except javascript instanceof operator return true parent class method property method export inside nbind_class block macro call method methodname take name method argument without quotation mark method get export javascript name method overload multimethod macro must instead see overload function overload function property access getter setter function getters setter type method argument return value detect automatically specify note support type type conversion type may cause compiler error difficult understand method static become property javascript constructor function access like classname methodname otherwise become property prototype access like new classname methodname method count cumulative checksum ascii character value string static method process entire array string javascript first call method loop static method return array node method instal instal print serve illustrate pas practice simple calculation fast javascript rather call across language copy quite expensive overload function function method macroes distinguish several overload version function method cause error case multifunction multimethod macroes must second parameter list argument type wrap args macro select single overload version consider overload method bind version need explicitly select second would reference like always return type method constness autodetected call javascript additionally overload need distinct name rename overload javascript see bind like write javascript wrapper inspect argument select overload call reason nbind bind javascript property single function pointer wrap overload version function type conversion otherwise would need generate new function also check argument would large native binary without speed advantage getters setter property getters export inside nbind_class block macro call getter gettername name getter method argument nbind automatically strip get get get_ get_ prefix convert next letter lowercase getx get_x would become getters access like property setter export together getters macro call getset gettername settername work much like getter gettername gettername settername mangle individually pair getx set_x like javascript would call read change property class property getter setter javascript node getset instal instal pas structure nbind support automatically convert javascript array std vector std array type argument return value method note structure memory layout language always get copy take time string array string also get copy character time asm copy twice first temporary space common format language read write callback callback pas method simply add argument type nbind cbfunction declaration call number support type without declare way accept javascript receive parameter javascript variable please callback argument arg call like arg foobar case return value ignore return value need callback must call like arg call foobar type desire type return value convert compiler otherwise know callback might return warn callback currently pas reference free call function return intend synchronous function like array map call callback time return asynchronous function like settimeout call callback return need copy argument new nbind cbfunction store somewhere object object pas javascript different parameter return type reference pointer reference optionally const value note currently pas object pointer node require class copy constructor initialize pointer probably fix late return pointer reference const case call non const method pas non const parameter throw error prevent cause undefined behaviour correspond would even compile pointer reference particularly dangerous pointer may become invalid without javascript notice annoy asm browser give access garbage collector memory may leak pointer become garbage without notice smart pointer support workaround implement pas value value object solve issue base tojs function side fromjs function javascript side receive callback argument call parameter call constructor equivalent type language callback side type nbind cboutput value object pas stack export function nbind move semantics avoid create additional copy way equivalent javascript constructor must register javascript side call bind bind cppclassname jsclassname nbind know type translate class coord value object class objectexample object pas value reference javascript node object instal instal print type conversion parameter return value function call language automatically convert equivalent type javascript number sign char short int long number float double number bignum bite integer sign long long long boolean bool string const unsigned char string std string array std vector array std array function nbind cbfunction parameter see callback callback nbind wrap pointer pointer reference aninstance bind classsee object object instance prototype fromjs method instance bind class tojs method see object object arraybuffer view int arrayor buff nbind buff struct pointer length see buff buff type conversion customizable pas policy additional argument construct function method inside nbind_class nbind_global block currently support policy nbind nullable allow pas null argument class instance expect function receive nullptr nbind strict enable strict type check normally anything javascript convert number string boolean expect function policy require pas exact javascript type instead type conversion policy list method function name buff transfer large chunk language fast type array node buff javascript accessible plain block memory pas nbind buff type method return unsigned char point block memory also see javascript length return length block byte commit copy back javascript need emscripten especially useful pas canvas getcontext getimagedata draw screen bitmap target emscripten electron javascript print bite integer normally bite integer type first convert double javascript number hold bit precision possible preserve bit bignum class constructor take follow argument integer contain bit least important half integer contain bit important half boolean true number negative also fromjs function take callback call argument pas back need also capable print bite number string base error handle nbind_err message macro report error return include nbind api first throw error javascript side environment like emscripten may support throw exception javascript side publish npm make sure package json least require emcc path script dependency section least package also include bind gyp autogypi json ship asm fallback good minimal compile native node addon possible otherwise pre compile asm version temporary directory native asmjs compile version nbind provide binary copyasm copy compile asm library nice location publish inside final npm package note native version compile script user package asm version compile prepublish script get package npm usage without emscripten compiler see package json web browser good minimal also call compile asm inside web browser simple way get nbind work add script html see make sure fix path nbind first line necessary typescript nbind fully type api interact also automatically generate class function give effortless bind compile time type check call javascript node addons asm module compile include ndts tool create type definition way first argument ndts path package root bind gyp typically root correct path load typescript different way first import nbind also load type generate ndts choose favorite way initialize purely synchronous asynchronous aware promise base note type argument init call define type bind lib content come otherwise unknown typescript compiler import type generate ndts disable type class bind like ndts generate follow type additional interface generate case support multiple inheritance extend write typescript open test test typescript ide see generate type action bind plain nbind generate bind template compile time introspection argument return type function method since plain template standard way compiler generate new wrapper type conversion output type information available time easy way nbind write wrapper call nbind map idiomatic javascript class may require manual work since common reinvent new way object orient program usually structs class simulate method pas struct pointer function class method good nbind generate bind mainly library bind external library external library source compile separately library first link node addon library installation script addon intend user extra step easy library globally first best user experience distribute external library together package create actual bind see message get library work debug browser difficult stop debug correct spot optimize nbind provide _nbind_debug function api call invoke browser debugger asm debug node addon would normally test like node test instead gdb node type test gdb prompt case crash show happen inspect stack etc also modify nbind gypi inside nbind src directory possibly bind gyp remove flag instead add flag remove directory recompile allow gdb show much information alternative similar similar author juha jarvi befunge license mit copyright busfaster ltd
C C++;https://github.com/google/marl;marl marl hybrid thread fiber task scheduler write marl library provide fluent interface task across number thread marl combination fiber thread allow efficient execution task block keep fix number hardware thread marl support window macos linux freebsd fuchsia android arm aarch64 mips64 ppc64 rv64 loongarch64 x86 x64 marl dependency library exception googletest optional unit test benchmark graph several microbenchmarks find marl contain many unit test cmake unit test require fetch googletest external project type follow terminal linux macos unit test type follow terminal binary find window marl visual studio cmake marl cmake project link marl add_subdirectory project cmakelists txt define marl library target pas target_link_libraries may also wish specify path third party library marl set follow variable call add_subdirectory usage recommendation capture marl synchronization primitive value marl synchronization primitive aside marl conditionvariable lambda capture value internally primitive hold share pointer primitive state capture value avoid common issue primitive may destruct last reference create instance marl scheduler lifetime process marl scheduler constructor expensive may spawn number hardware thread destruct marl scheduler require wait task complete multiple marl scheduler may fight hardware thread utilization reason recommend create single marl scheduler lifetime process bind scheduler externally create thread order call marl schedule scheduler must bind call thread failure bind scheduler thread call marl schedule undefined behavior marl scheduler may simultaneously bind number thread scheduler retrieve bind thread marl scheduler get typical way pas scheduler thread another would always remember unbind scheduler terminate thread forget unbind marl scheduler destructor block indefinitely externally block call marl task marl scheduler internally hold number worker thread execute schedule task marl task become block marl synchronization primitive marl yield block task continue execution schedule task call non marl block function marl worker thread prevent worker thread able switch execute task block function return non marl block function include short block call acceptable mutex lock access structure however careful marl block call std mutex lock hold marl task may yield lock hold block task lock mutex sort situation may end deadlock need make block call marl worker thread may wish spawn new thread perform call allow marl worker continue process schedule task note officially support google product
C C++;https://github.com/hugoam/toy;community support toy thin modular game engine aim provide thin simple stack technology make game directly toy offer simple expressive idiom user interface render audio seamless extension game cost tool editor script design full feature game fast iteration toy top underlie library provide functionality toy heavy development yet stable fully document production ready mean guarantee kind stability yet include git history toy simplicity modularity make deeply hackable extensible versatile toy perfect game atypical constraint complex user interface render scheme procedural generation etc provide fully programmable renderer full control shaders material render path well high level primitive system entity physic navmesh generation navigation procedural generation helper collection game program block toy aim foster ecosystem simple minimal reusable component suit game technology note release toy time gpl license hop evolve truly free open source technology release permissive license however happen secure regular financial support ensure fund open source project help come play live demo try live gorgeous lightmapped scene port toy engine godot also beware include potentially loud sound principle simple lightweight simplicity core aim philosophy behind toy codebase tenth size compete engine toy light whole editor browser modular functionality enclose small simple easy understand block block lie underlie library extensible collection module toy perfect fit game technology keep full control component application design control flow game first toy first foremost mean game native direct contact core system allow much great control typical script engine versatile toy design start complex game mind strategy role play game give full control powerful user interface render system cost tool reflection automatically extend game core seamless script edit inspection game object type procedure tool editor educative toy aim provide simple technical solution typical game program problem easily study understand hop driver education game development topic fast iteration couple seamless bind system game various script language hot reload native immediate render toy provide fast iteration speed feature low level library provide base feature behind toy separate module reflection script reflection automatically extend game core seamless script via text base language lua wren node visual script language include interface edit toy script component lean add game live script game console render user interface simple expressive user interface api fundamental block write robust game application toy offer best class immediate mode widget declaration fully automatic layout like skin image base skin style sheet various input widget dock window tab entity physic navigation roadmap toy mostly feature complete term basic feature want minimal viable engine mean could finally open source toy still bite unstable undocumented mean transitory phase pace settle allow iron bug crash instability thoroughly document class functionality remain stable step toy next month toy robust stable fully document game engine foundation many feature bring toy cut edge category work next support help implement follow feature tool application implement minimal tool apps include painter animation editor particle editor prefab scene editor feature partly implement set standalone apps would great addition script language implement support wren javascript script cluster render implement state art cluster render technique along defer render pipeline real time global illumnation investigate state art global illumination technique implement best real time compromise currently feasible node base shader language node editor perfect tool start play node base shader render pipeline definition multi thread implement efficient job fiber system parallelize everything performance focus implement skeleton focus towards heavily parallelize performance implement typical scenario boid investigate solution integrate reflection automatically expose object procedure field api provide seamless basic multiplayer support implement get start look manual manual clone toy platform rts editor space git clone recursive toy generate project target bin linux genie gcc linux gcc gmake gmake linux bin window genie vs2015 visual studio bin window genie vs2017 visual studio generate folder project gmake linux gmake linux project vs2015 visual studio project vs2017 visual studio make config debug64 gmake linux 64bit open toy sln visual studio ex_platform ex_space ex_blocks credit toy could exist without system render library vector draw library script language header math library header sponsor create toy huge time investment course year way pursue effort make thrive game program ecosystem dream fund sponsorship welcome look iron support mike king stone support etienne balit bach manos agelidis nebo milic omar cornut stefan hagen sunder iyer license license gplv3 license license txt
C C++;https://github.com/CertiVox/MIRACL;miracl miracl multiprecision integer rational arithmetic cryptographic library miracl crypto sdk software library widely regard developer gold standard open source sdk elliptic curve cryptography ecc different many cryptographic sdks focus miracl also enable developer security highly constrain environment include embed mobile apps scada full documentation access miracl crypto sdk introduction installation miracl explain license reference manual miracl enable reduce program greatly simplify program development developer design apis rapid inline wrapper program innovation unique quality reason miracl solution service organization across world include bae system hitachi intel panasonic toyota many others feature benefit miracl right choice miracl deliver wide unique range benefit enable developer secure even constrain environment quickly easily effectively feature amongst others inline wrapper greatly simplify program development program cover wide range application give development head start optimization embed processor ram help developer overcome device memory constraint compatibility industry security technology include aes encryption rsa public key cryptography diffie hellman key exchange dsa digital signature others set tool enable new number theoretic technique implement quickly miracl library consist well routine cover aspect multi precision arithmetic new type define big large integer flash short float slash large rational number large integer routine base knuth algorithm describe chapter classic work art computer program float slash arithmetic work round fraction originally propose matula kornerup routine thoroughly optimise speed efficiency time remain standard portable however optional fast assembly language alternative certain time critical routine also include particularly popular intel 80x86 range processor interface also provide full source include bug tracker miracl ltd jira bug feature track integrate development system find bug report bug check bug already report search find bug already report add comment change status confirm bug report new bug report community miracl ltd community like mind information security professional believe cryptography necessary tool advance individual freedom safeguard privacy miracl ltd act belief provide tool secure information guard privacy advance individual freedom anyone miracl ltd service part global community invite help shape miracl good meet need make keep track development community news follow miracl read late security crypto news first question feature request bug report contribute miracl ltd provide open source suite solution security miracl ltd team firmly believe solution organization user benefit derive value active contribution community contribute help shape improve miracl ltd product idea suggestion new feature improvement would like see help bring miracl ltd please fork public available github author miracl ltd copyright license miracl ltd right reserve miracl sdk provide developer extensive efficient set cryptographic function information feature functionality please refer miracl sdk free software redistribute modify term gnu affero general public license publish free software foundation either version license option late version miracl sdk distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu affero general public license detail release requirement license purchase commercial license buy license mandatory soon develop commercial activity involve miracl without disclose source application ship miracl close source product full detail regard miracl ltd term service please refer follow link
C C++;https://github.com/goossaert/hashmap;hashmap open address hash table algorithm development main function main provide enough information algorithm
C C++;https://github.com/sogou/workflow;readme_cn sogou workflow sogou server engine sogou workflow support almost back end online service sogou include search service cloud input method online advertisement etc handle billion request every day enterprise level program engine light elegant design satisfy back end development requirement quickly http server cpp include include workflow wfhttpserver int main wfhttpserver server wfhttptask task task get_resp append_output_body hello world server start start server port getchar press enter end server stop return multifunctional asynchronous client currently support http redis mysql kafka protocol implement client server user define protocol rpc system base independent open source project support srpc brpc trpc thrift protocol asynchronous workflow support common series parallel structure also support dag structure parallel compute tool addition task sogou workflow also include schedule compute task type task put flow asynchronous tool linux system high performance exceed system call disk also task realize high performance high concurrency back end service complex relationship compute micro service system project service governance load balance feature plugin enable name service kubernetes automate deployment wiki link paas compile environment project support linux macos window android operate system window version currently release independent iocp implement asynchronous user interface consistent linux version support cpu platform include bite x86 processor big endian little endian arm processor loongson processor rely openssl openssl recommend like ssl may checkout branch still need link crypto md5 sha1 standard therefore compile compiler support rely boost asio dependency however need kafka protocol compression library instal include lz4 zstd snappy get start linux macos git clone workflow make tutorial make get start debian linux sogou workflow package debian currently debian sid unstable eventually place stable repository order access unstable repository need edit etc apt source list simply add unstable sub branch repo deb main contrib non free deb unstable main contrib non free add update repo list able sudo apt get update workflow library development purpose sudo apt get libworkflow dev workflow library deployment sudo apt get libworkflow1 tutorial client create first task wget doc tutorial wget implement redis set get redis _cli doc tutorial redis_cli feature series wget _to _redis doc tutorial wget_to_redis server first asynchronous parallel task series simple parallel wget parallel _wget doc tutorial parallel_wget important topic error doc error timeout doc timeout global configuration doc config dns doc dns exit doc exit compute task algorithm factory sort _task doc tutorial sort_task user define compute task matrix _multiply doc tutorial matrix_multiply compute task simple way task doc task asynchronous task http server user define protocol simple user define protocol client server doc tutorial user_defined_protocol time task count task timer doc timer counter doc counter conditional resource pool doc conditional service governance service governance doc service governance document upstream doc upstream connection context connection context doc connection context client asynchronous mysql client mysql _cli doc tutorial mysql_cli asynchronous kafka client kafka _cli doc tutorial kafka_cli system design feature believe typical back end program protocol algorithm workflow develop completely independently protocol case user common protocol http redis various rpc user also easily customize user define protocol customization need provide serialization deserialization function define client server algorithm design algorithm concept symmetrical protocol protocol call rpc algorithm call apc async procedure call provide general algorithm sort merge psort reduce directly compare user define protocol user define algorithm much common complicate computation clear boundary package algorithm workflow workflow actual business logic put protocol algorithm flow graph typical workflow close series parallel graph complex business logic may non close dag workflow graph construct directly dynamically generate base step task execute asynchronously basic task task factory complex task system contain basic task cpu gpu timer counter task generate task factory automatically recycle callback server task kind special task generate framework call task factory hand user process function case task generate user task factory complex task transparent user http request may include many asynchronous process dns redirection user task sort seem algorithm actually include many complex interaction process cpu computation think business logic circuit well design electronic component electronic component may complex circuit asynchrony encapsulation base std function base user mode coroutines user need know write asynchronous program call execute asynchronously almost operation occupy thread although also provide facility semi synchronous interface core feature try avoid user derivation encapsulate user behavior std function instead include callback task server process conform faa function service idea realization algorithm simply std function algorithm also implement derivation memory reclamation mechanism every task automatically reclaim callback task create user want user need release dismiss method task response request also recycle task time user std move move require serieswork parallelwork kind framework object also recycle callback series branch parallel recycle callback parallel belong project std shared_ptr manage memory question may check list first see find answer welcome send problem encounter answer soon possible time issue also help new user
C C++;https://github.com/vlfeat/vlfeat;vlfeat vision lab feature library version vlfeat open source library implement popular computer vision algorithm specialise image understand local featurexs extraction match algorithm incldue fisher vector vlad sift mser mean hierarchical mean agglomerative information bottleneck slic superpixes quick shift superpixels large scale svm many others write efficiency compatibility interface matlab ease detail documentation throughout support window mac linux vlfeat distribute bsd license see copy documentation available ship library doc index html see also command line compile quick start matlab start vlfeat matlab toolbox late vlfeat binary note pre compile binary require matlab 2009b late unpack winzip window double click archive mac command line linux mac tar xzf vlfeat bin tar denote late version start matlab vlfeat setup command toolbox vl_setup replace path vlfeat directory create unpack archive vlfeat demo row command vl_demo check individual demo edit edit vl_demo octave support toolbox laregly compatible gnu octave open source matlab equivalent however binary distribution ship pre gnu octave mex compile make mkoctfile change maintenance release bugfixes maintenance release bugfixes maintenance release minor bugfixes fix compilation matlab 2014a several bugfixes improve documentation particularly covariant detector minor enhancement fisher vector rewrite svm add support sgd sdca optimisers various loss function hinge square hinge logistic etc improve interface add infrastructure support multi core computation openmp matlab 2009b late require add openmp support tree kmeans add new gaussian mixture vlad encode fisher vector encode also openmp support add liop feature descriptor add new object category recognition support several standard benchmark shelf add vl_covdet function implement follow detector dog hessian harris laplace hessian laplace multiscale hessian multiscale harris also implement affine adaptation estiamtion feature orientation computation descriptor affine patch include raw patch source custom feature frame add vl_hog hog feature add vl_svmpegasos vastly improve svm add vl_ihashsum hash count improve inthist integral histogram add vl_cummax improve vl_roc vl_pr add vl_det detection error trade det curve improve verbosity control aib add support xcode improve support past future xcode version complete migration old test toolbox test move functionality new unit test toolbox xtest add slic superpixels add vl_alphanum improve window binary package add support visual studio improve documentation layout add proper bibliography bugfixes minor improvement move gpl restrictive bsd license fix window binary package fix vl_compile architecture string linux bite fix compatibility problem old mac version bugfixes include improve homogeneous kernel map plenty small tweak improvement make maci64 default architecture mac add sift match extend caltech classification tree add image distance transform pegasos float point mean homogeneous kernel map caltech classification improve documentation change mac binary distribution require recent version mac change gnu linux binary distribution require recent version library add tree new sse accelerate vector histogram comparison improve dense sift dsift add snow leopard matlab r2009b support add quick shift rename dhog dsift improve documentation improve tutorial add bite window binary many small change namespace change everything begin vl_ prefix many change provide compilation support window matlab beta complete ikmeans beta many addition beta initial public release
