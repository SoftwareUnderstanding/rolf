Label;Repo;Text
C C++;https://github.com/libcheck/check;check linux osx window table content instal instal link link package package check unit test framework feature simple interface define unit test put little way developer test separate address space check catch assertion failure error segmentation fault signal output unit test within source editor ides see information include tutorial tutorial also available info check instal check follow dependency usr bin documentation tetex bin texinfo compatible tex installation documentation posix version specify may high actually need autoconf autoreconf configure make make check make sudo ldconfig directory set everything autoreconf call necessary tool like autoconf automake autoheader etc ever change something development autoreconf without perform minimum set action necessary check instal usr local lib default ldconfig rebuild linker cache newly instal library include cache cmake mkdir cmake make ctest_output_on_failure make test link check variadic macro check strict c90 option gcc complain gcc turn explicitly wno variadic macro future api would nice eliminate macro package check available package follow operate system package
C C++;https://github.com/tomtom-international/cpp-dependencies;read dependency checker codacy mac linux window snap store copyright tomtom international right reserve tool cpp dependency create include dependency information source derive scan full source tree dependency information output dot visualize happy cod peter bindels rijn buve tomtom international license license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license tool depend boost filesystem available usable instal platform package management system apt pacman brew configuration create _cmake_ create configuration system gnu make msbuild visual studio create directory outside source directory cmake want boost filesystem instead std filesystem platform std filesystem yet prefer add dwith_boost invocation _cmake_ tool either execute make gnu make open visual studio solution generate directory create executable cpp dependency check tool compile correctly execute cpp dependency provide help information tool information usage present next paragraph cpp dependency analyze component first thing base find whether read correctly root project command cpp dependency stats determine complexity base amount nod entangle cycle component well set project cycle count equal amount component order size logical component expect investigate specific component cpp dependency info information tool component cpp dependency inout find link component case dependency expect find rebuild component supposedly unrelated component cpp dependency short determine link component component find short path find cpp dependency make visualize graph tool also able provide output dot format format tool contain graph human readable format dot tool convert graphical image create graph cpp dependency graph mygraph dot create mygraph dot contain full component graph restrict component graph either component beneath give target graph component part cycle graph cycle make text format graph viewable graph dot tpng mygraph dot mygraph png convert png dot program try find way graphically display graph output note large graph particular many cycle present take hour render cpp dependency source tree folder contain empty skeleton project dependency information extract start analyze first tool extract statistic cpp dependency dir stats component public dependency private dependency detect nod cycle inform something quite right dependency see component root folder library executable simple way find wrong draw graph visual way cpp dependency dir graph dependency dot dot tpng dependency dot dependency png open png tool view web browser show follow image dependency graph show cycle engine dependency png light blue link link dark blue expose part dependency interface orange interest place component reach component let find cpp dependency dir short engine engine engine engine include display cpp dependency dir short engine engine display cpp include engine engine display include engine engine point developer architect find dependency wrong way around find way around engine component talk directly component remove dependency follow statistic cpp dependency dir stats component public dependency private dependency detect nod cycle cycle remove dependency find short path dataaccess component executable cpp dependency dir short main dataaccess main main main cpp include display engine display cpp include engine engine display include engine engine engine dataaccess engine engine cpp include dataaccess tell path short step inform step way detect link complicate cycle way isolate thin part cycle situation invalid dependency component another unit test component far away different component help identify path wrong link present also explicitly verify link present remove cpp dependency dir short engine path could find engine graph also show proper dependency order cpp dependency dir graph newdependencies dot dot tpng newdependencies dot newdependencies png dependency graph show cycle newdependencies png regenerate cmakelists txt well remove dependency input system also know link long present cpp dependency dir dryregen difference detect engine cpp dependency dir regen customize output cpp dependency lot analysis source tree also configurable part configuration find config cpp dependency txt project root allow customize color generation threshold outlier detection minor parameter please read documentation config cpp dependency txt source distribution tool see option edit tool tool split separate make easy find extend functionality follow find main cpp contain main function help information well core flow input cpp contain function read cmakelists information need tool output cpp contain function write output generate except cmakelists generation cmakeregen cpp contain functionality write cmakelists analysis cpp contain graph process navigation function component cpp contain need struct like storage class generate cpp contain function convert find header lookup map also place add generate know list take account component constant contain constant throughout base general root functionality keep main cpp structural class keep component cpp auxiliary function split domain rationale behind tool implement goal able quickly analyze dependency component complex project include dependency graph change change make source tree accomplish choice make direction performance expense strict correctness specifically proper parser read proper cmake parser read cmake properly parse would increase full time program order magnitude make much useful strstr across full base profile find std string find take full runtime replace strstr typically much optimize make whole program twice fast 5gb source base second fast enough interactive check rerun small modification tool set compile ubuntu system platform default compiler mean source anything available gcc test linux ubuntu macos different version git gitignore good practice set personal global gitignore machine filter number system wish submit git repository set global gitignore execute git config global core excludesfile gitignore general add follow type gitignore entry separate line com class dll exe log sql sqlite tlog epoch swp hprof hprof index releasebackup local gitignore git repository reflect produce execute regular compile release command bug report new feature request encounter problem library hesitate issue session issue normally developer able comment fix
C C++;https://github.com/google/brotli;security note please consider update brotli version late version contain fix integer overflow problem happen shoot decode api input chunk stream api limit input size chunk size large 2gib input contain uncompress block overflow happen memcpy invoke gigantic num value likely crash introduction brotli generic purpose lossless compression algorithm compress combination modern variant lz77 algorithm huffman cod 2nd order context compression ratio comparable best currently available general purpose compression method similar speed deflate offer dense compression specification brotli compress format define rfc brotli open source mit license see license brotli mail list github action fuzzing instruction vcpkg brotli dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg brotli brotli port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository autotools style cmake autotools style configure script cmake base project support window basic command test brotli mkdir configure cmake make make test make default debug binary generate release makefile specify disable debug option configure cmake bazel see cmake basic command brotli mkdir cmake dcmake_build_type release dcmake_install_prefix instal cmake config release target configuration premake5 see late release module follow pip brotli tip tree version pip upgrade see readme readme detail instal source development test benchmark squash compression unstable squash compression large text compression lzturbo relate project disclaimer brotli author take responsibility third party project mention section independent mark adler base entirely format specification javascript port brotli could directly via npm brotli hand port decoder haxe dominik homberger output source javascript php java 7zip dart native dart compression framework fast ffi base brotli ready prebuilt binary win linux mac
C C++;https://github.com/m-a-d-n-e-s-s/madness;madness multiresolution adaptive numerical environment scientific simulation summary madness provide high level environment solution integral differential equation many dimension adaptive fast method guarantee precision base multi resolution analysis novel separate representation main component madness low level new petascale parallel program environment increase programmer productivity performance scalability maintain backward compatibility current program tool mpi global array numerical capability upon parallel tool provide high level environment compose solve numerical problem many dimension finally upon numerical tool new application initial focus upon chemistry atomic molecular physic material science nuclear structure please look information project activity madness fund developer gratefully acknowledge support department energy office science office basic energy science office advance scientific compute research contract ac05 00or22725 oak ridge national laboratory developer gratefully acknowledge support national science foundation grant university tennessee collaboration ohio state university sadayappan madness parallel runtime parallel tree algorithm include concept software develop project developer gratefully acknowledge support national science foundation grant nsf oci university tennessee solid state physic multiconfiguration scf capability develop project developer gratefully acknowledge support national science foundation grant nsf che university tennessee collaboration uiuc ncsa multi thread preliminary gpgpu port develop project developer gratefully acknowledge support defense advance research project agency darpa subcontract argonne national laboratory part high productivity computer system hpcs language evaluation project
C C++;https://github.com/jupyter-xeus/cpp-terminal;terminal terminal small header library write terminal application work linux macos window native cmd exe console support color keyboard input basic feature write terminal application small core terminal_base cpp terminal terminal_base platform specific block platform independent library write top ansi escape sequence terminal cpp terminal terminal design advantage line maintain platform rest platform independent intentionally limit subset feature work platform natively way application write terminal work everywhere box without emulation time terminal short easily debug something work full understand thing work underneath several provide show terminal every work natively platform kilo cpp kilo cpp text editor port terminal instead linux specific api menu cpp menu cpp show menu screen key cpp key cpp listen key show number color cpp color cpp show print text color standard output easy copy terminal terminal_base project consult terminal_base standalone header want low level platform dependent functionality terminal depend terminal_base also want platform independent easily print escape sequence read translate key cod documentation start simple concept print text screen keep add feature color cursor movement keyboard input etc explain thing work print print text standard output std cout need terminal color print color style bold term color function term enum foreground term enum background term style enum different style see color cpp must call term reset term reset term style reset reset give color style must create term terminal instance case terminal nothing linux macos window check program withing window console enable ansi escape cod console make console show color properly must try catch block main program ensure terminal destructor get call even unhandled exception occur put console original mode program might decide print color terminal check term is_stdout_a_tty also terminal appveyor travis azure pipeline show color properly show color properly print color program output jupyter notebook possibly convert color ansi sequence html program might print color standard output get redirect say compiler error message cpp log read directly editor color function always return string proper ansi sequence program might wrap macro check program variable print color call color color print cursor movement visibility next step allow cursor movement ansi sequence render simple menu see menu cpp print screen accumulate follow operation string turn cursor terminal show cursor quickly move around screen move cursor position print menu color highlight select item specify move cursor middle screen turn cursor print string std flush ensure whole string end screen save original screen restore good habit restore original terminal screen cursor position move cursor around draw previous section call save_screen method issue proper ansi sequence terminal save screen terminal destructor automatically issue correspond sequence restore original screen cursor position keyboard input final step enable keyboard input must set terminal call raw mode linux macos disable terminal input buff thus every key press immediately send application otherwise press enter input send window turn ansi keyboard sequence key press terminal destructor properly restore terminal original mode platform wait read individual key something base see menu cpp feature need write terminal application see kilo cpp simple full screen editor similar project color library handle color output draw javascript prompt library handle prompt terminal general tui library rust javascript
C C++;https://github.com/kthohr/stats;statslib mention awesome coverage codacy documentation statslib templated library statistical distribution function feature unique compile time compute capability seamless integration several popular linear algebra library feature header library probability density function cumulative distribution function quantile function random sample method function write constexpr format enable library operate compile time time computation engine design simple like syntax optional vector matrix functionality wrapper support std vector matrix base operation parallelizable openmp release permissive non gpl license content distribution distribution installation installation depdencies documentation documentation jupyter notebook jupyter notebook option option syntax syntax compile time computation capability compile time compute capability author license author distribution function compute cdf pdf quantile well random sample method available follow distribution bernoulli beta binomial cauchy chi square exponential gamma inverse gamma laplace logistic log normal normal gaussian poisson student uniform weibull addition pdf random sample function available several multivariate distribution inverse wishart multivariate normal wishart installation dependency statslib header library simply add header project dependency late version compatible compiler documentation full documentation available online documentation pdf version documentation available jupyter notebook test library online interactive jupyter notebook option follow option declare include statslib header inline functionality constexpr specifier openmp functionality enable default _openmp macro detect invoke fopenmp gcc clang explicitly enable openmp feature disable openmp functionality statslib armadillo blaze eigen enable wrapper std vector syntax function call like syntax general rule density function stats normal gaussian density call cumulative distribution function stats gamma cdf call quantile function stats beta quantile call random sample stats generate single draw logistic distribution function matrix base equivalent armadillo blaze eigen dense matrix pdf cdf quantile function take matrix value argument randomization function output random matrix arbitrary size follow generate matrix iid draw gamma distribution matrix base operation parallelizable openmp gcc clang compiler simply include fopenmp option compilation seed value random number seed available form seed value random number engine seed value pas unsigned integer generate draw normal distribution seed value random engine statslib bite mersenne twister generator std mt19937_64 pas reference compile time compute capability statslib design operate equally well compile time computation engine compile time computation allow compiler replace function call dnorm static value source function evaluate compilation process rather time capability make possible due templated constexpr design library verify inspect assembly generate compiler compile time feature enable constexpr specifier compute pdf cdf quantile function laplace distribution assembly generate clang without optimization author keith hara license apache version
C C++;https://github.com/Snaipe/libcsptr;smart pointer coverage project attempt bring smart pointer construct gnu program language feature unique_ptr shared_ptr macro smart type attribute destructor support cleanup custom variable metadata allocation cross platform test linux mac yosemite window mingw cygwin port gcc instal package manager mac brew snaipe soft libcsptr yaourt libcsptr ubuntu source prerequisite compile library gcc need installation clone repository mkdir cmake dcmake_install_prefix home make make project root local mkdir cmake dcmake_install_prefix usr make sudo make global simple unique _ptr simple1 session simple unique _ptr destructor allocate smart array print content destruction different memory allocator although replace malloc free automatic cleanup error case name parameter faq moron first start work project also fun serious project yes project widely might bug beware make link blog matter
C C++;https://github.com/larspensjo/SimpleSignal;high performance signal see performance signal original source well performance measurement compare signal system original author tim janik license source public domain cc0 universal cc0 declare signal declare signal sig take argument return char connect signal connect sig static function also possible connect member function lambda function fire signal
C C++;https://github.com/google/flatbuffers;flatbuffers fuzzing join chat discord twitter twitter flatbuffers cross platform serialization library architected maximum memory efficiency allow directly access serialize without parse unpack first still great forward backwards compatibility land page browse documentation support operate system window macos linux android others recent compiler support program language dart java javascript lobster lua php rust typescript progress contribution flatbuffers google group discus flatbuffers developer user flatbuffers issue tracker submit issue stackoverflow com flatbuffers tag question regard flatbuffers contribute project see contribute security please see security policy security report vulnerability license flatbuffers license apache license version see license full license text contribute flatbuffers tag flatbuffers google group flatbuffers issue tracker stackoverflow com land page license
C C++;https://github.com/felixguendling/cista;simple serialization reflection cista simple open source mit license compatible way serialize structure single header dependency macro source generation raw performance native structs support modification resize deserialized support complex cyclic structure include cyclic reference recursive structure etc save memory serialize directly filesystem need intermediate buff require fuzzing check though continuous fuzzing llvms libfuzzer come serializable high performance hash map hash set base google swiss reduce boilerplate automatic derivation hash equality function optional automatic structure versioning recursive type hash optional check sum prevent deserialization corrupt compatible clang gcc msvc underlie reflection mechanism late try simple write buff advance write hash map memory map benchmark look benchmark detail library serialize deserialize fast deserialize traverse deserialize traverse size cap offset raw case reader writer pointer width load system different byte order endianess support asset load kind application game asset large graph etc transfer share memory application currently software read write possible generate accessors program language alternative need compatible program language require protocol evolution downward compatibility look another solution protocol cap boost many documentation installation serialization custom serialization structure hash hash equality contribute feel free contribute bug report pull request etc
C C++;https://github.com/grit-engine/grit-engine;grit engine central repository grit game project engine executable launcher various tool mostly useless without accompany medium tree game available sourceforge via subversion therefore get everything execute follow subversion tree also contain prebuilt date executables linux window majority developer need grit substantially modify lua script potential exhaust modify provide linux makefile grit visual studio project take hour window minute linux script available copy new executables subversion check medium directory window visual studio express support community version free beer microsoft site requirement need directx9 sdk google system program add system wide environment variable dxsdk_dir point directory visual studio visual studio restart make see new environment variable regular open grit engine sln whole solution normal configuration tool dependency debug debug visual studio require engine debug configuration debugger execute engine project inside visual studio may need set work directory medium directory engine project property modify hand write msvc executable library project property layer additional option without duplicate project structure follow grit engine sln collect together project solution prop option library executables option debug normal configuration live solution_debug prop additional option compile debug mode option object live solution_normal prop additional option compile normal mode option object live pch prop option enable precompiled header top level apps path project project vcxproj executable library option specific library like warn level live path project project prop option require client library library typically define include path linux follow instruction ubuntu another distro figure hopefully ubuntu instruction help note make require gnu make may call gmake system requirement simply make root adjust number core everything executables current platform leave root directory add path debug debug grit gdb valgrind assembly obscure disable optimization override opt variable note rebuild anything already might want first delete specific object contain debug rebuild without optimization modify makefiles handwritten lot gnu make specific feature sub project dependency define grit define additional source require option include root makefile compute actual rule
C C++;https://github.com/ddemidov/amgcl;amgcl documentation coverity scan amgcl header library solve large sparse linear system algebraic multigrid amg method amg effective iterative method solution equation system arise discretizing pdes unstructured grid method black box solver various computational problem since require information underlie geometry amg often standalone solver preconditioner within iterative solver conjugate gradient bicgstab gmres amgcl amg hierarchy cpu transfer provide backends allow transparent acceleration solution phase help opencl cuda openmp technology user may provide backends enable tight integration amgcl user see amgcl documentation reference demidov denis amgcl efficient flexible extensible algebraic multigrid lobachevskii journal mathematics may demidov denis amgcl library efficient solution large sparse linear system software impact november demidov denis lin bin wang accelerate linear solver stoke problem metaprogramming journal computational science support github issue page mail list
C C++;https://github.com/tboox/tbox;glib like cross platform library support project support project become sponsor logo show link website become also consider sponsor get technical support service become contact email waruqi gmail com mailto waruqi gmail com community tboox chatroom chat chat group full wechat public tboox
C C++;https://github.com/Neargye/magic_enum;github conan vcpkg build2 try compiler like project please consider donate fund help victim war ukraine magic enum header library provide static reflection enums work enum type without macro boilerplate enum_cast obtain enum value string integer enum_value return enum value specify index enum_values obtain enum value sequence enum_count return number enum value enum_integer obtain integer value enum value enum_name return name enum value enum_names obtain string enum name sequence enum_entries obtain pair value enum string enum name sequence enum_index obtain index enum value sequence enum value enum_contains check whether enum contain enumerator value enum_type_name return name enum type enum_fuse allow multidimensional switch case enum_switch allow runtime enum value transformation constexpr context enum_for_each call function enum constexpr value is_unscoped_enum check whether type unscoped is_scoped_enum check whether type scoped underlying_type improve free sfinae friendly ostream_operators ostream operator enums bitwise_operators bitwise operator enums documentation reference doc reference limitation doc limitation integration integration feature header dependency free compile time enum string string enum iterate enum cpp enum value string string enum value integer enum value index access enum value enum value sequence number enum element enum value integer enum name sequence enum entry sequence enum fusion multi level switch case statement enum switch runtime value constexpr constant enum iterate enum constexpr constant ostream operator enum bitwise operator enum check whether type unscoped check whether type scoped static storage enum variable string version much light compile time restrict enum_range limitation doc limitation remark magic_enum pretend silver bullet reflection enums originally design small enum read limitation doc limitation functionality integration add require magic_enum hpp include magic_enum hpp project external dependency magic enum manage dependency merely add magic_enum conan require release version want manage dependency add depend magic_enum manifest release version want import target magic_enum lib magic_enum alternatively something like base cmake fetch_content module bazel also support simply add workspace bazel inside repository possible note must support compiler specify export include package add magic_enum package xml include package workspace cmakelists txt add follow compiler compatibility clang llvm msvc visual studio xcode gcc mingw license mit license license
C C++;https://github.com/rigtorp/awesome-modern-cpp;awesome modern collection resource modern goal collect list resource help people leverage modern beyond contribute add remove change thing list please submit pull request github book tour bjarne stroustrup program bjarne stroustrup effective modern scott meyers overview new scott meyers core bjarne stroustrup herb sutter guideline modern concurrency anthony williams reference guide write multi thread standard complete nicolai josuttis give guidance language library feature professional craig scott practical guide cmake project modern tutorial changkun book claim fly intent provide comprehensive introduction relevant feature regard modern 2020s comprehensive guide book see stackoverflow definitive book guide community find late news update news status discussion standard listen late podcast first podcast developer developer comment issue interest programmer educational video jason turner read late standard proposal standard committee discus everything relate subreddit slack workspace corehard telegram ask question subreddit question answer stackoverflow stackoverflow question maybe question already answer faq many conference list upcoming past find user group meet list user list user group search channel start talk todo curate list good talk simplify feature start sg20 education recommend video teach cppcon talk conference cppcon bjarne stroustrup make simple task cppcon herb sutter lock free program juggle razor blade part cppcon herb sutter lock free program juggle razor blade part cppcon scott meyers type deduction cppcon bjarne stroustrup write good cppcon herb sutter write good cppcon chandler carruth garbage garbage argue undefined cppcon herb sutter leak freedom cppcon jason turner practical cppcon jonathan boccara stl algorithm dive conference scott meyers cpu cache dive conference andrei alexandrescu write fast dive conference andrei alexandrescu write fast talk conference native variadic template native stephan lavavej help native sean parent blog andrzej guideline thought anthony williams embed john regehr professor computer science university utah usa eric fluent expressive guru week new regular series program problem create write herb sutter guru week old old guru week post marshall paul fultz preshing simplify write clean maintainable sticky blog look develop software real time embed system sutter herb sutter software development view scott meyers professional activity interest visual team raven like write blog surf list blog individual developer website best collaborative collection best practice repository modern pattern reference project starter template template kick start modern project cmake coverage clang format reproducible dependency management template modern project cmake clang format unit test support downstream inclusion template cmake project get start tool pitchfork set project convention library suppose comprehensive list library list high quality modern library general applicability serialization database test etc high quality library novel new feature kitchensink framework abseil open source collection compliant design augment standard library collection library facebook open source library poco library powerful cross platform library internet base application desktop server mobile iot embed system parent lite repository migration path post feature pre environment modern framework create console cli form gui like winforms tunit unit test like microsoft unit test framework application window macos linux android test approval test native approvaltests linux mac window quickcheck smallcheck clone header framework want make work unit test pleasant experience boost test framework modern native header framework unit test tdd bdd fast feature rich single header test framework unit test tdd mock make easy simple yet expressive header library mock google test mock framework practical mutation test tool quickcheck clone benchmarking library framework create micro benchmark benchmark author library framework google microbenchmark support library benchmarking framework micro benchmarking framework benchmark author library framework log fmtlib style log library latency nanosecond fast log library lightweight flexible log library thread fast multi producer multi consumer lock free concurrent queue modern parallel task program library concurrent structure bound multi producer multi consumer lock free queue write bound single producer single consumer wait free lock free queue write thread thread block tbb template library develop intel parallel program multi core processor tbb computation break task parallel library manage schedule thread execute task smart queue execute task threadpool like manner serial concurrent general concurrency library contain task executor timer coroutines rule parse serialization json modern library interact json header library parse toml late header library parse toml yaml parser emitter header library parse toml configuration library serialization library high performance copy binary serialization accelerate parse json per commonly available simd instruction json library robust support custom allocator library read write hjson json high performance single header json parser parse directly structs string format templating small safe fast format library template engine modern mustache text template minimal type safe printf replacement library pretty printer modern script library bind lua easy embed script language seamless operability web http http websocket boost asio rest sdk microsoft project cloud base client server communication native modern asynchronous api design project aim help developer connect interact service request curl people spiritual port request fast easy microframework create webservers inspire flask base json html text pngs http simple way embed server application provide web base base high performance http application framework high performance web framework dependency elegant rest framework restbed framework bring asynchronous restful functionality application database driver mongodb modern asynchronous wicked fast client redis powerful header sqlite3 orm library wrapper sqlite3 api type safe sql template library official client api postgresql bioc modern library sequence analysis misc header library parse display operate iterate date large integer library effective high performance simplistic nature also clean eye open source actor cinder free open source library professional quality creative cod high performance stream base coroutine itertools lightweight command line option parser date time library base header docopt create beautiful command line interface header fast reliable entity component system modern font c99 library cook font render text library provide easy interface compute hash checksum string stream bytearrays untyped mention also support incremental hash port intx arbitrary precision integer library speed log multiplication division algorithm meta program utility magic static reflection enums string string iteration modern work enum type without macro boilerplate wise static reflection enums similar magic enum work header library provide nameof macro function obtain simple name variable type function macro enum parse expression grammar template library header simple convenient header random modern simple modern header library color terminal experimental range library simple base encode library provide moment support encode decode various base base16 base32 various variant base58 various variant base64 various variant mit simple header pattern match simple regex language builder library write provide easy interface construct simple complex regex expression mit header interpolation library ease function lightweight versatile video process library twitter activity indicator modern header library enumeration associate value open source toolkit creative cod table maker modern tool misc tool format understand add smart feature editor completion compile error definition compiler interactively explore assembly output language server support multi million line base power libclang emacs vim vscode others language server protocol support cross reference completion diagnostics semantic highlight commit since nov objc language server support cross reference hierarchy completion semantic highlight fork cquery active development minor mode emacs power libclang syntax highlight support modern emacs dynamic project home sanitizers addresssanitizer memorysanitizer threadsanitizer leaksanitizer instrumentation framework dynamic analysis tool valgrind tool automatically detect many memory management thread bug profile program detail also valgrind new tool static static analysis tool provide unique analysis detect bug focus detect undefined behaviour dangerous cod construct clang base linter tool purpose provide extensible framework diagnose fix typical program error like style violation interface misuse bug deduce via static analysis clang tidy modular provide convenient interface write new check source analysis tool find bug objective program implement path sensitive inter procedural analysis base symbolic execution technique american fuzzy american fuzzy lop security orient fuzzer security orient feedback drive evolutionary easy fuzzer interest analysis option library coverage guide fuzz test fast scalable multi language extensible system cross platform toolchain develop package cross platform family tool design test package software open source system mean extremely fast even importantly user friendly possible cross platform utility base lua package fully decentralize polyglot package manager friend cmake package retrieval package manager cmake script setup free cross plattform dependency management cross platform package manager library manager window linux macos cross platform package manager base xmake list compile erik rigtorp help community erik rigtorp mailto erik rigtorp
C C++;https://github.com/skypjack/entt;entt game meet modern try gitter discord entt dream far find single bug date super easy work entt header tiny easy library game program much write modern among mojang arcgis runtime esri amaze see project list please open issue submit add tag _topics_ want keep change question require open issue join gitter discord meet user like good everyone forget check answer may already want support entt consider become many thank special thank table content introduction introduction motivation motivation performance performance integration integration requirement requirement cmake cmake natvis support natvis support package tool package tool pkg config pkg config documentation documentation test test entt action entt action contributor contributor license license introduction entity component system also know _ecs_ architectural pattern mostly game development detail entity system evolve project start pure entity component system time codebase grow class functionality add brief yet incomplete list offer today rtti system mostly similar standard constexpr utility human readable resource name minimal configuration system monostate pattern incredibly fast entity component system _pay use_ policy view group iterate entity component allow different access pattern perfect soa fully random lot facility top entity component system help user avoid reinvent wheel small basic service locator ever see non intrusive macro free runtime reflection system static polymorphism make simple within everyone reach homemade container like sparse set base hash map cooperative scheduler process type need resource management cache loader handle delegate signal handler tiny event dispatcher general purpose event emitter crtp idiom base class template much check consider list work progress well project whole api fully document brave enough read please note tool also dll friendly smoothly across boundary thing know entt also minecraft give game available literally everywhere confidently say library sufficiently test every platform come mind motivation start develop entt _wrong_ reason goal design entity component system beat another well know open source library term performance possibly memory usage end satisfy actually satisfy fast nothing fairly little indeed realize try hard keep intact great performance entt add feature want see library time nowadays entt finally look still fast _competitors_ low memory usage average case really good api amaze set feature even course performance propose entity component system incredibly fast iterate entity component fact compiler make lot optimization entt work others good general consider real world case entt somewhere bite much fast many solution around although could check obvious reason interest compile benchmark test release mode enable compiler optimization otherwise would make little sense set entt_build_benchmark option cmake evaluate whether satisfy honestly get tire update readme whenever improvement already lot project entt basis comparison already tell lot many benchmark completely wrong many others simply incomplete good omit information wrong function compare give feature certainly also good age quickly nobody update especially library deal actively develop choice entt base carefully design api set feature general performance single benchmark show fast tool available future likely try get even good performance still add new feature mainly fun want contribute suggestion feel free make open issue discus idea integration entt header library mean include entt hpp header enough include library whole interest entity component system consider include sole entity registry hpp header instead matter add follow line top line include entity component system instead pas proper argument compiler add src directory include path requirement able entt user must provide full feature compiler support least requirement mandatory compile test extract documentation cmake version late doxygen version late alternatively also support system credit offer maintain documentation still refer cmake official system library cmake entt cmake project link exist target entt entt alias library offer everything need locate find_package embed add_subdirectory fetch fetchcontent many way think involve cmake cover possible case would require treaty simple readme confident anyone read section also know entt cmake project without problem natvis support cmake enable option entt_include_natvis enjoy otherwise tool cover via natvis find natvis directory divide module spot error suggestion contribution welcome package tool entt available know package tool particular package manager developer microsoft package tool entt simple step experimental feature test late change entt port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository miss package manager macos available homebrew formula type follow toolchain develop package order package build2 project add follow line similar manifest also check configuration refer valid repository package find build2 open source community central repository accessible package source accessible either ssh git github com build2 package entt git feel free report package bpkg add repo add project repository manifest see official detail consider list work progress help make long like pkg config entt also support pkg config definition _supports_ least suitable call entt generate instal proper directory cmake also make easy tool meson similar documentation documentation base cmake dentt_build_docs make api reference create html format within directory doc html navigate favorite browser your_favorite_browser doc html index html version also available late release last stable tag look something please eye consider read nice look version available documentation much pleasant read moreover exist dedicate project user find relate documentation page test compile test entt require googletest cmake compile library compile anything else order test set cmake option entt_build_testing basic set test cmake dentt_build_testing make make test note benchmark part set entt action entt widely private commercial application even mention signature put document time ago fortunately also people take time implement open source project base entt hold back come document find incomplete list game application article reference know resource entt feel free open issue glad add list contributor request feature suggestion feedback highly appreciate find help want contribute project experience want get part project reason feel free contact directly find mail promise every contribution accept assure best take soon possible decide participate please see guideline contribute contribute create issue pull request take also look contributor know participate far license documentation copyright michele caini colorful logo copyright richard caseres release mit documentation release logo release
C C++;https://github.com/log4cplus/log4cplus;log4cplus readme short description log4cplus simple log api provide thread safe flexible arbitrarily granular control log management configuration java log4j api log4cplus late project information late date information project find log4cplus sourceforge project page log4cplus wiki sourceforge please submit bug patch feature request etc github mission statement aim project develop log4j like log framework primarily major design goal avoid huge dependency like boost core functionality standard facility instead possible project take inspiration log library beside log4j log4net log4cxx log4cpp platform support log4cplus version beyond require log4cplus port test follow platform linux amd64 gcc version ubuntu 6ubuntu1 linux amd64 clang version tag release_800 final window amd64 gcc version x86_64 posix seh rev3 mingw w64 project cmake system window amd64 gcc version tdm64 cmake system window visual studio openbsd amd64 gcc version freebsd i386 clang version tag release_34 dot1 final netbsd amd64 gcc version dragonflybsd amd64 gcc version prerelease freebsd port collection openindiana hipster gcc version test list platform point time version source continuous test linux platform offer travis service old window version support release window vista follow platform support series log4cplus either reasonable capable compiler check log4cplus yet minix i386 clang version branch release_34 disable thread linux amd64 intel parallel studio icpc version opensolaris library stlport4 solaris library stlport4 library cstd solaris sparc macos macos hppa2 hpux11 haiku alpha aix ibm aix installation instruction generic autotools installation instruction follow log4cplus specific instruction log4cplus git sub module always recurse submodules option git clone configure script option enable debug option disable default option mainly affect gcc also limit effect non gcc turn debug information generation undefines ndebug symbol add fstack check gcc enable warn option enable default add platform compiler dependent warn option compiler command line enable version option enable default enable version decoration library liblog4cplus enable release version option enable default enable release version decoration library liblog4cplus enable symbol visibility option option enable default enable compiler platform specific option symbol visibility see also visibility page gcc wiki enable profile option disable default option add profile information generation compiler option gcc sun solaris studio enable thread option enable default turn detection necessary compiler linker flag enable posix thread support detection usually work well platform still need help configuration supply additional flag configure script know deficiency solaris studio linux see late note detail enable test option enable default enable compilation test executables enable unit test option disable default enable compilation unit test along unit unit test execute unit_tests test executable compilation enable implicit initialization option enable default enable implicit initialization log4cplus turn log4cplus explicitly initialize call either log4cplus initialize instantiate log4cplus initializer enable lto option disable default enable lto link time optimization wchar_t support option enable default enable additional binary mark suffix name compile dunicode flag effect binary assume log4cplus tchar wchar_t work locale locale wchar_t char conversion relate option disable default know work well gcc linux platform generally less locale support standard library know work well bsds see also doc unicode txt work locale second wchar_t char conversion relate option disable default know work well unix like platform include recent cygwin iconv third wchar_t char conversion relate option disable default conversion iconv function always utf wchar_t source target encode know work well platform gnu iconv different iconv might support wchar_t encode selector either system provide iconv library provide libiconv detect accept also susv3 gnu iconv function signature accept option disable default enable compilation separate share library liblog4cplusqt4debugappender implement qt4debugappender require qt4 pkg config instal qt5 option disable default enable compilation separate share library liblog4cplusqt5debugappender implement qt5debugappender require qt5 pkg config available note compilation unix like platform log4cplus compile either autotools base system cmake system autotools base system consider primary unix like platform window primary system visual studio solution project msvc14 log4cplus sln mingw support autotools base system cmake system support well compile log4cplus old version visual studio common compiler suit embarcadero block etc cygwin cygwin problem pr64697 link binary language level thread local storage share thread local variable across translation unit avoid issue language level thread local storage cygwin traditional posix thread local storage instead pr64697 mingw msvcrt version log4cplus function like _vsnprintf_s microsoft secure version vsnprintf mingw tool chain default link system msvcrt dll unfortunately old system like window ship msvcrt dll lack function possible compile log4cplus mingw tool chain _without_ microsoft secure function define __msvcrt_version__ value 0x900 vice versa configure cppflags d__msvcrt_version__ 0x700 window visual studio log4cplus thread synchronization facility synchronization facility implement visual studio standard library way utilize global variable therefore impossible due static initialization order fiasco outside main issue manifest deadlock exit destruction log4cplus thread pool overcome limitation always log4cplus initializer initializer first thing main never try log static global object constructor never try log static global object destructors define log4cplus initializer instance first thing main ensure log4cplus initialize importantly ensure log4cplus shut execution leave main function log4cplus try automatically initialize process startup dll load tear log4cplus initializer instance destroy window roll appenders window standard stream open way underlie win32 handle open file_share_delete flag flag beside share delete allow rename handle open issue manifest error need roll still open another process also bug sourceforge window log4cplus thread local storage ndc mdc optimize temporary object window way get tlsalloc etc function __declspec thread method generate fast limitation prior window vista tlsvista log4cplus dll load time loadlibrary dependency load library access __declspec thread variable cause general protection fault gpf error window prior window vista extend library load time loadlibrary allow best available method log4cplus enable method check _win32_winnt 0x0600 condition compile log4cplus target window vista late tlsvista link window link application dll variant log4cplus define log4cplus_build_dll preprocessor symbol change definition log4cplus_export symbol __declspec dllimport android cmake log4cplus thread local storage see window detail android platform log4cplus compile android android toolchain cmake might get error feature __emutls symbol global init cxx error log4cplus internal __emutls_t _zn9log4cplus8internal3ptde cause section type conflict log4cplus internal ptd work around issue invoke cmake dandroid_function_level_linking bool option thread signal log4cplus safe asynchronous signal handler property thread program general log4cplus thread application want log4cplus signal handler option block signal thread handle signal posix platform possible sigwait call log4cplus enable approach block signal thread create thread helper ibm compiler ibm compiler executable many variant compile log4cplus thread support specify compiler variant support thread cxx variable configure script command line configure enable thread cxx xlc_r aix reentrancy problem appear reentracy problem aix xlc deadlock condition circumstance unknown whether problem manifest version either compiler problem initially report bug report core problem ibm xlc standard iostreams global non recursive lock protect state application bug report try log log4cplus inside overflow member function class derive std streambuf class log4cplus std ostringstream attempt recursively lock global non recursive lock deadlock solaris sunos old version operate system might problem link log4cplus due miss __tls_get_addr unpatched state solaris studio solaris studio compiler default standard library non standard seem conform enough sun linux_i386 miss std time_t etc work well enough solaris sun thus log4cplus add library stlport4 cxxflags environment variable unless switch match library stlport4 stdcxx4 cstd already present want override default supply log4cplus set cxxflags configure script command line solaris studio support __func__ symbol log4cplus record function name log event enable feature add feature extension switch cxxflags configure script subsequently add switch application flag well solaris studio gnu linux autotools configure combo handle solaris studio compiler linux well enough need little help configuration posix thread bash common_flags lib x86_64 linux gnu usr lib x86_64 linux gnu yes configure enable thread yes opt solarisstudio12 bin cxx opt solarisstudio12 bin cflags common_flags cxxflags common_flags ldflags lpthread acc necessary turn mode acc provide flag configure enable thread yes cxxflags acc ia64 problem ia64 acc b3910b problem manifest unsatisfied symbol link loggingserver unsatisfied symbol virtual table loggingserver clientthread loggingserver problem appear deficiency acc support __declspec dllexport work around issue add disable symbol visibility option configure script command line configure disable symbol visibility option enable thread yes cxxflags haiku haiku support gcc default gcc version haiku set version base gcc change default gcc version version please setgcc gcc4 command avoid link error like main cpp text startup 0x54a undefined reference _unwind_resume command switch _current_ gcc version version change permanent global see also haiku ticket qt4 win32 msvc order log4cplus qt4 program necessary set follow option treat wchar_t type wchar_t set option log4cplus project qt4debugappender project visual studio remember unicode version log4cplus library also necessary make clear distinction debug release project log4cplus log4cplus release library debug version program vice versa register qt4debugappender library runtime call function log4cplus qt4debugappender registerappender add line qmake project log4cplus qt4debugappender includepath log4cplus include win32 config debug debug release libs log4cplus msvc14 win32 bin debug_unicode llog4cplusud libs log4cplus msvc14 win32 bin debug_unicode llog4cplus qt4debugappender else libs log4cplus msvc14 win32 bin release_unicode llog4cplusu libs log4cplus msvc14 win32 bin release_unicode llog4cplus qt4debugappender gcc might encounter follow error compilation option qglobal error iso support long long cause pedantic option log4cplus add cxxflags compile gcc work around issue add wno long long gcc option cxxflags openbsd openbsd early bug wcsftime function handle support formatter fix openbsd late show fail timeformat_test log4cplus compile dunicode cxxflags support support base cmake script directory cmake toolchain originally take cmake project library current folder perform step armv7 architecture script cmake_ios_armv7 cmake build_armv7 config release cmake build_armv7 config debug i386 architecture script cmake_ios_i386 cmake build_i386 config release cmake build_i386 config debug version sdk problem thread local storage get cmake environment detection phase work around issue make change edit cmake add line set cmake_cxx_compiler_works true set cmake_c_compiler_works true add line customize accordingly set macosx_bundle_gui_identifier com set cmake_macosx_bundle yes set cmake_xcode_attribute_code_sign_identity iphone developer set iphoneos_archs arm64 issue also comment line set log4cplus_have_tls_support set log4cplus_thread_local_var __thread cmake log4cplus_ _fmt unicode beware specifier work way unix like platform window visual studio visual studio specifier change mean conveniently print wchar_t string wprintf char string printf hand unix like platform keep mean print char string wprintf printf necessary c99 specifier susv2 specifier print wchar_t string unix like platform common grind platform appear wchar_t string print string unmodified format string argument unix like platform window conversion wchar_t back char depend locale unsupported compiler platform log4cplus support old break compiler since log4cplus version mean support platform compiler without decent support visual studio prior gcc prior bug report instruction successful resolution report bug necessary provide enough information log4cplus exact release version git branch revision system log4cplus autotools visual studio solution version cmake autotools provide configure script parameter environment variable attach generate config log define hxx cmake provide configuration release debug relwithdebinfo non default cmake_ variable value visual studio provide project configuration release release_unicode debug debug_unicode visual studio version provide target cpu case mingw provide exact compiler distribution tdm nuwen log4cplus client application share library log4cplus static library log4cplus log4cplus link executable share library dll log4cplus link share library library load dynamically library link application log4cplus lib log4cplususd lib liblog4cplus dll etc window application unicode wchar_t provide error message provide stack trace provide log4cplus property configuration provide self contain test case possible license library license apache public license clause bsd license please read include license detail contribution log4cplus bug tracker wiki host sourceforge except log4cplus source host github allow project integrate travis service offer github patch anybody contribute log4cplus development contribute source change reasonable form merge request git branch patch attach ticket bug tracker send log4cplus devel mail list unless obvious always state branch release tarball patch base upon mailto log4cplus devel list sourceforge net format please common sense follow style surround follow emacs style base microsoft style guide line commonlisp custom like indentation style add style microsoft stroustrup offset alist innamespace inline open inher cont lineup multi inher arglist cont nonempty template args cont tool system log4cplus support multiple system gnu autoconf automake libtool aka autotools cmake visual studio solution project autotools consider primary system unix like platform however cmake still usable unix like platform well window depend compiler tool chain want visual studio visual studio solution project however cmake system still work produce useful form mingw64 tool chain cmake system consider primary autotools base system unsupported mingw makefiles option mingw make similar msys makefiles option untested unsupported autotools makefile system hand write however generate makefile tpl makefile def gnu autogen make add new source easy regenerate makefile configure script testsuite script part autotools system script doautoreconf script source root directory invoke necessary tool correct order log4cplus closely follow autoconf automake libtool development master branch always generate late available version tool
C C++;https://github.com/VcDevel/Vc;maintenance mode long actively develop however continue review pull request bugfixes community may interest switch gcc include experimental version std simd part libstdc also work clang feature present present std simd eventually turn depend std simd portable overhead type explicitly parallel program recent generation cpu gpus particular require parallel cod full efficiency parallelism require sequence operation apply different input cpu gpus thus reduce necessary hardware instruction decode schedule favor arithmetic logic unit execute instruction synchronously cpu architecture implement via simd register instruction single simd register store value single simd instruction execute operation value gpu architecture thread perfect sync feed single instruction decoder scheduler thread local memory give index calculate offset memory load store current compiler automatic transformation scalar cod simd instruction auto vectorization however compiler must reconstruct intrinsic property algorithm lose developer write purely scalar consequently compiler vectorize give efficient parallel variant especially large parallel loop span multiple function even translation unit often transform efficient simd library provide miss link type enable explicitly state parallel operation multiple value parallelism therefore add via type system compete approach state parallelism via new control structure consequently new semantics inside body control structure free software library ease explicit vectorization intuitive api provide portability different compiler compiler version well portability different vector instruction set thus application write compile avx avx2 sse2 sse4 sse4a scalar avx development neon development nvidia gpus cuda research intel drop mic support icc also remove support usage compiler explorer simdize total momentum time step matrix vertical vectorization scale different vector size however instructive compare similar solution language library vortex show simdize iteration many std vector note important march flag compare plain mavx2 scalar product let start calculate scalar product builtin float easily vectorize float_v type scale etc scalar product calculate parallel depend target hardware capability comparison vectorization intel sse intrinsics verbose prefix notation function call neither scale avx avx etc portable simd isas requirement cmake compiler gcc clang icc visual studio bite target instal clone initialize git submodules create directory configure cmake add relevant option optionally specify installation directory optionally include unit test window multiple version visual studio instal select see cmake help list possible generator window also open sln visual studio ide documentation documentation generate via documentation doxygen doc subdirectory alternatively find nightly documentation publication kretz extend explicit parallel program via simd vector type goethe university frankfurt dissertation kretz lindenstruth library explicit vectorization software practice experience kretz efficient multi many core system vectorization multithreading university heidelberg work integrate functionality standard library license release term clause bsd
C C++;https://github.com/mattreecebentley/plf_indiesort;plf_indiesort sort wrapper enable random access std sort sort non random access container increase performance sort large type random access container temporary memory cost sizeof pointer sizeof size_t sort non random access iterators container sizeof cost random access iterators container small unsigned integer able store size range sort unsigned char indiesort temporary memory cost mention non problematic container iterators random_access therefore std sort element type large non trivially movable copyable average across number sort element fast std sort vector array large structs byte crossover point increase performance std sort type large byte fast std list internal sort type small byte std list internal sort fast type large byte write previous next pointer std sort fast vector array type small byte etc compatible
C C++;https://github.com/projectchrono/chrono;project chrono pipeline bsd project chrono represent community effort aim produce physic base simulation infrastructure base platform independent open source design name software infrastructure chrono feature list application area chrono often vehicle dynamic robotics machine design vehicle dynamic chrono mature support tire terrain interaction simulation project documentation development release release feature physic rigid body support flexible body support ancf rotational nonlinear finite element analysis support fluid solid interaction problem via chrono fsi module coulomb friction capture stick slip phenomenon support roll friction spin friction support handle frictional contact via approach complementarity approach penalty approach spring damp non linear response user define large collection joint constraint spherical revolute prismatic universal glyph screw bevel spur gear pulley etc unilateral constraint constraint impose trajectory force motion spline curve surface etc constraint limit elbow constraint rheonomic holonomic custom constraint linear motor custom constraint pneumatic cylinder custom constraint motor reducer mode etc fly constraint activation deactivation simplify dynamic powertrain clutch brake etc sophisticate see companion chrono vehicle module physical item arbitrary number asset define visualization shape custom property etc solver hht solver index differential algebraic equation symplectic first order half implicit euler solver large frictional contact problem speed impulse level solver handle large frictional contact problem handle redundant ill pose constraint stabilization projection method avoid constraint drift static analysis solver inverse kinematics interactive manipulation collision detection feature support compound sphere cub convex geometry triangle mesh etc additional collision support provide bullet collision detection engine wrap inside chrono engine broad phase collision detection sweep prune sit narrow phase collision detection aabb obb binary volume tree handle geometry detail detail phase custom primitive primitive fallback safety envelope around object report penetration depth distance etc body activate deactivate selectively enter collision detection detail ansi compliant syntax optimize custom class vector quaternion matrix optimize custom class coordinate system coordinate transformation feature custom compact algebra via operator overload operation point speed acceleration base quaternion algebra profile fast execution custom sparse matrix class custom redirectable stream class feature platform independent archive modern syntax special archive engine easy reliable persistent transient serialization include versioning deep pointer storage expandable time class factory custom pseudo time type information allow persistence even case name mangle different compiler high resolution timer platform independent class create postscript output interface matlab cosimulation simulink import step cad define complex geometry online offline visualization irrlicht pov ray respectively class genetic classical optimization class interfacing external geometric nurbs spline script via makefile system base cmake cross platform window bite linux osx
C C++;https://github.com/chronoxor/CppServer;cppserver awesome linux linux window window window visual ultra fast low latency asynchronous socket server client library support tcp ssl udp http http websocket protocol 10k connection solution integration high level message protocol base fast binary cppserver api content feature feature requirement requirement asio service asio service asio timer asio timer tcp chat server tcp chat server tcp chat client tcp chat client ssl chat server ssl chat server ssl chat client ssl chat client udp echo server udp echo server udp echo client udp echo client udp multicast server udp multicast server udp multicast client udp multicast client simple protocol simple protocol simple protocol server simple protocol server simple protocol client simple protocol client http http http http websocket chat server websocket chat server websocket chat client websocket chat client websocket secure chat server websocket secure chat server websocket secure chat client websocket secure chat client performance performance benchmark round trip benchmark round trip tcp echo server tcp echo server ssl echo server ssl echo server udp echo server udp echo server simple protocol server simple protocol server websocket echo server websocket echo server websocket secure echo server websocket secure echo server benchmark multicast benchmark multicast tcp multicast server tcp multicast server ssl multicast server ssl multicast server udp multicast server udp multicast server websocket multicast server websocket multicast server websocket secure multicast server websocket secure multicast server benchmark web server benchmark web server http trace http trace openssl certificate openssl certificate production production development development certificate authority certificate authority ssl server certificate ssl server certificate ssl client certificate ssl client certificate diffie hellman key exchange diffie hellman key exchange feature cross platform linux macos window asynchronous support cpu scalability design service per thread thread pool support transport protocol tcp tcp chat server ssl ssl chat server udp udp echo server udp multicast udp multicast server support web protocol websocket websocket chat server websocket secure websocket secure chat server support swagger iterative documentation support message protocol base fast binary requirement linux macos window optional visual linux require package gil git link setup repository linux macos window msys2 window mingw window visual studio asio service asio service host client server base asio implement base asio library separate thread perform asynchronous operation communication common usecase instantiate asio service start service attach tcp udp websocket server client asio service handle several server client asynchronously time thread want scale server client possible create asio service handle server client balance also possible dispatch post custom handler thread dispatch execute handler immediately current thread otherwise handler enqueued queue opposite post method always enqueue handler queue come custom asio service dispatch post method output follow asio timer come asio timer wait action future provide absolute time relative time span asio timer synchronous asynchronous mode output follow tcp chat server come tcp chat server handle multiple tcp client session multicast receive message session also possible send admin message directly server tcp chat client come tcp chat client connect tcp chat server allow send message receive new message ssl chat server come ssl chat server handle multiple ssl client session multicast receive message session also possible send admin message directly server similar tcp except prepare ssl context handshake handler ssl chat client come ssl chat client connect ssl chat server allow send message receive new message similar tcp except prepare ssl context handshake handler udp echo server come udp echo server receive datagram mesage udp client resend back without change udp echo client come udp echo client send user datagram message udp server listen response udp multicast server come udp multicast server multicast address multicast datagram message client join correspond udp multicast group udp multicast client come udp multicast client multicast address join udp multicast group order receive multicasted datagram message udp server simple protocol simple protocol define simple protocol server come simple protocol server process client request answer correspond response send server notification back client simple protocol client come simple protocol client connect simple protocol server allow send request receive correspond response http server come http cache server allow manipulate cache http method get post put delete follow link open swagger iterative documentation http client come http client allow send http request get post put delete receive http response http server come http cache server allow manipulate cache http method get post put delete secure transport protocol follow link open swagger iterative documentation http client come http client allow send http request get post put delete receive http response secure transport protocol websocket chat server come websocket chat server handle multiple websocket client session multicast receive message session also possible send admin message directly server follow link open websocket chat server websocket chat client come websocket chat client connect websocket chat server allow send message receive new message websocket secure chat server come websocket secure chat server handle multiple websocket secure client session multicast receive message session also possible send admin message directly server similar websocket except prepare websocket secure context handshake handler follow link open websocket secure chat server websocket secure chat client come websocket secure chat client connect websocket secure chat server allow send message receive new message similar websocket except prepare websocket secure context handshake handler performance come several communication scenario time measurement benchmark environment follow benchmark round trip scenario send lot message several client server server response message resend similar response client benchmark measure total round trip time send message receive response message throughput count error tcp echo server client thread client thread ssl echo server client thread client thread udp echo server client thread client thread simple protocol server client thread client thread websocket echo server client thread client thread websocket secure echo server client thread client thread benchmark multicast scenario server multicasts message connect client benchmark count total message receive client work time measure message throughput count error tcp multicast server client thread client thread ssl multicast server client thread client thread udp multicast server client thread client thread websocket multicast server client thread client thread websocket secure multicast server client thread client thread benchmark web server http trace server client thread client thread http trace server client thread client thread openssl certificate order create openssl base server client prepare set ssl certificate production depend project may need purchase traditional ssl certificate sign certificate authority instance want else web browser talk websocket project need traditional ssl certificate development command enter order list generate self sign certificate development test purpose certificate authority create private key remove passphrase create self sign certificate convert self sign certificate pfx convert self sign certificate pem ssl server certificate create private key server remove passphrase create csr server create certificate server convert server certificate pfx convert server certificate pem ssl client certificate create private key client remove passphrase create csr client create client certificate convert client certificate pfx convert client certificate pem diffie hellman key exchange create parameter
C C++;https://github.com/kkos/oniguruma;quality total fuzzing trustinsoft oniguruma long time oniguruma attack google search japan issue oniguruma modern flexible regular expression library encompass feature different regular expression traditionally exist different language character encode specify per regular expression object support character encode ascii utf utf 16be utf 16le utf 32be utf 32le euc euc euc euc shift_jis big5 gb18030 koi8 cp1251 iso iso iso iso iso iso iso iso iso iso iso iso iso iso iso gb18030 contribute kubo takehiro cp1251 contribute byte doc syntax contribute seanofw notice configure script posix api enable early version disable default need application binary compatibility posix api specify enable binary compatible posix api yes instead enable posix api yes start enable posix api yes support source level compatibility early posix api issue version master branch unreleased update unicode version whole option onig_option_dont_capture_group onig_option_ignorecase_is_ascii onig_option_find_longest fix problem find fuzz version new api onig_option_callback_each_match new api onig_option_ignorecase_is_ascii new api onig_syntax_python fix problem find fuzz version new configure option enable binary compatible posix api yes new api limit maximum number call subexp call new api onig_option_not_begin_string not_end_string not_begin_position fix behavior onig_option_notbol noteol fix many problem find fuzz fix many problem find coverity fix cve turn problem late cygwin mingw generate libonig def issue version revise fix issue version posix api disable default unix enable configure enable posix api yes update unicode version new point sequence notation hhhh hhhh oooo oooo new api retry limit search function new api maximum nest level subexp call fix behavior isolate option perl java syntax version new api regset set regexes fix cve fix cve affect utf utf utf encode fix cve affect posixbasic emacs grep syntax fix cve fix problem find libfuzzer test version security fix release fix cve fix cve fix cve fix many problem find libfuzzer test version reiwa add doc syntax direct thread gcc clang update unicode version new unicode text segment mode option original license bsd license case linux distribution package fedora dnf oniguruma devel rhel centos yum oniguruma debian ubuntu apt libonig5 arch pacman oniguruma opensuse zypper oniguruma case manual compilation linux unix cygwin platform autoreconf vfi case configure script find configure make make uninstall make uninstall configuration check onig config cflags onig config libs onig config prefix onig config exec prefix case window 32bit platform visual studio library make_win bat onig_s lib static link library onig dll dynamic link library make test program make_win bat test alternatively oniguruma dependency manager git clone vcpkg bootstrap vcpkg bat vcpkg integrate vcpkg oniguruma oniguruma port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository regular expression see doc doc doc doc japanese usage include oniguruma program oniguruma api see doc api oniguruma api want disable uchar type unsigned char definition oniguruma define onig_escape_uchar_collision include oniguruma want disable regex_t type definition oniguruma define onig_escape_regex_t_collision include oniguruma compile link command line unix cygwin prefix usr local case sample usr local lib lonig want static link library onig_s lib win32 add option donig_extern extern compiler sample program description sample callout callouts sample count callout count sample echo user define callouts name sample encode encode sample listcap capture history sample name name group callback sample posix posix api sample sample regset regset api sample scan onig_scan sample simple minimum oniguruma api sample sql variable meta character sample user_property user define unicode property test program description sample syntax perl java asis syntax test sample crnl enable crnl line terminator test source description oniguruma oniguruma api header public onig config configuration check program template regenc character encode framework header regint internal definition regparse internal definition regparse regcomp regcomp compile optimization function regenc character encode framework regerror error message function regext extend api function deluxe version api regexec search match function regparse parse function regsyntax pattern syntax function syntax definition regtrav capture history tree traverse function regversion version info function hash table function header hash table function oniggnu gnu regex api header public reggnu gnu regex api function onigposix posix api header public regposerr posix error message function regposix posix api function mktable character type table generator ascii ascii encode euc_jp euc encode euc_tw euc encode euc_kr euc euc encode sjis shift_jis encode big5 big5 encode gb18030 gb18030 encode koi8 koi8 encode koi8_r koi8 encode cp1251 cp1251 encode iso8859_1 iso latin iso8859_2 iso latin iso8859_3 iso latin iso8859_4 iso latin iso8859_5 iso cyrillic iso8859_6 iso arabic iso8859_7 iso greek iso8859_8 iso hebrew iso8859_9 iso latin turkish iso8859_10 iso latin nordic iso8859_11 iso thai iso8859_13 iso latin baltic rim iso8859_14 iso latin celtic iso8859_15 iso latin west european euro iso8859_16 iso latin utf8 utf encode utf16_be utf 16be encode utf16_le utf 16le encode utf32_be utf 32be encode utf32_le utf 32le encode unicode common cod unicode encode unicode_fold_data unicode fold window testc test program window
C C++;https://github.com/ryanhaining/cppitertools;cppitertools range base loop add ons inspire builtins itertools library like itertools python3 builtins library lazy evaluation wherever possible note everything inside iter namespace follow update test status status compiler travis gcc gcc gcc clang clang clang clang clang appveyor msvc msvc table content range range enumerate enumerate zip zip zip _longest zip imap imap filter filter filterfalse filterfalse unique _everseen unique_everseen unique _justseen unique_justseen takewhile takewhile dropwhile dropwhile cycle cycle repeat repeat count count groupby groupby starmap starmap accumulate accumulate compress compress sort sort chain chain chain _iterable chainfrom_iterable reverse reverse slice slice slide _window sliding_window chunk chunk batch batch combinatoric fuctions product product combination combination combination _with _replacement combinations_with_replacement permutation permutation powerset powerset requirement library header rely standard library exception zip_longest boost optional include include provide tool except zip_longest must include separately may also include individual piece relevant header include test may either scons bazel test scons seem work good view test output bazel command directory test scons must within test directory bazel absolute command directory inside project requirement pas object itertools work iterables inputiterators copy move underlie element itertools need forwarditerators additional requirement note document however case fairly obvious time element need appear multiple time combination cycle look specifically sort library take every effort rely little possible underlie iterables anything noteworthy need describe document guarantee mean object return api function class move constructible copy constructible assignable iterators work another iterable tag inputiterators behave feedback find anything work expect compile believe divergence itertools behavior sort error please let know preferable mean would open issue github want talk issue feel would appropriate github issue want open email directly whatever describe problem pretty responsive past believe misuse library try put blame unclear document take step clarify please contact concern open feedback library library function create return object properly templated iterable pas exact name type precisely templated unspecified rely function describe document plan function simple straight forward mean page fine feel like need open header probably describe something let know handle rvalues lvalues rule pretty simple library largely without knowledge let take case enumerate return object bind reference vec copy produce neither vec element hold rvalue pas enumerate bind reference would unsafe consider instead enumerate return object temporary move return object contain std vector rather reference may seem like contrive matter enumerate pas function call like enumerate obviously something like enumerate zip object return zip must move enumerate object specific itertools mix nest pipe syntax wherever make sense implement pipe operator become common similar library syntax available pull iterable call place tool follow tool support pipe remain leave although multiple reasonable version obvious would expect behave accumulate chain _iterable chunk batch combination combination _with _replacement cycle dropwhile enumerate filter filterfalse groupby imap permutation powerset reverse slice slide _window sort starmap takewhile unique _everseen unique _justseen personally care pip style seem desire user range underlie iterator achieve effect range function range different way stop point provide print start stop provide print start stop step provide print negative value allow well print step size empty range raise exception follow print nothing addition normal integer range operation double numeric type support template print note typical range current value incremented step size repeatedly value step float point range value recomputed step avoid accumulate float point inaccuracy value start step steps_taken latter bite slow accurate range also support follow operation size get number element range enable float point range accessors start stop step index give range element range enumerate continually yield container similar pair basic structs index element also work structure bind declaration usage appear filter call filter predicate iterable predicate callable filter yield value true predicate print value great predicate pas element test truth print non value filterfalse similar filter print value false predicate print value great predicate pas element test truth print value unique _everseen additional requirement underlie value must copy constructible filter adaptor generate value never see work object must specialize std hash print unique _justseen another filter adaptor omit consecutive duplicate print usage takewhile yield element iterable first element false predicate encounter print false predicate dropwhile yield element include first element true predicate print cycle additional requirement input must forwarditerator repeatedly produce value iterable loop infinite break control flow structure necessary exit print repeatedly some_condition true repeat repeatedly produce single argument forever give number time repeat bind reference pas lvalue move give rvalue yield reference item completion print time print forever count effectively range without stop point count argument start count positive step count start count positive step count start count step technical limitation unlike long integer type need count would eventually exceed maximum possible value type minimum negative step count actually implement range stop point std numeric_limits max integral type long default print etc groupby additional requirement input iterator operator return reference reference must remain valid iterator incremented roughly equivalent require input forwarditerator separate iterable group share common key follow create new group whenever string different length encounter note like itertools groupby sort iterate make new group time key change thus group unsorted key may appear multiple time starmap take sequence tuple like object anything work std get unpack object individual argument function call take vector pair ints pas function expect ints element pair first second argument function starmap also work tuple like object tuple like object even contain object different long functor work multiple type call callable struct overload operator work long overload return type work tuple mix type accumulate additional requirement type return functor reference remove must assignable differ std accumulate humble opinion name std reduce std foldl similar functional reduce see intermediate default keep sum print second optional argument may provide alternative binary function compute follow multiply number rather add print note intermediate type must support default construction assignment zip take arbitrary number range different type efficiently iterate parallel iterator container incremented simultaneously dereference iterator zip range get tuple element iterators hold usage zip _longest terminate long sequence instead short repeatedly yield tuple boost optional type yield sequence respective iterators boost dependency zip_longest itertools hpp must include separately follow loop print either nothing element tuple yield output imap take function iterables number iterables must match number argument function apply function element element iterable terminate short sequence print square number vec sequence add correspond element vector together print note name imap choose prevent confusion collision std map relate itertools imap builtin map compress yield value correspond true selector iterable terminate short sequence print sort additional requirement input must forwarditerator allow iteration sequence sort order sort produce new sequence copy element modify original sequence provide way iterate exist element sort also take optional second argument provide default std iterables pas sort require iterator operator const member output chain additional requirement underlie iterators container operator must exact type chain set range together long iterators dereference type chain _iterable similar chain rather take variadic number iterables take iterable iterables chain contain iterables together simple show vector vector represent rag array print row major order reverse additional requirement input must compatible std rbegin std rend iterate element sequence reverse order slice return select element range parameter start stop step range return start stop take every step element output slide _window additional requirement input must forwarditerator take section range increment whole section window size large length input sliding_window yield nothing begin end take section size output usage chunk chunk yield subsequent chunk iterable block specify size final chunk may short rest chunk size give evenly divide length iterable usage print batch batch yield give number batch contain subsequent element iterable assume iterable contain least element size batch immaterial guarantee batch differ size usage print product additional requirement input must forwarditerator generate cartesian product give range put together usage product also accept repeat template argument currently way repeat read need product seq instead product seq please open issue usage combination additional requirement input must forwarditerator generate length unique sequence input range usage combination _with _replacement additional requirement input must forwarditerator like combination replacement element print loop follow permutation additional requirement input must forwarditerator iterator must operator const generate permutation range std next_permutation usage powerset additional requirement input must forwarditerator generate every possible subset set usage
C C++;https://github.com/d-SEAMS/seams-core;seam defer structural elucidation analysis molecular simulation check status doc development ongoing also zenodo user contribution like review testimonial tutorial trajectory host wiki brief core seam molecular dynamic trajectory analysis engine note relate page describe obtain set trajectory warn unwilling nix system please note must manage dependency manually include compiler version optionally provide conda environment citation publish journal chemical information may also read preprint software please cite follow goswami goswami singh seam defer structural elucidation analysis molecular simulation journal chemical information correspond bibtex entry article goswami2020 author goswami rohit goswami amrita singh jayant kumar title seam defer structural elucidation analysis molecular simulation journal journal chemical information year month mar day publisher american chemical society issn doi jcim 0c00031 compilation deterministic system generate bug report uniform usage statistic also handle lua script engine note lua function document api also provide conda environment fallback also recommend macos user conda although strongly suggest nix macos system follow instruction may suitable assume presence installation proceed note new version cmake within conda environment conflict lua opt conda environment intend behavior usr local instead nix since project nix simply follow root directory long method fast method software cachix binary show usage instal yodastruct binary library note path yml relative folder binary call confuse handle relative path command yodastruct lua_inputs config yml top level directory set path relative top level directory convention well language server support generate compile_commands json work language server like follow command note need actually compile project simply need get compiler database language server commit json development simply nix environment completely nix sample input simply software ensure input child directory test apart test suite yodastruct_test binary drop nix environment execute gdb note regular installation via nix env test installation developer documentation develop sometimes expedient update package useful note handle pin package apart github thus might need say test nix leak performance test leak clang follow overview mon jan line calculate follow cloc line image cloc 20_15 png contribute please ensure contribution format accord clang format clang format configuration specifically consider follow sublime user sublime text emacs vim visual studio integrate support visual studio xcode suggestion derive depreciate also note contribute need read contribute certain reason like common sense commit hook note expect compliance clang format mention may enforce provide script pre commit hook ensure new commit accordance clang format acknowledgement follow tool project compilation reference descriptive good tool developer api format git hook enforce format script engine configuration third party library library good stacktraces without gdb parse command line option terminal style ansi interfacing lua work yaml safe fast format linear algebra package basic linear algebra subprogram boost work different coordinate boost spherical harmonic fast modern linear algebra calculate near neighbor
C C++;https://github.com/daniele77/cli;cli cross platform header library interactive command line interface cisco style heart important break api change version cli make break change order add functionality migrate application new cli version see section async program scheduler come library feature header cross platform linux window menu submenu remote session telnet persistent history navigation arrow key autocompletion tab key async interface color get cli library dependency library dependency need remote session library depend asio either standalone version boost version provide telnet server remote session installation library header consist entirely header contain template inline function require separately compile library binary special treatment link extract archive wherever want must remember specify cli optionally asio boost path compile source fancy cmake script provide mkdir cmake sudo make want specify installation path mkdir cmake dcmake_install_prefix path make compilation find directory cpp correspond executable compile include cli optionally asio boost header link pthread linux optionally boost system compile cmake mkdir compile require boost asio library cmake dcli_buildexamples compile boost asio library cmake dcli_buildexamples dcli_useboostasio cmake dcli_buildexamples dcli_useboostasio dboost_root compile standalone asio library cmake dcli_buildexamples dcli_usestandaloneasio cmake dcli_buildexamples dcli_usestandaloneasio dasio_includedir cmake directory also find gnu make makefile noasio makefile boostasio makefile standaloneasio window nmake makefile noasio win makefile boostasio win makefile standaloneasio win visual studio solution need specify asio library path follow way gnu make boost make cxxflags isystem ldflags make cxxflags isystem opt boost_1_66_0 x86 include ldflags opt boost_1_66_0 x86 lib standalone asio make cxxflags isystem make cxxflags isystem opt asio include want clang instead gcc set variable cxx clang window nmake optionally set environment variable asio boost provide library path visual studio console start nmake pas makefile win visual studio console follow command compile require asio nmake makefile noasio win compile boost asio set boost nmake makefile boostasio win compile standalone asio set asio nmake makefile standaloneasio win visual studio solution currently solution compile boost dependency set environment variable boost open cli sln compilation doxygen documentation doxygen instal system get html documentation library way doc doxy doxygen doxyfile cli usage command shortcut start application cli present prompt name provide cli constructor mean root menu enter submenu type submenu name see prompt change reflect name current submenu back parent menu must enter name parent menu menu enter exit exit cli help print list command available description submenu name enter submenu parent menu name return parent menu command current menu exec command command submenu full path exec command also arrow key navigate history command tab key autocomplete command menu parameter parse cli interpreter manage correctly sentence quote double quote character space comprise quote double quote consider single parameter command character inside command parameter escape backslash cli echo single parameter single parameter cli echo single parameter single parameter cli echo single quote inside double quote parameter single quote inside double quote parameter cli echo double quote inside single quote parameter double quote inside single quote parameter cli echo escape quote inside parameter escape quote inside parameter cli echo escape single quote inside parameter escape single quote inside parameter cli echo also show backslash also show backslash async program scheduler cli asynchronous library handler command execute scheduler thread provide user possibly main thread allow develop single thread application without need worry synchronization application must scheduler pas clilocalterminalsession library provide scheduler loopscheduler boostasioscheduler standaloneasioscheduler loopscheduler simple depend library first choice need remote session boostasioscheduler standaloneasioscheduler wrapper around asio io_context object need boostasioclitelnetserver standaloneasioclitelnetserver internally boost asio asio also application asio way set application must call scheduler enter scheduler loop comamnd handler library execute thread call scheduler exit scheduler loop call scheduler stop action associate exit command submit work execute scheduler invoke method scheduler post const std function scheduler thread safe post function object thread execute scheduler thread loopscheduler boostasioscheduler finally boostasioscheduler application already boost asio boost asio io_context object case standalone asio similar add menu command must provide least root menu cli add menu exist menu get hierarchy tree finally add command menu menu insert method library support add command handler via free function std function lambda license distribute boost software license version see accompany license txt license txt copy contact please report issue question feature request idea anything else always contact via twitter dpallastrelli contribute need help feedback user stakeholder even simple question thing work certain way carry value improve library even question ask github provide valuable information improve library hesitate question insignificant unimportant company cli library please consider become sponsor keep project strong dependable
C C++;https://github.com/taglib/taglib;taglib taglib audio metadata library taglib library read edit metadata several popular audio format currently support id3v1 id3v2 mp3 ogg vorbis comment id3 tag flac mpc speex wavpack trueaudio wav aiff mp4 ape asf taglib distribute gnu less general public license lgpl mozilla public license mpl essentially mean may proprietary application change make taglib must contribute back project please review license consider taglib project id3v2 ogg vorbis flac gnu less general public license mozilla public license
C C++;https://github.com/JuliaStrings/utf8proc;utf8proc appveyor small clean library provide unicode normalization case fold operation utf initially jan behrens rest public software deserve nearly credit package bless public software group julia take development utf8proc since original developer move project utf8proc basic unicode support julia julia developer become involve want add unicode support feature original utf8proc package also include ruby postgresql plug remove utf8proc order focus exclusively library time plan add back release separate package utf8proc package license free open source mit expat plus certain unicode govern similarly permissive unicode please see include license detail information quick start typical user utf8proc rather clone directly github compilation library make also library header make default usr local lib usr local bin change make prefix dir make check test make clean delete generate alternatively compile cmake compiler include makefile support gnu linux flavor macos gcc like compiler window user typically cmake unix like system compiler may need pas modify setting make order correct compilation flag share library system acc compiler gnu make instal gmake compile gmake need gnu coreutils command may want pas prefix opt libdir opt lib hpux32 similar change installation location general information library find directory successful compilation name libutf8proc static library libutf8proc dynamic library unicode version support unicode normalization follow option normalization form stable compose normalization form stable decompose normalization form stable compose compat normalization form stable decompose compat library documentation library find utf8proc header utf8proc_map function likely map utf string unless want allocate memory see github issue contact bug report feature request query utf8proc issue page see also independent lua translation library also available
C C++;https://github.com/vczh-libraries/GacUI;gacui gpu accelerate user interface wysiwyg develop tool xml support bind mvvm feature read first release gacui project put source repo intend create pull request end user document home page click gaclib click gacui click mirror github page content project show start marvelous gui library section show demo gui library notice library require source directly release vlpp workflow gacui prefer xml library development content gui library provide follow feature develop gui pure script xml even javascript construction cross platform ability window release linux xgac beta release macos igac beta release browser wasm rich control library container control support mvc virtual list mode control template system write gpu acceleration xml resource support provide generate multiple xml binary resource image compress binary format program also generate behind fill event handler suggest mvvm bind instead generate update gacgen exe merge modification modification xml together generate new behind update still exist note see obvious mark userimpl generate want add modification outside place discard next gacgen exe mvvm bind define interface require mvvm pattern xml generate interface declaration also expression bind statement event handler instead write behind
C C++;https://github.com/Microsoft/bond;bond logo stylize glue bond csharp nuget bond bond open source cross platform framework work schematize support cross language serialization deserialization powerful generic mechanism efficiently manipulate bond broadly microsoft high scale service bond publish github detail see user manual deprecate remove may gbc bond compiler codegen see also compiler power gbc discussion bond compare similar framework see dependency bond library require feature currently limit support visual compiler require additionally bond need cmake haskell boost additionally bond require rapidjson bond repository git submodules rapidjson clone recursive flag already rapidjson would like add argument dbond_find_rapidjson true cmake invocation find_package rapidjson provide rapidjson library bond also rapidjson follow specific instruction various platform linux bond must compiler test clang gnu recommend clang fast template heavy like bond follow command minimal set package need core bond library ubuntu additionally need haskell tool distro ship new enough version may encounter non obvious failure recommend instal late stack outside package management root bond directory directory directory destination bond module test package need cmake need different option core library tree simply update new option follow command directory execute test unit test large may want job parallel assume enough memory macos xcode follow command require package homebrew boost optional need support bond macos either standard nix makefiles xcode order generate makefiles root bond directory alternatively generate xcode project pas xcode option cmake unit test check target xcode make directory note homebrew need boost source tell cmake location homebrew libpython set python_library variable window follow tool visual studio vs2017 require bond source net core sdk alternative vs2017 bond source cmake haskell stack behind proxy set environment variable http_proxy ready version bond open solution sln visual studio usual unit test also within solution net core sdk version bond additionally require boost may need set environment variable boost_root boost_librarydir specify boost pre library environment msvc msvc find core bond library require boost header pre library need unit test boost library find system test generate solution bond core visual studio follow command root bond directory set preferredtoolarchitecture x64 select bite toolchain dramatically improve speed bond unit test big bite tool instead cmake also cmake gui specify configuration setting configuration step perform generate solution bond sln visual studio command line cmake execute unit test alternatively bond dependency manager bond port vcpkg keep date microsoft team member community contributor version date please create issue pull request vcpkg contribute interest contribute bond take look contribution get start
C C++;https://github.com/ndevilla/iniparser;iniparser overview module offer parse ini level see complete documentation html format directory open html index html html capable browser key feature small around sloc inside portable dependancies write ansi pedantic c89 fully reintrant easy make thread safe surround library call mutex project simple make root project enough get static libiniparser share libiniparser library compile consider try follow rule make check unitary test make compile iniexample iii license software release mit license see license full information version current version version introduce break change api old version legacy api available tag faq see faq faq directory answer frequently ask question faq zhcn faq zhcn
C C++;https://github.com/microsoft/snmalloc;snmalloc snmalloc high performance allocator snmalloc directly project header library ld_preload elf platform linux bsd rust key design feature memory free thread allocate require synchronise operation free memory different thread initially allocate take lock instead novel message pas scheme return memory original allocator recycle enable remote deallocations perform single atomic operation enable great scale core count allocator large range page reduce amount meta require fast path highly optimise branch fast path malloc linux compile clang platform dependency abstract away enable port platform snmalloc design particular well suit follow difficult scenario problematic allocator allocation thread free different thread deallocations occur large batch cause massive reduction performance allocator snmalloc comprehensive detail snmalloc design find accompany snmalloc pdf difference current describe difference since write performance snmalloc improve considerably snmalloc documentation instruction snmalloc doc instruction port snmalloc doc port contribute project welcome contribution suggestion contribution require agree contributor license agreement cla declare right actually grant right contribution detail visit submit pull request cla bot automatically determine whether need provide cla decorate appropriately label comment simply follow instruction provide bot need across repos cla project adopt microsoft open source information see conduct contact opencode microsoft com mailto opencode microsoft com additional question comment
C C++;https://github.com/google/benchmark;benchmark coverage library benchmark snippet similar unit test get start see requirement requirement installation installation see usage usage full user guide user guide comprehensive feature overview may also help read google test structural aspect apis similar resource discussion irc channel benchmark additional tool documentation doc tool assembly test documentation doc assemblytests requirement library however require include compiler standard library support follow minimum version require library gcc clang visual studio intel update see platform specific instruction platform specific instruction installation describe installation process cmake pre requisite need git cmake instal _see dependency dependency detail regard support version tool benchmark benchmark_main library test unix system directory look something like next test check want library globally also note google benchmark require google test test dependency provide way checkout google test source benchmark googletest otherwise dbenchmark_download_dependencies specify configuration library automatically require dependency wish test add dbenchmark_enable_gtest_tests cmake_args debug release default benchmark debug library see warn output case release library instead add dcmake_build_type release generate system show config release command need properly support multi configuration tool like visual studio skip system like makefile enable link time optimisation also add dbenchmark_enable_lto true generate system gcc might need set gcc_ar gcc_ranlib cmake cache variable autodetection fail clang may need set llvmar_executable llvmnm_executable llvmranlib_executable cmake cache variable stable experimental library version main branch contain late stable version benchmarking library api consider largely stable source break change make upon release new major version new experimental feature implement test user wish test provide feedback new feature encourage try branch however branch provide stability guarantee reserve right change break api time usage basic usage define function execute measure register benchmark function benchmark macro ensure appropriate main function available benchmark compile link benchmark library libbenchmark follow step library directory create alternatively link benchmark_main library remove benchmark_main get behavior compile executable benchmark default pas help flag option information see guide usage cmake cmake recommend link project provide benchmark benchmark benchmark benchmark_main target target_link_libraries possible import instal version library alternatively incorporate library directly cmake project either way link library follow platform specific instruction gcc library gcc necessary link pthread library due gcc implement std thread fail link pthread lead runtime exception unless libc linker error see issue detail link pthread add pthread linker command note also lpthread potential issue order command line parameter visual studio shlwapi library lshlwapi require support call cpuinfo read registry either add shlwapi lib configuration property linker input follow also graphical version cmake open cmake gui binary path source plus cmake_install_prefix path source plus click configure generate open project fail try delete entire directory start unticking option intel update intel system studio update see instruction visual studio right click solution change intel solaris benchmark solaris want kstat library link lkstat user guide command line output format output format output output benchmark benchmark subset benchmark subset benchmark comparison comparison extra context extra context library runtime report consideration runtime report consideration pas argument pas argument custom benchmark name custom benchmark name calculate asymptotic complexity asymptotic complexity templated benchmark templated benchmark fixture fixture custom counter custom counter multithreaded benchmark multithreaded benchmark cpu timer cpu timer manual time manual time set time unit set time unit random interleave doc random_interleaving user request performance counter doc perf_counters prevent optimization prevent optimization report statistic report statistic custom statistic custom statistic registerbenchmark register benchmark exit error exit error fast keeprunning loop fast keep loop disable cpu frequency scale disable cpu frequency scale output format library support multiple output format benchmark_format flag set benchmark_format environment variable set format type console default format console format intend human readable format default format generate color output context output stderr tabular stdout tabular output look like json format output human readable json split top level attribute context attribute contain information general include information cpu date benchmark attribute contain list every benchmark json output look like csv format output comma separate value context output stderr csv stdout csv output look like output write benchmark benchmark_out option set benchmark_out specify output format benchmark_out_format json console csv set benchmark_out_format json console csv note csv reporter deprecate save csv csv parser specify benchmark_out suppress console output benchmark benchmark execute produce binary benchmark binary default accept option may specify either command line interface set environment variable execution every option_flag cli switch correspond environment variable option_flag exist default set cli switch always prevail complete list cli option available benchmark help switch subset benchmark benchmark_filter option benchmark_filter environment variable benchmark match specify comparison possible compare benchmarking see additional tool documentation doc tool extra context sometimes useful add extra context content print default section include information cpu benchmark want add context benchmark_context command line flag get effect api note attempt add second value key fail error message runtime report consideration benchmark binary execute benchmark function serially number iteration determine dynamically benchmark time measure time take ensure ultimate statistically stable fast benchmark function iteration slow benchmark function number iteration thus report case number iteration benchmark govern amount time benchmark take concretely number iteration least 1e9 cpu time great minimum time wallclock time minimum time minimum time set per benchmark call mintime register benchmark object average time report iteration multiple repetition request benchmark_repetitions command line option registration time benchmark function several time statistical across repetition also report well per benchmark entry preamble report include information machine benchmark pas argument sometimes family benchmark implement routine take extra argument specify family benchmark follow define family benchmark measure speed memcpy call different length precede quite repetitive replace follow short hand follow invocation pick appropriate argument specify range generate benchmark argument default argument range generate multiple command select follow range multiplier change multiple argument generate precede show method define sparse range follow show method define dense range benchmark performance std vector initialization uniformly increase size argument generate might benchmark depend input follow define family benchmark measure speed set insertion precede quite repetitive replace follow short hand follow macro pick appropriate argument product specify range generate benchmark pair benchmark may require specific argument value express range case argsproduct offer ability generate benchmark input combination product supply vector complex pattern input pas custom function apply allow programmatic specification arbitrary set argument benchmark follow enumerate dense range parameter sparse range second pas arbitrary argument benchmark possible define benchmark take arbitrary number extra argument benchmark_capture func test_case_name args macro create benchmark invoke func benchmark state first argument follow specify args test_case_name append name benchmark describe value pas note element args may refer global variable user avoid modify global state inside benchmark calculate asymptotic complexity big asymptotic complexity might calculate family benchmark follow calculate coefficient high order term time normalize root mean square error string comparison show follow invocation asymptotic complexity might also calculate automatically follow specify asymptotic complexity lambda function might customize high order term calculation custom benchmark name change benchmark name follow invocation execute benchmark bm_memcpy change prefix report memcpy templated benchmark produce consume message size sizeof range_x time also output throughput absence multiprogramming macro provide add benchmark template fixture fixture test create first define type derive benchmark fixture create register test follow macro benchmark_f classname method benchmark_define_f classname method benchmark_register_f classname method templated fixture also create templated fixture follow macro benchmark_template_f classname method benchmark_template_define_f classname method custom counter add counter user define name add column foo bar baz output state counter object std map std string key counter value latter double like class via implicit conversion double thus standard arithmetic assignment operator change value counter multithreaded benchmark counter set call thread benchmark finish counter thread sum sum value show benchmark counter constructor accept parameter value double bite flag allow show counter rat per thread iteration per thread average iteration invariant finally invert flag specify unit default benchmark counter onek kis1000 benchmark counter onek kis1024 compile mode late insert std initializer_list counter report console reporter default user counter print end table way bytes_processed items_processed best case counter couple line per benchmark default output suit print counter table column pas flag benchmark_counters_tabular true benchmark application best case lot counter lot line per individual benchmark note trigger reprint table header time counter set change individual benchmark correspond output benchmark_counters_tabular true pas note additional header print benchmark change bm_usercounter bm_factorial bm_factorial counter set bm_usercounter multithreaded benchmark multithreaded test benchmark invoke multiple thread simultaneously guarantee none thread start reach start benchmark loop finish thread exit benchmark loop behavior also provide keeprunning api global setup teardown wrap check thread index benchmarked thread want compare single thread may want real time wallclock measurement latency comparison without userealtime cpu time default cpu timer default cpu timer measure time spend main thread benchmark thread internally measurement may look instead way measure total cpu usage process thread control timer normally entire duration work loop auto state measure sometimes necessary work inside loop every iteration without count time benchmark time possible although recommend since high overhead manual time benchmarking something neither cpu time real time correct accurate enough completely manual time support usemanualtime function usemanualtime benchmarked must call setiterationtime per iteration benchmark loop report manually measure time case benchmarking gpu execution opencl cuda kernel opengl vulkan direct3d draw call accurately measure cpu time real time instead measure accurately dedicate api measurement report back setiterationtime set time unit benchmark millisecond may hard visually compare measure time since output give nanosecond per default order manually set time unit specify manually prevent optimization prevent value expression optimize away compiler benchmark donotoptimize benchmark clobbermemory function donotoptimize force store either memory register gnu base compiler act read write barrier global memory specifically force compiler flush pending write memory reload value necessary note donotoptimize prevent optimization way may even remove entirely already know second tool prevent optimization clobbermemory essence clobbermemory force compiler perform pending write global memory memory manage block scope object must escape donotoptimize clobber clobbermemory prevent call push_back optimize away note clobbermemory available gnu msvc base compiler statistic report mean median standard deviation repeat benchmark default benchmark single report however benchmark often noisy single may representative overall behavior reason possible repeatedly rerun benchmark number benchmark specify globally benchmark_repetitions flag per benchmark basis call repetition register benchmark object benchmark mean median standard deviation report additionally benchmark_report_aggregates_only true false benchmark_display_aggregates_only true false flag reportaggregatesonly bool displayaggregatesonly bool function change repeat test report default repeat report report aggregate option true aggregate mean median standard deviation maybe complexity measurement request report reporter standard output console however display aggregate option true aggregate display standard output output still contain everything call reportaggregatesonly bool displayaggregatesonly bool register benchmark object override value appropriate flag benchmark custom statistic mean median standard deviation nice may enough everyone may want know large observation real time constraint easy follow specify custom statistic calculate define lambda function registerbenchmark name args registerbenchmark name func args function provide alternative way create register benchmark registerbenchmark name func args create register return pointer new benchmark specify name invoke func args benchmark state object unlike benchmark registration macro global scope registerbenchmark call anywhere allow benchmark test register programmatically additionally registerbenchmark allow callable object register benchmark include capture lambda function object exit error error cause external influence communication occur within benchmark state skipwitherror const char msg function skip benchmark report error note future iteration keeprunning skip range version benchmark loop user must explicitly exit loop otherwise iteration perform user may explicitly return exit benchmark immediately skipwitherror function may point within benchmark include benchmark loop moreover skipwitherror require reach benchmark loop may return benchmark function early fast keeprunning loop mode range base loop preference keeprunning loop benchmark reason range loop fast keeprunning keeprunning require memory load store iteration count ever iteration whereas range variant able keep iteration count register empty inner loop range base method look like compare empty keeprunning loop look like unless compatibility require range variant write benchmark loop prefer disable cpu frequency scale see error might want disable cpu frequency scale benchmark
C C++;https://github.com/yhirose/cpp-httplib;single header cross platform http http library extremely easy setup include note multi thread block http library look non block library want simple server client ssl support ssl support available cpphttplib_openssl_support libssl libcrypto link note currently support version note ssl seem impossible avoid sigpipe case since operate system sigpipe suppress per message basis way make openssl library internal communication program need avoid terminate sigpipe fully general way might set signal handler sigpipe handle ignore server post put delete option method also support bind socket multiple interface available port static server follow mapping extension mime type extension mime type text mpga audio mpeg csv text csv weba audio webm txt text plain wav audio wave vtt text vtt otf font otf html htm text html ttf font ttf apng image apng woff font woff avif image avif woff2 font woff2 bmp image bmp application compress gif image gif atom application atom xml png image png pdf application pdf svg image svg xml mjs application javascript webp image webp json application json ico image icon application xml tif image tiff tar application tar tiff image tiff xhtml xht application xhtml xml jpeg jpg image jpeg xslt application xslt xml mp4 video mp4 xml application xml mpeg video mpeg application gzip webm video webm zip application zip mp3 audio mp3 wasm application wasm request handler note static server method thread safe log error handler exception handler exception handler get call user rout handler throw error pre rout handler post rout handler multipart form post receive content content receiver send content content provider without content length chunk transfer encode expect continue handler default server send continue response expect continue header keep alive connection timeout set maximum payload length read request body server send event please see server client default thread pool support threadpool default task queue default thread count std thread hardware_concurrency change cpphttplib_thread_pool_count want set thread count runtime convenient way override default thread pool supply thread pool accord need client note constructor scheme host port string support error list error error get http header post post parameter post multipart form put delete option timeout receive content content receiver send content content provider chunk transfer encode progress callback authentication note openssl require digest authentication proxy server support note openssl require digest authentication range keep alive connection redirect specific interface note feature available window yet compression server apply compression follow mime type content text type except text event stream image svg xml application javascript application json application xml application xhtml xml zlib support gzip compression available cpphttplib_zlib_support libz link brotli support brotli compression available cpphttplib_brotli_support necessary library link please see detail compress request body client compress response body client poll instead select select system call default since widely support want let poll instead cpphttplib_use_poll split note library since version window include window include window define win32_lean_and_mean beforehand note officially support late visual studio might work former version visual studio long verify pull request always welcome old version visual studio unless break conformance note window low cygwin window support license mit license yuji hirose special thank make great contribution polish library totally another level simple toy
C C++;https://github.com/GameFoundry/bsf;community support framework library aim provide unify foundation development real time graphical application whether game engine tool highlight grind modern clean user face api lightweight without crud often find old large solution clean highly modular architecture easily understand modify upon cross platform highly optimize multi thread core capable demand project focus modern technology high fidelity graphic fully document codebase extensive api reference current feature set include wide range high level system range math utility library physically base renderer back vulkan directx opengl way input gui physic audio animation script system asset support popular resource format feature detail list currently available feature list feature implement near far future get start head user manual section framework grind api reference look particular class method grab set work start tinker analyze figure thing work well document quickly framework compile framework source screenshots
C C++;https://github.com/libgd/libgd;graphic draw library open source library dynamic creation image programmer write wrapper available perl php language read write many different image format commonly generate chart graphic thumbnail anything else fly common application involve website development although standalone application library originally develop thomas boutell maintain many contributor see contributor contributor umbrella php net like contribute report bug see contribute document contribute security relate issue please contact pierre php net support available issue also mail list subscribe mail list send email devel subscribe list php net email send devel list php net etc please visit detail support image format support via via include jpeg via via include read support system libheif av1 decode via via builtin builtin builtin builtin via besides depend external library optional disable default render font configure customize font access complex text layout conversion rgba image bite index color image note libimagequant dual license gplv3 commercial license platform support mean whether automatic platform someone platform platform list would like add automatic please get touch much appreciate platform support linux x64 linux x86 linux arm64 window x86 window x64 window arm64 macos x64 macos s390 also know work almost variation bsd solaris etc environment test however many progamming language bind test libgd platform compiler compile c99 compliant compiler either cmake configure script gcc clang visual studio xcode mingw support version branch serie active support bug fix new addition add master active development branch release date yet start focus high quality vector draw apis full support actual argb bit 8bits float production ready yet
C C++;https://github.com/libjpeg-turbo/libjpeg-turbo;background libjpeg turbo jpeg image codec simd instruction accelerate baseline jpeg compression decompression x86 x86 arm powerpc mips system well progressive jpeg compression x86 x86 arm system system libjpeg turbo generally fast libjpeg else equal type system libjpeg turbo still outperform libjpeg significant amount virtue highly optimize huffman cod routine many case performance libjpeg turbo rival proprietary high speed jpeg codecs libjpeg turbo implement traditional libjpeg api well powerful straightforward turbojpeg api libjpeg turbo also feature colorspace extension allow compress decompress bite big endian pixel buff rgbx xbgr etc well full feature java interface libjpeg turbo originally base libjpeg simd mmx accelerate derivative libjpeg v6b develop miyasaka masaru tigervnc virtualgl project make numerous enhancement codec early libjpeg turbo spin independent project goal make high speed jpeg compression decompression technology available broad range user developer license libjpeg turbo cover compatible bsd style open source license refer license license roll license term libjpeg turbo refer complete instruction libjpeg turbo libjpeg turbo include apis compress decompress jpeg image turbojpeg api api provide easy interface compress decompress jpeg image memory also provide functionality would straightforward achieve underlie libjpeg api generate planar yuv image perform multiple simultaneous lossless transform image java interface libjpeg turbo write top turbojpeg api turbojpeg api recommend first time user libjpeg turbo refer tjexample tjexample tjexample java java tjexample java usage api documentation libjpeg api facto industry standard api compress decompress jpeg image difficult turbojpeg api also powerful libjpeg api libjpeg turbo api abi compatible mathematically compatible libjpeg v6b also optionally configure api abi compatible libjpeg see refer cjpeg cjpeg djpeg djpeg usage libjpeg txt libjpeg txt api documentation significant performance advantage either api perform similar operation colorspace extension libjpeg turbo include extension allow jpeg image compress directly decompress directly buff bgr bgrx rgbx xbgr xrgb pixel order implement new colorspace constant jcs_ext_rgb red green blue jcs_ext_rgbx red green blue jcs_ext_bgr blue green red jcs_ext_bgrx blue green red jcs_ext_xbgr blue green red jcs_ext_xrgb red green blue jcs_ext_rgba red green blue alpha jcs_ext_bgra blue green red alpha jcs_ext_abgr alpha blue green red jcs_ext_argb alpha red green blue set cinfo in_color_space compression cinfo out_color_space decompression value cause libjpeg turbo read red green blue value write appropriate position pixel compress decompress rgb buff application check existence extension compile time ifdef jcs_extensions time attempt extension libjpeg support bogus input colorspace error application trap error order test whether time support available colorspace extension rgbx bgrx xbgr xrgb colorspaces decompression byte undefined order ensure best performance libjpeg turbo set byte whatever value wish application expect byte alpha channel specify jcs_ext_rgba jcs_ext_bgra jcs_ext_abgr jcs_ext_argb colorspace constant byte guarantee 0xff interpret opaque application check existence alpha channel colorspace extension compile time ifdef jcs_alpha_extensions jcstest jcstest locate libjpeg turbo source tree demonstrate check existence colorspace extension compile time time libjpeg api abi emulation libjpeg new feature add necessitate extend compression decompression structure unfortunately due expose nature structure extend also necessitate break backward abi compatibility previous libjpeg release thus program libjpeg work libjpeg turbo since base libjpeg v6b base although libjpeg widely v6b enough program include linux distros make switch demand emulate libjpeg abis libjpeg turbo note however feature add primarily application already compile libjpeg could take advantage accelerate baseline jpeg encode decode without recompiling libjpeg turbo claim support libjpeg feature produce identical output libjpeg case see pas argument dwith_jpeg7 dwith_jpeg8 cmake version libjpeg turbo emulate libjpeg abi program libjpeg libjpeg turbo follow section describe libjpeg feature support support libjpeg feature fully support libjpeg api idct scale extension decompressor libjpeg turbo support idct scale scale factor simd accelerate libjpeg api arithmetic cod libjpeg api memory source destination manager see note cjpeg separate quality setting luminance chrominance note libpjeg api extend accommodate feature convenience purpose always possible implement feature libjpeg v6b see rdswitch cjpeg bite bmp support cjpeg rgb option jpegtran lossless crop jpegtran perfect option jpegtran force width height perform lossless crop rdjpgcom raw option rdjpgcom locale awareness support note write extensive research conduct usefulness dct scale mean reduction smartscale mean quality improvement reader invite peruse research draw conclusion general belief project feature demonstrate sufficient usefulness justify inclusion libjpeg turbo libjpeg api dct scale compressor cinfo scale_num cinfo scale_denom silently ignore technical reason dct scale could support emulate libjpeg api abi without smartscale extension see scale factor would available limit usefulness libjpeg api smartscale cinfo block_size silently ignore smartscale extension jpeg format allow dct block size 8x8 provide support new format would feasible particularly without full acceleration however unless format become either official industry standard minimum accept solution community hesitant implement sense whether might change future belief smartscale demonstrate sufficient usefulness lossless format mean quality enhancement thus primary interest provide feature would mean support additional dct scale factor libjpeg api fancy downsampling compressor cinfo do_fancy_downsampling silently ignore require dct scale feature support jpegtran scale require dct scale smartscale feature support lossless rgb jpeg require smartscale feature support libjpeg libjpeg introduce yet another field jpeg compression structure color_transform thus make abi backward incompatible libjpeg new field introduce solely purpose support lossless smartscale encode furthermore actually reason extend api manner color transform could easily activate way new jpeg colorspace constant thus preserve backward abi compatibility research see link show lossless smartscale generally accomplish anything already accomplish good exist standard lossless format therefore time belief sufficient technical justification software project upgrade libjpeg libjpeg thus sufficient technical justification emulate libjpeg abi memory source destination manager default libjpeg turbo late include jpeg_mem_src jpeg_mem_dest function even emulate libjpeg api abi previously necessary libjpeg turbo source libjpeg api abi emulation order memory source destination manager several project request function include emulate libjpeg v6b api abi well allow function program need without break abi compatibility program allow function provide official libjpeg turbo binary concern maintain strict conformance libjpeg v6b api pas argument dwith_mem_srcdst cmake prior libjpeg turbo restore pre behavior jpeg_mem_src jpeg_mem_dest include emulate libjpeg api abi system include memory source destination manager change dynamic library version libjpeg v6b api abi emulation libjpeg api abi emulation note system dynamic linker look function library function actually thus program libjpeg turbo jpeg_mem_src jpeg_mem_dest program fail old version libjpeg turbo libjpeg program actually try call jpeg_mem_src jpeg_mem_dest case window program libjpeg turbo dll jpeg_mem_src jpeg_mem_dest must libjpeg turbo dll time cjpeg djpeg extend allow test memory source destination manager function see respective man page detail mathematical compatibility part libjpeg turbo produce identical output libjpeg v6b exception float point dct idct case output libjpeg v6b libjpeg turbo differ follow reason sse sse2 float point dct libjpeg turbo ever slightly accurate libjpeg v6b amount perceptible human vision generally range gain pnsr simd extension libjpeg turbo accurate slightly fast float point idct algorithm introduce libjpeg v8a oppose algorithm libjpeg v6b note however algorithm basically bring accuracy float point idct line accuracy accurate integer idct float point dct idct algorithm mainly legacy feature produce significantly accuracy accurate integer algorithm put number typical difference pnsr algorithm whereas change quality level upper range quality scale typically like difference float point algorithm libjpeg turbo implement simd instruction particular platform accuracy float point dct idct depend compiler setting libjpeg turbo emulate libjpeg api abi hood still algorithm libjpeg v6b several specific case libjpeg turbo expect produce output libjpeg decompress scale factor libjpeg implement scale algorithm differently libjpeg v6b libjpeg turbo simd extension base libjpeg v6b behavior chrominance subsampling libjpeg implement dct idct scale algorithm rather separate downsampling upsampling algorithm test subsampled upsampled output libjpeg accurate libjpeg v6b reason decompress scale factor merge aka non fancy non smooth chrominance upsampling libjpeg support merge upsampling scale factor performance pitfall restart marker optimize huffman decoder libjpeg turbo handle restart marker way make rest libjpeg infrastructure happy necessary slow huffman decoder decompress jpeg image restart marker cause decompression performance drop much performance still much great libjpeg many consumer package photoshop restart marker generate jpeg image image generate program experience issue fast integer forward dct high quality level algorithm simd accelerate quantization function produce correct whenever fast integer forward dct along jpeg quality thus libjpeg turbo must non simd quantization function case cause performance drop much therefore strongly advise accurate integer forward dct whenever encode image jpeg quality high memory debugger pitfall valgrind memory sanitizer msan generate false positive specifically incorrect report uninitialized memory access libjpeg turbo simd extension generally recommend simd extension disable either pas argument dwith_simd cmake configure set environment variable jsimd_forcenone time test libjpeg turbo valgrind msan memory debugger
C C++;https://github.com/h2non/semver.c;semver github semantic parser render write ansi dependency feature standard compliant otherwise open issue version metadata parse version prerelease parse version comparison helper support comparison operator version render version bump version sanitizer test coverage regexp ansi support numeric conversion sort filter version legacy version beta maintain anymore current stable version usage basic comparison satisfy version installation clone repository api struct semver_t int major int minor int patch char prerelease char metadata semver base struct semver_parse const char str semver_t int parse string semver expression return case invalid semver parse error fine semver_compare semver_t semver_t int compare version return case low version case equal version case high version semver_satisfies semver_t semver_t char operator int check version satisfy base give comparison operator allow operator equality high equal low equal low high caret operator comparison tilde operator comparison return satisfy satisfy semver_satisfies_caret semver_t semver_t int check version satisfy perform comparison caret operator see return satisfy satisfy semver_satisfies_patch semver_t semver_t int check version satisfy perform comparison tilde operator see return satisfy satisfy semver_eq semver_t semver_t int equality comparison semver_ne semver_t semver_t int non equal comparison semver_gt semver_t semver_t int great comparison semver_lt semver_t semver_t int low comparison semver_gte semver_t semver_t int great equal comparison semver_lte semver_t semver_t int low equal comparison semver_render semver_t char void render string semver_numeric semver_t int render numeric value useful order filter semver_bump semver_t void bump major version semver_bump_minor semver_t void bump minor version semver_bump_patch semver_t void bump patch version semver_free semver_t void helper free allocate memory heap semver_is_valid char str int check give string valid semver expression semver_clean char str int remove invalid semver character give string license mit tomas aparicio
C C++;https://github.com/DigitalInBlue/Celero;celero benchmarking library copyright john farrier apache license community support special thank follow corporation support hellebore consult test branch status status status celero successfully follow platform development see detail gcc gcc gcc gcc llvm llvm llvm llvm llvm visual studio visual studio visual studio xcode v10 xcode v10 xcode v11 xcode v12 celero requres developer provide googletest order unit test suggest package manager vcpkg conan provide late version library quality control tool status codacy view overview develop consistent meaningful benchmark complicate task measurement tool exist intel vtune amplifier smartbear aqtime valgrind etc external application sometimes expensive small team cumbersome utilize project celero aim small library add project perform benchmark way easy reproduce share compare among individual developer project celero framework similar googletest make api natural integrate project make automate benchmarking much part development process automate test celero cmake provide cross platform require modern compiler visual gcc clang due celero add project create dedicate benchmark project source convenience single header celero_main macro provide main benchmark project automatically execute benchmark test key feature support window linux osx time utility directly production independent benchmark automatically track ram usage experiment console table output format markdown easily copy paste document archive track performance time integrate environment junit format output user define experiment value scale test sample size user define property user define measurement allow measure anything addition time support test fixture support fix time benchmark baseline capture rich set time statistic easily instal cmake conan vcpkg command line option benchmark group benchmark contain within test executable write csv useful problem set graph performance write junit format xml output utilize junit output benchmark must _test version macro specify expect baseline multiple test exceed multiple junit output indicate failure update archive historical track current best bad benchmark experimental plot different sample size investigate distribution sample celero basic background goal generally write benchmark measure performance piece benchmark useful compare multiple solution problem select appropriate time benchmark highlight performance impact design algorithm change quantify meaningful way measure performance eliminate error assumption right solution performance measurement confirm lookup table fast compute value lore often repeat lead bad design decision ultimately slow goal write correct benchmarking eliminate noise overhead measure test source noise measurement include clock resolution noise operate system background operation test setup teardown framework overhead unrelated system activity theoretical level want measure time execute test reality measure plus measurement noise extraneous contributor measurement fluctuate time therefore want try isolate way accomplish make many measurement keep small total small total necessarily small noise contribution close actual time measurement obtain little mean isolation essential create baseline test compare baseline generally classic pure solution problem measure solution baseline meaningful time compare algorithm merely say fancy sort algorithm fsort sort million element millisecond sufficient however compare classic sort algorithm baseline quicksort qsort say fsort fast qsort million element meaningful powerful measurement celero heavily utilize feature available visual gcc greatly aid make clean portable make adopt manageable definition need user define celero namespace within single include celero celero within macro definition turn user benchmark case unique class associate test fixture register test case within factory macro automatically associate baseline test case associate test benchmark time benchmark relative number compute association maintain testvector testvector utilize pimpl idiom help hide keep include overhead celero minimum celero report output command line since color nice perhaps contribute human factor readability something beyond std cout call console define simple color function setconsolecolor utilize function celero print namespace nicely format program output measure benchmark execution time take place testfixture base class benchmark write ultimately derive first test fixture setup execute start time test retrieve store microsecond unsigned long reduce float point error next specify number operation iteration execute complete end time retrieve test fixture tear measure time execution return save cycle repeat however many sample specify sample specify test repeat least second least sample take write specific part definite else relationship however bulk repeat within else section old fashion function could natural utilize std function define lambda could call keep clean fantastic thing finally print screen general program flow summarize pseudo illustrate test execute internally celero cmake provide cross platform require modern compiler visual gcc due celero add project create dedicate benchmark project source convenience single header celero_main macro provide main benchmark project automatically execute benchmark test simple celero benchmark note complete runnable first thing define baseline test case template take argument groupname name benchmark group batch together correspond baseline measurement baselinename name baseline report purpose sample total number time want execute give number operation test operation total number time want test per sample sample operation measure fast know benchmark take time millisecond operation number would say execute operation number time take measurement sample define many measurement make celero help allow specify sample sample tell celero make statistically significant number sample base long take complete specify number operation number report time celero donotoptimizeaway template provide ensure optimize compiler eliminate function since feature sample benchmark baseline time overhead cancel comparison baseline define various benchmark define syntax benchmark macro identical macro celero simple experiment celerodemosimple exe benchmark give follow output first test execute group baseline celero take sample iteration test set iteration measure time short time take baseline value baseline measurement always baseline complete individual test test execute measure way however additional metric report baseline compare time take compute benchmark baseline show celerobenchtest complex1 take time long execute baseline automatically compute number iteration sample want celero figure reasonable number iteration set iteration value experiment also set number sample compute statistically valid number sample note current default number sample calculate reasonable number iteration update previous demosimple case feature follow execute see different number automatically compute number iteration sample size increase statistically sound celero real science primary factor consider review firstly must check generate assembly test different path view assembly various compiler essentially must ensure optimize critical must also verify via assembly compare apple apple sort baseline case several time iteration iteration sec fluctuate significant degree ensure number iteration sufficiently large overcome timer resolution machine number iteration high enough ensure perform statistically significant number sample lore sample good science figure best number situation finally need ensure number iteration sample produce stable output experiment case number may stable baseline case factor impact number sample iteration require amount work experiment case utilize celero problem space functionality scale algorithm correspondingly scale number iteration reduce total time extensive experiment iteration buy still maintain statistically meaningful measurement save time thread benchmark celero automatically thread benchmark baseline_t benchmark_t launch give thread user define number concurrent execution celerodemomultithread illustrate feature define macro follow format fix measurement benchmark celero typically measure baseline time execute benchmark case comparison also specify fix measurement time useful measure performance real time requirement utilize version baseline benchmark macro important measurement test fixture baseline even fix test fixture well feature user define measurement udms look baseline class detect feature present baseline test fixture celero know class test fixture offer udm user define measurement udm celero default measure execution time experiment want measure anything else say number page fault via user define measurement add user define measurement consist step define class user define measurement per type measurement class must derive celero userdefinedmeasurement celero provide convenience class celero userdefinedmeasurementtemplate sufficient add instance class test fixture implement getuserdefinedmeasurements return instance appropriate point likely teardown record measurement user define measurement instance rough say want measure number page fault class user define measurement could simple thing need implement case unique name virtual function available inside celero userdefinedmeasurementtemplate celero userdefinedmeasurement leverage need optional virtual function override turn specific statistical measurement output default function inside return add regular celero test fixure finally need record pseud assume function exist resetpagefaultcounter getpagefaults reset number page fault return number page fault since last reset respectively add setup teardown method report statistic number page fault occur experiment see experimentsortingrandomintswithudm complete note user define measurement capability introduce well creation celero great enhancement library design library next major release library may change way implement expose library user frequency scale cpu frequency scale disable possible execute benchmark celero attempt may sufficient privilege effective linux system accomplish follow note benchmark always perform release never measure performance debug make change base optimize compiler friend concern performance accuracy tie closely total number sample sample size general rule aim execute baseline long long benchmark test helpful benchmark test take order magnitude execution time compare baseline execute second benchmark take second hour respectively celero doxygen style documentation api doxyfile provide user must generate documentation celero support test fixture baseline group celero chart background note many time write algorithm solve small problem relatively easy brute force method tend function well agile approach however size increase beneficial algorithm scale performance match theoretically best hope algorithm scale linearly order complexity respect problem size say problem set double time take algorithm execute double seem obvious often elusive goal even well perform algorithm eventually problem available memory cpu cache make decision within software algorithm improvement exist measurement experimentation know complex algorithm perform acceptably celero offer simple benchmarking algorithm also provide sophisticate method directly produce performance graph benchmark change respect independent variable refer problem set within celero test fixture push integer problemsetvalues vector allow fixture setup function scale problem set benchmark value push problemsetvalues vector complete set benchmark execute measure value store write csv easy plot demonstrate study performance common sort algorithm bubblesort selectionsort std sort source demo distribute celero available first write test fixture celero test fixture utilize benchmark celero create instantiation class call getexperimentvalues function test fixture vector testfixture experimentvalue value value add array benchmark execute follow call setup virtual function new test fixture create measurement setup virtual function call benchmark test execute problem space value vector function give value previously push array within constructor function decide value indicate many element array intend sort array element simply add pseudo random integer implement actual sort algorithm baseline case implement first sort algorithm ever school bubble sort bubble sort straight forward celero value baseline compute base line measurement algorithm test group _demosort_ however command line specify output output contain measure number second algorithm take execute give array size next implement selection sort algorithm finally good measure simply standard library sort algorithm introsort need write single line completeness test ghz amd core logical processor memory hardware aside relative performance algorithm modern hardware celero output time benchmark reference test automatically however write output easy plot simply specify output command line particularly surprise std sort far best option meaningful problem set size summarize follow table output write directly celero show first test group name next size output row show baseline benchmark name correspond time algorithm complete measure useconds csv format directly read program microsoft excel plot without modification csv contain follow note statistic statistic represent _time_ represent _ram_ point std sort good elementary sort method easily measurable obtain make measurement accessible easy become part way automate test become test early test often note like explicitness much next programmer want note actual sort algorithm std sort define standard reference cite introsort likely contender stl would approach std sort choose sort algorithm start std sort see make improvement trust experience measure faq ask iteration celero iteration internal measure warm pas help account cache may otherwise influence measurement problem space increase size take long long account increase complexity define problem space set celero testfixture experimentvalue iteration member class great number control amount iteration correspond celero testfixture experimentvalue demo demonstration provide celero experiment folder type project first demo project useful illustrate technique idea may interest computer science perspective experiment hand add demonstrate real world question addition real case celero encourage submit celero development branch inclusion demo experiment library
C C++;https://github.com/davisking/dlib;dlib library travis dlib modern toolkit contain machine algorithm tool create complex software solve real world problem see main project documentation api reference compile dlib program folder type cpu support avx instruction turn like make thing fast finally visual studio user usually everything 64bit mode default visual studio 32bit output execution explicitly tell 64bits since 1990s anymore probably want 64bits cmake invocation like compile program dlib folder cmake tell also additional instruction dlib web alternatively dependency manager dlib cmake integration single command compile dlib api program must compile dlib type unit test suite type follow compile dlib unit test suite note window compiler might put test executable subfolder call release case folder test library license boost software license find long short license dlib however like even close source commercial software dlib sponsor research base part upon work support office director national intelligence odni intelligence advance research project activity iarpa contract number view conclusion contain herein author interpret necessarily represent official policy endorsement either express imply odni iarpa government
C C++;https://github.com/OpenXRay/xray-16;open everyone openxraycover png openxray openxray improve version ray engine game engine world famous game series gsc game world support game call pripyat clear sky shadow chernobyl yes release candidate see support yet see status codacy platform compiler configuration platform status appveyor window linux msvc gcc debug mix release release master gold x64 x86 appveyor travis linux gcc debug release arm64 x64 x86 travis github action window linux msvc gcc debug mix release release master gold x64 x86 github action contribute contribution welcome several way contribute development join effort make beloved game good send pull request participate discussion review place share idea implement gather people want work engine work source however follow thing take consideration want keep game close possible vanilla game instead introduce new gameplay feature consider add non gameplay feature fix bug improve performance quality major change discus follow procedure doc procedure take look page see issue label good first get familiar engine practice may also want look issue label help difficult though dev branch default base branch project development pull request aware branch sometimes may break rarely force push branch advise community project sanction gsc game world way remain copyright holder original source franchise however know many community project include support community effort make game good community play enjoy game encounter bug enhancement request join subscribe youtube join leave comment put like communicate also put star repository fund financial may provide financial support project donate via github open thank support documentation setup play available thank gsc game create support community loxotron make engine source available openxray make project good first openxray team origin project original project founder initial work linux port refactoring polish creation opengl renderer work system project maintenance work work system swartz27 work renderer feature project maintenance work second openxray team continue work project current project leader work project quality memory leak refactoring optimization main part work linux port main part work linux port opengl renderer improvement polish project work support project project work new feature refactoring bug fix johndoe_71rus regular tester work linux port maintain aur package regular tester work linux port new feature refactoring bug fix polish work linux port quality fix polish work linux port work renderer unification refactoring polish work arm port work system bug fix contributor help debug functionality window work renderer feature bug fix help fix feature work gamepads support bug fix work system work system bug fix work portability polish work quality particular project friend give tip help new feature optimization bug fix etc shoker weapon contribute new feature bug fix work engine amaze work shadow chernobyl call contributor useful new feature bug fix optimization lose alpha effort restore old game concept lose alpha continue work lose alpha individual work system work linux port useful fix addition work clear sky support return clear sky mod work project mention contributor please write add
C C++;https://github.com/karan/Projects;mega project list list practical project anyone solve program language see project divide multiple category category folder get start simply fork repo see way repo contribute solution publish exist problem add new project remove exist make sure follow instruction properly find project many language user credit repo compile karan problem motivate share martyr2 mega project rosetta table content classic graphic number find nth digit enter number program generate many decimal place keep limit far program find nth digit like previous problem instead enter number program generate many decimal place keep limit far program fibonacci sequence enter number program generate fibonacci sequence number nth number prime factorization user enter number find prime factor display next prime number program find prime number user choose stop ask next find cost tile cover floor calculate total cost tile would take cover floor plan width height cost enter user mortgage calculator calculate monthly payment fix term mortgage give nth term give interest rate also figure long take user pay back loan add complexity add option user select compound interval monthly weekly daily continually change return program user enter cost amount money give program figure change number quarter dim nickel penny need change binary decimal back converter develop converter convert decimal number binary binary number decimal equivalent calculator simple calculator basic operator make scientific calculator add complexity unit converter temp currency volume mass convert various unit another user enter type unit enter type unit want convert value program make conversion alarm clock simple clock play sound number minute second particular time distance city calculate distance city allow user specify unit distance program may require find coordinate city like latitude longitude credit card validator take credit card number common credit card vendor visa mastercard american express discoverer validate make sure valid number look credit card checksum tax calculator ask user enter cost either country state tax return tax plus total cost tax factorial finder factorial positive integer define product sequence factorial define solve loop recursion complex number algebra show addition multiplication negation inversion complex number separate function subtraction division operation make pair operation print operation test happy number happy number define follow process start positive integer replace number sum square digit repeat process number equal stay loop endlessly cycle include number process end happy number end unhappy number display output find first happy number number name show spell number english preexist roll support input least million maximum value language default bound integer type optional support input positive integer like negative integer float point number coin flip simulation write simulate flip single coin however many time user decide record outcome count number tail head limit calculator ask user enter limit value return value limit statement optional make calculator capable support infinite limit fast exponentiation ask user enter integer output pow time complexity classic algorithm collatz conjecture start number find number step take reach follow process even divide odd multiply add sort implement type sort algorithm merge sort bubble sort close pair problem close pair point problem close pair problem problem computational geometry give point metric space find pair point small distance sieve eratosthenes sieve eratosthenes efficient way find small prim million graph graph link create program create graph series link eulerian path create program take input graph output either eulerian path eulerian cycle state possible eulerian path start node traverse every edge graph every node finish another node eulerian cycle eulerian path start finish node connect graph create program take graph input output whether every node connect dijkstra algorithm create program find short path graph edge minimum span tree create program take connect undirected graph weight output minimum span tree graph subgraph tree contain vertex sum weight least possible structure invert index invert structure create full text search give set text implement program create invert index also create user interface search invert index return list contain query term term search index memory text fizz buzz write program print number multiple print fizz instead number multiple print buzz number multiple print fizzbuzz reverse string enter string program reverse print pig latin pig latin game alteration play english language game create pig latin form english word initial consonant sound transpose end word affix banana would yield anana bay read wikipedia information rule count vowel enter string program count number vowel text add complexity report sum vowel find check palindrome check string enter user palindrome read forward backwards like racecar count word string count number individual word string add complexity read string text generate summary text editor notepad style application open edit save text document optional add syntax highlight feature fee creator give link atom fee get post display quote tracker market symbol etc program check current value stock list symbol enter user user set often stock check cli show whether stock move optional gui program show green red arrow show direction stock value move guestbook journal simple application allow people add comment write journal entry allow comment timestamps entry could also make shout box optional deploy google app engine heroku paas possible course vigenere vernam ceasar cipher function encrypt decrypt message send friend regex query tool tool allow user enter text string separate control enter regex pattern regular expression source text return match flag error regular expression ftp program transfer program transfer back forth remote web sever bandwidth monitor small utility program track much upload net course current online session see find period day generate report graph show port scanner enter address port range program attempt find open port give computer connect successful connection mark port open mail checker pop3 imap user enter various account information include web server protocol type pop3 imap application check email give interval country lookup enter address find country register optional find automatically whois search tool enter host address look whois return site checker time schedule application attempt connect website server every many minute give time check notify email post notice screen class product inventory project create application manage inventory product create product class price quantity hand create inventory class keep track various product sum inventory value airline hotel reservation system create reservation system book airline seat hotel room charge various rat particular section plane hotel first class cost coach hotel room penthouse suit cost keep track room available schedule company manager create hierarchy class abstract class employee subclass hourlyemployee salariedemployee manager executive every pay calculate differently research bite establish employee hierarchy create company class allow manage employee able hire fire raise employee bank account manager create class call account abstract class class call checkingaccount savingsaccount businessaccount manage credit debit account atm style program patient doctor scheduler create patient class doctor class doctor handle multiple patient setup schedule program doctor handle patient work day recipe creator manager create recipe class ingredient put recipe manager program organize category like desert main course ingredient like chicken beef soup pie etc image gallery create image abstract class class inherit image type put program display gallery style format view shape area perimeter class create abstract class call shape inherit shape like diamond rectangle circle triangle etc class override area perimeter functionality handle shape type flower shop order create flower shop application deal flower object flower object bouquet object sell keep track number object may need order family tree creator create class call person name bear die allow user create person class put family tree structure print tree screen thread create progress bar create progress bar application keep track progress progress bar separate thread communicate main thread delegate bulk thumbnail creator picture process take bite time transformation especially image large create image program take image convert specify size background thread thing add complexity thread handle size another bulk rename thumbnail etc web page scraper create application connect site pull link image save list optional organize index content allow duplicate put easily searchable index online white board create application allow draw picture write note various color flesh idea project optional add feature invite friend collaborate white board online get atomic time internet clock program get true atomic time atomic time clock internet atomic clock return simple google search fetch current weather get current weather give zip postal optional try locate user automatically schedule auto login action make application log give site schedule invoke certain action log useful check web mail post regular content get info application save computer card generator make site allow people generate little card send people flash picture library perhaps insightful motto quote content management system create content management system like joomla drupal php nuke etc start small optional allow addition module addons web board forum create forum buddy post administer share thought idea captcha maker ever see image letter number signup service ask enter see keep web bot automatically sign spamming try create online form quiz maker make application take various question pick randomly put together quiz student quiz different read key grade quiz sort excel csv utility read record sort write back allow user choose various sort style sort base particular field create zip maker user enter various different directory program zip zip optional apply actual compression start huffman algorithm pdf generator application read text html generate pdf great web base service user upload program return pdf optional deploy gae heroku possible mp3 tagger modify add id3v1 tag mp3 see also add album art mp3 header well id3v2 tag snippet manager another utility program allow coder put function class tidbit save late organize type snippet language coder quickly look optional extra practice try add syntax highlight base language database sql query analyzer utility application user enter query local database look way make efficient remote sql tool utility execute query remote server local computer across internet take remote host user name password query return report generator create utility generate report base table database generate sale report base order order detail table sum day current database activity event scheduler calendar make application allow user enter date time event event note schedule event calendar user browse calendar search calendar specific event optional allow application create occurrence event reoccur every day week month year etc budget tracker write application keep track household budget user add expense income recur cost find much save lose period time optional allow user specify date range see net flow money house budget time period show tracker get favorite show want miss pvr want able find show pvr late make application search various online guide sit locate show time channel add database application database website send email reminder show start channel travel planner system make system allow user put together little travel itinerary keep track airline hotel arrangement point interest budget schedule graphic multimedia slide show make application show various picture slide show format optional try add various effect like fade star wipe window blind transition stream video online try create online stream video player mp3 player simple program play favorite music add feature think miss favorite music player watermarking application picture want copyright protect add logo text lightly across background simply steal graphic site make program add watermark picture optional thread process multiple image simultaneously turtle graphic common project create floor square various command tell turtle draw line floor move forward leave right lift drop pen etc search online turtle graphic information optional allow program read list command gif creator program put together multiple image pngs jpgs tiff make smooth gif export optional make program convert small video gifs well security caesar cipher implement caesar cipher encode decode key integer cipher rotate letter alphabet encode replace letter 1st 25th next letter alphabet wrap key encrypt key encrypt simple monoalphabetic substitution cipher provide almost security attacker encode message either frequency analysis guess key try key
C C++;https://github.com/zeeev/wham;wham wham suite consist program wham whamg wham original tool sensitive method high false discovery rate second program whamg accurate good suit general structural variant discovery study strongly recommend whamg outline basic whamg important section highlight bold text please cite wham wham whamg whamg workflow alt instal whamg whamg depend dependance commonly preinstalled various linux distribution follow command wham current work directory whamg whamg pair alignment generate bwa mem whamg bam snv indel call tool duplicate mark remove indel realignment helpful whamg agnostic regard bwa mem flag know mean worry important flag bwa mem whamg require read group information currently whamg assume library per bam whamg process chomosomes chm1 genome export statement allow mask certain chromosome contigs may useful mask certain chromosome either problematic read map rdna short contigs novo genome assembly provide mask human contigs find problematic call standard output contain call write chm1 vcf standard error write chm1 err include progress update useful track runtimes error trio quad want joint call pas bam comma separate list simple text full path bam line please note important flag specify chance whamg incorrectly estimate insert size library filter script pipe increase specificity tell whamg cpu putative structural variant write flat text individual graph visualize dotviz gephi output helpful interrogate miss call complex structural variant option genome wide size extremely large explanation option comma separate list index bam sample text look like match reference genome important bam align reference sequence whamg exit collect basic statistic write graph recommend whole genome comma separate list seqids skip comma sepearted list seqids estimate insert size distribution region seqid start end format whamg specific genomic region number cpu whamg attempt first step whamg read entire bam notice cpu usage drop might swamp bam read several single cpu step whamg finish optimal number cpu really depend speed whamg bwa mem tag default old version bwa mem different tag sometimes whamg fail sample enough read low fold coverage exome flag force whamg keep sample random region succeed vcf output section info format field cover whamg vcf header field description pair read count piece evidence total evidence sum across whamg graph structure since whamg initially cluster similar graph structure may see several svs low total support couple base pair merge svs good idea ciend cipos field fix whamg call accurate within couple base pair however field update merge large svs great average insert size library generate mate pair pattern mat read overlap end deletion map downstream breakpoint class generate different pattern fraction read graph structure cluster accord svtype mate pair split read contribute evidence svtypes field describe fraction total support belong svtype case invert deletion might find inversion deletion high weight field sum number mate pair graph support deletion field relate field measure average distance mate pair alternative breakpoint inversion large score deletion end standard vcf field insertion start end position number evert mate pair number read support inversion number split read graph necessarily number split read breakpoints number read strand svlen standard vcf field svtype standard vcf field number read support interchomosmal event tag individual graph number mate pair map far away number read support duplication number read support inversion genotype currently genotype provide work fast accurate genotyper depth currently depth provide number read individual support exact breakpoint breakpoint variability number might low expect cautious filter filter balance sensitivity specificity wise filter raw whamg output filter always depend high depth datasets treat differently low depth datasets similarly joint call family call filter differently individual level call trick help guide many different tool strategy work filter way could filter whamg call discussion cover filter high coverage trio concept single genome size filter whamg emit call wide range size large small event subject scrutiny rough rule remove call small 50bp large 2mbs discard real call improve overall accuracy total support info field high coverage human genome 50x filter call support read wise plot total support joint call trio break high low support bin cutoff remove call remain reasonable give joint call high coverage trio alt cross chromosomal mapping whamg call bnds translocation aware type evidence filter event high cross chromosome mapping pull info field show find list order fraction read support type remove svs bnd great low support across jointly call svs joint call variant low support come individual sum moderate total support want remove call individual significant support format field show pull field enumerate evidence individual remove call none individual reach arbitrary level filter similar total support filter wham wham call provide suite represent codebase publish plo computational biology wham document find wiki whole genome alignment metric wham structural variant caller integrate several source map information identify svs wham classify svs flexible extendable machine algorithm random forest wham accurate identify svs association test identify share svs enrich cohort diseased individual compare background healthy individual wham easily stand alone tool part gkno bcbio nextgen pipeline
C C++;https://github.com/tekknolagi/carp;project unstable deprecate since start slow work stable good think project call quite level documentation work much good carpvm project slowly work half year goal try small decently reliable grind right instruction register stack memory call sure recursion work theory test consider pre alpha software thing change rust flattr installation get carp already local copy clone submodule add git fetch git rebase git submodule init git submodule update already local copy git clone recursive note git submodule status return sha1 hash repository name problem note recursive clone test library include test carp make make test optional make make clean optional test machine arch bite version name compiler version bite ubuntu precise gcc bite ubuntu trusty gcc bite ubuntu trusty gcc bite maverick clang bite maverick gcc bite arch linux clang bite arch linux gcc note see carp help command line option interpreter write carp see formal spec come carp your_file carp api include carp carp_machine program gcc program usr local lib libcarp program instruction set opcode argument description halt exit set ext give halt attempt clean stack memory label memory nop nothing seriously loadr reg val load give integer value give register load diff load value location diff stack store diff val store value location diff mov dst src copy content src register dst register add pop top integer stack push sum sub pop top integer stack push difference low minus upper mul pop top integer stack push product mod pop top integer stack push low upper shr pop top integer stack push low upper shl pop top integer stack push low upper pop top integer stack push bitwise integer xor pop top integer stack push bitwise xor pop top integer stack push bitwise pop top integer stack push bitwise incr reg increment value give register decr reg decrement value give register inc increment value top stack dec decrement value top stack pushr reg push value give register push val push give value pop reg pop integer stack dump give register cmp pop top integer stack check equal mean equal push pop top integer stack check low upper push pop top integer stack check low upper push addr jump give absolute address top stack rjz diff add differential relative jump top stack jnz addr jump give absolute address top stack rjnz diff add differential relative jump top stack jmp addr jump give absolute address unconditionally rjmp diff add differential relative jump unconditionally call key addr save state set value memory key function may return value ret put top stack load previous state preg reg print content give register ptop peek top stack print top value register name purpose general purpose return value user define function something future take space instruction pointer keep place gotos call etc stack pointer frame pointer keep state function call gbg garbage register mainly pop boolean machine ext exit contribute way check todo see anything need write follow exist implicit style submit pull request another way write feature want exist submit pull request license gplv3 see
C C++;https://github.com/sharkdp/dbg-macro;dbg try license macro printf style debug fan debugger great sometimes time patience set everything correctly want quick way inspect value runtime project provide single header dbg dbg macro circumstance would typically write printf std cout come extra produce output try dbg macro feature easy read colorize output color auto disable output interactive terminal print name line number function name original expression add type information print value specialize pretty printer container pointer string literal enums std optional etc inside expression pas original value dbg header issue compiler warn include forget remove compatible test installation make practical dbg header readily available kind different place kind environment quick dirty way actually copy header usr include clone repository symlink dbg usr include dbg want make untracked change filesystem check package operate system package manager arch linux dbg macro vcpkg dbg macro via configuration set dbg_macro_disable flag disable dbg macro make set dbg_macro_no_warning flag disable dbg header include base warn advance feature multiple argument pas multiple argument dbg macro output dbg dbg dbg dbg note wrap unprotected comma parenthesis hexadecimal octal binary format want format integer hexadecimal octal binary representation simply wrap dbg hex dbg oct dbg bin print type name dbg already print type value parenthesis see screenshot sometimes want print type maybe value type case dbg type helper pretty print give type print current time print timestamp dbg time helper customization want dbg work custom datatype simply overload operator std ostream want modify type name print dbg add custom get_type_name overload development want contribute dbg macro test demo make sure submodule date typical cmake workflow usage dcmake_cxx_standard optional recommend order large set feature enable test simply call find unit test test basic cpp acknowledgement project inspire rust dbg
C C++;https://github.com/CobaltFusion/DebugViewPP;cobalt fusion present debugview currently current version late would really like hear think leave comment head version pick feel lucky want try late commit question tweet chat skype janwilmans also slack need invite debugview start viewer win32 outputdebugstring message style sysinternals debugview however attach virtually kind log tail ascii utf logfiles drag onto window android adb console base standard output serial port plink socket telnet ssh port also plink listen udp message handy distribute system see sponsor project sponsor resharper analysis handy auto fix refactoring option backtrace gather analyse crash information incredibuild incredibuild make core multiple machine accelerate project debugview thing useful first debugview see message different process attach process also filter color link make sense large amount information human need filter order understand also help important event different color quickly interpret occur pattern finally filter nice sometimes need see line context understand link view help quickly switch fully filter view fully detail view new stable version bugfixes namely tail test window last version official support v141_xp target internal refactoring boost construct good commandline support docopt cpp add filter command line option new feature plan miss something need issue feature dream create choose spend time gantt chart like view horzontal timeline bar flag sign identify event good plugin base input system transparent background stream disk proper memory limit know issue history limit work right troublesome long duration test workaround send dbgviewclear test cycle clear log memory pas mode like original dbgview help implement please contact catch kernel message help want reference outputdebugstring screenshot debugview screenshot art syntax_high png debugview screenshot feature single selfcontaining executable setup provide require minimal delay trace application compare original dbgview factor good fast responsive user interface even incoming line per second without prerequisite winxpsp3 early also winxpsp2 memory compress logbuffer google snappy typically ram consumption tail drag ascii utf debugview tail feature capture win32 global win32 message tabbed view resolve process pid name track lifetime filter process message advance filter exclude track stop clear optionally regular expression line token highlight create syntax highlight sait search type token highlight bookmark statusbar show detail log view selection information open save log post mortum analysis commandline version capture stdin pip message allow connect kind log beep filter monitor without see screen hear make sure default beep sound define control panel sound clear log release message buff instead reuse memory useful debugview long time tail logfiles samba experimental support read tail sysinternals dbgview logfiles common format socket listen log source add add tcp udp listener protocol send raw newline terminate string multiple line send packet dbgview agent client mode allow log kernel message timezone independent human readable timestamps logfiles add basic support unicode utf via outputdebugstring utf8 utf16 boms read view process color easy way give every process color option link view best effort synchronize line selection view old version stable date sept debugview zip debugview win32 screenshot demonstrate bookmark highlight feature highlight regex token filter filename blue regex token filter hexadecimal number red regex highlight filter unittest line word unittest lightgreen background doubleclick byte cause instance byte highlight yellow see option support regular expression android adb debugview screenshot art logcat_example png debugview screenshot screenshot demonstrate connect adb logcat android debug bridge connect pipe connect directly port service plink make sure instance debugview already command plink ssh batch debugview notice pipe symbol redirect stderr stdout plink connect sysinternals dbgview agent kernel message connect sysinternals dbgview agent first start dbgview exe kernel message connect debugview log connect debugview agent note log connect debugview agent assume agent workstation debugview connect need connect remote agent log source add dbgview agent fill address regexgroups token highlight suppose want highlight value log since actually value may differ normal match highlight regexgroups match text _before_ _after actual token want highlight filterdialog screenshot art regexgroups png regexgroups screenshot filter filterdialog screenshot art filterdialog png filterdialog screenshot filter define per view choose new view filter dialog popup press open new view without filter different type filter filter support regular expression familliar regular expression type word part word match include include filter add line contain match expression include exclude line contain match expression exclude view exclude always take precedence include first line contain match expression include reset automatically clear view highlight line contain match expression highlight specify foreground background color token match expression highlight specify foreground background color track line contain match expression focus center possible note auto scroll turn track filter match stop match expression find autoscroll turn track filter disable line focus note stop filter work autoscroll think stop filter single shoot track filter beep standard window beep configurable config panel sound play practical include exclude highlight filter intuitive filter track stop little confuse let try give track filter focus interest line occur often regular interval monitor process log output every second need check stop filter good special event occur exception want inspect context event log continue press end button resume auto scroll feature view reset view make first line logbuffer first line view reset view line make current like first line view clear view make next incoming message first line view link view select line current view locate select switch another view best effort base exact line find near line select case switch view cause currently select line change consider case want auto scoll high frequeny message annoy exclude help diagnose event occur try view diagnostic message filter autoscroll message include maybe highlight next turn link view feature monitor filter view event occur select line switch unfiltered view line highlight full unfiltered context process color enable process even process identical name get background color automatically without add filter documentation auto scroll scroll new incoming line automatically auto scroll stop enable auto scroll turn last line view select also turn line select bookmark bookmark view specific place line click leave line number ctrl press move next bookmark bookmark temporary save clocktime enable time display provide system real time clock rtc timestamp 16ms resolution typical desktop disable time display relative time first message however timestamp obtain high performance counter hpc typically sub microsecond resolution resolution confuse accuracy record timestamp actual time message occur time message receive debugview also quarantee time occurance reception message constant however practice pretty constant project special configuration 32bit debug release configuration target v140_xp sdk window sp3 64bit debug release configuration target v141 sdk window release configuration also wix installer project configure nuget get dependency boost wtl however installer wix toolset clone git repository forget include recurse submodules otherwise get error message say docopt miss press visual studio boost wtl first time project simple contact jan fix remain issue since atl support window still extra installation option require verify follow option instal vs2017 option screen art vs2017_options png vs2017 option screen zip exe choose zip setup exe decompress archive add zip exe path vs2019 know compilation visual studio preview march know good combination boost visual studio see problem asio boost visual studio boost visual studio cobalt fusion jan wilmans mailto janwilmans _at_ gmail com gert jan vos mailto boosttestui
C C++;https://github.com/preshing/junction;junction library concurrent structure contain several hash map junction concurrentmap_crude junction concurrentmap_linear junction concurrentmap_leapfrog junction concurrentmap_grampa require see blog post new concurrent hash map information license junction simplify bsd license source freely project include commercial application long give credit publish content license documentation somewhere get start want get look around start clone junction turf adjacent folder cmake junction cmakelists txt want pas different argument cmake depend platform ide git clone git clone junction mkdir cmake unix like environment cmake generate makefile default window create visual studio solution specific version visual studio cmake visual studio generate xcode project cmake xcode generate xcode project cmake xcode dcmake_toolchain_file turf cmake toolchains cmake generate system contain separate target junction turf sample application solution explorer doc solution png alternatively cmake specific sample junction sample mapcorrectnesstests mkdir cmake add junction project several way add junction project add junction target exist cmake base project cmake junction turf link static library project grab source need junction copy project hack correctly developer prefer approach encourage try approach instead easy grab future update way plenty junction turf really need hurt keep hard drive either link junction statically linker exclude part add exist cmake project project already base cmake clone junction turf source tree somewhere call add_subdirectory junction root folder cmake script add junction turf target system simple see repository library separately generate junction system step describe get start section library need add system make sure generate static library avoid link part library need target provide junction cmake script system output clean folder contain header libs need add project single include path choose output directory specify cmake_install_prefix variable cmake additionally specify junction_with_samples avoid sample cmake dcmake_install_prefix junction djunction_with_samples cmake target config relwithdebinfo note instead second cmake command system could system directly make unix project visual studio makefiles probably want pas additional option dcmake_build_type relwithdebinfo first cmake command create follow structure folder doc folder png configuration first cmake junction turf detect capability compiler write tree name turf include turf_config similarly junction write include junction_config tree modify content set variable cmake pas additional option cmake interactive gui cmake gui ccmake configure turf standard library set turf_prefer_cpp11 variable command line cmake dturf_prefer_cpp11 cmake gui cmake gui doc cmake gui png many header turf junction configurable preprocessor definition turf thread switch turf thread depend value turf_impl_thread_path turf_impl_thread_type macro define set default value base information environment set directly provide header pas turf_userconfig variable cmake place anywhere cmake copy turf tree right next include turf_config cmake dturf_userconfig path custom turf_userconfig junction_userconfig variable work similar way take look script junction sample mapscalabilitytests testallmaps script invoke cmake several time pas different junction_userconfig time test application different map rule behavior currently junction map work key value pointer pointer size integer hash function must invertible every key unique hash possible key _null_ key must reserve possible value _null_ _redirect_ value must reserve default override default pas custom keytraits valuetraits parameter template every thread manipulate junction map must periodically call junction defaultqsbr update mention blog application leak memory otherwise junction map lot like big array std atomic variable key index array precisely junction map member function together mutator member function atomic respect safely call thread without mutual exclusion assign happen get key get return value insert except another operation change value synchronize establish relationship linear leapfrog grampa map assign operation get operation safely pas non atomic information thread pointer crude map operation relax current version must assign concurrently iterator feedback feedback improve step feel free open github send direct message contact blog
C C++;https://github.com/cinemast/libjson-rpc-cpp;create new header master libjson rpc cpp framework provide cross platform json rpc remote procedure call support fully json rpc libjson rpc cpp good reason libjson rpc cpp next rpc project full json rpc partial json rpc client server support jsonrpcstub tool generate stub class json rpc client server application ready http tcp server client provide simple interface json rpc application cross platform support linux super liberal good reason libjson rpc cpp easy cross platform system clean simple architecture make easy extend continuously test macos various linux automate test make test useful provide xbmc remote json rpc client part stub generator stubgenerator currently support javascript overview libjson rpc cpp logo dev artwork overview png raw true framework debian stretch ubuntu late fedora arch linux arch linux pkgbuild provide gentoo linux mac package available window ready compile package execute installer exe source dependency unix debian arch gnu linux base system dependency available via package manager dependency available happy simply uninstall system inside directory option default configuration fine system available compilation flag dcompile_tests disable unit test suite dcompile_stubgen disable stubgenerator dcompile_examples disable dhttp_server disable webserver dhttp_client disable curl client dredis_server disable redis server connector dredis_client disable redis client connector dunix_domain_socket_server yes enable unix domain socket server connector dunix_domain_socket_client yes enable unix domain socket client connector dfile_descriptor_server disable descriptor server connector dfile_descriptor_client disable descriptor client connector dtcp_socket_server disable tcp socket server connector dtcp_socket_client disable tcp socket client connector framework show simple way create rpc server client need server ignore step need client ignore step find resource sample src directory repository step write specification type return value parameter define literal assign generate stub return type validate response see specify method notification step generate stub client server call jsonrpcstub generate abstractstubserver stubclient class move gen folder step implement abstract server stub extend abstract server stub implement pure virtual abstract method define spec json see src stubserver cpp src stubserver cpp main function concrete server instantiate start server json rpc compliant client connect server compile server step create client application see src stubclient cpp src stubclient cpp compile client contribution please take look contribute contribute also donate via changelogs changelogs find changelog api compatibility best keep api abi stable prevent problem update framework compatiblity report find license framework license library dependency license mit compatible license reference nasa ames research obtain aircraft state information aircraft simulator laseshark control firmware printer ethereum crypto currency game engine scalable cloud base video transcoding platform web geostatistics library interface bitcoin nit dash content dynamic adaptive stream http server library find useful would please let know
C C++;https://github.com/protobuf-c/protobuf-c;coverage overview protobuf google protocol serialization format include libprotobuf pure library implement protobuf encode decode protoc generator convert protocol buff proto descriptor base original protoc protobuf formerly include rpc split project protobuf originally write dave benson maintain version maintain new team thank dave mail list protobuf mail list host google group subscribe send email protobuf subscribe googlegroups com mailto protobuf subscribe googlegroups com protobuf require compiler compiler pkg config instal configure make make git checkout autotools autoconf automake libtool must also instal system must generate autogen script autogen configure make make test want execute test case individually please follow command configure make check documentation see online doxygen documentation detail reference doxygen documentation source tree make html synopsis protoc command generate output proto input c_out option instruct protoc protobuf plugin protoc c_out proto include source include compile source together add output follow command compile flag pkg config cflags libprotobuf link libprotobuf support library add output follow command link flag pkg config libs libprotobuf autotools pkg_check_modules macro detect presence libprotobuf add follow line configure pkg_check_modules protobuf_c libprotobuf place compiler flag protobuf_c_cflags variable linker flag protobuf_c_ldflags variable read information pkg_check_modules macro versioning protobuf follow semantic versioning version note version header generate protoc compiler contain version guard prevent incompatibility due version skew generate protoc public protobuf include supply libprotobuf support library try make change protobuf require trigger version guard often release new major version protobuf guarantee thus good idea recompile source proto protoc part system proper source dependency track rather ship potentially stale may compatible libprotobuf header instal system project artifact like repository release tarballs note output protoc generator standalone output tool generate flex bison major api abi change may occur major version release definition recommend export symbol generate protoc stable library interface embed protobuf abi library abi recommend generate public header include path part library api tie client library api particular version libprotobuf contribute please send patch protobuf mail open github pull request recently release protobuf version keep master branch next branch commit target next release please base patch pull request next branch master branch copyright contribution retain original author must license term license please add sign header commit message git commit indicate license contribution term
C C++;https://github.com/warmcat/libwebsockets;coverity scan cii best codacy total language grade language grade libwebsockets libwebsockets simple mit license pure library provide client server websockets mqtt protocol security mind lightweight configurable scalable flexible way easy cross via cmake suitable task embed rtos mass cloud serve support lot lightweight ancilliary thing like json cbor jose cose support openssl mbedtls box everything gregarious come event loop share support libuv libevent libev sdevent glib uloop well custom event libs independent minimal various scenario cc0 license public domain cut paste allow get start quickly lot variety topic huge amount test per currently platform see lws rack read lws base sai coordinate overview doc asset lws overview png news html jpeg png display stack lws want drive epd tft oled display html get esp32 want remote jpegs pngs html rgba composition gamma error diffusion need realtime render line buff enough heap framebuffer take look perl bind lws available thank felipe gasper perl bind lws available recent generic event loop support lws lws guest exist perl event loop lws switch secure stream secure stream direct doc asset api1 png secure stream support lws introduce couple year ago high level interface lws wsi level apis simplify connectivity segregate connection policy like protocol endpoint information separate json policy minimal client hello_world policy json deal payload minimal client hello_world hello_world many detail wire protocol possible hide move policy user almost identical even wire protocol change user ask create streamtype name create accord detail protocol endpoint etc name policy key policy entry like endpoint contain metadata name string substitution handle runtime adaptation via metadata mqtt support layer top wsi apis provide high level way access exist wsi level capability kind api remain support secure stream long live single wsi coordinate retry base user typically significantly small maintainable wsi layer main branch move old minimal lowlevel start port case base comparison wsi level lws usage feature low level wsi way secure stream way create context loop support sul scheduler default event libs support comms mode client server raw support protocol mqtt client support mbedtls include openssl include wolfssl boringssl libressl serializable proxiable muxable transportable yes auto allocate per connection user object specify lws_protocols specify info struct connection user api protocol specific lws_protocols cbs api state callback send adaptation lws_callback_on_writeable writeable lws_ss_request_write send buff user choose malloc partial handle provide partial create vhosts json policy validation cert bundle json policy cert bundle connection retry backoff json policy auto nail json policy auto endpoint protocol detail spread around json policy protocol selection pipeline stream share json policy subprotocol selection json policy binary text json policy protocol specific metadata protocol specific apis lws_hdr json policy generic metadata apis connection validity rule struct json policy auto stream long poll json policy auth json policy automatic rotation provider support else serialize secure stream secure stream direct doc asset api2 png secure stream apis also serializable exact client fulfil connection directly process would expect forward action metadata payload proxy minimal ssproxy ssproxy socket policy unix domain tcp socket connection fulfil centrally allow stream different process share single connection secure stream direct doc asset api3 png serialize also travel generic transport like uart provide implement binance rpi pico minimal embed pico pico sspc binance uart transport uart transport proxy minimal ssproxy ssproxy custom transport uart pico stack compression stack send receive endpoint optional lws_trasport_mux interpose uart transport sspc layer allow single pipe carry many separate connection user identical however transport muxed fulfil release see lws work retrospective initial commit lws year ago come oct lot work total patch touch 800kloc cumulatively size repo year many source line change patch overview doc asset work png gratifyingly turn year contribute contributor bad thank lot everyone provide patch today least million device product feature rely lws handle communication include several faang google include lws part android source support libwebsockets library lightweight websocket client server support visit consider join project mail list get late version library git doxygen api doc development
C C++;https://github.com/iauns/cpm;cpm note cpm actively maintain plan keep website active plan make modification codebase anyone interest move project forward please contact iauns send mail open issue package manager base cmake git cpm design promote small well test composable module cpm allow link multiple different version static library without symbol conflict include module may depend old new version module additionally cpm automatically module explore cpm ecosystem head cpm website manage library utilize cpm number external module already list website module abstract away detail link various project aware statically link multiple different version external module cpm module manage symbol like real cpm module module various interdependency check dependency graph cpm website automatically generate module cpm render dependency table content brief brief cpm cpm quick setup quick setup thing note thing note cpm module cpm module cmakelists txt entry cmakeliststxt entry library target name library target name wrap namespace wrap namespace directory structure directory structure export info export info register module register module external external cpm function reference cpm function reference general purpose general purpose module module miscellaneous issue question miscellaneous issue question brief sample cmakelists txt module module platform specific opengl header axis align bound box truc glsl vector math library see next section full explanation cpm follow cmakelists txt self contain cpm quick setup cpm project include follow top cmakelists txt add cpm_libraries variable target_link_libraries similar follow able start cpm module right away add follow snippet cpm module section cmakelists txt snippet automatically link version simple axis align bound box name aabb new namespace generate aabb preprocessor definition namespace automatically add project preprocessor namespace definition always follow form cpm__ns capitalize first argument call cpm_addmodule aabb snippet first argument cpm_addmodule aabb preprocessor definition cpm_aabb_ns would add project declare namepsace cpm bind aabb module instance aabb class name aabb fully qualify name aabb class would cpm_aabb_ns aabb may want rename namespace something appropriate namespace glm_aabb cpm_aabb_ns entirely depend need cpm namespace may need sure place call cpm_addmodule call cpm_finish todo include module section mention first snippet indicate place call cpm_addmodule even bother preprocessor namespace definition reason leverage multiple different version single cpm module static linkage unit would want let user utilize multiple version module first place many case user know actually multiple different version module recent version module may include directly user old version module may pull dependency another module user rely interest see cpm dependency graph dependency hierarchy project thing note include every module root directory add include path common every module github page describe include project path relative module root directory copy include directive directly module github page access aabb functionality would include interface header like compiler flag compiler flag wish apply module add directly cpm section cmakelistst txt since call cpm_addmodule add_subdirectory internally every module inherit compiler flag good bad cpm external library interest cpm module try browse cpm external list cpm_addmodule would module note likely want use_existing_ver parameter cpm_addmodule conjunction external module find formula favorite library kindly consider contribute cpm module repository tag advice may tempt origin master tag track recent change module recommend version tag module upgrade module necessary save time long track origin master upstream decide release major version include significant api change likely break immediately versioned tag maintain integrity even upstream version upgrade advantage automatically manage retrieval cpm module external allow multiple different version statically link module executable entirely cmake nothing else require cpm module include generate project solution automatically detect preprocessor name conflict optionally cache module repository central directory limitation support git limit support svn cpm module want pre exist cpm module interest module feel free skip section interest cpm module please read guideline requirement list cmakelists txt entry must cmakelists txt root module project cmakelists txt must contain relevant cpm directive see issue call cpm cpm_ subdirectory add_subdirectory add follow top cmakelists txt module sure update begin snippet place namespace preprocessor definition module spire preprocessor definition add project cpm_spire_ns definition wrapper around namespaces worry user name call cpm_addmodule name choose call cpm_initmodule cpm automatically handle also cpm_lib_target_name name library add_library include cpm_libraries target_link_libraries static library class demonstrate namespace wrap library target name snippet make sure generate library target name cpm_lib_target_name ensure library target name match cpm expect name target cpm_lib_target_name reason cpm_exportadditionallibrarytarget instead order name target whatever would like see function reference wrap namespace cpm allow multiple different version module statically link target module cpm cpm module either surround top level namespaces cpm_ module name _ns tag cpm_ module name _ns top level namespace like first argument give cpm_initmodule become module name application note require heavily recommend cpm module must include want user able multiple version module within static linkage unit directory structure order avoid header name conflict cpm module adhere directory follow structure structure user would include public header export info include path default root project add include path need expose directory consumer module cpm_exportadditionalincludedir function add directory consumer include path first argument cpm_exportadditionalincludedir directory want add path sure clearly document change make include path module readme definition include path set preprocessor definition consumer function cpm_exportadditionaldefinition like target additional target want target name cpm generate cpm_exportadditionallibrarytarget function come cpm target add target_link_libraries call issue consumer module register module finish write module add repository ecosystem cpm dependency graph automatically generate module able see others module note step mandatory module without register point cpm url git repository module registration recommend make easy others find external wrap non cpm likely cpm external external like module except call somewhere module cmakelists txt function ensure exactly version module ever statically link addition reference original repository cpm module json add externalurl key value pair key externalurl value url locate repository create external also set external key true json cpm website know external see cpm external google cpm function reference cmake function cpm expose list general purpose cpm_addmodule add cpm module project argument except optional additionally either git_repository source_dir argument must present call cpm_addmodule call either cpm_finish cpm_initmodule cpm_ensurerepoiscurrent utility function allow ensure repository date present filesystem proceed forward cmakelists txt process useful cpm external function outside call cpm_finish cpm_initmodule cpm_finish function top level application call finish issue call cpm_addmodule module function list section exclusively construct module function non module cmake warn generate function call ignore cpm_initmodule function module counterpart cpm_finish call indicate cpm finish issue call cpm_addmodule argument indicate name module name generate preprocessor definition module cpm_exportadditionaldefinition module export additional definition module consumer scope sparingly primarily expose mandatory external project definition cpm_exportadditionalincludedir expose additional include directory consumer module sparingly primarily expose external project directory module consumer note function quote list include directory pas list cpm_exportadditionallibrarytarget function mostly avoid name target per cpm_target_name convention cpm see google test generate target name include subdirectory must name miscellaneous issue question common issue user encounter solution module update cmake configure step repository clone fetch occur step expose foreign module interface module require ability expose class module public header allow tag module plan export export_module true like case glm definition include path export direct consumer module export module parent consumer exist module version cpm allow flexibility select recently version particular module instead version request useful work external module require version simply add use_existing_ver true call cpm_addmodule give section expose foreign module interface module add let call module request version module subsequently request module version would upgrade comply pre exist version module specify use_existing_ver true add module consider best practice set use_exsting_ver true add external regular module project especially module others also aware version downgrade manner generally avoid downgrade arrange order call cpm_addmodule add regular non external module may consider option reduce size executable multiple different version module weary compiler error due version conflict case option avoid regular non external cpm module force module version point external section may force consumer indirect direct module version module creator need worry corner case require external include call cpm_forceonlyonemoduleversion anywhere module cmakelists txt enforce usually call make directly call cpm_initmodule indicate module external module json even external important separate module regular module nomenclature choose type module external repos without external project cpm provide utility function allow repository configuration time function cpm_ensurerepoiscurrent function also ensure tag specify date repo present continue execution cmakelists txt git repository svn repository function reference regard function parameter see comment top cpm cmake function see google cpm external cache module cpm support cache repository module set either cpm_module_cache_dir cmake variable cpm_cache_dir environment variable appropriate cache directory cpm_cache set search perform cache directory module already exist project directory module find cache directory cpm module cache directory useful find limit internet access time time cache directory search attempt repository internet quick variable command line cache directory search module find project directory module find cache directory cache directory update appropriate scm directory content copy project directory subsequent invokation cmake find module project directory search cache directory unless clean project remove directory module cache cpm follow snippet instead give snippet check see cpm exist cache directory attempt see module dependency hierarchy project define cpm_show_hierarchy true command line would look something like best command successfully project output muddy status message get error regard reuse binary directory get error similar mean exist circular module reference allow cpm module graph must contain cycle module add module module add module get error manage cpm namespaces number option could rename cpm__ns top header rename module namespaces something akin follow careful latter header base approach since pitfall increase possibility header guard confilcts namespace conflict general rename namespace source level recommend way
C C++;https://github.com/ekg/vcflib;vcflib library parse manipulate vcf chat vcflib relate tool workhorse bioinformatics process vcf variant call format see vcflib tool process vcf variant call format erik garrison zev kronenberg eric dawson brent pedersen pjotr prins doi overview variant call format flat tab delimit textual format describe reference index variation individual vcf provide common interchange format description variation individual population sample become facto standard report format wide array genomic variant detector vcflib provide method manipulate interpret sequence variation describe vcf api parse operate record genomic variation describe vcf format collection command line utility execute complex manipulation vcf vclib library api collection useful tool api provide quick extremely permissive method read write vcf extension application library provide include utility cpp comprise vast bulk library utility short index usage usage tool tool filter filter metric metric phenotype phenotype genotype genotype transformation transformation statistic statistic script script link library link library source source development development license license credit work credit late update see release note release_notes conda user land without root access homebrew linux mac osx debian ubuntu gnu develop guix vcflib package see also guix usage user encourage drive utility library stream fashion unix pip fully utilize resource multi core system pip provide convenient method interface library vcf tool bedtools gatk htslib bcftools interface via vcf allow composition immense variety process function find script script script vcfgtcompare tool filter filter command description vcfuniq doc vcfuniq list unique genotype like gnu uniq vcf record remove record position ref alt previous record vcfuniqalleles doc vcfuniqalleles list unique allele record remove duplicate alternate allele may merge separate vcf vcffilter doc vcffilter vcf filter specify vcf set filter metric metric command description vcfcheck doc vcfcheck validate integrity identity vcf verify vcf record ref match give reference vcfhethomratio doc vcfhethomratio generate het hom ratio individual vcfhetcount doc vcfhetcount calculate heterozygosity rate count number alternate allele heterozygous genotype record vcf vcfdistance doc vcfdistance add tag variant record indicate distance near variant default basestoclosestvariant custom tag name give vcfentropy doc vcfentropy annotate vcf record shannon entropy flank sequence anotates output vcf record entropyleft entropyright entropycenter entropy sequence give window size leave right center record also add entropyref entropyalt alt phenotype phenotype command description permutegpat doc permutegpat permutegpat method add empirical value gpat score genotype genotype command description normalize ihs doc normalize ihs normalize ihs ehh score haplrt doc haplrt haplrt likelihood ratio test haplotype length length exponential distribution sign denote target long haplotype background abba baba doc abba baba abba baba calculate tree pattern indviduals tool assume reference ancestral ignore non abba baba sit output boolian value true false abba baba tree argument specify basal taxon derive transformation transformation command description vcfinfo2qual doc vcfinfo2qual set qual info field tag key key vcf may omit read stdin average field contain multiple value vcfsamplediff doc vcfsamplediff establish putative somatic variant report difference germline somatic sample tag record list sample genotype differ first sample assume germline second somatic record tag germline somatic loh specify type variant give genotype difference sample vcfaddinfo doc vcfaddinfo add info field second present first vcf vcfremoveaberrantgenotypes doc vcfremoveaberrantgenotypes strip sample homozygous observation imply heterozygosity remove sample report genotype observation count disagree vcfglxgt doc vcfglxgt set genotype maximum genotype likelihood sample dumpcontigsfromheader doc dumpcontigsfromheader dump contigs header vcfevenregions doc vcfevenregions generate list region chr20 variant density information provide vcf ensure region even number variant reduce variance runtime divide variant detection genotyping genomic coordinate vcfcat doc vcfcat concatenate vcf vcfannotategenotypes doc vcfannotategenotypes examine genotype correspondence annotate genotype first genotype second add genotype another flag sample first annotation tag name sample flag add store annotation also add has_variant flag sit second variant vcfafpath doc vcfafpath display genotype path vcfclassify doc vcfclassify create new vcf variant tag allele class snp indel mnp vcfallelicprimitives doc vcfallelicprimitives multiple allelic primitive gap mismatch specify single vcf record split record multiple line drop info field handle genotype yet mnps split multiple snp unless flag provide record generate split vcfqual2info doc vcfqual2info put qual info field tag key key vcfcreatemulti doc vcfcreatemulti overlap allele represent across multiple record merge single record currently indels vcfgeno2alleles doc vcfgeno2alleles modify genotype field provide literal allele rather index vcfsample2info doc vcfsample2info take annotation give per sample field add mean median min max site level info vcfld doc vcfld compute vcfnumalt doc vcfnumalt output vcf stream numalt generate record sample genotype vcfstreamsort doc vcfstreamsort sort input either stdin stream sort algorithm guarantee positional order correct provide order variant position vcf apart vcfinfosummarize doc vcfinfosummarize take annotation give per sample field add mean median min max site level info vcflength doc vcflength add length info field vcfkeepgeno doc vcfkeepgeno reduce size remove format field list command line sample specification output vcfcombine doc vcfcombine combine vcf positionally combine sample sit allele identical number vcf may combine info field column take combine record multiple match allele must identical order combine record multiple record emit vcfprimers doc vcfprimers vcf record extract flank sequence write stdout fasta record suitable alignment vcfflatten doc vcfflatten remove multi allelic sit pick common alternate require allele frequency specification specify field vary accord allele genotype vcf may specify command line pip stdin vcf2dag doc vcf2dag modify vcf able direct acyclic graph dag vcfcleancomplex doc vcfcleancomplex remove reference match sequence complex allele adjust record reflect positional change vcfbreakmulti doc vcfbreakmulti multiple allele specify single record break record multiple line preserve allele specific info field vcfindex doc vcfindex add index number info field position vcfkeepinfo doc vcfkeepinfo decrease size remove info field list command line vcfgeno2haplo doc vcfgeno2haplo convert genotype base phase allele within window size haplotype allele break haplotype construction encounter non phase genotype input vcfintersect doc vcfintersect vcf set analysis vcfannotate doc vcfannotate intersect record vcf target provide bed intersection reference sequence vcf vcf filename specify command line last argument vcf read stdin smooth doc smooth smooth method window smooth many gpat format vcf2fasta doc vcf2fasta generate sample_seq sample reference sequence chromosomal copy ploidy sequence fasta name pattern name allow combine vcfsamplenames doc vcfsamplenames list sample name vcfleftalign doc vcfleftalign leave align indels complex variant input pairwise ref alt alignment follow heuristic iterative leave realignment process shift indel representation absolute leftmost extent vcfglbound doc vcfglbound adjust gls maximum divide gls sample max vcfcommonsamples doc vcfcommonsamples generate record first remove sample present second vcfecho doc vcfecho echo vcf stdout simple demo vcfkeepsamples doc vcfkeepsamples output record vcf remove sample list command line vcf2tsv doc vcf2tsv convert vcf per allelle per genotype tab delimit format null string replace empty value table specify output line per sample genotype information alt allele multiple row allele info match index vcfoverlay doc vcfoverlay overlay record input vcf order precedence vcfgenosamplenames doc vcfgenosamplenames get samplenames vcfremovesamples doc vcfremovesamples output record vcf remove sample list command line vcfremap doc vcfremap alternate allele attempt realign reference low gap open penalty realignment possible adjust cigar reference alternate allele observe different alignment parameter include context entropy dependent influence variant classification interpretation vcffixup doc vcffixup generate vcf stream generate record sample genotype statistic statistic command description vcfgenosummarize doc vcfgenosummarize add summary statistic record summarize quality report call genotype reference observation count quality sum reference observation alternate observation count quality sum alternate observation vcfcountalleles doc vcfcountalleles count allele meltehh doc meltehh genotypesummary doc genotypesummary generate table genotype count summarize genotype count allelic snvs indel vcfrandomsample doc vcfrandomsample randomly sample sit input vcf may provide stdin scale sample probability field specify key may provide uniform sample across allele frequency instance pvst doc pvst pvst calculate vst measure cnv stratification vcfrandom doc vcfrandom generate random vcf segmentfst doc segmentfst segmentfst create genomic segment bed region high wcfst sequencediversity doc sequencediversity sequencediversity program calculate popular metric haplotype diversity extend haplotype homozygoisty ehh calculate nei formulation ehh convenient way think haplotype diversity ehh haplotype window unique ehh haplotype window identical segmentihs doc segmentihs create genomic segment bed region high wcfst vcfgenotypes doc vcfgenotypes report genotype sample variant vcf convert numerical represenation genotype provide field human readable genotype format vcfaltcount doc vcfaltcount count number alternate allele record vcf plothaps doc plothaps plothaps provide format output bin plothaplotypes vcfsitesummarize doc vcfsitesummarize summarize site vcfgenotypecompare doc vcfgenotypecompare add statistic info field vcf describe amount discrepancy genotype vcf genotype report vcfannotategenotypes get correspondence statistic vcfs vcfstats doc vcfstats print statistic variant input vcf wcfst doc wcfst wcfst weir cockerham fst population negative value valid sit treat fst information see evolution vol nov specifically wcfst equation permutesmooth doc permutesmooth permutesmooth method add empirical value smooth wcfst score bfst doc bfst bfst bayesian approach fst importantly bfst account genotype uncertainty genotype likelihood detail description see bayesian approach infer population structure dominant marker holsinger molecular ecology vol issue likelihood function modify genotype likelihood provide variant caller free parameter estimate subpopulation allele frequency fis fixation index within subpopulation free parameter total population allele frequency fst vcfroc doc vcfroc generate pseudo roc curve sensitivity specificity estimate putative truth set thresholding provide successive qual cutoff vcfparsealts doc vcfparsealts alternate allele parse method method pairwise alignment ref alt determine component allelic primitive alternate allele pfst doc pfst pfst probabilistic approach detect difference allele frequency population ihs doc ihs ihs calculate integrate haplotype score measure relative decay extend haplotype homozygosity ehh reference alternative allele site see voight spiech hernandez popstats doc popstats general population genetic statistic snp see also vcflib doc vcflib script vcflib source repository contain number additional script click link see source script description vcfclearinfo script vcfclearinfo clear info field vcfqualfilter script vcfqualfilter quality filter vcfnulldotslashdot script vcfnulldotslashdot rewrite null genotype vcfprintaltdiscrepancy script vcfprintaltdiscrepancy show alt discrepancy table vcfremovenonatgc script vcfremovenonatgc remove non nucleotide ref alt plotsmoothed script plotsmoothed smooth plot wcfst pfst abba baba vcf_strip_extra_headers script vcf_strip_extra_headers strip header plothaplrt script plothaplrt plot pfst vcfbiallelic script vcfbiallelic remove anything biallelic vcfsort script vcfsort sort vcf script vcfnosnps script vcfnosnps remove snp vcfmultiwayscripts script vcfmultiwayscripts multiway comparison vcfgtcompare script vcfgtcompare annotate record first genotype sit second plotpfst script plotpfst plot pfst vcfregionreduce_and_cut script vcfregionreduce_and_cut reduce gzip tabix plotbfst script plotbfst plot pfst vcfnobiallelicsnps script vcfnobiallelicsnps remove biallelic snp vcfindels script vcfindels show indels vcfmultiway script vcfmultiway multiway comparison vcfregionreduce script vcfregionreduce reduce vcfs bed gzip create tabix index vcfprintaltdiscrepancy script vcfprintaltdiscrepancy runner vcfclearid script vcfclearid clear field vcfcomplex script vcfcomplex remove snp keep svs vcffirstheader script vcffirstheader show first header plotxpehh script plotxpehh plot xpehh vcfregionreduce_pipe script vcfregionreduce_pipe reduce gzip tabix pipe vcfplotaltdiscrepancy script vcfplotaltdiscrepancy plot alt discrepancy runner vcfplottstv script vcfplottstv runner vcfnoindels script vcfnoindels remove indels bgziptabix script bgziptabix bgzip input tabix index plothaplotypes script plothaplotypes plot vcfplotsitediscrepancy script vcfplotsitediscrepancy plot site discrepancy vcfindelproximity script vcfindelproximity show snp around indel bed2region script bed2region convert vcf chrom column vcf region vcfplotaltdiscrepancy script vcfplotaltdiscrepancy plot alt discrepancy plot_roc script plot_roc plot roc vcfmultiallelic script vcfmultiallelic remove anything multiallelic vcfsnps script vcfsnps show snp vcfvarstats script vcfvarstats fastahack get stats vcfregionreduce_uncompressed script vcfregionreduce_uncompressed reduce gzip tabix plotwcfst script plotwcfst plot wcfst vcf2bed script vcf2bed transform vcf bed vcfjoincalls script vcfjoincalls overlay qual second vcf vcf2sqlite script vcf2sqlite push vcf sqlite3 database dbname development source vcflib cmake system recursive checkout source make directory test executables directory repository note exist repo update submodules dependency view travis github script see badge well guix scm guix scm create environment instruction see header guix scm essentially compiler htslib tabixpp include add libhts dev libtabixpp dev libtabixpp0 vcf executables perl different htslib check htslib tabixpp recursively cmake dhtslib_local string tabixpp htslib cmake link library standard create vcflib take hint cmake cmakelists txt vcflib tool source see vcfecho cpp src vcfecho cpp basic usage variant src variant variant cpp src variant cpp describe method available api vcflib incorporate several project may provide point reference prospective developer note vcflib contain submodules git repository comprise dependency full guix development environment define guix scm add test vcflib different test system important double documentation see vcf2tsv test pytest vcf2tsv command line contribute contribute vcflib send github pull request may ask add work test case describe add test license software distribute free software mit license license credit citation bread butter science software research want support future work please cite follow publication vcflib tool process vcf variant call format erik garrison zev kronenberg eric dawson brent pedersen pjotr prins doi bibtex reference
C C++;https://github.com/gammasoft71/xtd;xtd modern framework create console cli form gui like winforms tunit unit test like microsoft unit test framework application window macos linux android see information reference continuous integration status commit unit test perform follow configuration operate system debug release window x64 window x64 window x64 window win32 window win32 window win32 macos macos macos ubuntu ubuntu ubuntu come soon come soon android come soon come soon xtd core xtd tunit feature free open source mit collection native class library complete std api close net api modern approach full integration std standard write efficient modern program idiom highly available many different xtd compose several library library group theme system library modern library class interface value type provide access system functionality foundation application component control draw library contain type support basic gdi graphic functionality child namespaces support advance dimensional vector graphic functionality advance image functionality print relate typographical service child namespace also contain type extend design time user interface logic draw form library contain class create window base application take full advantage rich user interface feature available microsoft window apple macos linux base operate system tunit library unit test framework modern initially port link information xtd see reference get start provide documentation provide xtd guide tutorial provide development status xtd kanban provide kanban view task enhancement pull request bug question provide view xtd roadmap release provide release note information development provide information class library development status translation provide information translation status project open source project developer participate time therefore difficult fix realese date follow evolution development keep status date classic first application hello world console cli hello_world_console cpp cmakelists txt open command prompt terminal navigate folder contain project type follow output form gui like winforms hello_world_forms cpp cmakelists txt open command prompt terminal navigate folder contain project type follow output window macos linux gnome tunit unit test like microsoft unit test framework hello_world_test cpp cmakelists txt open command prompt terminal navigate folder contain project type follow output contribute author list contributor together contact information make contribution please add list contribution welcome first read design make sure contribution follow rule project pull request add contribution face problem feel free open issue issue feel like miss feature please raise ticket github pull request also welcome feedback important evolution project beginner follow project aim simplify guide way beginner make first contribution look make first contribution check project first ready make first contribution xtd gallery minesweeper ______________________________________________________________________________________________ game_of_life ______________________________________________________________________________________________ calculator ______________________________________________________________________________________________ stopwatch ______________________________________________________________________________________________ xtdc gui create new project ______________________________________________________________________________________________ paint
C C++;https://github.com/tplgy/cppcodec;cppcodec header library encode decode base64 base64url base32 base32hex hex base16 specify rfc plus crockford base32 mit license consistent flexible api support raw pointer std string templated character vector without unnecessary allocation cross platform measure decent performance without compiler warn content philosophy usage import cppcodec project copy git submodule etc add cppcodec root directory system list include directory include header start api since cppcodec header library extra step need alternatively header extra tool test cmake variant number codec variant exist base64 base32 define different alphabet specify pad line break different way cppcodec design let make conscious choice see list variant cppcodec approach implement encode decode algorithm different class namespacing cppcodec base64_rfc4648 class associate header name verbatim codec variant expect standard cppcodec prior include basexx_default_ include recommend anymore may eventually get deprecate currently support codec variant base64 base64_rfc4648 pem mime utf alphabet order plus character usually consider standard base64 see everywhere require pad line break whitespace alphabet symbol regard parse error base64_url base64_rfc4648 define rfc minus underscore special character instead safe url name pad require generate encode string regard parse error present decode base64_url_unpadded variant base64_url pad character optional encode pad append string decode accept either pad unpadded string base32 base32 variant encode bit bite character encode length roughly sell point mainly case insensitive decode special character alphabet communicate via phone base32_rfc4648 implement popular standardize variant define rfc full upper case alphabet first value digit character last pad require make encode string multiple character codec accept invalid symbol want let user enter base32 consider replace number input base32_crockford implement crockford widely rfc alphabet offer carefully pick alphabet also define decode similar character plus care require user input crockford base32 pad checksum implement note specification ambiguous whether pad bite quintet leave right whether codec place base single number encode system concatenative iterative stream encoder codec variant pick stream interpretation thus pad right see detail discussion issue base32_hex logical extension hexadecimal alphabet also specify rfc digit character first value upper case letter remain alphabet conceptually simple contain ambiguous number letter pair variant try avoid also suitable verbal transmission pad require make encode string multiple character hex hex_upper output upper case letter accept low case well octet stream codec variant decode require even number input symbol word try decode 10f etc variant place base single number codec instead want also expect prepend remove prefix externally generate encode reject decode hex_lower output low case letter accept upper case well similar hex_upper stream base odd symbol length deal prefix philosophy trade cppcodec aim support range codecs share template base focus high quality api encourage correct include error handle easy adopt codebases header library cppcodec ship several codecs variant compile actually good performance goal topmost priority theory template allow write generic optimize specialization individually however practice compiler still struggle produce simple hand write specialize function release depend compiler cppcodec approx time compare regular optimize base64 beat highly optimize vector instruction buy good performance large pre compute table chrome base64 debug cppcodec slow order magnitude due template abstraction make sure release minimum size production api codecs expose api documentation replace default alias base64 base32 hex full namespace cppcodec base64_rfc4648 cppcodec base32_crockford templated parameter std vector std string anything support size read template parameter template parameter also reserve size_t resize size_t push_back uint8_t char possible support type lack function consult directly need encode encode binary encode base64 base32 hex string throw type might throw resize encode binary pre allocate memory buff size encoded_size binary_size large return byte size encode string exclude null termination equal encoded_size binary_size encoded_buffer_size large require single null termination character write last encode character encoded_size function ensure require buff size large enough hold pad require respective codec variant provide buff size encoded_size make null terminate string call abort encoded_buffer_size insufficient way function remain noexcept rather throw entirely avoidable error condition calculate exact length encode string base binary size exclude null termination include pad specify codec variant decode decode encode base64 base32 hex string binary buff throw cppcodec parse_error exception inherit std domain_error input conform codec variant specification also type might throw resize decode encode string pre allocate memory buff size decoded_max_size encoded_size large return byte size decode binary equal decoded_max_size encoded_size call abort binary_buffer_size insufficient consistency encode throw cppcodec parse_error exception inherit std domain_error input conform codec variant specification calculate maximum size decode binary buff base encode string length codec variant allow pad whitespace line break maximum decode size exact decode size codec variant allow pad whitespace line break actual decode size might small pre allocate memory call make sure take return value actual decode size account
C C++;https://github.com/xtensor-stack/xtensor;xtensor doc source xtensor svg doxygen join gitter multi dimensional array broadcast lazy compute introduction xtensor library mean numerical analysis multi dimensional array expression xtensor provide extensible expression system enable lazy broadcast api follow idiom standard library tool manipulate array expression upon xtensor container xtensor inspire array program library adaptor exist structure plug expression system easily write fact xtensor process numpy structure inplace buff similarly operate julia array detail numpy julia bind check project respectively xtensor require modern compiler support follow compiler support window platform visual update recent unix platform gcc recent version clang installation package manager provide package mamba conda package manager source xtensor header library directly source try online play xtensor interactively jupyter notebook right click binder link support jupyter power kernel together xeus cling xtensor enable similar workflow numpy ipython jupyter kernel xeus cling doc source xeus cling screenshot png documentation information xtensor check reference documentation dependency xtensor depend library optional dependency library xtensor xtl xsimd optional master dependency xsimd require want enable simd acceleration xtensor define macro xtensor_use_xsimd include header xtensor usage basic usage initialize array compute sum row array output initialize array reshape inplace output index access output numpy xtensor cheat sheet familiar numpy apis interest xtensor check numpy xtensor cheat provide documentation lazy broadcast xtensor xtensor operate array different shape dimension element wise fashion broadcast rule xtensor similar broadcast rule operation involve array different dimension array less dimension broadcast across lead dimension shape shape broadcast operation shape rule hold scalar handle expression scalar equation become match dimension input array different size broadcast match size let say shape previous broadcast happen follow universal function laziness vectorization xtensor array broadcastable shape return type expression sin array xexpression object offer interface dimensional array hold value compute upon access expression assign xarray object allow operate symbolically large array compute index interest provide utility vectorize scalar function take multiple scalar argument function perform xexpression apply lazy broadcast rule describe function call xfunction xtensor counterpart numpy universal function xtensor arithmetic operation special function xfunction iterate xexpression broadcast iterators xexpression offer set function retrieve iterator pair const counterpart begin end provide instance xiterator iterate element expression order element list row major index last dimension incremented first begin shape end shape similar take broadcast shape argument element iterate upon row major way certain dimension repeat match provide shape per rule describe expression begin shape begin equivalent runtime compile time dimensionality container class implement multi dimensional array provide xarray xtensor xarray reshape dynamically number dimension container similar numpy array xtensor dimension set compilation time enable many optimization shape stride xtensor instance allocate stack instead heap xarray xtensor container xexpression involve mix universal function assign etc besides access operator provide variadic template operator take multiple integral argument none operator take single multi index argument size determine runtime operator also support access brace initializers performance xtensor operation make simd acceleration depend instruction set available platform hand sse avx avx512 neon project underlie detection available instruction set provide generic high level wrapper memory allocator client library xtensor continuous benchmarking xtensor operation continuously benchmarked significantly improve new version current performance statically dimension tensor match eigen library dynamically dimension tensor shape heap allocate come small additional cost stack allocation shape stride generally library implement promote_shape mechanism time determine optimal sequence type hold shape expression shape type broadcast expression whose member dimensionality determine compile time stack allocate sequence type least note broadcast expression dynamic dimension xarray bubble entire broadcast expression heap allocate shape hold view broadcast expression etc therefore application xtensor recommend statically dimension container whenever possible improve overall performance application language bind project provide xtensor container pyarray pytensor effectively wrap numpy array allow inplace modification include reshape utility automatically generate numpy style universal function expose scalar function also provide project provide xtensor container jlarray jltensor effectively wrap julia array allow inplace modification include reshape like case utility generate numpy style universal function provide project provide xtensor container rarray rtensor effectively wrap array allow inplace modification include reshape like julia bind utility generate numpy style universal function provide library bind project provide bind blas library enable linear algebra operation xtensor expression project enable load variety format xtensor expression image sound hdf5 well numpy npy npz test test require test framework gtest cmake available package linux distribution besides also instal conda package manager even window gtest cmake instal test also cmake source gtest generate library html documentation xtensor documentation tool doxygen must instal separately breathe type breathe also instal conda finally doc subdirectory documentation follow command license share copyright enable contributor maintain copyright contribution software license bsd clause license see license license detail
C C++;https://github.com/sumeetchhetri/ffead-cpp;ffead cpp framework accord late tfb ffead cpp embed picov currently 4th fast framework world late techempower ffead cpp web framework application framework utility bundle also provide embed http web socket compliant high performance server core collection module gear towards perform individual role together form cohesive back bone ffead cpp provide simple maintain web framework library advance feature like reflection dependency injection ioc inbuilt rest soap support security authentication feature moreover interfacing cache tool like memcached redis provide database integration orm framework sdorm solve major issue respect interfacing sql sql database alike multi level serialization template level serialization high point ffead cpp core serialization time poco class mark serializable time take care marshal marshal object intend serializable form back json xml binary ffead cpp easily drive xml configuration service controller filter interface api simple poco class without need extend class differentiate feature ffead cpp usage support marker annotation java simple pragma directive drive entire configuration ffead cpp forget xml configuration ffead cpp gap world web application enterprise application development try fill humble honest effort cmake autoconf meson xmake support detail specific instruction instruction instal available server backends docker docker compose script locate validate follow operate system toolchains archlinux mingw w64 cross musl cross android cross feature multiple server backends http http http embed http2 quiche http3 seastar apache cinatra lithium drogon libreactor h2o vweb vlang picov vlang actix rust hyper rust thruster rust h2o golang gnet golang firenio java rapidoid java hunt swift nio julia mongol cpp cppserver nginx nodejs javascript openlitespeed wip support multiple event notification engine io_uring linux kernel epoll linux kqueue bsd macos event_ports devpoll solaris wepoll window iocp base epoll library poll select platform support api embed http server single process thread pool backends ssl support web socket support advance orm sdorm sql monogo raw database access postgresql mongodb scylladb cache api memcached redis improve thread threadpool api marker base configuration java style annotation reflection support serialization support date time ultility function dependency injection serverside dynamic page template engine html page sample app webrtc signal websocket api horizontally scalable peerjs compatible signal server embed http2 server support experimental quickstart cmake make cmake mkdir cmake dsrv_emb dmod_sdorm_mongo make ffead cpp along sample application web generate ffead cpp binary sip coffee ffead cpp bin navigate ffead cpp binary folder chmod server startup ffead cpp quickstart cmake ninja cmake ninja mkdir cmake gninja dsrv_emb dmod_sdorm_mongo ninja ffead cpp along sample application web generate ffead cpp binary sip coffee ffead cpp bin navigate ffead cpp binary folder chmod server startup ffead cpp quickstart xmake xmake xmake cxflags usr local include mod_sdorm_mongo true xmake xmake ffead cpp along sample application web generate ffead cpp binary sip coffee ffead cpp bin navigate ffead cpp binary folder chmod server startup ffead cpp quickstart meson meson meson setup build_meson build_meson ninja ffead cpp along sample application web generate ffead cpp binary sip coffee ffead cpp bin navigate ffead cpp binary folder chmod server startup ffead cpp quickstart autoconf autoconf automake libtool autogen configure enable srv_emb yes enable mod_sdormmongo yes make ffead cpp along sample application web generate ffead cpp binary sip coffee ffead cpp bin navigate ffead cpp binary folder chmod server startup ffead cpp detail checkout page
C C++;https://github.com/AmokHuginnsson/replxx;read evaluate print loop small portable gnu readline replacement linux window macos capable handle utf character unlike gnu readline gpl library bsd license kind program origin replxx base work arangodb salvatore 10gen inc goal create config bsd license readline replacement usable apache2 bsd license program feature single line multi line edit mode usual key bind implement history handle completion syntax highlight hint bsd license source subset vt100 escape ansi sys compatible utf8 aware support linux macos window requirement library need enable compiler recent version cmake instruction nix create directory library library default target location default installation location adjust set destdir variable invoke make window create directory command prompt generate visual studio solution cmake bite bite open generate replxx sln subdirectory visual studio test linux text console term linux linux kde terminal application term xterm linux xterm term xterm linux buildroot term vt100 mac iterm term xterm mac default terminal app term xterm openbsd osx terminal app term screen ibm aix freebsd xterm term xterm ansi sys emacs comint mode term dumb window please test everywhere report back
C C++;https://github.com/CLIUtils/CLI11;cli11 command line parser cli11 logo doc cli11_300 png status azure azure badge azure action status action badge action link status appveyor appveyor badge appveyor coverage codecov badge codecov codacy badge codacy badge codacy link license bsd license badge license doi doi badge doi link gitter chat gitter badge gitter late gha release release badge github release late release repology badge repology conan conan badge conan link conda version conda badge conda link try cli11 online wandbox badge wandbox link new changelog documentation gitbook api reference api doc cli11 command line parser beyond provide rich feature set simple intuitive interface table content background background introduction introduction write another cli parser write another cli parser parser parser feature support library feature support library usage usage add option add option option type option type option option option option validators validators transform validators transform validators validator operation validator operation custom validators custom validators query validators query validators get get subcommands subcommands subcommand option subcommand option option group option group callback callback configuration configuration inherit default inherit default format format subclassing subclassing work work utility utility library library api api contribute contribute license license feature add last release minor version mark feature available main mark background introduction cli11 provide feature expect powerful command line parser beautiful minimal syntax dependency beyond header come single form easy inclusion project easy small project powerful enough complex command line project customize framework test azure github action action link originally goofit gpu fit framework goofit inspire plumbum cli plumbum cli11 user friendly introduction readme depth tutorial gitbook well api documentation api doc generate travis see changelog changelog github release detail current past release also see version post version post version post version post information notify new release make subscribe reader like feedly release mode github watch tool write another cli parser acceptable cli parser library follow easy include header possible external requirement short simple syntax main reason cli parser make variable command line nearly easy define variable program hide cli parse problem readability good work gcc default centos rhel clang appleclang nvcc msvc work linux macos window well test common platform compiler well define good coverage measure codecov clear help print nice error message standard idiom support naturally like group flag positional separator etc easy execute help parse error etc provide correct exit detail easy extend part framework provide application user usable subcommand syntax support multiple subcommands nest subcommands option group optional fallthrough explain late ability add configuration toml ini custom format produce well produce real value directly something pay compute time look hpc application work common type simple custom type extensible exotic type permissively license parser major cli parser include bias opinion click expand library bias opinion boost program option great library already depend boost pre syntax really odd set correct call main function poorly document nearly page simple wrapper boost library originally develop discard cli11 become powerful idea capture value set originate boost see comparison cli11 compare lean mean option parser header great syntax atrocious opinion quite impractical wrap syntax complex project seem handle standard parse quite well tclap quite standard command line parse cause common shortcut fail also seem poorly support minimal bugfixes accept header quite manage get enough support move github yet subcommands produce wrap value cxxopts single nice cmake support require regex therefore gcc centos default work syntax closely base boost ideal familiar docopt completely different approach program option write doc interface generate fragile specialize write also find follow library library bias opinion gflags google commandline flag library macro heavily limit scope miss thing like subcommands provide simple syntax support config env var getopt limit solution long convolute syntax support much anything like help generation always available unix though different flavor programoptions hxx interest library powerful subcommands nice callback system args also interest support subcommands like optional like design cli11 clean provide direct value access verbose argument aggregator big fan fmt library try catch statement look familiar thumbsup seem support subcommands clara simple library excellent catch test framework unique syntax limit scope argh minimalistic parser single header many feature help generation least exception free cli custom language parser huge system overkill little benefit last release still occasionally active argparse single argument parser design seem similar cli11 way author several interest project lyra simple header parser composable option might work well simple standardize parse see awesome bias list parser also find single library single libs none library fulfill requirement really even come close probably already guess cli11 library design provide great syntax good compiler compatibility minimal installation fuss feature support library possible feature intentionally support library non standard variation syntax like long option non standard avoid enforce library completion partial option argparse supply incomplete argument good guess third party command line parser actually reimplement command line parse rather argparse perceive design flaw recent version option disable autocomplete might eventually add plumbum cli11 support yet wide string unicode since standard library might hard properly implement would open suggestion several method local header copy cli11 hpp recent release github release include directory set combine source every release include entire command parser library include separate utility like timer autotimer utility completely self contain copy separately global header like copy share folder location like opt cli11 include path extend point folder cmake include_directories opt cli11 local header target cli hpp could check repository git submodule cmake add_subdirectory cli11 cli11 interface target link submodule must ensure copy locate inside tree directory current project prevent error cmake add_subdirectory global header cli hpp store share folder could check git repository system wide folder opt cmake could add include path via source add several header might need prevent linker error global header target configure instal project require link cli11 project way would external library cmake step allow find_package cli11 config require cli11 cli11 target link cmake_install_prefix change specific folder like opt cli11 pas dcli11_dir opt cli11 current project also conan conan link hunter convenience allow favorite method manage package header include correct path really need via fetchcontent cmake work add fetch content cli11 cli11 target cmake project configure stage highly recommend git hash git_tag instead tag branch secure well fast reconfigure cmake reach internet see tag move also single header release test checkout repository cmake note special instruction gcc gcc mode cli11 cli11 make header available specifically compiler filesystem library separate standard library need link separately available cli11 default specifically libstdc need add link list cli11_has_filesystem define filesystem variant validators could gcc gcc issue default may also case specific library need link define cli11_has_filesystem remove usage hence link issue case certain clang compilation may require link libc situation encounter specific situation require unknown yet usage add option set add option main function look something like note like macro macro expand click expand try catch block ensure help parse error exit correct return select cli exitcodes return inside main assume option value set inside catch block help flag intentionally short circuit process speed ensure require option like interfere initialization line add option parse macro line content macro app filename set correct value pas otherwise set default check see pas command line app count option type option internally type several way add option depend need support value option name may start character except long option first character character allow except add_flag function special mean allow name give comma separate string dash dash option flag many name want afterward count name dash need count option name allow give without proceed dash present option positional option name help line positional form add_option_function function typically require template parameter give unless std function object exact match pas type type support add_option function function throw error cli conversionerror cli validationerror possibly value valid parameter template overload case want restrict input would first verify input convertible unsigned int assign variant type otherwise output would default string add_option integral float point type enumeration string type take int double std string assignment operator constructor object take multiple variety std string take precedence double int good control another type underlie conversion parameter template directly specify conversion type type std boost optional optional optional wrapper type support directly purpose cli11 wrapper type value_type definition see cli11 advance topic custom converter information add converter additional type vector type also parameter template overload would load vector double ensure value represent integer automatic direct capture default string disable parameter template set_default_str default_function std string set default string capture function directly case flag option specify add_flag function allow syntax option name default particular option false value value flag pas specify flag pas command line true contain value flag pas contain false sign integer type unsigned type alternative form syntax explicit flag flag false equivalent previous also work short form option false variable_to_bind_to anything integer value default behavior take last value give variable_to_bind_to integer type behavior sum give argument return modify need change multi_option_policy flag inherit default value value wish define numerical flag flag command line specify number output similar thing string value enumeration long default value convert give type compiler pas callback function directly add_flag mode need add_flag_function want callback function function give number time flag pas throw relevant cli parseerror signal failure valid long flag would create option specify positionally pas positionally limit number non positional option name add command return pointer internally store option option directly check count count parse avoid string base lookup option option parse set follow option require program quit option present mandatory plumbum require option seem standard term compatibility mandatory also work expect take value instead many possible vector args negative require least end another recognize option subcommand expect min max set range expect value accompany option expect equivalent make flag type_name typename set name option type type_name_fn allow function instead type_size set intrinsic size option value parser require multiple number negative time detect automatically though modify specific case type_size min max set intrinsic size option range need opt option require another option also present opt option pointer option remove need remove_needs opt option also specify string contain name option exclude opt option give opt present opt option pointer also give string contain name option option remove exclude list remove_excludes opt envname name get value environment present pas command line group name help group put option effect positional option default option show help print hide ignore_case ignore case command line also work subcommands affect argument ignore_underscore ignore underscore option name also work subcommands affect argument option_one match optionone apply short form option since character disable_flag_override command line long form flag option assign value command line notation flag value behavior desire disable_flag_override disable generate exception command line work short form flag option allow_extra_args true false set true option take unlimited number argument like vector false limit number argument size type option default value depend nature type container default true others default false delimiter char allow specification custom delimiter separate single argument vector argument specify delimiter option would opt produce element vector equivalent opt assume opt vector value description str set change description multi_option_policy cli multioptionpolicy throw set multi option policy shortcut available take_last take_first take_all join affect option expect argument bool flag inherit default always start specific policy join delim also join specific delimiter equivalent call delimiter delim join valid value cli multioptionpolicy throw cli multioptionpolicy throw cli multioptionpolicy takelast cli multioptionpolicy takefirst cli multioptionpolicy join cli multioptionpolicy takeall cli multioptionpolicy sum check std string const std string validator_name validator_description define check function function return non empty string error message check fail check validator validator object check see validators validators description available validators create new transform std string std string validator_name validator_description convert input string output string place parse option transform validator validator object transformation see validators validators description available validators create new void const std string function value receive receive throw validationerror error encounter configurable false disable option configuration capture_default_str store current value attach display help string default_function std string advance change function capture_default_str always_capture_default always capture_default_str create new option useful app option_defaults default_str string set default string directly validation callback string also default value argument pas value request default_val value generate default string value validate value also valid option assign directly value type value type also update value must convertible string know type stream operator callback may trigger run_callback_for_default set run_callback_for_default force option callback execute variable set default_val set option_text string set text option name description force_callback cause option callback value set trigger even option present parse trigger_on_parse set cause callback associate validation check option execute option value parse end parse could cause callback execute multiple time also work positional option option return option pointer chain together even skip store pointer entirely function take function signature void const std string throw validationerror validation fail help message name parent option prepended since check transform underlie mechanism chain many want execute order operation add transform execute first reverse order addition check follow transform function order addition want see unconverted value get std vector command line option give flag abc flag combine filename option ffilename space require abcf filename flag option combine long long flag long_flag true long flag equal override default value filename space filename equal allow_windows_style_options specify application subcommand option also give flag filename option long long flag filename space filename colon long_flag false long flag override default value window style option allow combine short option value separate short option like option long flag option may give allow specify false value value flag see config configuration detail value support note window style option may space argument interpret positional argument syntax override default value disable disable_flag_override extra positional argument cause program exit least positional option vector recommend want allow extraneous argument set allow_extras main app get error access miss option remain subcommands app remain true get remain option subcommands include remain argument process another app function remaining_for_passthrough get remain argument reverse order app parse vector work directly could even inside subcommand callback access vector pointer parse option original order parse_order present command line end unlimited option everything positional validators validators structure check modify input verify input meet certain criterion transform another value add check transform function difference function check modify input whereas transform execute validators add check cli11 several validators perform common check cli ismember require option member give set see transform validators transform validators detail cli transformer modify input map see transform validators transform validators detail cli checkedtransformer modify input map require input either set already output set see transform validators transform validators detail cli asnumberwithunit modify pair match unit multiply number correspond factor base transformer accept thing like size value duration cli assizevalue convert input like 100b mib absolute value configure interpret cli existingfile require exist give cli existingdirectory require directory exist cli existingpath require path directory exist cli nonexistentpath require path exist cli fileondefaultpath best transform check exist either directly default path update path appropriately see transform validators transform validators detail cli range min max require option min max make sure float point need min default cli bound min max modify input always min max make sure float point need min default produce error conversion possible cli positivenumber require number great cli nonnegativenumber require number great equal cli number require input number cli validipv4 require option valid ipv4 string cli typevalidator require option convertible specify type cli typevalidator would require input convertible unsigned int regardless end conversion validators simply pas name check transform method option validators merge invert produce check ensure value produce check number equal transform validators validators let transform value transform function also check check may nothing case cli bound min max bind value min max value outside range limit min max fail value convert produce validationerror ismember validator let specify set predefined option pas container copyable pointer include std shared_ptr container validator container need iterable value_type key type convertible string initializer list directly like need modify set late pointer form let type message check correctly refer current version set container pas set vector map like structure transform method output value match key could modify filter specify set option also specify filter function form type value common choice probably cli ignore_case cli ignore_underscore cli ignore_space work string possible define function work type ismember cli ismember choice1 choice2 select exact match choice cli ismember choice1 choice2 cli ignore_case cli ignore_underscore match thing like choice_1 cli ismember std set container type work need std begin std end value_type cli ismember std map map transform replace match value match key value member map ismember type auto std make_shared std initializer_list cli ismember modify late transformer checkedtransformer validators transform value another container copyable pointer include std shared_ptr container generate pair value pas validator container need iterable value_type consist pair key type convertible string value type convertible string initializer list directly like need modify map late pointer form let description message correctly refer current version map transformer check value map ignore checkedtransformer take extra step verify value either map key value case transform expect output value generate validationerror transformer place check anything specify map option also specify filter like cli ismember transformer checkedtransformer interchangeable transformer cli transformer key1 map1 key2 map2 select key value produce map value cli transformer std map maplike container work value_type need produce pair kind cli checkedtransformer std map map transform replace match key value checkedtransformer also require value either match key match know output auto std make_shared std initializer_list key1 map1 key2 map2 cli transformer modify late transformpairs alias std vector note container ismember transformer checkedtransformer find function like std unordered_map std map function search find function linear search perform filter present fast search perform first fail linear search filter key value perform cli fileondefaultpath default_path check default path transform first check exist nothing try add default path search exist error return normally disable cli fileondefaultpath default_path false allow multiple path chain multiple transform call validator operation validators copyable operation perform alter setting validators default description display help alter via description validator_description name validator useful late reference get_validator name method option set via name validator_name operation function validator set via operation std function active function activate deactivate validator operation validator set apply specific element output pair option std pair first element may need positive integer second may need valid application_index int function specify base negative index apply value validator operation function return validator reference allow chain specify check option name range deactivate time check late activate custom validators validator object custom function create via operation function set late create also possible create subclass cli validator case also set custom description function operation function query validators load option pointer name validator retrieve via retrieve validator give name throw cli optionnotfound error name give name empty first unnamed validator return first validator return validator index apply necessarily order define pointer nullptr invalid index give validators function query current value get_description return description string get_name return validator name get_active return current active state true validator active get_application_index return current application index get_modifying return true validator allow modify input control via non_modifying method though recommend let check transform option method manipulate need get case fast easy way return callback variable specify add_ function situation possible desire case may obtain follow function please note function type conversion process call performance critical retrieve vector string order give variable_to_bind_to get accord multioptionpolicy convert like add_option_function variable value opt return default value directly specify type possible vector return non vector get accord multioptionpolicy place subcommands subcommands support nest infinitely add subcommand call add_subcommand method name optional description give pointer app behave like main app take option subcommands add ignore_case subcommand allow variation cap also accept ignore_underscore similar underscore child inherit current set parent add multiple match subcommand name level include ignore_case ignore_underscore want require least subcommand give require_subcommand parent app optionally give exact number subcommands require well give argument set min max number allow max number allow allow unlimited number subcommands handy shortcut single negative value set value limit maximum number allow keep argument match previous subcommand name match app main subcommand parse command line parse true convert directly bool app get_subcommands method return list pointer subcommands pas command line got_subcommand app_or_name method also provide check see app pointer string name collect command line many case however app callback capability may easy every app set callback execute various stag parse lambda function capture get parse value input callback definition function throw cli success cli runtimeerror return_value even exit program callback multiple subcommands allow allow click click like series command order preserve subcommand trigger multiple time positional argument take precedence second future call subcommand count subcommand return number time subcommand call subcommand callback trigger unless immediate_callback flag set callback specify parse_complete_callback function final_callback trigger case callback execute completion subcommand argument argument subcommand parse trigger multiple time subcommands may also empty name either call add_subcommand empty string name argument nameless subcommands function similarly group main app see option group option group see might work option define main app nameless subcommands check well allow option define composable group add_subcommand function overload add shared_ptr subcommand could define different component merge main app possibly multiple apps multiple nameless subcommands allow callback nameless subcommands trigger option subcommand parse subcommand name give add_subcommand method restriction option name subcommand option several option support main app subcommands option_groups ignore_case ignore case subcommand inherit add subcommands usually main app ignore_underscore ignore underscore subcommand name inherit add subcommands usually main app allow_windows_style_options allow command line option parse form long file_name ext option change option specify add_option call ability process option form long file_name ext fallthrough allow extra unmatched option positionals fall match parent option subcommands always allow fall first attempt match current subcommand fail progressively check parent match subcommands configurable allow subcommand trigger configuration default subcommand option configuration trigger subcommand update default value disable specify subcommand disable give bool value enable disable subcommand option group disabled_by_default specify start parse subcommand option_group disable useful allow subcommands trigger others enabled_by_default specify start parse subcommand option_group enable useful allow subcommands disable others silent specify subcommand silent mean show subcommand list allow subcommands modifier validate_positionals specify positionals pas validation match validation specify transform check option argument fail validation error match proceed next available positional extra argument validate_optional_arguments specify optional argument pas validation assign option validation specify transform check option argument fail validation error match proceed next available positional subcommand extra argument exclude option_or_subcommand give option pointer pointer another subcommand subcommands give together case option option pas subcommand generate error need option_or_subcommand give option pointer pointer another subcommand subcommands require give option give subcommand validate occur prior execution callback parse complete require_option require option option group require_option require option option group reset default require_option min max explicitly set min max allow option option group set max imply unlimited option require_subcommand require subcommands require_subcommand require subcommands reset default require_subcommand min max explicitly set min max allow subcommands set max unlimited add_subcommand name description add subcommand return pointer internally store subcommand add_subcommand shared_ptr add subcommand shared_ptr return pointer internally store subcommand remove_subcommand app remove subcommand app subcommand got_subcommand app_or_name check see subcommand receive command line get_subcommands filter list subcommands match particular filter function add_option_group name description add option group option group app option group specialize subcommand intend contain group option group control option interact get_parent get parent app nullptr call main app get_option name get option pointer option name throw specify option available nameless subcommands also search get_option_no_throw name get option pointer option name function return nullptr instead throw option available get_options filter get list define option pointer useful process app custom output format parse_order get list option pointer order parse include duplicate formatter fmt set formatter signature std string const app std string appformatmode see format detail description str set change description get_description access description alias str set alias subcommand allow subcommands call name parse true subcommand give command line count return number time subcommand call count option_name return number time particular option call count_all return total number argument particular subcommand process main app return total number process command name name add change name callback void function set callback app either set pre_parse_callback final_callback depend value immediate_callback see subcommand callback callback additional detail parse_complete_callback void function set callback completion parse subcommands execute completion single subcommand execute multiple time see subcommand callback callback additional detail final_callback void function set callback end process last thing execute return see subcommand callback callback additional detail immediate_callback specify whether callback subcommand parse_complete_callback true final_callback false main app execute main app callback prior callback subcommand also immediate_callback flag set preferable parse_complete_callback final_callback directly instead callback immediate_callback wish control order time callback though immediate_callback swap need pre_parse_callback void std size_t function set callback execute first argument application process see subcommand callback callback additional detail allow_extras throw error extra argument leave positionals_at_end specify positional argument occur last argument throw error unexpected positional encounter prefix_command like allow_extras stop immediately first unrecognized item ideal allow app subcommand prefix call another app footer message set text appear bottom help string footer std string set callback generate string appear end help string set_help_flag name message set help flag name message return pointer create option set_version_flag name versionstring callback help_message set version flag name version string callback optional help message return pointer create option set_help_all_flag name message set help flag name message return pointer create option expand subcommands failure_message func set failure message function provide cli failuremessage help cli failuremessage simple default group name set group name default subcommands set hide subcommand option_name retrieve const pointer option give option_name app flag1 get pointer option flag1 value app flag1 get command line flag operation throw exception option name valid note fix number require positional option match subcommand name empty filter function positional argument match repeat subcommand name callback subcommand optional callback execute different stag process preparse_callback execute first argument subcommand application process give argument number remain argument process main app first argument consider program name subcommands first argument subcommand name option group nameless subcommands first argument first argument subcommand process group second callback execute parse know parse_complete_callback subcommands execute immediately parse execute multiple time subcommand call multiple time main app callback execute parse_complete_callback subcommands execute prior final_callback call subcommand option group main app subcommand config config reflect parse_complete_callback name subcommands option_group parse_complete_callback execute prior parse_complete_callback main app config_file load specify final_callback execute process complete parse_complete_callback execute main app subcommand final_callback execute follow final callback option group last thing execute final_callback main_app say application set like command line give call prior parse value argument pc1 call immediately process sub1 command value call sub2 command encounter pc2 call value sub2 command encounter call second sub2 command encounter ac1 call process argument call process argument ac2 call last complete low level callback execute subcommand consider terminate follow condition meet argument process another subcommand encounter would fit optional slot subcommand positional_mark encounter available positional slot subcommand subcommand_terminator mark encounter prior execute parse_complete_callback contain option process callback trigger subcommand parse_complete_callback call contain option reset trigger option group subcommand method create option group return pointer argument description optional omit option group allow creation collection option similar group function option additional control requirement allow specific set option compose control collective see range option group specialization app function subcommand option work app subcommand also work option group option create part option group add function like subcommand previously create option add name give option group must contain newlines null character option pointer function must option define parent application option group otherwise error generate subcommands also add via subcommand move parent option group option option group search command line match option main app positionals main app would match first care must take make sure order positional argument option group option group work well exclude require_options method application treat option group single option purpose count requirement option group consider option subcommands contain option group allow specify requirement require option group option different group option group contain group well disable option group turn option within group cli triggeron cli triggeroff method helper function allow option subcommands group trigger another group function make preparse_callback enabled_by_default disabled_by_default trigger group may vector group pointer method per group override previous underlie function complex arrangement accomplish similar methodology custom preparse_callback function additional helper function deprecate_option retire_option available deprecate retire option specify option deprecate display message help warn first usage deprecate option function normally add message help display warn first create option nothing default display warn first usage option retire effect option exist replace dummy option take argument empty string pas option group name entire group hide help create group option group display help string configuration call argument remove configuration option like set_help_flag set configuration option special present read along normal command line argument read exist throw error unless require true configuration toml format default though default reader also accept ini format well note cli11 contain full toml parser read string toml cli11 parser format add adept user variation available customization point default formatter toml equivalently ini format space name argument ignore multiple argument separate space set quote remove preserve space way command line work boolean option true yes enable false disable case insensitive section separate name treat subcommands note necessarily mean subcommand pas set default set positional argument subcommands trigger configuration configurable flag set subcommand subcommand notation trigger subcommand act command line print configuration pas argument config_to_str default_also false write_description false default_also also show default argument write_description include app option description see config additional detail customization point desire multiple configuration allow positive number allow configuration specify separate config argument value string quote character print single quote argument double quote empty string double quote argument numerical boolean value quote option flag allow argument pas empty string config convert default value specify via default_str default_val option user specify default give empty string convert value empty string note transform check option pointer return set_config like option validate input need also transform cli fileondefaultpath look default path well current see transform validators transform validators additional detail validator multiple transform validators either multiple call operation transform inherit default many default subcommands even option inherit creator inherit default value subcommands allow_extras prefix_command ignore_case ignore_underscore fallthrough group footer immediate_callback maximum number require subcommands help flag existence name description inherit well option default group require multi_option_policy ignore_case ignore_underscore delimiter disable_flag_override set default set option_defaults object default setting option inherit subcommands well format job format help printout delegate formatter callable object apps option free replace either formatter call formatter fmt app fmt copyable callable correct signature cli11 come default app formatter functional formatter customizable set label key value replace default label like require column_width set width column add functional app option also override almost stage format process subclass either formatter want make new formatter scratch need implement correct signature first argument const pointer question formatter get std string usage name second option appformatmode mode final option return std string appformatmode normal sub indicate situation help call sub optional default formatter make sure expand subcommands call formatter since access anything call operator formatter set subclassing app class design allow toolkits subclass provide preset default option see setup teardown subcommands remain unsubclassed app since expect need setup teardown default app add help flag help remove replace set_help_flag name help_string also set help flag set_help_all_flag name help_string expand subcommands level remove option pointer remove_option opt add pre_callback override customize parse behavior still give user freedom callback main app important parse function parse std vector take reverse list argument pop_back process args correct order get_help_ptr get_config_ptr give access help config option pointer standard parse manually set name first argument vector also parse string bool split parse single string optional boolean set true include program name string false otherwise program name contain space exist otherwise enclose quote single quote double quote backtick embed quote character escape also relate note app get pointer store parent app shared_ptr similar option delete main app scope unless object another owner work every add_ option see far depend method take lambda function method make different lambda function capture populate option function full access vector string know many time option pas many argument receive lambda return true could validate option string false fail value add long support operator default print support operator add new type provide custom operator istream inside cli namespace fine want interfere exist operator want extend support completely new type lambda add specialization lexical_cast function template namespace type need convert new parser complex support feature standard add_options call test test newparsetest cpp simple show utility utility often useful cli program separate header appear cli11 hpp completely independent need timer autotimer class allow easily time block custom print output create timer title default timer customize output predefined big output default simple autotimer print time elapse timer destroy end block timer instead to_string std cout timer std endl print time print function function take string title time return format string print library excellent ring library add color terminal safe multi platform way combine cli11 nicely print help blue error red reset return terminal user unix like system would like handle control color add main function api api document api doc also see cli11 tutorial gitbook gitbook several short different feature include repository brief description include directly pas remain argument callback function generate cli11 application base exist argument base issue custom parser base issue digit flag pas value enumeration option checkedtransformer transform validators addition content enum cpp show custom ostream operator override cli11 enum stream illustrate usage custom formatter group option help group timer helper class app practice mix unlimited argument still recover original order json config parser modify help flag something default nest subcommands illustrate option group require number option base issue set interact group option illustrate preparse_callback handle situation number argument determine get parse base issue positional argument validate validate_positional flag also base issue illustrate prefix_command flag app demonstrate exclusionary option group base issue illustrate set repeat subcommands base gitter simple set cli11 application different flag option configure help subcommands timer subcommands generate separately add main app late short subcommands illustrate validators contribute contribute open issue github issue pull request github pull request github ask question gitter also short note contributor github contribute readme roughly follow standard readme style include mention almost every feature library complex feature document detail cli11 tutorial gitbook gitbook project create henry major feature add philip special thank contributor emoji henry schreiner philip top christoph bachhuber marcus brinkmann jonas nilsson doug johnston lucas czech rafi wiener daniel mensinger jesus briales sean fisk fpeng1985 almikhayl andrew hardin anton fred helmesjo kannan khem raj mak kolybabi mathias soeken nathan hourt paul roux pawe bylica peter azmanov stephane del pino viacheslav kroilov christos deining elszon ncihnegn nurelin ryan4729 isabella muerte kolanich jam gerity josh soref geir ondrej certik sam hocevar ryan curtin michael hall ferdymercury jakob lover dominik steinberger fleury dan barowy olaf meeuwissen dryleev max alex dewar project follow specification contribution kind welcome license version library available clause bsd license see license license detail cli11 develop university cincinnati support goofit library nsf award version feature diana hep meet cern see slide diana slide please give try feedback always welcome doi badge doi link azure badge azure action link action badge appveyor badge appveyor repology badge repology codecov badge codecov gitter badge gitter license badge conan badge conan link conda badge conda link github release github issue github pull request goofit plumbum click api doc ring boost program option lean mean option parser tclap cxxopts docopt gflags getopt diana hep nsf award university cincinnati gitbook cli11 advance topic custom converter programoptions hxx argument aggregator args argh fmt catch clara version post version post version post version post wandbox badge wandbox link release badge cli11 compare diana slide awesome cli single libs codacy badge codacy link hunter standard readme style argparse toml lyra
C C++;https://github.com/boostorg/compute;boost compute coverage boost compute gpu parallel compute library base opencl core library thin wrapper opencl api provide access compute device context command queue memory buff top core library generic stl like interface provide common algorithm transform accumulate sort along common container vector flat_set also feature number extension include parallel compute algorithm exclusive_scan scatter reduce number fancy iterators transform_iterator permutation_iterator zip_iterator full documentation available follow show sort vector float gpu boost compute header library link require compile path compute include sort cpp lopencl find tutorial directory support question library usage development post mail bug feature request report issue tracker also feel free send email problem question feedback help want boost compute project currently look additional developer interest parallel compute please send email kyle lutz kyle lutz gmail com information
C C++;https://github.com/VerbalExpressions/QtVerbalExpressions;qtverbalexpressions regular expression make easy lib base library test valid url api term anything anythingbut const qstring value something somethingbut const qstring value endofline find const qstring value maybe const qstring value startofline const qstring value special character group const qstring value anyof const qstring value linebreak range const std initializer_list args tab word modifier withanycase searchoneline searchglobal function replace const qstring source const qstring value test add expression multiple const qstring value alt
C C++;https://github.com/micropython/micropython;micropython project micropython project aim put microcontrollers small embed system find official website warn project beta stage subject change base include project wide name change api change micropython implement entire syntax include exception yield etc additionally async await keywords follow core datatypes provide str include basic unicode support byte bytearray tuple list dict set frozenset array array collection namedtuple class instance builtin module include sys time struct etc select port support _thread module multithreading note subset functionality implement type module micropython execute script textual source form precompiled bytecode case either device filesystem freeze micropython executable see repository micropython board pyboard officially support reference electronic circuit board major component repository core include compiler runtime core library mpy cross micropython cross compiler turn script precompiled bytecode port unix version micropython unix port stm32 version micropython pyboard similar stm32 board cube hal driver port minimal minimal micropython port start want port micropython another microcontroller test test framework test script doc user documentation sphinx restructuredtext format render html documentation available additional component port bare arm bare minimum version micropython arm mcus mostly control size port teensy version micropython teensy preliminary functional port pic16bit version micropython bite pic microcontrollers port cc3200 version micropython cc3200 port esp8266 version micropython espressif esp8266 soc port esp32 version micropython espressif esp32 soc port nrf version micropython nordic nrf51 nrf52 mcus extmod additional non core module implement tool various tool include pyboard module script subdirectory may include readmes additional info make component gmake bsd base system also need bash gcc available command python3 system invoke make additional option python2 micropython cross compiler mpy cross port require micropython cross compiler first program call mpy cross pre compile script mpy include freeze firmware executable port mpy cross mpy cross make unix version unix port require standard unix environment gcc gnu make x86 x64 architecture support x86 bite well arm mips make full feature port another architecture require write assembly exception handle garbage collection alternatively fallback base setjmp longjmp see section require dependency port unix make submodules make give try micropython list range ctrl eof exit command line option particular increase heap size may need large application micropython complete testsuite make test unix version come builtin package manager call upip micropython upip micropython pystone micropython pystone browse available module standard library module come project external dependency micropython port may require dependency instal unix port libffi library pkg config tool require debian ubuntu mint derivative linux distros essential include toolchain make libffi dev pkg config package dependency together micropython may require enable extra feature capability recent version micropython may enable default additional dependency port directory interest port unix first execute make submodules fetch relevant git submodules sub repository port need command get late version submodules update time time execute make deplibs available dependency regardless whether intend micropython additional option like cross compile set option pas make deplibs actually enable disable dependency edit port unix mpconfigport inline description option ssl module require upip tool describe enable default micropy_py_ussl set port require dependence transparent happen automatically still need fetch make submodules command stm32 version stm32 port require arm compiler arm none eabi gcc associate bin utils arch linux need arm none eabi binutils arm none eabi gcc arm none eabi newlib package otherwise try port stm32 make submodules make need get board dfu mode pyboard connect 3v3 pin dfu pin wire pybv1 next bottom leave board second row bottom flash via usb dfu device make deploy include tool pydfu script flash firmware work may correct permission need sudo make deploy see readme port stm32 directory detail contribute micropython open source project welcome contribution productive please sure follow contributor note micropython licence mit license contribution follow license
C C++;https://github.com/GarageGames/Torque3D;torque mit license open source version torque github github github information torque community garagegames garagegames professional pre compile version addition github also couple pre package would prefer compile available page wiki relate repository project manager offline documentation license asset
C C++;https://github.com/devsisters/libquic;quic multiplexed stream transport udp quic experimental protocol aim reduce web latency tcp surface quic similar tcp spdy implement udp tcp implement operate system kernel middlebox firmware make significant change tcp next impossible however since quic top udp suffer limitation key feature quic exist tcp spdy include dramatically reduce connection establishment time improve congestion control multiplexing without head line block forward error correction connection migration see chromium quic detail information libquic repository source dependency extract chromium quic modification patch minimize dependency need quic library notable dependency boringssl source already embed repository link cmake need kind dependency language bind library intend essential reference point language bind possibly integration codebase http server like apache nginx currently experimental language bind bind get start cmake recommend cmake make make limit number simultaneously execute recepies adapt number capability machine libquic library generate libssl libcrypto locate boringssl directory release cmake gninja dcmake_build_type release instead cmake gninja integrate order integrate libquic best source documentation official chromium quic toy client server golang bind help quic toy client goquic sync upstream great effort make make sync upstream chromium source effortless possible see deps dependency see manage script actual sync want apply upstream change clone checkout chromium upstream quic server debug ninja quic_server update chromium_revision var deps chromium source revision sync necessary update new without patch apply temporarily commit sync patch patch apply patch reject patch collision manually apply reject patch open rej carefully apply reject hunk manually try find may need add additional modification make successful may add delete source update cmakelists txt accordingly successful make patch git diff src patch basepatch patch make sure include custom directory source patch add patch deps update exist patch amend previous commit commit deps new patch source change
C C++;https://github.com/lzfse/lzfse;lzfse reference lzfse compressor introduce compression lzfse lempel ziv style compression algorithm finite state entropy cod target similar compression rat high compression decompression speed compare deflate zlib readme makefile linux macos makefile lzfse xcodeproj xcode project src lzfse main lzfse header src lzfse_tunables lzfse encoder configuration src lzfse_internal lzfse internal header src lzfse_decode lzfse decoder api entry point src lzfse_encode lzfse encoder api entry point src lzfse_decode_base lzfse decoder internal function src lzfse_encode_base lzfse encoder internal function src lzfse_encode_tables lzfse encoder table src lzfse_fse fse entropy encoder decoder header src lzfse_fse fse entropy encoder decoder function src lzvn_decode_base lzvn decoder src lzvn_decode_base src lzvn_encode_base lzvn encoder src lzvn_encode_base src lzfse_main command line tool xcodebuild dstroot tmp lzfse dst produce follow tmp lzfse dst usr local bin lzfse command line tool usr local include lzfse lzfse library header usr local lib liblzfse lzfse library linux test ubuntu gcc clang work recent distribution make install_prefix tmp lzfse dst usr local produce follow tmp lzfse dst usr local bin lzfse command line tool usr local include lzfse lzfse library header usr local lib liblzfse lzfse library cmake mkdir cmake make header library command line tool usr local bind
C C++;https://github.com/riolet/WAFer;wafer wafer language base ultra light scalable server side web application framework think node programmer write eco system wafer wafer thin memory footprint fraction node bulky framework copy server say myserver put inside function void server request request myserver make make server myserver good wafer operate many different configuration select compile time include single thread default multi thread make thread select default epoll make loop epoll base event loop c10k mode make loop epoll max_con_cons default port set environment variable port change really source come simple get start note contributor thank make wonderful project prefer format style acknowledgement david feng whose web server repurposed platform mark incredible number bug fix fine folk honest constructive feedback
C C++;https://github.com/catchorg/Catch2;catch2 logo artwork catch2 logo small png github linux linux macos try join chat discord catch2 catch2 mainly unit test framework also provide basic micro benchmarking feature simple bdd macro catch2 main advantage simple natural test autoregister name valid identifier assertion look like normal section provide nice way share set tear test catch2 develop devel branch next major version catch2 develop significant rework find part documentation likely still stick stable documentation match version catch2 migrate release look documentation doc migrate top provide simple guideline get start collect common migration problem documentation comprise part need yet another test framework doc catch top tutorial doc tutorial top get start reference section doc readme top detail issue bug raise issue tracker discussion question please see else catch2 open source software doc opensource user top commercially doc commercial user top
C C++;https://github.com/ashaduri/csv-parser;csv parser csv parser compile time runtime csv parser write feature header require standard support read csv std string_view compilation constexpr fully support rfc include quote value escape quote newlines field value liberal term accept quite standard csv detect error need support excel csv variation support read different type string double empty field runtime extensively test usage runtime parse std vector compile time parse currently parse compile time restriction string_views support output double collapse consecutive double quote string compile time allocate buff possibly useful consequence compile time parse parse error also cause compilation error copyright copyright alexander shaduri license zlib
C C++;https://github.com/corvusoft/restbed;restbed unix window restbed comprehensive consistent program application require seamless secure communication http ability range business process design target mobile tablet desktop embed production environment akin embed nginx company product line solution architect bellrock technology feature feature description full duplex communication channel single tcp connection server send server send event enable efficient server client stream text base event real time notification update generate server long poll allow long hold http request push server client secure wire communication allow transmit private online session create custom http session persistence management logic http technique allow multiple http request send single tcp connection without wait correspond response path annotate uris custom path parameter resource key revision etc query parameter automate query parameter parse header filter incoming http request header customise log entry create multi path give resource multiple path improve readability customisable add custom http method adaptability address form compression gzip deflate etc encode adaptability address form encode utf ascii etc rule reduce complexity process incoming request readable unit client capability optional ssl peer certificate verification deprecate ipv4 ipv6 internet protocol version support architecture asynchronous architecture capable address c10k problem converter path query header conversion primary type separate service resource level authentication error separate service resource level error handle address bind http http service separate address signal capture generate process signal high quality documentation cover architecture api compliance flexibility address http compliance mature secure stable extensively test since community active vibrant energetic open source community support commercial support available depth find see restbed anger please visit corvusoft project license corvusoft limit unite kingdom right reserve restbed framework dual license see license license full detail support please contact sale corvusoft support license option include bespeak software development test design consultation mentor review please submit enhancement proposal defect via tracker alternatively ask question tag find require component instal distribution sub folder external library wish external library openssl asio window instruction microsoft visual studio instruction please see feature restbed vcpkg restbed dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg restbed restbed port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository documentation codebase intend self document possible supply many test help aid developer locate late design api documentation minimum requirement resource requirement compiler compliant bsd linux mac osx window raspbian road map milestone feature status asynchronous http service complete http compliance complete http compliance complete secure socket layer complete simultaneous port http http complete rule engine complete schedule task service loop complete multi thread service capability complete bind service specific address complete session management complete http client complete signal handle complete api documentation complete web socket complete client side ssl certificate development resource cache development runtime modification development http compliance development refactor reduce reuse pending contact method description tweet question feature request support corvusoft support relate query sale corvusoft sale relate query
C C++;https://github.com/blend2d/blend2d;blend2d vector graphic power jit compiler official home page official repository public chat zlib license license see page detail documentation documentation bind provide list blend2d bind beta version blend2d currently beta test mode mean library certain functionality may limit work expect risk
C C++;https://github.com/mono/CppSharp;cppsharp tool set library facilitate usage native net ecosystem consume header library generate necessary glue surface native api manage api api consume exist native library manage add manage script support native codebase support target language present cli also library parse native syntax tree rich declaration type information release status nuget package continuous integration library library documentation documentation community community support support user user library ast mirror clang ast type system class apis check _clang ast introduction detail architecture declaration statement expression type class object layout declaration visitor type visitor parser provide apis parse source syntax tree parse source parse library archive symbol parse share library symbol base accurate clang parser generator generate glue bind syntax tree native multiple backends cli invoke multiple abis itanium arm multiple platform window linux multiple runtimes net mono virtual method override manage multiple inheritance translate interface std string default parameter value semantic comment doxygen comment extensible bind semantics via user pas type map documentation please see follow resource information get start doc gettingstarted user manual doc usersmanual developer manual doc devmanual community feel free open issue github problem find also join gitter discussion channel support wrapper priority support please write cppsharp protonmail com alternatively may post bounty user cppsharp follow project ffmpeg tizen libgd please feel free send pull request add project list
C C++;https://github.com/whoshuu/cpr;request curl people img align right height announcement like probably notice cpr move new home read project maintain fabian kilian quick help discussion libcpr also offer chat tldr request simple wrapper around inspire excellent project despite name libcurl easy interface anything make mistake misuse common source error frustration expressive language facility library capture essence make call concise idiom quick get request functional complicate without documentation find late documentation work progress give good idea library currently feature request currently support custom header url encode parameter url encode post value multipart form post upload post upload basic authentication bearer authentication digest authentication ntlm authentication connection request timeout specification timeout low speed connection asynchronous request cookie support proxy support callback interface put method delete method head method option method patch method thread safe access openssl winssl support http request plan quick overview plan feature look next usage cmake already cmake project need integrate request primary way fetch_content add follow cmakelists txt produce target cpr cpr link typical way need handle libcurl dependency take care find package linux distribution alternatively may package specific linux distribution since distribution currently package cpr user able program approach currently aware package follow distribution arch linux package distribution try make add distribution repository please submit pull request add list however please plan actively maintain package requirement explicit requirement compatible compiler clang gcc minimum require version gcc unknown anyone trouble library specific version gcc let know would like perform request openssl development library require cpr vcpkg cpr dependency manager cpr port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository cpr conan cpr package manager setup cmakelists txt see conan msbuild meson others find cpr package conan keep date conan contributor version date please create issue pull conan center index repository
C C++;https://github.com/Bhupesh-V/30-seconds-of-cpp;second second standard template library collection stl feature function library second codacy open source github header algorithm algorithm sparkle list list page_with_curl map map world_map queue queue large_blue_circle set set zap stack stack book unordered_map unordered_map world_map vector vector arrow_upper_right algorithm view content accumulate adjacent_difference adjacent_find all_of any_of binary_search clamp copy copy_backward copy_if copy_n count count_if equal equal_range fill fill_n find find_first_of find_if find_if_not for_each for_each_n generate include iota is_heap is_permutation is_sorted iter_swap lexicographical_compare linear_search lower_bound make_heap max max_element merge min min_element minimax_element minmax minmax_element mismatch move next_permutation none_of nth_element partition pop_heap prev_permutation push_heap random_shuffle remove remove_copy remove_copy_if remove_if replace replace_copy replace_copy_if replace_if reverse reverse_copy rotate search search_n set_difference set_intersection set_union shuffle sort stable_sort swap transform transform_reduce unique upper_bound list view content assign back begin cbegin cend clear crbegin crend emplace emplace_back empty end erase front insert max_size merge pop_front rbegin remove rend resize reverse size sort splice swap unique map view content begin cbegin cend clear contain count crbegin crend emplace emplace_hint empty end erase find insert lower_bound max_size rbegin rend size swap upper_bound queue view content back emplace empty front pop push queue size swap set view content begin cbegin cend clear contain count emplace emplace_hint empty end equal_range erase find insert lower_bound max_size rbegin rend size swap upper_bound stack view content emplace empty pop push size swap top unordered_map view content count erase find insert size vector view content vector assign back begin capacity cbegin cend clear crbegin emplace emplace_back empty end erase front get_allocator insert max_size pop_back push_back rbegin rend reserve resize shrink_to_fit size sort swap speaking_head community join enthusiast globe_with_meridians second knowledge experience second web stefan big thank shriam lovely new logo heart author bust_in_silhouette bhupesh varshney twitter dev memo license project license mit license see license license detail wave contribute please read update contribute contribute process submit pull request
C C++;https://github.com/CrowCpp/Crow;fast easy microframework web description crow microframework web service rout similar flask make easy also extremely fast beat multiple exist framework well non framework feature easy rout similar flask type safe handler blazingly fast see json support base templating library crow mustache header library single header available middleware support extension http websocket support multi part request response support modern still development http documentation available disclaimer version put define crow_main top source hello world json response argument handler argument type check compile time handle json request find set available disclaimer crowcpp crow project base ipkn crow neither crowcpp member project associate endorse support ipkn jaeseung way ipkn crow source bsd clause license sometimes refer public comment available github repository way claim associate contact ipkn jaeseung regard crowcpp crowcpp crow attribution crow incorporate follow library source convert string crow request object base nginx copyright igor sysoev additional change license term nginx copyright joyent inc node contributor right reserve permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software qs_parse read query string parameter copyright bart grantham permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software tinysha1 websocket handshake security tinysha1 header sha1 algorithm base boost uuid detail copyright saurav mohapatra mohaps gmail com permission copy modify distribute software purpose without fee hereby grant provide copyright notice permission notice appear copy software provide author disclaim warranty regard software include imply warranty merchantability fitness event shall author liable special direct indirect consequential damage damage whatsoever loss profit whether action contract negligence tortious action arise connection performance software catch2 unit test part actual framework boost software license version august 17th permission hereby grant free charge person organization obtain copy software accompany documentation cover license software reproduce display distribute execute transmit software prepare derivative work software permit third party software furnish subject follow copyright notice software entire statement include license grant restriction follow disclaimer must include copy software whole part derivative work software unless copy derivative work solely form machine executable object generate source language processor software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose title non infringement event shall copyright holder anyone distribute software liable damage liability whether contract tort otherwise arise connection software deal software
C C++;https://github.com/grpc/grpc;grpc rpc library framework grpc modern open source high performance remote procedure call rpc framework anywhere grpc enable client server application communicate transparently simplify connect system homepage mail list join chat start grpc maximize usability grpc support standard method add dependency user choose language language grpc runtime come package available user language package manager instruction language specific grpc runtime project please refer document src cpp follow instruction src cpp directory src csharp nuget package grpc pub package grpc get google golang org grpc jar maven central repository jar maven central repository npm grpc objective src objective add grpc protorpc dependency podspec php src php pecl grpc src grpcio pip grpcio ruby src ruby gem grpc follow grpc web instruction per language quickstart guide tutorial find documentation section grpc available directory precompiled bleed edge package grpc master branch head upload daily start develop grpc contribution welcome please read contribute contribute guide entire workflow source test contribute change grpc codebase contribute document also contain info contribution process work contain best practice create contribution troubleshoot sometimes thing wrong please check troubleshoot guide troubleshoot experience issue grpc performance see performance performance number master branch daily concept see grpc concept concept repository repository contain source grpc library implement multiple language write top share core library src core src core library different language may various state development seek contribution library language source share core library src core src core src cpp src cpp ruby src ruby src ruby src src php src php src php core library base src csharp src csharp objective src objective src objective language source repo java kotlin nodejs webjs dart net pure impl swift
C C++;https://github.com/tensorflow/tensorflow;documentation end end open source platform machine comprehensive flexible ecosystem resource let researcher push state art developer easily deploy power application tensorflow originally develop researcher engineer work google brain team within google machine intelligence research organization conduct machine deep neural research system general enough applicable wide variety domain well tensorflow provide stable apis well non guarantee backward compatible api keep date release announcement security update subscribe see mail see tensorflow pip enable gpu docker current release include support cuda enable gpu ubuntu window small cpu package also available update tensorflow late version add upgrade flag command nightly binary available test package pypi try first tensorflow program see tensorflow contribution guideline want contribute tensorflow sure review contribution guideline contribute project adhere tensorflow conduct code_of_conduct participate expect uphold github track request bug please see tensorflow general question discussion please direct specific question stack tensorflow project strive abide generally accept best practice open source software development fuzzing cii best contributor continuous status find community support platform configuration tensorflow sig community official type status artifact linux cpu linux gpu linux xla tba macos window cpu window gpu android raspberry raspberry libtensorflow macos cpu status temporarily unavailable nightly official libtensorflow linux cpu status temporarily unavailable nightly official libtensorflow linux gpu status temporarily unavailable nightly official libtensorflow window cpu status temporarily unavailable nightly official libtensorflow window gpu status temporarily unavailable nightly official resource tensorflow tensorflow official tensorflow deeplearning tensorflow developer professional tensorflow deployment get start tensorflow tensorflow advance technique tensorflow deep specialization intro tensorflow intro tensorflow deep introduction tensorflow lite machine tensorflow tensorflow tensorflow tensorflow tensorflow tensorflow optimization tensorflow white tensorboard visualization tensorflow license apache license license
C C++;https://github.com/luca3m/redis3m;redis3m client bear bring experience redis opensource library main goal provide simple efficient wrapper facility like memory management connection pool system support high availability sentinel set useful pattern ready composable counter message queue dependency redis3m require hiredis boost library first step require dependency debian system checkout compile documentation see directory compile find class reference versioning project semantic short word version name change mean break api change mean new feature without break old mean bug fix
C C++;https://github.com/jnv/lists;list list useful silly awesome awesome list curated github contribution welcome also available list list non technical non technical technical technical awesome awesome list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list license license non technical bibliography stem science technology engineer mathematics resource grey literature awesome marvelous amas ask anything github thing read every year open source list awesome band name useful belarusian online resource resource research tool resource relate biology bitclout social medium blockchain everyone get coin awesome exceptional board game fantasy literature worth read gif link resource highlight around glasgow scotland hack place organise country city list feature power wifi useful health resource free stock photo resource project kimchi people people people guide tool resource relate security compromise lock safe key various online map article website resource mental health software industry parasite host pathogen interaction philosophy reddit channel every programmer must follow sci worth consume resource public speak stock photography video illustration website theravada buddhist teach thing public domain baby sleep guide curated best internet bail fund protestors across usa boardgames boardgame relate project find github _in chinese_ comprehensive database chinese poetry cocktail recipe curated repo publicly list logo identify ticker almost logo audio graphic resource provide medium license creative common license place promote discord server resource help phd student complete dissertation successfully grant scholarship encourage diversity stem field aim half world population woman twitter feed interest people follow diversity inclusion honest goodness real food recipe transit map highlight frequent day service major global report publish international organisation electric guitar part spec read list vegetarian vegan restaurant lawrence club full lawyer also github account conservation development documentation endanger minority low resourced human language book book blow mind natural resource mine speak facebook free basic worldwide open technology project preserve stable climate energy supply vital natural resource plastic free product soundtrack boost productivity focus everything public broadcast medium also introduction work non programmer bzimmerman repository contain tasty open source recipe csswizardy collection thing like cook larrymad nofunsir schacon _in chinese english_ silizuo awesome vegetarian friendly restaurant bookshelf awesome people community transcribe thing activity within silicon valley company work home event change covid thing sustainable community drive taco repo star star star great sit buy awesome shirt cool stuff technical resource software biz phd student program language ought know value meet question javascript snippet understand second common interview question help prepare next interview community drive effort make web accessibility easy useful addins project triangulate solid mesh processor artificial intelligence _in english spanish_ various resource algorithm visualization alternative open source front end popular internet platform youtube twitter etc collection interest new tech aim decentralisation form useful android development library usage link every android developer _in chinese_ sdk development tool library resource _in chinese_ android position china _in chinese_ resource android _in chinese_ collect classify android open source project lot work happen academia industry tool perform dynamic analysis static analysis reverse engineer android apps _in chinese_ translation article android development helpful material develop angular ansible role gentoo linux community maintain human machine readable list public apis application idea improve cod skill indie dev definitive guide launch app include pre launch market buzz launch science machine production various public document whitepapers article apt advance persistent threat campaign _in chinese_ asynchronous program php automate unit functional test web application javascript current scary usage hop raise awareness misuse society meta yet bestiary single program language various resource organize technology topic bada55 front end developer resource badge github profile startup bangalore pointer useful well write otherwise beautiful documentation _in chinese_ recommendation best desktop mobile apps digest useful tool resource last year russian language specific resource look best practice follow particular language community useful website programmer _in chinese_ big relate project pack json activitypub project string high probability cause issue user input bioinformatics computational biology tool program bitcoin transaction biological artificial neural relate computational neuroscience bookmarklets useful web read list learner tool bot video record podcast accompany morning coffee late javascript information browser insert technology _in russian_ youtube channel web developer scientific tool empower community practice various form non institutional science classical study latin ancient greek resource software raw open source clone popular sit collection scientific industry conference focus cloud compute worth read typeface source text editor choose next color scheme compiler language runtime team people look job area compiler generate path free self teach graduation computer science open source proprietary content management system tool help prioritize fold blockchain cryptocurrency resource crypto project might suck cod style convention standard technique comparison react take skill pro chief technology officer resource sugar plugins espresso editor macrabbit resource program computer science best seo tool stash popular trend library dad style program joke tool datajournalists gist resource science curriculum science open source fingertip _in portugese_ materiais estudo analise dado area afins empresas que trabalham com dado dicionario conceitos tutorial science nlp machine collection link various debug story deep natural language process alternative google product upcoming developer conference recommend movie people work software industry discover tool devops landscape devops tool tutorial script resource devs online offline resource gardener tend digital note public interwebs discord modding resource discount software saas paas iaa etc offer developer student dive machine jupyter notebook scikit must watch video bout django web framework deep natural language process resource sham sit dumb password rule software engineer company easy apply collaborative bibliography work relate theory practice computational effect elixir program language book company elm ember web framework promote compassionate engineer culture track benchmarking share information open source embed storage engine internals architecture storage transaction process erlang program language find good master erlang idiom resource ecmascript aggregation tool es6 mostly technical thing every software developer know liner ruby _in chinese_ frontend knowledge structure stictly flat system free open source software developer open source free full stack hour cod challenge project certification software saas paas etc offer free tier devs _in chinese_ useful thing front end developer helpful front end relate question interview potential candidate test completely ignore available various _in chinese_ technical talk article real world enterprise frontend development playful challenge job applicant test knowledge frontend development resource collect time frontend resource conference _in spanish camino del frontend developer jonathanzwhite zedix framework library tool thing web mostly javascript stuff tool frontend html desktop laptop include tablet phone yet web development company game datasets tool artificial intelligence game game program popular awesome video game add map etc host github awesome list autogenerated github api git git flow cheat sheet cool feature git github hall fame spectacular thing github golang book article complain golang imperfection must watch video golang design pattern recipe idiom adversarial graph structure game development realtime graphic program narkoz design development guide taniarascia web development guide tutorial snippet xasos hackathon resource organizer bot client software people make law theory principle pattern developer find useful look swag come right place company give swag participation huawei company haskel company break hire process useful htaccess snippet hyperapp javascript framework plugins ida idea compute deal infosec relate software tool black friday link assist web design development personal guide software engineer technical interview developer question ask prospective employer useful development library usage publicly available iptv channel world java card applet relate application cryptographic smartcards article help get good javascript javascript pattern emulator write javascript web platform saas resource pick promise useful javascript library see also must watch video javascript ultimate reference json tool spec javascript tip foundational javascript tool javascript resource web typography curated decibans julia language talk worth watch public failure horror story relate kubernetes program language implement rust program language develop github laravel framework resource blog stuff help drupal free resource topic think curated guide haskell github repository cod journey adrianmoisey link teach trekhleb script split topic contain explanation foundation web development resource type theory documentation write resource liberty seeker curated source type awesome resource available javascript _in chinese_ website relate linux kernel development language compile lua conceptual understand machine algorithm machine deep tutorial machine ruby game development resource make magic happen npm node module useful maintain develop module _in chinese_ weekly digest technology markdown resource apps dialect parser people market article tool grow product future program project motion design animation transition must watch video must watch video javascript open source tool aws security defensive offensive audit dfir etc jameslavin lisp resource exercise great book video etc open source net library make life easy nginx web server lua openresty tengine natural language process thai practical natural language process ruby _in chinese_ daily article node comparison server side node framework nodejs javascript conference call presentation resource help node keep date rust resource exist yet would beneficial rust community everything need know create offline first web apps collection android apps open source open source apps macos open source application open source bot discord book recommendation relate continuous delivery devops operation system think osx relate security tool collection find across web computer science community read discus contain actual alternative backend service provider ala collection tutorial solve understand machine pattern classification task useful payload bypass web application security pent ctf tip protect digital security privacy must watch video php php resource vietnamese post startup get beta user ruby event meetups conference camp etc around world proverb programmer awesome interest talk concern program program tutorial application scratch practical project anyone solve program language json apis web development company purescript bit byte internet s16h must watch video collect classify project github curated decibans scientific program resource primalpop must watch video useful function tutorial relate thing _in chinese_ node golang machine postgresql job queue message queue queue macos quick look plugins developer must watch video ruby rail program language book tech company japan hire remote worker semi fully remote friendly company tech remote friendly brazilian company remote company information tech stack salary design development resource jbranchaud free online resource various technology language tool tevko tool front end devs get start bug bounty hash function cipher tool library material relate cryptography security question ask company interview rich hickey work internet reader replacement megalist ruby bibliography ruby ruby rail bookmark collection ruby development resource collect ruby natural language process nlp library tool software link relate rust program language popular library rxjs ecosystem rxjs react flux collect dispatch quest scalable checklist collection search engine optimization seo tip technics list security assessment usernames password url sensitive pattern fuzzing payload web shell etc overview project work next generation secure email software service host server read list service engineer focus cloud infrastructure service url share social medium proof concept potential target shellshock public slack community add design flair user delight whimsy product erlang spawn shelter best article video presentation relate erlang service great free tier developer budget must watch video devote entrepreneurship startup read list thing startup relate static analysis tool linters quality checker stream algorithm command line tool manipulate structure text automatic live styleguide generator best sublime text package theme goody sublime text essential plugins resource way incorporate framework stack attempt gather flux swift weekly technical newsletter terminal framework plugins resource cli lover inspire list manual cheatsheets blog hack liner cli web tool template tip write high quality documentation node framework today commonly git tip trick open source stuff link tool theme verification synthesis static analysis tool web digital tool activism open source experimental tiny tool game website interactive project tool trade hacker news top star github devs orgs repos follow time trend repository trend day _in chinese_ delightful resource sit factor auth support include email phone call hardware software post web typography web typography university public organization github upcoming web developer conference toolkit thing vim resource reference past future visual program user bot list curated resource relate web audio api introduction web component table content web developer resource across internet web development joke _in chinese_ weekly summary article resource _in czech_ delat kdyz chci naucit programovat jeste vic design development tool book podcast blog make woman _in chinese_ people choose popular project often apply problem awesome waste lose least hour life multiply inclusive event project initiative woman tech area accesibility tool article resource utility accessibility base web development add ons advance custom field plugin wordpress github actionscript adobe air active admin resource extension post utility rail activitypub base project free alternative popular service web ada spark program language adafruit internet thing platform advent agile software development open source technology agriculture farm garden macos app workflow web search service place practice algorithm practice algorithm mostly free open source alternative proprietary software service stoeffel ama answer resource amazon alexa platform tool resource amazon seller analytics service framework software tool _in spanish jackgris jstumpp _partially chinese_ snowdream open source android apps write kotlin particular tech stack library study guide mobile development general android library performance optimization android keep date thing relate android software development _in chinese_ library android _in chinese_ hugoleodev patrickjs gianarb open source animation animatious group configuration management inspire thoughtful answer give stackoverflow quora etc ant system design implement restful api idea apps demonstrate framework library approach specific problem test automation frmework 3rd party library tool apple platform development resource developer application security arabic support tool font development resource arduino hardware library software update script arm processor security exploitation collection asciidoc tool guide tutorial usage collection asciidoctor intro usage chadbrewbaker tool abstract syntax tree process cowchimp abstract syntax tree library _in chinese_ library text editor javascript framework autohotkey library library distribution script tool resource udfs script tool useful resource autoit automotive engineer javascript test runner amazon web service aws resource brain computer interface bluetooth beacon ibeacon eddystone double entry bookkeeping text tool sit article bem frontend development method big notation big framework resource awesomeness open source bioinformatics software library bitcoin service tool software developer bitcoin payment processor story merchant net web framework razor html browser webassembly add ons tool tutorial resource 0xtokens blockchain crytocurrency resource coderplex org blockchain bitcoin ethereum relate resource _in russian_ cyberfund digest knowledge crypto include cryptocurrencies hitripod igorbarinov bitcoin blockchain service imbaniac blockchain service exchange inike blockchain ico itcoin cryptocurrencies oiwn project service base blockchain technology blockchain project artificial intelligence machine blockchains open distribute database crypto hash incl git decentralize compute platform resource technical book author free bootstrap theme think cool business process management bpm awesomeness open source resource relate broadcast technology browser extension github bundler bitcoin development funny interest bug standalone feature service component library integrate web application aleksandar todorovic continue development awesome github kozross framework library resource etc web framework html5 canvas captcha library crack tool cryptocurrency exchange trade sit challenge improve program skill algorithmic challenge chart dataviz chatops manage operation chat cookbook handler add ons resource chef configuration management tool chemical informatics chess software library resource web framework chrome devtools ecosystem tool resource ligurio comparison cloud base service pditommaso continuous integation service continuous integration continuous delivery microcontrollers program language common lisp application common lisp command line apps mbuczko useful link clojurians razum2um delightful cloud service certification cloud platform tool recipe cmake open close source content management system defence cobalt adversary simulation red team operation software cobol program language cocoa control watchos macos interest unicode character guide cryto currency algos people get hype thing development support discussion channel group community developer community community detection framework comparison project like todomvc notejam competitive program algorithm structure resource composer packagist satis php ecosystem school researcher computational neuroscience computer history video documentary relate folklore agv iit kgp jbhuang0604 popular deep relate classification segmentation task video playlist conference connectivity index report help good access communication infrastructure term intersection tech environmental conservation console service reachable via http http protocol game development toolkit container technology service conversational _apache cordova phonegap_ core project resource relate sars cov covid couchdb resource list fffaraz online program course prakhar1989 university computer science course across web conflict free replicate type creative cod generative art visualization interaction design read list modern critical programmer solution cross platform apps tool write cross platform node cryptography article tutorial howtos cryptography encryption resource crystal language awesome group deepakbhattarai framework tiny list limit best resource csv comma separate value format capture resource chief technology officer emphasis startup grow chief technology officer cybersecurity blue resource cycle framework program language library plugins utility dash framework analytical web application dashboard visualization resource engineer tool software developer open source datascience repository apply real world problem datasets experiment validation visualization framework library software database library resource heynickc domain drive design ddd command query responsibility segregation cqrs event source event storm wkjagt domain drive design decentralize service technology decision tree research deep tutorial project community cite deep rough list resource deep deep reinforcement computer vision deep resource deku library secure runtime javascript typescript component derbyjs resource digital designer resource software design pattern implement desktop apps javascript official development relate discord server fun libs package language real purpose make developer chuckle tool resource workflow tip make awesome development environment developer relation browser bookmarklets tool resource front end devs resource digital nomad digitalocean cloud infrastructure provider alfg jacc discord chat voip application discord community programmer diversity technology web framework django add ons veggiemonk documentation site generator doctrine orm library resource automate extraction document dojo javascript toolkit resource library developer resource dev tld net library tool framework software software architecture pattern principle net platform async thread channel net platform net core library tool framework software net core education resource text editor framework java web framework emincansumer mrsinguyen nirgn975 useful resource drupal droplet dtrace book article video tool resource ebpf linux packet filter economics relate project software people aws elastic container service fargate tool resource educator virtual teacher education resource online educational game editor language program awesome stuff ejabberd ecosystem resource create apps formerly atom electronic engineer functional reactive language emacs sefakilic tacticiankerala good email embed low level development rust program language ember community russia javascript framework nmec ember thing every tool civic hacker worldwide work blockchain protocol javascript linter esoteric language program language bekatom decentralize software platform dapps ttumiel vinsgo falsehood programmer believe finalfantasy ish metaphor software property base test framework javascript typescript web framework node framework real time application rest apis resource ffmpeg resource firebase mobile development platform fish flask web framework resource plugins flexible box layout module icon userstyles userscripts fluid apps awesome list curate best flutter library tool tutorial article font everything food relate software project beginner friendly project start contribute production grade free open source software functional program stuff javascript framer prototyping tool fraud detection research first robotics competition free freedom software program language program language leonardomso finite state machine statecharts soixantecircuits finite state machine lucasviola xgrommx delightfully amuse facetious markov chain output mobile development framework fuzzing fuzz test software security game talk development design etc game boy development resource tool doc emulator relate project open source rom podcast like listen gemini geojson visualization game development framework gif software resource amaze gist git tool resource shiny thing add ons extend enhance git cli easy git hook automate task git workflow _in chinese_ antbranch github guide article sit tool project resource github prissue fffaraz git github reference kikobeats github secret goody phillipadsmith github awesomeness github repository various topic like study material raspberry etc gnome desktop environment avelino golang online free golang book game engine gradient boost research graph embed graphql relay resource system resource plugins tool screen capture application h2o machine repository resource hadoop hadoop ecosystem resource open source hardware tool instant realtime graphql engine postgresql game development cross platform program language apache hbase hardware description language open source healthcare software library tool resource heroku resource hierarchical matrix framework library software home home automation home automation honeypot resource promote solution improve wellbeing freedom society terminal ibm cloud downloadable svg png font icon project functional program language dependent type resource useful incident responder resource independent developer make money resource time series database influxdb information retrieval resource inspectit documentation resource open source interpreter github interview question mobile development framework _in chinese_ apple store sdk xcode library dharmeshkakadia internet thing hqarroum internet thing internet thing hybrid application distribute web internet relay chat protocol collect relevant quote say history javascript apis markup online free javascript book tiny list limit best javascript resource open source video conferencing apache jmeter load test emredurukn tramcar javascript topic might spark next revolt json datasets require authentication next json structure meta text json apache distribute stream platform katas kde desktop environment plugins knockout mvvm framework web framework program koan various language program language kotlin multiplatform library resource korean open source project land page template open source program language chiraggude timothydjones _in english chinese_ laravel php framework resource _in spanish_ recursos espanold para desarrolladores golang ld_preload mechanism change application behavior time lead people manager gear toward tech potentially useful anyone resource help get start science ledger command line account system legacy system publicly available source preprocessor _in chinese_ low project cross platform game development framework library genesis world large free library learndapp cryptocurrency facebook reed hong facebook nee libra digital currency nice host provider tool theory platform linguistics web development link richardbenjamin resource literate program linux software linux container framework library software linux application user developer professional audio video live event production linux html templating library thing livecoding internet service require logins registration lua game framework _in chinese_ chinese low platform forhappy lewisjellis php microframework laravel asynchronous lua jaywcjlove premium macos software various category xynnn macos tool application game macos apps application tool community command tool specific screensavers mac npm package make say wow know possible magento php ecommerce platform talk blog post interview experience open source maintainer interest software manifesto principle framework light weight markup markdown alternative web framework decentralize microblogging google material design _in chinese_ resource library material mathematics mechanical keyboard dharmeshkakadia parolkar way support meteor developer package resource mew developer like align vision small focus npm package bbc micro bite microservice architecture relate principle technology minimalist framework simple lightweight instrument mobile market development need create great mobile web experience infrastructure operation system application monitor tool operation monte carlo tree search heuristic search algorithm frequently game book tool motion plan mqtt relate stuff empirical software engineer evidence base drive research software system music audio midi mysql software library tool resource name thing right neo4j graph database dutch tech relate event node embed technique layer resource pure javascript neuroscience library software resource mpron developer newsletter webpro best weekly newsletter zudochkin react base javascript framework program language natural language process web apps work without login module node sindresorhus non financial application blockchain nosql database npm tool project ntnu student resource framework universal vue application observable collection arrive time knowledge base app capability base security enable concise composition powerful pattern cooperation without vulnerability objective key best practice set communicate company team employee objective measure progress base achieve online development environment online machine open company share much possible charge little possible company offer service free open source project opengl library debugger resource open source open source license document guide book free open source software library photography also tool video open sound open source alternative establish saas product delphi freepascal pascal framework library resource shiny thing tool process trace penetration test resource tool penetration test _see persian farsi support tool font development resource php framework library resource smalltalk machine science pharo fantasy console make share play tiny game dynamic pin gist github pipeline toolkits warez piracy link play framework module tool resource computer control draw machine visual art robot ghosh podcast designer developer product manager entrepreneur hustler rshetty important podcast software engineer pokemon pokemon polymer processor javascript framework graphql library service alternative respect privacy privacy matter teoga bookmark resource article product designer ttt30ga resource product designer resource product program manager grow delightful productivity resource book tool product manager teach kid program progressive web apps pwa prolog logic program language monitor system prometheus alert rule javascript promise awesomedata large scale public datasets internet source _in chinese_ resource pyramid web framework kevmo vinta _in chinese_ list orms schema serializers etc library software package relate scientific research audio video relate focus gain hand experience type stub plugins tool work machine framework question system automatically answer question ask natural language quantum program language jessetg framework skhaz framework device wearable application platform self track quantum compute develop resource radio citizen band radio resource dpaluy gramantin project sit make rail ruby vietnam rail library app ebooks tutorial screencasts magazine news ruby gem rail development decision forest tree base method include random forest bag boost blackout314 thibmaek raspberry tool project image resource reactjs tool resource video react component library react hook readmes best practice program language recommender system framework library software brillout redux library material xgrommx web application state container ruby rail regular expression visual regression test javascript framework react graphql ink tablet remote company resource book link remote work tool help research life great resource restful api architecture development test performance realtime database facilitate retrospective cryptocurrency reinforcement reinforcement apply cyber security recurrent neural skill roadmaps software development roam research note take robot operate roslyn net compiler platform curated list resource shiny package market sdogruyol abstract syntax tree ast ruby podcast ruby development also russian book ruby rail resource ruby rail cross platform development ruby rxjava reactive program library salesforce platform resource configuration management resource agent orient program language analysis system famolus sas preprocessor hugogiraudel sas preprocessor satellite imagery datasets annotation computer vision deep scala program language scala compiler pattern scalable reliable performant large scale system software numerical analysis tool demo resource beyond latex software define sdn security talk software library document book resource cool stuff security service web application host locally semantic web link seo search engine optimization link anaibol service solution resource serverless nobackend application pmuens resource relate serverless compute serverless architecture serverless security resource service worker progressive web application azure service distribute service platform service make painful programmer life easy bsug siaf sheet music software library resource command line framework toolkits guide gizmo various website resource development graphic guide article video sketch filipelinhares community power slack matiassingers public slack community smart apps mehdihadeli software architecture pattern principle simskij design reason around software architectural pattern method software resource help craft programmer software relate patreon account free software test book social link project sound audio library resource space space exploration relate book linguistic resource nlp spanish apache spark package resource speaker program design community tool sphinx documentation generator ergonomic split keyboard extra library sqlalchemy orm site reliability production engineer tech stack different application feature document explosion package javascript style ecosystem _in chinese_ useful library personal remark resource startup static web site generator steam video game distribution platform development web development stream framework application etc linter open technology project sustain stable climate energy supply vital natural resource framework framework open source project swede matteocrippa wolg swift program language swift swift playground symfony php bundle utility resource symfony php framework resource kahun open source sysadmin resource n1trux open source sysadmin resource distribute system design website system font software taglines tailwind test anything protocol technical blog upcoming technical conference tech conference youtube vimeo etc get inspire telegram message service machine intelligence library hashicorp terraform test resource text edit resource library web textpattern plugins resource web theme template graph draw package tex latex context apache graph compute framework token sale ico resource tutorial project community scientific compute framework luajit transit apis apps datasets research software alternative ngrok like tunnel software service focus self host curated repository useful generally awesome twilio tool technology twitter account organise program community dzharii typescript program language ellerbrock typescript open source project resource opentype truetype framework component library style toolkit resource umbraco net unicode tidbit package resource asset resource game engine page detail developer setup gear software configs ecosystem personal compute playground create host small tool game programmable unique assembly language program language plain vanilla javascript swift web framework mapbox vector specification vehicle security car hack vhdl hardware description language akrawchyk matteocrippa front end tool videolan multimedia player framework ruby web framework node interactive cli framework visual studio resource javascript library graphic compute webassembly apple watchos web animation library book apps etc get start web archive resource digital designer exquisite compact web page effect tool program library relate web scrap process webaudio package resource webauthn fido2 webextensions development webgl library resource much webpack resource library tool webpack tool web performance web cloud service saas websocket library resource make system engineer software quality weekly subscription newsletter software world apache java web framework wikipedia relate framework library software datasets reference application tool window dropndot endel miziomon open source workflow engine web performance optimization xamsome mobile application framework xamsome interest library tool xamarin mobile project xcode ide script curated list awesome xmpp protocol resource dance yamada yii php framework extension tutorial nice thing program language open source project various language craft es6 aka es2015 class awesome list list curated list awesome list curated list awesome list awesome framework library software aligoren list github list emijrp curated list awesome curated list many topic erichs curated list awesome curated list inspire inspiration oyvindrobertsen curated list curated list library resource shiny thing various language curated list awesome awesomeness _in chinese_ awesome list awesome collection awesome list library tool framework software program language list awesome repos list hacker pentesters security researcher curated list curated list include curated list curated list may may contain curated list home delightful curated list free software open science information source explorer design curated awesome list host github meta list list useful open source project developer tool list github list list must watch list _in chinese_ curated list awesome list list list list geekan awesome awesome list t3chnoboy curated list curated list awesome list curated list awesome awesomeness awesomenesses list list github list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list list license cc0 public social preview photo eli
C C++;https://github.com/OculusVR/RakNet;raknet copyright oculus inc package note help directory contain index html full help documentation html format source directory contain require core raknet want source program create dll sample directory contain sample game old version raknet sample demonstrate feature raknet game sample cover several feature lib directory contain libs debug release version raknet rakvoice make linux user root directory window user project sample project sample support see help swigtutorial html upgrade version see x_to_4 x_upgrade txt window user visual studio load raknet_vs2008 sln convert necessary project conversion encounter error msb4006 follow step fix open project property click common property click framework reference look property change copy local flag true false compiler issue please see help compilersetup html window user vc6 support get directly include source cygwin user copy include source whatever want home directory type lib w32api libws2_32 cpp exe might copy dll cygwin bin well linux user cmake lpthread cpp source directory libcat pthread dependentextensions cpp source directory bite m64 command line sometimes need pthread instead lpthread command bite chat server source directory m64 lpthread sample chat chat server cpp cpp command natcompleteserver sample natcompleteserver directory lpthread source main cpp cloudserver source cpp cloudserver cloudserverhelper cpp command autopatcher server source directory lpthread lpq lssl lbz2 lssl lcrypto opt postgresql lib dependentextensions bzip2 opt postgresql include dependentextensions bzip2 dependentextensions autopatcher dependentextensions autopatcher autopatcherpostgrerepository dependentextensions postgresqlinterface cpp dependentextensions autopatcher autopatcherserver cpp dependentextensions autopatcher createpatch cpp dependentextensions autopatcher memorycompressor cpp dependentextensions autopatcher autopatcherpostgrerepository autopatcherpostgrerepository cpp dependentextensions postgresqlinterface postgresqlinterface cpp sample autopatcherserver autopatcherservertest cpp command natcompleteserver source directory lpthread sample cloudserver sample cloudserver cloudserverhelper cpp sample natcompleteserver main cpp cpp command bigpackettest source directory lpthread sample bigpackettest bigpackettest cpp cpp debug info lpthread sample bigpackettest bigpackettest cpp cpp get usr local lib libraknet undefined reference __sync_fetch_and_add_4 march i686 debug gdb set breakpoint line disable breakpoint disable delete breakpoint delete get list breakpoints info breakpoints breakpoint ignore number time ignore useful command info stack info local delete clear breakpoints step step next step finish step continue keep step next user orderedlist listarray guid command sudo apt get gcc sudo apt get essential yum gcc sudo apt get update sudo apt get command gdb sudo apt get gdb command wget webpage sudo apt get wget series command new server sudo apt get wget sudo apt get update sudo apt get fix miss sudo apt get gdb raknet_install_directory source m64 pthread sample chat chat server cpp cpp mac user open terminal window type desktop raknet source dndebug isysroot developer sdks macosx10 sdk arch i386 cpp whichever sdk however sdk bug compile unless gcc inside xcode source cleanly give bunch powerpc binary compile sdk good thing give follow command libtool static raknetppc stitch together static library powerpc architecture may warn symbol want prudent remove name cpp libtool command source intel gcc include isysroot developer sdks macosx10 sdk arch i386 cpp stitch i386 library libtool static rakneti386 type list make universal binary lipo create libraknet name libraknet raknet library powerpc intel mac enjoy ipod depend version target may change define bite integer float double android need late cywgin android sdk native android cywgin need ndk directory raknet cygwin create raknet directory somewhere sample create path cygwin home kevin android ndk r4b sample raknet copy android manifest xml another sample jni need follow android local_path call dir include clear_vars local_module raknet my_prefix local_path raknetsources my_sources wildcard my_prefix cpp local_src_files my_sources my_prefix raknetsources include build_shared_library version android assume directory call raknetsources cygwin home kevin android ndk r4b sample raknet jni raknetsources raknetsources source directory raknet rather copy junction exe command create junction cygwin home kevin android ndk r4b sample raknet jni junction exe cygwin home kevin android ndk r4b sample raknet jni raknetsources raknet4 source unjunction cygwin home kevin android ndk r4b sample raknet jni junction exe cygwin home kevin android ndk r4b sample raknet jni raknetsources within cywgin enviroment navigate home kevin android ndk r4b sample raknet type ndk everything end able create project eclipse import cygwin home kevin android ndk r4b sample raknet native client solution raknet_nativeclient_vs2010 see sample nacl_sdk raknet_nativeclient_vs2010 howtosetup txt detail instruction setup window phone solution raknet_winphone8_vs2012 add project dependentextensions winphone8 threademulation cpp add dependentextensions winphone8 include path define _crt_secure_no_warnings windows_phone_8 window store solution raknet_windowsstore8_vs2012 sln add project dependentextensions winphone8 threademulation cpp add dependentextensions winphone8 dependentextensions winrt include path tcp support udp rakpeer ipv4 hard also add ipv6 upon request define _crt_secure_no_warnings windows_store_rt _raknet_support_tcpinterface _raknet_support_packetizedtcp _raknet_support_emailsender _raknet_support_httpconnection _raknet_support_httpconnection2 _raknet_support_telnettransport _raknet_support_nattypedetectionserver _raknet_support_udpproxyserver _raknet_support_udpproxycoordinator _raknet_support_udpforwarder unreal engine see
C C++;https://github.com/Rookfighter/inifile-cpp;inifile cpp simple easy single header ini decoder header cmake system simply copy header project include directly usage extend custom need please look directory allow load require single function call overload constructor directly load ini function require path automatically parse content section field access index operator value convert various native type natively support type custom type conversion add implement specialize template functor see value assign ini assignment operator content inifile write object directly save ini function require path automatically store ini content define custom type conversion inifile cpp automatically assignment operator method ini field add support see also contributor thank contributor extend improve fix small seemingly popular library
C C++;https://github.com/wdas/partio;library particle manipulation initial source release partio tool particle read write start abstraction commonality particle access many attribute associate index entity super impatient guide location adjust accordingly prefix home local git clone partio make prefix prefix get start cmake project provide top level makefile convenience take care step see makefile user tweakable variable correspond cmake option typical usage installation usr local temporary stag directory tmp stage make destdir tmp stage prefix usr local source overview src lib library public api root lib core core library kdtree traversal representation lib input output different format swig base bind doc doxygen documentation start manual test start regression test need tool useful tool partconvert partinfo partview class goal library abstract particle interface representation partio represent particle class inherit provide functionality particlesinfo information particle attribute particlesdata read access particle particlesdatamutable read write access particle function get particle access readheaders return particlesinfo read minimum necessary get number particle attribute readcached return particlesdata multiple user different thread particle particlesdata create read return particlesdatamutable allow read write access behind scene could implement class however like header representation call core particleheader cpp simple non interleave attribute core particlesimple cpp attribute particle attribute basic type count many scalar value vector float int vector float representation vector invalid however float valid float infinity seem encompass common format particle iterate multiple way access api tip simd function possible prefer dataasfloat arrayofindices oppose int singleindex access multiple piece cache particleattributes quick access instead call attributeinfo loop particle iterators linear operation particle much optimize dataasfloat backends behind scene simpleparticles particleheaders simpleparticlesinterleaved future would like write disk base cache back end dynamically load necessary create read readcached could augment create different structure case reader writer new reader writer add directory simply need implement interface particlesinfo particlesdata particlesdatamutable many need edit reader add prototype particleio cpp add extension bind easy package pypi partio publish docker upload pypi andrew selle walt disney animation studio
C C++;https://github.com/schlangster/cpp.react;react reactive program library enable declarative definition dependency state event flow base definition propagation change handle automatically simple underlie system construct dependency graph collect value affect change order calculate guarantee several property _correctness_ update forget _consistency_ value update incoming dependency update _efficiency_ value calculate per update cycle change propagate along path new value different old system also know safe update value parallel multiple thread live profile decide worthwhile development status currently process rewrite library scratch many thing still break outdated old stable document version still available
C C++;https://github.com/khizmax/libcds;stop war library codacy github concurrent structure library collection concurrent container require external manual synchronization share access safe memory reclamation smr algorithm like hazard user space epoch base smr mostly header template library smr core segregate dll library contain follow container stack optional elimination support several algo lock free queue include classic michael scott algorithm derivative flat combine queue segment queue several unordered set map lock free fine grain lock base technique lock free lock free feldmanhashmap set multi level array thread safe bidirectional iterator support bronson algorithm fine grain lock base avl tree generally container intrusive non intrusive stl like version belong intrusive container namespace respectively version library write compile gcc clang intel late release see online doxygen generate doc nix cmake cmake readme window visual project part libcds may depend dcas double width compare swap atomic primitive target architecture support x86 cmake script enable mcx16 compiler flag switch dcas support may manually disable dcas support follow command line flag gcc clang compiler dcas support dcds_disable_128bit_atomic 64bit dcds_disable_64bit_atomic 32bit project libcds must compile flag either dcas support without libcds vcpkg libcds dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg libcds libcds port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository pull request requirement pull request master branch unconditionally reject integration branch intend pull request usually integration branch master dev branch intend main develop usually contain unstable project reference stack treiberstack treiber system program cop parallelism technical report ibm almaden research center april elimination back base idea danny hendler nir shavit lena yerushalmi scalable lock free stack algorithm fcstack flat combine wrapper std stack queue basketqueue moshe hoffman ori shalev nir shavit basket queue msqueue maged michael michael scott simple fast practical non block block concurrent queue algorithm maged michael safe memory reclamation dynamic lock free object atomic read write maged michael hazard pointer safe memory reclamation lock free object rwqueue maged michael michael scott simple fast practical non block block concurrent queue algorithm moirqueue simon doherty lindsay grove victor luchangco mark moir formal verification practical lock free queue algorithm optimisticqueue edya ladan mozes nir shavit optimistic approach lock free fifo queue segmentedqueue afek korland yanovsky quasi linearizability relax consistency improve concurrency fcqueue flat combine wrapper std queue vyukovmpmccyclequeue dmitry vyukov see deque flat combine deque base stl deque map set michaelhashmap maged michael high performance dynamic lock free hash table list base set splitorderedlist ori shalev nir shavit split order list lock free resizable hash table stripedmap stripedset maurice herlihy nir shavit art multiprocessor program cuckoomap cuckooset maurice herlihy nir shavit art multiprocessor program skiplistmap skiplistset maurice herlihy nir shavit art multiprocessor program feldmanhashmap feldmanhashset steven feldman pierre laborde damian dechev concurrent multi level array wait free extensible hash map support thread safe bidirectional iterators order single link list lazylist steve heller maurice herlihy victor luchangco mark moir william scherer iii nir shavit lazy concurrent list base set algorithm michaellist maged michael high performance dynamic lock free hash table list base set priority queue mspriorityqueue hunt michael parthasarathy scott efficient algorithm concurrent priority queue heap tree ellenbintree ellen fatourou ruppert van breugel non block binary search tree bronsonavltreemap lock base fine grain avl tree nathan bronson jar casper hassan chafi kunle olukotun practical concurrent binary search tree smr hazard pointer maged michael safe memory reclamation dynamic lock free object atomic read write maged michael hazard pointer safe memory reclamation lock free object andrei alexandrescu maged michael lock free structure hazard pointer user space rcu desnoyers low impact operate system trace phd thesis chapter user level read copy update desnoyers mckenney stern dagenias walpole user level read copy update flat combine technique hendler incze shavit tzafrir flat combine synchronization parallelism tradeoff
C C++;https://github.com/electronicarts/EASTL;standard template library eastl stand electronic art standard template library template library container algorithm iterators useful runtime tool development across multiple platform fairly extensive robust library emphasis high performance consideration usage familiar stl work templated container algorithm library probably need read familiarity template probably need document get speed case need understand template properly powerful vehicle ease creation optimize description template outside scope documentation plenty documentation internet eastl suitable tool ship application functionality eastl useful modern compiler capable produce good template many people current generation future generation application multiple platform embed system server mainframe package manager eastl package manager conan eastl eastl package conan keep date conan team member community contributor version date please create issue pull conan center index repository eastl dependency manager git clone vcpkg bootstrap vcpkg vcpkg integrate vcpkg eastl eastl port vcpkg keep date microsoft team member community contributor version date please create issue pull vcpkg repository documentation please see eastl introduction doc introduction compile source please see contribute contribute detail compile test source credit maintainer eastl create paul pedriana maintain project roughly year eastl subsequently maintain roberto parolin year driver proponent get eastl opensourced rob mentor member team teach everything ever want know spookyness rob maintenance eastl pas max winkler roughly year land current maintainer liam mitchell significant eastl contribution make alphabetical order avery lee colin andrew flouret liam mitchell matt newport max winkler paul pedriana roberto parolin simon everett contributor project product eastl frostbite electronic art license modify bsd license clause bsd license see license project root
C C++;https://github.com/idealvin/cocoyaxi;cocoyaxi english readme_cn linux window mac license style coroutine library introduction cocoyaxi short elegant efficient cross platform base library contain series high quality base component style coroutine coroutine base program framework command line config parser high performance log library unit test framework json library etc say light year earth planet name namake namake sun large small namakians make live program divide level accord program level low level send planet develop program technology wander namakians must collect least star project return namake several year ago namakians dispatch earth order back namake planet soon possible ruki develop nice tool whose name take namake time alvin develop style coroutine library whose name take cocoyaxi village ruki alvin live namake sponsor cocoyaxi need help like may consider become sponsor thank much github cup special sponsor cocoyaxi specially sponsor follow company thank much document english core feature coroutine implement coroutine follow feature multi thread schedule default number thread number system cpu core share stack coroutines thread share several stack default size 1mb memory usage low simple test linux show million coroutines take memory reference flat relationship coroutines new coroutines create anywhere include coroutines support system api hook window linux mac directly third party library coroutine coroutineized socket coroutine synchronization event coroutine lock coroutine pool channel waitgroup create coroutine create coroutines function accept parameter first parameter callable object long call coroutines create evenly distribute different schedule thread want create coroutines specify schedule thread create coroutines follow way user want create coroutine schedule thread follow way channel similar channel golang transfer coroutines create channel add timeout follow read write operation call timeout determine whether time method simple select base golang detail usage see document waitgroup similar sync waitgroup golang wait exit coroutines thread program provide set coroutineized socket consistent native socket apis form easily write high performance program synchronous manner addition also implement high level program component include framework base ipv6 compatible support ssl time convenient socket apis brief demonstration usage http rest see document static web server http server http client flag command line config parser similar google simple easy component define config item flag provide default value config item without config parameter program default config user also pas config parameter command line config config need user exe mkconf generate config flag macro begin def_ define config item config item equivalent global variable variable name flg_ plus config name compile follow log high performance memory friendly local log library nearly need memory allocation component print log log divide log level debug info warn error fatal print fatal level log terminate program user print log different level follow log also provide series check macro regard enhance version assert clear debug mode check assertion fail log print function call stack information terminate program linux macosx make sure instal system log fast follow test reference log glog single thread platform google glog log win2012 hhd 6mb 180mb win10 ssd 7mb 560mb mac ssd 17mb 450mb linux ssd 54mb 1023mb log window thread total log log time second spdlog time second log linux thread total log log time second spdlog time second unitest simple easy unit test framework many component write unit test guarantee stability simple def_test macro define test unit actually function method class def_case macro define test case test case actually block multiple test unit put project main function simple contain unit test cocoyaxi user unitest follow command composition header source libco test compile separate test program unit test correspond different test unit compile single test program generator rpc framework compiler require need compiler support linux gcc mac clang window xmake recommend tool quick start share library mingw enable http ssl feature libco libco xrepo cmake help provide cmake support improve make perfect libco project enable http ssl feature share library libco vcpkg libco conan find cocoyaxi cmake license mit license cocoyaxi contain cod project license see detail special thank special thank early english document translate special thank help improve xmake script thank particular provide cmake script thank much improve cmake script provide support find_package really great help thank
C C++;https://github.com/iboB/dynamix;dynamix dynamic mixins new take polymorphism let user compose modify polymorphic object time library mean create project architecture rather achieve purpose focus maximal performance minimal memory overhead dynamix great software architecture system complex object include limit game especially role play strategy cad system enterprise system library library type dynamix object placeholder whose instance extend exist class mixins thus provide particular instance functionality type access newly form type interface make message stand alone function generate library think method small may look like library key feature library compose object mixins time physically separate interface fast polymorphic call comparable std function external dependency standard library non intrusive mixins need common parent special inside mutate live object change composition time multicast message handle many mixins within object possibility custom allocator finely tune memory aim cache locality critical part ability dynamic library enrich modify object without modify even rebuild executable thread safe message call thread safe underlie method also check talk dynamix russia article accu overload journal april russia video create dynamix follow project know dynamix key piece software architecture war planet online global gameloft release mmorts android blitz brigade rival gameloft release multiplayer rts android window sword crossbones epic pirate epic devs llc release strategy exploration game android masthead studio release mmorpg long support early proprietary prototype version library similar interface different know mobile game development add list upon release documentation full documentation available github page tutorial several small fully work annotate tutorial program provide library program illustrate basic usage dynamix tutorial create mixins message create modify mutate object tutorial take deep look create call various type message message tutorial take deep look call override message tutorial various way object create mutate mutation deep look library capability automatic object mutation tutorial handle return type multicast message tutorial library mixin allocator tutorial look possibility available serialize object accompany cmakelists txt repo generate project make desire platform compiler contribute contribution form issue pull request welcome license software distribute mit software license see accompany license copy copyright borislav zahary logo dynamix license creative common attribution international license copyright license boost mixin dynamix initially develop separate library depend boost library collection dynamix unlike boost mixin support dynamix distribute mit license whereas boost mixin distribute boost software license
C C++;https://github.com/yue/yue;yue library create native cross platform gui apps get start sample apps desktop apps webview open source slack app sync clipboard across platform render view yue react issue feel free ask kind question issue page please english since user may find question valuable license yue project license lgpl license follow exception modify yue source permission statically link yue project regardless license project source yue also distribute proprietary software friendly license make commercial contract owner yue project contributor license agreement send pull request hereby grant owner user yue project perpetual worldwide non exclusive charge royalty free irrevocable copyright license reproduce prepare derivative work publicly display publicly perform sublicense distribute contribution derivative work owner yue project also grant right relicense contribute source derivative work doc script sample_app publish public domain contribution work also license license
C C++;https://github.com/bittorrent/libutp;libutp utorrent transport protocol library copyright bittorrent inc utp tcp like ledbat ledbat document bittorrent extension bep bep29 utp provide reliable order delivery maintain minimum extra delay implement top udp cross platform functional today utp primary transport utorrent peer peer connection utp write external interface strictly ansi c89 interface utp socket interface bite different berkeley socket api avoid need select make easy write event base minimal buff create utp socket register set callback notably on_read callback reactive callback occur byte arrive write side socket proactive call utp_write indicate number byte wish write packet create on_write callback call packet fill buff libutp interface thread safe design single thread asyncronous context although proper synchronization may multi thread environment well see utp detail api documentation see ucat make ucat utp know window msvc linux gcc window msvc project utp sln friend platform share library simple make statically link everything need libutp utp_test make package api libutp api consider unstable probably always encourage test version libutp mindful upgrade reason probably also good idea bundle libutp application license libutp release mit lic license relate work research analysis congestion control mechanism find survey ledbat bep29 lic survey
C C++;https://github.com/cutelyst/cutelyst;cutelyst web framework window codacy quality total web framework top simple elegant approach catalyst perl framework meta object system power core cutelyst allow introspect controller method signature generate match action invoke late benchmark trust fast check comprehensive web framework benchmark techempower feature cross platform stable api abi tag master tag branch unmaintained pluggable engine cutelyst server cross platform fast server engine http pipelining keep alive http upgrade alpn negotiation http direct h2c fastcgi pipelining keep alive multiple protocol support http fastcgi uwsgi websockets rest actionrest plugin base view django template engine django template engine json dispatcher chain path plugins session authentication pbkdf2 authorization roleacl statusmessage validator validate user input csrf protection memcached useragent asynchronous process local qeventloops eventually crash async sql upload parser json body qjsondocument upload json format chunk reponses via qiodevice write api request profile stats unit test qtcreator integration documentation get start check community cutelyst project irc channel freenode mail requirement cmake system core library framework optional uwsgi receive parse protocol request recommend license library lgplv2 public header documentation mit license
C C++;https://github.com/meta-toolkit/meta;meta modern text analysis please visit web page meta website information tutorial meta status branch master window develop window outline intro intro documentation documentation tutorial tutorial cite cite project setup project setup mac mac guide ubuntu ubuntu guide arch linux arch linux guide fedora fedora guide centos centos guide engrit ewsengrit guide uiuc specific window window guide generic setup note generic setup note intro meta modern science toolkit feature text tokenization include deep semantic feature like parse tree invert forward index compression various cache strategy collection rank function search index topic classification algorithm graph algorithm language crf tag shallow parse wrapper liblinear libsvm include libsvm parser utf8 support analysis various language multithreaded algorithm documentation doxygen documentation find doxygen tutorial walkthroughs different part meta meta homepage meta website cite meta research would greatly appreciate citation acl demo project setup mac guide mac high require may success test need homebrew homebrew instal well command line tool xcode homebrew require well prompt xcode select recent version homebrew instal follow command get dependency meta get start follow command test system follow command everything pas congratulation meta seem work system ubuntu guide direction depend greatly instal version ubuntu check version follow command base see proceed follow guide ubuntu lts guide ubuntu lts guide ubuntu lts guide ubuntu lts guide ubuntu guide ubuntu guide version lts operate system support even vendor upgrade least lts lts possible ubuntu lts guide ubuntu lts require work date sister relatively easily however need new compiler ppa switch order meta also need new cmake version natively available start follow command get dependency need meta cmake installation agree license say include subdirectory able follow command see follow output print ubuntu 2ubuntu1 copyright free software foundation inc free software see source copy condition warranty even merchantability fitness particular purpose print cmake version cmake suite maintain support kitware kitware com cmake dependency instal ready follow command get start test system follow command everything pas congratulation meta seem work system ubuntu lts guide ubuntu recent enough gcc meta need add ppa recent version cmake start follow command dependency meta dependency instal double check version follow command output ubuntu 19ubuntu1 copyright free software foundation inc free software see source copy condition warranty even merchantability fitness particular purpose output cmake version cmake suite maintain support kitware kitware com cmake dependency instal ready follow command get start test system follow command everything pas congratulation meta seem work system ubuntu guide ubuntu non lts desktop offer enough modern software repository meta without much trouble dependency follow command dependency instal ready follow command get start test system follow command everything pas congratulation meta seem work system arch linux guide arch linux consistently date package due roll release setup often easy platform get set dependency follow command dependency instal ready follow command get start test system follow command everything pas congratulation meta seem work system fedora guide test fedora old currently support fedora time write may success early version test old version fedora yum instead dnf command give get start dependency able follow command see follow output print gcc red hat copyright free software foundation inc free software see source copy condition warranty even merchantability fitness particular purpose print cmake version cmake suite maintain support kitware kitware com cmake dependency instal ready follow command get start test system follow command centos guide meta centos centos come recent enough compiler gcc old version cmake thus compiler relate library package manager recent cmake able follow command see follow output print gcc red hat copyright free software foundation inc free software see source copy condition warranty even merchantability fitness particular purpose print cmake version cmake suite maintain support kitware kitware com cmake dependency instal ready follow command get start test system follow command everything pas congratulation meta seem work system engrit guide note please able get meta work possible way filesystem habit unbearably slow increase compile time several order magnitude compare cmake make unit test step desktop give follow system cmake time make time unit test time desktop 0m7 523s 2m30 715s 0m36 631s 1m28s 11m28 473s 1m25 326s machine manage engineer uiuc follow guide system software much old meta engrit kind enough package update version research software module module provide gcc cmake recent enough meta actually mostly straightforward set dependency need every time log back system follow command double check version follow command output gcc copyright free software foundation inc free software see source copy condition warranty even merchantability fitness particular purpose output cmake version cmake suite maintain support kitware kitware com cmake version correct ready get start follow command test system follow command everything pas congratulation meta seem work system window guide meta window mingw w64 toolchain gcc strongly recommend msys2 msys2 make fetch compiler relate library significantly easy would otherwise tend date package relative similar mingw distribution note find confuse lose instruction please refer visual setup guide include screenshots every step include update msys2 mingw w64 toolchain start installer msys2 msys2 link website follow instruction page get instal mingw start new terminal follow command dependency relate software need force need work around bug late msys2 installer time write exit launch mingw w64 win64 obtain toolkit get start test system follow command everything pas congratulation meta seem work system msys2 generic setup note rule clean tidy doc cmake command able make usual develop detect cmakelists txt change rebuild makefiles need compile debug mode replace release debug appropriate cmake command rebuild make hesitate reach forum forum encounter problem get set routinely wide variety compiler operate system continuous integration setup travis travis linux appveyor appveyor window fairly certain thing nearly major platform homebrew forum travis appveyor meta website doxygen
C C++;https://github.com/aleksandar-todorovic/awesome-c;awesome curated list good stuff list contain free seller evil physical resource look maintainer list currently pretty much inactive look maintainer make great see info process simple add fix couple thing list become contributor star list list previously maintain decide switch list new decide fork could keep github content content system system compiler compiler compiler library compiler library compression compression crypto crypto database database deep deep documentation generation documentation generation editor editor embed system embed system rtos rtos environment environment framework framework game program game program engine engine resource resource generic program generic program graphic graphic graphic apis graphic apis graphical user interface graphical user interface hash hash image process image process json json reference tutorial reference tutorial online online reference reference language standard language standard beginner beginner intermediate intermediate advance advance self study course self study course physical physical reference reference beginner beginner intermediate intermediate advance advance macro macro memory allocator memory allocator multimedia multimedia internet internet web framework web framework numerical numerical parallel program parallel program parser parser regex regex serialization serialization source collection source collection standard library standard library string manipulation string manipulation test test text editor extension text editor extension atom atom emacs emacs vim vim tool tool utility utility xml xml system tool automate test project tool design avoid complex configuration gnu gpl3 extensible package macro produce script automatically configure software source package part autotools gnu gpl3 tool automatically generate makefile compliant gnu cod standard require autoconf part autotools gnu gpl3 tool cross platform test package clause system design easy make understand rule implicitly jam generic library support script part autotools gnu gpl3 extremely fast user friendly system base ninja apache script generator toolsets like visual studio xcode gnu make clause easy reliable fast way software small simple system focus speed apache system various operate system target apache system create facebook apache modern tool software project system include framework gnu gpl3 cross platform utility base lua apache compiler compiler llvm support c11 fully verify compiler support almost c89 gnu gpl2 provide compiler part compiler set support c11 openmp gnu gpl3 venerable compiler support c99 various free tiny compiler small fast compiler support c99 except complex type gnu intel compiler variant language single program multiple program various compiler cache design speedup recompilation gnu gpl3 compiler library library compiler interpreter low level base project yasm modular assembler project clause compression library read create modify zip archive clause fast compression library gnu massively spiffy yet delicately unobtrusive compression library clause patent free high quality compressor clause fast compression algorithm fast compression library native bind fast real time compression algorithm clause generic lossless compression algorithm base lz77 huffman cod 2nd order context fast compression library gnu pixz pronounce pixie parallel index version clause crypto secure communication library implement ssl dtls gnu lgpl2 general purpose cryptography library range available cipher gnu lgpl2 1or late gnu gpl2 late manual ssl protocol also include cryptography library dual license openssl license ssleay modern easy crypto library fairly comprehensive modular portable cryptographic toolkit public mbed another crypto apache modernize fork openssl various database list database store apis library high performance embed database key value gnu minimalistic client library redis clause ultra fast ultra compact key value embed store openldap robust scalable reliable sql server design drop replacement mysql clause high performance client library apache powerful object relational database system postgresql set tool library access human editable plaintext database call recfiles gnu gpl3 advance key value store clause modern embeddable key value database self contain serverless configuration transactional sql database engine interface public self contain serverless configuration transactional nosql engine interface deep open source neural framework write cuda fast easy support cpu gpu computation documentation generation generate documentation program either latex html rtf sgml gnu modestly tag markup language generate range format clause facto standard tool generate documentation annotate source generate large range format gnu tool generate documentation annotate source support autotools gnu gpl2 gnu editor specifically fancy ide type editor want programmer text editor look elsewhere besides whatever choice make likely support anyway anjuta gnome ide gnu hackable text editor 21st century extensible configurable ide support gnu cross platform ide gnu ide write java small fast ide gnu gpl2 kde ide gnu cross platform ide write part sdk support clang gnu gpl3 visual studio edit redefine visual studio embed system project allow work microcontrollers resource constrain architecture rtos real time operate system rtos intend serve real time application process low latency delay amazon rtos microcontrollers make small low power edge device easy program rtos complete development environment hal driver support tool various connect low cost low power microcontrollers internet clause zephyr scalable real time rtos support multiple hardware architecture optimize resource constrain device apache riot real time multi thread operate system support range device typically find internet thing environment list technology design bring window 21st century respect support design emulate posix compatible environment extensively window various minimalist environment development window bite support various framework section big library provide structure stuff expect modern standard library apache portable runtime another library cross platform utility function apache collection common algorithm structure macro header macro generate generic type safe collection common pipeline library set library design comprehensive efficient robust software toolkit gnu large collection useful structure function library utility function structure design portable efficient powerful gnu modern easy vfs api gnu object orient system object gnu lightweight library function structure gnu small library basic utility include memory allocation string manipulation log clause large library utility feature structure among thing gnu lgpl2 late gnu gpl2 late test simple powerful library design replacement glib focus small light qlib similar range single library public safe real time library clause game program engine provide game program game engine pure modify version quake2 engine gnu quake3 engine free last gnu portable lightweight plugin base drive orient game engine quake engine gnu quake2 engine gnu engine design fps game gnu gpl3 resource library sort useful game program cross platform video game development multimedia library fast lightweight game physic library bind alternative opengl utility toolkit allow creation management window opengl context multi platform library create window opengl context cross platform audio library wide variety output gnu gpl2 reference frontend gnu sdl cross platform development library design provide low level access audio keyboard mouse joystick graphic hardware via opengl sdl2 current version simple easy library videogames program generic program small lightweight common algorithm structure graphic graphic library gnu gpu graphic utility api library base opengl gnu library read write gif image tiny library image utility deal height map normal map distance field like ascii renderer terminal base interface small portable library high quality conversion rgba image bite index colour image fast library read write jpeg various official png reference library libpng function library rasterize vector graphic gnu gpl3 improve jpeg encoder clause graphic apis industry adopt graphic api resource opengl industry adopt graphic api mobile embed device opengl graphic compute standard industry require system safety certification explicit graphic compute api modern cross platform development resource graphical user interface specifically widget cross platform widget toolkit gnu another cross platform widget toolkit basic widget toolkit part tcl tcl xforms widget toolkit design xwindow system gnu single header ansi gui library public simple portable inflexible gui library small library user interface xml hash hash relate library cryptographic fast hashtable apache extremely fast non cryptographic hash algorithm clause multi platform crc library murmur hash public fast positive hash library image process modern computer vision library clause json library encode decode manipulate json minimalistic json parser library work json lightweight json library write advance json manipulation library support json schema lgpl fast json stream parser library reference tutorial list resource program general something useful relate program online reference sei cert cod faq comp lang frequently ask comparison posix standard library gnu reference robert pike note program draft ansi draft c99 language standard draft ansi c89 draft c99 draft c11 beginner tutorial program introduction fun posix thread program little date still valid useful gnu program online pdf templating intermediate gdb trick c99 dive concurrency try mutexes introduction video openmp openmp3 standard memcpy mpi unknown feature trick lose art structure programmer know every programmer know undefined advance advance metaprogramming quick tutorial implement debug malloc free calloc bite twiddle know implement smart pointer program inline function metaprogramming custom control structure dark corner write efficient every programmer know self study course program language certify associate preparation physical reference reference manual full reference book c99 pocket concise reference book c99 program language original book creator beginner primer plus complete tutorial program c11 program modern excellent book basic head first head first style book intermediate 21st century good second program book understand depth resource pointer book zeromq advance expert program deep interest depth entertain look innards macro suite macro implement advance feature like default function argument scope bind resource etc require c99 public memory allocator memory allocator various system platform general purpose malloc emphasize fragmentation avoidance scalable concurrency support commonly production system doug lea malloc useful academic research purpose public fast scalable memory efficient malloc linux window mac solaris gnu extremely fast portable thread cache malloc write gnu cross platform lock free memory allocator public multimedia complete cross platform solution record convert stream audio video gnu lgpl2 gnu gpl2 late framework audio visual medium gnu simple png image decoder encoder require dependency clause gnome http client server library gobject gnu music play library compile waf configure disable cplayer enable libmpv share music player gnu gpl2 library cross platform real time audio input output range back end internet compiler asn specification source high level bind zeromq gnu advance easy asynch capable dns client library utility gnu gpl3 gnu simple authentication security layer common sasl mechanism gnu gpl3 secure communication library implement ssl dtls gnu lgpl2 html5 parse library c99 apache http request response parser library simplify dns program clause client side url transfer library support wide range format curl mail library provide efficient imap smtp pop nntp clause yet another event loop cross platform asynchronous event loop replacement server clause generic security service gnu gpl3 library add basic web server capability application embed device gnu stringprep punycode idna specification gnu gpl3 small library make easy http server part another application gnu lgpl2 sagui cross platform library help develop web server framework gnu friendly mail address validation library experimental scalable high performance http server gnu embed web server gnu portable mqtt client embed system alike base zeromq ssl protocol also include cryptography library dual license openssl license ssleay sip without additional dependency gnu lgplv2 linux packet craft tool c99 ssl protocol design simple fast security priority apache c99 wrapper bsd socket api communication platform design skype killer gnu mini library interact twitter oauth api library simple elegant cross platform mmo client server solution apache asynchronous library optimize http http high performance server library web framework microframework base glib gnu library create simple http server web application apache easy scalable secure web application framework write web apis klone fully feature multiplatform web application development framework duda event drive high performant web service framework write apache numerical library statistical scientific compute gnu automatically tune linear algebra software clause basic linear algebra subprogram set routine provide vector matrix operation blas library routine evaluate cumulative density function variety standard probability distribution also compute parameter cdf give others license give pure math library great variety mathematical function cmake support seek close c89 c90 compliant portability library multidimensional numerical integration gnu fast fourier transform west highly optimize fast fourier transform routine gnu gpl2 fast library number theory library support arithmetic number polynomial power series matrix among others gnu gpl2 gnu linear program kit package design solve large scale linear program mix integer program relate problem gnu gpl3 gnu multple precision arithmetic library library arbitrary precision arithmetic gnu gnu gnu library complex number arithmetic gnu lgpl3 gnu library arbitrary precision float point arithmetic gnu lgpl3 gnu lgpl2 late version gnu portable mathematics library multi precision rational interval arithmetic gnu gpl3 gnu scientific library sophisticate numerical library gnu library create manipulate large graph gnu kiss simple fast fourier transform library clause interface clause computer algebra system number theory include compiler gnu gpl2 suite structure routine scalable parallel solution scientific application partial differential equation library handle various discrete continuous probability density function gnu fast simd optimize mathematical library clause parallel program small library channel construct inter thread communication public concurrency primitive safe memory reclamation mechanism non block structure style concurrency structure concurrency another mpi mpich set pragmas design allow easy parallelization clause message pas interface clause portable non preemptive priority base schedule multiple thread execution gnu gpl3 posix thread library software library solution large sparse eigenvalue problem parallel computer gnu portable small c11 thread api parser parser combinators binary format gnu parser ini yet another ini parser gnu gpl3 yaml parser emitter parser combinator library universal configuration library parser regex people confront problem think know regular expression problem jamie zawinski regexes identical perl clause simple complete regular expression sintax gnu gpl3 super light regular expression library small subset perl regex syntax gnu non backtrack nfa dfa base perl compatible regex engine library clause posix compliant feature full regex library serialization binary serialization format mean compact fast easy apache cap proto serialization protocol serialization protocol avro serialization system apache another serialization protocol netstring encoder decoder public google protocol buff external representation standard serialization check also json json xml xml source collection contain collection small source want something big integrate check framework section perl cpan big collection stuff full list something package manager come bunch library collection common gnu collection library various thing apparently public standard library contain standard library google standard library develop android clause standard library design small possible binary gnu gnu library standard library gnu standard library compatible posix c11 design static link string manipulation good string library clause gnu international component unicode library unicode support icu library manipulate unicode string gnu text conversion library gnu lgpl2 gnu gpl3 iconv simple dynamic string library handle string simple way compatible normal string function available via compressor small text string efficient string compression library clause single header utf8 string function small clean library process utf unicode test simple unit test framework unit test framework gnu mock stub generator unit test framework support mock object apache kiss non intrusive test framework another unit test framework gnu library unit test memory leak detection linux freebsd window minimal unit test framework small full feature unit test framework dependency simple unit test framework text editor extension practically decent programmer text editor support extension make pleasant categorize editor atom lint atom clang lint atom gcc emacs collection emacs development environment tool design provide ide like feature emacs gnu gpl3 modern syntax check either gcc clang back end gnu gpl3 template system template common snippet gnu gpl3 vim syntax check linting fuck want completion engine vim gnu tool list useful program help write debug editor library compiler artistic fast small automatic source formatter support gnu fast memory error detector apache modern dependency manager compile execute script command line also shebang support hash bang bound checker tool verification array bound pointer safety user specify assertion original online service translate declaration english vice versa public graph include dependency project graphviz gnu gpl version due underspecification tool measure complexity source gnu gpl3 source analyzer refactoring browser collection program gnu graphical front end range command line debugger gnu gpl3 gnu project debugger debugger gnu gpl3 rad tool enable quick development gtk gui gnu gnu make standard library collection additional functionality gnu make clause gnu source tag tool work gnu performance analysis tool part gnu binutils gnu gpl3 convert source format text nice highlight gnu help find unecessary inclusion make suggestion fix base llvm clang work format source automatically make easy read also convert style source another gnu gplv3 debugger record non deterministic execution allow deterministic debug fast base cross platform system gnu remove ifdef directive delimit text without touch part clause range dynamic analysis tool include leak checker gnu utility catch category anything fit well anywhere else library work apev2 tag library manipulate binary object part gnu binutils gnu gpl3 framework opencl cross platform object orient framework develop benchmarking project gnu lgpl3 gnu gpl3 project commonmark spec various exception command line option parser another foreign function interface library fast artifical neural library neural gnu library provide graph base intermediate representation optimization assembly generation suitable compiler come front end license gnu simple neural library library random number generation routine gnu gnu gnu band band ipmi gnu gnu perfect hash function generator give list string output gnu gpl3 gnu collection library foreign function interface gnu gpl3 collection utility measure improve performance clause minimal huffman encoder decoder public simple library work tree clause efficient general purpose framework dynamic software update gnu lgpl3 library contain range self balance binary tree gnu gpl3 bson utility library apache library introduce high level program clause portable foreign function interface library pure git gnu gpl2 link cross platform protocol library communicate ithings gnu lgplv2 late gnu gpl2 late platform independent near field communication library gnu deprecate archival purpose eventing framework high scalability high performance system apache colour terminal library gnu gpl3 language base ultra light software platform scalable server side application think node programmer gnu protocol buff library client library dsl state machine compile gnu tiny recursive descent parser compiler evaluation engine simple mathematical expression hash table allow exist structure store hash table easily clause cross platform c99 library get cpu feature runtime apache small low overhead structure log library intend log formware event apache elf object access library gnu portable preprocessor clause generic access usb device userspace library interact alsa dissasembly disassembler framework bsd xml xml crap really excuse xml nasty parse human disaster parse even computer reason horrible crap exist linus torvalds stream orient xml parser standard compliant portable xml parser small xml read write library dependency aside standard library apache
C C++;https://github.com/p-ranav/pprint;highlight single header require mit license quick start simply include pprint hpp good start print create construct stream inherit fundamental type string maybe want string quote simply set complex number enumeration type compile clang llvm visual visual studio xcode gcc pprint print name enum thank stl sequence container pprint support variety stl sequence container include pretty print simple 3x3 matrix compact print pprint also support compact print container simply call enable stl associative container support associative container include pretty print stl container adaptor pprint print container adaptor include print priority queue fix size heterogeneous tuples type safe union optional value class object pprint print class object without overload operator operator available pprint print object user define type print user define type let say want print mesh object first overload operator structs simply call license project available license
C C++;https://github.com/pearu/simple-rpc-cpp;project initiate follow practical problem control experimental equipment via computer manufacture provide software driver sdk write unfortunately window platform often support platform support platform stay year behind order control equipment linux platform instance remote procedure call rpc technique _simple rpc project provide script generate wrapper function rpc server application wrap function could call application local host function execute server application remote host usage word simple name project due follow _rpc technology simple use_ edit exist minimal order remotely call function change name header sufficient adapt application rpc certain function note exist rpc library require rpc specific client application current project aim require minimal modification client application switch call function directly via rpc would straightforward _simplification sufficient practical applications_ function wrap rpc assume simple prototype argument type boost serialization library handle include standard scalar type standard stl collection type define argument reference pointer notice pointer argument treat application program local host scalar pas rpc server program point actual memory location remote host _simplicity restrictions_ instance wrap template function support addition application rpc server host different architecture operate system special care must take ensure exchange local remote host correct instance size standard int type may different local remote host lead possible corruption avoid always scalar type fix byte width instance int32_t uint64_t etc finally care take endian local remote host differ installation project assume availability support might require minor modification project source patch welcome checkout project source see instruction source directory window user setup command prompt verify success execute test pas try project typical project consist part application source contain main function source computational function header correspond prototype source compile link together application program application program main function call computational function output aim main function call computational function actually execute remote host rpc technique send function argument receive function current project _simple rpc provide script simple_rpc construct rpc wrapper function computational function generate correspond rpc source design modification exist source minimal fact typical usage case application source require minor edit modification need rest source header demonstrate illustrate consider follow project consist source example_dot cpp header example_dot hpp application source example_dot_app cpp include example_dot hpp double dot_product const vector double const vector double double sum int size sum return sum ifndef example_dot_hpp_defined define example_dot_hpp_defined include vector namespace std double dot_product const vector double const vector double endif include iostream include example_dot hpp main vector double cout dot_product cout dot_product endl correspond application compile execute order call dot_product via rpc server first generate wrapper cod notice simple_rpc script take header input generate show compile executable program application rpc server next modify application source follow source example_dot cpp header example_dot hpp application source example_dot_app cpp include example_dot hpp double dot_product const vector double const vector double double sum int size sum return sum ifndef example_dot_hpp_defined define example_dot_hpp_defined include vector namespace std double dot_product const vector double const vector double endif include iostream include example_dot rpc hpp ifdef simplerpc namespace simple_rpc example_dot endif main simple_rpc_connect vector double cout dot_product cout dot_product endl application source modify place indicate name header append rpc suffix generate header contain rpc wrapper function function find original header ifdef simplerpc block insert convenience make easy disable ddisable_simple_rpc compile application enable rpc application follow namespace declaration expose rpc wrapper compute_dot function current namespace general rpc wrapper define namespace simple_rpc simple_rpc_connect macro specify rpc server host port number debug level mean debug message show increase number increase verbosity debug level order illustrate connection application rpc server see next application rpc server program must give rpc server local host correspond host general application program must local host rpc server program server host especially host different operate system follow table illustrate process remote host local host example_dot cpp example_dot rpc server cpp example_dot rpc server pthread lboost_system lboost_serialization simple_rpc include dir example_dot rpc cpp example_dot_app cpp example_dot_app rpc pthread lboost_system lboost_serialization simple_rpc include dir notice source cod function must compile remote host application source rpc wrapper source compile local host finally rpc server remote host subsequently application program remote host local host example_dot rpc server rpc server wait connection via port connect rpc server read_scalar size byte rpc server read_vector byte rpc server read_scalar size byte rpc server read_vector byte rpc server write_buffer_list dot_product byte rpc server wait connection via port example_dot_app rpc set_debug_level write_buffer_list set_debug_level debug_level byte dot_product write_buffer_list dot_product byte dot_product read_scalar return_value byte dot_product notice rpc server continuously different application program execute function server work different application program execute server function time server serve first application time execution connection server application decline
C C++;https://github.com/uNetworking/uWebSockets;simple secure closed_lock_with_key optimize security meticulously optimize speed memory footprint websockets fast enough encrypt message quick alternative server even unencrypted cleartext message browse swedish consult contract company deal anything relate websockets development support customer success hesitate send mail something large need advice business inquiry mind figure best party make sure fall common pitfall special thank bitmex bitfinex google coinbase bitwyre appdrag deepstreamhub allow project thrive github since project would possible without beautiful company wrench customizable architecture websockets foundation library implement eventing cryptography different layer every layer multiple control compile composition flag currently event loop integration libuv asio gcd raw epoll kqueue nutshell with_wolfssl with_libuv make utilize wolfssl libuv with_openssl make utilize openssl native kernel see socket date list flag detail explanation handshake permissively license intellectual property right reserve explicit notice give source license apache license permissive osi approve license limitation modify fork nothing license source make available another product name uncertain please ask assume
C C++;https://github.com/msteinbeck/tinyspline;tinyspline language grade tinyspline small yet powerful library interpolate transform query arbitrary nurbs spline bezier curve core library write ansi c89 wrapper object orient program base wrapper auto generate bind java javascript lua octave php ruby provide license mit license see license source distribution feature object orient program spline degree dimensionality spline interpolation cubic natural centripetal catmull rom evaluation knot sample multiple knot component find give knot insertion refinement bezier curve decomposition derivative degree elevation computation rotation minimize frame morph serialization json vector math installation pre binary release page addition follow package manager support conan nuget luarocks lua maven java pypi macos may need change path _tinysplinepython via install_name_tool compile source see get start variety unit test find test test subdirectory subdirectory contain least interface target language follow list show image get start get_started png theoretical background good start point spline explain boor algorithm give pseudo provide good overview nurbs mathematical background useful want nurbs tinyspline
C C++;https://github.com/netcan/config-loader;config loader readme_cn config loader static reflection framework write parse configuration native structure follow characteristic simple interface user need define structure provide correspond configuration framework meta program technology generate load interface design conform open close principle extend structure without modify framework currently support xml json yaml format configuration variety method flexibly compose lightweight easy integrate line support nest structure stl container complete test case support native structure config stringify structure future plan provide additional version quickly start firstly define_schema macro define structure provide configuration loadxml2obj loadjson2obj loadyaml2obj interface xml configuration yaml configuration notice current framework depend follow library tinyxml2 parse xml configuration jsoncpp parse json configuration yamlcpp parse yaml configuration future library may enable cmake option avoid unnecessary dependency actual xml rely xml parse library framework require configuration provide standardize format take xml field name require correspond xml tag name value correspond text content xml map structure tag attribute name key name semantics current error
C C++;https://github.com/trilinos/Trilinos;trilinos trilinos mail coverity scan trilinos project effort develop algorithm enable technology within object orient software framework solution large scale complex multi physic engineer scientific problem unique design feature trilinos focus package documentation get start general quick configure hint trilinos rst trilinos configure test reference help particular package see website accompany documentation package link find right side page website package license trilinos license per package basis package bsd license publish gpl detail take documentation package contribute appreciate willingness contribute trilinos project please familiarize contribute
C C++;https://github.com/intel/hyperscan;hyperscan hyperscan high performance multiple regex match library follow regular expression syntax commonly libpcre library standalone library api hyperscan hybrid automaton technique allow simultaneous match large number regular expression match regular expression across stream hyperscan typically dpi library stack documentation information hyperscan library api available developer reference license hyperscan license bsd license see license project repository versioning master branch github always contain recent release hyperscan version release master test release user rather developer version development towards next release take place develop branch get involve official homepage hyperscan question comment encourage join mail bug send email list create issue github wish contact hyperscan team intel directly without post publicly mail list send email hyperscan intel com mailto hyperscan intel com
C C++;https://github.com/marzer/tomlplusplus;banner doc image banner_small png homepage doc image badge svg cpp_compilers doc image badge svg cpp_compilers toml doc image badge toml svg mit license doc image badge license mit svg license mention awesome toml homepage readme fine good library feature header support late toml release plus optional support unreleased toml language feature plus feature available experimental support char8_t string proper utf handle incl bom work without exception require rtti support serialize json yaml test clang gcc msvc vs2019 vs2022 test x64 x86 arm basic usage _the follow favour brevity would prefer full api documentation lot specific snippet instead visit project homepage give toml configuration toml contain follow read easy toml find directory plenty part api documentation add toml project toml come flavour single header regular api single header flavour drop toml hpp wherever like source tree step regular flavour add tomlplusplus include include path include conan add tomlplusplus conanfile add tomlpp package json5 vcpkg cmake fetchcontent environment package manager toml fairly new project speed available package integration option ecosystem also cmake novice good bad integration option miss assure fully support add welcome pull request contribute dependency want consume toml regular library dependency worry test relate dependency aware work library though see contribute information configuration number configurable option expose form preprocessor define likely need mess set include toml option type description default toml_assert expr function macro set assert function library assert toml_config_header string literal include give header rest library undefined toml_enable_formatters boolean enable formatters set need improve compile time binary size toml_enable_parser boolean enable parser set need improve compile time binary size toml_enable_unreleased_features boolean enable support unreleased toml language feature toml_enable_windows_compat boolean enable support transparent conversion wide narrow string window toml_exceptions boolean set whether library exception per compiler setting toml_exported_class define api export annotation add class undefined toml_exported_member_function define api export annotation add non static class member function undefined toml_exported_free_function define api export annotation add free function undefined toml_exported_static_function define api export annotation add static function undefined toml_header_only boolean disable explicitly control toml compile part library toml_implementation define define enable compilation library toml_header_only undefined toml_optional_type type name override optional type library need something good std optional undefined toml_small_float_type type name codebase custom small float type half precision tell toml undefined toml_small_int_type type name codebase custom small integer type bit tell toml undefined number abi implication library inline namespaces prevent accidentally link incompatible combination together toml language support give time library aim support whatever recently release version toml opt support number unreleased feature toml master sane cherry pick toml issue list discussion strongly indicate inclusion near future release library advertise recent number language version fully support via preprocessor define toml_lang_major toml_lang_minor toml_lang_patch unreleased language feature allow newlines trail comma inline table allow hex float point value support key name local time day format support oppose relax bare key restriction allow additional unicode character include escape sequence shorthand u001b include xhh escape sequence define toml_enable_unreleased_features enable feature see configuration configuration toml feature support include allow lead exponent part float control character permit comment allow raw tab inside string make array heterogeneous allow comment comma array toml feature support contribute contribution welcome either report issue submit pull request wish submit pull request please see contribute detail need get license attribution toml license term mit license see license utf decode perform state machine base bjoern hoehrmann flexible economical utf decoder thank make window include bypass report bug help design new feature report bug create wrapper add cmake meson support help design new feature report whole bunch bug create awesome generate api doc report bunch bug help design new feature report bug add toml conancenter fix typo help design new feature fix bug add additional visual studio debugger native visualizer add natvis cmake script fix bug gcc meson config issue help fix number parser bug report bug report bug make tweak meson add compile_library option add vcpkg support report bunch bug fix bug value_or conversion add support installation meson contact bug report feature request please consider issue system github anything else though welcome reach via mean order likely response time twitter email mark gillard outlook com mailto mark gillard outlook com facebook linkedin api documentation homepage unreleased toml language feature unreleased language feature recently release version number version char8_t toml toml master toml issue list contribute contribute license license flexible economical utf decoder cpp_compilers report issue feature request issue something good std optional
C C++;https://github.com/slint-ui/slint;slint logo slint logo full light svg light mode slint logo slint logo full dark svg dark mode formerly know reuse slint toolkit efficiently develop fluid graphical user interface display embed device desktop application support multiple program language rust javascript design goal lightweight fit kilobyte ram require little process power straightforward programmer designer feel productive able enjoy design development process apis consistent easy intuitive matter target language high quality documentation describe apis teach concept native support many different target platform embed device desktop include mobile web user developer feel home platform look feel experience match user expectation native application current status slint active development state development depend kind application embed ready slint already happily customer embed device arm processor linux also look support microcontrollers desktop progress slint usable window linux mac plan desktop support subsequent release reach level integration aim mobile android todo start support mobile platform yet intention future web focus embed desktop application intend compete web space primary platform say slint compile webassembly demo web browser web support currently limit demo purpose stay date follow twitter keep eye weekly status documentation refer readme language directory api sub folder api cpp tutorial get start rust api slint tutorial get start javascript nodejs api node folder contain demo doc folder contain instruction doc internal developer doc doc development demo webassembly simulation click screenshots webassembly simulation printer demo slide puzzle todo widget gallery screenshot printer printer screenshot slide slide screenshot todo todo screenshot gallery gallery desktop native widget window macos linux screenshot gallery gallery screenshot gallery gallery screenshot gallery gallery slint markup language slint come markup language specifically design user interface language provide powerful way describe graphical element placement flow different state familiar syntax describe hierarchy element property bind obligatory hello world check language reference doc langref detail architecture application compose business logic write rust javascript slint user interface design markup compile native architecture compiler slint compile ahead time expression slint pure function compiler optimize compiler could choose inline property remove constant unchanged future hope improve render time low end device pre process image text compiler could determine text image element always top another image location consequently element could render ahead time single element thus cut render time compiler typical compiler phase lexing parse optimization finally generation provide different back end generation target language generator produce header rust generator produce rust interpreter dynamic language also include runtime runtime library consist engine support property declare slint language component element item property lay single memory region reduce memory allocation render backends style configurable compile time current back end backend opengl render backend qstyle achieve native look widget future could also qpainter tool tool help development slint lsp server tool lsp add feature like auto complete live preview slint many editor bundle visual studio extension editor vscode available market place slint viewer tool viewer tool display slint auto reload argument make easy preview work lsp preview possible online try slint syntax without instal anything source tool online_editor updater tool syntax_updater convert slint previous version new version experimental figma importer tool figma_import please check editor readme editor readme tip configure favorite editor work well slint make slint list open source project slint contact open pull request add cargo graphical frontend cargo gui base tool sort categorize image musical live performance application daw like timeline interface cross platform sequencer internally game boy emulator synthesize sound project cross platform game launcher make project simulator mastermind game cod rust contribution welcome contribution form bug report feedback see rfc issue feel free chime contribution guideline see contribute contribute dual license require contributor accept cla license software provide dual license scheme gnu gplv3 open source license ideal free software commercial slint license commercial license free help promote slint check ambassador see also license faq faq license frequently ask question please see separate faq faq olivier simon start open source journey kde project popular open source desktop environment linux late meet work together small company norway call trolltech toolkit gain valuable experience api design cross platform software development user interface component simon continue company lead developer maintainer qtqml engine olivier found software consult company year late base berlin start new project slint aim make develop user interface fun everyone javascript rust developer way designer contact feel free join github general chat question github report public suggestion bug chat mattermost welcome listen ask question course also tweet contact privately via email info slint com mailto info slint com
C C++;https://github.com/ETLCPP/etl;embed template library etl release github release late codacy motivation great language embed application template powerful aspect standard library offer great deal well test functionality part standard library fit well deterministic behaviour limit resource requirement limitation usually preclude dynamically allocate memory container open end size need template library user declare size maximum size object upfront embed compiler currently support standard beyond therefore exclude programmer enhance feature late library etl attempt achieve summary etl design completely replace stl complement design objective cover area create set container size maximum size determine compile time container direct equivalent supply stl compatible implement many addition possible add useful component present standard library embed template library design low resource embed application contain set container algorithm utility emulate part stl dynamic memory allocation library make heap container fix capacity allow memory allocation determine compile time library intend compiler support main feature cross platform library specific processor type dynamic memory allocation rtti require little virtual function absolutely necessary require functionality set fix capacity container array bitset deque forward_list list queue stack vector map set etc storage container type allocate contiguous block extremely cache friendly templated compile time constant templated design pattern base class visitor observer reverse engineer 0x11 feature type trait algorithm container etc type safe enumeration type safe typedefs bite crc calculation checksum hash function variant type store many type type safe interface choice assert exception error handler check error unit test currently test vs2019 gcc gcc clang many utility template support easy read document source free email support help port library work different platform compiler would gratefully receive especially interest people keil iar green hill composer etc bare metal rtos dsps see date information instal library find setup step cmake way library drop somewhere project directory make library available add_subdirectory etl library git submodule may require additional configuration proper etl version resolution allow lookup git folder outside library root directory want library cmake perform follow step linux super user right might require library might necessary add sudo last command library instal library replace desire major version alternatively replace version base git tag arduino library content repo available library arduino ide search embed template library ide library manager arduino library repository available see detail
C C++;https://github.com/mattgodbolt/seasocks;seasocks tiny embeddable http websocket server github conancenter feature simple api serve static content disk api websocket server simple command line binary quick serve static support new hybi hybi websockets well old hixie style support linux window stuff nearly configurable apache nginx jetty etc provide limit support custom content generation servlets design websocket base control probably work system patch support system would welcome priority get start check wiki see
C C++;https://github.com/cpgf/cpgf;cpgf library cpgf library cross platform library callback reflection serialization script bind write standard require preprocessor tool documentation documentation doc index official website version library cpgf reflection library add reflection feature cpgf serialization library save object persistent storage load back base reflection library cpgf script bind script bind engine bind lua google javascript mozilla spidermonkey javascript base reflection library cpgf callback callback library implement signal slot callback primary library library cpgf meta collection library meta support meta stl opengl openglu openglut box2d physical engine sfml graphic multimedia engine irrlicht render engine cpgf meta generator tool tool writen java automatically generate meta doxygen xml cpgf tweening library implement ease animation license apache license version may obtain copy license author owner wang beijing china library though documentation official website far good may understand developer like cod much document fast way get start library read sample folder sample sample cover feature good kick want read sample read folder test unit test much difficult read lot macro however cover much function sample sister project cpgf game engine cpgf author game engine cpgf callback tweening script bind extensively library project set add include path point cpgf include link source link library project class function apis namespace cpgf link source library easy way link cpp source src sub folder however script also provide static library library library cmake system makefile provide wrap cmake library open command line terminal folder library require exception rtti enable platform nmake mingw linux vc05 vc08 vc10 cb_mingw cb_nmake cb_linux xcode detail platform information make without parameter see help msvc nmake instead make lua bind must change variable has_lua lua_dir config txt point source lua google javascript bind must change variable has_v8 v8_dir config txt point source bind must change variable has_python python_dir config txt point source mozilla spidermonkey bind must change variable has_spidermonkey spidermonkey_dir config txt point source mozilla spidermonkey unit test sample fee second parameter thetarget target lib library default target omit target tutorial tutorial target test unit test target samplereflection reflection sample application target sampleserialization serialization sample application target samplelua lua bind sample application target sampleopengl opengl bind sample application target samplebox2d box2d bind sample application target samplesfml sfml bind sample application target sampleirrlicht irrlicht bind sample application compatibility test compiler linux ubuntu gcc linux ubuntu llvm clang case base old version since version compiler require gcc test window microsoft visual express microsoft visual professional window mingw gcc window embarcadero builder linux ubuntu virtualbox gcc linux ubuntu virtualbox intel compiler composer mac gcc require third party library none major library lua bind lua library require google bind library require bind library require mozilla spidermonkey mozilla spidermonkey require want unit test unittest require usually need contribute library like library want contribute desire work help documentation native english speaker also like write documentation test library compiler platform cpgf mean original cpgf mean cross platform game framework intend game framework work smart phone late author decide add fun non game feature library library neither game framework cross platform library
C C++;https://github.com/orangeduck/Corange;corange game engine version write pure sdl opengl corange library take quick look thing look warn thing show previous version may remain version compile compile window need mingw able make usual need instal sdl sdl_mixer sdl_net make compile linux need sdl2 make sudo apt get libsdl2 dev sudo apt get libsdl2 mixer dev sudo apt get libsdl2 net dev make overview small simple powerful cross platform clean easy asset entity management modern defer renderer demo graphic programmer trade apology demo graphical apps love __renderers__ show various renderers shaders shadow animation etc __metaballs__ opencl opengl interop metaball render __noise__ feedback base noise pattern screen shader generate tileable perlin noise software __platformer__ basic platforming game fairly well comment __sea__ render sea like surface ship collision detection __scotland__ demonstrate terrain system __tessellation__ demo show tessellation shaders opengl faq __how pronounce rhyme purple __why plenty engine good pure game engine hand much rare corange provide outlet practice skill course link still program game executable __what stuff platform try sort technique effect feature box plug play developer knowledge able utilize write wip rough around edge defer render render text render multiple light post effect ssao shadow map color correction skeletal animation inverse kinematics collision detection opencl support asset entity management terrain loader include wav bmp smd math geometry __can stuff certainly though corange provide renderer write believe make generalize renderer exceedingly complicate optimise different sprite tile set dynamic object sort effect good write render application specific __can contact something yes contact theorangeduck com contribute still mainly personal project lot bug unfinished feature messy bit engine heavily wip subject sweep change really viable without also part project development communication rather full game engine like unity corange framework give access feature level xna big backlog work progress change need push repository get reasonable point interest please contact say great excuse practise much welcome help project appeal couple quick thing might help get start first take look demo give brief overview corange platformer demo probably comment real documentation first port call header second minimal comment pretty clear time corange hide anything opengl sdl call namespace get access basic corange_init corange_finish function fairly short even possible call component want structs typedefed without pointer reason personal choice also quite type pas value stack vector matrix sphere box want notion get confuse important part engine asset entity manager basically let access store asset texture object system entity light camera engine object element clean memory destruction let get pointer part corange mangle namespace pretty badly take name error warn vec2 image general purpose library still try decouple stuff possible extract certain need
C C++;https://github.com/cameron314/readerwriterqueue;single producer single consumer lock free queue mini repository lock free queue design scratch support thread case consume produce thread switch role though could queue completely single thread wish would sort defeat purpose note need general purpose multi producer multi consumer lock free queue mpmc repository also include circular buff spsc queue circular support block enqueue well dequeue feature blaze fast benchmark compatible support move object instead make copy fully generic templated container type like std queue never need allocate memory element save hassle write lock free memory manager hold element queue allocate memory front contiguous block provide try_enqueue method guarantee never allocate memory queue start initial capacity also provide enqueue method dynamically grow size queue need also provide try_emplace emplace convenience method block version wait_dequeue completely wait free compare swap loop enqueue dequeue always count memory allocation x86 memory barrier compile ops mean enqueue dequeue simple series load store branch simply drop readerwriterqueue readerwritercircularbuffer atomicops source include modern compiler require msvc2010 gcc icc compliant compiler work note gcc really need gcc bug gcc46bug prevent atomic fence primitive work correctly block version exact api addition wait_dequeue wait_dequeue_timed method note wait_dequeue block indefinitely queue empty mean care must take call wait_dequeue sure another element come along eventually queue static lifetime destroy queue thread wait invoke undefined behaviour block circular buff fix number slot otherwise quite similar cmake target project project part exist cmake project easy cmakelists txt main cpp instal system directory alternative include source project directly cmake library system include directory include source disclaimer queue platform align integer pointer access atomic fortunately include modern processor x86 x86 arm powerpc dec alpha processor weak memory order note test x86 someone access processor would love test anything x86 base info see license license license simplify bsd blog post blog introduce context lead may interest curious lock free program blog license license benchmark gcc46bug mpmc circular readerwritercircularbuffer
C C++;https://github.com/nsf/termbox;important library long maintain pretty small big project rely maintain look fork look alternative good avoid terminal never thank ever contribute termbox termbox library provide minimalistic api allow programmer write text base user interface base simple abstraction main idea view terminal table fix size cell input stream structure message would fair say inspire window console api abstraction perfect may create problem certain area sensitive copy paste wide character mostly chinese japanese korean cjk character come copy paste notion cell really compatible idea text cjk often require cell display nicely despite mention flaw simple bring benefit form simplicity kiss principle important point realize cli command line interface really thing termbox aim rather pseudo graphical user interface installation termbox come waf base script order configure follow default termbox header share static library want share library static library alone follow command order module follow command root via sudo get start termbox interface consist function see src termbox header full detail link want add termbox project send pull request drop note via email find email language bind php rust common lisp swift crystal julia haskell nim elixir ada newlisp pure termbox application small flexible terminal base text editor framework terminal application base elm architecture simple manager unix like system bug question report bug issue tracker send rant question smile face gmail com change properly include changelog tag version commit mess tag describe changelog tag commit commit mark include changelog change minor release ncurses compatibility fix see api tb_width tb_height guarantee negative termbox initialize api output mode switch possible add color grayscale color mode api good tb_blit function thank gunnar zotl api new tb_cell_buffer function direct back buff access api add new init function variant allow arbitrary descriptor terminal improvement input handle call tb_shutdown twice detect abort discourage mouse event handle port termbox paint demo port termbox demonstrate mouse handle capability bug fix documentation remove directory people generally know termbox look remove old terminfo relate script backport new termbox remove cmake make base script waf add simple terminfo database parser termbox prefer terminfo database find otherwise still fallback database popular terminal internal cleanup refactorings important change termbox leak meaningless export symbol like key funcs tb_ prefix export api remove unsigned ints plain ints instead api rename utf function utf8_ tb_utf8_ api tb_default equal mean attribute alones assume default color api add tb_reverse api add tb_input_current move module directory update due change termbox library
C C++;https://github.com/treefrogframework/treefrog-framework;small powerful efficient docker treefrog framework high speed full stack web application framework base support http websocket protocol web application fast lightweight program language application development provide map system template system mvc architecture aim achieve high productivity policy convention configuration feature high performance highly optimize application server engine map conceal complex troublesome database access template system erb like template engine adopt support many mysql postgresql odbc sqlite oracle db2 interbase mongodb redis websocket support provide full duplex communication channel generator generate scaffold makefiles automatically support various response type json xml cbor cross platform window macos linux etc write compile anywhere new bsd license requirement treefrog qmake system web site release document get additional information api reference forum discussion group treefrog framework docker image mongodb communication treefrog framework 10gen support driver communicate mongodb server source driver include package see readme also
C C++;https://github.com/libffi/libffi;status libffi release june check libffi web page update libffi compiler high level language generate follow certain convention convention necessary part separate compilation work convention call convention call convention essentially set assumption make compiler function argument find entry function call convention also specify return value function find program may know time compilation argument pas function instance interpreter may tell time number type argument call give function libffi program provide bridge interpreter program compile libffi library provide portable high level program interface various call convention allow programmer call function specify call interface description time ffi stand foreign function interface foreign function interface popular name interface allow write language call write another language libffi library really provide low machine dependent layer fully feature foreign function interface layer must exist libffi handle type conversion value pas language support platform libffi port many different platform time release follow basic configuration test architecture operate system compiler aarch64 arm64 clang aarch64 linux gcc aarch64 window msvc alpha linux gcc alpha tru64 gcc arc linux gcc arm linux gcc arm gcc arm window msvc avr32 linux gcc blackfin uclinux gcc csky linux gcc hppa hpux gcc kvx linux gcc linux gcc m68k freemint gcc m68k linux gcc m68k rtems gcc m88k openbsd mvme88k gcc meta linux gcc microblaze linux gcc mips irix gcc mips linux gcc mips rtems gcc mips64 linux gcc moxie bare metal gcc nios linux gcc openrisc linux gcc powerpc bite aix ibm powerpc bite aix ibm powerpc amiga gcc powerpc linux gcc powerpc mac osx gcc powerpc freebsd gcc powerpc bite freebsd gcc powerpc bite linux elfv1 gcc powerpc bite linux elfv2 gcc risc bite linux gcc risc bite linux gcc s390 linux gcc s390x linux gcc sparc linux gcc sparc solaris gcc sparc solaris oracle solaris studio sparc64 linux gcc sparc64 freebsd gcc sparc64 solaris oracle solaris studio tile tilepro linux gcc vax openbsd vax gcc x86 freebsd gcc x86 gnu hurd gcc x86 interix gcc x86 kfreebsd gcc x86 linux gcc x86 openbsd gcc x86 gcc x86 solaris gcc x86 solaris oracle solaris studio x86 window cygwin gcc x86 window mingw gcc x86 freebsd gcc x86 linux gcc x86 linux x32 gcc x86 openbsd gcc x86 solaris oracle solaris studio x86 window cygwin gcc x86 window mingw gcc x86 mac osx gcc xtensa linux gcc please send additional platform test libffi discus sourceware org instal libffi first must configure distribution particular system directory wish libffi configure program find root directory libffi source distribution note libffi require c99 compatible compiler libffi directly git host source configure exist yet autogen first require autoconf automake libtool may want tell configure libffi library header prefix configure switch libffi usr local default want enable extra time debug check enable debug configure switch useful program die mysteriously libffi another useful configure switch enable purify safety add extra suppress certain warn purify libffi switch purify slow library want documentation disable doc configure switch also possible libffi window platform microsoft visual compiler case msvcc wrapper script configuration like path configure path msvcc cxx path msvcc link cpp nologo cppflags dffi_building_dll bite window path msvcc m64 cxx path msvcc m64 may also need specify appropriately also possible libffi window platform llvm project clang compiler like path configure path msvcc clang cxx path msvcc clang link cpp clang msvc mingw environment may need remove line configure set fix_srcfile_path cygpath command cygpath present mingw require mingw style path static library arm64 msvc visual studio solution msvc_build folder aarch64 ffi_staticlib sln require header aarch64 aarch64_include sparc solaris require gnu assembler linker point environment variable tool prior configuration libffi xcodeproj xcode project available configure many option configure help see configure finish type make note must gnu make ftp gnu make ftp gnu org pub gnu make ensure libffi work advertise type make check require dejagnu instal library header type make history see git log detail tbd fix x32 static trampoline jun add static trampoline support linux x86_64 arm64 add support alibaba csky architecture add support kalray kvx architecture add support intel control flow enforcement technology cet add support arm pointer authentication fix bite ppc regression fix mips soft float problem enable tmpdir override libffi_tmpdir environment variable enable compatibility msvc runtime stack check reject float small integer argument ffi_prep_cif_var caller must promote type nov add risc support new api support closure add ieee754 binary128 long double support bite power default microsoft bite long double abi visual gnu compiler bit memory ffi_gnuw64 abi add window arm64 woa support add window bite arm support raw java gcj api deprecate add pre pdf documentation source distribution many new test case bug fix nov fix non aarch64 target nov add c99 complex type support currently support s390 add support pascal register call convention x86 window linux add openrisc cygwin support bug fix may add aarch64 arm64 support add nios support add m88k dec vax support add support stdcall thiscall fastcall non window bite x86 target linux various android mips n32 x86 freebsd ultrasparc iii fix make testsuite robust eliminate several spurious failure respect cxx environment variable archive manually maintain changelog favor git log mar add meta support add miss moxie bit fix stack alignment bug bite x86 fix m68000 target fix soft float power target fix dir location platform gcc solaris fix cygwin regression feb add moxie support add aarch64 support add blackfin support add tile tilepro support add microblaze support add xtensa support add support pax enable kernel mprotect add support native vendor compiler solaris aix work around llvm gcc interoperability issue x86_64 apr lot fix add support variadic function ffi_prep_cif_var add linux x32 support add thiscall fastcall msvc cdecl support window add amiga new macos support add m68k freemint support integration xcode tool fix octeon mc68881 support fix pessimizations aug add support apple add support arm vfp abi add rtems support mips m68k fix instruction cache clear problem arm sparc fix n64 mips sgi irix6 enable microsoft compiler enable x86 oracle solaris compiler fix support call compile oracle sparc solaris compiler testsuite fix tru64 unix additional platform support dec add avr32 win64 port add arm softfp support many fix aix solaris bsd several powerpc x86 bug fix dll window dec add bsd beos linux support nov fix ppc freebsd thank andreas tobler jul fix closure mark sh64 stack non executable thank kaz kojima apr fix libffi fix define arm icedtea user fix x86 closure bug feb fix x86 openbsd configury feb enable x86 openbsd thank thomas heller x86 freebsd thank bjorn konig andreas tobler clean test instruction readme feb improve x86 freebsd support thank bjorn konig feb fix instruction cache flush bug mips thank david daney feb many change mostly thank gcc project cygnus solution red hat year oct raffaele sena produce arm port oct fix x86 long double long long return support m68k bug fix andreas schwab patch assembler compatibility alpha richard henderson apr bug fix mips configuration change feb bug fix m68k port andreas schwab powerpc port geoffrey keating various bug x86 sparc mips bug fix feb richard henderson produce alpha port dec fix n32 abi bug new libtool auto support may libtool generate share static library fix minor portability problem report rus mcmanus dec add enable purify safety keep purify complain certain low level sparc fix call function args linux x86 fix nov add miss ffi_type_void need support void return type fix test case non mips machine cygnus support cygnus solution oct add note gnu make oct add configuration fix non gnu compiler oct add enable debug configure switch clean base lclint feedback ffi_mips always instal many configuration fix fix ffitest sparc oct fix n32 problem many clean oct gordon irlam rewrite bug fix oct gordon irlam improve sparc port oct interface change base feedback oct sparc port complete modulo struct pas bug oct pas struct args return struct value work architecture call convention expand test oct add sgi n32 support fix bug o32 linux support add make test oct fix float pas bug mips version restructure cleanly sgi tool oct first release public announcement author credit libffi originally write anthony green developer gnu compiler collection project make innumerable valuable contribution see changelog detail idea behind libffi inspire gianni mariani free gencall library silicon graphic machine closure mechanism design implement kresten krab thorup major processor architecture port contribute follow developer aarch64 marcus shawcroft jam greenhalgh alpha richard henderson arc hacker synopsis arm raffaele sena avr32 bradley smith blackfin alexandre keunecke mendonca cris simon posnjak han peter nilsson csky jun zhang wenmeng frv anthony green ia64 han boehm kvx yann sionneau m32r kazuhiro inaoka m68k andreas schwab m88k miod vallat metag hacker imagination technology microblaze nathan rossi mips anthony green casey marshall mips64 david daney moxie anthony green nios sandra loosemore openrisc sebastian macke randolph chung dave anglin andreas tobler powerpc geoffrey keating andreas tobler david edelsohn john hornkvist powerpc64 jakub jelinek riscv michael knyszek andrew waterman stef rear s390 gerhard tonn ulrich weigand kaz kojima sh64 kaz kojima sparc anthony green gordon irlam tile tilepro walter lee vax miod vallat x86 anthony green jon beniston x86 thorsen xtensa chris zankel jesper skov andrew haley fair share step track bug thank also tom tromey bug fix documentation configuration help thank jim blandy provide useful feedback libffi interface andreas tobler tremendous amount work testsuite alex oliva solve executable page problem selinux list almost certainly incomplete inaccurate happy make correction addition upon request problem find bug please issue issue tracker author reach green moxielogic com subscribe unsubscribe mail list visit
C C++;https://github.com/rjpcomputing/ticpp;ticpp ticpp short official name tinyxml completely new interface many strength template exception much good error handle also fully document doxygen really cool version let interface tiny exact way choose new ticpp class need define tixml_use_ticpp test mingw gcc linux gnu gcc documentation
