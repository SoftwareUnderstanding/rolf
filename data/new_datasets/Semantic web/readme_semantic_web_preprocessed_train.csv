Label;Repo;Text
Semantic web;https://github.com/lukostaz/prissma;prissma context aware adaptation link presentation level framework link adaptation java render engine select appropriate presentation rdf triple accord mobile prissma compatible fresnel base graph edit distance algorithm find optimal error tolerant subgraph isomorphism rdf context graph prissma optimize android platform regular java project well installation prissma java library optimize android application minimum requirement java android late prissma release add path make sure config property include path contain parameter value need search algorithm similarity threshold cost edit distance operation source check source git clone prissma depend library available maven central simmetrics ws4j provide libs local maven repository prissma mvn dfile libs simmetrics jar dgroupid simmetrics dartifactid simmetrics dversion dpackaging jar mvn dfile libs ws4j jar dgroupid ws4j dartifactid ws4j dversion dpackaging jar prissma depend xerces impl android optimize version available available copy library available libs add local maven repository mvn dfile libs xercesimpl repack jar dgroupid xerces dartifactid xercesimpl repack dversion dpackaging jar library local maven repository mvn add follow dependency pom xml inria wimmics prissma design prism prism context aware presentation metadata link visualization base fresnel prissma prism create manually prissma prism style dbpedia museum user walk paris first define prism general information add fresnel lens add fresnel style metadata finally define prissma context entity prissma save prism locally store decomposition structure explain api overview make sure config property include path contain parameter value need search algorithm similarity threshold cost edit distance operation step decompose prism step search algorithm step render resource publication costabello error tolerant rdf subgraph match adaptive presentation link 11th extend semantic web conference eswc costabello prissma towards mobile adaptive presentation web iswc doctoral consortium bonn germany licence copyright luca costabello program free software redistribute modify term gnu general public license publish free software foundation either version license option late version program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail receive copy gnu general public license along program see contact detail prissma project contact luca
Semantic web;https://github.com/ontola/rdfdev-js;rdf dev github read collection library ease javascript rdf development open source mit license package iri read npm npm bundle lot iri uri manipulation happen work link package provide utility function action read npm npm bundle utility work link link middleware collection read npm npm bundle utility read manipulate different kind rdf collection rdf seq rdf list delta read npm npm bundle utility quickly create link rdf native way express process change state prop type read npm npm bundle react declaration rdf structure see also follow library package ontology core github npm npm bundle make work rdf breeze type rdf include quad literal resource factory create rdf access time set datafactory static context typeguards check something rdf object link lib github npm npm bundle fetch store write render link link redux github npm npm bundle tool need quickly create interactive web apps consume rdf need help link package bring production grade link solution help advice custom web service
Semantic web;https://github.com/seebi/rdf.sh;rdf multi tool script semantic web job command line content installation manually debian ubuntu brew docker installation configuration configuration usage feature usage feature overview overview namespace lookup nslookup resource description description sparql graph store protocol gsp link platform client ldp webid request webid syntax highlight highlight resource list list resource inspection debug inspection format rdf turtle turtleize prefix distribution project prefix autocompletion resource history autocompletion installation manually rdf single bash script installation trivial copy link path sudo path rdf usr local bin rdf debian ubuntu debian package release root follow command dpkg probably fail due miss dependency apt get dependency well rdf currently zsh hard dependency since zsh completion need brew base rdf provide recipe docker base rdf provide docker image command dependency require tool currently rasqal utils raptor utils raptor2 utils suggest tool without autocompletion available repository readme _rdf zsh autocompletion changelog version change log doap ttl doap description rdf rdf rdf man page rdf script screenshot png screeny rdf action config copy rdf home cache rdf resource history history process resource home cache rdf prefix cache cache fetch namespaces home config rdf prefix local locally define prefix namespaces home config rdf config rdf follow xdg base directory order allow different cache config directory usage feature overview rdf currently provide subcommands color get html color resource uri count count distinct triple delete delete exist link resource via ldp desc output description give resource give format default turtle diff diff triple rdf edit edit content exist link resource via ldp get put get fetch url rdf stdout try accept header get ntriples curl rdf transform ntriples gsp delete delete graph via sparql graph store http protocol gsp get get graph via sparql graph store http protocol gsp put delete create graph via sparql graph store http protocol head curl header accept rdf headn curl header help output manpage rdf list list resource start give uri curl namespace prefix nscollect collect prefix declaration list ttl nsdist distribute prefix declaration list ttl put replace exist link resource via ldp split split rdf piece max triple output name turtleize output rdf turtle much possible prefix declaration namespace lookup rdf allow quickly lookup namespaces well locally define prefix namespace lookup cache typically home cache rdf prefix cache order avoid unneeded traffic subcommand rdf command get qnames parameter foaf person skos concept define lookup table add line home config rdf prefix local rdf priority lookup table overwrite cache prefix lookup rdf also output prefix syntax template uncached resource description desc describe resource query statement resource subject extremly useful fastly check schema detail addition textual representation calculate color visual resource representation color command refer cold information sparql graph store protocol client sparql graph store http describe http operation purpose manage collection rdf graph rdf support follow command order manipulate graph store url give direct graph assume mean store url take graph url store url give indirect graph link platform client link describe read write link architecture base http access web resource describe state rdf rdf support edit get follow edit command follow put request link platform resource ldprs edit command editor variable start editor choice prepare turtle change content add remove triple prefix already declare via config cache prefix declaration add automatically afterwards putt server webid request order request ressources webid client certificate need setup rdf see configuration section curl allow client cert need private key certificate proper create webid pem add syntax highlight rdf support highlight output turtle proper turtle everything available pygmentize turtle throw error look like want syntax highlight reason disable set environment variable rdfsh_highlighting_suppress true export rdfsh_highlighting_suppress true start rdf resource list list get quick overview unknown rdf schema rdf provide list command output distinct list subject resource fetch uri also provide start sequence constrain output note grep_options environment apply list case ignore case skos changenote list well feature work schema document available fetch namespace uri optionally link header redirect rdf document resource inspection get count head headn fetch resource via link print stdout count statement resource inspect header resource head header request content negotiation suitable link headn normal header request send browser prefix distribution project nscollect nsdist often need create lot ttl project consist schema instance resource project split several good handle share set namespaces introduce new namespace project need add prefix line ttl project rdf subcommands handle procedure rdf nscollect collect prefix exist ttl current directory collect prefix rdf nsdist firstly remove prefix line target add prefix top format rdf turtle turtleize work rdf often require convert reformat different rdf turtleize easy get rdf turtle plus nicely format need prefix declaration add turtleize rapper try detect namespaces cache prefix cache well define prefix local turtleize current buff vim rdf turtleize autocompletion resource history rdf command line function boost usability tool new level completion feature support base command well auto completion resource resource take resource history resource history write home cache rdf resource history load completion function could way could follow commandline note substring match feature zsh completion turn zstyle completion matcher list assume least resource exist history match tramp configuration rdf import home config rdf begin execution place setup personal configuration option webid support syntax highlight suppression setup prefer accept header setup alternate ntriples fetch program any23 rover see feature background info please look
Semantic web;https://github.com/andrewdbate/Sequoia;license gpl sequoia open source owl reasoner java welcome official repository sequoia sequoia ontology reasoner support owl ontology sequoia command line protege plug via owl api feel free fork repository submit pull request discover bug please report github sequoia free open source software license gnu gpl _note compile sequoia need jdk instal compile java support time current limitation datatypes support neither nominal abox assertion support swrl rule support publication follow publication describe algorithm sequoia andrew bate boris motik bernardo cuenca grau frantisek simancik ian horrocks extend consequence base reason _principles knowledge representation reason proceed fifteenth international conference_ page aaai press main reference sequoia slide andrew bate boris motik bernardo cuenca grau frantisek simancik ian horrocks extend consequence base reason sriq technical arxiv february technical report andrew bate boris motik bernardo cuenca grau frantisek simancik ian horrocks extend consequence base reason _proceedings 28th international workshop description logics_ vol ceur workshop proceed ceur org technical report development sequoia develop andrew actively maintain sequoia need instal system sequoia reasoner comprise multiple subprojects reasoner macro contain scala macro throughout subprojects reasoner kernel contain core algorithm structure reasoner owl api contain owl api bind reasoner cli contain command line interface reasoner reasoner protege plugin contain protege plugin compile subprojects test single command first clone repository root directory type sbt test test take several minute complete command line client root directory type sbt launch sbt repl type project cli hit enter follow universal packagebin hit enter protege plugin root directory type sbt launch sbt repl type project protegeplugin hit enter follow osgibundle hit enter acknowledgement previous version sequoia develop knowledge representation reason department computer university
Semantic web;https://github.com/RDFLib/rdflib;doc _static rdflib png rdflib coverall github rdflib pure package work rdflib contain thing need work rdf include parser serializers rdf xml ntriples quad turtle trix trig json graph interface back number store store memory persistent disk berkeley remote sparql endpoint sparql support sparql query update statement sparql function extension mechanism rdflib family package rdflib community maintain many rdf relate repository different purpose rdflib core simple wrapper around sparql service remotely execute query owl ontology documentation tool templating base lode please see list package repository version release alpha current master branch current release support many improvement see support mostly backwards compatible see release overview documentation see documentation note late stable documentation version match release installation stable release rdflib may instal package management tool pip pip rdflib alternatively manually package package index pypi current version rdflib see changelog new release installation current master branch developer pip also rdflib git repository follow option pip pip locally clone repository follow option setup pip get start rdflib aim pythonic rdf api rdflib main object graph collection rdf subject predicate object triple create graph load rdf dbpedia print component triple uris resource literal value uris group together namespace common namespaces include rdflib like rdfs rdfs namespace xsd xml schema datatypes namespace value return object triple pattern give arbitrary multiple exist like add triple graph triple triple notation create property foaf givenname uri xsd string uri bind namespaces prefix shorten uris rdf xml turtle trig trix json serialization allow triple triple serialise like new namespaces also define see also feature library contain parser serializers rdf xml ntriples quad turtle trix json rdfa microdata library present graph interface back number store core rdflib package include store memory storage persistent storage top berkeley sparql include support sparql query update statement rdflib open source maintain rdflib release current previous list multiple project contain within rdflib family see test test host test suite pytest test coverage host coverage report test suite generate html coverage report pytest pytest cov test docker container test suite inside docker container cross platform support resolve issue instal berkeleydb window avoid host port issue macos tip underlie dockerfile test runner change make test docker container coverage report test suite inside docker container html coverage report view test coverage test produce html output coverage report view contribute rdflib survive grow via user contribution please read contribute get start please consider lodge pull request also raise issue support contact general query please tag question rdflib exist question want contact rdflib maintainer please via rdflib dev mail list chat available via matrix
Semantic web;https://github.com/swirrl/table2qb;table2qb statistical link csv web create statistical link derive csv web annotation table rdf cube knowledge graph spreadsheet without advance program skill rdf knowledge simply prepare csv input accord template table2qb output standard compliant csvw rdf happy adjust configuration tailor uri pattern heart content turn table cub table2qb expect type csv table input observation tidy table statistic per row standard call _observation_ component another table define column describe observation standard call _component properties_ _dimensions_ _measures_ _attributes_ codelists set table enumerate describe value cell observation table standard call _codes_ group _codelists_ ons mid population reach estimate million single observation value million dimension date place respectively value mid single measure population estimate implicitly attribute unit people regional trade depth colour cod spreadsheet colour cod help illustrate type table come together describe cube input process pipeline output process version csv table along json metadata annotation describe translation rdf optionally also ask table2qb perform translation output rdf directly load graph database query sparql table2qb also rely fourth csv table configuration column describe observation table interpret component codelists column observation table configuration design multiple cub across collection year column without configure anew time encourage harmonisation alignment identifier ultimately table2qb provide foundation help collection interoperable statistical link open table2qb github release release currently late unzip main table2qb executable directory target table2qb add directory path environment variable full path system get help available command type table2qb help see available pipeline describe detail type table2qb list see require command structure pipeline cube pipeline type table2qb describe cube pipeline clojure cli clojure distribute clojure cli command line program clojure program table2qb clojure command first clojure cli create deps edn contain follow deps edn table2qb clojure table2qb detail clojure cli format deps edn find clojure compile table2qb table2qb write clojure recommend java late table2qb leiningen lein lein list alternatively uberjar lein uberjar jar target directory java jar target table2qb jar list table2qb see table2qb doc usage documentation generate rdf cub table2qb employment employment directory provide create cube scratch table2qb license copyright swirrl ltd distribute eclipse public license either version option late version acknowledgement development table2qb fund swirrl office national statistic european union horizon research innovation programme grant agreement project
Semantic web;https://github.com/anno4j/anno4j;anno4j library mainly provide programmatic access w3c web annotation formerly know w3c open annotation allow annotation write local remote sparql endpoint easy extensible java api allow creation query annotation even non expert api augment various support functionality increase usability w3c web annotation last iteration anno4j also develop able work generic metadata possible parse rdfs owl lite schema generate respective anno4j class fly via generation status master branch develop branch table content anno4j library feature document respective github anno4j feature follow extensible creation web open annotation base java annotation syntax see get predefined nearly rdf class conform w3c web annotation create annotate java pojos transform rdf automatically transmit local remote sparql endpoint sparql update functionality query annotation path base criterion see basic comparison like equal great low string comparison equal contain start end union different path type condition custom filter addition custom behaviour otherwise simple anno4j class partial support class see support input output different standardise rdf serialisation standard see rdf input parse rdfs owl lite schema automatically generate respective anno4j class see java schema validation annotation add anno4j class induce schema correctness indicate point creation see schema schema tool support generation call proxy class speed creation instance large deep schema status anno4j implement wadm specification current version anno4j support current w3c recommendation web annotation development guideline snapshot push development branch trigger snapshot version snapshot publicly available compile package package local repository participate create issue fork anno4j add feature add junit test create pull request anno4j develop 3rd party integration custom ldpath expression contribute custom ldpath test function thereby custom ldpath syntax follow class provide step create java class extend either selectorfunction class testfunction class class define actual syntax inject anno4j evaluation process step create java class actually evaluate newly provide ldpath expression class need flag evaluator java annotation evaluator annotation require class description mention first step besides evaluator implement either queryevaluator testevaluator interface inside prepare evaluate method actual sparql query generate apache jena framework contributor kai schlegel university passau andreas eisenkolb university passau emanuel berndl university passau thomas weigerber university passau matthias fisch university passau software partially develop within mico medium context european commission 7th framework programme grant agreement visit virtuelle verbund systeme und information technologien fur die touristische erschlieung von kulturellem erbe interreg osterreich bayern project ab78 license apache license version
Semantic web;https://github.com/paulhoule/infovore;overview infovore rdf process system hadoop process rdf set billion triple range beyond infovore originally design process old proprietary freebase dump rdf freebase come official rdf dump infovore gain ability clean purify dump make possible easy process freebase triple store virtuoso every week infovore amazon elastic map reduce order produce product know infovore depend framework package process command line argument project extend infovore project order process wikipedia usage information produce product call support cost several dollar per month process store connection work please join keep free infovore software require jdk mvn clean instal follow cantrip top level infovore directory initialize bash haruhi program infovore application package bakemono jar source haruhi target path information see documentation join discussion group
Semantic web;https://github.com/solid/solid-spec;solid specification draft join chat late version see changelog changelog publication status unofficial draft current development version next evolve document contain informal description guideline solid server client normative specification make time present document contain best approximation expect server client behavior table content overview overview identity identity profile profile webid profile document webid profile document authentication authentication primary authentication primary authentication webid webid alternative authentication mechanism alternative authentication mechanism secondary authentication account recovery secondary authentication account recovery authorization access control authorization access control web access control web access control content representation content representation read write resource read write resource http rest websockets api websockets api social web app protocol social web app protocol notification notification friend list follower follow friend list follower follow recommendation server recommendation server recommendation client app recommendation client app current current overview propose set convention tool decentralize application base link principle solid modular extensible rely much possible exist standard protocol see also contribute solid project standard platform solid project identity solid uris universal usernames actor identifier frequently refer simply webids uris form basis solid relate technology authentication authorization access control user profile discovery user preference server capability webids provide globally unique decentralize identifier enable cross service federate signin prevent service provider lock give user control identity webid uri primary function point location public webid profile document profile see webids profile solid webid profile document management user identity security credential public key user preference discovery although mostly refer context user profile type actor profile well group organization device software application webid profile document webid uri dereferenced yield webid profile document link format default often available json html rdfa parse document provide client application useful information user name profile image link user preference relate document list public key certificate relevant identity credential see component spec solid webid profile specification solid webid profile authentication authentication process determine user identity ask question know say web application typically authenticate user verify identity common method usernames password username uniquely identify user tie user profile password verify user say many application service also secondary authentication mechanism usually external email address account recovery case user forget lose primary authentication token username password solid currently webid primary authentication mechanism alternative complementary mechanism also actively investigate addition solid recommend server also offer secondary authentication available user account recovery via email band mechanism primary authentication solid decentralize web application platform set requirement authentication mechanism commonly encounter platform ecosystem specifically require cross domain centralize authentication mechanism tie particular identity provider certificate authority webid note several browser vendor chrome firefox remove support keygen element webid rely browser certificate generation solid webid primary authentication mechanism instead usernames webids unique identifier previously mention instead password bearer token cryptographic certificate store manage user web browser prove user identity access solid server webid user present web browser popup ask select appropriate security certificate site user make selection server securely match private key store browser public key store user webid profile document webid profile document authenticate see component spec solid webid specification authn webid webid oidc solid team currently implement support webid oidc another primary authentication mechanism base oauth2 openid connect protocol adapt webid base decentralize case see component spec webid oidc alternative authentication mechanism several authentication mechanism currently investigate combination traditional username password authentication webid delegation secondary authentication account recovery regardless primary authentication mechanism bearer token proof identity tend get lose user password forget browser certificate lose hardware failure solid recommend secondary account recovery mechanism provide server implementers aid scenario authorization access control authorization process decide whether user access particular resource authentication ask user authorization concern user allow solid currently web access control wac mechanism cross domain authorization resource web access control web access control decentralize system allow different user group various form access resource user group identify http uris system similar access control system within many system except document control user group identify uris user identify webids group user identify uri class user look return list user class mean webid host server member group host server user need account webid give server access document see component spec solid wac content representation solid deal read write kind resource link resource rdf form json turtle html rdfa etc everything else binary non link structure text solid application non link resource actual rdf base link provide considerable benefit term interoperability rest solid app ecosystem resource group directory like container currently conform ldp basic container see component spec solid content representation content representation read write resource http rest api solid extend link platform provide simple rest api crud operation resource container see component spec http rest api api rest websockets api solid also provide websockets base api pubsub publish subscribe mechanism client notify real time change affect give resource see component spec websockets api api websockets social web app protocol addition read write operation resource solid provide number spec recommendation help developer achieve interoperability various social web application part ecosystem notification see component spec link friend list follower follow api recommendation manage subscription friend list still discus tbd recommendation server see component spec recommendation server recommendation server recommendation client app see component spec recommendation client recommendation client user post note user post note current server see list solid server developer tool note solid team main server client app see main client library list apps solid
Semantic web;https://github.com/Wimmics/corese;software platform semantic web link corese software platform implement extend standard semantic web allow create manipulate parse serialize query reason validate rdf corese implement w3c standarts sparql1 query owl also implement extension like sttl sparql version corese corese library java library process rdf corese feature via api corese server tool easily create configure manage sparql endpoint corese gui graphical interface allow easy visual corese feature corese library documentation get start corese server corese server jar corese gui corese gui jar compilation source source compile contribution discussion support question comment idea improvement would like discus please discussion welcome everyone contribute issue suggest new feature create pull general information corese source corese server mail list corese user inria subscribe mail list corese user request inria subject subscribe
Semantic web;https://github.com/castagna/EARQ;earq elasticsearch arq earq combination arq elasticsearch give arq ability perform free text search elasticsearch cluster elasticsearch index additional information access rdf graph storage graph experimental unsupported index jena modelindexerstring indexer new modelindexerstring earq_index indexer indexstatements liststatements indexer close configure arq elasticsearch indexsearcher searcher indexsearcherfactory create type elasticsearch earq_index earq setdefaultindex searcher sparql query sarq search property function prefix earq select doc light light score earq search text acknowledgement design part inspire larq see todo still break remove larq reference modelindexersubject
Semantic web;https://github.com/sebferre/sparklis;sparklis sparklis query builder natural language allow people explore query sparql endpoint power sparql without knowledge sparql endpoint vocabulary sparklis web client entirely browser directly connect sparql endpoint retrieve query suggest query element cover large subset sparql select query basic graph pattern include cycle union optional exist filter bind complex expression aggregation group order feature combine flexible way like sparql present table also map configuration panel offer configuration option adapt different endpoint get post label property language tag sparklis also include yasgui editor let advance user access modify sparql translation query sparklis reconcile expressivity usability semantic search tightly combine query builder natural language interface faceted search system query builder let user complex query compose elementary query incremental fashion elementary query class film property director rdf node tim burton reference another node film operator high low average faceted search system every step query construction well form query compute display suggest query element derive actual schema prevent construction non sensical empty display relevant suggestion every step provide constant acurate feedback user construction process support exploratory search serendipity confidence final natural language interface everything present user query suggest query element verbalize natural language completely hidding sparql behind user interface compare query answer system hard problem spontaneous understand avoid control query formulation guide query construction replace simple problem generation user interface lend multilinguality far available english french spanish dutch refer sparklis scientific document please follow citation sebastien ferre sparklis expressive query builder sparql endpoint guidance natural language semantic web try sparklis simply follow step online select sparql endpoint dropdown list top default core english dbpedia core subset dbpedia query incrementally click suggest query element list suggestion hamburger menu query click different part query change focus suggestion relative current focus recommend visit query several datasets every query open sparklis click query modify number youtube screencast show step step sparklis rdf enough sparql endpoint visible machine publicly open endpoint like dbpedia wikidata localhost endpoint personally apache jena fuseki store work important condition endpoint server http request make browser sparklis recommendation content store best include rdfs owl triple declare class rdfs class owl class property rdf property owl objectproperty owl dataproperty well label rdfs label hierarchy rdfs subclassof rdfs subpropertyof ensure uri resource label define preferably rdfs label possibly standard property skos preflabel name graph make sure configure store default graph contain union name graph configure menu offer number option adapt sparklis endpoint control display non exhaustive list endpoint query max number suggestion get post credential ontology display class property hierarchy filter class property sparklis specific schema property see language label interface language label property fulltext search support sparklis make standard non standard property get control query display suggestion ech property generally configuration option activate sdo position sdo possible control order suggestion class property individual set property desire rank suggestion relate option configure advance feature sdo logo possible small icon front entity label set property url icon several icon attach entity relate option configure advance feature size icon define rdfs inheritsthrough suppose location property whose range place organize hierarchy property ispartof add triple location rdfs inheritsthrough ispartof get whenever property location insert query inheritance place hierarchy perform place suggestion display tree generalization well know rdf type inheritance rdfs subclassof add triple place rdfs inheritsthrough ispartof effect obtain insert class place relate option configure ontology must activate owl transitiveof owl rdfs inheritsthrough entail insertion transitive path ispartof sparql query costly evaluate solution materialize transitive closure new property ispartof_star add triple ispartof_star owl transitiveof ispartof activate relate option configure ontology property path ispartof replace ispartof_star nary subjectobject nary property handle case reify relationship property reification node subject property reification node object add triple nary subjectobject reification become transparent sparkls see cyan property mondial endpoint relate option configure ontology must activate nary eventobject similar except property subject reification node instead inverse see cyan property wikidata endpoint find good configuration endpoint generate permalink button top share endpoint user permalinks also include current query current focus also share query template query also save query simply add bookmark browser find endpoint general interest welcome suggest add list sparql endpoint reuse sparklis web site sparklis client side possible integrate sparklis website simply copy content webapp folder among website add link web page url argument contain endpoint configuration possibly initial query get url simply navigate sparklis copy adapt need browser url adapt appearance main html osparklis html osparklis long retain sparklis name credit page footer instance hide configuration option element change look feel layout element careful delete element class sparklis let know successful integration also problem encounter process compile sparklis source sparklis develop compile javascript tool strongly recommend tool manage ocaml dependency follow step find work ubuntu lts credit author sebastien affiliation univ rennes team irisa copyright sebastien ferre irisa universite rennes france licence apache licence citation ferre sebastien sparklis expressive query builder sparql endpoint guidance natural language semantic web press
Semantic web;https://github.com/ad-freiburg/QLever;qlever status via status via qlever pronounce clever sparql engine efficiently index query large knowledge graph billion triple single standard server particular qlever fast query involve large intermediate final notoriously hard engine like blazegraph virtuoso qlever also support search text associate knowledge base well sparql autocompletion demo variety large knowledge graph include complete wikidata openstreetmap demo also feature qlever context sensitiv autocompletion make sparql query construction much easy qlever first describe evaluate cikm qlever develop lot since qlever autocompletion functionality new feature describe evaluate qlever work please cite qlever support standard sparql construct like limit offset order group count distinct sample group_concat filter regex lang optional union minus value bind predicate path subqueries also support service keyword yet support aim full sparql support almost except sparql update operation long term project quickstart easy step step instruction index qlever start sparql endpoint index see quickstart guide doc quickstart take simple year triple well large complete billion triple advance feature depth information qlever advance feature describe doc advanced_features depth information see various folder doc
Semantic web;https://github.com/uzh/katts;katts katts collection storm operator bolt configuration facility enable user write query xml syntax query stream rdf triple information script ssw iswc publication find src eval information version number find version
Semantic web;https://github.com/jpcik/morph-web;morph web morph web web demonstrator morph stream rdf stream query processor need java7 sbt www scala sbt org play framework www playframework com start application sbt browser localhost case follow register query pull register query push websockets create r2rml mapping
Semantic web;https://github.com/ropensci/rdflib;rdflib project status active project reach stable usable state actively travis coverage docker test cran rstudio mirror friendly consise user interface perform common task rdf parse convert format include rdfxml turtle nquads ntriples trig create rdf graph perform sparql query package wrap redland package provide direct bind redland library additionally package support parse serialization rdf json json package bind official json javascript api package interface take inspiration rdflib library installation rdflib github basic require rdflib design play nicely pip load magrittr package well parse serialize different format perform sparql query initialize graph new object add triple statement exist graph change default display format nquads graph object json also work json format additional function provide package jsonld information json rdf api see advance see documentation advance include application large triplestores sparql query information additional database backends cite rdflib please also cite underlie redland library cite rdflib carl boettiger rdflib high level wrapper around redland package common rdf application version zenodo jones slaughter ooms boettiger chamberlain redland rdf library bind doi f1vm496b url package version url
Semantic web;https://github.com/ruby-rdf/rdf-reasoner;rdf reasoner partial rdfs owl schema org reasoner rdf gem coverage gitter description reason rdfs owl vocabulary schema org generate statement entail base base rdfs owl rule along vocabulary information also ask specific question give object consistent vocabulary ruleset implement sparql entailment regime rdf schema entailment feature entail rdfs subclassof generate array term ancestor subject entail rdfs subpropertyof generate array term ancestor subject entail rdfs domain rdfs range add rdf type assertion subject object inverse rdfs subclassof entailment find descendant class subject term inverse rdfs subpropertyof entailment find descendant property subject term entail owl equivalentclass generate array term equivalent subject entail owl equivalentproperty generate array term equivalent subject domaincompatible determine particular resource compatible domain definition give predicate base intersection entail subclass property domain rangecompatible determine particular resource compatible range definition give predicate base intersection entail subclass literal type property domain add entail lint command rdf command line interface domain range entailment include specific rule schema org vocabulary plain literal acceptable value property resource type schema role resource domain acceptable resource reference resource property resource type schema role range acceptable property acceptable value resource type rdf list must previously entail range acceptable member list otherwise range acceptable property limit vocabulary reason load vocabulary dominate process time rdf vocabulary limit_vocabs method set specific set vocabulary reason rdf vocabulary limit_vocabs rdf rdf schema limit vocabulary return rdf vocabulary reason operation vocabulary term determine super class class require rdf reasoner rdf reasoner apply rdfs term term entail subclassof foaf agent geo spatialthing foaf person determine sub class class require rdf reasoner rdf reasoner apply rdfs term rdf vocab foaf person term entail subclass foaf person solomusicartist determine resource compatible domain property require rdf reasoner require rdf turtle rdf reasoner apply rdfs graph rdf graph load etc doap ttl subj rdf vocab doap name domain_compatible subj graph true determine resource compatible range property require rdf reasoner require rdf turtle rdf reasoner apply rdfs graph rdf graph load etc doap ttl rdf literal date new rdf vocab doap create range_compatible graph true perform equivalentclass entailment graph require rdf reasoner require rdf turtle rdf reasoner apply owl graph rdf graph load etc doap ttl graph entail equivalentclass yield entail statement entailment method require rdf reasoner require rdf turtle rdf reasoner apply rdfs owl graph rdf graph load etc doap ttl graph enum_statement entail count graph enum_statement count lint expand graph require rdf reasoner require rdf turtle rdf reasoner apply rdfs owl graph rdf graph load etc doap ttl graph entail message graph lint message kind term_messages term_messages term message option output put kind term message option output put end end command line interface rdf command line interface extend entail lint command entail combination serialize generate output graph representation include entail triple dependency mail list author gregg contribute best adhere exist cod convention idiom hard tab leave trail whitespace line commit git diff check make sure document every method add yard annotation read tutorial yard look exist touch gemspec version author need change private branch feel free add credit correspond list readme alphabetical order apply note order merge non trivial change rule thumb addition large line need explicit public domain dedication pdd record ask agree first commit repo within organization note agreement apply repos ruby organization license free unencumbered public domain software information see accompany unlicense ruby rdf yard yard pdd sparql sparql query sparql rdf rdf rdf schema rack
Semantic web;https://github.com/agazzarini/SolRDF;solrdf solr rdf set solr extension manage index search rdf join solrdf user list googlegroups com continuous integration get section provide instruction solrdf divide section different part different architecture introduce solr prior solr solr distribute jee web application therefore solrdf maven project could maven start live instance without solr maven would behind scene solr deliver standalone jar therefore solrdf installation different require manual step order deploy configuration library within external solr need separately solrdf solr first need java apache maven apache solr instal machine open new type follow solrrdf end see find solr home directory everything require solrdf refer directory solr_home point open _bin_ folder solr type solrdf solr solr point solrdf branch automatic procedure describe instal need solr maven checkout project open new type follow solrrdf first time command lot thing solr include end see something like add let add follow way browser open favourite browser type follwing url line split readability bundle sample somehere remotely _stream url_ parameter indicate url command line open type follow add sparql endpoint solrdf fully compliant sparql endpoint order issue query query like _the solrdf logo kindly provide umberto
Semantic web;https://github.com/webr3/js3;js3 insane integration rdf ecmascript javascript short library javascript also rdf special type class variable value also rdf node list graph value standard javascript value expect extension suchlike rdf type expect library inspect object generate rdf rather value rdf javascript true tont tont complicate yet simple illustrate standard object var foaf person string curie full iri name nathan string rdf plain literal age new date getfullyear number type literal type xsd integer homepage string iri holdsaccount object blanknode reference label nathan twitter account string literal language accountname webr3 notice need prefix yet homepage know bob work variable course nick webr3 nath array also list value like turtle ref still object also subject set call get follow output rdf type foaf person foaf name nathan foaf age foaf homepage foaf holdsaccount rdfs label nathan twitter account foaf accountname webr3 foaf homepage foaf know foaf nick webr3 nath simple javascript rdf plain old javascript gender male gender resolve foaf gender age return true native value like normal notice library require ecmascript specifically make heavy usage object defineproperties check compatibility see platform browser support short version chrome ff4 webkit safari ie9 support script server side node rhino besen fine object value modify usual manner convert different type rather library automagically redefine property descriptor object allow value native javascript value rdf compatible value nod value value type string number boolean date also rdf nod fully align compatible interface rdfa api standard method basic type string number boolean date augment follow method nodetype return plainliteral typedliteral blanknode iri true nodetype typedliteral nodetype typedliteral new date nodetype typedliteral hello world nodetype plainliteral b12 nodetype blanknode foaf name nodetype iri iri equal return boolean rdf type safe equality test hello hello true hello equal hello false tont return string say tin return triple format value true tont tont new date tont hello world tont hello world hello world tont hello world b12 tont b12 foaf name tont tocanonical alias tont rdfa api compatibility method return string return value format turtle true true new date hello world hello world hello world hello world b12 b12 foaf name foaf name string method string represent rdf node type plainliteral language typedliteral blanknode iri js3 string expose follow method addition standard method outline return set language plainliteral expose language attribute call language non enumerable read var hello world language nodetype plainliteral tont hello world return set type typedliteral expose type attribute call type non enumerable read var 0fb7 xsd hexbinary type nodetype typedliteral tont note method also cater situation want plainliteral xsd string iri plainliteral var rdf plainliteral var hello hello hello xsd string resolve return string iri resolve curie full iri note automatically tont method foaf name resolve return string nodetype iri remember javascript value type remain unchanged entirely backwards compatible exist modify value hello world still string property like language type non enumerable show loop json stringify value implement library non ecmascript simply add language property string object simply work number js3 fully aware number type know number integer double decimal tont tont 43233e32 tont gotcha note need add space number method wrap number brace tont since expect integer follow immediately period decimal like apply hard cod source number variable return function generally noticable way normally write tostring array list js3 array list object property object chain name nathan nath rdf list determine whether array list inspect boolean property list array specify array list simply call tolist array method property list boolean boolean flag indicate whether array rdf list tolist return specify array rdf list set list property true return string return value format turtle tolist note tont nodetype method relate array list rdf nod object description js3 object default object single additional method expose ref call method object rdf enable whereby set denote description something identify blanknode iri key property map rdf property attribute expose object method also expose tont graphify basic really simple tbh property object either full iri foaf name normal curie foaf name javascript friendly curie swap name single property map curie map iri value single value type cover array value might list object name iri blanknode identifier thus like normal javascript json make object structure simple complicate like object also method strip output exist object whether dumb full class property javascript object set non enumerable read property map rdf property object see describe thing subject subject set call ref object pas curie iri param set subject call ref argument give blanknode identifier method expose ref ing also simple dump string object tont dump ntriples graphify give back rdfgraph rdfa api make completely compatible expose functionality library compatible rdfa api bite subtle throw name ontology property come order provide unambiguous map instance var article description dc11 description label rdfs label ref dc11 rdfs pas name map first hit first basis cover section propertymap curiemap syntax variable reference special syntax variable reference part javascript work mean thing like article maker make article article maker know bob know article create new date foaf document primarytopicof article ref graphify turtle reference article value output graph could article instead include also many object graphify get smash together nice migrate iris rename subject simple call ref newid object complex rdf replace routine need structure object nest default consider blanknodes however course call ref place thus describe thing context name case object holdsaccount blanknode var name nathan holdsaccount label nathan twitter account accountname webr3 homepage ref case iri var name nathan holdsaccount label nathan twitter account accountname webr3 homepage ref twitter name ref course however want get var name nathan ref var account accountname webr3 account label nathan twitter account account label holdsaccount account holdsaccount foaf homepage twitter webr3 resolve holdsaccount ref twitter create structure complex like deep item1 bob mary tolist new date bob tolist something substr bob tolist foo bar interact however want var somedata value tolist create new date ref math somedata somedata value map sqrt reduce function return max call create seq value seq flexible see map reduce rdf list update graph line object method property ref ing string read non enumerable blanknode iri string subject object return string return object turtle tont return string return object ntriples graphify return rdfgraph return structure rdfgraph rdftriples per rdfa api core interface compat arg1 arg2 argn return pas string prefix ontology consider map simple property see wiki page detail js3 curiemap js3 propertymap js3 curiemap simple object map prefix iris add curie map js3 curiemap foaf get iri prefix var iri js3 curiemap foaf setdefault iri set default prefix getprefix iri get register prefix iri return null prefix find foaf shrink iri turn iri curie method return either curie original iri prefix find foaf name js3 propertymap simple object make lib aware property ontology add property ontology js3 propertymap foaf name mbox page note value must always array get property ontology var property js3 propertymap foaf ambiguity return array ambiguous property var gotchas js3 propertymap ambiguity see wiki page detail js3 graphify simple method accept number object array object return back rdfgraph come soon iri deref callback web aware function get description subject web negotiate format return back js3 object work function print name etc save web aware function put update description function friend push somebody new save full rdfa api integration side graph describe subject get back object suchlike probably much feedback feedback bug etc via issue well get detail foaf profile lib like
Semantic web;https://github.com/antoniogarrote/rdfstore-js;rdfstore join chat important note many feature present version remove add next version like mongodb backend discard please read readme carefully find current set feature table content introduction introduction documentation documentation sparql support sparql support installation installation test test api api store creation store creation query execution query execution construct query rdf interface api construct query rdf interface api load remote graph load remote graph high level interface high level interface rdf interface api rdf interface api default prefix default prefix json support json support event api event api custom filter function custom filter function persistence persistence dependency dependency frontend frontend contribute contribute author author license license introduction rdfstore pure javascript rdf graph store support sparql query manipulation language rdfstore execute web browser include library node application also execute stand alone sparql end point accept sparql rdf protocol http request bottom page find application library current far complete already pas test case sparql query language support manipulation operation sparql update version language feature include library follow sparql support sparql update support partial sparql query support json parser turtle parser w3c rdf interface api rdf graph event api custom filter function browser persistence indexeddb documentation documentation store find sparql support rdfstore support moment sparql sparql update part sparql query implement yet list different kind query currently implement select query union optional clause name graph identifier limit offset order clause sparql filter builtin function variable alias variable aggregation max min count avg sum function group clause distinct query modifier construct query ask query insert query delete query delete query delete insert query load query create graph clause drop default name graph clause clear default name graph clause filter exist exist operator bind filter operator installation library instal npm library also instal via bower global module script must javascript dependency npm ship library gulp browser version browser gulp target test execute whole test suite library include dawg test case sparql test case sparql implement moment gulp target execute additionally smoke test browser version find ithe spec browser directory api small overview rdfstore api store creation query execution construct query rdf interface api load remote graph rdfstore try retrieve remote rdf resource across load sparql query execute node library regular tcp socket perform proper content negotiation also follow limit number redirections browser try perform ajax request retrieve resource correct http header nevertheless subject limitation domain policy implement current browser prevent cross domain request redirections even domain may also fail due browser remove accept http header original request rdfstore rely jquery javascript library peform cross browser ajax request library must link order exeucte load request browser high level interface follow interface convenience api work javascript instead sparql query string top rdf interface w3c api rdf interface api store object include rdf object implement rdf environment describe rdf interface w3c work draft object access full rdf interface api default prefix default rdf name space specify registerdefaultnamespace name include automatically query name space specify client query string new prefix shadow default collection common name space like rdf rdfs foaf etc automatically register registerdefaultprofilenamespace function json support rdfstore implement parser turtle json specification json still ongoing effort may expect find inconsistency actual specification event api rdfstore implement experimental event api allow client observe change rdf graph receive notification part graph change main event function subscribe make possible set callback function invoke time triple match certain pattern pas argument add remove function startobservingnode invoke modify version node time triple add remove node main difference method subscribe receive triple change meanwhile startobservingnode receive alway whole node update triple startobservingnode receive node rdf interface graph object way startobservingquery stopobservingquery function make possible set callback whole sparql query store try smart perform unnecessary evaluation query quad insertion deletion nevertheless broad query must carefully event api custom filter function custom filter function register store registercustomfunction function function receive argument name custom function associate function available sparql query prefix custom also full uri identify function register function receive argument object link store query filter engine list actual argument argument consist literal uris object function must also literal uri object query filter engine access auxiliary function transform literal javascript type effectivetypevalue function boolean value effectivebooleanvalue boolean literal object ebvtrue ebvfalse return error ebverror documentation source queryfilters object query engine module consult find information additional helper function follow test show simple custom function invoke persistence store persist browser indexeddb backend order make store persistent persistent flag must set true store creation option additionally name option also pas store different persistent instance store open different name control frequency function yield performance store improve reduce frequency nextick mechanism cancel call stack reduce frequency invoke yieldfrequency function store object pas big number number big number produce stack overflow error execution find problem reduce value provide yieldfrequency dependency library include dependency semantic web library parse develop ruben verborgh release mit license develop digital bazaar release new bsd license frontend stand along frontend store electron add version frontend command add release directory contribute rdfstore still begin development take look library find way improve please ping greatful bug report pull request author antonio garrote email antoniogarrote gmail com twitter antoniogarrote license license mit copyright antonio garrote
Semantic web;https://github.com/konradreiche/jtriple;jtriple jtriple java tool create rdf java object make reflection small set annotation jena flexible rdf owl api another rdf bind java popular tool persist java object rdf jenabean jtriple develop respectively jenabean modify due follow reason jenabean aim persistence layer object serialization fact often express miss confguration instance field declare transient whole functionality jenabean require additional serialize instance serialization package name package name vital deserialization pure translation way interfere rdf schema owl translate separate rdf graph jenabean create graph get start jtriple deploy maven follow repository add pom xml add dependency maven also get jar directly consider follow class philosopher enum type branch requirement annotate field method class rdfidentifier bind object rdf easy follow sufficient produce rdf get sophisticate annotation help provide neccessary information lead rdf annotation annotation nameuseeffect rdfidentifierfields methodsvalue construct resource uri rdfpropertyfields methodsvalue define another property uri rdftypeclassesvalue define rdfs type property resource transientfieldsindicate field must convert sameasenum constantsvalue define owl sameas property resource labelfields methodsvalue define rdfs label property resource future work idea future development implement owl bind increase configuration flexibility something amiss feel free open issue make pull request lightweight allow change functionality quickly jenabean jena api jar
Semantic web;https://web.archive.org/web/20180627155808/https://github.com/dice-group/triplestore-benchmarks;representative sparql benchmark analysis rdf triplestore benchmark thewebconf2019 provide fine grain comparative analysis exist triplestore benchmark particular analyze query provide exist triplestore benchmark addition several real world datasets measure correlation query execution time various sparql query feature rank feature base significance level experiment reveal several interest insight design benchmark hope fine grain evaluation helpful sparql benchmark designer design diverse benchmark future persistent uri licence present evaluation available online gnu general public license benchmark datasets query provide datasets query benchmarmks real world datasets evaluation datasets also provide portable virtuoso triplestores start bin start_virtuoso benchmark rdf dump virtuoso store query analysis analysis base follow benchmark design feature structuredness relate relationship specialty relate overall query diversity score base important sparql query feature number triple pattern number projection variable set size query execution time number bgps number join vertex mean join vertex degree mean triple pattern selectivity bgp restrict join restrict triple pattern selectivity join vertex type query relate percentage wise distribution important sparql clause limit optional order distinct union filter regex benchmark query query relate spearsman correlation query runtimes important sparql query feature query relate first feature relate benchmark datasets late relate benchmark query please refer manuscript detail design feature reproduce please follow follow step reproduce complete present folder contain runable jar benchmark util jar calculate structuredness relationship specialty rdf datasets need first load triple store provide endpoint url input jar linux base virtuoso sparql endpoint datasets triplestore benchmark real world datasets evaluation note virtuoso start bin start_virtuoso script utility work sparql endpoint contain lsq datasets select triplestores benchmark real world datasets please refer lsq generate lsq query new rdf benchmark step require generate query relate complette evaluation complete evaluation find author muhammad aksw university leipzig mta bme lendulet cyber physical system research group budapest university technology economics felix aksw university leipzig syed ahmad department pathology yale university school medicine qaiser insight university galway axel cyrille ngonga aksw university leipzig
Semantic web;https://github.com/streamreasoning/CSPARQL-engine;csparql engine reason rdf stream make easy project contain parent pom root number module inherit parent pom csparql core jar mvn parent pom
Semantic web;https://github.com/utapyngo/owl2vcs;owl2vcs set tool design facilitate version control owl ontology owl2 version control system content owl2diff command line diff tool owl ontology set script integrate tool git git mercurial subversion svn feature detect axiom addition removal detect import addition removal detect ontology annotation addition removal detect prefix addition removal modification rename detect ontology iri version iri change detect ontology format change support rdf xml owl xml owl functional syntax manchester owl syntax turtle changeset serializer parser format change compact like owl functional syntax indent indent instead parenthesis readable format iris simple qname full label requirement java high java path git git git path mercurial path installation instruction owl2vcs late unzip add path path standalone usage add directory path owl2diff command compare version ontology see owl2diff help information usage git mercurial open command repository type owl2enable view informative diffs owl rdf ttl either owl2diff git diff git diff hang window git diff git difftool want owl2vcs compare extension edit hgrc git info attribute please help project still development feedback suggestion welcome encourage issue list issue github provide feedback feel free fork fork repo commit addition contribute fork fork clone develop branch machine git clone develop git github com utapyngo owl2vcs git create feature branch git checkout new feature commit change git commit add feature push branch git push origin new feature create new pull request owl2 git svn owl2vcs late path issue fork
Semantic web;https://github.com/OpenLinkSoftware/GeoSPARQLBenchmark;geosparql compliance benchmark geosparql compliance benchmark integrate hobbit geosparql compliance benchmark aim evaluate geosparql compliance rdf storage system benchmark sparql query test extent benchmarked system support requirement define geosparql benchmark provide metric correct answer number correct answer geosparql query test geosparql compliance percentage percentage compliance requirement geosparql standard find set late experiment host instance hobbit log guest last update want rdf triplestore test add system hobbit host instance hobbit publication milo jovanovik timo homburg mirko spasic geosparql compliance isprs international journal geo information milo jovanovik timo homburg mirko spasic software geosparql compliance software impact preprint milo jovanovik timo homburg mirko spasic geosparql compliance arxiv map requirement query req set correspond query description core component core select first triple geometry subject select first entity type select first entity type topology vocabulary extension top test property test property test property geometry extension geoext select entity type select value geometry denote property select value geometry denote property check datatype correctly define wkt literal check equality geometry check system interpret axis order within point geometry accord spatial reference system check empty rdfs literal type interpret empty geometry check value geometry expect literal value check whether value property contain valid gm_object subtype whether datatype check empty interpret empty geometry check value geometry expect literal value check support geospatial function check support geospatial function geometry topology extension gtop check support geospatial operator check support geospatial function check support geospatial function check support geospatial function rdfs entailment extension rdfse check system support select materialize rdf triple well infer rdf triple base rdfs entailment regime check system support select materialize rdf triple well infer rdf triple base rdfs owl class hierarchy geometry type simple feature check system support select materialize rdf triple well infer rdf triple base rdfs owl class hierarchy geometry type gml schema query rewrite extension qrw test property materialize rdf triple infer rdf triple test property materialize rdf triple infer rdf triple test property materialize rdf triple infer rdf triple acknowledgement benchmark develop part research project
Semantic web;https://github.com/tomatophantastico/sparqlmap;sparqlmap client sparqlmap sparql sql rewriter base specification allow extract rdf relational database rewrite sparql query sql sparqlmap client provide command line web access sparqlmap core get late release release please note mysql driver include need get mysql copy lib folder patch apache improve quotation mark handle include sparqlmap please locally sparqlmap utilize gradle create distribution sparqlmap overview map process sparqlmap quick start time dump creation take place command line binary distribution sparqlmap command call sparqlmap without wrong combination option present option available let look sample rdf dump r2rml map create dump base direct map r2rml mapping exist map quite simple provide parameter creation map create r2rml representation default map easy change action direct map option follow option generation direct map control option mean ease manual edit generate r2rml give baseuriprefix suffix either map vocab instance produce correspond uri prefix mappinguriprefix show r2rml name r2rml resource triplesmaps vocaburiprefix help construct useful identifier predicate class generate schema source therefore show extraced resource generate rdb rdf translation process instanceuriprefix iri generation rewrite sparql query sql rewrite sparql query sql sparqlmap expose sparql endpoint embed tomcat enpoint start expose sparql endpoint little snorql interface r2rml conformance sparqlmap conform r2rml specification test postgresql mysql hsql add additional database driver simply copy lib folder installation sparqlmap require follow dependency present main repos metamodel patch action cli sparqlmap allow follow command line interaction select action parameter dump create dump map database specify outputformat format parameter support turtle trig ntriples nquads triple serialization simply ignore graph definition mapping triple occur multiple graph consequently appear multiple time directmapping r2rml map create base concept direct map always yield turtle output query query execute return command line web sparqlmap sparql enndpoint expose access database endpoint accessible currently number limitation apply query process execute memory degrade performance enter view query map option exist map provide via r2rmlfile parameter parameter omit direct map create direct map generation modify follow attribute define fine case source mongodb jdbc database first make sure jdbc4 driver classpath sparqlmap already contain driver important rdbms close source rdbms add manually csv type csv detail check apache metamodel csv adapter wiki require parameter optional parameter default excel optional access besides type location need provide couchdb optionally
Semantic web;https://github.com/totogo/awesome-knowledge-graph;awesome knowledge graph curated list knowledge graph relate material database tool resource content infrastructure infrastructure graph database graph database triple store triple store graph compute framework graph compute framework graph visualization graph visualization language language manage host service manage host service knowledge engineer knowledge engineer knowledge fusion knowledge fusion knowledge graph knowledge graph general general semantic semantic academic academic material material official documentation official documentation community effort community effort infrastructure graph database multi graph database sql cypher support base postgresql highly available multi nosql database open source type safe graph database server gui write rust support atomic doc atomicdata dev json rdf gpu accelerate graph database open source database write cloud base multi database support tinkerpop3 fast transactional distribute graph database open source write dse graph layer top datastax enterprise cassandra solr spark distribute hyper relational database knowledge orient system distribute knowledge base metaweb freebase graph repository open source distribute graph database pluggable storage index backends high performance memory transactional graph database oltp graph database make space performance compatible small footprint fast analysis large rdf graph database oltp olap support distribute multi nosql database graph database engine complete distribute parallel graph compute platform enterprise support web scale analytics real time nebula truly distribute linear scalable lightning fast graph database sql like query language open source tinkerpop compliant oltp graph database pluggable storage bakcend similar janusgraph also support olap spark graphx western entity crawl majority web large commercially available knowledge graph graph database top postgres allow query sql graph query language include sql sparql graphql triple store high performance persistent graph database scale billion quad apache open source java framework semantic web link application eclipse formerly know sesame open source java framework process rdf include parse store inferencing query offer easy api connect lead rdf storage solution allow connect sparql endpoint create application leverage power link semantic web enterprise ready semantic graph database compliant w3c standard junction box drive enterprise individual agility derive semantic web link exist silo explore big ram relational comfort apache retire apache project open platform link graph compute framework apache iterative graph process system high scalability apache graph compute framework graph database oltp graph analytic system olap apache spark apache spark api graph graph parallel computation tencent fast distribute graph computation machine framework wechat graph visualization antv simple easy complete high performance graph visualization engine write javascript ant financial graph visualization platform software window mac linux keylines graph visualization tookits javascript react developer cambridge intelligence linkurious enterprise ready premise graph visualization analysis platform open source graph visualization platform software window mac linux graph visualization tookit javascript javascript library aim visualize large graph language query language dgraph base facebook graphql initiative create standard query language property graph database like sql relational database manage host service cosmosdb azure cosmos microsoft globally distribute multi key value document column graph database service janusgraph ibm janusgraph google cloud janusgraph google kubernetes engine back google cloud bigtable janusgraph amazon web service amazon dynamodb storage backend janusgraph neo4j neo4j graph end end graph database host community enterprise neo4j expert help development neptune amazon web fast reliable fully manage graph database service make easy application work highly connect datasets graph engine service huawei fully manage distribute scale graph query analysis service provide visualize interactive analytics platform graph database beta aliyun alibaba highly reliable available property graph database support acid tinkerpop gremlin query language tencent knowledge graph tencent stop platform graph database compute visualization currently available beta test chinese easy seo focus graph database host web commerce website apache marmotta baidu knowledge graph baidu stop platform knowledge graph application knowledge engineer harvest search rank knowledge web knowledge fusion dedupe library machine perform fuzzy match deduplication entity resolution quickly structure link discovery framework metric space knowledge graph general multilingual encyclopedic dictionary lexicographic encyclopedic coverage term semantic connect concept name entity large semantic relation make million entry call babel synset babel synset represent give mean contain synonym express mean range different language wikidata free collaborative multilingual secondary database collect structure provide support wikipedia wikimedia common wikis wikimedia movement anyone world google knowledge google knowledge graph million entry describe real world entity like people place thing large scale knowledge base originally state metaweb late aquired google google knowledge dbpedia crowd source community effort extract structure content information create various wikimedia project large scale english chinese bilingual knowledge graph structure integrate chinese wikipedia english wikipedia french wikipedia baidu baike gdelt gdelt project monitor world broadcast print web news nearly every corner every country language identify people location organization theme source emotion count quote image event drive global society every second every day create free open platform compute entire world huge semantic knowledge base derive currently yago knowledge million entity like person organization city etc contain million fact entity source yago github knowledge graph extract large chinese encyclopedia baidu hudong chinese never end language learner read web extract fact text find web page continuously improve semantic conceptnet freely available semantic design help computer understand mean word people microsoft concept short text understand open sememe base lexical knowledge base chinese free large lexical database english princeton university academic research aminer aim provide comprehensive search mine service researcher social microsoft microsoft academic employ advance machine semantic inference knowledge discovery help explore scholarly information powerful way ever academic search engine base knowledge graph include entity like author institution etc semantic free power research tool scientific literature collaborate academic publisher trustworthy authoritative scientific knowledge graph domain ecosystem smart cloud service good manage compliance base legal knowledge graph lkg integrate link heterogeneous compliance source include legislation case law standard private contract culture heritage knowledge graph british museum unify medical language system umls integrate distribute key terminology classification cod standard associate resource promote creation effective interoperable biomedical information system service include electronic health record knowledge base drug interaction pharmacology chemical structure target metabolism database know predict protein protein interaction material official documentation reference documentation reference documentation community effort graph tinkerpop3 centric book write kelvin transition sql gremlin daniel gremlin minimum survival kit gremlin user blog post series doan conference graph power neo4j graph independent graph conference day folk connect connect london bring together artificial intelligence semantic technology link graph database innovator think leader practitioner annually great conference conference expand theme track root primary conference knowledge graph link semantics include relate graph database machine technology practical case contribute contribution welcome read contribution guideline contribute first content copy awesome list graph infrastructure knowledge graph knowledge graph relate material chinese license extent possible law sitao waive copyright relate neighbor right work
Semantic web;https://github.com/EBIBioSamples/java2rdf;java2rdf simple library map java object java bean onto rdf owl contrary similar tool java2rdf base declare mapping javabeans rdf owl entity dedicate map java class configuration yet another xml schema via java annotation always access want spoil source min presentation show exerpts also another show slightly different quick dirty way define object mapping recommend former approach real application read something java2rdf biosd link project another java2rdf export rdf ondex knowledge note version implement base common rdf choose configure java2rdf jena rdf4j underline rdf framework support owlapi anymore
Semantic web;https://github.com/OnToology/OnToology;alt ontoology system collaborative ontology development process give repository owl ontoology survey produce diagram complete documentation validation base common pitfall find live version ontoology online team ahmad alobaid daniel garijo maria poveda idafen santa alba fernandez izquierdo oscar corcho license apache license want cite ontoology scientific technical report follow bibtex citation medium reference ontoology bib directly text alobaid garijo poveda villalon santana perez fernandez izquierdo corcho automate ontology engineer support activity ontoology journal web semantics fund development ontoology support spanish national project datos tin2016 tool list tool ontoology documentation user ontology engineer ontoology check step step please check also list frequently ask documentation developer next provide documentation developer want contribute development ontoology interest deploy ontoology locally server feel free contact interest contribute fix functionality automate test instal need github user act ontoologyuser choose username like add detail secret setup section automate test script script run_tests locally via script script run_web manual ssh ssh assume nix already ssh key mkdir git docker compose cache docker compose web venv bin manage runserver rabbitmq server consumer locally ontoology rabbit linux server nohup venv bin ontoology rabbit optional multiple thread nohup venv bin ontoology rabbit automatically make sure environment variable rabbit_processes set value development development script run_db locally access mongo locally machine access command line script run_docker secret setup add script secret_setup environment variable describe main rabbit_processes number rabbit process automatically mean automatically contribute workflow case contributor create new branch current live master make sure give presentive name case specific issue include issue number branch name change spinner push change new branch create pull request admins check base merge case add contributor yet contributor prefer workflow fork current live branch master create pull request review merge dependency notice test mock option github api reject pygithub maintainer make sure version ahmad88me pygithub see local setup linux test ubuntu debian mint fedora tool open terminal location choice export playground pwd copy paste command choice terminal script setup_docker_base pygithub upstream version either directly github pip locally git clone ontoology assume level directory pip pygithub change directory want
Semantic web;https://github.com/theodi/csv2json;csv json ruby gem convert csv json follow csv web specification
Semantic web;https://github.com/LinkedBrainz/MusicBrainz-R2RML;musicbrainz r2rml r2rml mapping musicbrainz schema entity entity basis musicbrainz server ultrawrap script provide dump must set environment variable ultrawrap_home musicbrainz r2rml dump entity entity artist track etc appropriate set mapping mapping artist ttl produce output form ntriples output artist virtual machine available virtualbox vmware etc replicate musicbrainz database note musicbrainz_compile_config property must reflect name musicbrainz_db default snapshot musicbrainz_db_slave default replicate database please report issue jira linkb project
Semantic web;https://github.com/Callidon/sparql-engine;sparql engine npm javascript style open source framework sparql query engine javascript typescript online main feature query engine top storage system support full feature sparql implement single class support sparql property implement advance sparql query rewrite technique transparently optimize sparql query process support full text search query full text search support custom sparql function custom function support semantic cache enable cache speed query evaluation reccurent pattern support sparql update support basic federate sparql service clause customize every step sparql query process thank modular architecture support sparql graph management table content installation installation get start get start preliminary preliminary rdf graph rdf graph rdf datasets rdf datasets sparql query sparql query enable cache enable cache full text search full text search federate sparql query federate sparql query custom function custom function advance usage advance usage customize pipeline customize pipeline customize query execution customize query execution documentation documentation aknowledgments aknowledgments reference reference installation get start sparql engine framework allow custom sparql query engine top storage system short support sparql query top storage system need implement subclass graph rdf graph provide access storage system gather graph default rdf datasets instantiate planbuilder sparql query execute sparql query start point provide integration available available preliminary sparql algebra typescript sparql engine framework library parse manipulate sparql query json object typescript compiltation custom package provide type information thus work sparql engine typescript need package want know custom type package see discussion rdf triple representation framework represent rdf triple javascript object find java like syntax shape object pipelinestage sparql engine framework pipeline iterators execute sparql query thus many method encounter framework need return pipelinestage object generate item type pull base fashion pipelinestage easily create follow array element type javascript yield element type emit element type event readable produce element type create new pipelinestage object follow fore information create manipulate pipeline please refer documentation rdf graph first thing implement subclass graph abstract class graph represent rdf responsible insert delete search rdf triple database main method implement graph find triple framework find rdf triple match triple rdf graph method must return pipelinestage consume find match rdf triple find similarly support sparql update provide graph implement graph insert triple graph delete triple method insert delete rdf triple graph respectively method must return fulfil insertion deletion operation complete finally sparql engine framework also let customize basic graph bgps evaluate rdf graph engine provide default base graph find method index nest loop join algorithm however wish supply bgp evaluation implement graph evalbgp triple method method must return pipelinestage find levelgraph find java like syntax subclass graph rdf datasets subclass graph ready need collection rdf graph call rdf default hashmapdataset make available framework subclassing sparql query finally sparql query rdf need planbuilder class responsible parse sparql query pipeline iterators evaluate enable cache sparql engine provide support automatic cache basic graph pattern evaluation semantic cache basically cache save bgps already evaluate engine want evaluate bgp look large subset bgp cache available cache speed query process default semantic cache disable turn planbuilder usecache planbuilder disablecache method respectively usecache method accept optional parameter provide semantic cache default memory lru store 500mb item minute full text search sparql engine provide non standard full text search functionnality allow user execute approximate string rdf term retrieve sparql query accomplish integration follow approach similar define several magic predicate give special mean encounter sparql query interpret configuration parameter full text search query simple way integrate full text search sparql query magic predicate search inside sparql join group follow query predicate search keywords neil gaiman value bind position triple pattern way full text search query allow user express complex sparql filter perform approximate string match rdf term annotate relevance score much match keywords high good rank represent descend order relevance score value bind default query magic predicate get access see note mean relevance score specific full text search full list magic predicate full text search query search define keywords search list keywords separate space matchallterms indicate value contain specify search term consider minrelevance maxrelevance limit search match minimum maximum relevance score respectively default score float number range precision digit minrank maxrank limit search match minimum maximum rank value respectively default rank positive integer start relevance bind term relevance score sparql variable rank bind term rank sparql variable complete keywords customize full text search provide custom full text search integrate backend simply need override fulltextsearch method graph class find full signature method relevant sparql engine framework provide default method compute relevance score average ratio keywords match word rdf term notice default suit production usage perform fine small rdf datasets possible always provide dedicate leverage backend sql database could gin gist federate sparql query sparql engine framework provide automatic support evaluate federate sparql service enable need set graph factory rdf evaluate sparql query graph factory create new rdf graph demand set need method detail take callback parameter invoke create new graph iri responsibility define graph creation logic depend application graph factory set nothing juste execute federate sparql query regular query like custom function sparql allow custom function expression query domain specific sparql engine framework provide support declare custom function sparql value function extension point sparql query language allow uri name function query processor define iri filter bind expression register custom function must create json object map function iri javascript function take variable number rdf term argument return follow new rdf term iri literal blank node rdf format array rdf term yield rdf term null value indicate function evaluation fail rdf term represent rdf rdf expose lot utility method create manipulate rdf term context custom sparql function follow show declaration simple custom function json object pas constructor planbuilder execute sparql query custom function query newly define custom sparql function advance usage customize pipeline class pipelineengine subclass main component sparql engine evaluate sparql operation define basic operation map filter etc manipulate intermediate evaluate sparql query default framework pipelineengine base implement sparql query execution plan pipeline iterators however able switch others pipelineengine pipeline setinstance pipelineengine provide default rxjspipeline base provide pure pipeline approach approach select default load framework vectorpipeline materialize intermediate pipeline computation step approach efficient cpu wise also consume lot memory import follow customize query execution planbuilder implement builder order create physical query execution plan give sparql query internally define stag generate operator execute type sparql operation invoke planbuilder need evaluate order modifier want customize query execution plan implement stage builder extend exist need configure plan builder find reference table stage builder sparql engine evaluate sparql query please see api detail executor sparql operation default stage builder symbol sparql_operation aggregate basic graph sparql_operation bgp sparql_operation bind sparql_operation distinct sparql_operation filter property sparql_operation property_path sparql_operation graph sparql_operation minus sparql_operation optional sparql_operation order_by sparql_operation service sparql_operation union sparql_operation update documentation generate documentation doc director acknowledgment framework develop since many contributor thank much contribution project full list amaze contributor corentin slaanaroth corentin create first version sparql engine research internship laboratoire science numerique ls2n web developer sii atlantique merlin rintarou merlin design first sparql compliance test framework research internship dustin dwhitney dustin implement support custom sparql function provide lot feedback early stag development julien lastshot97 julien implement support sparql property path evaluation research internship student university nantes arnaud folkvir arnaud contribute many bugfixes provide lot feedback throughout development framework software engineer sii atlantique thomas callidon thomas develop framework phd thesis team gestion donnees gdd supervise evolution ever since software engineer sii atlantique reference official w3c rdf official w3c sparql
Semantic web;https://github.com/netage/carml-cli;carml cli interface carml library moment work xml maven possible convert single possible convert folder conversion output stream rdf output add output format add map format
Semantic web;https://github.com/gtfierro/reasonable;reasonable nightly pypi owl reasoner reasonable performance performance compare performance reasonable evaluation consist load brick different size respective reason engine time long take produce materialization reasonable fast allegro 38x fast owlrl workload benchmark img benchmark png facilitate usage project generate bind project instal easy pip reasonable see also package work brick package provide generic interface reasoner several others usage look like rust see rust usage rust owl rule rule definition todo implement rdf rdfs entailment semantics describe note implement rule produce exception wait determine best way handle error equality semantics complete rule name note ref inefficient cause lot flux yes sym yes trans yes rep yes rep yes rep diff1 throw exception diff2 throw exception diff3 throw exception property axiom semantics complete rule name note prp yes prp dom yes prp rng yes prp yes prp ifp yes prp irp throw exception yes prp symp yes prp asyp throw exception yes prp trp yes prp spo1 prp spo2 yes prp eqp1 yes prp eqp2 yes prp pdw throw exception prp adp throw exception yes prp inv1 yes prp inv2 prp key prp npa1 throw exception prp npa2 throw exception class semantics complete rule name note yes thing yes nothing1 yes nothing2 throw exception yes int1 yes int2 yes uni yes com throw exception yes svf1 yes svf2 yes avf yes hv1 yes hv2 maxc1 throw exception maxc2 maxqc1 throw exception maxqc2 throw exception maxqc3 maxqc4 class axiom semantics complete rule name note yes cax sco yes cax eqc1 yes cax eqc2 yes cax throw exception cax adc throw exception datatype semantics development note publish new version reasonable tag commit version push tag github execute publish action upload pypi
Semantic web;https://github.com/jpcik/srbench;srbench srbench sparql rdf bench
Semantic web;https://github.com/CLARIAH/grlc;pypi grlc git repository link api constructor automatically web apis share sparql query grlc work please cite grlc grlc lightweight server take sparql query store github repository local filesystem list url translate link web apis enable universal access link user require know sparql query instead access web api quick tutorial quick usage tutorial check wiki list usage grlc assume collection sparql query like grlc create api operation sparql query collection query add api parameter operation parameter syntax allow query define query variable map api parameter api operation see query include special decorator decorator syntax add extra functionality api query location grlc load query collection different location github repository api git local storage api local specification api url type location specific feature accessible via different path however location type produce beautiful apis github repository api path grlc api github repository specify github user name owner repository name assume query store github repo point browser follow location grlc make git version control mechanism generate api base specific version query repository include commit sha url path grlc also subdirectory inside github repo include subdirectory url path local storage api path grlc generate api local directory computer grlc server configure location directory grlc server configuration grlc server configuration see also grlc instance api generate local directory api information load configuration folder must call local api config ini follow format specification api path grlc generate api yaml specification accessible web assume query list spec point browser follow location specification syntax grlc api specification yaml include necessary information create grlc api importantly list url decorate http dereferenceable sparql query contain follow field title title api description api description contact contact detail api owner include name url property licence url point licence api query list url sparql query header decorator grlc generate api api path location type point generate style api documentation api documentation page explore available api call execute individual api call also view swagger spec api visit swagger grlc query execution call api endpoint grlc execute sparql query endpoint combine supply parameter decorator option specify endpoint add sparql_endpoint config ini grlc server configuration add endpoint parameter request add endpoint_in_url false decorator want see endpoint parameter swagger api add endpoint decorator endpoint add url endpoint single line endpoint txt within github repository contain query endpoint call return execute query json representation rdflib query queryresult format content negotiation via http accept header json response schema response modify transform decorator transform decorator syntax special decorator available make swagger look nice increase functionality provide comment start query make still syntactically valid sparql decorator start follow list available decorator function summary create summary query operation show next operation name swagger syntax equivalent api description create description query operation show description operation swagger syntax equivalent api endpoint specify query specific endpoint syntax equivalent api pagination paginate group link previous next first last page provide http response header avoid pollute payload see detail syntax equivalent api method indicate http request method get post support syntax equivalent api tag assign tag query operation query operation tag group together swagger syntax equivalent api default set default value swagger specific parameter query syntax equivalent api enumerate indicate parameter query operation get enumeration get dropdown menu swagger give value sparql endpoint value enumeration variable also specify query decorator save endpoint request speed api generation syntax equivalent api notice plain variable name without sparql basil convention var1 instead _var1_iri endpoint_in_url allow disallow endpoint parameter provide url parameter allow default syntax equivalent api transform allow query convert specify json structure syntax notice response content type must set application json transformation take effect syntax equivalent api apis check find source many github see grlc user grlc different way via grlc grlc grlc via docker docker grlc docker start grlc server via pip pip grlc start grlc server grlc library detail option give grlc easy way grlc visit service convert sparql query restful api query store github repo github repository list specification specification docker grlc via need work installation docker deploy grlc pull late image docker docker image allow setup several environment variable grlc_server_name grlc_github_access_token grlc_sparql_endpoint pip want grlc locally library grlc machine grlc register pip prerequisite grlc follow requirement python3 development depend pip base requirement satisfy grlc like grlc instal several option stand alone server standalone server wsgi server wsgi server library grlc library standalone server grlc include command line tool start grlc server wsgi server grlc wsgi server gunicorn follow want gunicorn configuration gunicorn_config note since gunicorn work window waitress instead want grlc system boot service find upstart script upstart upstart grlc docker conf grlc library grlc library directly script see usage find grlc server configuration regardless grlc server need configure config ini look config config default ini see structure configuration contain follow variable github_access_token access token github access token communicate github api local_sparql_dir local storage directory local query local storage locate server_name name server grlc sparql_endpoint default sparql endpoint user password sparql endpoint default authentication require specify none require debug enable debug level log github access token order grlc communicate github need tell grlc access token get github personal access token github profile page _settings_ _developer settings_ _personal access tokens_ _generate new token_ get access token string copy save somewhere safe github let see edit config ini docker compose yml value environment variable grlc_github_access_token contribute grlc need continue bring semantic web content developer application user matter curious user developer researcher many way contribute bug report request new feature set environment start hack check contribute contribute guideline join today problem still plenty contribute share experience grlc twitter mention handle grlcldapi good html let know mailto albert meronyo gmail com relate tool web interface edit sparql query save github grlc apis package bring link environment easily grlc hay list grlc wikimedia relate tool grlc user say flavour link carlos martinez convert sparql endpoint egon willighagen quote grlc user cool project convert random sparql endpoint openapi endpoint enable quickly integrate new api requirement matter second without worry configuration deployment system store sparql query github query favourite program language javascript etc web api include swagger documentation easily load web page contributor albert rinke carlos copyright albert merono rinke hoekstra carlos martinez license mit license see license txt license txt academic publication albert merono penuela rinke hoekstra grlc make github taste like link apis semantic web eswc satellite event heraklion crete greece may june revise select lncs albert merono penuela rinke hoekstra sparql2git transparent sparql link api curation via git proceed 14th extend semantic web conference eswc poster demo track portoroz slovenia may 28th june 1st albert merono penuela rinke hoekstra automatic query centric api routine access link semantic web iswc 16th international semantic web conference lecture note computer science vol pasquale lisena albert merono penuela tobias kuhn raphael troncy easy web api development sparql transformer semantic web iswc 18th international semantic web conference lecture note computer science vol
Semantic web;https://github.com/theodi/csv2rdf;csv rdf ruby gem convert csv rdf follow csv web specification installation gem specific_install sudo gem specific_install usage csv2rdf myfile csv
Semantic web;https://github.com/owlcs/ont-api;ont api summary ont api rdf centric java library work owl info see dependency apache requirement java license apache license version gnu lgpl version
Semantic web;https://github.com/jsonresume/resume-schema;json resume schema github npm late release standard specification schema get start likely json resume schema available contribute encourage anyone interest participate formation standard join discussion also feel free fork project submit new idea add json resume schema standard make sure format keep check please editorconfig editor choice versioning json resume schema adhere semantic versioning violation scheme report bug specifically patch minor version release break backward compatibility version immediately yank new version immediately release restore compatibility change break public api introduce major version release policy specify dependency json resume schema pessimistic version constraint digit precision automatic semver system pull request title format major version bump far schema resume standard
Semantic web;https://github.com/garlik/4store;4store 4store efficient scalable stable rdf database 4store design steve harris develop garlik underpin semantic web application provide base platform around year time hold query database 15gt support web application people get start section instal prerequisite instal 4store 4store instal frontend tool installation hint instal prerequisite rdf parser sparql parser bite raptor freshly extract source configure libdir usr local lib64 make sudo make similarly bite rasqal configure enable query language laqrs sparql rdql libdir usr local lib64 make sudo make ensure pkg_config_path set correctly ensure etc conf include usr local lib64 sudo ldconfig instal 4store autogen configure make make 4store usr local bin bos instal frontend tool frontend tool non cluster frontends pre requisite instal frontend tool yum pcre devel avahi avahi tool avahi devel src common src common make src frontend src frontend make make installation hint make sure var lib 4store exist cluster need exist backend nod user user create new permission write directory cluster test cluster tool single machine frontend must etc cluster list machine cluster avoid problem avahi dbus connection modify etc dbus system avahi dbus conf increase max_connections_per_user increase max_match_rules_per_connection optional
Semantic web;https://github.com/fafalios/sparql-ld;sparql sparql extension fetch query link jena arq service extension allow fetch query integrate sparql query store local endpoint come online rdf standard format embed web page rdfa come json come dereferenceable uris rdf dynamically create web service web api come query sparql endpoint simply service operator sparql federate distinctive characteristic sparql enable fetch query even datasets return portion query discover query execution time sparql actually generalization sparql sense every query answer original sparql also answer sparql specifically iri give service operator correspond sparql endpoint work exactly original sparql remote endpoint evaluate query return otherwise instead return error bind try fetch query triple may exist give resource sparql test jena arq nevertheless may also work jena arq release demo prototype implemention sparql endpoint support sparql available relate publication full describe sparql demo describe sparql optimize execution sparql query query reorder source sparql query evaluate sparql endpoint transform sparql query answer link traversal without access endpoint source query follow query answer sparql query return author pavlos fafalios main contributor repository together number publication number different conference publication notice query combine integrate embed html web page rdfa line come dereferenceable uris derive query execution time line iii come query another endpoint line note also query answer endpoint implement extension independently local content source implement sparql create follow class arq sparql_ld_queryexamples also update follow class jena arq com hpl jena sparql engine queryexecutionbase repository contain class also provide zip contain original jena arq source april well extend already jena arq jar jena arq 0_sparql jar correspond extend jena source jena arq sources_sparql jar installation directly provide already extend jena arq jar jena arq 0_sparql jar original jena arq source add new class replace update class add endpoint lst project folder level pom xml add follow dependency pom xml allow load query rdfa source try main class arq sparql_ld_queryexamples
Semantic web;https://github.com/ucbl/HyLAR-Reasoner;hylar reasoner hylar rule base incremental reasoner web cite hylar hylar improve hybrid location agnostic reason incremental rule base table content description description hylar locally hylar locally hylar browser hylar browser hylar server hylar server support inference support inference publication publication description hylar brid ocation gnostic incremental easoner know rdf base librairies rdfstore sparqljs rdf ext provide additional incremental reason engine hylar either locally npm module globally server come browserified version hylar rely rdfstore triplestore therefore support json turtle serialization sparql support detail inference initially support hylar describe bottom page support inference hylar support custom business rule hylar locally installation hylar locally launch npm save hylar load ontology import hylar classify ontology query load take parameter rawontology string raw ontology mimetype string either text turtle text application json keepoldvalues boolean true keep old value classfying false overwrite default false query ontology load hylar able process sparql query query follow parameter query string sparql query create rule hylar support insertion custom forward chain conjunctive rule form triple_head_x triple_body_x respectively triple input consequence triple infer output form subject predicate object follow variable uri literal hello world predicate also comparison operator rule add first param raw rule second param rule name rule removal first param either rule name raw rule hylar browser npm clientize generate hylar client include script page line node module version instantiate hylar const new hylar call method query load parseandaddrule hylar server installation npm hylar server command hylar follow optional parameter port port default persist deactivate database persistence activate default graph directory local datasets save entailment either default reason method either incremental default tag base provide reason proof hylar server api classify file_name get load parse classify file_name ontology directory note specify ontology mimetype detect automatically extension classify get allow classify ontology string require original serialization type body parameter filename absolute path ontology process mimetype serialization ontology mimetype text turtle text application json query get sparql query load ontology hylar query body parameter query sparql query string rule put put list custom rule add reasoner body parameter rule array conjunctive rule support inference hylar support subset owl rdfs rule rdf1 rdfs2 rdfs3 rdfs4a rdfs4b rdfs5 dfs6 rdfs7 rdfs8 rdfs9 rdfs10 rdfs11 rdfs12 rdfs13 support rdfs axiomatic triple except axiom relate rdf seq rdf bag owl rule prp dom prp rng prp prp ifp prp irp prp symp prp asyp prp trp prp spo1 prp spo2 prp eqp1 prp eqp2 prp pdw prp inv1 prp inv2 prp npa1 prp npa2 nothing2 com svf1 svf2 avf hv1 hv2 maxc1 maxc2 maxqc1 maxqc2 maxqc3 maxqc4 cax sco cax eqc1 cax eqc2 cax scm scm sco scm eqc1 scm eqc2 scm scm scm spo scm eqp1 scm eqp2 scm dom1 scm dom2 scm rng1 scm rng2 scm scm svf1 scm svf2 scm avf1 scm avf2 axiomatic triple yet support publication location agnostic mechanism terdjimi medini mrissa may hylar hybrid location agnostic reason eswc developer workshop incremental reason web hylar terdjimi medini mrissa april hylar improve hybrid location agnostic reason incremental rule base update proceed 25th international conference companion world wide web international world wide web conference steer committee tag base maintenance terdjimi medini mrissa april web reason fact tag companion web conference web conference international world wide web conference steer committee
Semantic web;https://github.com/sparna-git/Sparnatural;sparnatural natural way sparql query sparnatural visual sparql query builder write javascript support creation basic graph pattern selection value autocomplete search dropdown list configure json owl configuration edit protege define class property present component documentation screencast sparnatural dbpedia gif play online demo get start get start read follow readme read look thing work sparnatural demo dbpedia index html particular look specification write look source adapt sparnatural demo dbpedia index html change configuration adapt sparql endpoint url get start docker clone git repository docker compose docker compose open browser feature query structure basic query pattern select type entity search documentation screenshot class selection png select type relate entity documentation screenshot object type selection png case possible type relation connect entity get select automatically select value relate entity case dropdown list documentation screenshot value selection png congratulation first sparql query criterion complete documentation screenshot criterion png fetch generate sparql query documentation screenshot sparql png enable navigate graph documentation png combine criterias documentation png select multiple value criterion documentation png value selection sparnatural offer currently way select value criterion autocomplete field dropdown list simple string value date range year date precision date range search period name bronze age selection autocomplete field documentation autocomplete png dropdown list documentation list png tree selector documentation tree png string value text search documentation search png date range year date precision documentation time date png date range search period name chronocultural period documentation chronocultural period png require gazeeter period link visualize boolean selection documentation boolean png value selection useful type entity navigate graph without ability select instance entity documentation value png multilingual sparnatural multilingual support display label class property multiple language support optional filter exist sparnatural support optional filter exist keywords apply whole branch query see search french museum name italian painter display _if any_ documentation optional gif limitation union bind etc sparnatural support creation union service bind etc sparql endpoint need cors enable send sparql query service host domain name web page sparnatural include sparql endpoint need allow cross origin resource share sparql proxy worry integration specification class property component configurable owl configuration editable protege look specification get idea alternatively also json ontology json configuration contain class definition property definition domain range font awesome icon possible directly font awesome icon place icon embed application integrate sparnatural webpage look page map query structure different graph structure map class property config correspond sparql property path correspond class uri sparqlstring json key call expandsparql sparnatural instance pas original sparql query replace mention original class property uri correspond sparql string
Semantic web;https://github.com/arces-wot/SEPA;table content introduction introduction demo demo quick start quick start configuration configuration usage usage contribute contribute history history credit credit introduction sepa parql vent rocessing rchitecture publish subscribe architecture design support information level interoperability architecture top generic sparql endpoint conformant sparql publisher subscriber standard sparql notification event change rdf knowledge base express term add remove sparql bind since previous notification know sepa architecture vision please refer sepa proposal formalize follow unofficial dratfs sparql event process architecture contribute sparql secure event contribute sparql subscribe contribute json sparql application profile contribute demo demo show subscription notification doc sepademo gif quick start sepa java jar engine jar sparql protocol compliant service show sepa check basic functionality engine hacker configuration sepa engine different sparql endpoint must support sparql protocol endpoint configure json endpoint jpar furthermore engine various parameter configure standard behavior set another json call engine jpar repository find version endpoint something jpar accord underlie sparql endpoint rename correct endpoint jpar default version endpoint jpar configure engine local instance blazegraph sparql protocol default version engine jpar configure engine listen incoming sparql request follow url query update subscribe unsubscribe localhost subscribe secure query secure update secure subscribe unsubscribe localhost secure subscribe regitration token request log sepa apache default configuration store log4j2 xml provide distribution reside engine folder add follow jvm directive force java dlog4j configurationfile log4j2 xml jar engine jar security default engine implement simple memory oauth client credential jks store key certificate sign verification default sepa jks provide include single certificate password store key sepa2017 face problem provide jks please delete sepa jks create new follow keytool genkey keyalg rsa alias sepakey keystore sepa jks storepass sepa2017 validity keysize java jar engine jar help list option java create access modify jks sepa also implement security mechanism ldap extend default store client information ldap server test apache keycloak authentication base openid connect manage security configure within engine jpar follow type assume follow value local ldap keycloak type ldap enable ldap starttls jmx monitor sepa engine also distribute default configuration jmx property include jmxremote password jmxremote access password user grant remember change password permission chmod jmxremote password enable remote jmx engine must follow java dcom sun management config jmx property jar engine jar possible monitor control important engine parameter default port root root credential grant full control read write usage sepa engine configure command line java jar engine jar help list available setting java jmx jvm log4j jar sepaengine_x jar help secure true engine engine jpar endpoint endpoint jpar jks option ldap option isql option secure overwrite current secure option engine jpar engine specify json configuration parameter engine default engine jpar endpoint specify json configuration parameter endpoint default endpoint jpar help print help jmx dcom sun management config jmx property enable jmx remote managment jvm useg1gc log4j dlog4j configurationfile path log4j2 xml jks option sslstore jks ssl default ssl jks sslpass password jks default sepastore jwtstore jks jwt key default jwt jks jwtalias alias jwt key default jwt jwtstorepass password jks default sepakey jwtaliaspass password jwt key default sepakey ldap option ldaphost host default localhost ldapport port default ldapdn domain default sepatest com ldapusersdn domain default null ldapuser username default null ldappwd password default null isql option isqlpath location isql default usr local virtuoso opensource bin isqlhost host virtuoso default localhost isqluser user virtuoso default dba isqlpass password virtuoso default dba contribute welcome part sepa community find bug feel free open issue github also feel free ask question detail check contribute guideline contribute besides want help sepa development follow simple step fork create feature branch git checkout new feature check ide specific instruction stuff provide test feature applicable commit change git commit add feature push branch git push origin new feature submit pull request pull request unit test high likelihood accept restrictive afraid send contribution clone eclipse particular restriction ide choice provide short guide import github clone project inside eclipse ides work fine open eclipse import maven choose check maven project scm field scm url choose git add clone address github git find tap find scm connector m2e marketplace project clone enjoy maven sepa engine maven project compose sub project client api engine first need client api skip junit test fact clien api junit test include integration test require sepa engine engine command create executable inside target directory know maven please refer official history sepa inspire influence sepa author involve development smart since main difference beetween sepa smart protocol compliant sparql introduction security layer base json web token client authentication sepa software component implement scratch credit sepa stand sparql event process architecture sepa promote maintain dynamic link web thing research advance research center electronic system ercole castro university license sepa engine release gnu sepa apis release gnu
Semantic web;https://github.com/SemWebCentral/parliament;news april release parliament version change note parliament recently move github project long time home add swrl rule engine add script parliament service daemon systemd base linux distribution include centos ubuntu long query time add linear growth setting parliament resource statement table inference engine recognize class subclass decrease likelihood ungraceful shutdown corrupt fix numerous bug parliament introduction parliament high performance triple store reasoner design semantic parliament initial development fund darpa daml program name daml extend raytheon bbn technology bbn internal program bbn release parliament open source project bsd bbn migrate parliament open source project license parliament trademark raytheon bbn technology name group owl properly call _parliament_ owl
Semantic web;https://github.com/GeoKnow/TripleGeo;triplegeo open source tool extract geospatial feature rdf triple triplegeo utility develop fp7 project generic purpose open source tool integrate feature geospatial database rdf triple triplegeo base open source utility web site quick start triplegeo option either source apache ant prepackaged binary jar ship source ant mkdir ant compile package jar ant ant package finish successfully generate jar place jar prepackaged jar order triplegeo extract triple spatial user follow step window platform similar linux well current software bundle extract zip separate folder temp open terminal window linux navigate directory triplegeo extract temp triplegeo master directory must hold license convenience place configuration option conf although specify another path configuration like normally folder must lib subdirectory require library make sure actual triplegeo jar bin subdirectory verify java jre sdk late instal currently instal version java check java version command line next specify property require configuration option conf must specify correct path parameter inputfile outputfile tmpdir relative executable case triple extract esri shapefiles give follow command line java lib bin triplegeo jar geoknow athenarc triplegeo shptordf option conf make sure specify path jar correct must modify path library configuration command path contain license specify step conversion periodically issue notification progress note large datasets record conversion may take several minute soon process finish triple write user notify total amount extract triple overall execution time usage current distribution come dummy configuration option conf contain indicative value important property access esri shapefiles spatial dbms self contain brief instruction guide extraction process jar command line several alternative mode depend input source course change directory separator understand case nix system case triple extract esri shapefiles assume binary bundle together triplegeo jar give command like java lib jar triplegeo jar geoknow athenarc triplegeo shptordf option conf alternatively triple extract geospatially enable dbms oracle spatial give command like java lib jar triplegeo jar geoknow athenarc triplegeo wkt rdbtordf option conf wait process get finish verify output accord specification current distribution also offer transformation geographical format also support gml datasets align inspire directive specifically triplegeo transform rdf triple geometry available gml geography markup language kml keyhole markup language also handle inspire align gml theme annex assume binary bundle together triplegeo jar may transform datasets follow case triple extract gml give command like java lib jar triplegeo jar geoknow athenarc triplegeo gmltordf case triple extract kml give command like java lib jar triplegeo jar geoknow athenarc triplegeo kmltordf case triple extract inspire align gml must first configure xsl stylesheet inspire_main xsl specific parameter give command like java lib jar triplegeo jar geoknow athenarc triplegeo inspiretordf alternative way triplegeo utility jar provide via ant target case shapefile input ant shp dconfig option conf case relational database ant rdb dconfig option conf case gml input ant gml dinput sample gml doutput sample rdf case kml input ant kml dinput sample kml doutput sample rdf case inspire align xml input ant inspire dinput sample xml doutput sample rdf indicative configuration several case available input current version triplegeo utility access geometry esri shapefiles widely base format store geospatial feature geographical store gml geography markup language kml keyhole markup language inspire align datasets theme annex gml format address administrative unit cadastral parcel geographicalnames hydrography protect sit transport road several geospatially enable dbms include oracle spatial postgis mysql ibm db2 spatial extender sample geographic output term output serialization triple obtain follow format rdf xml default rdf xml abbrev triple turtle ttl concern geospatial representation triple export accord several geometric type include point linestrings polygon point feature point feature triple write local readily import triple store license content project license
Semantic web;https://github.com/AKSW/ShacShifter;shacshifter travis coverage shacshifter shape shifter shape constraint language various format currently focus convertig shacl nodeshape rdforms installation usage dependency pip requirement txt start bin shacshifter help usage shacshifter shacl output rdforms wisski html optional argument help show help message exit shacl shacl shacl input shacl output output output output rdforms wisski html format rdforms wisski html output format
Semantic web;https://github.com/epimorphics/qonsole;qonsole simple console sparql query suppose link publish web would like provide user mean sparql query explore sparql end point allow http get post command send query get back easy enough put html form user type query get back necessarily helpful user browser hit back button post query mean text input control empty user lose query type make iterative development query hard provide sample query get user start suggestion idea manage prefix make huge difference readability query compare rdfs comment return value sparql form generally represent text format mime type text csv make user computer open return another program spreadsheet plain text hard explore open different application take user focus away task edit query explore see demo bath water quality qonsole provide follow feature edit control sparql syntax highlight undo familiar edit feature courtesy display query return page configurable set query user select click configurable set pre declare prefix ability add new prefix dynamically include look well know prefix user add remove prefix declaration edit window click choice return format include xml json plain text xml json display structure editor window easy browse default return table control sortable column page search qonsole free open source software apache develop epimorphics add qonsole page clone git repository individually github demo page show variant lay element page body qonsole need javascript need include qonsole configure pas json structure qonsole init call currently config object allow specify element available sparql end point value config element json object whose key short reference available endpoint whose value url default end point always provide goal allow different query potentially different specific sparql endpoint endpoint default prefix share list pre define prefix prefix list element add query may select single click value json object whose key prefix short name whose value uris prefix bwq interval stats rdf rdfs owl xsd query pre define query element define query user select base query value json array element query note prefix need declare query query text declare config structure query key access remotely different url queryurl key query name property name bath water query select predicate object nwhere rdfs label spittal predicate object name owl class query select class label description nwhere class owl class optional class rdfs label label optional class rdfs comment description name property name bath water queryurl list property default query get share prefix declare configuration object see however always necessary simple query may easy read prefix show actually mechanism control prefix display query firstly query include prefix declaration prefix show alternatively list prefix key query prefix key configuration object query name property name bath water query select predicate object nwhere rdfs label spittal predicate object prefix rdfs
Semantic web;https://github.com/castagna/SARQ;sarq free text index sparql sarq combination arq solr give arq ability perform free text search remote solr server lucene index solr additional information access rdf graph storage graph experimental unsupported index jena indexbuildermodel builder new builder indexstatements liststatements builder commit configure arq solr sarq setdefaultindex builder getsolrserver sparql query sarq search property function prefix sarq select doc light light score sarq search text acknowledgement design part take larq see todo fix fail test add test double check unique key make sense consider multivalue true index subject possible useful test solr add title foo add title bar title multi value field happen add require true schema xml appropriate add custom rank field combine exist rank investigate allowdups true false appropriate safe test
Semantic web;https://github.com/dice-group/DEER;deer gnu affero general public license java rdf enrichment framework deer modular extensible software system efficient computation arbitrary operation rdf datasets atomic operation involve process dub enrichment operator configure rdf make deer native semantic web citizen enrichment operator map nod direct acyclic graph complex enrichment connection nod represent intermediary datasets deer bundle deer single jar execute docker docker image declare volume plugins plugins dynamically load configuration well input output reside deer server docker expose port image accept argument deer cli jar configuration configuration deer server maven documentation detail information extend deer please read consult developer release new version
Semantic web;https://github.com/gjhiggins/RDFAlchemy;rdfalchemy abstraction layer allow developer familiar dot notation access update rdf triplestore rdfalchemy orm object rdf mapper graph sqlalchemy orm object relational mapper relalational database see homepage doc detail
Semantic web;https://github.com/castagna/GeoARQ;geoarq geoarq lucene spatial via arq property function allow search nearby location rdf instance wgs84 geo position rdf vocabulary represent geographic coordinate index experimental unsupported index jena modelindexersubject indexer new modelindexersubject target lucene indexer indexstatements liststatements indexer close configure arq spatial lucene index indexsearcher searcher indexsearcherfactory create target lucene geoarq setdefaultindex searcher sparql query nearby property function find airport close bristol latitude longitude prefix prefix rdfs prefix geoarq prefix asc select label asc largeairport rdfs label lavel geoarq nearby within bound box prefix prefix rdfs prefix geoarq prefix asc select label asc largeairport rdfs label lavel geoarq within todo add test clean add support add ability specify radius geoarq nearby add ability specify number within radius geoarq nearby investigate geohash double check lucene misc dependency necessary add ability index remote sparql endpoint
Semantic web;https://github.com/ktym/d3sparql;d3sparql javascript library execute sparql query transform json visualization description semantic web technology get widely information science along link open lod initiative rdf expose sparql endpoint around world sparql query search endpoint obtain sparql query xml format sparql query json format essentially tabular structure effectively represent sparql appropriate visualization method highly demand create control dynamic graphical representation web javascript library get popularity generic framework base widely accept web standard svg javascript html5 variety visualization implement library already freely available however depend predefined json structure differ json structure return sparql endpoint therefore expect largely reduce development cost semantic web visualization javascript library available transform sparql query json format json structure consume d3sparql develop generic javascript library fill gap query sparql endpoint ajax call provide various callback function visualize obtain currently support chart barchart piechart scatterplot graph force graph sankey graph tree roundtree dendrogram treemap sunburst circlepack map coordmap namedmap table htmltable htmlhash usage live demo codebase publication presentation license d3sparql library distribute license bsd changelog see detail project start make publicly available github add bar line chart scale add default svg attribute equivalent style visualization look good without default user customize style add description visualization function introduce name space add pie doughnut sankey diagram name base map merge pull request visualize coordination base map update set default value option add readme update namedmap option scale merge pull request insert visualization specify dom instead append body improve customize target dom change clear dom content append element update visualization update keep value associate nod value reflect visualization debug mode introduce assign anytime enable verbose console log incorporate useful dig nest tree leaf may value
Semantic web;https://github.com/yasarkhangithub/SAFE;safe sparql federation rdf cub access control safe sparql query federation engine enable decentralise access clinical information represent rdf cub control access experimental setup experimental setup datasets set query evaluation safe describe safe source checkedout safe github datasets group datasets explore different case internal external first group datasets internal collect clinical partner involve primary case datasets contain aggregate clinical represent rdf cub privately restrict second group datasets external collect legacy link contain sociopolitical economical statistic form rdf cub world bank imf international monetary fund eurostat fao food agriculture organization unite nation transparency international external datasets evaluation experiment safe safe external setting load different sparql endpoint separate physical machine experiment carry local cost remain negligible machine experiment ghz core processor ram hard disk bite window host virtuoso open source sparql endpoint host physically separate machine detail parameter configure virtuoso list table virtuoso version experiment table sparql endpoint configuration sparql endpoint port url virtuoso config parameter imf system sparql nob mdf mqm world bank system sparql nob mdf mqm system sparql nob mdf mqm eurostat system sparql nob mdf mqm fao system sparql nob mdf mqm nob numberofbuffers mdf maxdirtybuffers mqm maxquerymem query total query design evaluate compare query federation performance safe fedx hibiscus splendid base metric define define query federation external datasets federation internal datasets query external query make available due owner restriction query evaluation experiment safe safe metric query type measure number source select average source selection time average query execution time number ask request issue source team yasar muhammad aidan muntazir qaiser dietrich ratnesh
Semantic web;https://github.com/AKSW/QuitDiff;quit diff requirement quitdiff need version instal require package pip pip requirement txt git difftool add follow section gitconfig home directory git config git work directory difftool quitdiff cmd quitdiff local local remote remote merge merge base base difftool quitdiff sparql cmd quitdiff diffformat sparql local local remote remote merge merge base base difftool quitdiff eccrev cmd quitdiff diffformat eccrev local local remote remote merge merge base base git diff tool call follow command git difftool quitdiff git difftool quitdiff head head git diff add follow section gitconfig home directory git config git work directory diff quitdiff command quitdiff follow gitattributes git work directory diff quitdiff trig diff quitdiff diff quitdiff ttl diff quitdiff rdf diff quitdiff git diff call follow command git diff git diff head head command line parameter tool git diff git difftool git diff git diff parameter path old old hex old mode new new hex new mode git difftool local set name temporary contain content diff pre image remote set name temporary contain content diff post image merge name compare base provide compatibility custom merge tool command value merge local old version remote new version license copyright natanael arndt norman radtke program free software redistribute modify term gnu general public license publish free software foundation either version license option late version program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail receive copy gnu general public license along program see please see license license txt information
Semantic web;https://github.com/jimregan/wordnet-lemon-to-w3c;wordnet lemon w3c sameas link lemon conversion wordnet w3c conversion
Semantic web;https://github.com/edumbill/doap;doap description project doap project create xml rdf vocabulary describe software project particular open source project addition develop rdf schema doap project aim provide tool support popular program language homepage doap maintainer edd wild jam kjetil kjernsmo schema live version schema namespace uri keep synchronize master branch github repository
Semantic web;https://github.com/SDM-TIB/SDM-RDFizer;sdm rdfizer late pypi pypi project present sdm rdfizer interpreter map rule allow transformation structure rdf knowledge graph current version sdm rdfizer assume map rule define rdf map language rml dimou sdm rdfizer implement optimize structure relational algebra operator enable efficient execution rml triple map even presence big sdm rdfizer able process heterogeneous source csv json rdb xml process set rml rule triplesmap multi thread safe procedure sdm rdfizer sdm rdfizer workflow new feature present sdm rdfizer version4 version sdm rdfizer address problem efficiency creation term memory storage sdm rdfizer version4 include new module call triplesmap plan tmp define optimize evaluation plan execution triple map additionally version4 extend previously include module triplesmap execution tme introduce new operator compress store structure new feature configure new parameter add configuration name large_file order perform extensive empirical evaluation sdm rdfizer version4 term execution time memory usage experiment set empirically compare impact duplicate rat size complexity execution order triple map version sdm rdfizer version4 version3 exisiting engine icluding rmlmapper term execution time memory usage experiment perform different benchmark datasets include 10k 100k record duplicate rat map rule different complexity simple object map object reference map object join map datasets scale value csv csv csv csv different map rule simple object map object join map explain experiment summarize follow overview execution time execution time comparison observe figure version sdm rdfizer complete testbeds successfully engine case timeout sdm rdfizer version3 rocketrml version competitve simple testbeds however sdm rdfizer version4 show best performance testbeds overview memory consumption memory consumption comparison illustrate figure sdm rdfizer version4 small peak memory usage compare previous version sdm rdfizer execution sdm rdfizer describe follow research report enrique iglesias samaneh jozashoori david chaves fraga diego collarana maria esther vidal sdm rdfizer rml interpreter efficient creation rdf knowledge graph 29th acm international conference information knowledge management cikm samaneh jozashoori david chaves fraga enrique iglesias oscar corcho maria esther vidal funmap efficient execution functional mapping knowledge graph creation 19th international semantic web conference research track iswc samaneh jozashoori maria esther vidal mapsdi scale semantic integrationframework knowledge graph creation 27th international conference cooperative information system coopis david chaves fraga kemele endris enrique iglesias oscar corcho maria esther vidal parameter affect construction knowledge graph 18th international conference ontology database application semantics odbase david chaves fraga anton adolfo jhon toledo oscar corcho onett systematic knowledge graph generation national access point 1st international workshop semantics transport locate semantics david chaves fraga freddy priyatna andrea cimmino jhon toledo edna ruckhaus oscar corcho gtfs madrid bench benchmark virtual knowledge graph access transport domain journal web semantics additional reference dimou dimou sande colpaert verborgh mannens walle rml generic language integrate rdf mapping heterogeneous proceed workshop link web locate 23rdinternational world wide web conference www project sdm rdfizer sdm rdfizer creation knowledge graph h2020 project national project scientific management group participate project include iasis big precision medicine base patient insight iasis rdf knowledge graph comprise rdf triple collect heterogeneous source rml triple map bigmedilytics lung cancer pilot rml triple map create lung cancer knowledge graph around source 500m rdf triple clarify predict poor health status specific oncological treatment lucat improvit platoon euvsvirus hackathon april sdm rdfizer create knowledge4covid knowledge graph participation team scientific management group june 7th comprise 28m rdf triple describe fine grain level covid scientific publication covid relate concept substance drug drug interaction molecular disfunction sdm rdfizer also h2020 eit digital spanish national project ontology engineer group technical university madrid participate project mainly focus transportation smart city domain include h2020 sprint performance scalability test semantic architecture interoperability framework transport across europe eit snap innovation project application semantic technology national access point open city national project create common share vocabulary spanish city drugs4covid nlp annotation metadata scientific covid virus integrate almost 44m fact triple sdm rdfizer create project sdm rdfizer also virtual platform h2020 european joint programme rare disease instal sdm rdfizer pypi github docker visit repository sdm rdfizer also take look demo sdm rdfizer parameter configure sdm rdfizer faq configuration easily customize configuration set feature sdm rdfzier offer change value parameter config description parameter possible value provide order large_file new feature provide sdm rdfizer version4 version rml test case see sdm rdfizer rml test case rml sdm rdfizer version4 test late publish test release experimental evaluation see experimental evaluation sdm rdfizer version sdm rdfizer experiment license work license apache author sdm rdfizer develop member scientific management group tib ongoing research effort development coordinate supervise maria esther vidal maria vidal tib strongly encourage please report issue sdm rdfizer contact email create new issue github sdm rdfizer implement enrique iglesias current version iglesias l3s guillermo betancourt version guillermojbetancourt gmail com supervision samaneh jozashoori samaneh jozashoori tib david chaves fraga dchaves upm kemele endris kemele endris tib
Semantic web;https://github.com/labra/shaclex;shaclex scala shex shacl project contain codacy maven introduction project contain implement scala underlie mechanism purely functional approach library handle rdf simple rdf apache another mean possible library validate rdf rdf library well external sparql endpoint installation compilation project compilation well java sbt test compile test command line usage compile program command line tool possible program inside sbt validate rdf shacl also possible jena top braid shacl api validate rdf shex validate rdf sparql endpoint follow validate rdf nod wikidata gene wiki interactive mode sbt usually fast sbt command open interactive sbt inside execute different command binary mode fast way shaclex compile generate comand line binary follow command generate binary contain compress binary programmatic usage shaclex library invoke programmatically simple project validate simple validate shacl detail engine base monad cat shex compact syntax parser implement follow antlr previous version scala parser combinators base json encode decode json structure define implement compatibility test current pas shacl core order generate earl report also aim pas shex order shex test suite generate earl report follow convert schema format shaclex convert different schema format follow show convert shexc shexj convert shex shacl shaclex convert schema shex shacl viceversa follow show convert shacl schema shex conversion work progress issue track shex shacl track shacl shex clingo validation project support experimental answer set program base validation convert validation process clingo option showclingo generate cling program generate clingo program instal clingo program feature experimental issue track clingo information aim shaclex support shex shacl provide conversion language information language read validate rdf write author online demo base library available another online demo base library customize wikidata available project base focus shape expression publish sonatype project sbt plugin publish snapshot release open merge watch release snapshot version full library release push tag watch regular release git tag git push origin _note tag version must start author contributor author jose emilio labra contributor eric bogdan toni andrew adopter online demo power library online demo power library wikidata eclipse sdk environment design develop link application base oslc validation library contribution contribution greatly appreciate please fork repository open pull request add feature submit make
Semantic web;https://github.com/epimorphics/elda;elda link api elda java link api provide configurable way access rdf simple restful url translate query sparql endpoint api developer probably write api spec rdf specify translate url query elda standalone jar come pre allow experiment style query get start configuration elda common webapps see forthcoming release documentation link
Semantic web;https://github.com/joshsh/ripple;ripple welcome ripple wiki ripple functional stack base query language link rdf source ripple program resemble path expression postfix style procedure every program representation embed program web well query write java include interactive command line interpreter well query api interoperates sesame content get software command line interpreter embed ripple java program ripple link ripple web publish ripple program link language reference ripple rdf orient syntax command query define program inspect script environment library primitive core library control mapping program flow regular expression loop branch atomic value datatypes comparison type conversion graph read write rdf statement sparql support key value object json logic boolean algebra math arithmetic root exponential trigonometry stack list stack orient primitive inherit stream stream split intersection filter deduplication prune close world operation string string manipulation system system call operation script language extension medium primitive play audio show image speak text blueprint graph traversal api miscellaneous ripple configuration ripple dynamic view web name ripple program create ripple external link ripple functional program link original ripple demo sfsw script
Semantic web;https://github.com/lambdamusic/Sparql-cli;sparql cli command line sparql console work endpoint well local remote graph status prototype largely untested suggest via setup call sparql cli otherwise dev mode get source top folder sparql cli main summary attempt sparql console prompt toolkit idea either pas sparql endpoint graph uri load memory rdflib useful test thing quickly requirement click colorama rdflib pygments todo export html web allow pas endpoint add save query store endpoint via extra command line add meta level cli show info etc namespaces shorten uris note tool rely pygments syntax highlight however current sparql lexer include pygments stable release break hence either update dev branch wait release sparql lexer changelog october various improvement print add endpoint connection test dbpedia october improve render add option via click october note problem sparql lexer fix release soon improve instal commit instal manually clone work
Semantic web;https://github.com/Claudenw/JenaSecurity;jenasecurity jenasecurity part apache jena project please make contribution apache jena website package name jena security jena version package name jena permission jena version see apache jena website documentation source binary package security permission wrapper around jena rdf implement securityevaluator user may apply access restricitons graph optionally triple within graph available base jena another upcoming documentation complete version however documentation also apply maven info group org apache jena artifact jena security
Semantic web;https://github.com/linkeddata/warp;warp warp link manager
Semantic web;https://github.com/knakk/fenster;fenster fenster front rdf quad store inspire similar differ show triple public graph default graph resolvable uri present fenster status fenster stable production since november frontend oslo public currently test virtuoso presumably compliant sparql endpoint work please let know issue deployment fenster write need order compile statically link binary deployment could simple git clone fenster make package copy fenster tar server unpack adjust setting config ini fenster step manually target platform different architecture compilation platform see know start ubuntu might want deploy fenster upstart service config apache rout fenster server rdf store proxy request sparql endpoint apache config give fenster localhost sparql endpoint localhost sparql license gplv3
Semantic web;https://github.com/wbsg/ldif;ldif ldif translate heterogeneous link web clean local target representation keep track provenance get start see ldif action please follow step late release unzip archive change extract directory ldif ldif music bin ldif music light schedulerconfig xml monitor progress schedule job status interface integration write work directory integrated_music_light ldif feedback question feedback please ldif google
Semantic web;https://github.com/jiemakel/visu;visu visual sparql query tool available combine google visualization sparql query instantly visualize tool also able save state url query visualization share aggregate birth death place time dbpedia visualize motion chart chart show reason wikipedia contain disproportionate number french people die 1930s number chinese people appear altogether low
Semantic web;https://github.com/clarkparsia/csv2rdf;csv2rdf csv2rdf simple tool generate rdf output csv tsv conversion template show rdf output look row see car car detail ant clean dist create local dist sub directory tool command java jar dist lib csv2rdf jar follow argument see help screen command java jar dist lib csv2rdf jar help convert conversion java jar dist lib csv2rdf jar car template ttl car car csv car ttl
Semantic web;https://github.com/rubensworks/jsonld-streaming-parser.js;json stream parser coverage npm fast lightweight _streaming_ _spec compliant_ json parser representation rdf term quad triple stream nature allow triple emit _as soon possible_ document _larger memory_ parse make sure enable streamingprofile flag parse json document stream profile exploit stream capability parser disable default installation package also work box browser via tool require _or_ usage jsonldparser node transform take chunk json output quad stream write string parser directly print parse triple console manually write string parser import stream parser implement rdfjs sink make possible alternatively parse stream import method capture detect context context event listener collect detect context parse http response usually json publish via application json medium type however json context attach via link header also publish via application json json extension type library expose jsonldparser fromhttpresponse function abstract case call http response return appropriate parser may may contain custom header define context header object must implement header interface whatwg fetch function automatically detect profile set streamingprofile flag configuration optionally follow parameter set jsonldparser constructor datafactory custom rdfjs construct term triple default require rdfjs context optional root context parse anything accept url object array default baseiri initial default base iri default streamingprofile parser assume parse document follow stream json profile true non stream document detect error may throw false non stream document handle preemptively buff entry lose many stream benefit parser default true documentloader custom loader fetch remote context set anything implement default ignoremissingcontextlinkheader lack json context link header raw json document error true raw json document consider first class json document default false producegeneralizedrdf blank node predicate allow ignore otherwise default false processingmode maximum json version processable parser default strictvalues default json require property uris unknown keywords occur context silently drop set value true error throw property occur also apply invalid value language tag useful debug json document default false allowsubjectlist rdf list appear subject position default false validatevalueindexes index inside array nod validate nod inside array equal index value applicable parser explicit flatten require spec compliant default false defaultgraph default graph construct default defaultgraph rdfdirection direction handle undefined direction ignore alternatively set either i18n datatype compound literal default undefined normalizelanguagetags whether language tag normalize lowercase default false json high true json streamingprofileallowoutoforderplaintype stream profile flag enable type entry must come property since may define type scoped context however flag enable type entry define type scoped context may appear anywhere like regular property default false skipcontextvalidation json context validation skip useful parse large context know valid default false work parser _not_ follow recommend procedure transform json allow stream base handle json instead tool introduce alternative _streaming_ algorithm achieve spec compliant json parse parser top library sax base stream json parser several memory stack maintain stack need accumulate require information emit triple quad stack delete moment need anymore limit memory usage algorithm make couple soft assumption regard structure json document true typical json document context first entry object come right context first entry object assumption meet almost object entry correspond triple quad emit follow document allow triple emit object entry except first line assumption meet entry object buff enough information become available object close present value buff read object close json document meet requirement parse efficiently document still parse correctly well slightly low efficiency stream profile parser adhere json specification json stream default parser assume json document stream document mean parser may buff large part document quad produce make sure document interpret correctly since buff neglect stream benefit parser streamingprofile flag enable stream json parse non stream json document encounter streamingprofile flag enable error may throw specification compliance parser implement follow json json transform json rdf json error handle json stream transform json rdf performance follow table show simple performance comparison json stream parser basic experiment show even though stream parser typically significantly slow regular parser _json stream parser still achieve similar performance jsonld js_ typical json however expand json document json stream parser around time slow json stream parser jsonld triple 964ms 38mb 975ms 40mb triple 698ms 40mb 607ms 47mb triple 419ms 30mb 138ms 41mb dbpedia expand json triple 557ms 70mb 363ms 62mb test tordf manifest jsonld json tordf test manifest typical json single context sparql init json configuration json large number complex nest remote context person jsonld small json json dbpedia expand json first triple dbpedia expand json license software write ruben release mit
Semantic web;https://github.com/AKSW/GeoLift;geolift framework enrich geographic content semantic web
Semantic web;https://github.com/amgadmadkour/knowledgecubes;knowledgecubes_logo src main resource logo svg png knowledge cube short semantically guide management architecture semantics influence management architecture rather predefined scheme rely semantics define fetch organize store optimize query knowledge cub rdf store allow knowledge cub store link web knowledge cub envision break centralize architecture multiple specialize cub index store quick start guide create encode contain create dictionary initial structure store create store database directory contain actual reduction input follow directory structure local store query workload command generate workload reduction directory partition save parquet format local store overview directory represent generalize filter create input datasets list meta store datasets directory containts string mapping create dictionary module directory contain metadata generate reduction output contain query performance output benchmarking module list meta table database directory overview database contain parquet format represent original reduction contain original create base input contain workload drive reduction create query workload benchmark cli tool mention program spark view parquet content worq workload drive rdf query process workload drive rdf query process technique worq short filter non match entry join evaluation early possible reduce communication computation overhead worq generate reduce set triple reduction short represent join pattern query workload worq materialize reduction disk memory reuse reduction share join pattern answer query furthermore reduction compute beforehand rather compute online fashion also answer complex analytical query involve unbind property base realization top spark extensive experimentation demonstrate order magnitude enhancement term preprocessing storage query performance compare state art cloud base solution feature spark base api sparql query efficient execution frequent workload join pattern materialze workload join pattern memory disk efficiently answer unbind property query usage provide spark base api issue rdf relate operation step necessary system dictionary encode store creation query dictionary encode require dictionary encode dictionary encode allow add resource subject object integer filter command generate dictionary encode version encode create store automatically encode decode sparql query correspond store creation provide store class creation rdf store input store spark session database path rdf store local configuration path sparql query provide sparql query processor take input spark session database path rdf create local configuration path filter type false postivie rate construct filter additionaly provide api create additional filter provide exact approximate structure filter currently support query execution benchmarking provide set benchmarking class benchmarkfilteringcli benchmarking query execution filter benchamrkreductionscli benchmarking query execution reduction publication amgad madkour ahmed ali walid aref worq workload drive rdf query process iswc amgad madkour walid aref ahmed aly sparti scalable rdf management query centric semantic partition semantic big sbd18 amgad madkour walid aref sunil prabhakar mohamed ali siarhei bykau trueweb proposal scalable semantically guide management truth find heterogeneous web source semantic big sbd18 amgad madkour walid aref saleh basalamah knowledge cub proposal scalable semantically guide management big ieee bigdata contact problem please feel free send email amgad madkour
Semantic web;https://github.com/specgen/specgen;specgen experimental new codebase tool base danbri specgen5 heavily update summer feature incl modification extension multiple property class type muttiple restriction rdfs label rdfs comment class property namespaces inverse property explicit anonymous sub property union range domain appear property description class description equivalent property simple individual optional feature dependency depend utterly upon easy_install rdfextras easy_install pyparsing easy_install igraph least package additionally lucky type enough easy_install rdflib igraph problem update easy_install etc easy_install setuptools ubuntu dependency pip instal relevant library purpose input html description rdf vocabulary output specification design human user specgen6 indir onto olo prefix olo ontofile orderedlistontology owl outdir spec olo templatedir onto olo outfile orderedlistontology html template also find folder onto olo output also find folder spec olo see detail status load interpret core rdfs owl populate vocab term class property individual instance able generate xhtml rdfa ontology specification common concept property owl rdf know fork webid note link reference specific revision fork ensure utilise recent summary walk path specgen directory recent revision todo enable owl feature especially automate construction owl ontology currently must manually template enable support namespaces super class super property namespaces already possible restructure write cool parser etc parse comment know issue librdf seem like abbreviation filter clause work select type rdfs label rdfs comment type filter type fail prefix owl select type rdfs label rdfs comment type filter type owl objectproperty even pas bind force verbose select distinct rdfs label rdfs comment type filter type type type type type todo work encode utf everywhere explicit careful default english robust multilingual label find old project repository location deprecate new development push repository location github
Semantic web;https://github.com/AKSW/ORE;ore ontology repair enrichment ore ontology repair enrichment tool allow knowledge engineer improve owl ontology fix inconsistency make suggestion add axiom ontology debug ore owl reason detect inconsistency satisfiable class state art method detect likely source problem simple process user create repair plan resolve problem maintain full control desire undesired inference ontology enrichment ore learner framework suggest definition super class exist class knowledge base work instance available detect potential problem harmonise schema knowledge base
Semantic web;https://github.com/uzh/signal-collect;signal collect signal collect framework computation large graph allow concisely express many iterate flow algorithm framework parallelize distribute computation develop eclipse typesafe ide scala ensure eclipse java library jvm preference java instal jres jre jdk instal select import project eclipse import maven exist maven project select signal collect folder thank lot university hasler generously fund research graph process development signal collect github help host travis offer convenient continuous codacy give automate
Semantic web;https://github.com/zazuko/d3-sparql;sparql module let request vein friend generate json structure sparql query way like without access sparql endpoint allow fast efficient preparation get hang sparql rdf ultimately keep visualization date think sparql endpoint flexible api imaginable define sparql query endpoint query endpoint get provide feature transformation xsd xsd datetime xsd boolean native javascript type reformatting json structure style layout provide variable name sparql query limitation select query support provide projection graph onto table structure currently support endpoint able respond application sparql json instal npm npm sparql also cdn instance see changelog changelog detail available version api reference package add sparql function global object sparql endpoint query option sparql endpoint query option source option optional object get merge second argument acknowledgement initial development library support city
Semantic web;https://github.com/BorderCloud/TFT;tft tft tester triplestore script php pas test sparql endpoint jmeter protocol test read doc usage travis project travis tft openlink virtuoso version community blazegraph jena fuseki usage jenkins jenkins read report junit xml line usage sparql auth virtuoso read last score sparql license tft karima rafes bordercloud tft license creative common attribution sharealike international license receive copy license along work see
Semantic web;https://github.com/AKSW/NSpM;neural sparql machine machine translation approach question answer knowledge graph nspm nspm important look sparql foreign language neural machine translation query construction composition please checkout tag branch via pip come soon local setup clone repository usage generator module pre generate extract pre generate checkpoint folder respective name manual generation alternative pre generate template find annotations_f30_art csv art_30 work throughout tutorial generate launch follow command launch command want seprately else internally call learner module back initial directory launch learner command create checkpoint art_30 pickle art_30 pickle_objects interpreter module predict sparql query give question store detail output output_query want nspm pre follow step airml late version navigate table kns check list copy name interpreter follow case integration component adam medical partly develop jose graphen include humanoid robot call adam rely nspm technology telegram nspm offer integration nspm telegram message platform google summer program support student work nspm back project neural question answer since question answer implement top nspm muhammad publication sparql foreign language arxiv neural machine translation query construction composition nampi website arxiv explore sequence sequence sparql pattern composition arxiv liber medium neural sparql contact question primary contact tommaso edgard neural sparql machine mail join conversation follow follow project follow liber research
Semantic web;https://github.com/gniezen/n3pygments;n3pygments lexer perform syntax highlight turtle turtle ttl sparql sparql sparql make sure pygments high sudo setup pygmentize turtle filename ttl pygments mostly seem abandon original instruction site work pygmentize command line register package proper pygments plugin within pygments lexers import get_lexer_by_name get_lexer_for_filename get_lexer_by_name turtle return n3pygments create base tex stackexchange site yes perform syntax highlight latex also success perform syntax highlight octopress blog thank raphael philip
Semantic web;https://github.com/cosminbasca/cysparql;cysparql cysparql wrapper excellent heavy duty rasqal parser library intend give pythonic feel parse sparql query several goody include well like simple fast star pattern extraction sparql query node edge graph visualization sparql query simple descriptive command line utility describe give sparql query read stdin auto pretty formatter sparql query slow parse important note software product research carry university come warranty whatsoever fun todo librasqal fully support filter etc project document yet compile project ensure librasqal libraptor2 instal system either package manager compile source cysparql option manual installation requirement first automatic pip manual installation project pip also look clean test script include codebase basic thank lot university swiss national science generously fund research lead software
Semantic web;https://github.com/sisinflab-swot/ldp-coap-framework;ldp coap link platform constrain application protocol w3c link platform define resource management primitive http push background negligible case relate web thing wot scenario http base communication infrastructure unfeasible ldp coap propose map ldp specification rfc constrain application coap complete java base framework publish link wot general translation ldp http request response provide well fully comprehensive framework http coap proxying ldp coap framework also support w3c link ldn protocol aim generate share reuse notification across different application ldp coap functionality test w3c test suite ldn test module ldp coap version consist follow sub project _ldp coap core_ basic framework include propose ldp coap map _ldp coap test_ include reference client server test framework accord test suit cite _ldp coap raspberry_ usage exploit _ldp coap core_ raspberry board _ldp coap android_ simple project _ldp coap core_ android platform ldp coap also require fork _eclipse californium_ framework support ldp specification particular follow module define local maven dependency _californium core ldp_ modify version library extend support ldp coap feature _californium proxy ldp_ modify version translate ldp http request method header correspond ldp coap map back ldp coap response ldp http usage eclipse maven module import maven project eclipse make sure follow plugins import ldp coap project eclipse m2eclipse maven integration documentation hand introduction ldp coap basic available project webpage detail package method find official reference want refer ldp coap publication please cite follow license _ldp coap core_ _ldp coap android_ _ldp coap raspberry_ module distribute apache license version _californium core ldp_ _ldp coap proxy_ distribute eclipse public license version derive project contact information please visit ldp coap contribute main purpose repository share continue improve ldp coap framework make easy interest help feedback ldp coap would greatly appreciate guideline need contributor follow report contribute
Semantic web;https://github.com/Accenture/AmpliGraph;ampligraph doc img ampligraph_logo_transparent_300 png documentation join conversation doc img slack_logo png open source library base tensorflow predict link concept knowledge graph ampligraph suite neural machine relational branch machine deal supervise knowledge graph ampligraph need discover new knowledge exist knowledge graph complete large knowledge graph miss statement generate stand alone knowledge graph embeddings develop evaluate new relational ampligraph machine generate knowledge graph embeddings vector representation concept metric space doc img kg_lp_step1 png combine embeddings specific score function predict unseen novel link doc img kg_lp_step2 png key feature intuitive apis ampligraph apis design reduce amount require predict link knowledge graph gpu ready ampligraph base tensorflow design seamlessly cpu gpu device speed extensible roll knowledge graph embeddings extend ampligraph base estimator module ampligraph include follow submodules datasets helper function load datasets knowledge graph knowledge graph embed ampligraph contain transe distmult complex hole conve convkb come evaluation metric evaluation protocol ass predictive power discovery high level convenience apis knowledge discovery discover new fact cluster entity predict near duplicate installation prerequisite linux macos window provision virtual environment create activate virtual environment conda tensorflow ampligraph tensorflow pip conda cpu gpu support ampligraph late stable release pip instead want recent development version clone repository source local work copy late commit develop branch snippet library editable mode sanity check predictive power evaluation mrr filter ampligraph include transe distmult complex hole conve convkb predictive power report compare state art literature detail available fb15k wn18rr yago3 fb15k wn18 literature best transe ampligraph distmult ampligraph complex ampligraph hole ampligraph conve ampligraph conve ampligraph convkb ampligraph timothee lacroix nicolas usunier guillaume obozinski canonical tensor decomposition knowledge base completion international conference machine kadlec rudolf ondrej bajgar jan kleindienst knowledge base completion baseline strike back arxiv preprint arxiv compute assign bad rank positive case tie although conservative approach publish literature may adopt evaluation protocol assign best rank instead documentation documentation available project documentation local work copy contribute see ampligraph documentation cite like ampligraph project star project github github instead ampligraph academic publication cite license ampligraph license apache license
Semantic web;https://github.com/arc-lasalle/AutoMap4OBDA;automap4obda automap4obda system automatically generate r2rml mapping base intensive relational source content feature target ontology automap4obda take input relational database postgresql ontology owl produce putative ontology relational database intermediate element relational ontology process moreover automap4obda design obda scenario able generate fully compliant r2rml mapping without user intervention automap4obda database content feature target ontology take account map generation process develop technique make map process strongly dependent input database feature target ontology increase performance relational ontology mapping ontology technique infer class hierarchy development putative ontology string similarity metric selection base target ontology label ontology alignment short path strategy r2rml map generation base alignment first version require cleanse refactoring currently support postgresql password empty attrasclass attribute class option default old ontology technique option default olclasstable new class ontology technique belong table class column class default olclassnamealone new class ontology technique take name table column attach default extendedmappings short path technique option default copyright arc engineer architecture salle ramon llull university comment please contact alvaro sicilia ascilia salleurl edu
Semantic web;https://github.com/AKSW/QuitStore;quit store status master branch coverage quit store stand quad git provide workspace distribute collaborative link knowledge engineer able read write rdf aka multiple name standard sparql interface collaborate create multiple branch share repository collaborator know git want read quit store recommend decentralize collaborative knowledge management natanael arndt patrick naumann norman radtke michael martin edgard marx journal web semantics get start get quit store option binary currently work amd64 linux clone git repository docker see section docker docker readme installation source get quit store source virtualenvwrapper git configuration configure name email git information store commit create git quit store system relevant people know contribution come execute follow command start exist optional already want quit store follow step create repository contain rdf put rdf format sort cat lc_all sort like directory create correspond graph must contain iri respective graph graph also virtuoso bulk load add repository create commit ingest version quit store add commit step alternatively also able execute sparql update operation create new version quit store start quit store binary instal source open browser lot fun command line option check section command line option command line option readme command line option basepath specify base path application root work wsgi docker targetdir specify target directory repository find clone remote give repourl specify link url remote repository configfile specify path configuration default config ttl disableversioning quit store without versioning activate feature option enable additional feature store provenance enable browse interface provenance information persistance store internal rdf graph garbagecollection enable garbage collection feature enable git check garbage collection commit may slow response time keep repository size small verbose verboseverbose set log level standard output verbose info respective extra verbose debug logfile write log output give path path interpret relative current work directory log level logfile always extra verbose debug configuration deprecate plan remove configuration feature want work configuration create config ttl configuration consist part store configuration graph configuration store configuration manage everything relate initialize software graph configuration map graph graph iris graph configuration config ttl alternative graph next graph make sure put correct path git repository store iri graph name hold graph api quit store come kind interface sparql update query interface provenance interface git management interface sparql update query interface sparql interface support update select query mean adhere sparql find interface query current head repository access branch commit repository query endpoint resp since software still development might miss feature strange behavior sure store follow w3c recommendation please execute select query curl interest specific mime type content negotiation feature interface execute update query curl provenance interface provenance browse feature enable argument feature provenance provenance browse feature extract provenance meta revision make available sparql endpoint blame interface provenance interface available follow url sparql query interface see query provenance graph get git blame like output per statement store git management interface git management interface allow access operation quit conjunction underlie git repository access browser follow path commit see commit message committer date commit branch merge allow manage branch merge branch different strategy pull fetch push work similar respective git command operation work configure remote repository docker provide docker image quit store public docker well github docker image expose port default default user within image user quit user user git configuration user name quitstore user email quitstore org preset without configuration git repository initialize within container directory default user quit store host local directory volume require store git repository host directory volume link directory make sure quit process user within docker container write access directory alternatively user within container set docker user uid case make sure user name user email configure git config within repository git config git config mount gitconfig usr src app gitconfig user setup default user image execute follow command maybe replace docker sudo docker follow start quit store background detach mode able access quit web interface sparql interface default configuration locate etc quit config ttl also overwrite respective volume set quit_configfile environment variable option set quit_targetdir target repository directory quit quit_configfile path config ttl default etc quit config ttl quit_logfile path quit create logfile quit_basepath http base path quit serve quit_oauth_client_id github oauth client oauth see also github quit_oauth_secret github oauth secret test need quitstore instal source see section installation source installation source troubleshoot window restrict permission window might able exe directly curl command power start quitstore quit exe try open port available outside require permission administrator user open port locally start quitstore default port migrate old version update old migrate nquads base repository old version quitstore release old ntriples base repository release new teh follow command migrate graph know possible multiple graph nquads possible ntriples thus make sure graph per may execute step nquads replace graphfile accord filename license copyright norman radtke natanael arndt contributor program free software redistribute modify term gnu general public license publish free software foundation either version license option late version program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail receive copy gnu general public license along program see please see license license information
Semantic web;https://github.com/baskaufs/guid-o-matic;jump detail explanation jump straight simple try get start jump darwin core translator page dwca converter guid matic software convert field text csv rdf serialize xml turtle json write good software note problem json generate guid matic property repeat guid matic create triple repeat property value time valide json consume application recognize last instance property subject appropriate syntax include multiple value array single property problem subject duplicate predicate purpose guid matic best practice biodiversity informatics community embody tdwg guid applicability dictate globally unique identifier guids rhyme squid resolvable dereferenceable recommendation default metadata response format rdf serialize xml recommendation r10 practice machine readable metadata rarely provide request content type flavor rdf think reason people think hard generate necessary rdf purpose guid matic mostly show really hard create rdf anybody create spreadsheet darwin core archive generate rdf little additional effort production provider would probably spreadsheet source point guid matic demonstrate general strategy allow user experiment different graph structure play generate serialization call guid matic something like rdf generator matic already cute squid picture rdf generator rhyme squid write script xquery something like php good programmer know php understand guid matic write good thing xquery work group include lot digital humanist love xml also awesome xquery processor basex free easily instal anybody easily guid matic script addition basex web server theory could call rdf generate function response http request actually script provide rdf online guid matic write guid matic version limit scope generate rdf xml assume focal resource specimen assume specimen depict image hard cod specific version darwin vocabulary stuff remember version also write old version visual basic advantage could executable disadvantage could hack unless copy visual basic know even function copy version visual basic even look source really matter advise anyone try mess version anyway post historical reason try see great squid graphic guid matic version intend general practical consider source pull csv provide rdf output xml turtle json allow focal resource class allow rdf vocabulary accept input flat delimit text csv allow user set default csv rdf mapping via csv edit excel typical spreadsheet application allow link number class whose instance relationship focal class allow link number class whose instance many relationship focal class star schema include darwin core archive output onscreen output single record dump entire database main script include xquery module could potentially call basex web therefore actually dereference iris case would probably hack pull xml database rather csv version write xquery w3c free xquery processor instruction set everything elsewhere addition main script generate rdf additional script process darwin core archive source pull information meta xml generate hackable mapping csv rdf try yes please want see happen follow fork guid matic github repo local drive clone hard drive implication software find necessary read actually clone already open folder button basex navigate folder repo load query test serialize basex repo default location mac probably linux system anything script find necessary non locate non default location need set path guid matic repo directory fourth parameter function default repo clone location horrible place inside default user directory however clone repo specify simple location repo github default give function click query play triangle button chinese religious sit see graph graph play around change identifier focal resource first parameter function generate rdf temple sit serialization second parameter suggest value give comment function want try complicate thing like change property graph want set mapping need read detail instruction take step try darwin core archive input also require read instruction dwca converter tang song temple provide tracy vanderbilt university department history art graciously let guinea pig semantic web work group please contact information
Semantic web;https://github.com/mifeet/LD-FusionTool;fusiontool fusion conflict resolution tool link fusiontool standalone tool etl framework execute fusion conflict resolution step integration process rdf merge produce consistent clean representation object conflict emerge integration need resolve please visit official page information fusiontool work source order fusiontool source maven mvn clean source directory project locate binary source odcsft application target execute java jar odcsft application version executable jar configuration xml executable without parameter show usage option sample configuration find sample config full xml serve work documentation configuration
Semantic web;https://github.com/joepio/atomic-data-browser;atomic browser logo svg discord chat discord badge discord url mit create share fetch link atomic repo consist component javascript typescript library react library complete gui atomic browser atomic browser browser readme gui view edit browse atomic design interact demo read browser readme tomic lib lib readme library store commit json parse read lib readme tomic react react readme react library many useful hook render edit atomic demo template read react readme also check rust atomic sign atomic contribute issue welcome join discord discord url see contribute contribute discord badge discord url
Semantic web;https://github.com/innoq/iqvoc;iqvoc gem iqvoc vocabulary management tool combine easy human interface semantic web interoperability iqvoc support vocabulary common many knowledge organization system thesaurus taxonomy classification scheme subject head system iqvoc provide comprehensive functionality aspect manage vocabulary import exist vocabulary skos representation multilingual display navigation web browser editorial feature register user publish vocabulary semantic web iqvoc state art technology easily customize accord user need demo try iqvoc right play around public view like test collaborative function simply request mailto iqvoc innoq com personal demo account setup heroku easily setup iqvoc instance minute want make process really easy order deploy heroku need account heroku instal heroku open open app browser remember visit user section change default password docker want try iqvoc docker clone repository setup postgres database please make sure docker daemon docker compose instal user credential find custom recommend iqvoc rail clone source possible modification would require fork configure database via config database template yml forget rename database yml bundle bundle exec rake create create database create necessary table rake migrate load base rake seed make sure get config secret yml place nodejs dependency compile asset npm make sure nodejs instal compile asset npm compile npm watch compile listen change development boot app bundle exec rail passenger start passenger log admin iqvoc admin123 demo iqvoc cooluri123 step visit user section change default password background job note feature like import export expose web store workload job either issue job worker continuously watch new job via process job way development via cron compatibility iqvoc fully compatible ruby customization many hook provide support class configuration core app also work rail engine config reside lib iqvoc provide basic overview possibility documentation documentation resource find iqvoc provide inline api documentation find app_uri apidoc check sandbox see action relate project provide several extension add additional feature iqvoc skos extension iqvoc compound label iqvoc inflectionals iqvoc iqvoc engine similar term versioning release follow semantic versioning format information semver visit contribute want help several option find bug create issue github issue submit patch initiate pull request welcome fix bug list proposal discussion new feature mail list iqvoc list innoq com issue tracker make change exist please make sure test suite stay green please include test additional contribution test via bundle exec rake test cuprite integration test javascript support maintainer contributor iqvoc originally create maintain innoq deutschland robert glaser till schulte coerne frederik dohr marc jansing license copyright innoq deutschland license apache license version
Semantic web;https://github.com/RMLio/yarrrml-parser;yarrrml parser library allow convert rule rule npm rmlio yarrrml parser usage cli cli function yarrrml parser yarrrml generator help flag show possible command yarrrml parser want generate rml rule yarrrml document follow yarrrml parser rule yml rule write standard output want write add option default parser generate rml rule want generate r2rml rule add r2rml want class instead predicate object map flag multiple input yarrrml parser rule yml rule yml convert single rml document note key prefix source mapping unique across base set find test multiple input test multiple input overwrite external reference via external reference start name john replace occurrence _name john repeat multiple reference provide value external reference reference replace find test template escape test template escape want _name external reference normal reference add latter _name latter want output rml pretty please provide pretty parameter yarrrml generator want generate yarrrml rule rml document follow yarrrml generator rule rml ttl rule write standard output want write add option library npm save rmlio yarrrml parser development clone repo dependency via npm update need test via npm test make new test make sure rml turtle pretty sure pretty test prettify_ttl make cli cli base clone repo available system wide via npm link optional docker source license copyright ghent university release mit
Semantic web;https://github.com/oeg-upm/OME;ome static logo min png online map editor generate r2rml rml yarrrml without write single line also support automatic suggestion subject property column apis automatic suggestion apis need export environment variable tada_host url tada web host url set like export environment variable secret_key random text tada_host optional url tada apis miss class property annotate automatically default upload_ontology optional show hide ontology upload page main page autocomplete functionality default true github_secret github app secret github_appid github app morph_path local path morph rdb jar generate ttl rmlmapper_path local path rmlmapper jar generate ttl activate_this add environment variable activate_this virtualenv bin directory remark application specific port say port application specific port say port give host cite
Semantic web;https://github.com/jpcik/morph;morph care compile morph sample java project library maven sbt morph need jvm7 sbt www scala sbt org scala version sbt take care compile sbt r2rml test case
Semantic web;https://github.com/AtomGraph/Web-Client;atomgraph web client link web client triplestore rdf want publish end user application would like explore link open web client provide component need web client render html user interface transform plain without nest resource description xslt stylesheets atomgraph web client feature awc provide user box generic feature load rdf remote link source multilingual responsive user interface twitter bootstrap currently multiple rdf render mode currently item list table map rdf edit mode base encode sparql endpoint interactive get start link instal extend full documentation see wiki usage docker processor available docker hub image accept follow environment variable become webapp context parameter stylesheet custom xslt stylesheet uri optional resolving_uncached true stylesheet attempt resolve dereference uri resource render rdf improve true false optional web client default xslt like docker atomgraph web client web client available maven web client release maven central support please report encounter bug feature request commercial atomgraph consult development support available community please join w3c declarative link apps community discus develop atomgraph declarative link architecture general
Semantic web;https://github.com/tkurz/sesame-vocab-builder;sesame vocabulary builder sesame vocabulary builder provide command line tool maven plugin allow create constant rdf primitive give namespace rdf ontology late version jar command line java require java jar vocab builder cli version exe jar additional information configure command line parameter command line option git clone sesame vocab builder additional information configure command line parameter maven plugin
Semantic web;https://github.com/mmlab/TurtleValidator;turtlevalidator rdf ntriples turtle validator ruben verborgh nodejs validate turtle ntriples document syntax xsd datatype error command line idlab ghent university imec source npm turtle validator ttl curl accept text turtle ttl ttl browser client browser index html public folder locally follow
Semantic web;https://github.com/abcoates/sublime-text-turtle-sparql;readme sublime text turtle sparql sublime text syntax completion turtle late sparql develop sublime text beta copy turtle sparql directory sublime text package directory preference browse package sublime text find sublime text syntax mechanism textmate editor see unofficial sublime text documentation information sublime text completion see unofficial sublime text documentation
Semantic web;https://github.com/lorenae/qb4olap;qb4olap vocabulary business intelligence link extension vocabulary allow represent olap cub rdf implement olap operator roll slice dice sparql query directly rdf representation vocabulary find current version vocabulary turtle format repository late version available previous stable version vocabulary available main improvement ability represent custom rollup relationship define follow purl refere version version version suggest dcterms conformsto property indicate version qb4olap documentation relate resource contain detail description element vocabulary qb4olap relate publication check project see vocabulary folder contain ttl represent schema instance different cub qb4olap
Semantic web;https://github.com/leipert/vsb;visual sparql builder look project visual sparql builder vsb tool allow user create sparql query graphical interface within browser creation query basic understand link need deployment clone repository checkout dist branch release serve vsb webserver like apache nginx probably want configure vsb endpoint therefore need create name overwrite root folder vsb copy documentation structure please look doc overwrite development clone repository release npm grunt npm bower gulp npm bower gulp develop see app happy development
Semantic web;https://github.com/dice-group/IGUANA;java codacy project iguana semantic web become important grow day triple store backbone manage hence important triple store must scale handle several user current benchmark approach could provide realistic scenario realistic could adjustet need easily additionally question answer system natural language process system become popular thus need stresstested well impossible compare different benchmark iguana integerated suite benchmarking read write performance http endpoint cli application solve issue provide enviroment highly configurable provide realistic scneario benchmark work every work sparql http endpoint work http get post endpoint work cli application easily extendable information visit get start prerequisite need java great ubuntu follow command iguana module iguana consist module corecontroller benchmark system resultprocessor calculate metric save raw benchmark corecontroller corecontroller benchmark system start machine start resultprocessor resultprocessor calculate metric default store ntriple may configure write directly triple store process side calculate various metric per metric query mix per hour qmph number query per hour noqph number query noq average query per second avgqps per query metric query per second qps number successful fail query size query per second sum execution time change iguana benchmark suite config basic save mention metric call results_ date_rp_started setup iguana please release zip iguana zip new release available contain follow iguana corecontroller jar start iguana suite yml benchmark create configuration basic provide modify need information please visit wiki page detail step step instruction please attend execute benchmark start script iguana execute benchmark suite configure suite yml cite
Semantic web;https://github.com/SmartDataAnalytics/jena-sparql-api;welcome jena sparql api project advance jena base sparql process stack semantic web application highlight fluent sparql query api transparently enhance query execution cache pagination rewrite transformation without worry application logic transparent basic normalize string cache usual string base cache implement query transformation sparql sub graph isomorphism checker transparent sub graph isomorphy cache isomorphism checker cache detect whether prior set fit current query regardless variable name jpa base java rdf mapper jpa criterion query java class actually back sparql library offer several way transparently add delay cache pagination retry even query transformation send original sparql query free application layer hassle deal issue also server module bundle jena framework give kickstart rest websocket maven release available maven snapshot presently publish archiva late version jena sparql api maven project structure library compose follow module jena sparql api core contain core interface basic jena sparql api server abstract sparql enpdoint class allow easily create sparql endpoint sparql sql rewriter implement interface jena sparql api utils utility common package jena sparql api proxy create simple sparql proxy easily adapt add pagination cache delay jena sparql api sparql ext sparql extension process non rdf part query evaluation prominently feature support query json document unnesting json array triple also add csv process completeness although cover tarql tool jena sparql api jgrapht provide jgrapht wrapper jena graph interface yes aware rdf plain graph label direct pseudo graph implement accordingly also contain conversion sparql query graph enable subgraph isomorphism analysis jena sparql api mapper powerful module query rdf transparently java persistence api jpa criterion query query update express annotate java class rdf specific expose developer usage brief summary complete avaible http query execution factory add millisecond delay order nice backend set cache add pagination sake demonstration entry per page could well note pagination abort memory need adjust setting resume cache create query fully buff queryexecutionfactory proxy server demonstrate create sparql web service subclass sparqlendpointbase override createqueryexecution method look source see easy browser terminal visit limit license source repo publish apache license version project make several dependency doubt please cross check respective project apache apache license apache license partially cddl license apache license apache license currently copy also apache license change maven dep
Semantic web;https://github.com/seebi/semweb.vim;vim bundle work rdf knowledge base installation bundle create work pathogen copy folder bundle directory feature namespace completion syntax highlightning insert xsd datetime current time literal abbrevation xsdnow namespace completion ctrl autocomplete user function complete rdf prefix owl skos foaf namespace uris foaf prefix multifunctional script dependency must available rdf path syntax highlightning syntax pull syntax niklas lindstrom git github com vim script vim git sparql syntax pull syntax jeroen
Semantic web;https://github.com/SPARQL-Anything/sparql.anything;sparql everything
Semantic web;https://github.com/ldp4j/ldp4j;ldp4j java base framework development read write link application base w3c link platform ldp specification ldp4j distribute apache license version information please visit ldp4j technical
Semantic web;https://github.com/RDFLib/rdflib;doc _static rdflib png rdflib coverall github rdflib pure package work rdflib contain thing need work rdf include parser serializers rdf xml ntriples quad turtle trix trig json graph interface back number store store memory persistent disk berkeley remote sparql endpoint sparql support sparql query update statement sparql function extension mechanism rdflib family package rdflib community maintain many rdf relate repository different purpose rdflib core simple wrapper around sparql service remotely execute query owl ontology documentation tool templating base lode rdfa distiller parser library extract rdfa html svg xml general module extract rdf html5 page annotate microdata pure module allow validation rdf graph shacl graph simple owl2 profile expand graph possible triple owl define please see list package repository help maintenance rdflib family package always welcome appreciate version release alpha current master branch current release support many improvement see support mostly backwards compatible see release overview documentation see documentation note late stable documentation version match release installation stable release rdflib may instal package management tool pip pip rdflib alternatively manually package package index pypi current version rdflib see changelog new release installation current master branch developer pip also rdflib git repository follow option pip pip locally clone repository follow option setup pip get start rdflib aim pythonic rdf api rdflib main object graph collection rdf subject predicate object triple create graph load rdf dbpedia print component triple uris resource literal value uris group together namespace common namespaces include rdflib like rdfs rdfs namespace xsd xml schema datatypes namespace value return object triple pattern give arbitrary multiple exist like add triple graph triple triple notation create property foaf givenname uri xsd string uri bind namespaces prefix shorten uris rdf xml turtle trig trix json serialization allow triple triple serialise like new namespaces also define see also feature library contain parser serializers rdf xml ntriples quad turtle trix json rdfa microdata library present graph interface back number store core rdflib package include store memory storage persistent storage top berkeley sparql include support sparql query update statement rdflib open source maintain rdflib release current previous list multiple project contain within rdflib family see test test host test suite pytest test coverage host coverage report test suite generate html coverage report pytest pytest cov test docker container test suite inside docker container cross platform support resolve issue instal berkeleydb window avoid host port issue macos tip underlie dockerfile test runner change make test docker container coverage report test suite inside docker container html coverage report view test coverage test produce html output coverage report view contribute rdflib survive grow via user contribution please read contribute get start please consider lodge pull request also raise issue support contact general query please tag question rdflib exist question want contact rdflib maintainer please via rdflib dev mail list chat available via matrix
Semantic web;https://github.com/AKSW/FOX;bch project fox federate knowledge extraction framework fox framework integrate link cloud make diversity nlp algorithm extract rdf triple high accuracy current version integrate merge name entity recognition tool well integrate several relation extraction tool requirement java maven graphviz javadoc documentation documentation documentation readme demo version support multiple language ner ned live demo cite english version detail extend version multiple language license fox license gnu affero general public license license license document application folder fox several library incomplete list follow illinois nlp pipeline university illinois research academic license stanford corenlp gnu gpl version apache opennlp apache license version balie gnu gpl version bug find bug bug open issue without emojis valid trollface
Semantic web;https://github.com/anapsid/anapsid;anapsid adaptive query process engine sparql endpoint maribel acosta maria esther vidal tomas lampo julio castillo edna ruckhaus anapsid adaptive query process engine sparql endpoint international semantic web conference gabriela montoya maria esther vidal maribel acosta heuristic base approach plan federate sparql query cold instal anapsid anapsid know debian gnu linux instruction test late debian stable recommend way execute anapsid anapsid clone repository git git clone anapsid late release github local copy anapsid pip requirement txt anapsid dependency right library require execute anapsid ply step anapsid current user cage virtualenv prevent pollute global site package setup ahead move next section configure anapsid set anapsid anapsid depend endpoint description describe endpoint url predicate endpoint handle anapsid come bundle helper script generate endpoint description prevent error create endpointsurls txt url endpoint per line script contact endpoint retrieve predicate might take save endpoint description endpointsdescriptions txt get_predicates endpointsurls txt endpointsdescriptions txt ready anapsid support endpoint anapsid currently support endpoint answer query either xml json expect hard failure intend anapsid endpoint answer format anapsid instal anapsid retrieve endpoint description anapsid run_anapsid script run_anapsid output usage text option switch select experiment however script bundle utils might want check get idea anapsid parameter alternatively execute follow command give query anapsid anapsidroot directory anapsid store endpoint path name description endpoint store query path name filw query store plan bushy plan leave linear naive naive binary tree plan true false true indicate input query sparql1 decomposition need false otherwise indicate type decomposition ssgm star shape group multiple endpoint ssgs star shape group single endpoint exclusive group recommend ssgm indicate adaptive operator recommend value true true false indicate cardinality query estimate contact source true cost false turn true feature may affect execution time value indicate plan produce ask decomposition parameter optional set plan query want produce true false true answer query output false summary execution produce true false true indicate endpoint contact virtuoso false type owlim include query decompose heuristic include heuristic decompose query evaluate federation endpoint exclusive group star shape group single endpoint selection ssgs see star shape group multiple endpoint selection ssgm see fedbench anapsid fedbench see benchmark test federate query process rdf set order execute anapsid necessary first provide endpoint description endpoint description form endpoint endpointsfedbench provide description endpoint collection fedbench current url endpoint include follow fedbench query see also available folder query fedbbench contact anapsid develop universidad simon ongoing academic effort contact current maintainer email mvidal ldc dot usb dot strongly encourage please report issue anapsid contact email create new issue github simon castillo scastillo ldc dot usb dot guillermo palma gpalma ldc dot usb dot maria esther vidal mvidal ldc dot usb dot gabriela montoya gabriela dot montoya univ nantes dot maribel acosta maribel dot acosta kit dot edu license work license gnu gpl
Semantic web;https://github.com/avicomp/ont-api;ont api notice activity repository freeze last release domain avicomp new project home summary ont api owl api apache jena info see page dependency apache version version license apache license version gnu lgpl version
Semantic web;https://github.com/mcollina/levelgraph-jsonld;levelgraph jsonld coverage dependency sauce lab __levelgraph jsonld__ plugin add ability store retrieve delete json object fact full blow object document mapper odm __levelgraph__ node add support json levelgraph easy moment require node port node straighforward need open pull request browser package browser node please also take look browserify section levelgraph also standalone browserified version directory also dependency levelgraph simply usage assume follow create database explain base also specify create overwrite delete conservative rely previous behavior set overwrite option true create option put del overwrite exist triple put delete blank nod recursively del upcoming cut function old api phase put please keep mind levelgraph jsonld __doesn store original json document decompose triples__ store literal double quote datatype string plain levelgraph method instead try match number need try match store triple json document extremely easy top level object key generate uuid base argument like base also specify create usage __levelgraph jsonld__ also support nest object like get retrieve json object store require format load object entirely specify context fun put correctly support nest object nest object originally include property since put generate uuid format blank node identifier delete order delete object need pas document del method delete property specify document note blank nod ignore delete blank nod need pas cut true option also add recurse true option cut method note since del support pas iri anymore cut order delete blank nod object pas cut method also pas object case property determine triple delete consider recurse option follow link blank nod might delete expect search levelgraph __levelgraph jsonld__ support search object problem already solve __levelgraph__ search find friend live near paris change include migration info break change contribute levelgraph jsonld check late master make sure feature implement bug fix yet check issue tracker make sure someone already request contribute fork project start feature bugfix branch commit push happy contribution make sure add test important break future version unintentionally please try mess makefile package json want version otherwise necessary fine please isolate commit cherry pick around license mit license copyright matteo collina levelgraph jsonld contributor permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
Semantic web;https://github.com/tenforce/SPARQL-parser;sparql parser sparql parser library help parse investigate sparql query generate sparql query usage parse query parsedquery object contain java object representation query hashmap prefix object type list istatements set unknown possibly graph original query prefix object quiet simple map name url type follow type support sparqlquery type ask sparqlquery type describe sparqlquery type select sparqlquery type construct sparqlquery type update istatement istatement interface abstraction sparql statement include select block block update block parenthesis block simple statement block support method extract unknown inner block instance select block contain parenthesis block contain multiple simple statement graph operate well functional method change graph instance unknown java string hold name variable query without become graph also java string installation add pom
Semantic web;https://github.com/dbiir/jdbc-for-rdf3x;jdbc rdf3x jdbc connector rdf
Semantic web;https://github.com/drobilla/sord;sord sord lightweight library store rdf statement memory information see david robillard
Semantic web;https://github.com/read-write-web/rww-play;rww play play number tool read write web server play2 akka early stag present implement sketch follow proxy initial link basic currently work branch bblfish fork play come support patch travis verify get need java least official oracle jvm another base gpled remove dependency oracle jvm require publish gpled java security clone rww play home directory bash script precompiled tune version play application remotely downloadable version source play20 directory config javascript apps start play secure mode lightweight client certificate verification webid conf application conf set smtp parameter host user mail provider server etc host add host name subdomains create jmv localhost jmv1 localhost jmv2 localhost instal rww apps rww apps store git repository script app update rww apps ship platform check script content simply git clone instal public server make sure proxy url set start play secure mode lightweight client certificate verification webid self sign certificate direct browser want multiple user server best give user subdomain security start server follow attribute subdomains local machine need edit etc host server machine web assign domain address create subdomain point browser root domain lead account creation page allow create subdomains server mail send mail address verification able find link log mail server set documentation documentation find rww play licence copyright henry story license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license
Semantic web;https://github.com/alangrafu/lodspeakr;lodspeakr author alvaro grave alvaro grave version framework create link application simple easy way see several create lodspeakr simple installation simply web server root directory var www bash curl require answer question location lodspeakr script var www visualization highly likely domain want query leave default press enter url sparql endpoint visualbox look execute sparql query finally give write permission web server lodspeakr meta lodspeakr cache lodspeakr setting inc php lodspeakr component several way sudo chown webserveruser lodspeakr meta lodspeakr cache lodspeakr setting inc php lodspeakr component note find name web server user aux egrep egrep grep root awk print uniq alternatively chdmod lodspeakr meta lodspeakr cache lodspeakr setting inc php lodspeakr component highly discourage documentation installation lodspeakr available lodspeakr
Semantic web;https://github.com/IKCAP/wings;wing installation docker must deploy container follow command open browser access wing portal readme docker wing docker additional instruction docker image maven please follow instruction readme maven doc maven wing project
Semantic web;https://github.com/GeoKnow/LinkedGeoData;welcome linkedgeodata provide openstreetmap rdf linkedgeodata lgd effort add spatial dimension web semantic web linkedgeodata information collect openstreetmap project make available rdf knowledge base accord link principle interlink knowledge base link open initiative project web site find repository contain everything need transform openstreetmap rdf system please consider contribute adaption exist script contribution welcome docker base architecture aim make easy contribute new alternative component sit side side core system virtual knowledge graph view osm database please open issue discussion include limit modern link interface display geosparql geometry box nice sparql interface yasgui another virtualization engine order ease comparision already integrate update exist osm rdf mapping proposal system could improve proposal good iri schema triplify iris archaic migration pattern seem worthwhile virtual knowledge graph approach problem legacy approach parallel general proposal architecture improvement config option docker setup improve modularity dockerfiles service link sparql interface design allow configuration target sparql endpoint ideally via docker environment work architecture show image docker setup locate linkedgeodata docker linkedgeodata docker folder lgd dockerized architecture overview doc asset image lgd architecture png project first osmosis initialize raw openstreetmap postgis database simple schema osm pdf database extend additional table contain rdf map interlink information also helper view provide simplify access integrate information nominatim setup base osm2pgqsl perform enrich initial database osm set rdb2rdf mapping provide enable sparql query postgis database sparql sql rewrite engine sparqlify dump generate simply preconfigured sparql query debian package available technically linkedgeodata set sql database rdf rdb2rdf mapping bash script actual rdf conversion carry sparql sql rewriter view sparqlify mapping linkedgeodata therefore want linkedgeodata debian package also sparqlify late version linkedgeodata package perform follow step set package source register repo echo deb precise main contrib non free sudo tee etc apt source list cstadler aksw org list import public key wget sudo apt key add linkedgeodata sudo apt get update sudo apt get linkedgeodata package manually however instal dependency require work sparqlify cli debian linkedgeodata nominatim debian linkedgeodata debian instal package follow essential command available lgd createdb provide linkedgeodata set complete database ready subsequent rdf conversion lgd createdb snapshot provide linkedgeodata however different schema experimental recommend sparqlify tool provide sparqlify sparql query relational lgd database look section additional tool additional tool read section conversion documentation alternative set find follow setup helper script aim ease linkedgeodata setup directly source without debian package lgd apt ubuntu linkedgeodata cli bin lgd apt ubuntu require system package apt postgres postgis java several dependency require nominatim follow script helper sparqlify debian package mainly intend development lgd dependency sparqlify debian package source lgd dependecies simply late sparqlify debian package conversion section describe create query linkedgeodata database instal linkedgeodata script need obtain openstreetmap want load note make sure read section database tune deal large datasets obtain datasets good source osm datasets bite size chunk full dump refer planet find several script essentially design work clone linkedgeodata git repo wrap debian package configure via lgd conf dist override default setting without change create lgd conf instal debian package instead lgd conf dist etc sparqlify sparqlify conf follow script git repo invoke scriptname forget lgd createdb snapshot experimental possibly much fast version lgd createdb script probably lgd createdb command eventually refer version lgd createdb create load lgd database postgres host name postgres database name postgres user name postgres password add pgpass exist pbf load format currently support wget lgd createdb localhost lgd postgres mypwd monaco late osm pbf reason choose monaco simply small 10mb sparqlify tool small wrapper sparqlify command add simple profile system convenience profile name setting load see override option database host name database name database user name database password add pgpass exist sparql query string name query profile assume locate etc sparqlify profile lgd conf deploy instal linkedgeodata debian package dbhost localhost dbname lgd dbuser postgres dbpass postgres mappingfile usr share linkedgeodata sml linkedgeodata triplify individualviews sml usr share linkedgeodata sml linkedgeodata nominatim sml name query sparql query reference name map name sparql configure via etc sparqlify sparqlify conf currently follow name query exist ontology create triple output class property dump create full dump database sparqlify tool lgd ontology sparqlify tool lgd dump sparqlify tool localhost lgd postgres mypwd construct sparqlify tool lgd select filter note sparqlify still development support feature bite limit right still basic graph pattern equal constraint work fine additional tool lgd osm replicate sequence convert timestamp sequence similar mazdermind replicate sequence however version require local index instead tool combine binary search linear interpolation first recent state txt give repository url fetch time differnce compute base linear interpolation sequence close give timetstamp compute process repeat recursively output presently subset appropriate state txt whose timestamp strictly give argument note timestamp format compatible osmconvert check recent item osm hence tool combine order find state txt proceed replication postgresql database tune recommend tune database accord brief summary edit etc postgresql main postgresql conf set follow property shared_buffers 2gb recommend value available ram set assume 8gb ram effective_cache_size 4gb recommend value available ram set assume 8gb ram checkpoint_segments checkpoint_completion_target autovacuum enable load complete work_mem 256mb memory sort user may amount memory sort may want significantly low value many connection sort maintainance_work_mem 256mb furthermore allow share memory otherwise postgres start append follow line etc sysctl conf share memory max kernel shmmax note amount specify byte kernel shmmax must great shared_buffers setting obove 4gb 8gb make change take effect sudo sysctl sudo service postgresql restart license content project license gpl
Semantic web;https://github.com/SmartDataAnalytics/Beast;beast benchmarking evaluation analysis stack beast lightweight framework make easy rdf rdf workflow java8 stream jena instance want execute set task describe rdf beast easily let create workflow execute often desire record measurement directly rdf vocabulary choice datacube chart rdf chart vocabulary chart vocabulary enable embed information chart render directly rdf full beast core src test resource statistical ttl chart render class org aksw beast cli mainbeastchart beast cli src main java org aksw beast cli mainbeastchart java instal beast debian package give convenient ldcharts command invoke main class render chart ldchartscreenshot doc image ldchart screenshot png feature construction resource centric java stream hence plain rdf property attach resource part stream execution extension jena enhance resource support attach retrieve java object class mean attach parse jena query object resource represent sparql query string loop loop state get attach resource need know uri resource advance painlessly give proper name end workflow base property technically beast essentially provide utility chain function stream great share beast contribution lie conceptual consideration component jena extension attach java object jena resource cast enhance resource resourceenh require create modelfactoryenh rdfstream api enable construction rdf resource base workflow usual stream method map flatmap peek additional repeat analysis compute new resource represent observation aggregate value average standard deviation visualization plot series chart generate output performance measurement beast src main java org aksw beast mainqueryperformance java test query ttl beast src main resource query ttl kfoldcrossvalidation beast src main java org aksw beast mainkfoldcrossvalidation java test fold ttl beast src main resource fold ttl dependency beast aggregate feature low level project among core jena guava visualization optional jfreechart xchart probably future
Semantic web;https://github.com/tkurz/squebi;squebi squebi sparql editor sparql visualizer nice feature customization sparql visualization support sparql update select bookmarkable uris define query visualization type support sparql query edit uris ontology prefix fast backend switch quite useful demo nice gui squebi follow project product apache redlink mico medium salzburgerland installation squeby dependency management get dependency execute bower current version configuration configuration set sparql endpoint additional parameter script include requirejs selectservice string require uri sparql select webservice via post updateservice string require uri sparql update webservice via post configurable boolean squebi allow dynamic change sparql endpoint default false automaticquery boolean squebi automatically send current query page load default true queryparams object additional query parameter property value pair updateallowed boolean allow sparql update query default true namespaces object namespace prefix path prefix pair prefix define look prefix container string identifier class container application default squebi apploader string identifier class container show app load completely container hide app startup complete default apploader app string uri squebi app default bower string uri bower dependency default bower_components responsemessage object custom response message base response number message pair response message define server response display sample list list sample object property name displayd query type writer writer list list include writer enable sample configuration squebi webjar squebi version webjar webjar host maven central put dependency pom important want webjar please require bower dependency first folder bower_components
Semantic web;https://github.com/wikibus/rdf.vocabularies;rdf vocabulary nuget codefactor codefactor badge codefactor link statically type rdf vocabulary net generate automatically respective rdf owl bibo bibliographic dublin core metadata element dcterms dcmi metadata foaf friend friend hydra lightweight vocabulary hypermedia drive web opus ontology computer science owl ontology web rdf rdf concept rdfs rdf schema schema schema org sioc semantically interlink online skos simple knowledge organization nuget codefactor badge codefactor link
Semantic web;https://github.com/yahoo/anthelion;nutch anth anthelion nutch plugin focus crawl semantic project open source project release apache license note project contain complete nutch distribution plugin find src plugin parse anth table content nutch anthelion plugin nutch anthelion plugin plugin overview plugin overview usage development usage development 3rd party library 3rd party library anthelion anthelion reference reference nutch anthelion plugin plugin online approach predict rich web page base context page well feedback extraction metadata previously see page plugin overview perform focus crawl plugin implement extension anthelionscoringfilter implement scoringfilter interface wrap around anthelion online classifier classify newly discover outlinks relevant extension give score outlink generate stage url next fetch cycle select base score extension also push feedback classifier already parse web page online classifier configure tune see usage development usage development wdcparser implement parser interface extension parse web page content try extract semantic parser adaptation already exist nutch parser plugin implement parser base any23 able extract microdata microformats rdfa annotation html extract triple store content field tripleextractor implement indexingfilter interface extension store new field index late query overview complete crawl process anthelion plugin give follow figure usage development mention begin document project contain complete nutch include plugin complete project need change setting want plugin please nutch anth zip root folder step configuration want contribute plugin want source another version nutch please follow follow instruction copy src plugin parse anth folder nutch plugins directory enable plugin conf nutch site xml add parse anth plugin include property copy property nutch anth xml conf nutch site xml baseline property set property anth score classifier propsfilepath conf nutch site xml point contain configuration online classifier order ant compile deploy plugin need edit src plugin xml add follow line deploy target add follow line conf parse plugins xml add follow line alias property conf parse plugins xml copy lib folder root nutch distribution mvn package inside anthelion folder create jar anthelion jar dependency jar copy jar src plugin parse anth lib add follow field conf schema xml also add solr schema xml solr ant root folder order evaluate focus crawler measure precision crawl page ratio number crawl web page contain semantic total number crawl web page far evaluate different seed sample several different configuration overview give follow table seed nutch option standard score anthelion score total page sem page precision total page sem page precision depth topn depth topn depth topn depth topn pairwise comparison give follow chart 3rd party library anthelion plugin several 3rd party open source library tool summarize tool purpose license release project include source apache nutch apache license apache any23 apache license extraction semantic annotation html information 3rd party dependency any23 library find class com yahoo research parse wdcparser com yahoo research parse filterabletriplehandler modify version exist nutch plugins apache license parse crawl web page hellman library tool anthelion please check anthelion readme anthelion detail anthelion project please check anthelion readme reference meusel robert peter mika roi blanco focus crawl structure proceed 23rd acm international conference conference information knowledge management acm hellmann sebastian knowledge base creation enrichment repair link open create knowledge interlink springer international publish troubleshoot todo
Semantic web;https://github.com/hectorcorrea/ldpserver;mini ldp server link platform ldp w3c recommendation define rule implement http api read write link official recommendation find also find gentle introduction ldp warn sandbox project ldp repo likely follow best practice certainly conform ldp spec yet compile server instal machine src git clone git github com hectorcorrea ldpserver git ldpserver ldpserver new follow step instead picky location must inside src folder setup work minimal effort configuration part skip first step already src folder mkdir src export gopath src git clone git github com hectorcorrea ldpserver git ldpserver ldpserver care source fast way get start executable release tab make executable box operation support server curl submit request fetch root node curl localhost post root slug default node sequential number curl post localhost fetch node create curl localhost node1 post non rdf root curl post header content type text plain hello world localhost curl post header content type image jpeg binary filename jpg localhost fetch non rdf create curl localhost node2 http head operation support curl localhost curl localhost node1 curl localhost node2 add rdf source add child node add rdf source curl post localhost node1 see child add curl localhost node1 fetch child curl localhost node1 node3 create node custom slug curl post header slug demo localhost fetch node create curl localhost demo create ldp direct container dc1 node1 membershipresource somerel member relation curl post header content type text turtle header slug dc1 somerel localhost add node direct container curl post header slug child1 localhost dc1 fetch node1 notice reference dc1 child1 predicate somerel define direct container curl localhost dc1 demo take look demo script execute operation support demo make sure ldp server separate terminal window ldp server terminal window ldpserver demo script separate terminal window demo storage every resource rdf non rdf save folder inside folder every rdf source save folder single inside always meta rdf triple node non rdf also save folder meta rdf metadata also bin non rdf content nod blog1 blog2 blog1 rdf node blog2 non rdf structure would look follow meta rdf root node blog1 meta rdf rdf blog1 blog2 meta rdf rdf blog2 blog2 bin binary blog2 overview main launcher program job kick web server web web web server job handle http request response part aware web server server handle operation like create new nod fetch exist ldp node handle operation individual node level fetch save rdf contain utility parse update rdf triple graph todo lot add validation make sure root node match url host port server support ismemberofrelation direct container support indirect container ldp test suite w3c provide test suite make sure ldp server meet minimum criterion test suite find order suite repo need follow clone ldp testsuite repo git clone maven unzip maven ldp testsuite folder ldp testsuite bin mvn package follow command ldp server execute individual test java jar target ldp testsuite snapshot shade jar server test name_of_test_goes_here basic follow basic container test include support non rdf java jar target ldp testsuite snapshot shade jar server basic non rdf basic container test include support non rdf ldp test suite total test failure skip todo document test
Semantic web;https://github.com/kasei/swift-hdt;swift hdt hdt rdf parser macos linux parse hdt limitation project early development many limitation serialize entire hdt possible triple pattern match plan future part dictionary encode currently support log64 encode bitmap triple value currently support reference hdt binary
Semantic web;https://github.com/correndo/mediation;mediation toolkit lightweight toolkit implement ontological mediation rdf ontology mapping order rewrite sparql select query generate sparql construct query import external set api tool divide follow package provide class interface necessary manage distribute datasets provide class interface necessary mediate rdf document sparql query graph rewrite rule provide class interface necessary manipulate sparql algebra level provide sparql xpath function provide class interface necessary interface edoal edoal ontology alignment format edoal ontology alignment represent rdf describe rewrite rule allow define class mapping property mapping manipulation load alignment tool allow rewrite sparql select query order fit give schema kettle boiler original query kettle boiler translate query
Semantic web;https://github.com/nelson-ai/semantic-graphql;semantic graphql unmaintained new repo issue pull request
Semantic web;https://github.com/AKSW/xodx;xodx basic functionality dssn provider semantic friending push notification along edge write php utilize zend framework erfurt installation need webserver test apache hope also nginx lighttd database backend support erfurt mysql virtuoso erfurt git submodules init git submodules update clone erfurt take prepare config ini xodx library erfurt library erfurt copy config ini configure accord system setup zend place copy zend framework library library zend follow thing replace zendversion wget tar xzf zendframework zendversion minimal tar zendframework zendversion minimal library zend library zendframework zendversion minimal tar zendframework zendversion minimal javascript add twitter resource directory convention currently project develop ontowiki cod
Semantic web;https://github.com/albertmeronyo/docker2rdf;docker2rdf mapper represent dockerfiles rdf triple
Semantic web;https://github.com/OpenTriply/YASGUI.legacy;important old unsupported relatively stable yasgui repository still accessible new yasgui library accessible info visit
Semantic web;https://github.com/jeeger/ttl-mode;emacs mode edit turtle rdf change indent ttl mode somewhat support graph good original readme base excellent start make hugo haas extend support indentation electric punctuation hungry delete ttl mode clone project put emacs load path look variable load path find emacs currently search add something like follow emacs autoload ttl mode ttl mode major mode owl turtle add hook ttl mode hook turn font lock ttl mode turn font lock setq auto mode alist append list ttl mode ttl ttl mode auto mode alist comment contribution welcome copyright hugo copyright norman copyright daniel copyright peter ttl mode release term clause bsd see ttl header licence text norman gray
Semantic web;https://github.com/notruthless/csv2rdf;csv2rdf ruth helfinstein csv rdf translator simple csv rdf translation assume first line contain attribute name assume instance separate newlines contain right number element item csv may quote work either way output rdf rdf note currently check output already exist overwrite look configuration call config csv csv input line configuration describe item header line input csv name see header column csv either class property ignore without quote parenthesis optional indicate name property class rdf class property superclass class line config order column csv exception column blank name rename unlabeled1 unlabeled2 match order note column list configuration ignore rdf configuration find program create basic csv2rdf jar csv sample input config csv sample config src source csv rdf console java jar csv2rdf jar note specify name csv command line otherwise default input csv java jar csv2rdf jar input csv create input rdf change add configuration change ignore lead trail space csv add unlabeled1 unlabled2 unlabeld3 attribute csv name blank add property name instance add additional input question want class user answer yes class create subclass thing everything subclassed
Semantic web;https://github.com/ontola/rdf-serializers;rdf serializers rdf serializers enable serialization rdf format serializers modification serialization gem want know passion open send mail mailto ontola argu installation add line application gemfile execute get start first register format wish serialize add follow config initializers rdf_serializers automatically register mime type controller add configuration configure gem rdf serializers configure format register multiple format add correct gem add rdf turtle gemfile put initializer rdf gem list available rdf serialization include ntriples turtle rdf xml json serialize add predicate attribute relation wish serialize recommend reuse exist vocabulary provide rdf gem gem add vocab miss predicate way able access different vocabs throughout application define module add predicate serializers old new rdf serialization require add iri method must return rdf resource contrast json api serializer rdf serializers automatically serialize type recommend add attribute type predicate rdf type method define type serializers fix custom statement per add custom statement serialization serializer meta statement add additional statement serialization controller contribute usual stuff open issue discus change open pull request directly bugfixes refactors
Semantic web;https://github.com/Claudenw/PA4RDF;pa4rdf persistence annotation rdf pa4rdf set annotation entity manager provide jpa like functionality top rdf store account exploit fundamental difference graph storage relational storage pa4rdf introduce annotation map rdf triple subject predicate object plain old java object pojo java dynamic proxy capability documentation
Semantic web;https://github.com/cumulusrdf/cumulusrdf;cumulusrdf see wikipedia detail cumulus rdf store cloud base architecture cumulusrdf provide rest base api crud operation manage rdf current version apache cassandra storage backend cumulusrdf project see wiki page feature mean apache cassandra cumulusrdf offer highly scalable rdf store write intensive application cumulusrdf act link server allow fast lightweight evaluation triple pattern query full support triple quad storage cumulusrdf comprise sesamesail see wiki page cumulusrdf contain sparql1 endpoint please see well wiki page information quick start docker docker get quickly follow command cumulusrdf available want contribute welcome kind contribution cumulusrdf particular developer mail list feel free sign via web interface email cumulusrdf dev list subscribe googlegroups com support sign cumulusrdf mail list via web interface email cumulusrdf list subscribe googlegroups com people involve cumulusrdf develop institute apply informatics formal desciption method aifb well developer community developer random order active contributor andreas wagner andreas harth sebastian schmidt andrea gazzarini federico zancan yongtao mirko kampf previous contributor gunter ladwig steffen stadtmuller felix obenauer publication cumulusrdf link management nest key value store nosql database rdf empirical evaluation acknowledgement cumulusrdf support german federal ministry economics technology izeus project cumulusrdf logo kindly provide daniele liberti
Semantic web;https://github.com/simonjupp/java-skos-api;skos api skos api provide java interface owl api base simple knowledge organization system skos skos w3c vocabulary describe knowledge organization system thesaurus concept scheme information skos see skos api provide owl skos api available single jar source skos api apache maven create jar distribution target folder _mvn clean install_ documentation please refer documentation available skos module support please post question skos dev googlegroups com
Semantic web;https://github.com/lanthaler/Hydra;hydra hypermedia drive web apis hydra effort simplify development interoperable hypermedia drive web apis fundamental block hydra json hydra core vocabulary json serialization format communication server client hydra core vocabulary represent share vocabulary specify number concept commonly web apis foundation web service share rest benefit term loose couple maintainability evolvability scalability furthermore enable creation generic api client instead require specialize client every single api participate development specification please join hydra w3c community group information hydra currently available
Semantic web;https://github.com/RDFLib/graph-pattern-learner;graph pattern learner work progress repository find graph pattern learner give list source target pair sparql endpoint try sparql pattern give source pattern try lead right target algorithm first develop list human association map dbpedia entity see gt_associations csv gt_associations csv source target immediately see association follow single pattern algorithm design able deal try several pattern combination input list source target pair list source target pair complicate algorithm happily terminate early find information algorithm pattern human association page also include publication well pattern human association local dbpedia endpoint include wikilinks requirement graph pattern learner recommend core parallel execution free ram linux bite installation suggest installation method via git clone also allow easy contribution git clone graph pattern learner afterwards setup virtual environment dependency virtualenv venv venv bin activate pip upgrade pip setuptools pip requirement txt deactivate learner actually evolutionary algorithm please consider issue lot query endpoint specify please public endpoint without ask provider first likely disrupt service get blacklist suggest local endpoint fill datasets interest really want public endpoint least multi process version restrict process always feel free reach help feedback via issue tracker via association joernhees might even learner get list available option venv bin activate help deactivate scar length option sane default nice able change thing become familiar learner option definitely interest associations_filename default gt_associations csv sparql_endpoint default full cycle probably might want execute run_create_bundle process sparql_endpoint visualise your_bundle_name associations_filename option algorithm default randomly split input list source target pair test set set visualise pattern bundle_name visualise evaluate prediction first test set prediction venv bin activate pythonioencoding utf scoop associations_filename sparql_endpoint res_dir your_bundle_name predict manual deactivate contributor jorn hees rouven bauer visualise
Semantic web;https://github.com/streamreasoning/TripleWave;triplewave information regard customize triplewave find
Semantic web;github.com/semantalytics/awesome-ontologies;awesome ontology xsd skosxl dcat org vcard geonames prov dcterm sioc marinetlo schema yago dbpedia ontology ontology design cyber skos stw unesco
Semantic web;https://github.com/d2rq/r2rml-kit;r2rml kit export relational database rdf r2rml r2rml kit w3c direct standard generate r2rml map inspect relational database schema validate r2rml map dump content database rdf accord r2rml map dump content database rdf accord w3c direct map access content database jena api besides r2rml r2rml kit also support d2rq map r2rml kit offshoot base abandon develop branch unlike d2rq support sparql include server application equivalent d2rq d2r server r2rml kit currently pre alpha stage yet fully separate d2rq codebase many thing yet work support r2rml name graph feature see short term roadmap r2rml kit mvn compile test various component let assume mysql database call mydb machine generate default map generate map mydb ttl database validate r2rml map validate map mydb ttl dump database create dump dump contain map rdf triple format unit test unit test execute mvn test unit test rely mysql present require database create database call iswc contain src test resource iswc mysql sql echo create database iswc mysql root mysql root iswc src test resource iswc mysql sql empty database call d2rq_test
Semantic web;https://github.com/lorenae/qb4olap-tools;qb4olap tool qb4olap rdfs vocabulary business intelligence link project include set prototype conform showcase vocabulary focus explore query query propose high level olap language call consist set well know operator rollup drilldown slice dice cube metadata also write qb4olap automatically generate sparql query implement sequence operation installation zip extract nodejs open console qb4olap tool directory obtain step npm package need application npm command package liste package json application node qb4olap
Semantic web;https://github.com/marcelotto/rdf-ex;rdf hex total elixir api documentation find guide information rdf relate project migration guide various version find feature fully compatible rdf specification support rdf star extension memory structure rdf description rdf graph rdf datasets basic graph pattern match memory structure stream support execution sparql query memory structure sparql package sparql endpoint sparql client package rdf vocabulary elixir module safe compile time check concise usage iris important xml schema datatypes rdf literal support custom datatypes rdf literal incl derivation xsd datatypes via facet sigils common type nod iris literal blank nod list description dsl resemble turtle elixir triple quad turtle serialization format include respective rdf star extension json rdf xml available separate json rdf xml package validation rdf shex schema shex package map rdf structure elixir structs back grax contribute still much complete rdf ecosystem elixir mean plenty opportunity contribute suggestion serialization format like rdfa csvw hdt etc xsd datatypes improve documentation see contribute contribute detail consult need help elixir link project contact via acknowledgement development project partly sponsor support project complimentary access development environment license copyright present marcel otto mit license see license license detail rdf json rdf xml sparql sparql client shex grax rdf star triple quad turtle json rdfa rdf xml csvw hdt sparql shex
Semantic web;https://github.com/stardog-union/pellet;pellet open source owl reasoner java pellet owl reasoner open agpl commercial license pure java develop commercially complexible inc pellet jena owl api library pellet provide functionality check consistency ontology compute classification hierarchy explain inference answer sparql query _pellet close source next gen version pellet embed available rdf database feel free fork repository submit pull request want see change new feature etc pellet documentation pellet doc directory sample directory commercial support pellet pellet answer frequently ask question pellet user mail question feedback search pellet user bug report enhancement request send mail list issue thank pellet
Semantic web;https://github.com/ML-Schema/core;schema schema collaborative community effort mission develop maintain promote standard schema mine machine algorithm datasets experiment see wiki detail guideline open github issue kind discussion select item discus telco instance see work schema org store schema load protege jena want edit locally github wiki information relevant group user include structure inheritance value bound arrive non ambiguous schema namespace register purl soon possible issue discus first create github issue label discus call conference call conference call conference call hangout every week monday european time zone next call nov nov dec dec next call jan jan feb google group receive update schema contact everybody please join google group join please send short introduction interest schema would like contribute
Semantic web;https://github.com/dgarijo/Widoco;wizard document ontology widoco project status active project reach stable usable state actively logo src main resource logo logo2 png widoco help publish create enrich customize documentation ontology automatically follow series step gui author daniel garijo verdejo dgarijo contributor maria poveda idafen santana almudena ruiz miguel angel garcia oscar corcho daniel vila sergio barrio martin scharm maxime lefrancois alfredo serafini kartgk pat bennett christophe camel jacobus geluk martin scharm rpietzsch jonathan leitschuh jodi schneider giacomo lanza alejandra gonzalez beltran mario scrocca miguel angel garcia flores bakker johnnymoonlight cite widoco widoco work please cite iswc want cite late version software executable widoco need jar executable check late release detail import widoco dependency add dependency repository pom xml follow see widoco page find alternative mean incorporate widoco project description widoco help publish create enrich customize documentation ontology follow series step wizard extend lode framework silvio peroni describe class property property ontology oops webservice maria poveda print evaluation licensius service victor rodriguez doncel determine license uri title addition webvowl visualize ontology extend bubastis show complete changelog different version ontology feature widoco automatic documentation term ontology base markdown class description see doc gallery index html automatic annotation json snippet html produce association provenance page include history vocabulary w3c prov compliant metadata extraction ontology plus mean complete fly generate ontology check best practice know term recognize widoco guideline main section document complete integration diagram creator automatic changelog difference actual previous version ontology base separation section html page write independently replace need content negotiation serialization ontology accord w3c best evaluation report ontology oops web integration license metadata service automatically describe license ontology feature widoco see gui tutorial tutorial explain main feature gui find widoco jar execution late jar widoco available something like widoco version jar dependency jar double click jar may also execute widoco command line usage docker execution first image dockerfile project folder execute widoco command line usage want share docker container host instance load local ontology path need mount container host directory instance option ontfile path require unless onturi load local ontology path document option incompatible onturi onturi uri require unless ontfile load ontology document uri option incompatible ontfile outfolder foldername specify name folder save documentation default mydocumentation conffile path load configuration ontology metadata incompatible getontologymetadata getontologymetadata extract ontology metadata give ontology oops create html page evaluation oops service rewriteall replace exist document ontology previous execution crossref generate overview cross reference section index document generate htaccess provenance page etc generate unless request flag flag intend first version documentation exist saveconfig path save configuration path property give ontology usecustomstyle export documentation alternate daniel vila lang lang1 lang2 generate documentation multiple language separate note language support system load label english includeimportedontologies indicate whether term import ontology current ontology document well htaccess create bundle publication ready deploy apache server webvowl create visualization base webvowl documentation licensius licensius web service retrieve license metadata work getontologymetadata flag enable ignoreindividuals individual include documentation includeannotationproperties include annotation property define ontology documentation default include analytics add snippet google analytics track html documentation need add next flag donotdisplayserializations serialization ontology display displaydirectimportsonly import ontology directly import ontology document rewritebase path change default rewrite base path default value flag htaccess option excludeintroduction skip introduction section documentation unitesections write html section single html document noplaceholdertext add placeholder text remove intro abstract empty description section help show help message exit make widoco automatically recognize vocabulary annotation alternative way make widoco get vocabulary metadata annotation automatically document ontology recommend way add owl guideline include follow best practice indicate recommend alternatively edit project property config config property key value pair metadata property people consider easy add property annotation owl although recommend former option note character list instance first author second author third author browser issue see generate documentation visualization widoco separate content different section html load index html widoco design way easy edit introduction description section independently without aggregate together huge html document content generate widoco store server able see documentation ontology browser however open index html local browser may see document miss section documentation happen browser allow load separate content open locally security reason want explore ontology would look locally option execute widoco unitesections flag select option add section single document load section step widoco gui make section widoco index html able see browser note lode visualization available explore ontology locally create local server set local server xampp tomcat serve widoco generate htdocs folder apache server place generate widoco server access via url github page able see documentation appropriately current improvement complete list current improvement next feature check project open repository requirement need java high sdk jre widoco work otherwise probably experience unsupported major minor version exception execute jar contribution guideline contribution address current issue welcome order push contribution push pull request develop branch master branch associate late release
Semantic web;https://github.com/peta/turtle.tmbundle;turtle tmbundle totally awesome bundle turtle terse rdf triple language consist language grammar turtle sparql powerful auto completion live aggregate documentation class role property fingertip live aggregate interactive sparql query scratchpad snippet prefix document skeleton solid syntax validation command instant graph visualization knowledge base require graphviz raptor automatic removal unused prefix conversion common rdf format see screenshots screenshots __note html output github flavor markdown document look break please visit read original version__ language grammar language grammar cover official w3c parser spec propose late release feb 19th however still particularity differ notice daily work case notice weird behaviour obvious sign break syntax highlight please bug project issue github language grammar also recognize keywords builtin function late spar language specification basic autocompletion aforementioned powerful auto completion turtle bundle offer auto completion level __note determine iris associate give prefix name local prefix declaration always precedence give prefix mess iris prefix directive auto completion might work expect auto completion prefix directive invoke autocomplete command within scope prefix directive right prefix prefix turtle bundle fetch list prefix register display nicely auto complete dropdown box choose confirm selection prefix directive automagically update prefix accord uri note fetch locally cache 24h __note auto completion prefix declaration case insensitive auto completion local part prefix name iris invoke autocomplete command within scope prefix name right turtle bundle determine actual uri abbreviate prefix namespace check machine readable vocabulary ontology document available currently rdf owl document xml serialization format support know issue find live aggregate class role property extract along documentation nicely present auto complete dropdown box note fetch locally cache 24h __note auto completion prefix name case sensitive know issue turtle bundle rely map prefix uris require live aggregation problem however available list contain iri per prefix high rank every iri offer machine readable vocabulary ontology representation turn mean certain prefix auto completion might available help fix visit accord page prefix url scheme look like without angle bracket ofc downvoting accord uris automatic aggregation machine readable vocabulary ontology description work principle still shortcoming see github issue tracker overwork part spare time need arise tell give prefix fetch green tooltip second freeze see autocompletion dropdown late probably mean aggregator script fail iri could redirect resource compatible format documentation class role property individual invoke documentation resource command within scope prefix name iri dog turtle bundle look informal description available like description text http url human readable doc asf display user note fetch locally cache 24h __note function also suffer issue outline previous section interactive sparql query scratchpad web base query form cross cursor thing common suck syntax highlight efficient workflow like trial error roundtripping course decide add something similar textmate execute sparql query command may seem self explain hide important feature first support multiple section single document aware custom magic comment type call marker specify different sparql query update service aka endpoint include call section within document query nicely display together query log preview window press query execute multiple section snippet syntax document contain multiple independent section useful develop complex query usually follow iterative approach execute sparql query command automatically figure intention act accordingly assume always follow task execute whole document execute current selection execute section cursor currently position simple document multiple section could look like probably notice multiple section separate marker string write separate line magic comment syntax endpoint magic comment follow syntax query describe sparql endpoint read update describe sparul endpoint write specify multiple magic comment throughout document execute query command automatically determine require endpoint type depend sparql command occur query scan document magic comment follow strategy _top whole document query scan every line begin top find suitable magic comment _bottom current select section query first check section contain require endpoint case scan every line bottom top begin line section selection start find suitable magic comment suitable magic comment find command consult textmate environment variable set application preference precisely look follow variable tm_sparql_query tm_sparql_update contain http url spar endpoint even fail user prompt enter endpoint url cancel execution abort puppy die document multiple section multiple magic comment endpoint additional magic comment type name section create name section add name section marker name section include section within document detail see next section include include reuse name section place way possible write typically snippet call anywhere else need especially helpful sparql beginner iteratively develop complex query want see effect previous query immediately execute every include snippet list separately web preview window textmate way easy track issue intermediate state query finish order section appear include document matter include section define section include follow show simple case screenshot sparql preview window support img screenshot sparql png screenshot sparql preview window note also basic support simple metadata property follow form propname prop value sparql pendant jsdoc phpdoc comment however beside section name description text idea could vague idea pastebin sparql mind host reusable sparql snippet support parametrized sparql call think snippet right follow snippet include basic document skeleton smart prefix base directive hit tab see work set basic prefix directive bore cool kid instead fancy auto completion syntax validation trigger syntax validation turtle press ctrl shift order make syntax validation must work installation raptor rdf syntax detail instruction wire raptor textmate see graph visualization section screenshot syntax validation error message support img screenshot syntaxval error png screenshot syntax validation error message screenshot syntax validation success message support img screenshot syntaxval success png screenshot syntax validation success message graph visualization order functionality need work installation especially dot command raptor rdf syntax properly instal locatable path everything work fine ootb however case must explicitly tell textmate find introduce configuration variable textmate preference variable tm_dot absolute path dot binary part graphviz tm_rapper absolute path rapper binary part raptor hit cmd active ttl document visualize fly textmate html preview window preview window drive safari webkit render engine pdf document render right line way edit knowledge base visualize workflow super intuitive get interrupt switch separate pdf viewer app view visualization hit shift alt cmd active ttl document visualize save pdf document conversion common rdf format order make converter functionality must need work installation raptor rdf syntax detail instruction wire raptor textmate see graph visualization section screenshot show list available target format user may choose support img screenshot converter png screenshot show list available target format user may choose installation turtle bundle officially available textate bundle installer _textmate preference bundles_ however usually take day new release available bundle installer make sure enable keep bundle update application preference know also bundle like turtle hand clone repository place root directory library application support avian bundle turtle tmbundle way keep distinct bundle instal bundle installer textmate notice new bundle automatically doubt restart textmate screenshots screenshot expand bundle menu support img screenshot menu png screenshot expand bundle menu screenshot show sparql execution support img screenshot sparql exec png screenshot show sparql execution screenshot editor show auto completion resource identifier documentation support img screenshot editor png screenshot editor show auto completion resource identifier documentation screenshot knowledge base visualization support img screenshot visu png screenshot knowledge base visualization meta turtle tmbundle create peter feedback highly welcome find bug feature request simply want contribute something please let know visit official github repository open please help make textmate2 even awesome feature every user could greatly benefit powerful auto completion feature however feature take considerable amount time unfortunately time good allan creator textmate guy macromates enough idea start crowdfunding campaign raise enough fund work month full time contributor textmate project visit campaign page roadmap extract individual autocompletion documentation work documentation component display resource documentation html text clickable link official source notification window polish language grammar add additional cache layer speed thing vanilla macos ruby sloooow rexml module convert rdf owl document xml turtle link resource identifier user jump navigate across involve document fix fix pn_local pattern semicolon inside pol mark terminator rewrite turtle tmbundle nodejs module publish plugin web base editor like cloud9 atom
Semantic web;https://github.com/stoewer/fluent-sparql;coverage fluent sparql project aim provide interface create execute sparql query dsl like fluent api allow write resemble sparql syntax status project still work progress time stable release
Semantic web;https://github.com/knakk/rdf2rdf;rdf2rdf cli tool convert different rdf serialization format primarly make test showcase capabilites rdf status currently support input format rdf xml triple quad turtle currently support output format triple turtle format come soon installation would package get github com knakk rdf2rdf provide gopath bin path good tool prove stable complete provide binary common usage rdf2rdf convert different rdf serialization format usage rdf2rdf input xml output ttl option help show message input output stream true stream mode false verbose mode show progress indicator default converter stream input output emit convert triple quad soon available ensure convert huge minimum memory footprint however small datasets choose load memory conversion make possible sort remove duplicate triple potentially generate compact turtle serialization maximize predicate object list set flag stream false conversion quad format triple format disregard triple context graph conversion triple format quad format support input ouput format determine extension accord follow table format extension triple quad rdf xml rdf rdfxml xml turtle ttl
Semantic web;https://github.com/vocol/vocol;vocol vocabulary collaboration environment inspire agile software content development methodology vocol methodology tool environment allow leight weight ontology version control system git repository host platform github vocol implement without dependency complex software component provide collaborator comprehensible feedback syntax semantics error tight loop give access human readable presentation vocabulary vocol environment employ loose couple validation documentation generation component top standard git repository vocol component even repository engine exchange little effort installation local machine web server follow step need setup vocol environment either local machine web server step valid linux base operate system slight modification window base well follow library instal java jdk nodejs npm git package respective version high info see require library create new directory newfolder clone vocol repository give execution permission follow enter inside vocol folder follow script clean necessary dependent package assume node package manager instal already semantic framework vocol development couple selection need give instal select skip follow yes vocol npm nice finally give public semantic location sematic vocol project last step start vocol npm start vocolportnumber sparqlendpointportnumber follow command start vocol port fuseki server port access vocol start page port number change clear old step describe configuration page display otherwise url configure vocol sometimes port number also change project development possibility look vocol access port number well change open bin www root path vocol keep repository synchronize vocol instance push something configure webhook path repository host platform github gitlab bitbucket point vocol api vocolinstancepath listener connection host server vocol instance available way host platform send notification vocol instance please fundamental explanation webhooks follow link detail vocol repository please look check list project currently moreover docker image vocol include dockerfile docker image license vocol license mit license see license txt detail respective license individual component library please refer require library section current work extened vocol version work service vocoreg please visit follow link
Semantic web;https://github.com/WileyLabs/askos;skos browser editor early stage browser editor usage dev script watch serve askos make available design draft early draft overall intent design highly subject change concept list concept list png browse narrow concept concept narrow png see also design svg design svg welcome contribute license mit
Semantic web;https://github.com/levelgraph/levelgraph;levelgraph dependency __levelgraph__ graph database unlike many graph database __levelgraph__ uber fast key value store powerful library inside node application indexeddb power browser __levelgraph__ loosely follow __hexastore__ approach present article hexastore sextuple index semantic web management wei karras bernstein proceed vldb endowment follow approach __levelgraph__ index every triple order access fast possible __levelgraph__ present graph database browser levelgraph explore new delhi maccioni collina proceed vldb endowment check introduce levelgraph also give levelgraph get quick feel add json turtle document filter able subject predicate object table variable browser console useful check full power levelgraph levelgraph open open source project see contribute section find mean table content usage usage get put get put triple property triple property limit offset limit offset reverse order reverse order update update multiple put multiple put delete delete search search search without stream search without stream triple generation triple generation limit offset limit offset filter filter put delete stream put delete stream generate batch operation generate batch operation generate levelup query generate levelup query navigator api navigator api levelup integration levelup integration browserify browserify rdf support rdf support extension extension todo todo contribute contribute credit credit contributor contributor license mit license license mit license node moment require node port node straighforward need open pull request browser alternatively usage levelgraph api remain node browser however initialization change slightly initialize database easy get put insert triple database extremely easy retrieve pattern match extremely easy even support stream interface triple property levelgraph support add property triple little overhead apart storage cost easy limit offset possible implement pagination get offset limit like reverse order possible get reverse lexicographical order reverse option option support get getstream available search update __levelgraph__ support place update constraint graph order update triple first delete multiple put __levelgraph__ also support put multiple triple delete delete easy search __levelgraph__ also support search search without stream also support similar api without stream triple generation also allow generate stream triple instead solution limit offset possible implement pagination search offset limit like filter __levelgraph__ support filter triple call get solution call search stream support possible filter match triple get moreover possible filter triple search finally __levelgraph__ support filter full solution thank solultion filter possible implement negation heavy method filter solution recommend filter triple whenever possible put delete stream also possible put del triple store stream2 interface generate batch operation also generate put del batch manage batch generate levelup query return leveldb query give triple navigator api navigator api fluent api levelgraph loosely inspire allow specify search graph much compact way navigate vertex match triple allow see last reach vertex variable name also specify like variable also bind specific value like materialize search also produce like also possible change current vertex levelup integration levelgraph allow leverage full power plugins initialize database levelup support easy usage sublevel extremely powerful usage levelgraph partition leveldb browserify bundle module dependency include levelgraph single script tag friendly webpage convenience people unfamiliar browserify pre bundle version levelgraph include folder simply require levelgraph browser module instead level testling follow testling testling levelgraph directory test suite headless browser level rdf support __levelgraph__ support box load serialize rdf store functionality provide extension __n3 turtle__ __json ld__ extension multiple extension time check depend another nest correct order levelgraph levelgraph jsonld independent todo plenty thing library miss feel want feature add __submit pull request__ idea return match triple search support query plan search add sort join algorithm add database operator group filter browser support live search extension rdfa rdf xml microdata contribute levelgraph open open source project mean individual make significant valuable contribution give commit access project contribute see fit project like open wiki standard guard open source project see detail credit levelgraph excellent work levelup community leveldb snappy team google additional contributor leveldb snappy issue new bsd contributor levelgraph possible due excellent work follow contributor matteo collinajeremy taylorelf pavlikriceball leebrian woodwardleon chen license mit license copyright matteo collina levelgraph contributor permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
Semantic web;https://github.com/MM2-0/rdf4a;rdf4a port rdf4j android port rdf4j android platform rdf4j eclipse rdf4j formerly know sesame powerful java framework process handle rdf include create parse scalable storage reason query rdf link offer easy api connect lead rdf database solution rdf4j setup local maven repository include android project
Semantic web;https://github.com/opencube-toolkit/tarql-component;opencube toolkit tarql extension command line tool convert csv rdf sparql syntax write java base apache arq work tarql extension cub tool convert csv rdf accordingly sparql syntax cub generate base provide easy modify query template extension integrate information workbench standard provider interface deliver enable user specify basic information provider along location csv poll interval modify cube map query via provide sparql editor interface include information status time need transform enable browse output triple generate tarql extension stack component instance output rdf visualise opencube map view functionality component top apache arq2 opencube tarql component include new release tarql bring several improvement stream capability multiple query pattern map convenient function typical map activity validation rule include map increase flexibility deal csv variant like tsv opencube toolkit user able create cube directly input store output sparql endpoint opencube tarql extension offer follow option stream csv process column header variable name translate csv import table rdf prepare map sparql construct schema test map show construct template variable name input row
Semantic web;https://github.com/jindrichmynarz/sparqlab;sparqlab sparqlab lab exercise sparql query language task sparqlab formulate sparql query produce satisfy give requirement exercise provide exemplary solution application base pension statistic czech social security administration exercise focus exploration find dimension also domain specific analyse detect region large pay gap male female retire deployment sparqlab deploy via stardog community rdf store instal via docker sparqlab web application base framework need non root path web server web application container set path via app_context enviroment variable docker compose yml similarly customize sparql endpoint sparqlab connect via sparql_endpoint environment variable acknowledgement sparqlab fund developement grant university economics application receive additional support prize best student application base czech open czech open challenge license copyright jindrich mynarz vojtech svatek jan kucera distribute eclipse public license version
Semantic web;https://github.com/oeg-upm/morph-kgc;late pypi pypi morph kgc engine construct knowledge graph heterogeneous source map language morph kgc top leverage map partition significantly reduce execution time memory consumption large source main feature support map language input format relational database microsoft sql tabular hierarchical output rdf serialization linux window macos system compatible high optimize materialize large knowledge graph highly configurable available apache license installation usage fast way morph kgc engine need execute follow see generate configuration also possible morph kgc library documentation check information get relational academic contact julian arena guerrero julian arena guerrero upm ontology engineer group universidad politecnica madrid present
Semantic web;https://github.com/blake-regalia/graphy.js;npm version npm image npm url dependency status daviddm image daviddm url graphy graphy collection high performance rdf library javascript developer focus usability api work browser node expressive cli tool also available node performance benchmark see well graphy outperform command line interface see documentation cli graphy bin cli npm yarn read rdf stream include support triple quad turtle ttl trig trig write rdf stream transform awesome intuitive concise triple concise quad construct rdf object literal reflect tree like structure quad graph subject predicate object include nest blank nod rdf collection compute union intersection difference multiple rdf graph analagous set compare rdf isomoprhic equivalence containment disjointness first canonicalizing rdf normalization transform rdf pip series sub command scan rdf custom multiple thread maximum throughput see api find package need _or_ super package npm save graphy core memory content triple quad turtle trig rdf xml changelog see history change roadmap see list plan license isc blake regalia npm image npm url daviddm image daviddm url
Semantic web;https://github.com/sisinflab-swot/cowl;cowl cowl lightweight api work owl ontology develop sisinf lab swot polytechnic university bari poliba documentation documentation instruction available online doc changelog see changelog changelog copyright license copyright sisinf lab swot polytechnic university bari poliba cowl distribute eclipse public license version epl2 doc epl2 poliba swot
Semantic web;https://github.com/ontola/ontologies;ontology never manage namespace object map scrap typo well know ontology like definitelytyped ontology usage ontology core work rdf link ontology important able quickly create work fundamental block rdf equally important ontology core export object _data factory_ aim assume follow import create literal literal map rdf xsd counterpart pas datatype explicitly also possible please note type rdf must iris create link namednode create link resource _named_ mean authority give resource fix identifier domain resource web also internet ftp magnet elsewhere urn isbn doi note choose scheme widely deploy allow others easy access find access share cool iris design system difficult resource name expensive assign name blank nod resource well identifier yet assign bite tricky way say thing name know yet note time blank nod replace fragment iris without much trouble create statement export overview export ontology core default export proxy currently assign global name export globalsymbol symbol identify factory ontology package create rdf object name export setup bind plainfactory global scope globalsymbol identifier previously undefined name export globalfactory reference last name export plainfactory implement factory interface slight adjustment functional way instance method provide equal function factory name export createns create namespaces ease namednode creation global factory small set type useful work rdf ontology package generate respective ontology provide client application importable symbol name export custom additional term create within give namespace term custom term value string representation override default factory default factory plainfactory package factory suffice need certain rdf library expect method available factory possible override factory custom initialize custom factory call setup ontology core library author want provide alternate default plainfactory want override end user set soft override factory help factory load chance call setup late module initialization cycle sure move setup call _separate_ import _any_ package default export ontology core import import default export ontology core non symbol dash term name replace underscore default export contain verbatim underscore value collision reserve keywords term collide reserve certain class term prepended symbol ontology
Semantic web;https://github.com/protegeproject/sparql-dl-api;sparq api query engine sparql originally write derivo system
Semantic web;https://github.com/phenoscape/scowl;scowl scowl provide scala dsl allow declarative approach compose owl expression axiom owl usage since version scowl available via maven central add dependency sbt import org phenoscape scowl scowl implicit conversion add pseudo manchester syntax method native owl api object additionally functional syntax style constructor extractor scope scowl owl api owl api scowl scowl cross compile support scala scala easy way get start see dsl implement owl web ontology language manchester syntax functional syntax also available scowl expression return native owl api object add axiom programmatically generate gcis ontology pattern match extractor implement negation normal form pattern match extractor comprehension question problem question scowl feel free send email balhoff gmail com open issue contribution welcome contribute fund development scowl support national science foundation grant dbi university north carolina license scowl open source mit see license license information
Semantic web;https://github.com/factsmission/psps;personal structure publish space create link site serve rdf github repository factsmission generate psps repository rdf github repository also accessible via sparql add baseuri root repo base uri see start instance psps add webhook github notify set webhook secret see add rdf repository customize client side render resource add render ttl root repository see render work specify base uri baseuri root repository either directly contain base uri branch containg json object branch name key base uris value json handy allow stag branch propose modification differ main branch propose change also baseuri docker compose start need get github personal access token generate account setting developer setting personal access unix github_token token webhook_secret webhook secret docker compose window env github_token token env webhook_secret webhook secret docker compose add stack psps configure docker compose yml docker compose yml set github_token github personal access token webhook_secret desire webhook secret set webhook psps github repository send request webhook mean everybody know webhook secret publish psps instance add webhook project setting webhooks payload url content type choose application json psps need notify push event power psps psps put together different piece software provide functionality apache jena fuseki apache jena sparql server provide sparql protocol default psps fully expose fuseki interface however sparql query send forward fuseki tlds slds link site provide respectively templating extension apache clerezza apache provide rdf api toolkit slds tlds well psps itsef rdf2h ld2h templating mechanism introduce tlds base allow define renderers rdf integrate rdf2h html ld2h also allow include remote resource alongside resource originate repository
Semantic web;https://github.com/clarkparsia/sparql-proxy;simple sparql endpoint proxy servlet sparql endpoint proxy servlet help bypass cors issue simple proxy redirect element request configure sparql endpoint header request also redirect configure proxy set require configure sparql endpoint proxy proxy host refer host port info stardog http service proxy host previous indicats stardog http protocol modify information either local reference remote war ant proxy war execute ant clean web dist generate sparql proxy war need copy app container webapps directory proxy proxy simple send request follow pattern would stardog directly instance query gov directly stardog http endpoint curl get proxy cors support curl get path sparql proxy servlet containter port gov stardog query query point encode query
Semantic web;https://github.com/egonw/rrdf;package bring rdf sparql functionality jena library need java7 high java helper class rdf package rdf package deal rdf jena rrdflibs jena library information package find preprint willighagen access biological semantic web technology peerj preprints e185v3 see please cite package cite specific release doi rrdf rrdf user mail list copyright license rrdflibs package copyright egon willighagen contributor apache license rrdflibs package copyright jena describe license java notice please also visit rrdf package copyright egon willighagen contributor license agpl rrdf package author contributor author egon willighagen contribution carl boettiger ryan kohl see previously package available cran long case mind install_github method attempt rebuild vignette therefore moment require latex distribution pdflatex package instal see also issue package rjava present already package devtools present already library devtools install_github egonw rrdf subdir rrdflibs install_github egonw rrdf subdir rrdf build_vignettes false compile source rrdf java groovy groovy cmd rrdflibs cmd check cran rrdflibs_1 tar cmd rrdf tar xvf rrdf_2 tar rrdf inst doc tutorial pdf cmd check cran rrdf_2 tar error handle case issue mac follow instruction check java_path variable correctly set touch bash_profile open bash_profile terminal window add follow line bash_profile save export java_home usr libexec java_home export ld_library_path library java javavirtualmachines jdk1 0_31 jdk content home jre lib server export path path java_home bin source bash_profile terminal window check java instal system check see late java version jinit jcall java lang system getproperty java runtime version apple java version like ask reconfigure installation type sudo cmd javareconf terminal window trigger recompile reinstall rjava type package rjava type source sudo usr libexec java_home jre lib server libjvm dylib usr lib terminal window
Semantic web;https://github.com/SDM-TIB/FunMap;funmap functional mapping scale knowledge graph creation present funmap interpreter convert integration system define rml fno equivalent integration system rml mapping function free funmap resemble exist map translation proposal empower knowledge graph creation process optimization technique reduce execution time transformation source include projection attribute rml fno mapping support well know property relational algebra push projection selection source enable reduction size source also elimination duplicate additionally funmap materialize function express fno represent source generate integration system translation rml fno rml mapping integrate materialization function perform mean join generate rml mapping funmap workflow image architecture png raw true funmap workflow research samaneh jozashoori david chaves fraga enrique iglesias oscar corcho maria esther vidal funmap efficient execution functional mapping knowledge graph creation 19th international semantic web conference research track iswc fully reproduce funmap configuration docker python3 author samaneh jozashoori samaneh jozashoori tib david chaves fraga dchaves upm enrique iglesias s6enigle uni bonn oscar corcho ocorcho upm maria esther vidal maria vidal tib
Semantic web;https://github.com/linkeddata/gold;gold join chat gold reference link platform server solid write base initial work william instal docker repository replace port host computer address port number check status container type important want mount host directory container parameter mount host directory home user container directory allow reuse directory without worry persistence inside container github setup mac brew ubuntu sudo apt get golang fedora sudo dnf golang set gopath variable require optionally consider add export gopath bashrc profile check require version late please recent version get command server dependency dependency mac brew raptor libmagic ubuntu sudo apt get libraptor2 dev libmagic dev fedora sudo dnf raptor2 devel devel optional extra dependency test server important among thing gold web server please consider regular user instead root since gold treat equally even though upload make executable prevent client upload malicious script pay attention root parameter root default serve current directory instal github root gopath src github com linkeddata gold otherwise make sure pas dedicate directory serve either command line parameter config configuration something like root var www root instal package via get develop locally repo clone get launch server alternatively compile source dir command configuration provide gold conf create configuration specify conf parameter see list available option bin server help important option default conf optional path config debug output config parameter extra log default false root specify root directory gold serve default likely gopath src github com linkeddata gold http port server listen local development default http port likely reserve pas alternative default http port server listen local development default http port likely reserve pas alternative default test unit test assume instal assert via get github com stretchr testify assert note howto get howto login get howto recover license
Semantic web;https://github.com/stardog-union/stardog.js;stardog universal javascript fetch wrapper communicate stardog http server framework wrap functionality client stardog dbms provide access full set function execute sparql query administrative task stardog reason api http protocol since stardog functionality available protocol information stardog http documentation universal library browser node installation stardog usage stardog conform universal module api node simply require import would node module browser either would node case module bundler module loader directly import stardog html reference global stardogjs object stardogjs query execute development get start clone project need local copy stardog able test information start stardog service work stardog find everything need get stardog database load provide script repository start stardog server stardog dependency test order contribute change test case must pas stardog server execute follow command test case test spec test cluster command need first start stardog cluster cluster suite easy way docker compose start cluster cluster test suite test cluster contribute fork clone develop write amend test open master project commit worry style get rewrite commit change release publish right sure npm version major minor patch immediately publish ensure date also bump version number package json accordingly create git tag match version number automatically update readme changelog type declaration stardog github repo process work correctly need generate github oauth token assign mdchangelog_token environment variable name token relic fact repo generate changelogs custom script order ensure process follow annoy alert trigger whenever publish set ignore alert release sure push master include tag release reflect github version support detail release stardog test recent version stardog available time release relationship version stardog version stardog detail follow table stardog version support stardog version version long supported_ support maintain particular version stardog correspond stardog version officially support maintain long support stardog correspond stardog version long support say late version stardog often _mostly_ work early stardog version test make guarantee effect quick api rdfmimetype follow value application json text turtle application rdf xml application triple application quad application trig sparqlmimetype follow value application sparql json application sparql xml acceptmimetype follow value rdfmimetype sparqlmimetype text plain text boolean application json explainacceptmimetype follow value text plain application json body object follow value status number statustext string object string boolean null boolean header header body connectionoptions object follow value endpoint string username string password string token string meta connectionmeta requestconstructor follow value new input string request init requestinit request requestcreator follow value uri request uri string request constructor returntype connectionmeta object follow value createrequest requestcreator createheaders default header header header connection class construct option connectionoptions connectionoptions connection config option meta take follow params option connectionoptions connectionoptions meta connectionmeta connectionmeta return void void connection header return header header connection uri resource take follow params resource string return string server server shutdown conn params shut stardog server expect follow parameter conn connection connection params object return promise body server status conn params retrieve general status information stardog server default also include status information database server params database false however information database omit expect follow parameter conn connection connection params database boolean return promise body create conn database databaseoptions option params create new database expect follow parameter conn connection connection database string databaseoptions object option filename string params object return promise body drop conn database params delete database expect follow parameter conn connection connection database string params object return promise body get conn database params get rdf representation database see expect follow parameter conn connection connection database string params object return promise body offline conn database params set database offline expect follow parameter conn connection connection database string params object return promise body online conn database params set database online expect follow parameter conn connection connection database string params object return promise body optimize conn database params optimize database expect follow parameter conn connection connection database string params object return promise body list conn params get list database stardog server expect follow parameter conn connection connection params object return promise body size conn database params get number triple database expect follow parameter conn connection connection database string params object return promise body conn database option params get database expect follow parameter conn connection connection database string option object params object return promise body clear conn database transactionid params clear content database expect follow parameter conn connection connection database string transactionid string params object return promise body add conn database transactionid content option params add within transaction expect follow parameter conn connection connection database string transactionid string content string option transactionoptions transactionoptions params object return promise transactionresponse remove conn database transactionid content option params remove within transaction expect follow parameter conn connection connection database string transactionid string content string option transactionoptions transactionoptions params object return promise transactionresponse exportdata conn database option params export content database expect follow parameter conn connection connection database string option mimetype rdfmimetype rdfmimetype params graphuri string return promise body option option getavailable conn get available database option default value expect follow parameter conn connection connection return promise body option get conn database params get set option database expect follow parameter conn connection connection database string params object return promise body option getall conn database get option database expect follow parameter conn connection connection database string return promise body option set conn database databaseoptions params set option database expect follow parameter conn connection connection database string databaseoptions object params object return promise body graph graph doget conn database graphuri accept params retrieve specify name graph expect follow parameter conn connection connection database string graphuri string accept rdfmimetype rdfmimetype params object return promise body graph doput conn database graphdata graphuri contenttype params store give rdf specify name graph expect follow parameter conn connection connection database string graphdata string graphuri string contenttype rdfmimetype rdfmimetype params object return promise body graph dodelete conn database graphuri params delete specify name graph expect follow parameter conn connection connection database string graphuri string params object return promise body graph dopost conn database graphuri option params merge give rdf specify name graph expect follow parameter conn connection connection database string graphuri string option contenttype rdfmimetype rdfmimetype params object return promise body transaction encode follow value gzip compress deflate identity transactionresponse extend http body body object follow value transactionid string transactionoptions object follow value contenttype http rdfmimetype encode encode transaction begin conn database params begin new transaction expect follow parameter conn connection connection database string params object return promise transactionresponse transaction rollback conn database transactionid params roll back transaction remove transaction undo change expect follow parameter conn connection connection database string transactionid string params object return promise transactionresponse transaction commit conn database transactionid params commit transaction database remove transaction make change permanent expect follow parameter conn connection connection database string transactionid string params object return promise transactionresponse icv icv get conn database params get set integrity constraint give database expect follow parameter conn connection connection database string params object return promise body icv add conn database icvaxioms option params add integrity constraint give database expect follow parameter conn connection connection database string icvaxioms string option contenttype rdfmimetype rdfmimetype params object return promise body icv remove conn database icvaxioms option params remove integrity constraint give database expect follow parameter conn connection connection database string icvaxioms string option contenttype rdfmimetype rdfmimetype params object return promise body icv clear conn database params remove integrity constraint give database expect follow parameter conn connection connection database string params object return promise body icv convert conn database icvaxioms option params convert set integrity constraint equivalent sparql query give database expect follow parameter conn connection connection database string icvaxioms string option contenttype rdfmimetype rdfmimetype params graphuri string return promise body icv validate conn database constraint option params check constraint see valid expect follow parameter conn connection connection database string constraint string option contenttype rdfmimetype rdfmimetype params graphuri string return promise body icv validateintx conn database transactionid constraint option params check constraint see valid within transaction expect follow parameter conn connection connection database string transactionid string constraint string option contenttype rdfmimetype rdfmimetype params graphuri string return promise body icv violation conn database constraint option params accept integrity constraint rdf return violation explanation rdf expect follow parameter conn connection connection database string constraint string option contenttype rdfmimetype rdfmimetype params graphuri string return promise body icv violationsintx conn database transactionid constraint option params accept integrity constraint rdf return violation explanation rdf expect follow parameter conn connection connection database string transactionid string constraint string option contenttype rdfmimetype rdfmimetype params graphuri string return promise body icv report conn database constraint option params accept integrity constraint rdf return validation report expect follow parameter conn connection connection database string constraint string option contenttype http rdfmimetype accept acceptmimetype acceptmimetype params graphuri string return promise body icv reportintx conn database transactionid constraint option params accept integrity constraint rdf return validation report expect follow parameter conn connection connection database string transactionid string constraint string option contenttype http rdfmimetype accept acceptmimetype acceptmimetype params graphuri string return promise body reason reason consistency conn database option params return database consistent expect follow parameter conn connection connection database string option namedgraph string params object return promise body reason explaininference conn database inference config params provide explanation inference expect follow parameter conn connection connection database string inference string config contenttype string params object return promise body reason explaininconsistency conn database option params provide reason database inconsistent report reason consistency expect follow parameter conn connection connection database string option namedgraph string params object return promise body reason explaininferenceintransaction conn database transactionid inference config params provide explanation inference within transaction expect follow parameter conn connection connection database string transactionid string inference string config transactionoptions transactionoptions params object return promise body reason explaininconsistencyintransaction conn database transactionid option params provide reason database inconsistent report reason consistency expect follow parameter conn connection connection database string transactionid string option namedgraph string params object return promise body reason schema conn database params get reason schema database expect follow parameter conn connection connection database string params object return promise body doc doc size conn database params retrieve size document store expect follow parameter conn connection connection database string params object return promise body doc clear conn database params clear document store expect follow parameter conn connection connection database string params object return promise body doc add conn database filename filecontents params add document document store expect follow parameter conn connection connection database string filename string filecontents string params object return promise body doc remove conn database filename params remove document document store expect follow parameter conn connection connection database string filename string params object return promise body doc get conn database filename params retrieve document document store expect follow parameter conn connection connection database string filename string params object return promise body namespaces namespaces get conn database get map namespaces database expect follow parameter conn connection connection database string return promise body namespaces add conn database fileorcontents option extract namespaces rdf rdf string add new update exist namespaces database expect follow parameter conn connection connection database string fileorcontents object string option contenttype rdfmimetype rdfmimetype return promise body query querytype follow value select ask construct describe update path null propertyoptions object follow value uri string property string additionalhandlers object follow value onresponsestart response boolean void query property conn database config params get value specific property uri individual expect follow parameter conn connection connection database string config propertyoptions propertyoptions params object return promise body query explain conn database query accept params get query plan generate stardog give sparql query expect follow parameter conn connection connection database string query string accept explainacceptmimetype explainacceptmimetype params object return promise body query execute conn database query accept params additionalhandlers execute query database expect follow parameter conn connection connection database string query string accept acceptmimetype acceptmimetype params object additionalhandlers additionalhandlers additionalhandlers return promise body query executeintransaction conn database transactionid query option params execute query database within transaction expect follow parameter conn connection connection database string transactionid string query string option accept rdfmimetype rdfmimetype params object return promise body query list conn get list actively query expect follow parameter conn connection connection return promise body query kill conn queryid kill actively query expect follow parameter conn connection connection queryid string return promise body query get conn queryid get information actively query expect follow parameter conn connection connection queryid string return promise body storedqueryoptions object follow value name string database string query string share boolean reason boolean description boolean store query store create conn config params store query stardog either system level give database expect follow parameter conn connection connection config storedqueryoptions storedqueryoptions params object return promise body query store list conn params list store query expect follow parameter conn connection connection params object return promise body query store update conn config params useupdatemethod update give store query create name refer exist store query expect follow parameter conn connection connection config storedqueryoptions storedqueryoptions params object useupdatemethod boolean return promise body query store remove conn storedquery params remove give store query expect follow parameter conn connection connection storedquery string params object return promise body graphql query graphql execute conn database query variable params additionalhandlers execute graphql query expect follow parameter conn connection connection database string query string variable object params object additionalhandlers additionalhandlers additionalhandlers return promise body query graphql listschemas conn database params retrieve list graphql schema database expect follow parameter conn connection connection database string params object return promise body query graphql addschema conn database name schema params add graphql schema database expect follow parameter conn connection connection database string name string schema object params object return promise body query graphql updateschema conn database name schema params update add non existent graphql schema database expect follow parameter conn connection connection database string name string schema object params object return promise body query graphql getschema conn database name params retrieve graphql schema database expect follow parameter conn connection connection database string name string params object return promise body query graphql removeschema conn database name params remove graphql schemafrom database expect follow parameter conn connection connection database string name string params object return promise body query graphql clearschemas conn database params clear graphql schema database expect follow parameter conn connection connection database string params object return promise body utils query utils querytype query return querytype string null give query expect follow parameter query string return querytype querytyp query utils mimetype query return default http accept mime type give query expect follow parameter query string return http acceptmimetype acceptmimetyp user user object follow value username string password string superuser boolean action follow value create delete read write grant revoke execute resourcetype follow value user role admin metadata name graph icv constraint user list conn params get list user expect follow parameter conn connection connection params object return promise body user get conn username params get information give user expect follow parameter conn connection connection username string params object return promise body user create conn user params create new user expect follow parameter conn connection connection user user user params object return promise body user changepassword conn username password params change user password expect follow parameter conn connection connection username string password string params object return promise body user valid conn params verify connection credential valid expect follow parameter conn connection connection params object return promise body user enable conn username params verify user enable expect follow parameter conn connection connection username string params object return promise body user enable conn username enable params enable disable user expect follow parameter conn connection connection username string enable boolean params object return promise body user setroles conn username role params set role user expect follow parameter conn connection connection username string role string params object return promise body user listroles conn username params get list role assign user expect follow parameter conn connection connection username string params object return promise body user assignpermission conn username permission params create new permission user give resource expect follow parameter conn connection connection username string permission permission permission params object return promise body user deletepermission conn username permission params remove permission user give resource expect follow parameter conn connection connection username string permission permission permission params object return promise body user permission conn username params get list permission assign user expect follow parameter conn connection connection username string params object return promise body user effectivepermissions conn username params get list user effective permission expect follow parameter conn connection connection username string params object return promise body user superuser conn username params specify whether user superuser expect follow parameter conn connection connection username string params object return promise body user remove conn username params delete user expect follow parameter conn connection connection username string params object return promise body user token conn return token user connection valid expect follow parameter conn connection connection return promise body permission object follow value action action resourcetype resourcetype resource string role user role create conn role params create new role expect follow parameter conn connection connection role name string params object return promise body user role list conn params list exist role expect follow parameter conn connection connection params object return promise body user role remove conn role params delete exist role system expect follow parameter conn connection connection role string params object return promise body user role userswithrole conn role params list user assign give role expect follow parameter conn connection connection role string params object return promise body user role assignpermission conn role permission params add permission give resource give role expect follow parameter conn connection connection role string permission permission permission params object return promise body user role deletepermission conn role permission params remove permission give resource give role expect follow parameter conn connection connection role string permission permission permission params object return promise body user role permission conn role params list permission assign give role expect follow parameter conn connection connection role string params object return promise body virtualgraphs sharedoptions object follow value base string mapping syntax string percent encode boolean optimize import boolean query translation default legacy rdbmsoptions extend sharedoptions sharedoptions object follow value jdbc url string jdbc username string jdbc password string jdbc driver string parser sql quote native ansi sql function string sql schema string default mapping include table string default mapping exclude table string mongooptions extend sharedoptions sharedoptions object follow value mongodb uri string csvoptions extend sharedoptions sharedoptions object follow value csv separator string csv quote string csv escape string csv header boolean csv skip empty boolean allvgoptions follow value sharedoptions rdbmsoptions mongooptions csvoptions mappingsrequestoptions object follow value preferuntransformed boolean syntax string vgmeta object follow value string datasource string virtualgraphs list conn retrieve list virtual graph expect follow parameter conn connection connection return promise body virtualgraphs listinfo conn retrieve list virtual graph info expect follow parameter conn connection connection return promise body virtualgraphs add conn name mapping option meta add virtual graph system expect follow parameter conn connection connection name string mapping string option meta vgmeta vgmeta return promise body virtualgraphs update conn name mapping option meta update virtual graph system expect follow parameter conn connection connection name string mapping string option meta vgmeta vgmeta return promise body virtualgraphs remove conn name remove virtual graph system expect follow parameter conn connection connection name string return promise body virtualgraphs online conn name bring virtual graph online expect follow parameter conn connection connection name string return promise body virtualgraphs available conn name determine name virtual graph available expect follow parameter conn connection connection name string return promise body virtualgraphs option conn name retrieve virtual graph option expect follow parameter conn connection connection name string return promise body virtualgraphs mapping conn name requestoptions retrieve virtual graph mapping expect follow parameter conn connection connection name string requestoptions mappingsrequestoptions mappingsrequestoptions return promise body virtualgraphs importfile conn filetype database importoptions import json csv database via virtual import expect follow parameter conn connection connection object filetype string database string importoptions mapping string property string namedgraph string return promise body storedfunctions storedfunctions add conn function params add store function server expect follow parameter conn connection connection function string params object return promise body storedfunctions get conn name params retrieve specify function definition expect follow parameter conn connection connection name string params object return promise body storedfunctions remove conn name params remove store function server expect follow parameter conn connection connection name string params object return promise body storedfunctions clear conn params remove store function server expect follow parameter conn connection connection params object return promise body storedfunctions getall conn params retrieve export store function server expect follow parameter conn connection connection params object return promise body cluster cluster info conn retrieve basic information stardog cluster expect follow parameter conn connection connection return promise body cluster status conn retrieve detail status information stardog cluster expect follow parameter conn connection connection return promise body datasources datasources list conn retrieve list source expect follow parameter conn connection connection return promise body datasources listinfo conn retrieve list source info expect follow parameter conn connection connection return promise body datasources info conn name retrieve name source info expect follow parameter conn connection connection name string return promise body datasources add conn name option add source system expect follow parameter conn connection connection name string option return promise body datasources update conn name option requestoptions update name source system expect follow parameter conn connection connection name string option requestoptions force boolean return promise body datasources remove conn name params remove name source system expect follow parameter conn connection connection name string params object return promise body datasources share conn name change private source share expect follow parameter conn connection connection name string return promise body datasources online conn name bring name source online expect follow parameter conn connection connection name string return promise body datasources available conn name determine name source available expect follow parameter conn connection connection name string return promise body datasources option conn name retrieve name source option expect follow parameter conn connection connection name string return promise body datasources getmetadata conn name option retrieve name source metadata expect follow parameter conn connection connection name string option object return promise body datasources updatemetadata conn name metadata option update name source metadata expect follow parameter conn connection connection name string metadata option object return promise body datasources query conn name datasourcequery query source expect follow parameter conn connection connection name string datasourcequery string return promise body datasources refreshcounts conn name tablename refresh table row count estimate expect follow parameter conn connection connection name string tablename string return promise body datasources refreshmetadata conn name tablename refresh metadata expect follow parameter conn connection connection name string tablename string return promise body
Semantic web;https://github.com/rdf2h/rdf2h;rdf2h rdf2h tool render rdf resource mustache template need npm nodejs instal order compile source convenience compilation also git directory dist dependency create update dist rdf2h npm
Semantic web;https://github.com/ssrangan/gm-sparql;sparql graph mine sparql resource description framework rdf sparql protocol rdf query language sparql introduce decade ago enable flexible schema free interchange semantic web today scientist framework scalable graph representation integrate query explore analyze set host different source increase adoption need graph mine capability semantic web emerge address need popular iterative graph mine algorithm degree distribution diameter radius node eccentricity triangle count connect component analysis pagerank implement algorithm sparql query wrap within script graph mine algorithm linear algebra formulation indeed unleash represent rdf graph sparql query interface although primarily develop cray urika host department energy oak ridge national laboratory open source version work apache jena triplestore test eagle work desktop laptop cloud service amazon ec2 eagle play critical role exploratory analysis massive heterogeneous graph semantic knowledge graph believe support user feedback create matlab linkeddata really appreciate cite follow useful anyway work lee lees4 ornl gov sukumar sukumarsr ornl gov lim lims1 ornl gov graph mine meet semantic web proc workshop engineer meet semantic web conjunction international conference engineer korea list ornl team member alphabetical order sangkeun lee lees4 ornl gov leesangkeun gmail com post doc seung hwan lim lims1 ornl gov seokyong hong shong3 ncsu edu intern sreenivas sukumar sukumarsr ornl gov tyler brown browntc ornl gov intern
Semantic web;https://github.com/Remixman/Vedas;veda veda rdf store engine able query sparql single gpu dependency moderngpu thrust raptor rdf syntax rasqal rdf query veda database first prepare rdf triple format extension vdbuild load triple veda internal format internal database vdd generate query rdf veda support query vdquery query engine load rdf wait input prompt show finish load submit query command sparql exit terminate program sparql path option speccify sparql path visualize rdf graph load database vdbuild construct graph vertex edge name tool nod txt edge nod txt generate graphml follow command output triple graphml open support software graphia gephi etc
Semantic web;https://github.com/white-gecko/TriplePlace;tripleplace tripleplace light weight flexible triple store android index structure similar tripleplace persistent storage system also publish patch version tokyocabinet java api resp tripleplace free software redistribute modify term gnu general public license publish free software foundation either version license option late version tripleplace distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail receive copy gnu general public license along tripleplace see implement implement kind log implement atomicity consistency acid index implement edit maybe delete operation norman say delete would expencive maybe mark triple delete implement query graph patherns implement rdf xml triple turtle import export
Semantic web;https://github.com/kbss-cvut/jopa;jopa java owl persistence api jopa java owl persistence framework aim efficient programmatic access owl2 ontology rdf graph java system base integrity constraint owl jopa establish contract jopa enable java application owl ontology system architecture api similar jpa see notable change support sparql base entity attribute criterion api see detail support multilingual string attribute see info support semantic object query language soql see info support rdf simple literal language string access lexical form literal update name graph handle support entitymanager getreference support java stream query api rdf4j repository configuration jena ontodriver single class inheritance support map superclass support main feature object ontological map oom base integrity constraint explicit access infer knowledge access unmapped property individual type transaction separate storage access layer jena owlapi rdf4j sesame driver available object ontological map base integrity constraint similarly orm oom enable map ontological construct construct object orient program language vice versa specifically oom jopa map jls terminology ontology language owl class reference type object property reference type member property primitive type member string date annotation property reference primitive type member class assertion reference type instance type record mean individual belong owl class retrieve instance java class inheritance support map superclass add version __0 0__ support single inheritance add version __0 0__ explicit access infer knowledge member annotate infer annotation represent field whose value retrieve reasoner contain value inverse object property like jedi limitation jopa require explicit class assertion able load individual instance class value infer member read restriction pragmatic reason knowledge infer directly modify remove therefore would make sense remove object property value infer access unmapped property individual type oom mean completely capture ontological would even make much sense main feature jopa ability work knowledge part object member annotate type property type field contain owl class whose instance particular individual represent object property field contain value property map object way application get although limit access unmapped property value value newly add property without need adjust object recompile transaction jopa support object level transaction addition make transactional change visible transaction make mean add instance class transaction list instance class transaction see newly add instance well feature usually see even large triple store limitation approach currently pending change take account inference also current version sesame ontodriver able include pending change sparql query separate storage access layer similarly jpa jdbc driver jopa sit top ontodriver instance provide access underlie storage main reason split first decouple storage specific api usage generic oom core second enable application switch underlie storage little line configuration nothing else need modify support storage jena since owlapi sesame rdf4j support yet jopa currently support important feature multiple inheritance referential integrity single inheritance map superclass support since version resp multiple inheritance currently plan referential integrity mean remove instance reference another instance possible feature vital object orient application compatible open world nature ontology design possibility implication currently study miss plan stuff find todo todo github issue tracker module whole framework consist several module _jopa api_ definition jopa api similar jpa _ontodriver api_ api storage access layer _jopa implementation_ persistence provider _ontodriver sesame_ ontodriver rdf4j sesame access storage _ontodriver owlapi_ ontodriver owlapi access _ontodriver jena_ ontodriver jena base storage _owl2java_ generate jopa entity base integrity constraint input ontology see _jopa maven plugin_ maven plugin object generation owl2java module represent integration test various utility documentation check general information jopa explanation feature usage gradually content javadoc late stable version available practical jopa feature see jopa repository usage jopa find separate repository simplistic demo jopa mature project jopa persistence provider find safety occurrence report tool develop aviation industry part inbas project live demo jopa also binbas recently skos vocabulary manager note jopa require java late get jopa way get jopa project clone repository zip maven maven dependency maven central basically _jopa impl_ module ontodriver need info information jopa find article jopa status metric find jenkins sonarqube performance performance comparison jopa object triple map library find comprehensive comparison feature performance object triple map library present relate relate library serialization deserialization pojos json declarative spring transaction transactional annotation jopa report real life case jopa complex date case jopa reference tao sirin bao mcguinness integrity constraint owl twenty fourth aaai conference artificial intelligence available online jsr java language specification java edition kremen kouba ontology drive information system design ieee transaction system man cybernetics part may ledvinka kremen jopa access ontology object orient way proceed 17th international conference enterprise information system porto scitepress science technology publication isbn ledvinka kremen kostov jopa efficient ontology base information system design semantic web eswc satellite event cham springer international publish issn isbn eswc ledvinka kremen kostov blasko sisel aviation safety power semantic technology znalosti plzen zapadoceska univerzita plzni isbn ledvinka kremen comparison object triple map library semantic web doi license lgplv3
Semantic web;https://github.com/mdesalvo/RDFSharp;rdfsharp nuget rdfsharp modular api make layer create manage rdf resource literal triple graph namespaces exchange standard rdf format triple trix turtle rdf xml create validate shacl shape shape graph shape target constraint report create manage rdf store context aware rdf context quadruple exchange standard rdf format quad trix create execute sparql query graph store federation sparql endpoint create execute sparql operation graph store sparql update endpoint create manage owl ontology class restriction property fact assertion annotation validate wide set intelligent semantic rule analyze box box create execute swrl reasoner forward chain materialization ontology inference create manage skos scheme concept collection relation annotation label
Semantic web;https://github.com/Wimmics/corese;software platform semantic web link corese software platform implement extend standard semantic web allow create manipulate parse serialize query reason validate rdf corese implement w3c standarts sparql1 query owl also implement extension like sttl sparql version corese corese library java library process rdf corese feature via api corese server tool easily create configure manage sparql endpoint corese gui graphical interface allow easy visual corese feature corese library documentation get start corese server corese server jar documentation get start corese gui corese gui jar compilation source source compile contribution discussion support question comment idea improvement would like discus please discussion welcome everyone contribute issue suggest new feature create pull general information corese source corese server mail list corese user inria subscribe mail list corese user request inria subject subscribe
Semantic web;https://github.com/mmlab/Git2PROV;coverage git2prov check minute git2prov tutorial depth description tool creation refer follow git2prov expose version control system content w3c tom sara magliacane ruben verborgh sam coppens paul groth erik mannens rik van walle publish poster demo proceed 12th international semantic web conference disclaimer license git2prov joint work ghent multimedia project university people involve tom ghent university iminds mmlab sara magliacane amsterdam ruben verborgh ghent university iminds mmlab sam coppens ghent university iminds mmlab paul groth amsterdam erik mannens ghent university iminds mmlab rik van walle ghent university iminds mmlab choose make git2prov open source gpl version believe lead full potential much value web community single isolate instance server somewhere short free modify git2prov non commercial purpose long make stuff open source well properly credit conveniently cite mention installation make sure node git instal system path variable convert repository convert single repository git2prov git_url serialization git2prov git github com rubenverborgh git prov json server server follow command git2prov server port git2prov server browser enter follow url give standard git2prov service directly follow url open git repository serialization optional parameter optional parameter serialization prov default prov json prov prov xml shorthashes true force git log short hash make output readable human ignore provenance relation appear output multiple value possible open git repository serialization prov json shorthashes true ignore wasinformedby ignore start proxy server node proxy node proxy service linux unix machine script combination init could also modify work upstart copy startup script git2prov etc init directory make executable add startup service command service automatically start machine reboot
Semantic web;https://github.com/AKSW/AutoSPARQL;introduction autosparql tbsl graphical user interface allow answer natural language query rdf knowledge base base algorithm implement learner semantic web machine framework requirement java high maven high git ipv6 capable internet connection free ipv6 tunnel service like miredo teredo connection support natively warn autosparql tbsl research prototype actively develop anymore get work may need effort depend availability several online service feel free create issue encounter problem please share fix pull request installation execution clone git repository compile linux mac compile bat bat window manually mvn folder order autosparql common algorithm tbsl autosparql tbsl mvn jetty browser access click link application error report encounter error please look issue problem already report please create single issue include command line output error occur compilation please createcompillelog instead compile create compile log feel free create issue encounter problem please share fix pull request add datasource instead dbpedia oxford nontrivial need several day work addition time need familiarize base need fork autosparql tbsl add domain dependent lexicon ltag grammar algorithm tbsl src main resource tbsl lexicon see well exist folder add knowledge base local algorithm tbsl src main resource yourmodel prefer small knowledge base much fast reliable sparql version enough endpoint along solr server instance create singleton knowledge base see package org aksw autosparql tbsl algorithm knowledgebase extend org aksw autosparql tbsl algorithm tbsl tbslyourknowledgebase finally case private please pull request integrate main project module package maven module package purpose autosparql parent parent module algorithm tbsl org aksw autosparql tbsl algorithm algorithm common org aksw autosparql common utility autosparql tbsl org aksw autosparql tbsl gui vaadin web interface
Semantic web;https://github.com/UMKC-BigDataLab/RIQ;riq rdf index quadruple summary riq new approach fast process sparql query large datasets contain rdf quadruple quad query also call name graph query riq employ decrease conquer strategy rather index entire rdf riq identify group similar rdf graph index group separately query process riq novel filter index first identify candidate group may contain match query candidate execute optimize query conventional sparql processor jena tdb produce final publication ana katib praveen rao vasil slavov tool efficiently process sparql query rdf 16th international semantic web conference iswc page austria vienna october demo ana katib vasil slavov praveen rao riq fast process sparql query rdf journal web semantics jws vol page march elsevier vasil slavov ana katib praveen rao vinutha nuchimaniyanda fast process sparql query rdf quadruple 8th ieee symposium computational intelligence security defense application cisda verona may poster vasil slavov ana katib praveen rao srivenu paturi dinesh barenkala fast process sparql query rdf proceed 17th international workshop web webdb snowbird june contributor faculty praveen rao phd student vasil slavov ana katib student srivenu paturi dinesh barenkala vinutha nuchimaniyanda acknowledgment work support national science foundation grant
Semantic web;https://github.com/newsreader/eso-and-ceo;event imply situation ontology eso circumstantial event ontology calamity ceo repository contain event imply situation ontology eso develop newsreader www newsreader project circumstantial event ontology calamity ceo eso_version2 owl stable version ontology ontology describe eso_documentation folder manual mapping comprise several manually mapping eso framenet sumo wordnet repository contain ceo ontology upon metamodel eso ceo design calamity domain murder earthquake flood evacuation etc allow infer chain event base share event property current version version may onwards repository maintain update event imply situation ontology eso roxane segers marco rospocher license base work
Semantic web;https://github.com/esbranson/any2rdf;any2rdf convert openoffice org libreoffice uno gdal etc rdf shp2rdf shp2rdf config dependency
Semantic web;https://github.com/blake-regalia/linked-data.syntaxes;syntax highlight link developer syntax highlighter package cover entire grammar specification language provide high resolution scope immediately show invalid syntax special alert highlight token available package linkeddata alternatively sublime package source archive feature highly resolution scoping allow detail color scheme malformed syntax detection expect token inspectable via scope auto completion validation prefix mapping register currently support language sparql rdf ttl rdf shexc rdf rdf currently support platform sublime text currently support color theme macaron dark macaron light beta plan langauage support owl manchester owl functional style rdfa json plan platform support atom codemirror emacs mint latex ace plan color theme support suggestion activate light color scheme package ship color scheme design specifically high resolution scope syntax highlight definition create default package macaron dark macaron dark color scheme prefer macaron light macaron light need create setting override syntax define first create new sublime paste content next save linkeddata sublime setting user folder sublime text package path end package user linkeddata sublime setting finally create new symbolic link syntax user subdirectory linux mac open terminal directory window open command prompt directory override default color scheme syntax load current view preview macaron dark turtle turtle preview doc preview macaron dark turtle png sparql sparql preview doc preview macaron dark sparql png shexc shexc preview doc preview macaron dark shex png macaron light turtle turtle preview doc preview macaron light turtle png sparql sparql preview doc preview macaron light sparql png shexc shexc preview doc preview macaron light shex png
Semantic web;https://github.com/Robsteranium/csvwr;csv web package csvwr read write csv table annotate metadata accord csv web standard csvw csvw tabular describe annotate group csv table ensure interpret correctly package csvw metadata find table identify column name cast value correct type aim reduce amount manual work need parse prepare analysis usage read csvw csvwr read csv table json annotation frame alternatively jump straight parse table call write csvw also prepare annotation frame complete introduction library please see vignette read write csvw installation need devtools package github contribute roadmap broadly speak objective follow parse csvw create dataframes specify name type mostly implement connect associate csv table json accord convention set csvw standard partly implement support validate table accord metadata document little implement support multiple table mostly implement tool write csvw metadata give frame partly implement vignette documentation mostly implement script useful tool command line yet implement urgent objective library perform csv2rdf csv2json translation although support csv2json provide test parse correctly term csvw test case provide standard follow area need address rough priority order datatypes simple datatypes complex support type constraint validation lot propagation inherit property retrieval readr read_csv indeed utils read csv accept uris spec also involve link dialect content type header referential integrity foundation place json nest test project currently incorporate main part csvw suite parse json case subset test entry expect pas give part standard thus far implement entry skip either permanently priority implement find need implement next widen subset include next entry development may find convenient recreate test entry exploration convenience function export package need evaluate explicitly follow also depth unit write library workflow devtools load_all ctrl shift rstudio load update testthat test_local ctrl shift test order check vignette need devtools build_vignettes open vignette read write csvw license gpl discus license term please get contact mailto csvw infonomics ltd csvw tool another csvw package interest csvw generally ruby gem provide robust comprehensive support translation validation specifically interest validation take look implement csvw also frictionless table want rdf translation might like check also generate csvw annotation csv describe rdf
Semantic web;https://github.com/pebbie/triplify;triplify continue triplify org php project aksw merge triplify rgeorgy
Semantic web;https://github.com/cosminbasca/jvmrdftools;jvmrdftools simple collection rdf tool scala important note software product research carry university come warranty whatsoever fun todo unit test documentation gotcha every time project version information change buildinfo need regenerate simply generate assembly module simply thank lot university swiss national science generously fund research lead software
Semantic web;https://github.com/IBCNServices/StreamingMASSIF;streamingmassif streamingmassif platform stream extension massif platform streamingmassif allow perform cascade reason combine various component standard configuration allow filter meaningful event datastream rdf stream process abstract selection reason perform complex event process ontop abstraction check depth explanation stream massif cite stream cite massif requirement java maven2 massif app call mvn get compile jar massif class usage high level apps call mvn compile project local repository add package high level app dependency see pom xml snippet massif call compile jar command line follow call command return something like cli option tcp port massif listen default gui massif gui available rest api massif allow direct management get post call important path register register configuration stop stop certain query configs get register configs rest api call tool list active configs note return active config stop config pre requisite config see previous command note return send config note return config get component metric pre requisite component see previous command
Semantic web;https://github.com/white-gecko/jekyll-rdf;jekyll rdf jekyll include rdf static site gem coverage api documentation available content installation installation usage usage configuration configuration jekyll site jekyll site define template define template parameter configuration option glance parameter configuration option glance resource attribute resource attribute liquid filter liquid filter plugin configuration _config yml plugin configuration _configyml development development license license installation prerequisite jekyll rdf course need please take look installation instruction already work jekyll installation add jekyll rdf plugin probably already jekyll directory add jekyll rdf plugins section replace version string currently available stable release list update gemfile probably want bundle bundle path vendor bundle bundle update gemfile manage jekyll ruby package jekyll rdf gem want plugin source please look development development section usage section explain jekyll rdf step configuration configuration jekyll site jekyll site define template define template filter method template configuration option document section parameter configuration option glance parameter configuration option glance configuration first need jekyll page order create parameter require _config yml jekyll rdf url baseurl parameter include resource page root site plug configure path rdf present map resource template possible map specific class resp rdf type individual resource template template map class render instance class subclass instance render specific class map template map ambiguous resource warn output command window watch also possible define default template resource cover class_template_mappings instance_template_mappings restrict resource selection restrict resource select add sparql query restriction parameter _config yml please resourceuri placeholder uris pre define keywords restriction implement subject load subject uris predicate load predicate uris object load object uris sparql endpoint limit select query also define list resource _data restriction txt cool follow content _config yml specify key restriction_file restriction_file restriction specify jekyllrdf page union blank nod furthermore decide want render blank nod need add include_blank _config yml prefer language finally also possible set prefer language rdf literal option language jekyll site jekyll render rdf resource _site directory jekyll serve render rdf resource provide instant http server usually accessible rdf resource whose iris start configure jekyll url baseurl render _site rdfsites subdirectory define template make rdf create rdf_index html person html _layouts directory resource page render see template include template test source _layouts rdf_index html test source _layouts person html get iri resource page rdf currently render resource page rdf iri return iri currently render resource access object connect current subject via predicate custom liquid filter single object list object rdf_property filter see single object multiple object single object access object connect current subject give predicate please filter page rdf rdf_property filter optional language selection select specific language please add second parameter filter multiple object get object connect current subject give predicate please filter rdf_property conjunction third argument set true second argument language omit set nil optional language selection select specific language please add second parameter filter rdf container collection support rdf rdf provide rdf_container rdf_collection filter case respective container resource resp head collection need identify pas respective filter container currently support explicit instance rdf bag rdf seq rdf alt member identify rdfs containermembershipproperty rdf rdf rdf collection identify rdf first rdf rest terminate rdf rest rdf nil since head collection need identify blank node identify indirectly predicate contain collection graph template resource custom sparql query implement liquid filter sparql_query custom sparql query occurence resourceuri get replace current uri caution separate query resultset variable liquid concept define prefix rdf possible declare set prefix rdf_property sparql_query liquid filter allow shorten amount text require liquid filter syntax prefix declaration sparql put prefix separate include key rdf_prefix_path together relative path yaml front prefix prefix rule apply variable define yaml front matter variable available access liquid tag also layout include page post question rely source yaml front especially relevant prefix include deal fragment identifier uri resource contain fragment identifier resource host together resource base uri fragment identifier single page page accessible base uri template individual uris fragment identifier accessible collection page sub_rdf _config yml _layouts family html template family html render single page contain every resource whose uri begin well resource jekyll rdf collect resource fragment identifier uri call subresources pas page sub_rdf template superresource resource whose base uri subresources except fragment identifier parameter configuration option glance resource attribute every resource return jekyll rdf filter object liquid also handle like string follow method usable liquid resource statements_as_subject return list statement whose subject current resource statement return list access address position statement subject statement predicate respective statement object resource statements_as_predicate return list statement whose predicate current resource statement return list access address position statement subject statement predicate respective statement object resource statements_as_object return list statement whose object current resource statement return list access address position statement subject statement predicate respective statement object resource page_url return url page represent rdfresource resource render_path return path page represent rdfresource care resource cover method relevant render page iris contain fragment identifier method return true super resource actually describe give knowledgebase resource inspect return verbose string represent resource liquid filter rdf_get synopsis rdf_get parameter string represent rdf resource prefix prefix name full iri reference resource current page page rdf page nil description take provide iri return correspond rdfresource object knowledge base object call method describe section resource resource rdf_property synopsis rdf_property nil parameter rdfresource reference resource current page page rdf page nil string represent iri string represent rdf predicate prefix prefix name full iri language tag parameter omit replace nil boolean value true false description return object triple object return object kind resource literal blanknode default string language return list rdf_inverse_property synopsis rdf_inverse_property parameter rdfresource reference resource current page page rdf page nil string represent iri string represent rdf predicate prefix prefix name full iri boolean value true false description rdf_property inverse direction return subject triple subject return object kind resource blanknode default string list sparql_query synopsis sparql_query sparql_query sparql_query parameter rdfresource replace resourceuri query omit parameter reference resource current page page rdf page nil array contain iris string rdf_resource consecutively replace resourceuri_ query string contain sparql query description evaluate query give knowledge base return array set entry object set contain select variable resource literal resourceuri inside query reference resource give page array query rdf_container synopsis rdf_container parameter rdfresource reference resource current page page rdf page nil string represent iri description return array resource element container whose head reference rdf_container_head string rdf_collection synopsis rdf_collection rdf_collection parameter rdfresource reference resource current page page rdf page nil string represent iri rdfresource reference resource current page page rdf page nil string represent rdf predicate prefix prefix name full iri description return array resource element collection whose head reference rdf_collection_head instead directly reference head also possible specify property reference collection head specify head resource specify head string specify via property plugin configuration _config yml name parameter default description path relative path rdf default specify path rdf want render website remote section specify remote source default contain endpoint key remote paramter override path parameter remote endpoint sparql endpoint get default specify url sparql endpoint want render website language language tag string default specify prefer language select object liquid filter include_blank boolean expression false specify whether blank nod also render restriction sparql query string subject object predicate default restrict resource selection give sparql query bind special variable resourceuri keywords subject subject uris object predicate restriction_file resource render default restrict resource selection list resource default_template filename default rdf template _layouts directory default specify template want jekyll render rdf resource instance_template_mappings target uri string filename template string default map give uris template render individual instance class_template_mappings target uri string filename template string default map give uris template render instance class development installation source project git repository need git system first step clone repository folder name jekyll rdf automatically generate need switch folder compile ruby gem finish installation test test page everytime test execute jekyll page inside test source get process start slim web server watch web browser simplehttpserver api doc generate api doc please navigate jekyll rdf lib directory generate documentation place jekyll rdf lib doc directory license jekyll rdf license mit
Semantic web;https://github.com/protegeproject/snap-sparql-query;snap sparql api api parse sparql query
Semantic web;https://github.com/trellis-ldp/trellis;trellis link server scalable platform link application maven trellis rock solid enterprise ready link server quick way get start trellis pre docker trellis exist web modular extensible fast mail api javadocs source open source license apache contribution always welcome docker container docker container trellis publish docker container environment publish every commit main branch available stable release detail available trellis docker pull command postgresql base persistence layer trellis case need compile trellis release component available maven central deployable application directly trellis website however want late snapshot need least java available software command relate project python3 library link notification php application serve static ldp resource integration workflow apache
Semantic web;https://github.com/frmichel/morph-xr2rml;morph xr2rml xr2rml map enable description mapping relational non relational database rdf xr2rml extension morph xr2rml come connector relational database mysql postgresql monetdb mongodb nosql document store mode available graph materialization mode create possible rdf triple query rewrite mode translate sparql query target database query return sparql answer sparql endpoint stand alone application morph xr2rml develop i3s extension morph rdb r2rml make available apache license sparql sql sparql sql rewrite adaptation former morph rdb support sparql select describe query sparql mongodb sparql mongodb rewrite fully new component support select ask construct describe query form publication michel djimenou faron zucker montagnat translation relational non relational database rdf xr2rml proceed 11th international confenrence web information system technology webist lisbon portugal michel djimenou faron zucker montagnat xr2rml relational non relational database rdf map language research report cnrs callou michel faron zucker martin montagnat towards share reference thesaurus study history zoology archaeozoology conservation biology semantic web scientific heritage sw4sh workshop eswc conference michel faron zucker montagnat generic map base query translation sparql various target database query language proceed 12th international confenrence web information system technology webist rom italy michel faron zucker montagnat map base sparql access mongodb database research report cnrs michel faron zucker montagnat map base method query mongodb document sparql 27th international conference database expert system application dexa limitation xr2rml language support generation rdf collection container support case list value evaluation mix syntax path typically join query imply reference object map except case regular r2rml join query apply relational database join sql query translate rdf collection container name graph support although print turtle support name graph would quite easy extend quad trig serialization allow write triple name graph former limitation nestedtermmaps lift sept type nestedtermmaps fully implement complex iteration collection container nest define query rewrite query rewrite implement rdbs mongodb restriction _no mix syntax path used_ query rewrite mix syntax path much complex problem may possible situation would require revert expression jsonpath xpath retrieve source base value join condition support reference object map description see detail description project architecture doc readme_code_architecture want try pre requisite java sdk instal last release snapshot publish late version snapshot alternatively application root directory morph xr2rml command mvn clean package jar dependency generate morph xr2rml dist target application take option configdir give configuration directory configfile give configuration within directory option configfile default morph property additionally several parameter give configuration override follow option map mappingfile output output maximum number triple generate single output outputmaxtriples command line interface directory morph xr2rml dist application follow besides logger configuration overriden pas log4j configuration parameter jvm ide eclipse intellij project morph xr2rml dist locate main class unice i3s morph xr2rml engine morphrunner scala application argument configdir configfile sparql endpoint morph xr2rml sparql endpoint simply edit configuration see reference set property sever active true default access url property query path ignore query submit either http get post method describe sparql recommendation sparql select ask query xml json csv tsv serialization support sparql describe construct query support serialization rdf xml triple quad turtle json mongodb directory morph xr2rml dist example_mongo morph xr2rml dist example_mongo_rewriting provide database correspond mapping directory example_mongo graph materialization mode example_mongo_rewriting query rewrite mode testdb_dump json dump mongodb test database copy paste content mongodb window create database morph property provide database connection detail mapping1 ttl mapping4 ttl contain xr2rml map graph illustrate various feature language result1 txt result4 txt contain expect mapping query sparql directory example_mongo_rewriting contain sparql query execute test database edit morph property change database url name user password appropriate value note query optimization xr2rml xrr uniqueref notation major importance query optimization allow self join elimination check morph xr2rml dist example_taxref_rewriting mysql directory morph xr2rml dist example_mysql morph xr2rml dist example_mysql_rewriting provide database correspond mapping directory example_mysql graph materialization mode example_mysql_rewriting query rewrite mode testdb_dump sql dump mysql test database may import mysql instance command mysql root test testdb_dump sql morph property provide database connection detail map ttl contain xr2rml map graph txt contain expect apply map database query sparql directory example_mysql_rewriting contain sparql query execute test database edit morph property change database url name user password appropriate value configuration reference
Semantic web;https://github.com/drobilla/serd;serd serd lightweight library rdf syntax support read write turtle trig ntriples nquads serd suitable performance critical resource limit application serialise large set embed system feature free serd free software release extremely liberal isc license portable dependency free serd external dependency standard library know compile gcc clang msvc test gnu linux macos window small serd implement line typically compile kib kib strip size optimization fast lightweight serd stream abbreviate turtle unlike many tool must first internal make particularly useful write large set since small amount memory serd author knowledge fast turtle reader writer wide margin see performance performance conformant well test serd pas test turtle trig test suit correctly handle normal uri specification include many additional test write manually discover fuzz test test suite continuously many platform coverage line memory error leak performance benchmark compare serdi rapper riot serialise turtle generate sp2b 4980hq debian serdi fast wide margin constant amount memory single page input size time doc serdi time svg throughput doc serdi throughput svg memory doc serdi memory svg documentation api reference single api reference serdi man david robillard turtle trig ntriples nquads free software isc license rapper riot sp2b
Semantic web;https://github.com/comunica/comunica;knowledge graph query framework javascript flexible sparql graphql decentralize rdf web comunica comunica open source project many maintain group would like support project may consider contribute directly write contribute indirectly fund project via open support comunica community drive project sustain comunica comunica become sponsor way make comunica sustainable long term top sponsor show img query comunica read guide get start query command update command query local command query javascript update javascript query javascript browser set sparql query docker set web query late development jump right available query engine comunica sparql graphql query javascript application cli browser ready via comunica sparql engine query local rdf comunica sparql engine query memory rdfjs compliant comunica sparql library query local comunica sparql engine query behind solid access comunica sparql link engine query multiple follow link comunica sparql link traversal engine query within solid follow link document modify extend comunica read guide get start modify look query custom configuration command query custom configuration javascript expose custom config npm expose custom config web contribute new query operation actor comunica add config parameter contribute interest contribute look contribution development setup jsdoc repository comunica module developer contain multiple comunica module compose repository manage want develop new feature potentially unstable development version set development environment comunica comunica require high package manager comunica test osx linux window project setup clone instal follow note npm support moment project make yarn functionality dependency module bootstrap lerna monorepo comunica available package folder development environment query comunica sparql furthermore add pre commit lint test hook temporarily disable risk add flag commit command benchmarking want benchmarking comunica node make sure node production mode follow reason comunica extensively generate internal error object non production mode also produce long stacktraces may case impact performance cite extend comunica part scientific publication would appreciate citation license copyright comunica ghent university release mit
Semantic web;https://github.com/sebferre/sparklis;sparklis sparklis query builder natural language allow people explore query sparql endpoint power sparql without knowledge sparql endpoint vocabulary sparklis web client entirely browser directly connect sparql endpoint retrieve query suggest query element cover large subset sparql select query basic graph pattern include cycle union optional exist filter bind complex expression aggregation group order feature combine flexible way like sparql present table also map configuration panel offer configuration option adapt different endpoint get post label property language tag sparklis also include yasgui editor let advance user access modify sparql translation query sparklis reconcile expressivity usability semantic search tightly combine query builder natural language interface faceted search system query builder let user complex query compose elementary query incremental fashion elementary query class film property director rdf node tim burton reference another node film operator high low average faceted search system every step query construction well form query compute display suggest query element derive actual schema prevent construction non sensical empty display relevant suggestion every step provide constant acurate feedback user construction process support exploratory search serendipity confidence final natural language interface everything present user query suggest query element verbalize natural language completely hidding sparql behind user interface compare query answer system hard problem spontaneous understand avoid control query formulation guide query construction replace simple problem generation user interface lend multilinguality far available english french spanish dutch refer sparklis scientific document please follow citation sebastien ferre sparklis expressive query builder sparql endpoint guidance natural language semantic web try sparklis simply follow step online select sparql endpoint dropdown list top default core english dbpedia core subset dbpedia query incrementally click suggest query element list suggestion hamburger menu query click different part query change focus suggestion relative current focus recommend visit query several datasets every query open sparklis click query modify number youtube screencast show step step sparklis rdf enough sparql endpoint visible machine publicly open endpoint like dbpedia wikidata localhost endpoint personally apache jena fuseki store work important condition endpoint server http request make browser sparklis recommendation content store best include rdfs owl triple declare class rdfs class owl class property rdf property owl objectproperty owl dataproperty well label rdfs label hierarchy rdfs subclassof rdfs subpropertyof ensure uri resource label define preferably rdfs label possibly standard property skos preflabel name graph make sure configure store default graph contain union name graph configure menu offer number option adapt sparklis endpoint control display non exhaustive list endpoint query max number suggestion get post credential ontology display class property hierarchy filter class property sparklis specific schema property see language label interface language label property fulltext search support sparklis make standard non standard property get control query display suggestion ech property generally configuration option activate sdo position sdo possible control order suggestion class property individual set property desire rank suggestion relate option configure advance feature sdo logo possible small icon front entity label set property url icon several icon attach entity relate option configure advance feature size icon define rdfs inheritsthrough suppose location property whose range place organize hierarchy property ispartof add triple location rdfs inheritsthrough ispartof get whenever property location insert query inheritance place hierarchy perform place suggestion display tree generalization well know rdf type inheritance rdfs subclassof add triple place rdfs inheritsthrough ispartof effect obtain insert class place relate option configure ontology must activate owl transitiveof owl rdfs inheritsthrough entail insertion transitive path ispartof sparql query costly evaluate solution materialize transitive closure new property ispartof_star add triple ispartof_star owl transitiveof ispartof activate relate option configure ontology property path ispartof replace ispartof_star nary subjectobject nary property handle case reify relationship property reification node subject property reification node object add triple nary subjectobject reification become transparent sparkls see cyan property mondial endpoint relate option configure ontology must activate nary eventobject similar except property subject reification node instead inverse see cyan property wikidata endpoint find good configuration endpoint generate permalink button top share endpoint user permalinks also include current query current focus also share query template query also save query simply add bookmark browser find endpoint general interest welcome suggest add list sparql endpoint reuse sparklis web site sparklis client side possible integrate sparklis website simply copy content webapp folder among website add link web page url argument contain endpoint configuration possibly initial query get url simply navigate sparklis copy adapt need browser url adapt appearance main html osparklis html osparklis long retain sparklis name credit page footer instance hide configuration option element change look feel layout element careful delete element class sparklis let know successful integration also problem encounter process credit author sebastien affiliation univ rennes team irisa copyright sebastien ferre irisa universite rennes france licence apache licence citation ferre sebastien sparklis expressive query builder sparql endpoint guidance natural language semantic web press
Semantic web;https://github.com/pchampin/sophia_rs;sophia rust toolkit rdf link action late comprise follow crate sophia_api define generic api rdf link set core trait type precisely provide trait describe term triple quad graph datasets parser serializers sophia_iri provide function type trait validate resolve iris sophia_term define tterm trait sophia_api sophia_inmem define memory graph trait sophia_api sophia_turtle provide parser serializers turtle family concrete syntax sophia_xml provide parser serializers rdf xml sophia_jsonld provide preliminary support json sophia_indexed sophia_rio low level crate finally sophia inclusive crate export symbol crate licence cecill compatible bsd test test suite depend json test suite include git submodule order test need execute follow command citation sophia please follow citation champin sophia link semantic web toolkit rust wilde amundsen web conference developer track taipei available bibtex history outdated comparison sophia rdf library still available sophia_api sophia_iri sophia_term sophia_inmem sophia_turtle sophia_xml sophia_jsonld sophia_indexed sophia_rio sophia cecill rdf test suite json test suite
Semantic web;https://github.com/AKSW/OntoWiki;ontowiki api introduction tool provide support agile distribute knowledge engineer scenario ontowiki facilitate visual presentation knowledge base information map different view instance enable intuitive author semantic content foster social collaboration aspect keep track change allow comment discus every single part knowledge base remarkable feature ontowiki link server well link client fetch additional web ontowiki semantic pingback client order receive send back link request know blogosphere ontowiki backend independent mean save mysql database well virtuoso triple store ontowiki easily extendible since feature sophisticate extension system installation update update ontowiki please forget make deploy make deploy fail might also make getcomposer make deploy installation instruction please look might outdated part screenshot webinar screenshot show ontowiki edit mode long visual presentation watch thank phil semantic web company license ontowiki license gnu general public license version june license document application subfolder
Semantic web;https://github.com/davideceolin/rcsvw;rcsvw package implement candidate recommendation w3c csv web work group copyright license rcsvw package copyright davide ceolin author contributor author davide ceolin package rely extend version rrdf package instruction allow instal version rrdf instal csvw package rjava present already package devtools present already library devtools install_github davideceolin rrdf ref extend subdir rrdflibs install_github davideceolin rrdf ref extend subdir rrdf build_vignettes false install_github davideceolin rcsvw
Semantic web;https://github.com/lukostaz/shi3ld-http;shi3ld http operation shi3ld access control module enforce authorization triple store shi3ld http protect http operation link linkeddata org rely attribute base access policy feature authorization http method rdf resource rdf resource orient policy language rdf sparql rdf attribute base context aware policy policy vocabulary namespace document available access policy context client attribute scenario shi3ld http support different scenario available repository branch shi3ld sparql graph store shi3ld link sparql base shi3ld link sparql scenario detail access control http operation link installation shi3ld scenario java server side module java application server tomcat config property property need customize policy storage path triple storage path shi3ld gsp scenario compatible gsp compliant fuseki sparql need fuseki server url fuseki name shi3ld ldp scenario embed rdf store sparql processor test shi3ld http test standalone ship sample client attribute sample access policy find
Semantic web;https://github.com/vandenoever/rome;current rome rdf library write safe rust feature access uniform way rdf implement graph read write turtle triple iterate triple graph wrap graph generate ontology type system distinguish blank nod iris literal compile time generate ontology generate command test turtle parser pas test test like license rome license agplv3 late version contribution unless explicitly state otherwise contribution intentionally submit inclusion work define agplv3 license shall license without additional term condition
Semantic web;https://github.com/carml/carml;carml pretty sweet rml engine carml first develop cooperation maintain develop maven table content carml carml table content table content release release introduction introduction get start get start validate rml map validate rml map input stream extension input stream extension function extension function extension xml namespace extension xml namespace extension support source type support source type carml rml test case carml rml test case roadmap roadmap release sep carml oct carml dec carml feb carml may carml aug carml nov carml nov carml sep carml oct carml mar carml introduction carml java library transform structure source rdf base declare map accordance rml best place start rml basically rml define superset w3c recommendation describe language express mapping relational database rdf datasets rml allow expression mapping relational database generalize structure source need way iterate query source get start carml available central maven repository carml currently mapper directly output rdf4j validate rml map set full map validation yet help get first nasty map error create shape graph validate rml mapping shacl easily test map input stream extension come non database source current rml spec support specification base source rml logicalsource however often useful able transform stream source end carml introduce notion name stream follow ontology define define stream map like order provide access input stream need register mapper note possible register several stream allow combine several stream create desire rdf output function extension recent development relate rml possibility add function mix powerful extension increase expressivity mapping immensely note function ontology still development ughent believe extension already great value already adopt carml way work describe execution function term function ontology take sumfunction fno define instance sumfunction class fno function able compute sum value provide parameter function execution time also describe instance sumexecution fno execution fno execute sumfunction descibes instance execution define sum function case parameter able rml mapping execution instance fno function determine value term map execution function see post process step evaluation term map function create java class function annotate fnofunction provide string value function iri function parameter fnoparam provide string value function parameter iris class class contain annotate function register mapper via rmlmapper addfunctions method recommend describe publish new function term fno interpretability mapping possibly reuse function mandatory carml note currently possible specify function execution parameter function execution carml although yet expressible fno xml namespace extension work xml document often necessary specify namespaces identify node qualify name xpath allow register namespaces order able execute xpath expression order convey expression carml engine carml introduce class carml xmldocument value rml source instance carml xmldocument source specify location via carml url property specify namespace declaration via carml declaresnamespace property give follow xml document follow map declare namespaces xpath expression yield support source type source type reference query language json jayway jsonpath xml saxon csv univocity carml rml test case see rml carml rml test note currently raise test case believe incorrect adverse effect map roadmap good support large source improve join parent triple map performance support rdf store connection split provisional rdf mapper separate library
Semantic web;https://github.com/albertmeronyo/LSD-Dimensions;lsd dimension dimension structure definition dsds link statistical cod concept scheme associate endpoint lsd dimension aggregator datastructuredefinition dimensionproperty associate triple currently find link cloud read sparql endpoint datahub purpose improve reusability statistical dimension cod concept scheme web provide interface user future work program search resource commonly describe open statistical datasets also look way semantic description resource enhance comparability statistical datasets link work query datahub api list endpoint query endpoint dsds dimension cod concept scheme store messy mongodb instance display boostrap table online instance see dependency sparql wrapper pymongo bottle bootstrap bootstrap table
Semantic web;https://github.com/cyberborean/rdfbeans;rdfbeans framework rdfbeans object rdf map framework java provide orm like databinding functionality rdf database triplestores basic technique classic object persistence store retrieve state pojo object rdf dynamic proxy mechanism access rdf java interface map directly underlie rdfbeans upon eclipse sesame api provide object persistence number state art rdf triplestore rdfbeans base java annotation mechanism special interface superclass require guarantee minimum modification exist codebase compatibility pojo orient framework feature cascade databinding reduce development time ensure referential integrity complex object inheritance rdfbeans annotation superclass interface external specification rdf schema require everything declare annotation extensible mechanism map java type rdf literal define algorithm represent structure rdf support basic java collection optionally represent rdf container transaction support triplestore specific support index javabean property support rdf namespaces
Semantic web;https://github.com/phillord/horned-owl;horn owl horn owl library manipulate owl ontology web language number library manipulate form owl quite slow horn owl aim allow ontology million term library implement owl2 work parser functionality test real world task parse gene ontology second time fast owl api
Semantic web;https://github.com/comunica/comunica;knowledge graph query framework javascript flexible sparql graphql decentralize rdf web comunica comunica open source project many maintain group would like support project may consider contribute directly write contribute indirectly fund project via open support comunica community drive project sustain comunica comunica become sponsor way make comunica sustainable long term top sponsor show img query comunica read guide get start query command update command query local command query javascript update javascript query javascript browser set sparql query docker set web query late development jump right available query engine comunica sparql graphql query javascript application cli browser ready via source customisation comunica sparql engine query local rdf comunica sparql engine query memory rdfjs compliant comunica sparql library query local solid customisation comunica sparql engine query behind solid access link traversal research comunica sparql link engine query multiple follow link comunica sparql link traversal engine query within solid follow link document reason support comunica sparql engine add support reason comunica sparql reason engine query local rdf support reason modify extend comunica read guide get start modify look query custom configuration command query custom configuration javascript expose custom config npm expose custom config web contribute new query operation actor comunica add config parameter contribute interest contribute look contribution development setup jsdoc repository comunica module developer contain multiple comunica module compose repository manage want develop new feature potentially unstable development version set development environment comunica comunica require high package manager comunica test osx linux window project setup clone instal follow note npm support moment project make yarn functionality dependency module bootstrap lerna monorepo comunica available package folder development environment query comunica sparql furthermore add pre commit lint test hook temporarily disable risk add flag commit command benchmarking want benchmarking comunica node make sure node production mode follow reason comunica extensively generate internal error object non production mode also produce long stacktraces may case impact performance cite extend comunica part scientific publication would appreciate citation license copyright comunica ghent university release mit
Semantic web;https://github.com/AKSW/Sparqlify;sparqlify sparql sql rewriter introduction sparqlify scalable sparql sql rewriter whose development begin april course project system feature trait support sparqlification map language intuitive language express rdb rdf mapping little syntactic noise scalability sparqlify evaluate expression memory sparql filter end correspond sql statement give underlie rdbms maximum control query plan powerful rewrite engine analyze filter expression order eleminate self join join unsatisfiable condition initial support spatial datatypes predicate subset sparql query language plus sub query support test postgresql postgis support database plan csv support r2rml support soon function sparql sql function mapping specify function xml sparqlify core src main resource function xml standard sparql function sparql function sql definition boolean strstarts string string strpos todo spatial function extension sparql function sql definition todo support sparql language feature join leftjoin optional union sub query filter predicate comparison logical arithmetic spatial _intersects geomfromtext regex lang langmatches aggregate function count order push sql debian package sparqlify debian package obtain follow mean via link recommend sparqlify website directly source maven read readme public repository set repository sparqlify apt apt sudo apt get sparqlify cli link stack want sparqlify distribute link offer many great tool various contributor semantic web community repository available flavor nightly test stable bleed edge recommend production late development version every commit perform follow step import public key wget sudo apt key add add repository echo deb precise main contrib non free sudo tee etc apt source list cstadler aksw org list note also work distros precise ubuntu ubuntu repository create jar provide sparqlify tool suite debian package debian package repo rely debian maven plugin require debian compatible environment environment present rest simple script necessary create deb package sudo apt get devscripts execute follwing sparqlify core folder mvn clean deb package upon sucessful completion debian package locate sparqlify core target dpkg sudo dpkg sparqlify_ deb uninstall dpkg apt sudo dpkg sparqlify sudo apt get remove sparqlify assembly base another way project follow command mvn clean sparqlify cli mvn assembly assembly generate single stand alone jar contain necessary dependency afterwards script sparqlify core bin work tool suite sparqlify instal debian package follow command available system wide sparqlify main executable individual sparql query create dump start stand alone server sparqlify csv tool create rdf dump csv base sml view definition sparqlify platform stand alone server component integrate additional project tool write output rdf triple format stdout log output stderr sparqlify usage sparqlify option option setup sml view definition database connectivity setting hostname database localhost localhost database name user name password jdbc uri mutually exclusive quality service maximum set size maximum query execution time second exclude rewrite time stand alone server configuration server port default option prevent server start mutually exclusive server configuration create triple rdf dump stdout sparql query sparql query configure database view definition follow command start sparqlify http server default port sparqlify localhost postgres secret mydb mydb mapping sml agent access sparql endpoint sparqlify csv usage sparqlify csv option setup sml view definition input view name omit view definition contain single view csv parser setting csv field delimiter default csv field escape delimiter escape field delimiter default csv field separator default first row header option allow reference column name additionally index sparqlify platform deprecate supersede sparqlify web admin sparqlify platform sparqlify platform bundle sparqlify link wrapper sparql web interface usage sparqlify platform config dir port config dir path configuration directory port port platform default root project outside sparqlify directory mvn compile module afterwards lauch platform sparqlify platform bin sparqlify platform assume platform access follow service relative base url sparql sparqlify sparql endpoint snorql show snorql web frontend pubby entry point link interface configuration configdirectory argument mandatory must contain sub directory context path sparqlify platform turn contain platform property contain configuration parameter adjust database connection view sparqlify set sparqlify view definition recommend first create copy sparqlify platform config different location adjust parameter finally launch platform dconfigdirectory set appropriately platform apply autoconfiguration pubby snorql snorql namespaces view sparqlify pubby host name resource generate sparqlify view replace url platform currently still need configure via platform property additionally probably want make uris nice configure apache reverse proxy enable apache module sudo a2enmod etc apache2 sit available default add line proxyrequest proxypass resource retry proxypassreverse resource entry enable request rather retry mean apache wait second retry encounter error http proxied resource important proxyrequests default enable unless know simply enable potentially allow anyone computer proxy sml map syntax sparqlification map language sml configuration essentially set create view statement somewhat similar create view statement sql probably easy way syntax look follow resource sml sml test derive r2rml test additionally convenience prefix declare valid throughout config comment first impression quick comment even nest prefix valid throughout prefix prefix create view myfirstview construct dbp person workpage define uri generate concatenation prefix mytable column uri work_page assign uris column work_page mytable constrain prefix constraint optimization prune unsatisfiable join condition mytable want sql query query without trail semicolon must enclose double square bracket select work_page mytable note sparqlify csv sparqlify csv view definition syntax almost difference instead create view viewname construct start view create view template viewname construct constraint clause colums reference either name see option index base assume csv follow column osm stand openstreetmap city _name country _name osm _entity _type osm _id longitude latitude prefix need urlencode urldecode prefix prefix prefix prefix create view template geocode construct cityuri owl sameas lgduri lgduri rdfs label citylabel geo long long geo lat lat cityuri urlencode urlencode citylabel plainliteral lgduri long typedliteral xsd float lat typedliteral xsd float
Semantic web;https://github.com/mff-uk/ODCS;odcleanstore tool process pipeline obtain process store rdf make process highly customizable employ custom process unit also provide process monitor debug schedule capability documentation please see installation step please see license follow module software license gnu less general public license version common common module common web dataunit rdf dataunit ontology module test module base follow module software license gnu general public license version common app frontend backend dataunit dataunit impl dataunit rdf impl rdf_file_extractor rdf_file_loader sparql_extractor sparql_loader sparql_transformer rdf_data_validator silk_linker_extractor detail please see particular module
Semantic web;https://github.com/kasei/SPARQLKit;sparqlkit sparql query update language objective implement full sparql query update engine objective design base trait role base program possible allow natural extensibility component selection replacement raptor rdf parser triple store back address book depend gtwswbase plugins system provide extensible plugin architecture source rdf parser plugins automatically load library application support sparqlkit plugins directory plugins include provide triplestore access remote remote sparql provide memory triplestore rdf parser provide access user address book contact provide access photo metadata include geographic depiction library provide persistent append quad store gtwsparql tool available package provide command line interface full sparql query update environment load namespace completion tool auto complete prefix declaration source hit tab immediately prefix name include colon full prefix iri add query string sparql prefix foaf tab sparql prefix foaf configure source gtwsparql tool take string argument specify source configuration simple form name triple quad store plugin query aperture photo metadata load default graph spktriplemodel construct multiple triplestores available separate graph query aperture photo metadata address book contact allow find number photo depict member family combine depiction aperture family name address book construct query keyword start endpoint sparql endpoint easily start point sparql endpoint url respond query
Semantic web;https://github.com/newres/aesopica;aesopica clojure library design help create semantic web particular link rdf base application allow user create link idiomatic clojure datastructures translate various rdf format usage feature string integer boolean long custom datatypes quad name graph blank nod conversion common format turtle trig quad json conversion utilize apache library conversion first clojure edn representation need convert jena jena representation set graph afterwards clojure function utilize wrap jena rdf technology call assume fox stork edn clojure edn representation rdf conv shorthand aesopica converter namespace conversion turtle write see aesopica converter namespace relate test note certain format turtle design quad name graph mind case converter format support quad need trig quad lose information design decision tutorial write number article clojure create link interlink creation library general name license copyright newres haider distribute eclipse public license see license
Semantic web;https://github.com/DataFabricRus/datastudio-sparql-connector;sparql connector google studio allow load sparql endpoint select query connector gallery screenshot_ingallery png report report google datastudio screenshot_examplereport png report get start open create new source authorization successfully complete ready configure parameter see form screenshot configuration page screenshot_parameters png enter sparql endpoint url enter select query follow variable support daterange startdate format yyyy daterange enddate format yyyy daterange numdays positive integer value daterange startdate daterange enddate date range filter able control date range enter schema projection step enough set type projection next step able refine schema element type read press connect button next page connector support type conversion google studio format type therefore connector automatically convert follow type support xsd date convert yyyymmdd xsd datetime convert yyyymmddhh xsd duration convert integer correspond number second default value connector may apply default value query value request field default value datatype default value number boolean false string like default write query way miss empty value especially case group license mit license
Semantic web;https://github.com/njh/redstore;redstore nicholas humfrey late version redstore please see redstore redstore lightweight rdf triplestore write redland library http interface support follow w3c standard sparql query sparql protocol rdf sparql graph store http protocol sparql service description feature http server mac app available support wide range rdf format runtime dependancy redland compatible rdfproc command line tool offline operation unit integration test suite usage redstore option port number http server default bind specific address default set graph storage type default hash storage option create new store replace old default input load startup format input default guess enable verbose mode enable quiet mode start redstore port bind localhost new sqlite store redstore localhost sqlite load uri triplestore curl add triplestore curl foaf rdf add triplestore full uri specify curl foaf rdf add triplestore type specify curl foaf ttl content type application turtle delete graph manner delete http verb curl delete query sparql query tool sparql query select limit requirement minimum require version redland rdf library raptor2 rasqal redland installation redstore standard automake process configure make make support storage module redland storage module support context hash default mysql memory postgresql sqlite virtuoso license program free software redistribute modify term gnu general public license publish free software foundation either version license option late version program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail redland redland storage module sparql query tool gnu general public license sparql query sparql protocol rdf sparql graph store http protocol sparql service description raptor2 rasqal redland hash mysql memory postgresql sqlite virtuoso
Semantic web;https://github.com/MakoLab/RomanticWeb;romantic web teamcity relational object semanticweb net hype semantic web technology rise make developer work resource description framework rdf represent graph might good solution romanticweb world first orm class solution graph base write fully allow developer work rdf way would work object orient manner achieve create map rdf statement fully transparent way romanticweb also first solution conjuction map ability allow query native net way linq developer natural approach work object query strongly type query translate sparql protocol rdf query language possible work full power elastic rdf set simplicity classic object orient program __read project
Semantic web;https://github.com/magnetik/node-webid;node webid node module tool help webid installation require module webid manual start cake get webid bin folder usage check project see work basic usage licence lib available mit licence
Semantic web;https://github.com/KMax/cqels;cqels continuous query evaluation link repository fork repository google _disclamer developer original cqels add follow repository pom xml declare follow dependency release mavenized support operator initial support remote sparql endpoint via sparql graph fix fileexception objectfilestorage exception update jena version license
Semantic web;https://github.com/levelgraph/levelgraph-n3;levelgraph coverage dependency sauce lab __levelgraph n3__ plugin add ability store fetch process turtle node add support levelgraph easy browser package browser node please also take look browserify section levelgraph usage assume follow create database explain import alternatively import cli tool npm follow optional flag output follow desire path specify path quiet silence status update import process otherwise progress information display extension must additionally glob support import match triple get put store database extremey easy retrieve pattern match extremely easy even support stream interface export ntriples levelgraph __levelgraph n3__ allow export ntriples __levelgraph__ database __levelgraph n3__ augment standard search method option specify subject predicate object create triple follow structure materialize option see also support searchstream method change include migration info break change contribute levelgraph check late master make sure feature implement bug fix yet check issue tracker make sure someone already request contribute fork project start feature bugfix branch commit push happy contribution make sure add test important break future version unintentionally please try mess makefile package json want version otherwise necessary fine please isolate commit cherry pick around license mit license copyright matteo collina permission hereby grant free charge person obtain copy software associate documentation software deal software without restriction include without limitation right copy modify merge publish distribute sublicense sell copy software permit person software furnish subject follow condition copyright notice permission notice shall include copy substantial portion software software provide without warranty kind express imply include limit warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arise connection software deal software
Semantic web;https://github.com/lyrasis/docker-blazegraph;docker blazegraph blazegraph docker quickstart local load directory need make available container sample query
Semantic web;https://github.com/RubenVerborgh/LDflex;ldflex make link javascript fun ldflex domain specific language query link web browse local javascript graph npm coverage dependency write thing like person friend firstname get list friend thank power json javascript property hard cod ldflex choose runtime feel traverse local object actually query web without pull first tim come idea fluid javascript interface link discussion make link easy developer article tutorial tutorial design link developer discus design ldflex solid app ldflex installation order execute query also need query engine usage obtain start subject navigate property standard javascript dot property syntax order query await want single value await iterate value initialization look web inspect generate path expression get subject document get property subject convert ldflex expression sparql query sort path sort function take multiple argument create path sort last argument path also continue sort person friend sort country label givenname sort friend base label country return name modify access collection handle rdf list rdf bag rdf alt rdf seq rdf container rdf list rdf alt rdf seq rdf container rdf bag alternatively collection collection rdf list rdf bag rdf alt rdf seq rdf container provide collection correct rdf type annotation source namednode uri utility additional handler follow library provide handler extend functionality ldflex provide method map filter reduce async iterable return ldflex license present ruben ruben mit
Semantic web;https://github.com/AKSW/Sparqlify;sparqlify sparql sql rewriter introduction sparqlify scalable sparql sql rewriter whose development begin april course project system feature trait support sparqlification map language intuitive language express rdb rdf mapping little syntactic noise scalability sparqlify evaluate expression memory sparql filter end correspond sql statement give underlie rdbms maximum control query plan powerful rewrite engine analyze filter expression order eleminate self join join unsatisfiable condition initial support spatial datatypes predicate subset sparql query language plus sub query support test postgresql postgis support database plan csv support r2rml support soon support sparql language feature join leftjoin optional union sub query filter predicate comparison logical arithmetic spatial _intersects geomfromtext regex lang langmatches aggregate function count order push sql debian package sparqlify debian package obtain follow mean via link recommend sparqlify website directly source maven read readme public repository set repository sparqlify apt apt sudo apt get sparqlify cli link stack want sparqlify distribute link offer many great tool various contributor semantic web community repository available flavor nightly test stable bleed edge recommend production late development version every commit perform follow step import public key wget sudo apt key add add repository echo deb precise main contrib non free sudo tee etc apt source list cstadler aksw org list note also work distros precise ubuntu ubuntu repository create jar provide sparqlify tool suite debian package debian package repo rely debian maven plugin require debian compatible environment environment present rest simple script necessary create deb package sudo apt get devscripts execute follwing sparqlify core folder mvn clean deb package upon sucessful completion debian package locate sparqlify core target dpkg sudo dpkg sparqlify_ deb uninstall dpkg apt sudo dpkg sparqlify sudo apt get remove sparqlify assembly base another way project follow command mvn clean sparqlify cli mvn assembly assembly generate single stand alone jar contain necessary dependency afterwards script sparqlify core bin work tool suite sparqlify instal debian package follow command available system wide sparqlify main executable individual sparql query create dump start stand alone server sparqlify csv tool create rdf dump csv base sml view definition sparqlify platform stand alone server component integrate additional project tool write output rdf triple format stdout log output stderr sparqlify usage sparqlify option option setup sml view definition database connectivity setting hostname database localhost localhost database name user name password jdbc uri mutually exclusive quality service maximum set size maximum query execution time second exclude rewrite time stand alone server configuration server port default option prevent server start mutually exclusive server configuration create triple rdf dump stdout sparql query sparql query configure database view definition follow command start sparqlify http server default port sparqlify localhost postgres secret mydb mydb mapping sml agent access sparql endpoint sparqlify csv usage sparqlify csv option setup sml view definition input view name omit view definition contain single view csv parser setting csv field delimiter default csv field escape delimiter escape field delimiter default csv field separator default first row header option allow reference column name additionally index sparqlify platform deprecate supersede sparqlify web admin sparqlify platform sparqlify platform bundle sparqlify link wrapper sparql web interface usage sparqlify platform config dir port config dir path configuration directory port port platform default root project outside sparqlify directory mvn compile module afterwards lauch platform sparqlify platform bin sparqlify platform assume platform access follow service relative base url sparql sparqlify sparql endpoint snorql show snorql web frontend pubby entry point link interface configuration configdirectory argument mandatory must contain sub directory context path sparqlify platform turn contain platform property contain configuration parameter adjust database connection view sparqlify set sparqlify view definition recommend first create copy sparqlify platform config different location adjust parameter finally launch platform dconfigdirectory set appropriately platform apply autoconfiguration pubby snorql snorql namespaces view sparqlify pubby host name resource generate sparqlify view replace url platform currently still need configure via platform property additionally probably want make uris nice configure apache reverse proxy enable apache module sudo a2enmod etc apache2 sit available default add line proxyrequest proxypass resource retry proxypassreverse resource entry enable request rather retry mean apache wait second retry encounter error http proxied resource important proxyrequests default enable unless know simply enable potentially allow anyone computer proxy sml map syntax sparqlification map language sml configuration essentially set create view statement somewhat similar create view statement sql probably easy way syntax look follow resource sml sml test derive r2rml test additionally convenience prefix declare valid throughout config comment first impression quick comment even nest prefix valid throughout prefix prefix create view myfirstview construct dbp person workpage define uri generate concatenation prefix mytable column uri work_page assign uris column work_page mytable constrain prefix constraint optimization prune unsatisfiable join condition mytable want sql query query without trail semicolon must enclose double square bracket select work_page mytable note sparqlify csv sparqlify csv view definition syntax almost difference instead create view viewname construct start view create view template viewname construct constraint clause colums reference either name see option index base assume csv follow column osm stand openstreetmap city _name country _name osm _entity _type osm _id longitude latitude prefix need urlencode urldecode prefix prefix prefix prefix create view template geocode construct cityuri owl sameas lgduri lgduri rdfs label citylabel geo long long geo lat lat cityuri urlencode urlencode citylabel plainliteral lgduri long typedliteral xsd float lat typedliteral xsd float
Semantic web;https://github.com/jbmusso/awesome-graph;awesome graph curated list resource graph database graph compute tool graph database multi graph database sql cypher support massively parallel graph database advance analytics sparql cypher owl rdfs lpg open source type safe graph database server gui write rust support atomic doc atomicdata dev json rdf highly available multi nosql database gpu accelerate graph database open source database write cloud base multi database support tinkerpop3 fast transactional distribute graph database open source write dse graph layer top datastax enterprise cassandra solr spark portable serverless lightweight sqlite base graph database arturo distribute hyper relational database knowledge orient system distribute knowledge base metaweb freebase graph repository open source distribute graph database pluggable storage index backends high performance memory transactional graph database oltp graph database nebula distribute fast open source graph database feature horizontal scalability high availability property graph database base linear algebra construct graphblas make space performance compatible small footprint fast analysis large rdf graph database oltp olap support distribute multi nosql database graph database engine open source graph database document store design collaboratively intensive application knowledge graph first native parallel graph capable real time analytics web scale weaviate cloud native modular real time vector search engine graph graphql interface scale machine triple store akutan distribute knowledge graph store sometimes call rdf store triple store high performance persistent graph database scale billion quad apache open source java framework semantic web link application dydra dydra cloud base graph database dydra store natively store property graph directly represent relationship underlie eclipse formerly know sesame open source java framework process rdf include parse store inferencing query offer easy api connect lead rdf storage solution allow connect sparql endpoint create application leverage power link semantic web enterprise ready semantic graph database compliant w3c standard junction box drive enterprise individual agility derive semantic web link exist silo explore big ram relational comfort graph compute framework apache iterative graph process system high scalability apache graph compute framework graph database oltp graph analytic system olap apache spark apache spark api graph graph parallel computation stop large scale graph compute system alibaba language manage host service cosmosdb janusgraph ibm janusgraph google cloud janusgraph google kubernetes engine back google cloud bigtable janusgraph amazon web service neo4j neptune amazon web fast reliable fully manage graph database service make easy application work highly connect datasets material official documentation reference documentation reference documentation community effort graph tinkerpop3 centric book write kelvin transition sql gremlin daniel gremlin minimum survival kit gremlin user blog post series doan blog tigergraph conference graph power neo4j graph independent graph conference day folk license extent possible law jean baptiste waive copyright relate neighbor right work
Semantic web;https://github.com/srdc/ontmalizer;ontmalizer license ontmalizer perform comprehensive transformation xml schema xsd xml rdf owl automatically tool possible create rdf owl representation xml schema xml instance comply xml schema state art open source free tool rdfizing xsd xml able handle complex schema xml instance hl7 clinical document architecture cda commercial tool topbraid composer successfully able however want commercial tool salus project implement solution make sun xsom library process xml schema apache xerces process xml apache jena manage rdf information technical detail find blog post accessible installation apache maven require ontmalizer please visit order maven system root directory ontmalizer project follow ontmalizer mvn order make clean follow ontmalizer mvn clean ontmalizer also number test case transform xml schema hl7 cda salus common information correspond xml instance rdf owl transform xsd rdf owl xsd2owlmapper main class transform xml schema rdf owl constructor class get root xsd transform configuration transformation operation quite simple caller set prefix object property datatype property name create call convertxsd2owl method perform transformation xsd2owlmapper able print output ontology format rdf xml rdf xml abbrev triple transformation routine provide hl7 cda xml schema transform xml rdf owl xml2owlmapper main class transform xml rdf owl create instance necessary owl class rdfs datatypes owl datatype object property constructor class get xml transform together instance xsd2owlmapper already initialize correspond xml schema xml configuration necessary transformation operation prefix object property datatype property name create gather xsd2owlmapper configuration call convertxml2owl method perform transformation similar xsd2owlmapper xml2owlmapper able print output ontology instance format rdf xml rdf xml abbrev triple transformation routine provide complete hl7 cda instance compliant hl7 astm continuity care document ccd ihe patient care coordination pcc template please refer blog post detail
Semantic web;https://github.com/dkmfbk/rdfpro;rdfpro extensible tool stream orient rdf process pipeline rdfpro rdf processor public domain creative common cc0 java command line tool embeddable library offer suite stream orient highly optimize processor common task filter rdfs inference smushing statistic extraction rdfpro processor extensible user freely compose form complex pipeline efficiently process rdf pas rdfpro multi thread design allow process billion triple hour typical link open integration scenario rdfpro web rdfpro rdfpro need instal machine order rdfpro follow command git clone rdfpro git checkout branch_name mvn package dskiptests prelease step optional want specific branch otherwise version top master branch dskiptests flag step disable unit test speed process want test omit flag prelease flag activate maven profile call release enable generation tar archive include everything distribute rdfpro binary website tar locate rdfpro dist target rdfpro dist version bin tar may copy wherever want extract rdfpro via include rdfpro script
Semantic web;https://github.com/linkeddata/rdflib.js;rdflib npm join chat javascript rdf library browser node read write rdf xml turtle read rdfa json read write link client webdav sparql update real time collaborative edit web socket patch local api query store compatible rdfjs task force sparql query full sparql graph match optional smushing nod owl sameas owl inversef unctionproperty track provenance triple keep metadata rdf http access documentation see api partial useful tutorial rdflib solid web tutorial tutorial authenticate alternate fetch block diagram rdflib block diagram block diagram fetcher handle block diagram update solid developer portal information browser bundler like webpack browser generate
Semantic web;https://github.com/nick-manasys/zeppelin-sparql;zeppelin sparql zeppelin sparql interpreter
Semantic web;https://github.com/nkons/r2rml-parser;r2rml parser r2rml export relational database content rdf graph base map document contain r2rml map institutional repository solution information please see please send feedback question nkons live com mailto nkons live com open new happy discus get value r2rml parser please cite publication follow detail r2rml write fully java apache jena spring junit maven test mysql postgresql oracle 11g licence work license apache license publication find wiki list base tool
Semantic web;https://github.com/tomayac/ldf-client;ldf client declarative link client form web simply insert page fill require attribute value ready live demo see live web component action host github page installation assume instal finally visit click link upper right corner basic usage show basic usage instruction element link fragment web full high quality link reliably query public sparql endpoint often unavailable need answer many unique query could set local endpoint dump web query never date link offer interface solve query client side server server offer low process cost way enable client side query read concept link available link fragment acknowledgement web component pretty straight forward thank ruben link fragment browser client license copyright thomas steiner tomac google com license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license
Semantic web;https://github.com/ropensci/jsonld;jsonld json link project status active project reach stable usable state actively appveyor coverage cran rstudio mirror github json light weight syntax express link primarily intend web base program environment interoperable web service store link json base database package provide bind javascript library convert expand compact json document hello world compact expand convert json rdf utility
Semantic web;https://github.com/UCLALibrary/fester;fester maven codacy codacy know microservice facilitate creation storage retrieval iiif manifest collection prerequisite prerequisite must instal configure correctly order fester java development kit version great version great version great aws require useful package may also available system package repository good source keep date also need account aws ability create account bucket configure fester bucket back end storage able project test several configuration value must supply fester bucket fester access_key fester secret_key fester region value set property system maven setting xml supply command line time project project executable jar start microservice project mvn package put executable jar target artifact directory generate site documentation mvn site generate documentation target site directory configure test project contain unit functional integration test control control test order functional integration test machine must work docker environment set docker machine depend type machine linux mac window docker consult package phase describe unit test want possible test project mvn integration test mvn verify functional feature flag integration test addition unit test want skip particular type test still verify phase follow argument maven command dskiputs dskipits dskipfts dskipffts first skip unit test second skip integration test third skip functional test fourth skip feature flag test also combine type test skip instance functional test follow type mvn verify dskiputs dskipits integration functional test may desirable turn log container test useful debug test failure happen within container supply follow argument dseelogsft dseelogsit dseelogsfft tunnel container log include application within container log maven log mechanism able see happen container test might also want adjust log level test default test logger configure write debug log log target directory error log standard change log level standard log maven loglevel argument instance mvn dloglevel debug test want fine grain control log copy src test resource logback test xml project root directory modify logback test xml project home directory instead standard src rest resource available hypothetical also add project gitignore need worry check git single test sometimes useful single test instead whole test suite surefire maven plugin allow worth note single test way test suite pre configure system property pick plugin configuration work around dev want single test must supply necessary property theirself want functional test check miss image get placeholder image manifest command would mvn integration test dtest missingimageft dfester bucket iiif fester dfester log output true would want supply value fester bucket fester placeholder course command spin docker container functional test missingimageft test skip integration functional test suite application development development instance fester type follow within project root mvn plive test service verify access api documentation access debug eclipse ide way debug fester debug test enable developer step test application test suite debug instance enable developer step application interact http api follow setup instruction test eclipse debug test within eclipse create new debug configuration top level menu select debug configuration pop window create new configuration type remote java application set name something like fester jdwp server containerize instance create test suite connect tab set project fester project directory set connection type standard socket listen set port set connection limit check allow termination remote optional create another debug configuration top level menu select debug configuration pop window create new configuration type maven set name something like fester debug test suite main tab set base directory fester project directory set goal integration test set profile debug set user setting path setting xml contain aws credential debug configuration create step debug configuration create step alternative step follow command line complete step mvn pdebug integration test first time may need bring back pop window create configuration order invoke otherwise toolbar button hotkeys ctrl f11 f11 debug debug instance procedure start instance fester port open incoming jdwp connection within eclipse create new configuration top level menu select configuration pop window create new configuration type maven set name something like fester debug mode main tab set base directory fester project directory set goal test set profile rundebug set user setting path setting xml contain aws credential create new debug configuration top level menu select debug configuration pop window create new configuration type remote java application set name something like fester jdwp client connect tab set project fester project directory set connection type standard socket attach set host localhost set port check allow termination remote optional new configuration create step new debug configuration create step alternative step follow command line mvn prundebug test _and proceed step load test test include test put manifest wish test need locust instal follow command src test script locust folder locust host url server test wish locust test dev instance machine would enter locust git hook prevent accidentally push commit would cause fail configure git client pre push hook src test script git hook pre push git hook work pin package pin version package base image mean periodically pin version become obsolete break nightly catch issue case find breakage handy way tell pin version break see current version inside base image mvn validate dversions output list current version compare pin version define project pom pom xml festerize may interact fester alternative csv upload form contact internal ticket system leave github open case would like ticket make suggestion also contact kevin clarke ksclarke ksclarke question project
Semantic web;https://github.com/ldodds/geonames;geonames simple utility script unpack reformatting geonames rdf dump author leigh dodds leigh dodds talis com overview geonames great resource geographical information helpfully publish export variety format allow others process manipulate locally unfortunately rdf dump available little idiosyncratic rather provide single ntriples even rdf xml dump consist text consist alternate line like feature uri rdf xml description feature mean need script unpack order load triple store rakefile script provide make easy unpack convert dump ntriples conversion write ruby rdf rdf raptor library script need execute sudo gem rdf rdf raptor convert ntriples simply rake convert convert store geonames license script free unencumbered public domain software information see accompany unlicense
Semantic web;https://github.com/AKSW/SemanticPingback;semantic pingback vocabulary small vocabulary define resource context semantic pingback semantic pingback mechanism extension well know pingback method technological cornerstone blogosphere thus support interlink within web information semantic pingback available semantic pingback also architecture distribute semantic social structure protocol
Semantic web;https://github.com/linkeddata/rdflib.js;rdflib npm join chat javascript rdf library browser node read write rdf xml turtle read rdfa json read write link client webdav sparql update real time collaborative edit web socket patch local api query store compatible rdfjs task force sparql query full sparql graph match optional smushing nod owl sameas owl inversef unctionproperty track provenance triple keep metadata rdf http access documentation see api partial useful tutorial rdflib solid web tutorial tutorial authenticate alternate fetch block diagram rdflib block diagram block diagram fetcher handle block diagram update solid developer portal information browser bundler like webpack browser generate
Semantic web;https://github.com/scholtzan/rdf-rs;rdf note project work progress currently stable rdf library resource description rdf implement rust project way rust combine interest semantic web technology usage add cargo toml basic rdf triple store represent graph rdf graph serialize support format rdf syntax also parse transform rdf graph current state currently rdf provide basic structure represent rdf graph triple nod follow format parse serialize turtle triple future work idea support query sparql add support format comprehensive uri structure
Semantic web;https://github.com/ontola/hextuples;hextuples _status draft_ _version hextuples simple datamodel deal link document describe concept hextuples well moment serialization format hextuples ndjson easy parse stream parse design highly performant context concept hextuple single _hextuple_ atomic piece similar rdf also know statement quad hextuple cotains small piece information hextuples consist field subject predicate value datatype language graph let encode follow sentence hextuples _tim berners lee director w3c bear london 8th june subject predicate value datatype language graph director w3c uri uri stand uniform resource identifier specify rdf best know type uri url although currently best practice mostly http url uris hextuples work type uri subject _subject_ identifier thing statement field require must uri predicate _predicate_ describe abstract property statement field require must uri value _value_ contain object hextuple field require datatype specify datatype hextuple datatype _datatype_ contain object hextuple field optional must uri empty string datatype namednode globalid datatype blanknode localid language _datatype_ contain object hextuple field optional must rfc language empty string relation rdf hextuples datamodel closely resemble rdf facto standard link rdf statement often call triple consist subject predicate value object field either single uri name nod combination field literal value datatype language mean single triple actually consist _five_ field subject predicate value datatype language quad statement also graph total field hence name hextuples instead make distinction literal statement namednode statement different hextuples single describe single statement hextuples make easy serialize query store hextuples ndjson _this document serve work progress draft specification_ hextuples ndjson newline delimit json base hextuples rdf serialization format desgined support stream parse provide great performance context browser valid hextuples document must serialize hextuples ndjson mime type application hex ndjson charset utf array must consist string array represent rdf statement quad triple string array respectively represent subject predicate value datatype lang graph datatype lang field value represent literal value uri string date something else rdf combination value datatype lang know object express object namednode string datatype globalid express object blanknode string datatype localid graph blank node anonymous underscore uri scheme mynode parser interpret blank graph may discard support field value empty string english _tim berners lee bear london 8th june turtle triple expresed hextuples ontola typescript hextuples parser typescript give idea write parser hextuples rdflib rdflib pure package work rdf support parse serliazing rdf hextuples internally object rdf parse hextuples represent _conjunctive graph_ multi graph object hextuples must end extension hext rdflib auto recognise format although end format give format hext rdf format conversion tool rdflib convert hextuples online motivation hextuples ndjson hextuples design thom van cto ontola notice parse serialization unnecessarily costly full rdf even relatively performant quad format since hextuples serialize ndjson benefit highly optimise json parser ndjson instead regular json make easy parse concatenate response multiple root object document ndjson enable stream parse well give another performance boost rdf library internal rdf graph hextuples array well mean minimal map cost parse hex tuple statement format especially suitable real front end application dynamic rdf
Semantic web;https://github.com/goerlitz/rdffederator;splendid provide federation infrastructure distribute link rdf source sparql query execute transparently across set pre configure sparql endpoint automatic source selection query optimization base statistical information provide void description ongoing research project institute web science technology university koblenz germany currently software offer stable alpha version new feature update may add time quick start check source svn eclipse project svn checkout splendid compile source splendid splendid bat repository configuration sparql query parameter splendid splendid config eval query customize splendid federation choose set source generate void statistic source source dump 1st option void generator script triple script generate_void_description dump void 2nd option java void generator subject sort rdf script run_voidgen dump_sorted_by_subject add feed member definition source federation configuration see splendid config rep repositorytype always west voidrepository feed voiddescription require uri point void void sparqlendpoint uri source sparql endpoint override endpoint definition void splendid custom configuration technical overview presentation consume link open workshop iswc
Semantic web;https://github.com/rdf-ext/rdf-ext;rdf ext npm rdf ext javascript library extend rdf rdf spec handle rdf developer friendly way detail please check
Semantic web;https://github.com/deiu/rdf2go;rdf2go coverage native golang parser serializer turtle json installation get get github com deiu rdf2go usage work graph look triple graph return single match method return first triple match subject predicate object pattern return list match similar return triple match give pattern different type term resource iris literal blank nod parse parser take reader first parameter string contain mime type second parameter currently support parse format turtle mime type text turtle json mime type application json parse turtle reader parse json reader parse either turtle json uri web case specify mime type internal client try content negotiate either turtle json error return fail note newgraph function accept optional parameter call skipverify tell internal client whether ignore bad self sign server side certificate default check omit parameter set true serialize serializer take writer first parameter string contain mime type second parameter currently support serialization format turtle mime type text turtle json mime type application json serialize turtle serialize json
Semantic web;https://github.com/rsgoncalves/module-extractor;owl java base module extractor owl ontology owl summary owl standalone tool design extract different type locality base owl ontology tool take input ontology text latter call signature contain entity class object property iris tool extract module specify set iris signature onto choose location usage ant script owl jar large ontology may increase heap space entity expansion limit esp ontology rdf xml 4gb heap java jar xmx4g dentityexpansionlimit owl jar signature module extraction signature contain entity iris appear original ontology iris separate follow delimiters comma csv white space vertical bar tab new line may also contain header comment long line part thereof precede text follow ignore check signature content header class_iri_1 class_iri_2 class_iri_3 property_iri_2 property_iri_3 main property comment class_iri_4 snomed module extractor accept signature snomed ontology umls core subset format manually construct signature concept delimit vertical bar similar way umls core subset deployment module extractor compatible java test java rely mainly follow project owl contact consider check website link publication information regard _locality based_ module submit query come across bug please issue tab describe problem along sufficient reproduce ontology signature
Semantic web;https://github.com/djogopatrao/SPARQLFederator;sparqlfederator expand sparql query perform inference multiple endpoint main documentation find information wiki page java jar target sparqlfederator snapshot jar dependency jar domain_ontology domain owl federation_ontology federation owl exec print query exec print print expand query exec would execute yield work endpoint define federation owl full iri class query see domain_ns save space try class like add axiom class domain owl keep mind sparqlfederator implement semantics see wiki argument mandatory specify least domain ontology federation ontology class query usage sparqlfederator option query query expand syntax specify query_type domain_ns domain namespace specify append queryied domain_classes domain_ontology domain ontology federation_ontology federation ontology help show help message ontocloud_ns federation namespace default value optimizer execute query optimizer simple default none planner execute query planner simple default none query_type accept query type simple default sparql implement stats display statistic query debug compile mvn clean package mvn exec java dexec mainclass org accamargo cipe gqe sparqlfederatorrun dexec args federation_ontology federation_ontology owl domain_ontology domain_ontology owl domain_ns domainnamespace class1 classn production compile mvn clean compile assembly single
Semantic web;https://github.com/jpcik/morph-starter;morph starter get start morph project simple java scala demo morph currently show generate rdf relational database map requirement java7 sbt maven sbt main method configure small hsqldb memory database predefined mapping rdf output console check demoqueryjava tweak change whaterver want script create test sql mapping r2rml src main resource database jdbc config src main resource application conf eclipse want eclipse type follow generate project generate necessary eclipse project classpath dependency etc import project eclipse installation plan scala recommend instal scala ide plugin maven prefer maven instead sbt pom xml available otherwise ignore existence compile usual mvn compile import eclipse m2e plugin etc
Semantic web;https://github.com/RDFLib/geosparql-dggs;rdflib geosparql function dggs library provide support geosparql simple feature relation geometry express dggs currently rhealpix grid support installation package index pypi pip geosparql dggs package depend support function graph function depend library turn depend library base class represent dggs cell collection cell function implement rdflib gsdggs sf_functions import gsdggs __init__ register rdflib sparql extension function iris mean like full work script stript output function also directly without rdflib direct import _source stript output function definition simple feature relation interpret follow way context nest square dggs grid rhealpix grid dggs sfequal set cell equal identifier dggs sfwithin set cell within set cell addition cell set cell equal equal dggs sfcontains set cell contain set cell addition cell set cell equal equal dggs sfintersects set cell intersect set cell share cell cell parent child cell cell touch dggs sftouches set cell touch set cell cell meet edge vertex dggs sfdisjoint set cell disjoint set cell share cell cell parent child cell cell touch dggs sfoverlaps set cell overlap set cell addition cell set cell different disjoint touch test test test implement individual test function along granular test support class cell cellcollections well application function without rdf contribute via github issue pull request license license bsd clause license per license license license citation contact _creator maintainer david habgood _application architect_ surround australia pty
Semantic web;https://github.com/RDFLib/pySHACL;pyshacl png pyshacl validator shacl pure module allow validation graph shape constraint language graph module library work rdf dependent module owl2 base expansion graph module develop adhere shacl recommendation holger knublauch dimitris kontokostas shape constraint language shacl july w3c recommendation url community help support shacl community discord server discussion topic around shacl shacl specification invitation link join pyshacl channel discussion around library hold ask general pyshacl help installation pip python3 pip installer pip3 virtualenv commandline instruction linux unix base exit virtual enviornment command line command line commandline instruction linux unix base optional path shape graph optional path extra ontology graph import pre inferencing option validationreport output format human human readable validation report enable meta shacl feature enable shacl advance feature enable shacl feature pyhsacl instal system exit cod datagraph conformant datagraph non conformant validator encounter runtimeerror check stderr output detail implement validator encounter shacl feature yet implement full cli usage option module basic module call validate function pyshacl module like data_graph rdflib graph object path graph validate shacl_graph rdflib graph object path web url graph contain shacl shape validate none shacl shape include data_graph ont_graph rdflib graph object path web url graph contain extra ontological information none require inference string value indicate whether perform owl inferencing expansion data_graph validation option rdfs owlrl none default none abort_on_first optional bool value indicate whether program abort encounter first validation failure continue default continue allow_infos optional bool value shape mark severity info invalid allow_warnings optional bool value shape mark severity warn info invalid meta_shacl optional bool value indicate whether program enable meta shacl feature default false advance optional bool value enable shacl advance feature optional bool value enable shacl feature pyshacl instal debug optional bool value indicate whether program emit debug output text include violation lead non conformance overall debug true judge conformance absense violation message default false optional keyword variable available validate function data_graph_format override format detection give graph source shacl_graph_format override format detection give shacl graph source ont_graph_format override format detection give extra ontology graph source iterate_rules interate shacl rule steady state find work advance mode do_owl_imports enable feature allow import subgraphs owl import shape graph ontology graph note explicitly target graph serialize_report_graph convert report results_graph serialise representation turtle check_dash_result check validation give expect dash test suite check_sht_result check validation give expect sht test suite return value component tuple contain conform bool indicate whether data_graph conform shacl_graph results_graph graph object accord shacl specification validation structure results_text string represent verbose textual representation validation module call get equivalent command line tool python3 executable error certain circumstance pyshacl produce validation failure formal error define shacl specification require produce specific condition within shacl graph validator produce validation failure results_graph variable return validate function instance validationfailure see message attribute instance get information validation failure error validator generate shapeloaderror error throw shacl shape shacl graph invalid state load validation engine constraintloaderror error throw shacl constraint component invalid state load validation engine reportableruntimeerror error occur different reason reason communicate back user validator runtimeerror validator encounter situation cause throw error reason concern user unlike validationfailure error pas back validate function throw exception validation engine must catch try except block case shapeloaderror constraintloaderror see str string representation exception instance error message along link relevant section shacl spec document window cli create executable window characteristic linux mac cli program necessary spec already include pyshacl pyshacl cli spec pyshacl cli spec pyinstaller spec create exe pyshacl command line utility see pyshacl command line util usage instruction see pyinstaller installation info pyinstaller window pyinstaller pyinstaller generate pyshacl exe cli like output pyshacl exe dist directory src pyshacl pyshacl command line utility via pyshacl exe see pyshacl command line util usage instruction compatibility pyshacl python3 library best compatibility great python3 support library work pyshacl pep518 pep517 project pyproject toml poetry manage dependency best compatibility instal pypi pip upgrade pip v18 ubuntu need sudo pip3 upgrade pip get new version feature feature matrix keep feature changelog comprehensive changelog keep changelog benchmark project include script measure difference performance validate source graph inferenced different inferencing option computer see fast validator operate license repository license apache license version see license detail contributor see contributor citation doi version late version contact project lead nicholas car senior experimental scientist csiro land water environmental informatics group brisbane qld australia lead developer ashley sommer informatics software engineer csiro land water environmental informatics group brisbane qld australia
Semantic web;https://github.com/Claudenw/jdbc4sparql;complete functionality test however functional test complete near future jdbc sparql jdbc sparql jdbc driver sparql endpoint jena store license jdbc sparql license apache license however component license gnu lgpl mean want product environment permit gnu lgpl need find another sparqlparser interface cover extension point section document maven group org xenei artifact jdbc4sparql usage url url j4sdriver jdbc j4s arg value arg2 value2 arg3 value3 url current runtime configuration option default execute j4sdriver class application valid argument catalog name catalogue restrict query type type input builder builder sql schema either name register builder class name see register schema builder parser parser class fully qualify sparqlparser default org xenei jdbc4sparql sparql parser jsqlparser sparqlparserimpl valid type default config url j4s configuration yet implement sparql url sparql endpoint rdfxml rdf xml url rdf xml format rdf ntriples triple url triple format rdf url format rdf turtle turtle url turtle format rdf rdfjson rdf json url rdf json format rdf nquads quad url quad format rdf trig trig url trig format rdf register schema builder default simple_builder simple schema builder table base rdfs class name note currently catalogue runtime builder however future improvement include mechanism store entire configuration multiple catalogue catalogue contain url sparql endpoint rdf possible configure driver access multiple endpoint conflict nomenclature sql sparql nomenclature conflict purpose documentation unless otherwise specify sql nomenclature work map graph general rdf graph thus sparql endpoint instance navigational database sql generally design work relational application attempt map navigational database onto relational table key schemabuilder map rdf graph table column default look rdf resource rdf type rdfs class consider resource table resource name table name call table resource scan rdf store look distinct property object table resource type property column table table generate schemabuilder store sql schema multiple schema may create single rdf schema vocabulary datastore possible override default implement new schemabuilder add meta inf service org xenei jdbc4sparql sparql builder schemabuilder first entry consider default builder generate query sql query parse sparqlparser convert sparql query default sparqlparser lgpl lgpl base package may register different place first entry meta inf service org xenei jdbc4sparql sparql parser sparqlparser return query execute sparql endpoint jena sparql resultset retrieve querysolutions store local list sql resultset create list return
Semantic web;https://github.com/apache/marmotta;apache marmotta repository contain source apache maven docker docker image source distribution apache marmotta maven test software basic require instal maven mvn clean compile package test apache marmotta module local maven repository case want project base library provide apache marmotta usually suffice default loglevel unit integration test execute info change loglevel either output pas loglevel system property mvn clean droot level trace debug info warn error note integration test start part marmotta platform execution log level test change marmotta take log configuration case deploy wep application apache marmotta also include default configuration java web application deploy java application server web application first mvn clean project root change launcher marmotta webapp directory mvn package create marmotta war target directory deploy archive java application server copy deployment directory alternatively directly startup apache marmotta web application maven default configuration suitable development try mvn tomcat7 wait system start point browser develop sometimes useful always start clean confi guration system therefore also start web application follow mvn clean tomcat7 pcleanall command remove exist configuration directory startup standalone installer environment also offer automatically installer package guide user installation easy installation wizard installer base izpack dynamically assemble package installer first mvn clean project root change launcher marmotta installer directory mvn package pinstaller process automatically create appropriate installer confi guration maven dependency apache marmotta refpack plugin installer try java jar target marmotta installer jar docker image marmotta also come support create docker image development test locate root source repository image docker marmotta container docker marmotta access marmotta address may different see information bellow official image available docker automate need pull replace second step docker pull apache marmotta clean repository sometimes useful check properly clean local repository simulate happen user source achieve maven follow mvn clean dmaven repo local tmp testrepo command change local repository location directory pas argument simulate release test release without actually deploy software create profile deploy local system simulate release mvn clean deploy pdist local marmotta release installer please keep mind release involve create digital signature need gpg key proper gpg configuration task read release
Semantic web;https://github.com/phillord/tawny-owl;tawny owl introduction tawny owl allow construction owl ontology evaluative functional fully programmatic environment think ontology engineer equivalent many advantage traditional ontology engineer tool also describe video interactive repl explore create ontology source comment editable range ides fully extensible new syntax new source add user pattern create individual ontology relate class easily accurately maintainably unit test framework fully reason clean syntax versioning vcs integrate ide support package dependency resolution publication enable continuous integration ontology software dependency tawny owl implement domain specific language full program language call many feature describe repl pattern unit test extensibility derive directly clojure language general purpose program tool ides versioning continuous integration core ontology feature implement directly owl feature therefore industry strength standard compliant well support independently tawny owl developer owl w3c standard ontology representation language ontology fully computable set statement describe thing relationship mostly notable biomedicine describe complex area knowledge clinical describe anything include tutorial information please see full length also original slightly old get start doc get start document available clojure developer tawny owl predominately design programmatic application ontology development api owl ontology set statement thing relationship underneath statement map subset first order logic make possible answer question statement highly optimise reasoner currently ontology tool within general purpose program relatively develop part intention behind tawny owl embed ontology deeply within programmatic framework see whether ontology useful way information tawny owl available documentation doc tawny api motivation discus development base post include another make library revelevant post installation tawny owl require installation per clojure library available add org russet tawny owl project clj leiningen current version ubuntu occasionally window edit tawny owl ontology emacs clojure mode nrepl currently instal respective versioning system library depend environment however author phillip lord newcastle university mail list mail list mailto tawny owl googlegroups com version clojars license content subject lgpl license version copyright newcastle university program free software redistribute modify term gnu less general public license publish free software foundation either version license option late version program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail receive copy gnu less general public license along program see
Semantic web;https://github.com/hsolbrig/PyShEx;shex package reasonably literal shape expression language parse execute shexc shexj source revision dev3 add schemaevaluator tweak still unit test fail beware fix several issue still pas unit test see test_manifest detail add sparql_slurper capability resolve several issue reactome disease test case fix issue miss start inconsistent shape cause loop fix issue refactoring first cut return fail reason work still need update shexc parser include multi line comment bug fix issue installer miss parse_tree package make sparql_slurper dependency fix long recursion issue blood pressure fix cardinality issue add cli entry point clean error report throw error invalid focus node candidate shex fix evaluator load string etc shex add collection flatten graph option evaluator add option catch miss start node early add option allow start nod specify rdf type arbitrary predicate add ability supply sparql query option fix issue fix issue upgrade error report report namespaces enhance prefixlib inject module add option cli fix close issue evaluate call issue bump version due error installation note need escape single quote rdf literal need bleed edge rdflib unfortunately however rdflib jsonld compatible bleed edge rdflib json parser situation shexeval cli documentation see notebook jupyter notebook sample general layout root pyshex package subdivide shape_expressions_language pyshex shape_expressions_language various section shape expression language implement p3_terminology pyshex shape_expressions_language p3_terminology validation p5_2_validation_definition pyshex shape_expressions_language p5_2_validation_definition etc shapemap_structure_and_language pyshex shapemap_structure_and_language shapemap structure well understand sparql11_query pyshex sparql11_query require section sparql query language section utils pyshex utils support utility shex schema definition package come try keep close possible semi formal specification statement implement dependency package object representation shex ast define compile compiler compiler transform shape expression shexjsg image conformance pas test master branch follow exception moment test pas skip reason sht lexicalbnode sht toldbnode sht bnodeshapelabel test non blank blank nod rdflib preserve bnode identity sht import shex import feature yet implement tag manifest shapemap feature yet implement sht relativeiri real problem take time deal test harness rdflib parse error escape single quote issue submit await release mention moment literal specification sensible mean particular clever come partition management docker
Semantic web;https://github.com/sage-org/sage-engine;sage sparql query engine public link provider pypi read online sage sparql query engine public link provider implement web preemption sparql engine include smart sage client sage sparql query server host rdf datasets repository contain sage sparql query server sparql query suspend web server fix quantum time resume upon client request web preemption sage ensure stable response time query execution completeness high load complete approach experimental available research accept web conference available thomas mini hala skaf molli pascal molli sage web preemption public sparql query service proceed world wide web conference www san francisco usa may appreciate feedback comment question send mail list mailto sage univ nantes issue tracker table content installation installation get start get start server configuration server configuration postgresql configuration postgresql configuration ingestion ingestion start server start server sage docker image sage docker image command line utility command line utility documentation documentation installation installation strongly advise requirement high gcc clang support development header header available system python3 dev package debian ubuntu system installation pip core engine sage sparql query server backend instal follow sage query engine various backends load rdf datasets various backends available instal extra dependency command hdt postgresql hbase backends manual installation poetry sage sparql query server also manually instal dependency manager pip various sage backends instal extra dependency extra flag get start server configuration sage server configure configuration yaml find minimal work configuration full available config_examples quota max_results field set maximum time quantum maximum number allow per request respectively entry graph field declare rdf name description backend option specific backend different backends available hdt backend allow sage server load rdf datasets hdt sage load query hdt postgres backend allow sage server create query update rdf datasets store store single table compose column subject predicate object table create tree index spo osp sage interact postgresql postgres catalog backend different schema postgres store datasets triple term map unique identifier dictionary table common datasets map rdf term identifier schema allow reduce space require store datasets sqlite backend allow sage server create query update rdf datasets store datasets store schema postgres backend sqlite catalog another backend sqlite dictionary base schema postgres catalog backend hbase backend allow sage server create query update rdf datasets store sort access triple triple insert time different table spo osp triple key sage interact hbase postgresql configuration section optional skip postgresql backends ensure stable performance postgresql sage postgresql need configure open postgresql conf postgresql main directory apply follow change planner method configuration section uncomment enable_xyz option set enable_indexscan enable_indexonlyscan enable_nestloop set enable_xyz option change force postgresql query optimizer generate desire query plan sage resume query ingestion different executables available load rdf depend backend want load hdt declare new configuration hdt backend load triple postgres postgres catalog hbase sqlite sqlite catalog backends first declare new configuration load my_dataset sqlite backend start declare new name my_dataset configuration my_config yaml backend illustrate declare new available directory load declare sqlite backends follow command load declare postgresql backends follow command load declare hbase backend follow command start server sage executable instal alongside sage server allow easily start sage server configuration asgi http server full usage sage executable detail start interact sage server sage docker image sage server also available docker order forget mount directory contain configuration datasets documentation generate documentation navigate doc directory generate documentation copyright gdd university
Semantic web;https://github.com/cmungall/sparqlprog;sparqlprog program sparql join chat sparqlprog program language environment write composable modular block execute federate sparql query command line command pas logic program query sparqlprog case query conjunction condition involve different variable indicate lead upper case letter protein cod gene locate mouse chromosome interval bound begin end interval within certain range homologus human gene indicate taxon bind tuples column table logic query compile sparql query fetch query execute ebi rdf give mouse gene human gene ensembl ensmusg00000035198 ensembl ensg00000131462 ensembl ensmusg00000017167 ensembl ensg00000108797 ensembl ensmusg00000044052 ensembl ensg00000184451 ensembl ensmusg00000017802 ensembl ensg00000141699 ensembl ensmusg00000045007 ensembl ensg00000037042 ensembl ensmusg00000035172 ensembl ensg00000068137 work query compilation make pre define ary predicate define faldo connect rule head rule body case body conjuncation goal may define rule typically everything bottom call ary predicate rdf map single triple case vocabulary genomic location approach allow composability query rather repeat verbose sparql time different query reusable module define addition provide composable language compile sparql package provide complete turing complete environment mix query relational logic program paradigm see quick start prolog hacker see sparqlprog module see also specification specification quick start hacker see package provide interface sparqlprog service also see demonstration notebook basic send program quick start everyone else variety way framework execute query remote service via command line compile logic query sparql query another framework programmatically within logic program interleave remote local operation programmatically language like javascript __sparqlprog service__ consult appropriate section query command line see directory command line first make sure bin bin directory path give access pl2sparql script full option note also number convenience script path script simply shortcut give access number convenience predicate positive_therapeutic_predictor drug query option wikidata module option set service handle dbpedia map handle full service url define wikidata module best way look together correspond set rule prolog sparqlprog ontology prolog sparqlprog ontology monarch monarch find disease give name find equivalent class transitive reflexive subclass find phenotype compile logic program sparql pl2sparql see installation compile program bind sparql query option sparql query without dependence sparqlprog generate follow sparql without execute remotely note indentation uri shorten card future release public sparqlprog service public pengines service framework logic program environment web service client language client library javascript seem mature well separate prolog client well see doc pengines contact service javascript bin sprog client bin sprog client need npm pengines change server url pengines allow client send logic program server invoke note safe subset prolog pas program case pas small program continent trivially define unary predicate argument bind continent special infix binary predicate leave side service name right side query compile ask portion javascript simply pas query server local sparqlprog service start sparqlprog service locally docker cmungall sparqlprog require docker create pengines service contact service javascript sprog client bin sprog client need npm pengines swish todo within logic program consider write music band recommender base similarity genre dbpedia triple link band genre write program dbpedia_rules dbpedia dbpedia_rules contain definition predicate first define binary predicate count number band per genre try dbpedia dbpedia dbpedia_rules genre_num_bands count give like want weight band similarity accord rare genre band share genre independent music remarkable band share rare genre like ghettotech weight high explicitly bind dbpedia define information content genre log2 make note table memoizing call fetch total number band mean call per sparqlprog session finally define ary predicate compare band bind 3rd arg similarity score sum genre hold common simplicity penalize unmatched genre try sub super genre category yet normal prolog goal execute normal prolog context command line dbpedia dbpedia dbpedia_rules pair_genre_ic dbr metallica dbr megadeth option tell script execute query directly rather try compile everything single sparql query may possible could highly inefficient prolog engine execute goal remote sparql execute want adapt program search rather compare give band modify slightly waste cycle query band genre common dbpedia dbpedia dbpedia_rules pair_genre_ic dbr voivod_ band note slow iterate across band perform query gather stats various approach optimize core idea logic shuffle back forth portion compile sparql execute remotely portion execute locally logic engine local triplestore sparqlprog local remote triplestore support sparql protocol rdf want get start quick route assume docker place make blazegraph within docker container discussion sparql provide declarative way query triplestore limitation lack ability compose query reuse repeat pattern across multiple query sparqlprog extension sparql subset prolog relational rule orient program sparql endpoint prolog programmer guide package provide natural prolog point view interface sparql endpoint layer first low layer define dcg generate sparql query structure term second provide translation representation look like prolog goal rdf goal conjunction disjunction etc term term language understand sparql dcg addition library provide mechanism register know sparql endpoint refer short name enable query register endpoint library base idea implement yves raimond swic package completely implement need swi prolog semantic web library simple usage operator high precedence conjuction disjunctive query write right without parenthesis clause expansion follow clause define query goal expand complex goal define query existential restriction subset prolog expand way conjunction disjunction multiple clause negation support terminal rdf rdf predicate rdfs library support future wide set construct may support setof also possible create_sparql_construct create_sparl_construct generate sparql query limit subset pure prolog execute outside prolog environment effectively limit prolog sparql compiler comparison spin todo credit majority repo develop abdallah part sparkle come yves raimond swic package extension implement chris mungall particular goal rewrite dcg extension aggregate filter operator predicate definition vocabulary various triplestores faldo ebi wikidata dbpedia monarch
Semantic web;https://github.com/SDM-TIB/SDM-RDFizer;sdm rdfizer late pypi pypi project present sdm rdfizer interpreter map rule allow transformation structure rdf knowledge graph current version sdm rdfizer assume map rule define rdf map language rml dimou sdm rdfizer implement optimize structure relational algebra operator enable efficient execution rml triple map even presence big sdm rdfizer able process heterogeneous source csv json rdb xml process set rml rule triplesmap multi thread safe procedure sdm rdfizer sdm rdfizer workflow new feature present sdm rdfizer version4 version sdm rdfizer address problem efficiency creation term memory storage sdm rdfizer version4 include new module call triplesmap plan tmp define optimize evaluation plan execution triple map additionally version4 extend previously include module triplesmap execution tme introduce new operator compress store structure new feature configure new parameter add configuration name large_file order perform extensive empirical evaluation sdm rdfizer version4 term execution time memory usage experiment set empirically compare impact duplicate rat size complexity execution order triple map version sdm rdfizer version4 version3 exisiting engine icluding rmlmapper term execution time memory usage experiment perform different benchmark datasets include 10k 100k record duplicate rat map rule different complexity simple object map object reference map object join map datasets scale value csv csv csv csv different map rule simple object map object join map explain experiment summarize follow overview execution time execution time comparison observe figure version sdm rdfizer complete testbeds successfully engine case timeout sdm rdfizer version3 rocketrml version competitve simple testbeds however sdm rdfizer version4 show best performance testbeds overview memory consumption memory consumption comparison illustrate figure sdm rdfizer version4 small peak memory usage compare previous version sdm rdfizer execution sdm rdfizer describe follow research report enrique iglesias samaneh jozashoori david chaves fraga diego collarana maria esther vidal sdm rdfizer rml interpreter efficient creation rdf knowledge graph 29th acm international conference information knowledge management cikm samaneh jozashoori david chaves fraga enrique iglesias oscar corcho maria esther vidal funmap efficient execution functional mapping knowledge graph creation 19th international semantic web conference research track iswc samaneh jozashoori maria esther vidal mapsdi scale semantic integrationframework knowledge graph creation 27th international conference cooperative information system coopis david chaves fraga kemele endris enrique iglesias oscar corcho maria esther vidal parameter affect construction knowledge graph 18th international conference ontology database application semantics odbase david chaves fraga anton adolfo jhon toledo oscar corcho onett systematic knowledge graph generation national access point 1st international workshop semantics transport locate semantics david chaves fraga freddy priyatna andrea cimmino jhon toledo edna ruckhaus oscar corcho gtfs madrid bench benchmark virtual knowledge graph access transport domain journal web semantics additional reference dimou dimou sande colpaert verborgh mannens walle rml generic language integrate rdf mapping heterogeneous proceed workshop link web locate 23rdinternational world wide web conference www project sdm rdfizer sdm rdfizer creation knowledge graph h2020 project national project scientific management group participate project include iasis big precision medicine base patient insight iasis rdf knowledge graph comprise rdf triple collect heterogeneous source rml triple map bigmedilytics lung cancer pilot rml triple map create lung cancer knowledge graph around source 500m rdf triple clarify predict poor health status specific oncological treatment lucat improvit platoon euvsvirus hackathon april sdm rdfizer create knowledge4covid knowledge graph participation team scientific management group june 7th comprise 28m rdf triple describe fine grain level covid scientific publication covid relate concept substance drug drug interaction molecular disfunction sdm rdfizer also h2020 eit digital spanish national project ontology engineer group technical university madrid participate project mainly focus transportation smart city domain include h2020 sprint performance scalability test semantic architecture interoperability framework transport across europe eit snap innovation project application semantic technology national access point open city national project create common share vocabulary spanish city drugs4covid nlp annotation metadata scientific covid virus integrate almost 44m fact triple sdm rdfizer create project sdm rdfizer also virtual platform h2020 european joint programme rare disease instal sdm rdfizer pypi github docker visit repository sdm rdfizer also take look demo sdm rdfizer parameter configure sdm rdfizer faq configuration easily customize configuration set feature sdm rdfzier offer change value parameter config description parameter possible value provide order large_file new feature provide sdm rdfizer version4 version rml test case see sdm rdfizer rml test case rml sdm rdfizer version4 test late publish test release experimental evaluation see experimental evaluation sdm rdfizer version sdm rdfizer experiment license work license apache author sdm rdfizer develop member scientific management group tib ongoing research effort development coordinate supervise maria esther vidal maria vidal tib strongly encourage please report issue sdm rdfizer contact email create new issue github sdm rdfizer implement enrique iglesias current version iglesias l3s guillermo betancourt version guillermojbetancourt gmail com supervision samaneh jozashoori samaneh jozashoori tib david chaves fraga dchaves upm kemele endris kemele endris tib
Semantic web;https://github.com/arachne-framework/aristotle;aristotle rdf owl library clojure provide orient wrapper apache jena key feature read write rdf graph idiomatic clojure structure sparql query express clojure structure pluggable inferencing reasoner pluggable validators rationale rdf powerful framework work highly annotate abstract way although perfect highly research well define understand industry standard rich semi structure open end information exist clojure tool rdf focus mostly create manipulate rdf graph pure clojure low level desire comprehensive library specific objective bridge exist idiom work clojure rdf graph apache jena capable well design library work rdf rdf ecosystem apache software license unlike many rdf tool compatible clojure epl however jena core apis describe agressively object orient since rdf core highly orient clojure also orient object orient imperative api seem especially cumbersome aristotle attempt preserve good part jena replace cumbersome apis clean drive interface aristotle provide direct access rdf framework rdf4j jsonld common rdf owl api etc however jena highly pluggable need interact system highly probably jena adapter already exist easily create index literal literal structure structure api api query query validation validation express rdf clojure aristotle provide protocol arachne aristotle graph asnode convert clojure literal rdf nod appropriate type arachne aristotle graph astriples convert clojure structure set rdf triple literal clojure primitive value map jena node object appropriate type clojure type rdf node long xsd long double xsd double boolean xsd boolean java math bigdecimal xsd decimal java util date xsd datetime java util calendar xsd datetime string enclose angle bracket iri string xsd string keyword iri see explanation iri keyword registry java net url iri java net uri iri symbol start variable node pattern query symbol unique blank node symbol start name blank node symbol iri form iri keyword registry since iris usually long string tend repeatedly full string expression cumbersome furthermore clojure tend prefer keywords string especially property attribute name enumerate constant value therefore aristotle provide mechanism associate namespace iri prefix keywords register namespace convert correspond iri arachne aristotle registry prefix function declare prefix keywords foaf namespace interpret iri nod declaration foaf name interpret follow common namespace prefix define default namespace iri prefix registry store global dynamic var arachne aristotle registry registry also override thread local basis arachne aristotle registry macro take map namespaces keywords iri prefix also register prefix rdf edn rdf prefix tag literal prefix add thread local bind scoped triple expansion allow define prefix alongside without instal globally manage wildcard prefix aristotle allow register rdf iri prefix namespace prefix rather fully specify namespace asterisk symbol provide prefix function mean keywords namespace start arachne namespace segment supply prefix additional namespace segment append prefix separate forward slash give registration keyword would interpret iri multiple wildcard prefix overlap system whichever specific prefer non wildcard registration wildcard registration case ambiguity character prefix separator wildcard prefix instead currently support structure arachne aristotle graph triple function convert compatible clojure structure collection rdf triple usually practice necessary call triple explicitly high level apis single triple element vector represent single rdf triple call triple return collection contain single jena triple subject predicate string literal luke object collection triple collection multiple triple work way note symbol case nod luke nola represent blank nod without explicit iris map map may represent multiple statement single subject key indicate rdf property subject map indicate special rdf key interpret property rather identify subject map rdf key present blank node subject equivalent triple multiple value value key single literal interpret single triple value collection intererpreted multiple value property expand nest map addition literal value key may additional map collection map subject nest map object property specify subject statement map express expand triple nola jim api aristotle primary api expose top level namespace arachne aristotle define function create interact _graphs_ graph collection rdf together optionally logic inferencing engine graph may store memory facade external rdf database although graph constructor ship aristotle memory graph graph instance org apache jena graph graph stateful mutable object mutability deeply ingrain jena provide immutable facade however aristotle apis consistent return update operation graph immutable clojure style collection reccomended rely return value update operation graph immutable break immutable graph representation ever support jena graph thread safe default make sure limit concurrent graph access create graph create new graph invoke arachne aristotle graph multimethod first argument graph keyword specify type graph construct additional argument vary depend type graph graph constructor provide aristotle include type simple basic memory triple store inferencing capability jena mini memory triple store perform owl inferencing jena mini inferencer subset owl full restriction useful forward entailment jena rule memory triple store support custom rule jena hybrid backward forward rule take collection org apache jena reasoner rulesys rule object additional argument prebuilt collection rule jena mini provide arachne aristotle inference mini rule client may wish provide additional graph multimethod support additional underlie graphy inference type requirement method return instance org apache jena rdf graph graph project may wish create graph back disk database storag powerful pellet reasoner jena integration ship aristotle due license restriction add graph order anything useful graph must add additional fact fact may add either programatically read serialize remote url add programatically add programatically arachne aristotle add function take graph add process rdf triple arachne aristotle graph triple format document add add arachne aristotle read function take graph may specify string absolute process relative filename java net uri java net url java jena detect format may rdf xml turtle triple statement contain add graph query aristotle provide orient interface jena sparql query engine query express clojure programatically generate combine similar query datomic invoke query arachne aristotle query query function take query structure graph query input return query sparql string orient heavily lexical grammar translate cleanly structure however sparql internal algebra clean composable aristotle query internal sparql alegebra expose jena arq graph ignore sparql syntax query expressible sparql syntax also expressible aristotle query modulo feature implement yet query fedration across remote source unfortunately sparql algebra well document syntax rough available readme document common form detail see query associate docstrings aristotle query express composition algebraic operation generalize form operation expression sub operation operation vector may nest arbitrarily expression specify clojure list form expression type symbol expression take general form expr type arg query query arachne aristotle query function function take graph optional bind vector query optionally map variable bind serve query input bind vector give return set tuples unique bind variable bind vector bind vector supply return sequence query solution solution represent map variable bind case solution may unique unless query specifically inclues distinct operation follow sample simple query query single pattern match basic graph pattern bgp bind foaf name property entity subject foaf know entity identify luke might return query sample simple query bind query bind vector case would look like sample query filter expression expand previous query filter operation expression return acquaintance age sample provide input except instead hardcoding base individual luke start individual bind separate bind map provide also possible bind multiple possibility value individual find name person know luke carin dan precompiled query query also precompiled jena operation object mean need parse interpret optimize every time invoke precompile query arachne aristotle query function precompiled query object bind case friend call arachne aristotle query exactly inline version validation common case take give graph validate ensure internal consistency include whether entity conform owl rdfs schema present arachne aristotle validation validate function pas graph return error return jena reasoner construct graph simple reasoner never return error jena mini reasoner return owl inconsistency etc validation successfull validator return nil empty list error error return map contain detail specific error type close world validation reasoner standard open world assumption rdf owl mean many scenario would intuitively invalid human miss min cardinality attribute identify reasoner alwas operate assumption yet know fact however certain case desirable assert yes graph actually contain pertinent fact want make assertion base graph actually know give moment never mind fact may add future pas additional validator function validate provide sequence optional validators second argument validator function take graph argument return sequence validation error map empty sequence imply graph valid min cardinality situation mention validator arachne aristotle validators min cardinality work sparql query provide graph detect min cardinality attribute miss entity know owl class suppose present provide list custom validators pas validate return set owl validation error also min cardinality violation discover course provide additional validator function well
Semantic web;https://github.com/cavendish-ldp/cavendish;cavendish ldp blazegraph cavendish endeavour laboratory elaborate fedora apis extension ldp specification also interest good understand constituent framework fedora influence way core understand case fedora triplestore cavendish cavendish colophon poetical description may perceive ambition onely empress author whole world world make blaze philosophical world mention first part description frame compose pure rational part matter part mind creation easily suddenly effect conquest famous monarch world blaze world empress already rule great wisdom conduct empress dear platonick friend shall never prove unjust treacherous unworthy disturb government much depose imperial throne sake rather chuse create another world another friend margaret cavendish epilogue
Semantic web;https://github.com/alangrafu/turtle-in-html;introduction version nowadays possible embed rdf turtle however easy see rdf page inspire crowbar create tool display triple available turtle format copy link available bookmark click whenever page turtle embed turtle html masahide kanzaki excellent turtle parser license lgpl installation simply add link bookrmark late page contain turtle click bookmark see triple know bug currently work firefox chrome test browser feel free report bug
Semantic web;https://github.com/ncbo/umls2rdf;project take mysql unify medical language system umls database convert ontology rdf owl skos main schema virtual appliance user review documentation ontoportal administration specify database connection conf specify sab ontology export umls conf umls conf configuration must contain ontology per line line comma separate tuples element follow list need update sab bioportal virtual optional value work output name conversion strategy accept value load_on_codes load_on_cuis note costar dsm3r dsm4 dxp icpc2icd10eng mcm mmsl mmx mthcmsfrf mthmst mthspl mth ndfrt snm load loads_on_codes umls2rdf design offline process memory intensive export default ontology umls conf 30min ontology list umls conf umls ontology accessible get error instal mysql library may help window mysql follow tip may help mysql avoid innodb space nlm avoid syntax error raise attribute installtion mysqldb module pip mysqldb error prone executable last know location create rrf subset mmsys mysql load option load database edit conf umls specification umsl2rdf
Semantic web;https://github.com/amgadmadkour/sparti;query centric semantic partition sparti adaptively partition base query workload precompute bloom join frequent triple join combination partition relate property base greedy algorithm cost current version implement apache spark
Semantic web;https://github.com/weblyzard/streaming-sparql;stream sparql provide robust incremental process stream receive sparql server streamingresultset iterator yield receive server javadoc command line client stream sparql also provide command line client test query usage background fuseki rdf4j together comprehensive set mio tuple lead instability native library extremely difficult debug error message server site problem trigger development stream sparql prove robust even query take hour process transfer multiple gigabyte note need call getresultset high timeout prevent timeoutexceptions server compatiblity stream sparql know work jena openrdf rdf4j virtuoso changelog please refer page
Semantic web;https://github.com/Wimmics/gephi-semantic-web-import;gephi plugins repository box development environment gephi plugins gephi plugins implement java extend many different way add improve feature get start easy repository also checkout plugins create migrate gephi plugins process plugins develop submit overhaul gephi release detail read article plugin development get new tool open section step step guide migrate plugins configuration let summerize key difference environements base ant whereas maven significantly different familiar maven start maven minute maven configuration define pom xml base find gephi module platform folder check repository whereas base everything central maven repository gephi module available maven require separate source java resource property distinct folder source locate src main java resource src main resource custom migrate goal available gephi maven facilitate migration automate process migrate ant base plugins maven take care copy configuration follow step migrate plugin fork checkout repository git clone git github com username gephi plugins git already fork repository base suggest save somewhere delete fork history clear copy plugin folder root directory command mvn org gephi gephi maven plugin migrate command detect ant base plugin migrate folder locate module folder plugin inspect netbeans via command line mvn clean package get start requirement develop gephi plugins require jdk late although ide editor netbeans recommend gephi base netbeans create plugin creation new plugin simple thank custom gephi maven generate goal ask question configure everything fork checkout late version repository git clone git github com username gephi plugins git follow command answer question mvn org gephi gephi maven plugin generate process ask name organization company org foo name artifact plugin plugin version directory name myplugin myplugin brand name plugin plugin category layout filter etc layout author name author email optional author url optional license apache apache short description sentence plugin catch phrase long description multiple sentence plugin feature great would like add readme yes yes plugin configuration create order add java src main java folder plugin add resource bundle property image src main resource folder plugin change version author license information pom xml plugin folder edit description category detail src main nbm manifest plugin folder plugin follow command compile plugin mvn clean package addition compile jar nbm command gephi maven plugin verify plugin configuration care something wrong fail indicte reason gephi plugin follow command gephi plugin pre instal make sure mvn package beforehand rebuild mvn org gephi gephi maven plugin gephi navigate tool plugins see plugin list instal submit plugin submit gephi plugin approval simple process base github pull mechanism first make sure work fork check git remote look url contain github username git github com username gephi plugins git add commit work recommend keep fork sync upstream repository explain git merge upstream master beforehand push commit fork git push origin master navigate fork url create pull request select master forge instead master base branch submit pull request update plugin update gephi plugin process submit first time forget merge upstream master branch ide support netbeans ide start netbeans open project navigate fork repository netbeans automatically recognize maven project plugin module find module folder gephi plugin pre instal right click gephi plugins project select debug gephi plugin right click gephi plugins project select debug intellij idea start intellij open project navigate fork repository intellij may prompt import maven project select yes gephi plugin pre instal click create maven configuration enter org gephi gephi maven plugin command field work directory simply current project directory debug gephi plugin create remote configuration switch debugger mode option listen create maven configuration like abobe add drun params debug xdebug xnoagent xrunjdwp transport dt_socket suspend server address runner option field menu first debug remote configuration debug maven configuration faq kind plugins create gephi extend many way major category layout export import laboratory filter generator metric preview tool appearance cluster good way start look language plugins create plugins jvm language scala groovy default option java native librairies yes native librairies module repository structure module folder plugin module plugin define single folder directory plugin compose multiple module call suite usually enough want pom xml module parent pom plugins maven pom inherit configuration parent something keep plugin pom simple notice plugin pom pom xml plugin folder define pom xml root folder make eveything fit together notably list module manifest setting define option first option generate task put entry openide module short description openide module long description openide module display category openide module name src main nbm manifest second option set openide module localize bundle entry manifest value define elsewhere bundle property value simply path openide module localize bundle org project bundle property second option preferable short long description many character manifest format pretty restrictive add new module apply suite plugins multiple module besides create module folder edit pom xml add folder path like dependency configure dependency configure section plugin folder pom xml dependency groupid artifactid version type dependency plugin external library gephi module netbeans module list gephi netbeans dependency find module pom xml possible dependency list section plugin module inherit parent pom version omit dependency set instance plugin depend graphapi netbeans lookup public package apply suite plugins multiple module module declare package want nake accessible module instance module depend class org project examplecontroller define module module declare org project public package public package configure module pom xml edit entry difference plugin module thing say module gephi modular application compose many independent module plugins also module call plugin _core_ gephi plugin netbeans get error standalone module suit require error appear try module gephi plugin need gephi plugins project module
Semantic web;https://github.com/sputniq-space/ontodia;ontodia ontodia javascript library allow visualize navigate explore form interactive graph base underlie source ontodia ontodia allow create persist diagram make exist relational object semantic design visualize rdf set particular could tailor almost source implement provider interface core feature visual navigation diagram large graph set rich graph visualization context aware navigation feature ability store retrieve diagram user friendly graph query language prior knowledge schema require customizable user interface modify template nod link storage back end try follow developer tutorial developer documentation license ontodia library distribute lgpl commercial license additional feature support custom development available please contact info metaphacts com info metaphacts com developer documentation contribute developer documentation available wiki give ontodia people credit ontodia library project please provide link repository publication citation reference follow mouromtsev pavlov emelyanov morozov razdyakonov galkin simple web base tool visualization share semantic ontology international semantic web conference poster demo really help team gain publicity acknowledgment effort thank considerate
Semantic web;https://github.com/Data2Semantics/fox-ui;fox web
Semantic web;https://github.com/kasei/URITemplate;uritemplate swift uri template installation recommend installation method expand uri template determine variable template extract variable give url uritemplate library follow test full support level rfc6570 expand template retrieve variable template extraction variable already expand template level support license uritemplate license mit license see license license info
Semantic web;https://github.com/benjimor/odmtp-tpf;odmtp tpf server odmtp tpf triple pattern fragment server django odmtp odmtp demand mapper triple pattern match enable triple pattern match non rdf datasources odmtp support inference see semantic reasoner inference section online demo odmtp implement twitter api github api linkedin api available online sparql query online tpf client demo twitter github limit request per hour linkedin profile need login access personal profile odmtp approach already opendatasoft test instruction installation macos need ubuntu dependency need dependency pip platform macos ubuntu odmtp tpf comand tpf server semantic reasoner inference rdf contain explicit implicit triple infer rule describe ontology support inference odmtp ontology materialize implicit triple mapping extend mapping api query extend mapping however mapping contain schema correspond rdf thus rule apply rdf instance apply mapping support rule rule apply schema class property support odmtp semantic reasoner implement rule rule name contain add rdfs2 domain aaa rdfs domain xxx uuu aaa yyy uuu rdf type xxx rdfs3 range aaa rdfs range xxx uuu aaa vvv vvv rdf type xxx rdfs5 subproperty transitivity uuu rdfs subpropertyof vvv vvv rdfs subpropertyof xxx uuu rdfs subpropertyof xxx rdfs7 subproperty aaa rdfs subpropertyof bbb uuu aaa yyy uuu bbb yyy rdfs9 subclassof uuu rdfs subclassof xxx vvv rdf type uuu vvv rdf type xxx rdfs11 subclassof transitivity uuu rdfs subclassof vvv vvv rdfs subclassof xxx uuu rdfs subclassof xxx owl sameas class uuu owl sameas xxx vvv rdf type uuu vvv rdf type xxx owl sameas property aaa owl sameas bbb uuu aaa yyy uuu bbb yyy owl equivalentclass uuu owl equivalentclass xxx vvv rdf type uuu vvv rdf type xxx owl equivalentproperty aaa owl equivalentproperty bbb uuu aaa yyy uuu bbb yyy implement rule support rule yet implement complete list rule support rule rule apply instance support odmtp semantic reasoner rule name contain add comment owl rep subject subj1 owl sameas subj2 subj1 aaa obj1 subj2 aaa obj1 support subject define ontology map owl rep object obj1 owl sameas obj2 subj1 aaa obj1 subj1 aaa obj2 support subject object define ontology map mapping mapping accessible extend map accessible simple query triple pattern fragment client sparql query twitter api github repo api sparql query twitter api sparql query retrieve tweet iswc2017 hashtag retrieve tweet specific user spo query browse tweet retrieve specific tweet sparql query github api sparql query retrieve repository java program language spo query browse repository extra understand odtmp approach work iswc poster available prototype feel free optimize improve map work new api etc
Semantic web;https://github.com/renespeck/fox-java;src main java org aksw fox bind java java fox java java bind fox federate knowledge extraction framework java find maven com github renespeck fox java e67a2bd475 jitpack
Semantic web;https://github.com/kasei/swift-sparql-syntax;sparqlsyntax sparql parser abstract syntax feature feature swift package manager swift package manager command line usage command line usage api api term term triple quad triplepattern quadpattern triple quad triplepattern quadpattern algebra algebra expression expression query query sparqlparser sparqlparser sparqlserializer sparqlserializer extension extension window function window function feature sparql parser tokenizer serializer available via api command line tool abstract syntax representation sparql query align sparql algebra support extension window function window function swift package manager sparqlsyntax project swift package manager add follow project package swift command line usage command line tool sparql parser provide parse sparql query print parse query algebra tokenization pretty print sparql string lint pretty print sparql query parse query print query algebra api sparqlsyntax library provide api parse sparql query access abstract structure primary component api struct term representation rdf term iri literal blank node enum algebra representation query pattern closely align formal sparql algebra enum expression representation logical expression struct query representation sparql query include query form select ask describe construct query algebra optional base uri specification struct sparqlparser parse sparql query string return query struct sparqlserializer provide ability serialize query optionally apply pretty print format term struct term represent rdf term iri blank node rdf literal term also provide support xsd numeric type bridge term enum numericvalue provide numeric function type promote triple quad triplepattern quadpattern struct triple struct quad combine term rdf triple quad struct triplepattern struct quadpattern represent pattern match concrete triple quad instead term pattern comprise enum node either bind term name variable algebra enum algebra representation query pattern align sparql algebra case include simple graph pattern match triple quad bgp complex operator join algebra value innerjoin union project distinct algebra provide function property access feature graph pattern include variable scope projectable necessarily bind variable structure algebra value modify rewrite api bind value specific variable replace entire algebra sub tree rewrite expression within algebra expression enum expression represent logical expression variable value operator function evaluate within context query produce term value expression follow algebra operation filter leave join optional extend bind aggregate expression may modify similar rewrite api provide algebra bind value specific variable replace entire expression sub tree query struct query represent sparql query include query form select ask describe construct associate project variable triple pattern construct graph graph pattern algebra optional base uri optional specification sparqlparser struct sparqlparser provide api parse sparql query string produce query sparqlserializer struct sparqlserializer provide api serialize sparql query optionally apply pretty print rule produce consistently format output serialize structure query query algebra unstructured query query string latter case serialization even query contain syntax error error serialize extension window function parse window function support extension sparql syntax sql like syntax support project window function select clause well clause addition aggregate function follow window function support rank row_number show support syntax sparql sparql algebra swift package manager rdf term
Semantic web;https://github.com/klinovp/owlproofs;owlproofs extension owl api request proof entailment reasoner
Semantic web;https://github.com/zazuko/trifid;zazuko trifid lightweight link server proxy join chat trifid provide lightweight easy way access link uris via http link world often call trifid inspire write server side javascript feature provide link interface sparql protocol server provide base interface test provide customizable html renderer embed rdf take care content negotiation provide sparql proxy web frontend requirement sparql endpoint development triple local trifid support content type provide sparql endpoint additional format conversion trifid wild trifid completely theme accord need resource trifid default view customize gov entity switzerland installation trifid base application need system clone github repository npm module dependency usage start server execute follow command npm start server script also command line program call like trifid config trifid config json want trifid sparql endpoint default setting even without config trifid parameter follow parameter available verbose verbose output show actual config expand config expect path config value trifid port expect port number value http listener trifid sparql endpoint url expect sparql http query interface url value trifid sparql handler base url expect base url value translate request url configuration trifid json configuration support comment javascript style configuration another base baseconfig property must point value base overwrite default configuration default configuration config json system handler sample character _the big bang theory_ follow command npm start able access content production environment sparql handler may good choice sparql configuration production system recommend access via sparql interface config sparql json base configuration follow line define configuration fuseki sparql endpoint baseconfig property define base configuration trifid prefix prepends trifid module path value sparqlendpointurl property handler also sparql proxy sometimes sparql endpoint ssl provide incomplete configuration self sign certificate case disable strict certificate check set environment variable node_tls_reject_unauthorized export node_tls_reject_unauthorized property usually follow property must configure baseconfig base configuration current configuration sparqlendpointurl url sparql http query interface datasetbaseurl store different base url property translate request url follow property already define default configuration listener port host listener express express setting key vale pair patchheaders setting patch header middleware mediatypeurl setting format accept middleware rewrite setting camouflage rewrite middleware handler setting graph handler prefix possible prefix property value configuration prefix translate specific path environment variable value cwd prepends current work directory value env value environment variable name match value prefix env sparql_endpoint_url replace environment variable value sparql_endpoint_url trifid prepends trifid module path value multiple configuration plugins support multiple configuration support path hostname specific configuration plugins additional level config config name key actual configuration value config path property define also hostname specify config match host name priority may require multiple configs could match url static staticfiles property folder map url path static host plugin support multiple configuration key static host replace value define configuration baseconfig first folder contain request next folder folder property point folder system possible prefix folder value handler handler plugin support multiple configuration property handler configuration module handler module option handler specific option detail handler specific option find documentation handler fetch sparql proxy sparql proxy plugin support multiple configuration property option option sparql proxy option endpointurl url sparql http query interface default sparqlendpointurl authentication user password basic authentication see config virtuoso json config stardog json default configuration case either store note sparql currently support memory store patch header patch header plugin support multiple configuration see module documentation detail rewrite rewrite plugin support multiple configuration see module documentation detail note module _not_ work content type see documentation detail default work html turtle merely test purpose active production production best practice note recommend node application well know reverse proxy instead instal docker trifid instal docker method need docker instal see installation instruction platform docker instal clone github repository docker trifid create image name trifid execute docker trifid start access docker find trifid environment variable change behavior change follow environment variable trifid_config config sparql json override default configuration config json pre image want docker image pull official image docker docker pull zazuko trifid reverse proxy trifid behind reverse proxy proxy must set forward host header field debug package get debug log via debug trifid trifid plugins also implement debug trifid prefix enable log package implement way debug trifid support issue feature request report github pull request welcome license copyright zazuko gmbh trifid license apache license version please see license notice detail
Semantic web;https://github.com/opensemanticsearch/solr-ontology-tagger;solr ontology tagger automatic tag document apache solr index faceted search rdf ontology skos thesaurus converter alternate label skos thesaurus solr synonym config
Semantic web;https://github.com/Swirrl/grafter;grafter link rdf process clojars hard graft link process grafter library link process mature active development provide support common rdf serialisation include library function query write sparql repository faq find api doc late legacy doc grafter also contain tool tabular process grafter tabular library move separate core grafter library focus process link part library consider deprecate depend still may receive occaisional maintainance update look start greenfield project easily wire capable csv excel parser rdf process side grafter license copyright swirrl ltd distribute eclipse public license version clojure
Semantic web;https://github.com/gushakov/sparql-template;sparql template small library traverse rdf store automatic map triple annotate pojos highlight support store expose http sparql endpoint jena load process rdf triple spring common process class annotation demand lazy load relation automatic proxying easily extend conversion org apache jena graph node custom java type useful converter register default see unil sparql template convert extendedrdfjavaconverter java util date java time zoneddatetime java time duration java net url assume want retrieve information person sparql annotate domain pojo follow unil sparql template sparqltemplate load triple dbpedia convert automatically require java instance
Semantic web;https://github.com/mommi84/Mandolin;mandolin logo mandolin markov logic discovery link requirement java postgresql gurobi solver maven wget unzip quick start decompress mandolin bash experiment follow command discover new link predicate aim wordnet input mine threshold mine million gibbs sample iteration sample discover link find output folder eval wn18 discovered_x output threshold mean contain link whose confidence great equal excerpt discover rule weight excerpt discover link confidence basic documentation mandolin launch follow goal goal description plain launch plain mandolin execution eval evaluate mrr hit plain execution parameter plain goal parameter description value input comma separate triple data1 data2 output workspace output folder eval experiment1 aim aim predicate predicate wildcard mine rule mine threshold default support sample gibbs sample iteration default evidence size rule maximum number rule default none sim enable similarity among literal min step max default none onto enable ontology import true default false fwc enable forward chain true default false evaluation eval goal take parameter triple test set mandolin output directory manual clone project get postgresql ubuntu debian alternative launch bash alternative insert postgresql set parameter mandolin property compile project database handler mandolin stop instance instance restart license mandolin license gnu general public license amie license creative common attribution noncomercial license probkb license bsd license rockit license mit license gurobi activate free academic
Semantic web;https://github.com/antoniogarrote/json-ld-macros;json macro json macro library define declarative transformation json object obtain remote web service json object ultimate goal library make easy process consume json apis rdf json application similar idea transform json document rdf explore project like json macro support serialisation macro json deserialisation back macro description demo available minimal definition transformation json macro fundamental concept description json document transformation encode json object transformation object describe service api associate transformation list uris template transformation turn compose pair key value key declare selector nod json object transform value consist collection transformation rule fix set possible rule context type remove transform transformation apply json object retrieve uri match declare template node selector define transformation evaluate retrieve object output evaluation collection nod per node selector every collection nod transformation rule apply inplace apply transformation dom document return final output transformation body consist case array object contain function apply select node obtain value transformation follow grammar describe structure api transformation definition api declare functiondeclarations uripatterns transformation uripatterns uripattern uripattern transformation nodeselector transformationrules transformationrules transformationrulename transformationrulebody transformationrulename context type remove transform transformationrulebody functionsarray json string json object follow section describe declare uri pattern node selector transformation uri pattern uri pattern regular url pattern define node selector node selector syntax take json semantics slightly modify match behaviour selector library like jquery path chain name identify json object propertes separate character character special purpose select root document single json object document include single object collection object root object document array select object link property select nod recursive evaluation rest path expression propertyname propertyname return array object propertyname aggregate object select array evaluation selector accomplish leave right every component path evaluate current set select nod evaluation select nod set replace output evaluation set select nod start empty set transformation rule transformation rule json object key object identify certain standard transformation perform input object value describe particular detail transformation rule fix set transformation rule available explode compact context type add remove transform rule apply follow order explode add context type transform remove compact rule apply inplace target object without clone reserve additional memory transformation rule like type transform accept rule body array function apply target object obtain final value generate rule additional function declare api definition description different transformation explode transform pair property value pair property nest object nest object property value property specify transformation compact transform pair property node pair property value value value select property node context define context json object insert target object body rule json object define json context insert define json attribute generate transform object possible rule value json string fix string insert value property nod array function apply select node obtain value json object type define type json attribute generate transform object possible rule value json string fix string insert value type property nod json array array fix string insert value type property nod array function apply select node obtain value json object transform define generic transformation property select nod apply initial value property obtain final value property transform object body rule must json object single key name property transform value contain array function apply initial value remove rule delete property select nod possible value single string name property remove array property remove add rule add property select nod value must object property value add node collect set property select nod delete remain property possible value rule body single property select array witht property must collect rule transform name property select nod rule body consist object containgin function apply object property name obtain final property rule apply rule apply refer property name rule name property apply rule must possible function rule body default value function default prefix prepended property current node transform curie append accept object prefix key property name array property name value apply function prepends prefix select property name replace similar append instead prefix accept key rule body object string replace enterily select property name omit accept single string property name array property name affect function rule body function function express single object array json object object contain declaration function application issue select node function application contain name function key object parameter value array function declare function application apply consequtively receive parameter argument define function application output previous function application array select node tansformation apply first function chain receive null input value new function define api declaration prefix name function invoke body rule collection function already available transformation valueof select value function argument context object return defaultvalue set default value current value function application chain null select select value function argument input object return prefix add prefix pas function argument add input object return urlencode perform url encode input object function argument ignore apply accept string javascript function argument evaluate apply function input object evaluation scoped input object like new function return functionargumenttext call inputobject basetemplateurl transform url template terminal variable base url without variable become null property function application exception main problem apply transformation null property object input may optional value application function may return unexpected null value library react event different way depend value behaviour property behaviour property set value loose exception application function chain catch null value return function chain application additionally transform node property null value remove include property value behaviour property set strict exception catch final value transformation return include null value function declaration additional function declare definition api declare property function declaration accept value declare property json object contain pair curie function literal every prefix curie additional property must map prefix uri prefix follow show function declare api definition function receive argument function argument declare rule body input object previous function application context object json serialisation export register macro json document function output serialisation json document small vocabulary expose macro main property vocabulary jldm jsonldmacro class json macro description jldm uritemplate uri template match transformation macro jldm specification property point node transformation macro jldm specification class json node transformation jldm transformation transformation sigle json node jldm transformation class particular node transformation jldm rulename type node transformation add remove etc jldm rulebody json encode body describe rule output previous follow json document json serialisation macro export json document serialise function function require instance module work module include library increase size library want functionality need include rdfstore additional dependency project rdfstore integration goal development library make easy consume non rdf apis web application layer api register library instance rdfstore wrap wraprdfstorejsnetworktransport function wrap store instance library transform json object load store load sparql load query match register api service uris template author license library release lgpl license copyright antonio garrote problem find antoniogarrote gmail com
Semantic web;https://github.com/Omer/vim-sparql;vim sparql unofficial fork fork simply add filetype detection first stab syntax highlight sparql useful write sparql roqet command line query processor information sparql original jeroen pull
Semantic web;https://github.com/AKSW/SparqlAnalytics;welcome sparql analytics project project aim develop java base middleware proxy framework live analysis sparql query publish live sparql endpoint metric embeddable html javascript widget live query usage stats although goal project amibitious provide live chart sparql endpoint activity still pretty neat product intend develop demo demo see fp7 ict project partner land show live chart unfortunately require ipv6 know proxy websockets please tell snorql sparql let query moment select query handle live chart server setup note advance currently server enable path anyone else able cross site request javascript clone project maven clean first need postgres database query activity write sudo apt get postgres configuration create call sparql_analytics createdb sparql_analytics load core schema psql sparql_analytics sparql analytics core schema sql server configuration locate sparql analytics server config sparql analytics platform property either modify directly good create copy edit copy mkdir sparql analytics server config myconf sparql analytics server config sparql analytics server config myconf note sparqlify analytics directory config directory myconf correspond context path server optional bin find script server bin platform sparql analytics server config myconf default server start port try browser curl test limit curl client setup client chart widget sparql analytics client module minimize sparql analytics client mvn package link webapp directory html next step reference care note version placeholder next line target sparql analytics client version webapp sparql analytics client min src main webapp sparql analytics client min link client html javascript webserver directory require allow webserver follow symlinks path repo sparql analytics client src main webapp var www sparql analytics client visit follow minimal embad chart widget integrate follow snippet properly adjust path web page license clarify shortly
Semantic web;https://github.com/angelo-v/groovyrdf;groovyrdf know library process rdf groovy groovyrdf help consume rdf link groovy way version maven gradle ivy usage please take look user guide groovyrdf user guide contact please contact question feedback angelo veltens online mailto angelo veltens online release note version security dependency update version add webids resource version read process rdf link resource version rdf license copyright angelo veltens right reserve redistribution source binary form without modification permit provide follow condition meet redistribution source must retain copyright notice list condition follow disclaimer redistribution binary form must reproduce copyright notice list condition follow disclaimer documentation material provide distribution software provide copyright holder contributor express imply warranty include limit imply warranty merchantability fitness particular purpose disclaim event shall copyright holder contributor liable direct indirect incidental special exemplary consequential damage include limit procurement substitute good service loss profit business interruption however cause theory liability whether contract strict liability tort include negligence otherwise arise way software even advise possibility damage
Semantic web;https://github.com/RubenVerborgh/N3.js;lightning fast asynchronous stream rdf javascript coverage npm library rdf low level let handle javascript easily offer parse parse triple quad notation3 write write triple quad storage store triple quad memory parse write asynchronous triple arrive soon possible stream stream parse come parse large memory fast fast spec compatible parser come along installation node come npm seamlessly work browser via unfamiliar tool read _webpack create bundle get _introduction need create umd bundle supply name option browserify also load via cdn create triple quad follow rdf low level datafactory give function create triple quad rest document treat triple quad equally assume quad simply triple name default graph parse rdf document quad parser transform turtle trig triple quad document quad callback callback first argument optional error value second quad quad callback invoke last time null quad hash prefix third argument pas second callback parse retrieve prefix read callback provide parse happen synchronously default parser parse permissive superset turtle trig triple quad strict compatibility language pas format argument upon creation notation3 support _only_ format argument possible provide base iri document want parse pas baseiri argument upon creation default parser prefix blank node label digit prefix prevent collision unrelated blank nod identical label blanknodeprefix constructor argument modify prefix set empty string completely disable prefix rdf stream quad parser parse node grow return quad soon ready streamparser node rdf solution ideal consumer slow since source read consumer ready dedicate prefix event signal every prefix prefix term argument write quad string writer serialize quad rdf document write quad addquad default writer write turtle trig quad name graph write triple quad instead pas format argument upon creation quad rdf stream writer also write quad node stream quad stream rdf stream streamwriter node rdf blank nod list might want list notation turtle trig however stream writer create automatically shorthand notation possible blank nod list head late determine conclusively end stream blank list function allow create manually instead store store allow store triple memory find fast create new store add triple pluto dog mickey mouse find triple mickey subject addition deletion quad store provide follow manipulation method addquad insert quad addquads insert array quad removequad remove quad removequads remove array quad remove remove stream quad removematches remove quad match give pattern deletegraph remove quad give graph createblanknode return unused blank node identifier search quad entity store provide follow search method readquads return generator quad match give pattern getquads return array quad match give pattern match return stream quad match give pattern countquads count number quad match give pattern foreach execute callback match quad every return whether callback match quad always return true return whether callback match quad return true least getsubjects return array unique subject occur match quad forsubjects execute callback unique subject occur match quad getpredicates return array unique predicate occur match quad forpredicates execute callback unique predicate occur match quad getobjects return array unique object occur match quad forobjects execute callback unique object occur match quad getgraphs return array unique graph occur match quad forgraphs execute callback unique graph occur match quad compatibility format specification parser writer fully compatible follow w3c specification rdf earl rdf earl rdf earl rdf earl addition parser also support notation3 official specification yet parser writer also fully compatible rdf variant w3c specification default mode permissive allow mixture different syntax include rdf pas format option constructor name mime type format strict fault intolerant behavior format string contain star turtlestar trig rdf support format enable interface specification submodules compatible follow interface datafactory implement term create implement triple quad create implement streamparser implement streamwriter implement store implement license contribution library copyright ruben release mit contribution welcome bug report pull request always helpful plan implement large feature best contact first
Semantic web;https://github.com/balhoff/whelk;img align right whelk whelk owl reasoner base algorithm implement describe incredible whelk implement immutable functional time axiom add new reasoner state create reference previous state remain unchanged allow whelk answer query concurrently also allow rapid classification multiple datasets upon ontology tbox classify ahead time store however basic classification single ontology whelk much slow elk addition owl classification whelk provide owl subset swrl reason individual case whelk base elk elk much fast classify ontology reason whelk include object property assertion materialization swrl rule class object property atom owl feature abox classification union superclass position infer least common subsumer operand feature useful guarantee complete extend support self restriction support rolification application submit many query programmatically whelk much fast application perform many query parallel non block application store reason state tbox classification simultaneously extend multiple independent new axiom set aboxes quickly roll back previous save reason state status whelk development work scala api flux basic owl api owlreasoner interface include make immutability feature whelk best scala
Semantic web;https://github.com/opencube-toolkit/OpenCube-Expander;opencube expander role opencube expander component search compatible cub create new expand cube merge compatible cub work opencube expander develop separate component opencube toolkit part expand lifecycle step support identification compatible cub store either native triple store remote sparql end point expander initialize create widget widget configuration native triple store widget configuration remote sparql end point contain irish census functionality functionality opencube expander base link dimensionvaluecompatible measurecompatible create opencube compatibility explorer order detect external compatible cub aggregation across dimension across hierarchy detect compatible pre compute aggregate cub link enable fast detection compatible cub since complex computation make begin component present structure cube cube dimension value dimension cube measure user search compatible cub base follow operation add measure operation identify present cub compatible add new measure original cub associate cub property measurecompatible add value dimension case user select expansion dimension operation identify present compatible cub add new value select dimension associate cub property dimensionvaluecompatible add hierarchy operation identify present cub compatible add hierarchy original cube pre compute aggregation across hierarchy create opencube aggregator simplicity reason functionality integrate opencube olap browser add dimension operation identify present cub compatible add dimension original cube pre compute aggregation across dimension create opencube aggregator simplicity reason functionality integrate opencube olap browser
Semantic web;https://github.com/ontodia-org/ontodia;ontodia ontodia javascript library allow visualize navigate explore form interactive graph base underlie source ontodia ontodia allow create persist diagram make exist relational object semantic design visualize rdf set particular could tailor almost source implement provider interface core feature visual navigation diagram large graph set rich graph visualization context aware navigation feature ability store retrieve diagram user friendly graph query language prior knowledge schema require customizable user interface modify template nod link storage back end try follow developer tutorial developer documentation license ontodia library distribute lgpl commercial license additional feature support custom development available please contact info metaphacts com info metaphacts com developer documentation contribute developer documentation available wiki give ontodia people credit ontodia library project please provide link repository publication citation reference follow mouromtsev pavlov emelyanov morozov razdyakonov galkin simple web base tool visualization share semantic ontology international semantic web conference poster demo really help team gain publicity acknowledgment effort thank considerate
Semantic web;https://github.com/joshsh/sesametools;sesametools welcome sesametools wiki sesametools collection general purpose component rdf framework include sesametools common utility miscellaneous useful class cachingsail memory cache rdf constrainedsail sail interact give name graph useful simple access control deduplicationsail sail avoid duplicate statement triple store allegrograph otherwise allow duplicate restful web service publish sesame store link mappingsail sail translate uri space linkeddataserver rdftransactionsail write sail generate rdf transaction instead perform per call update useful stream rdf describe readonlysail read sail replaysail pair sail allow sail operation first record log reproduce log repositorysail sail wrap repository object essentially inverse sesame sesamize command line tool sesame uri translator utility sparql update query repository convert uris different prefix writeonlysail write sail see also sesametools project maven sesametools snapshot release package import add configuration like follow project pom late maven package browse credit sesametools write maintain joshua peter patch contribute faisal florian olaf michal rdf json parser writer present release early contain hannes
Semantic web;https://github.com/EIS-Bonn/iRap;irap interest base rdf update propagation framework irap rdf update propagation framework propagate interest part update source target irap filter interest part changesets source base graph pattern base interest expression register target user repository provide source evaluation material irap framework configuration interest expression specify rdf basic component interest expression subscriber object identify target preference associate interest object identify interest expression subscriber irap interest expression ontology prefix irap subscriber subscriber instance contain follow set irap targettype type target change valid type tdb sparql_endpoint virtuoso_jdbc irap targetendpoint path target target type tdb endpoint value path tdb folder target type sparql_endpoint irap targetendpoint uri sparql endpoint public endpoint query update enable endpoint virtuoso_jdbc type support release irap targetupdateuri irap targetendpoint target type tdb update enable sparql_endpoint irap targettype query sparql_endpoint irap targetupdateuri uri sparql update endpoint irap pitrackingmethod potentially interest triple track method valid method support local live_on_source irap pistoragetype type potentially interest irap pitrackingmethod local irap pistorebaseuri path endpoint uri potentially interest irap pitrackingmethod local irap pistoragetype tdb sparql_endpoint respectively interest interest instance contain follow set irap subscriber uri subscriber interest irap sourceendpoint endpoint source sparql_endpoint irap changesetpublicationtype location changeset publication valid value remote local irap changesetbaseuri uri changeset publication location irap lastpublishedfilename last publication name compare last changesets irap irap bgp interest basic graph pattern bgp expression irap ogp optional graph pattern ogp expression execute irap order execute source repo git clone prepare interest expression see interest expression interest expression contain remote changeset publication dbpedia changesets edit lastdownloaddate dat adapt date accord target irap git clone irap irap core mvn clean mvn exec java dexec args interest exp specify interest expression rdf mode specify long changeset manager endless forever time changesets available evaluate wait new update dbpedia replica follow show interest expression dbpedia remote changesets dependency java contact irap mail license source term gnu general public license version
Semantic web;https://github.com/arc-lasalle/Map-On;map ontology map environment map web base editor visual ontology map develop architecture representation computation research group salle ramon llull university map editor provide graphical environment ontology map creation interactive graph layout point click interface simplify map creation process editor automatically generate r2rml document base user input particularly produce iri pattern sql query real scenario alleviate effort cod r2rml statement main barrier adopt r2rml research industry community map feature multiuser web environment manual creation relational ontology mapping map space distribution map creation process top visual representation relational source schema ontology structure mapping base graph layout customise user visual representation ontology relational source base entity relationship diagram input relational source sql database tabular source comma separate value csv support r2rml recommendation r2rml document generate import map automate generation iri pattern sql query base mapping define user dialog window input box suggestion element mapping base text introduce user point click interface reduce effort require map activity ontology drive map approach map process start ontology instead work database contextual menu help user map creation log activity carry user pop tip integrate help map tool develop php framework igniter graphical ontology representation implement vivagraphjs library arc parse rdf map generate write r2rml map language codeigniter open source php web application framework graph draw library javascript text editor implement javascript turtle syntax style arc appmosphere rdf class r2rml rdb rdf map language map installation please installation guide doc installation please cite map follow reference sicilia alvaro nemirovski german nolle andreas map web base editor visual ontology semantic web vol copyright arc engineer architecture salle ramon llull university comment please contact alvaro sicilia alvaro sicilia salle url edu
Semantic web;https://github.com/knakk/rdf;rdf package introduce structure represent rdf resource include function parse serialization rdf complete documentation see
Semantic web;https://github.com/jpcik/morph-streams;morph stream morph stream need jvm7 sbt www scala sbt org compile sbt see sparql stream query esper check simple test queryexecutiontest
Semantic web;https://github.com/dotnetrdf/dotnetrdf;welcome dotnetrdf powerful flexible api work rdf sparql net environment dotnetrdf license mit license see license txt repository get start easy way get dotnetrdf via nuget provide follow package dotnetrdf contain core library include support read write rdf manage query rdf memory dotnetrdf datatables package integrate rdf system datatable dotnetrdf virtuoso provide support openlink virtuoso backend store dotnetrdf dotnetrdf query fulltext provide full text query plugin dotnetrdf leviathan sparql query engine text index provide lucene dotnetrdf query spin provide dotnetrdf leviathan sparql query engine dotnetrdf web provide framework host rdf web application include sparql protocol sparql graph store protocol currently provide support follow net framework net net client profile net standard read doc get start dotnetrdf may want check follow resource user series article detail various feature library developer advance documentation ask question report bug question dotnetrdf please post stackoverflow tag bug feature request submit issue list submit bug report please include much detail possible reproduce problem report make much likely issue get address quickly developer dotnetrdf develop follow people rob vesse tomasz pluskiewicz ron michael zettlemoyer max khalil ahmed samu lang giacomo citi dotnetrdf also benefit many community contributor contribute form bug report patch suggestion feedback please see full list pull request always please receive pull request fix bug add feature fix bug please make sure report issue first plan work new feature dotnetrdf would good raise issue list commit much time
Semantic web;https://github.com/joshsh/rdfagents;rdfagents message protocol real time peer peer knowledge share semantic web pattern design interoperate link extend link principle support word mouth style information discovery variety communication protocol gear towards ubiquitous semantic web compute lightweight device variable connectivity highly reactive event drive interface semantic web service read rdfagents
Semantic web;https://github.com/lambdamusic/Ontospy;ontospy library command line interface inspect visualize rdf link youtube description ontospy lightweight library command line tool inspect visualize vocabulary encode w3c semantic web standard rdf dialect rdfs owl skos basic workflow simple load graph instantiate ontospy class contain rdfs owl skos definition get back object let interrogate ontology functionality accessible also via command line application ontospy interactive environment like repl allow load ontology local repository interrogate cache quickly reload inspection late generate ontology documentation ontospy generate html documentation ontology pretty easily see ontology ontology functionality rely module call _ontodocs_ maintain separate library distribute ontospy add pip ontospy full kind documentation generate box take look status little time spend project day mainly focus bug fix maintenance happy review want add functionality development documentation
Semantic web;https://github.com/gbv/ssso;repository contain specification simple service status ontology ssso uri ontology uri namespace see full documentation rdf serialization available welcome overview follow diagram illustrate class property definied ontology
Semantic web;https://github.com/RENCI-NRIG/gleen;gleen regular path library arq sparql gleen library property function library jena arq sparql query engine gleen develop todd detwiler structural informatics group university washington gleen currently license apache license version version gleen fork last release version fork create victor orlikowski duke university support orca project make gleen new revision port gleen forward currently support version jena branch master branch tie jena produce gleen artifact version jena snapshot branch call jena_3_3_0 produce artifact version jena snapshot revision gleen simply check source make sure recent version maven type mvn clean compile
Semantic web;https://github.com/oxigraph/oxigraph;oxigraph late release api action dependency twitter oxigraph graph database implement standard goal provide compliant safe fast graph database base key value store write rust also provide set utility function read write process rdf oxigraph heavy development sparql query evaluation optimize yet development roadmap github oxigraph internal design describe split multiple part database write rust source lib directory late release api pyoxigraph expose oxigraph source directory javascript bind webassembly package oxigraph nodejs compatible npm package source directory oxigraph provide standalone binary web server implement sparql sparql graph store source server directory late docker image version late oxigraph implement follow specification sparql sparql sparql federate rdf rdf serialization format ingestion retrieval rio sparql query xml sparql query json sparql query csv tsv preliminary benchmark provide bench readme also document describe oxigraph technical help feel free github gitter ask question talk oxigraph bug also welcome need advance support pay get extra feature feel free reach license project license either apache license version license apache license apache mit license license mit license mit option contribution unless explicitly state otherwise contribution intentionally submit inclusion oxigraph define apache license shall dual license without additional term condition
Semantic web;https://github.com/AtomGraph/Processor;atomgraph processor server declarative read write link application triplestore rdf want serve link write rdf restful http interface atomgraph processor component need atomgraph processor provide user box generic feature api logic single link ontology control rdf input quality sparql base constraint sparql endpoint graph store protocol endpoint http content negotiation cache support atomgraph direct semantic technology extemely extensible flexible design lead way towards declarative web development forget break hyperlink concentrate great apps quality detail see article atomgraph compatible frontend framework end user application see atomgraph get start atomgraph processor link instal atomgraph full documentation see wiki usage docker processor available docker hub image accept follow environment variable become webapp context parameter endpoint endpoint uri graph_store endpoint uri ontology ontology uri auth_user sparql service http basic auth username string optional auth_pwd sparql service http basic auth password string optional preemptive_auth premptive http basic auth true false optional want ontology read local rather uris define custom location append system location map map format mount usr local tomcat webapps root web inf class custom map path validate syntax beforehand avoid error enable log mount log4j property usr local tomcat webapps root web inf class log4j property show processor combination default custom ldt ontology local remote sparql service docker command however different combination support well default ontology local sparql service fuseki show local sparql service together processor setup reverse proxy front processor fuseki load rdf processor ldt ontology command processor container together container fuseki docker compose open follow url browser retrieve rdf description root resource root resource hostname processor base uri rewrite org alternatively curl etc setup processor also available nginx host internal hostname rewrite nginx useful situation processor hostname different application base uri sparql query match triple contain second base uri work rewrite org hostname custom ontology remote sparql service wikidata show processor custom ldt ontology remote sparql service docker command processor container wikidata wikidata docker compose open follow url browser retrieve rdf description root resource people bear today female bear today male bear today alternatively curl etc _note wikidata sparql endpoint popular therefore often overload error response receive sparql client wikidata internal server error response processor maven processor release maven central datasource atomgraph processor include rdf datasource query rdf fly sparql endpoint sparql http sparql endpoint provide rdf easy way set sparql endpoint rdf apache jena docker container image also number public sparql commercial triplestore sparql support see test suite processor include basic http test link template sparql protocol graph store protocol support please report encounter bug feature request commercial consult development support available community please join w3c declarative link apps community discus develop atomgraph declarative link architecture general
Semantic web;https://github.com/chrdebru/r2rml;r2rml r2rml note precompiled package find project copy dependency execute note order support connection oracle database rely library available maven repository library instal manually mvn clean mvn package library locally prior package also avail compile reside dist directory r2rml processor execute follow command fat jar also provide apache maven shade depend dependency folder execute follow config property property contain connectionurl jdbc connection url database require user username user connect database password password user connect database mappingfile r2rml map require outputfile output require format format output default turtle filepergraph flag write different graph separate default false baseiri resolve relative iris produce r2rml map csvfiles list path csv separate semicolon prefixfile rdf name space prefix reuse name graph r2rml map serialization support graph quad trig serialization format turtle triple graph write away set flag filepergraph true serialization format support graph however value outputfile create directory create graph rdf note csvfiles connectionurl time csv name table base name directory contain map configuration assume mysql database call r2rml localhost accessible user foo password bar configuration look follow output pas property argument r2rml processor look follow command line argument r2rml command line argument similar configuration property function r2rml r2rml implement idea present allow declare function ecmascript function value termmaps map r2rml extend r2rml vocabulary predicate declare function function call parameter bind declare namespace license r2rml write christophe release mit reference debruyne sullivan r2rml towards share execute domain logic r2rml mapping proceed workshop link web ldow locate 25th international world wide web conference www montreal canada april 12th
Semantic web;https://github.com/phenoscape/scowl;scowl scowl provide scala dsl allow declarative approach compose owl expression axiom owl usage since version scowl available via maven central add dependency sbt owl api owl api import org phenoscape scowl scowl implicit conversion add pseudo manchester syntax method native owl api object additionally functional syntax style constructor extractor scope scowl owl api additionally owl api owl api scowl scowl cross compile support scala scala easy way get start see dsl implement owl web ontology language manchester syntax functional syntax also available scowl expression return native owl api object add axiom programmatically generate gcis ontology pattern match extractor implement negation normal form pattern match extractor comprehension question problem question scowl feel free send email balhoff gmail com open issue contribution welcome contribute fund development scowl support national science foundation grant dbi university north carolina license scowl open source mit see license license information
Semantic web;https://github.com/R2RML-api/R2RML-api;r2rml api r2rml api maven dependency put follow fragment pom xml release history march version refactor january version major rewrite common rdf retire owlapi bind january version upgrade sesame rdf4j feb version upgrade jena feb version fix issue deploy r2rml api jena bridge central repository feb version upgrade owl api deploy central maven repository version first release reference r2rml map management api java marius strandhaug master thesis spring university oslo javadoc documentation api find follow url
Semantic web;https://github.com/stardog-union/pinto;pinto pinto java framework transform java bean rdf back current version git development inspire aim simple easy annotation configuration require compliant java bean pinto turn rdf framework represent rdf primitive graph statement create artifact test usage give simple java bean easily serialize rdf agraph serialize ntriples rdf turn back person quick dirty detail check test annotation pinto require annotation serialize bean rdf support basic annotation control object serialize rdfid annotation specify property generate uri object default hash object generate uri present getter setter property bean value property seed uri note secondary mechanism control uri object object implement identifiable mapper uri return ignore rdfid annotate property rdfproperty annotation apply property bean either getter setter specify uri property generate rdf bean normally uri property auto generate annotation present uri specify annotation instead value annotation also qname rdfsclass annotation apply class specify rdf type class generate rdf qname uri present rdf type assertion generate object iri annotation control uri assign enum normally uri generate pinto want map specific constant ontology iri explicitly identify object configuration default rdfmapper require configuration mean generate reasonable rdf box couple serialization option specify mappingoptions require_ids default pinto auto generate uris object rdfid specify set property true mapper auto generate uris must specify explicitly default false serialize_collections_as_lists true collection serialize rdf list otherwise serialize collection size separate property assertion default false ignore_invalid_annotations whether ignore annotation invalid rdfproperty define property invalid uri property invalid ignore annotation simply generate bean rdf default true beyond configuration option rdfmapper configuration mechanism specify builder create mapper map uri class specify provide type correspond instance give java class function like rdfsclass annotation namespace method specify namespace mapping expand qnames annotation valuefactory valuefactory provide valuefactory create rdf bean collectionfactory collectionfactory factory create instance java util collection default defaultcollectionfactory mapfactory mapfactory factory create instance java util map default defaultmapfactory custom serialization case object ahere java bean specification third party class control add annotation need specific serialization case rdfcodec small plugin rdfmapper handle transform java object rdf pinto include codec java util uuid call uuidcodec codecs register rdfmapper create via builder builder codec class rdfcodec pinto create pinto similar framework available well framework like focus transform bean rdf back neither good fit _just_ round trip bean rdf good jax base web service bean domain would like serialize rdf accept rdf normally custom messagebodyreader messagebodywriter straight forward heavy weight framework pinto single line
Semantic web;https://github.com/isl/XML2RDF-DataTransformation-MappingTool;xml2rdf datatransformation mappingtool xml2rdf transformation tool map tool generic transformation tool map xml rdf give schema match definition base map language schema distribution contain xml2rdf datatransformation map tool version bundle include source netbeans project binary require library javadocs copyright institute computer science foundation research technology hellas contact pobox heraklio crete greece tel fax mail isl forth author maria koutraki dimitra zografistou evangelia daskalaki elia zabetakis part xml2rdf transformation tool map tool xml2rdf transformation tool map tool free software redistribute modify term gnu less general public license publish free software foundation either version license option late version xml2rdf transformation tool map tool distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu less general public license detail receive copy gnu less general public license along xml2rdf transformation tool map tool see
Semantic web;https://github.com/mdesalvo/RDFSharp.Semantics;project part
Semantic web;https://github.com/schlegel/balloon;tool suite link consumption balloon aim offer public service tool take advantage semantic web effort basic motivation establish foundation link service ldaas project currently development available soon detail information available online feature balloon overflight sparql base lod crawl index basic structural relationship bird eye view link balloon fusion sparql query federation service base equivalence resource automatic endpoint discovery balloon synopsis move seperate github html javascript rdf viewer browser jquery plugin automatic information enhancement configurable templating balloon commonality find common relevant super type entity find instance give type find relate entity base type predicate overview today vision common web mostly achieve coin link open movement first wave movement transform silo base portion plethora open accessible interlink set community provide guideline open well open source tool foster interaction web harmonization set establish level unify description scheme characterize formal syntax common semantic without doubt link open facto standard publish interlink distribute set web commonly expose sparql endpoint however convenient request consider globally describe set possible strong limitation balloon want overcome issue provide large choice service simplify utilize web project think link tool available service ldaas avoid high setup integration cost duplication therefore balloon service public available need instal locally software bring chair distribute information system dimis dimis fim uni passau medium computer science university passau project develop within project fund seventh framework programme grant agreement number
Semantic web;https://github.com/hyrise/hyrise;coverage welcome hyrise hyrise research memory database system develop hpi since entirely rewrite goal provide clean flexible platform research area memory management architecture allow student researcher conduct experiment around new management concept enable realistic experiment hyrise feature comprehensive sql support perform powerful query plan optimization well know benchmark tpc tpc execute single command without preparation readme focus technical aspect repository background research list publication please visit hyrise project still find archive previous version hyrise citation reference version hyrise please follow bibtex entry click expand support system hyrise develop linux preferrably current ubuntu version optimize server hardware support mac facilitate local development hyrise recommend benchmarking support benchmark support number benchmark box make easy generate performance number without set generation load csvs find query runner hyrisebenchmark binary benchmark note tpc query tpc query join order query jcc call hyrisebenchmarktpch binary flag tpc development proper optimization yet get start look contributor guideline contribute find definition term abbreviation glossary glossary find something look feel free open issue step step good start point get know hyrise native setup dependency install_dependencies script recommend therein list dependency submodules script test macos big sur ubuntu apt get see dependency dependency detail list dependency brew apt get depend platform compiler generally recent version clang gcc linux please make sure system compiler point recent version cmake see accordingly old version may work neither test support note llvm tbb hyrise currently llvm hope get llvm soon tbb please version resolve macos brew llvm tbb instal follow brew tbb brew llvm keep mind package version alternate version thus symlinked usr local brew link tbb brew link llvm symlinks package setup docker want create docker base development environment clion head dedicate otherwise get dependency hyrise docker image start container via inside container checkout hyrise install_dependencies require submodules tool highly recommend perform source create separate directory advisable name directory would cmake debug release depend type within directory call cmake configure default strict compiler flag beyond wextra include werror officially support environment issue simply want test hyrise different system issue call cmake dhyrise_relaxed_build disable strict check subsequent call cmake add necessary generate makefiles take care compiler choice cmake default system default compiler different call cmake dcmake_c_compiler clang dcmake_cxx_compiler clang clean directory see dependency dependency support compiler version unity start cmake dcmake_unity_build perform unity complete multiple rebuild usually fast relative cost start compiler process load common header reduce however make sense debug see blog reduce compilation time detail ccache development may want reduce time need recompiles significantly especially switch branch reduce time recompile several minute downside see random failure server recommend ccache anymore merely list option ccache add dcmake_cxx_compiler_launcher ccache cmake call need adjust ccache either environment variable ccache ccache handle precompiled header server work ccache_sloppiness file_macro pch_defines time_macros ccache_depend simply call make denote number thread usually debug binary create configure directory release make sure empty call cmake like cmake dcmake_build_type release lint script lint google cpplint database addition _flake8_ linting script script format script format clang format database _black_ format script script test call make hyrisetest directory available test binary execute hyrisetest subset available test select via gtest_filter coverage script coverage print summary command line create detail html report coverage index html support clang macos gcc linux address undefinedbehavior sanitizers cmake denable_addr_ub_sanitization generate makefiles addresssanitizer undefined behavior option compile normal issue detect print console fail first detect error print summary convert address actual source location make sure llvm symbolizer instal include llvm package available path specify custom location symbolizer set asan_symbolizer_path path executable seem work box macos make sure llvm instal binary execute lsan_options suppression asan ignore txt hyrisetest cmake denable_thread_sanitization work threadsanitizer sanitizers mutually exclusive configuration compile time try optimize time spend project often helpful idea much time spend script compile_time help get usage instruction without argument maintainer jan kossmann marcel weisgut martin boissier stefan halfpap contact firstname lastname hpi maintainer emeritus markus dreseler contributor yannick baumer lawrence benson timo djurken alexander dubrawski fabian dumke leonard geier richard ebeling fabian engel moritz eyssen martin fischer christian flach pedro flemming mathias fluggen johannes frohnhofen pascal fuhrlich carl godecken adrian holfter ben hurdelhey sven ihde ivan illic jonathan janetzki michael janke max jendruk david justen youri kaminsky marvin keller mirko krause eva krebs sven lehmann till lehmann tom lichtenstein daniel lindner alexander loser jan mattfeld arne mayer dominik meier julian menzler torben meyer leander nei hendrik ratz alexander riese johannes schneider david schumann simon siegert arthur silber toni stachewicz daniel stolpe jonathan striebel nil thamm hendrik tjabben justin trautmann carsten walther lukas wenzel fabian wiebe tim zimmermann
Semantic web;https://github.com/sindice/sparqled;sparqled assist sparql editor general information project contact information instruction instal sparqled available section live demo health care life science datasets english part dbpedia distribution content distribution include module _sparql editor client editor user interface _recommendation servlet servlet provide query element recommendation _sesame sparql queryparser sparql query parser extend sparqled case _sesame backend utility class operate sparql endpoint sesame _sparqled common utility class graph summary computation _sparql summary sparql base graph summary computation acknowledgement software base upon work support european fp7 project ircset empower government ireland postdoctoral fellowship renaud delbru sparqled user interface base flint sparql _copyright national university ireland galway
Semantic web;https://github.com/CLARIAH/COW;cow integrate csv rdf converter cow csv web integrate csv rdf converter w3c standard rich semantic table specificatons output rdf cow cow command line utility convert csv rdf distinctive feature expressive csvw compatible schema base template enginge highly efficient leverage multithreaded multicore architecture available pythonic cli tool cli library library web service web service support require instal pip3 recommend method instal cow system upgrade currently instal version possible issue permission issue get around instal cow user space pip3 cow csvw user make sure binary user directory typically something like user user library bin macos home user local bin linux path window macos recommend via official distribution also avoid conflict system library please report unlisted want deal instal cow web service version web service deprecate usage cli cli command line interface recommend way cow user straightforward csv rdf conversion step first create name myfile csv metadata json json schema jsf need worry want syntactic conversion output myfile csv rdf nquads default control output rdf serialization format turtle want control base uri namespace uris predicate virtual column many feature cow need edit myfile csv metadata json jsf cow argument look cli option option technical option check help complete list option web service web service interface cow call public instance cow python3 cow python2 legacy reason beware web service limitation limit size csvs upload public instance conversion could take long cattle long maintain public instance eventually take offline library instal cow library follow documentation technical documentation cow maintain github repository publish read documentation source change doc directory make html produce html version documentation _build html directory provide hand transpose csvs link license mit license see license txt license txt acknowledgement author albert merono penuela roderick van weerdt rinke hoekstra kathrin dentler auke rijpma richard zijdeman melvin roest xander wilcke copyright vrije universiteit amsterdam utrecht university international institute social history cow develop maintain clariah project fund nwo
Semantic web;https://github.com/cygri/prefix.cc;prefix source source web site operate richard cyganiak richard cyganiak mailto richard cyganiak requirement apache mod_rewrite enable php recommend version mysql set test site clone repository local directory set virtual host prefixcc local directory document root create new mysql database echo create database prefixcc mysql root set database table mysql root prefixcc db_schema schema sql make copy default configuration default config php config php edit database credential config php necessary import prefix public prefix site php tool csv import php mysql root prefixcc functional site
Semantic web;https://github.com/oxigraph/rio;rio action rio low level library provide conformant fast parser formatters rdf relate format currently provide parser formatters split multiple crate rio_api provide common trait structure rio parser triple triplesparser iri late release api rio_turtle provide conformant stream parser formatters syntax also support late release api rio_xml provide conformant stream parser formatter late release api also rio_testsuite crate test rio parser w3c rdf ensure conformance provide executable report integration test quickly ensure parser stay conformant design outside rio license copyright rio developer license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license
Semantic web;https://github.com/robstewart57/hsparql;available hackage badge hackage hackage license bsd3 badge license license status badge travis travis badge travis travis badge hackage hackage badge license license introduction hsparql include dsl easily create query well method submit query sparql server return simple haskell structure select query take follow sparql query generate follow haskell construct query take follow sparql query generate follow haskell describe query take follow sparql query generate follow haskell ask query take follow sparql query generate follow haskell output type select query select query generate set sparql query solution see respective type construct query construct query generate rdf serialize package see respective type describe query describe query generate rdf serialize package see respective type ask query ask query inspect whether triple exist rdf open world assumption see respective type extra find test test database hsparql querygeneratortest todos opt unify type representation hsparql package rdf4h package similar identical type triple namespaces prefix ideally type representation concept adopt package develop unify semantic web toolkit haskell combine rdf4h hsparql package seem like sensible goal achieve provide semantic web toolkit similar jena java
Semantic web;https://github.com/joachimvh/SPARQLAlgebra.js;sparql sparql algebra converter npm component get expose translate function algebra object contain output type occur note still work progress name convention could change also support non algebra entity ask etc make sure output contain relevant information query translate input translate function either sparql string call return translate back sparql tosparql tosparqljs function algebra object algebra object contain type object contain possible value type field output besides also contain typescript interface possible output output translate function always algebra operation instance best way see output would generate look test folder many sparql query correspond algebra output deviation spec try stay close sparql change make ease mostly base jena arq follow non exhaustive list deviation name parameter big visual change function long take order list parameter name list instead reason prevent memorize order parameter also due see difference spec jena arq sse output order parameter multiset list conversion function tomultiset tolist remove brevity conversion imply operation quad translate function optional second parameter indicate whether pattern translate triple quad pattern case quad graph operation remove embed pattern contain default value parameter false default quad flatten operator several binary operator nest path operator take array input entry simply notation follow sparql output follow algebra sparql query parse set sparqlstar true translate option value value block return follow output difference jena arq difference jena non exhaustive prefix uris get expand project operation always get even case select note test every test consist sparql correspond json contain algebra test end quad name test generate quad true option need regenerate parse json bulk invoke node test generate json
Semantic web;https://github.com/TheOntologist/OntoVerbal;ontoverbal ontoverbal protege plugin generate natural language description class ontology write owl roughly owl profile ontoverbal write fennie liang collaboraitn donia scott alan rector robert stevens part epsrc fund semantic web author tool project g032459
Semantic web;https://github.com/awslabs/amazon-neptune-tools;amazon neptune tool utility enable load graph application amazon neptune may also interest neptune sample github include sample graphml csv utility graphml2csv readme convert graphml neptune csv format neptune export export amazon neptune csv property graph turtle rdf graph neptune export neptune export export amazon neptune database bulk load csv format amazon neptune bulk loader property graph turtle rdf graph alternatively supply query neptune export unload csv turtle export neptune elasticsearch backfills elasticsearch exist amazon neptune database neptune full text cloudformation template provide mechanism index _new_ add amazon neptune database elasticsearch however situation may want index _existing_ neptune database prior enable full text search integration export neptune elasticsearch solution export neptune elasticsearch index exist amazon neptune database elasticsearch neo4j neptune command line utility neo4j neptune readme migrate neptune neo4j glue neptune glue neptune glue neptune library aws glue help write amazon neptune glue job glue neptune get neptune connection information glue catalog create label node edge column dynamicframes name accordance neptune csv bulk load format property graph write dynamicframes directly neptune neptune csv rdf interest convert neptune csv format rdf see neptune csv gremlin csv gremlin csv gremlin readme tool turn amazon neptune format csv gremlin step allow load different apache tinkerpop compliant store include amazon neptune gremlin query tool also try validate csv contain error inspect csv prior start bulk load csv neptune bulk format csv csv neptune bulk format csv neptune bulk format readme utility identify nod edge source csv generate amazon neptune gremlin load format configuration json define source target nod edge definition selection logic script interpret configuration generate amazon neptune gremlin load format generate load neptune database license library license apache license
Semantic web;https://github.com/modelfabric/reactive-sparql;reactive sparql reactive sparql client scala akka client much possible asynchronously back pressure support around http connection towards triple store block call cross process boundary old spray http client long support however still available release akka stream apis currently support flavour flow flavour flavour sparql execute sparql flavour flavour construct construct flavour flavour manipulate graph manipulate graph flavour sparql sparqlquery stmt string sparqlupdate stmt string case class embed sparqlrequest pas flow end sparqlresponse pop support custom mapping available value get marshal custom domain object however mandatory default mapper available return standard set src main scala agnos sparql api sparqlresult scala l25 base application sparql json content type possible single wrapper flow flow sparqlrequest sparqlresponse src main scala agnos sparql stream client sparqlrequestflowbuilder scala sparqlupdate sparqlquery statement option specialise query src main scala agnos sparql stream client sparqlqueryflowbuilder scala update src main scala agnos sparql stream client sparqlupdateflowbuilder scala flow well underlie communicate triple store via http endpoint document simple sparql query flavour construct work sparql query solution row bind return select statement always suitable plain rdf sparql suitable case interest triple quad graph iri miss moment way write follow statement rdf return quad format quad json flow create circumvent problem extension api flavour flavour sparql instead sparqlquery flow work sparqlconstruct inside sparqlrequest specify set match resource property graph iris limit number return internally flow generate reify select statement allow capture property rdf include graph iri flow respond sparqlmodelresult within sparqlresult contain rdf4j graph instance refer flow sparqlrequest sparqlresponse src main scala agnos sparql stream client sparqlconstructtomodelflowbuilder scala detail flavour manipulate graph flow allow basic graph manipulation define graph store aspect protocol support however possible retrieve graph retrieve entire graph getgraph graphuri option uri wrap graphstorerequest graphiri specify query return content default graph drop graph drop entire graph dropgraph graphuri option uri wrap graphstorerequest graphiri specify request drop default graph careful name graph triple store insert graph insert content rdf specify graph variant insertgraphfrommodel graphmodel graphuri option uri insert memory rdf insertgraphfrompath filepath path graphuri option uri format rdfformat insert content specify give rdf format insertgraphfromurl url url format rdfformat graphuri option uri insert content behind specify http url give rdf format operation return graphstoreresponse contain success status operation optional getgraph query mergegraphs boolean parameter insert message allow control graph deal newly insert triple mergegraphs true perform http put operation merge content graph send graph already triple store mergegraphs false default option perform http post operation replace content graph send graph specify insert default graph triple store refer flow graphstorerequest graphstoreresponse src main scala agnos sparql stream client graphstorerequestflowbuilder scala detail
Semantic web;https://github.com/nxparser/nxparser;welcome nxparser nxparser java open source stream non validate parser format triple quad number detail see specification nquads extension rdf format note parser handle combination generalise number triple syntax term line number term per line also vary eat mil quad 4gb 240mb gzipped t60p win7 ghz min 18min overall twice fast previous version come read nxparser non validate mean happily eat non conformant triple also nxparser parse certain valid triple rdf term separate whitespace pas positive w3c triple test case except rdf term separate whitespace surprise format nxparser parser family also include parser moreover attach parser parser emit triple nxparser api binary compile available maven central groupid org semanticweb yars depend part need choose artifactid accordingly want nxparser want make parser nxparser parser want rdf support jax nxparser jax module link require legacy binary find old compile repository google maintain nevertheless add pom xml read blank node unicode character datatyped literal get calendar object xsd datetime type literal provide jython thank uldis bojars save offline blog define generator function yield stream nquad record add demo order see action issue eclipse issue eclipse able create folder structure nxparser parser trick
Semantic web;https://github.com/OpenTriply/YASGUI;yasgui useful link user documentation developer documentation documentation github repository feel free add improvement installation instruction include yasgui project want yasr yasqe replace yasgui command npm yarn local development instal dependency yarn yasgui locally develop locally yarn dev compile yasgui yarn store transpiled directory license software write triply release mit license
Semantic web;https://github.com/lanthaler/HydraConsole;hydraconsole hydra lightweight vocabulary create hypermedia drive web apis specify number commonly concept render creation generic api client possible hydraconsole generic api client form single page web application high level description hydraconsole work please refer dissertation third generation web apis bridge gap rest link installation moment hydraconsole json processor proxy write php access process response web apis thus simple way hydraconsole composer composer yet follow instruction follow command curl php composer create project command hydraconsole dependency php composer phar create project dev hydra console path serve hydraconsole php web server php localhost path fire browser point collaboration participate development please bug issue issue tracker submit pull request enough interest create dedicate mail list future find information hydra demo installation hydraconsole homepage
Semantic web;https://github.com/jsonld-java/jsonld-java;jsonld java look maintainer jsonld java java json json api coverage usage maven com github jsonld java jsonld java processor option option specify json api accessible via com github jsonldjava core jsonldoptions class jsonldprocessor function optional input take instance class control traffic parse json normally follow external context declaration load context may case desirable might require additional proxy configuration authentication jsonld java apache httpcomponents connection base read standard java property like default http client wrap provide small memory base cache object max regularly access context load context classpath application might parse jsonld document always external context iris although default http cache see avoid repeat context application would still initially vulnerable connectivity bypass issue even facilitate parse document offline state possible provide warm cache populate classpath load jar application simply add resource jarcache json root classpath together json context embed note might recursively embed nest context syntax jarcache json best explain see also core src test resource jarcache json core src test resource jarcache json mean json document try import context instead give context jsonld load classpath resource classpath location iri reference resolve relative location jarcache json multiple jar jarcache json classpath resolve within correspond jar minimize conflict additional http header content type include although generally ignore jsonld java unless override jarcache json cache control header automatically inject together current date mean resource load jar effectively never expire real http server never consult apache http client mechanism load jarcache json rely locate resource classpath command line within framework osgi servlet container tomcat normally set correctly try disable remote document fetch default documentloader set follow java system property true also constant provide documentloader purpose note override documentloader also support set consistency security load context string application might parse jsonld document reference external context iris available uris classpath case jarcache json approach work instead inject literal context string jsonldoptions object follow customize apache httpclient customize http behaviour disable cache provide authentication may want create configure closeablehttpclient instance pas documentloader instance sethttpclient document loader insert jsonldoptions setdocumentloader pas argument jsonldprocessor argument insert credential provider load context protect http basic auth playground repository contain simple application provide command line access json function initial clone setup usage follow get usage detail developer compile package jsonld java maven compile base jsonld java module mvn clean jar local maven repository test core package test style jsonld java project custom eclipse format cleanup style guide ensure pull request fairly simple merge guide find conf directory instal eclipse property java style formatter follow property java style clean module make jsonld java project eclipse worry pull request clean repository maintainer prior merge make initial check easy modify convention submit pull request make change fix bug add new feature commit push change fork open pull request merge change master branch main repository report jsonld java conformance jsonld report document conformance jsonld java jsonld available regenerate report report conform json document regenerate follow command current possible value include json application json jsonld nquads text plain nquads ntriples turtle text turtle turtle ttl generate report available format integration jsonld java java package base package jsonld java integration java package separate repository exist integration eclipse apache apache create integration module create repository module create github repository module user account jsonld java maintainer create jsonld java organisation create maven module create pom xml module basic outline module pom xml look like make sure edit follow project artifactid set jsonld java module module usually represent rdf library integrate jsonld java jena project name set jsonld java module name wher module name usually name rdf library integrate project description project developer developer give youself credit fill developer field least put see available project dependency remember add dependency project need import favorite editor follow first step section import whole jsonld java project new module eclipse create rdfparser interface com github jsonldjava core rdfparser parse rdf library jsonld java internal rdf format see documentation rdfparser java core src main java com github jsonldjava core rdfparser java detail implement interface create triplecallback interface com github jsonldjava core jsonldtriplecallback generate representation json input rdf library see documentation jsonldtriplecallback java core src main java com github jsonldjava core jsonldtriplecallback java detail implement interface rdfparser jsonld rdf parser class parse framework rdf generate json way rdfparser register parser jsonld class set option format call fromrdf pas instance rdfparser fromrdf function jsonldtriplecallback jsonld triple callback class populate framework rdf json call triple technically quad pas instance triplecallback jsonld tordf integrate framework framework might system reader writer register json support format remember parse direction opposite reader may class parse json populate rdf graph write test helpful test make sure work continue work future version write readme write readme instrutions module submit module commit ted push github fork issue pull add reference module readme alternatively also host repository jsonld java organisation give visibility changelog release switch test log log4j logback patch ansell improve travis performance patch yunlemon release fix type subject object report barthanssens patch umbreak ignore base remote context relative report whikloj patch dr0i fix throw recursive context inclusion patch umbreak release fix guava dependency shade report ggrasso fix context issue remote context patch umbreak deprecate context serialize patch umbreak release fix java net uri resolution report ebremer afs patch dr0i shade guava failureaccess module patch peacekeeper minimize guava class shade patch elahrvivaz follow link header context patch dr0i fsteeg release bump jackson version late security update patch afs canonicalise xsd decimal type value patch jhg023 bump dependency plugin version release bump jackson version late security update patch afs iri resolution fix patch fsteeg release bump jackson version add regression test past frame bug throw error empty key add regression test workarounds text url dual definition persist jsonldoptions normalize tordf release fix nan inf inf raw value type conversion rdf add fix wrong rdf type type conversion path umbreak open context gettypemapping context getlanguagemapping reuse w3c json syntax allow container set aliased type patch dr0i release handle omit graph flag patch eroux release make pruneblanknodeidentifiers false default mode always true mode patch eroux fix issue blank node identifier prune aliased patch eroux allow wildcard frame patch eroux fix test setup schema org httpurlconnection break inability httpurlconnection redirect http http release encapsulate remotedocument make immutable fix performance issue cause cache schema org others cache control private patch hansbrende cache classpath scan jarcache json fix similar performance issue add internal shade dependency google guava maintain soft weak reference map rather adhoc version make jsonlderror runtimeexception improve closure bump minor version reflect api incompatibility cause jsonlderror protect field change hide jarcachestorage fix resource leak jsonutils fromurl unsuccessful request patch plaplaige ignore utf bom patch christopher johnson release fix embed always support patch dr0i release add implicit flag subframe fix incomplete list recursion patch christopher johnson support pruneblanknodeidentifiers frame option mode patch fsteeg eroux support new embed value patch eroux add injection context directly documentloader patch ryankenney fix quad content type patch nicolasrouquette add jsonutils fromjsonparser patch dschulten make literal compare consistently patch stain release propagate cause jsonlderror instance cause exception remove schema org hack appear work remove deprecate unused apis bump version snapshot per remove change apis release fix schema org support break apache http client work java net url fix report npe jsonldapi removedependents release fix base remote context corrupt local context support default inside set frame fix concurrentmodificationexception frame api release version refactoring work actually identical functionality release version refactor jsonutils documentloader move static logic jsonutils deprecate documentloader version release version replace deprecate httpclient new builder pattern chain jarcachestorage httpcachestorage simplify way local cache perform bump version snapshot interface method parameter change particularly documentloader sethttpclient change require closeablehttpclient introduce httpclient bump dependency late version particularly httpclient see series far performance improvement serialisation quad replace string append replace stringbuilder support set system property com github jsonldjava disallowremotecontextloading true disable remote context load release move tool clerezza rdf2go module separate repository tool repository circular dependency sesame module best locate manage separate repository remove sesame module favour sesame rio jsonld sesame fix bug parse fail content present end full json top level element compact context array contain single element compaction bump sesame jopt simple playground cli simplify cod improve error message allow rdf parse write available sesame rio parser playground cli make dependency osgi compliant fix locale sensitive serialisation xsd double decimal type literal always locale bump sesame bump clerezza fix identification integer boolean decimal rdf jsonld usenativetypes release add osgi metadata jar bump sesame release version fix jackson parse exception propagate sesame without wrap rdfparseexceptions fix java api still java compatible ensure sesame rdfhandler endrdf startrdf call sesametriplecallback release version bump sesame remove jena integration module maintain jena team repository release version bump sesame bump jackson bump jena bump rdf2go version allow load remote context bundle jar cache support json array context tordf avoid exception context default language unmapped key javadoc core class jsonldprocessor jsonldapi jsonutils rename core class consistency particularly jsonutils jsonutils jsonldtriplecallback fix context constructor take base account fix jsonldapi map option frame algorithm thank scott blomquist sblom release version bump sesame fix jena module new api update final recommendation namespaces support sesame integration module initial remote document load bump jackson update jena writer integration package rename com github jsonldjava sesame com github jsonldjava jena etc issue match class name spec rename jsonldexception jsonlderror rename jsonldprocessor jsonldapi rename jsonld jsonldprocessor rename activecontext context rename option jsonldoptions context relate utility function move member context class fix json jena handle bnodes add rdf2go integration bump sesame clerezza dependency version bump version update turtle integration add cache context load uri add source format eclipse config fix seasame integration package name replace depreciate jackson add turtle rdfparser triplecallback change maven groupids com github jsonld java match github domain release version update core match json process algorithm api w3c editor draft may deprecate jsonldserializer favor rdfparser interface good represent purpose interface good fit update core update jsonldtriplecallback good fit update update playground tool support update core change base package name com github jsonldjava revert version snapshot allow version incrementing pre allow release json spec finalise turn jsonldtriplecallback interface update sesame jena jackson fix character encode issue jsonldprocessortests bump reflect dependency change bring date reference minus normalization stuff change entry point function static function jsonld class change jsonldserializer abstract class require parse function jsonldserializer pas jsonld fromrdf function add jsonldprocessingerror class handle error efficiently consideration release optimisation context class map many option store value map could make variable whice speed thing bite termdefinitions variable inside context sort document loader interface mockup test require
Semantic web;https://github.com/gh-rdf3x/gh-rdf3x;rdf3x rdf3x complete modify version original rdf engine change original version rdf3x optional clause implement new gjoin clause add fix bug lang langmatches bind aritmetics relationals operator translatesparql translate complex query sparql sql postgresql monetdb rdf create thomas neumann web site rdf modify hancel gonzalez giuseppe simone advisor maria esther vidal
Semantic web;https://github.com/linkeddata/rabel;rabel link format converter program read write link various format npm rabel command line command look like unix option execute order leave right include format cccc give mime type input output text turtle default application rdf xml whereas input application rdfa application xml detail currently rabel read web write filename deem relative uris take relative pwd pwd current work directory case test parser another provide stable serialization output serialization design stable small change allow check source control system name come rdf babel xml load xml element map arc text content trim rdf string xml namespace iana registry document custom map property datatypes local identifier generation see source detail
Semantic web;https://github.com/lanthaler/HydraBundle;hydrabundle hydra lightweight vocabulary create hypermedia drive web apis specify number concept commonly web apis render creation generic api client possible bundle show easily hydra integrate modern web framework act proof concept show hydra simplify interoperable evolvable restful apis warn highly experimental stuff ready production yet participate development bundle please bug issue issue tracker submit pull request question regard hydra general join hydra w3c community find online demo bundle well information hydra homepage installation bundle composer require hydra bundle dev master add package composer json directly instal package need add bundle appkernel php import rout rout yml credit bundle heavily doctrine common inspire object relational generation base sensio
Semantic web;https://github.com/eBay/akutan;akutan blog post good introduction akutan distribute knowledge graph store sometimes call rdf store triple store knowledge graph suitable highly interconnect many type relationship like encyclopedic information world knowledge graph store enable rich query power real time interface complement machine application make sense new unstructured information context exist knowledge knowledge graph query feel bite different people come sql nosql property graph store knowledge graph represent single table fact fact subject predicate object representation enable store sift complex query apply inference rule raise level abstraction tiny graph subject predicate object represent query akutan see doc query doc query akutan design store large graph fit single server scalable much store rate query execute however akutan serialize change graph central log fundamentally limit total rate change rate change improve large number server typical deployment able handle change per second exchange limitation akutan architecture relatively simple enable many feature akutan support transactional update historical global snapshot believe trade suitable knowledge graph case accumulate large amount modest pace akutan architecture trade see doc central_log_arch doc central_log_arch akutan ready production critical deployment useful today case server deployment akutan development purpose line case year commonly load billion fact believe akutan current capability exceed capacity scale yet push akutan limit project good architectural foundation additional feature high performance could achieve akutan need love production critical deployment much akutan consist high quality document unit test module area base inherit akutan early prototype day still need attention place functionality lack akutan could critical production store include deletion fact backup restore automate cluster management github issue thing also area akutan could improve would necessarily block production usage akutan query language quite compatible sparql inference engine limit akutan nice foundation may useful people also need additional love alternative open source knowledge property graph store may want consider affiliation project rdf store support several query language include sparql gremlin disk base single master scale read seem unmaintained power triple orient property graph store graphql like query language support sparql disk base scale property graph store cypher query language support sparql single master scale read see also wikipedia comparison page remainder readme describe get akutan several document doc directory describe aspect akutan detail see doc readme doc readme overview instal dependency akutan akutan follow system dependency write need new akutan protocol extensively encode message log change storage disk need protobuf version reccomend late note default many linux distribution work akutan akutan disk view store fact mac instal via brew golang protobuf rocksdb zstd ubuntu refer within docker docker directory package name apt get clone akutan repository pull several library additional tool make get finally project make akutan locally fast way akutan locally launch memory log store bin plank open another terminal make bring several akutan server locally start api server listen localhost grpc request port http request port easy way interact api server bin akutan client see doc query doc query api server expose factstore grpc service define proto api akutan_api proto proto api akutan_api proto deployment concern log early bin plank log store unsuitable real usage plank memory replicate default keep entry time mean development akutan also support apache log store recommend plank deployment kafka follow kafka quick guide kafka start zookeeper start kafka create topic call akutan test kafka guide partition set want configure kafka synchronously write entry disk kafka akutan set akutanlog type kafka akutan configuration default local config json update locator address accordingly kafka port default need clear akutan disk view restart cluster disk view default store tmpdir rocksdb akutan diskview space partition delete tmpdir rocksdb akutan diskview docker kubernetes repository include support akutan inside environment tedious development purpose useful step towards modern robust production deployment see cluster k8s minikube step deploy akutan service minikube also include step docker image distribute trace akutan generate distribute trace try follow jaeger get start docker image default make configure send trace query minikube cluster also include jaeger instance development whichever editor would like repository contain configuration suggest follow extension spell override default setting vscode setting json vscode setting json5 vscode setting json5 test target makefile contain various target relate test target description make test akutan unit test make cover akutan unit test open web base coverage viewer make lint basic linting make vet static analysis test include linting format license information copyright ebay inc primary author simon fell diego ongaro raymond kroeker sathish kandasamy license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license note project rename akutan july
Semantic web;https://github.com/owlcs/owlapi;owlapi owl api main repository owl api java api create manipulate serialise owl ontology late version api support owl available open source license lgpl apache follow component include api owl memory reference read write support rdf xml owl xml functional syntax manchester syntax turtle obo write support syntax latex format via rio integration ntriples json etc reasoner interface work reasoner fact hermit pellet racer jfact chainsaw see documentation page wiki detail release note july feature specify riosetting value rio renderers bug fix fix sameas failure entity include fix trig rdf json include name graph fix objecthasself render wrongly manchester syntax november feature remove deprecate annotation set base method owlapi support rdf4j rio hdt parser owlliteral xsd long bug fix fix performance signature check ontology change fix error rio renderer expression element fix owlontology datatypesinsignature include ontology header fix entitysearcher getsuperproperties fail parent inverse update guava junit version fix owlparser ensure stream close exit error undeclared class domain axiom fix ontology cache weak key july bug fix fix follow multiple redirect across protocol javadoc fix deprecate stream method july feature allow creation tautology ary axiom configurable fast prune window size bug fix fix javadoc owlobject nestedclassexpressions fix classassertionaxioms owlclassexpression fail fix include ontology annotation signature fix unable set base directive turtle writer fix owlapi accept iris lead space fix swrl body reorder structure share fix roundtrip obo change iri owl versioninfo april feature general modularity class contribute robn nolte bug fix fix xsd datatypes erroneously quote obo writer fix referencingaxioms owlprimitive miss nest literal fix empty line meta inf service cause exception fix owlontologywriterconfiguration disable banner comment january bug fix fix owlentityrenamer anonymous individual fix builtin annotation property lose parse deal owlannotationproperty entity owlentityuriconverter class october bug fix implement allow gzipped import fix race condition injector jackson update fix containsreference owlentity deprecate fix referencingaxioms owlprimitive miss iri appearance fix javadoc applychange applychanges wrong manager fix owlobjectpropertyexpression getsimplified incorrectly fix incomplete javadoc owlnaryaxiom aspairwiseaxioms fix owlnegative assertionaxiom containsanonymousindividuals javadoc fix annotate axiom anon expression save incorrectly fix ontology relative iris serialize incorrectly fix ann annotation anon individual save rdf incorrectly fix annotation drop annotation property undeclared fix saxexception autoirimapper debug log level ensure isanonymous implement correctly fix null pointer import relation declaration amend base escape character tutle parse fix exception convert obi obo june feature add support load ontology classpath implement allow annotation skip module extraction add support custom tag obo bug fix fix unescaping character oboformatparser handlenextchar fix iri prefix_cache instance much memory fix roundtrip escape value fix maximumnumberofnamedsuperclasses count super class fix owldatapropertyaxiom subinterface owlpropertyaxiom fix http http redirect follow fix miss escape character obo output fix regression owlstringtools translate fix several incorrect xsd datatype match pattern fix owldatafactory getliteral error empty string integer fix unnecessary prefix add manchester syntax parser fix multiple ontology definition obey strict parse fix owllogicalentity owlannotationproperty security jackson fix manchester syntax parser crash class property pun fix obo parser support qualifier block march bug fix fix dlexpressivity checker never compute anything jackson version fix ensure allvaluesfrom axiom lose fix http http redirect follow fix obo renderer stick untranslatable axiom concurrent manager fix annotation differentindividualsaxioms lose fix roundtrip iris colon fragment path fix eofexception customtokenizer fix cyclic import miss declaration parse error december bug fix refactor owlprofile fix miss user define datatype violation literal fix rdfgraph getsubjectsforobjects catch infinite loop december feature add owlclassexpression isnamed method fix injection problem osgi implement allow atomic decomposition skip assertion expressivity checker bug fix fix readwritelock injector singleton fix cyclic import versioned ontology fail fix annotate ontology annotation fix incorrect documentation owlontologymanager method disjointclasses owl thing produce incorrect axiom fix concurrent manager lock share ontology september feature prov time vocabulary bug fix add representativeinstances owlreasoner swrlrule hash compute incorrectly fix owlontology share structure cause incorrect rdf xml july feature remove guice dependency upgrade jsonld java version performance allow java bug fix move trove4j hppc fix incorrect sort obo header tag fix line break rdfs label invalid output fix autoirimapper choose wrong iris april feature add option represent version string implement owlzip reader writer allow trim size load disable register deprecate oboparser default bug fix fix swrl variable iris violate urn spec default iri unnamed ontology valid double end default namespace iri return true isiri fix owl xml write langstring unnecessarily fix importsdeclaration return import obo january feature support authorization header remote load bug fix fix problem save ontology turtle fix null pointer owlobjectpropertymanager remove com google inject add exclusion javax annotation november feature performance improvement parse large ontology october feature accept header include mime type support parser add hasannotationvalue interface method map optional method owlontologychange implement efficient way test ontology refer entity type bug fix output xsd string unnecessary owl xml reject xml valid owl xml getfragment advice non existent replacement owlobject immutable collection sort sort import import closure sort namespace prefix xml serialization owlontologymerger fail concurrentmodificationexception poor performance owlimmutableontologyimpl getimportsclosure fix atomicdecomposition throw nullpointer fix hashcode equal owlontology differ july feature add repair_illegal_punnings property disable fix illegal punning move pun log warn bug fix fix profile owl2_full return profile owl2_dl fix entitysearcher getequivalentclasses incorrectly return owlentityrenamer rename annotation prop ontology annotation fix blank node ncnames rdf xml output march feature add stream support reason interface allow syntacticlocalitymoduleextractor exclude assertion explanation fail hard profile violation latex format improvement ensure ontology annotation sort implement hasapplychanges applychanges return changeapplied recompile parser javacc issue add japicmp maven plugin track api change implement zip dependency include non maven user dependency update move rdf4j bug fix fix relate infer axiom generator fix duplication inverseof property generator fix simplerenderer write inverseof instead objectinverseof fix nest annotation bug fix turtle parser failure bioportal ontology fix manchester expression parser bug cardinality january bug fix allow supplier null error message isanonymous isindividual isaxiom isanonymousexpression owlobject performance improve create owlontologymanager ensure xxe vulnerability prevent fix structural share gcis cause error fix issue serialization owlapi version fix problem compile version5 android v24 nougat fix order rdf triple affect annotation parse fix property axiom generator check set size fix import properly load ontology remove fix incomplete parse differentindividuals distinctmembers fix apache harmoony sax parser support fix line separator dlsyntaxhtmlstorer fix iris query string ofn unparseable output fix unqualified restriction consider qualify october bug fix serializability issue september bug fix fix omn parser mistake pun class object property fix owl xml format support swrl variable iris fix explicit prefix ignore serialization fix save ofn lose namespaces due double default prefix fix syntax html formatter issue fix manchesterowlsyntaxrenderer subpropertyof render inconsistent fix slow infer disjoint generator fix relative ontology iri cause miss declaration fix invalid turtle ontology hash iris fix call setontologydocumentiri reset import closure cache fix owlontology annotationpropertiesinsignature duplicate fix latex renderer produce bad latex property inverse fix manchesterowlsyntaxparser handle owl datatypes fix turtle renderer escape period fix import iri resolve correctly obo input may feature allow ban parser allow disable banner comment move builder api able parser make axiomtype comparable bug fix fix performance regression string intern improve memory footprint fix default prefix override explicit prefix fix anonymous individual parse problem fix noisy print message log framework fix swrl rule incorrect equal fix owl full profile fix annotate entity declare rdf xml fix xml literal self contain march bug fix fix fix punning fail subdatapropertyof rdfs label dump remain triple display triple leave fix annotation lose entity rename swrlrules fix profile validation throw exception ontology annotation fix rdf xml parser fail load ontology contain xmlliteral fix makeloadimportrequest log warn fix anonymous individual parse problem fix save fail ontology contain xmlliteral fix anonymous individual parse problem february feature allow overridable defaultable property fact owlapitools add owlobjecttransformer replace part ontology add hasoperands interface componentswithoutannotations simplify equalsignoreannotations add componentsannotationsfirst owlobject add component owlobject create common interface hashcode add rdf langstring type common rdf api integration add inferencedepth convenience method owlreasoner owlrdfconsumer fill guess type declaration table blank nod mark method return set stream available deprecate update guice version beta replace google optional java optional owlprofileviolationvisitorex return optional rather null add default method owlontology direct add remove axiom add getformat method owlontology merge visitor adapter interface default method isavailable get pattern owlontologydocumentsource change optional owlontology getreferencingaxioms find owlprimitive object enable owlontologymanager keep ontologyconfigurator instance declaration save method owlontology owlapi java july feature specify riosetting value rio renderers bug fix fix sameas failure entity include order literal consistent owlapi fix trig rdf json include name graph fix objecthasself render wrongly manchester syntax november bug fix fix owlparser ensure stream close exit error undeclared class domain axiom fix ontology cache weak key october bug fix fix performance signature check ontology change fix error rio renderer expression element fix owlontology datatypesinsignature include ontology header fix ontology load case multiple http redirect july feature let obo parser follow redirect allow creation tautology ary axiom configurable fast prune window size bug fix fix javadoc owlobject nestedclassexpressions fix classassertionaxioms owlclassexpression fail fix include ontology annotation signature fix unable set base directive turtle writer fix owlapi accept iris lead space fix swrl body reorder structure share fix roundtrip obo change iri owl versioninfo april bug fix fix xsd datatypes erroneously quote obo writer fix referencingaxioms owlprimitive miss nest literal fix empty line meta inf service cause exception january bug fix fix owlentityrenamer anonymous individual fix builtin annotation property lose parse deal owlannotationproperty entity owlentityuriconverter class october bug fix implement allow gzipped import fix race condition injector jackson update fix containsreference owlentity deprecate fix javadoc applychange applychanges wrong manager fix owlobjectpropertyexpression getsimplified incorrectly fix incomplete javadoc owlnaryaxiom aspairwiseaxioms fix owlnegative assertionaxiom containsanonymousindividuals javadoc fix annotate axiom anon expression save incorrectly fix ontology relative iris serialize incorrectly fix ann annotation anon individual save rdf incorrectly fix annotation drop annotation property undeclared fix saxexception autoirimapper debug log level ensure isanonymous implement correctly fix null pointer import relation declaration amend base escape character tutle parse june feature add support custom tag obo bug fix fix owllogicalentity owlannotationproperty security jackson fix manchester syntax parser crash class property pun fix obo parser support qualifier block may feature add support load ontology classpath implement allow annotation skip module extraction bug fix fix multiple ontology definition obey strict parse fix unnecessary prefix add manchester syntax parser fix owldatafactory getliteral error empty string integer fix several incorrect xsd datatype match pattern april bug fix fix http http redirect follow fix miss escape character obo output fix owldatapropertyaxiom subinterface owlpropertyaxiom fix maximumnumberofnamedsuperclasses count super class fix owlontology getgeneralclassaxioms slow fix roundtrip escape value march bug fix fix http http redirect follow fix ensure allvaluesfrom axiom lose fix eofexception customtokenizer fix cyclic import miss declaration parse error fix unescaping character oboformatparser handlenextchar fix iri prefix_cache instance much memory february bug fix jackson version fix compatibility guava fix obo renderer stick untranslatable axiom concurrent manager fix annotation differentindividualsaxioms lose fix roundtrip iris colon fragment path december feature refactor owlprofile bug fix fix miss user define datatype violation literal fix rdfgraph getsubjectsforobjects catch infinite loop fix dlexpressivity checker never compute anything december feature add owlclassexpression isnamed method fix injection problem osgi expressivity checker bug fix fix readwritelock injector singleton fix cyclic import versioned ontology fail fix annotate ontology annotation fix incorrect documentation owlontologymanager method disjointclasses owl thing produce incorrect axiom fix concurrent manager lock share ontology september bug fix osgi issue fix september feature prov time vocabulary bug fix prefix split wrong place percent encode iri fix owlontology share structure cause incorrect rdf xml july feature remove guice dependency upgrade jsonld java version performance java bug fix move trove4j hppc literal lang string literal must equal fix owlliteral parsedouble throw numberformatexception need guice guava version update amend pom vaild osgi distribution fix incorrect sort obo header tag fix line break rdfs label invalid output fix autoirimapper choose wrong iris april feature add option represent version string implement owlzip reader writer signature cache ontology allow trim size load disable register deprecate oboparser default bug fix fix swrl variable iris violate urn spec default iri unnamed ontology valid double end default namespace iri return true isiri fix owl xml write langstring unnecessarily december feature support authorization header remote load october feature accept header include mime type support parser add hasannotationvalue interface method map optional method owlontologychange implement efficient way test ontology refer entity type bug fix owl xml reject xml valid owl xml owlobject immutable collection sort sort import import closure sort namespace prefix xml serialization owlontologymerger fail concurrentmodificationexception getfragment advice non existent replacement fix poor performance owlimmutableontologyimpl getimportsclosure july feature add repair_illegal_punnings property disable fix illegal punning move pun log warn bug fix fix profile owl2_full return profile owl2_dl fix entitysearcher getequivalentclasses incorrectly return fix blank node ncnames rdf xml output owlentityrenamer rename annotation prop ontology annotation march feature allow syntacticlocalitymoduleextractor exclude assertion explanation fail hard profile violation bug fix fix relate infer axiom generator fix duplication inverseof property generator march feature implement hasapplychanges applychanges return changeapplied implement zip dependency include non maven user issue add japicmp maven plugin track api change dependency update bug fix fix owlliteral produce different hash cod version multiple nest annotation fail rdf xml parse nest anonymous nod break ensure ontology annotation sort fix turtle parser failure bioportal ontology fix manchester expression parser bug cardinality january bug fix fix structural share gcis cause error fix issue serialization owlapi version fix order rdf triple affect annotation parse fix property axiom generator check set size fix import properly load ontology remove performance improve create owlontologymanager fix incomplete parse differentindividuals distinctmembers fix apache harmoony sax parser support ensure xxe vulnerability exist fix line separator dlsyntaxhtmlstorer fix iris query string ofn unparseable output fix unqualified restriction consider qualify fix owlontologymanager owlimmutableontologyimpl nullable october bug fix serialization issue september bug fix fix omn parser mistake pun class object property fix owl xml format support swrl variable iris fix explicit prefix ignore serialization fix save ofn lose namespaces due double default prefix fix syntax html formatter issue fix manchesterowlsyntaxrenderer subpropertyof render inconsistent fix slow infer disjoint generator fix relative ontology iri cause miss declaration fix invalid turtle ontology hash iris fix call setontologydocumentiri reset import closure cache fix latex renderer produce bad latex property inverse fix manchesterowlsyntaxparser handle owl datatypes may bug fix fix turtle renderer escape period fix import iri resolve correctly obo input may bug fix fix default prefix override explicit prefix fix anonymous individual parse problem fix owl full profile fix annotate entity declare rdf xml fix xml literal self contain feature allow ban parser allow disable banner comment fix noisy print message log framework march bug fix fix fix punning fail subdatapropertyof rdfs label march bug fix fix rdf xml parser fail load ontology contain xmlliteral fix profile validation throw exception ontology annotation fix annotation lose entity rename swrlrules fix dump remain triple display triple leave march bug fix fix anonymous individual parse problem fix makeloadimportrequest log warn fix save fail ontology contain xmlliteral february feature allow overridable defaultable property bug fix fix entitysearcher getdomains owlannotationproperty owlontology return range axiom instead domain axiom february feature add owlobjecttransformer replace part ontology add owlliteralreplacer replace literal different value throw error malformed ontology parse strict avoid error1 class bug fix fix rbox axiom type fix parse nest anonymous nod break fix error rdf handle deep nest annotation fix entitysearcher subpropertiesfilter break fix cyclic import illegal pun fix owlontologymanager copyontology copy import fix change successfully apply broadcast apply add restriction aduna package fix bom removal wrapper apply input stream fix serialization incorrect owl syntax fix constraint sesame version osgi import fix explanationordererimpl seedextractor throw exception fix multiple nest annotation fail rdf xml october feature port protege owlapi concurrency support owl api enable creation concurrent manager part add transactional support owlontology ability rollback application set change fail add changeapplied no_operation track change effect add axiom already present remove axiom present manchesterowlsyntaxparser could convenience method parseclassexpression string add set label banner comment iris add config switch save anon individual enforce correct argument type owlobjectinverseproperty default impl add control flag structure walk allow annotation walk reduce space obo parser update jackson dependency bug fix owlimmutableontologyimpl asset assume input iterable come duplicate free collection owlontologymanagerimpl getversions call get optional without check contain value present owlontologymanagerimpl test storers key rather canstoreontology setontologyloaderconfigurationprovider accept javax inject provider clean distribution jar lose annotation annotation assertion axiom return type removeaxiom addaxiom need review bfo fail load api version fix rdf xml renderer like property urn almost urn anonymous individual remapped consistently upon load output node anonymous individual need anon individual appear object sort annotation assertion output manchester syntax owl profile validation mistake typedef created_by support space ttl namespace abbreviation preserve serialization entitysearcher getannotationobjects interest object annotation assertion axiom entity rather annotation annotation assertion axiom convince owlapi distribution export rio dependency rdf issue test annotation subproperty domain range disappear save load cycle pun enhancement april feature simple owl iri sniff autoirimapper fix individual swrl rule get extra type compression support sort functionalsyntaxobjectrenderer sort untyped iri annotation assertion general axiom sort axiom annotation output translateannotations method negative property assertion yet order neither nary axiom class expression add legacy osgi distribution version backwards compatibility reasoner may support certain type reason may also support owlreasoner isentailed hence may return false call owlreasoner isentailmentcheckingsupported support preserve transfer add annotation obo macro expansion add extension link document format common extension optimise annotation lookup module extraction enrichment change strategy mappointer storage initial insertion list turn thashset upon first call trimtosize get size call add benchmarking util load ontology dump hprof mat improve conversion owl obo add test case bug fix fix prioritycollectionsorting fix manager creation time fix owlontologymanagerimpl getversions call get optional without check contain value present fix xmlliterals output xml quote xml fix rdf xml renderer include annotation assertion entire closure fix prioritycollection iri mapper perhaps thing confuse fix thashsets get leave default load factor construction finish fix rdf consumer fail guess property type fix nonmappingontologyirimapper confuse extra owlontologyirimapper fix property xsd integer range parse object property rdf xml source fix import owl manchester notation fail fix elprofile incorrectly reject disjointclasses axiom fix owlrdfconsumer fill guess type declaration table blank nod fix owl api doctype declaration miss xml serialization fix axiom equality short circuit wrong place fix bug render anonymous individual manchester owl syntax revert incorrect set package type bundle november feature trimtosize available cut ontology internals collection minimal size load simon spero various memory optimization cache rarely value remove simon spero trove collection ontology internals oboformat configuration option skip validation write obo bug fix fix multithread bug reveal owlapitools test fix roundtrip error trix various syntax fix swrl rule save old version owlapi protege lose annotation fix error object property assertion inverseof property fix manchester syntax error inverse recognize swrl rule render twice fix error parse rdf turtle triple quote literal mismatch single double quote fix ontologyirishortformprovider wrong shortform generation september support java version java java feature add hasannotationpropertiesinsignature uniform treatment annotation property add miss entitysearcher method negative property assertion trove collection ontology internals improve performance owlaxiomimpl equal transform function collection collection collection pmd critical violation address fix serviceloader osgi compatible create osgidistribution osgidistribution jar embed dependency include compatibility module address issue due owlapi dependency wrap osgi bundle separately enable owlontologymanager keep loader configuration obo ontology parse parser add parser owlapitools compatibility package add saveontology method owlmutableontology add copy move ontology method owlontologymanager search introduce replace forsuperposition forsubposition ignoreannotations booleans import include import exclude introduce instead boolean argument introduce changeapplied simplify around apply change remove null warn introduction searcher transform function owlontology expose new method search axiom refer entity abstract various getaxiomsby method refactor owlsignature uniform import closure refactored owlaxiomcollection uniform import closure add target parse allow parser try document input source take account mime type well multimap guava throughout obo parser update replace oboformat release nonnull annotation warn centralise uniform sax parser factory owlontologyid optional refactored property hierarchy remove generic add owlparser enable actual parser add pairwise visitor change storage strategy nary axiom pairwise visitor interface functional interface apply distinct pair collection object add aspairwiseaxioms nary axiom type add haspriority annotation comparator prioritizable object add prioritycollection manage inject collection add serviceloader adapter guice injection add manchesterowlsyntaxparser interface api owlapitools profile fixer include add profile enumeration support owl profile know reasoner dependency injection enable fixer add guice module create owlontologymanager owldatafactory introduce owlontologybuilder allow swap owlontology via guice service loader module api independently owlapi impl module add rdfa parser static meta inf service owlapi rio add json support add rdf langstring rdf owl rdf vocabulary good bom treatment apache bominputstream slfj log guava guice beta add jsr305 nonnull nullable annotation fix javadoc java raise violation entity declaration add declaration illegal punning save ontology cache literal owldatafactoryinternalsimpl overall improvement parse gene ontology implement default prefix manager prefix ontology format object overriden implement automatic retry load url manage owlontologyloaderconfiguration switch owldatafactory illegalargumentexceptions nullpointerexceptions handle annotation pun type render rdf add owlontologymanagerfactory allow rioowlrdfparser injector convert rioparserimpl stream statement wherever possible default datatype rdfliteral plain_literal make generate class package protect rename owlobjectrenderer functionalsyntaxobjectrenderer owlreasoner change list generic move owlontologyformat format package performance improvement rdf xml render optimise functional renderer prefix manager feature obo parser replace oboformat owl2datatype implement hasiri add xsd iris simple parse support gzip read write ability manchester owl syntax cleanup bug fix fix autoirimapper namespace aware direct import update correctly manual load fix syntax render disjoint class miss comma fix owlontology getxxxinsignature boolean similar method fix add owlontology getreferencingaxioms owlprimitive fix add documentation owlontologyid clarify relationship isanonymous getontologyiri fix consider add containsxinsignature method import flag owlontology fix owlasymmetricobjectpropertyaxiom render syntax fix owldocumentformat interface fix fix object cardinality quantify restricitons fix prefixowlontologyformat miss compatibility module fix structuralreasoner getsameindividuals behave advertise fix subclassof parse fix iri space escape old owlentitycollector bring forward deprecatedowlentitycollector fix serialization warn report atomiclong concurrency support gzip document source move transitive object property type rbox set turtle default prefix slash aware fix import statement erroneously name anonymous ontology add test roundtripping annotate swrl rule datatype definition fix annotation datatype definition axiom fix owl xml fix zip buff streamdocumentbase fix mislead message resolve illegal iri fix variable render manchester owl syntax preserve fix round trip error functional syntax fix rdfgraph getsortedtriplesforsubject throw exception java7 fix infinite recursion cyclic import structure declaration match location january feature improve feature simple swrl variable render javadoc warn error remove allow java refactored owlaxiomvisitorexadapter general performance improvement rdf xml rename variable add explicit flush fix slow functional sytnax renderer java default final abstract class change allow interface verification add oraclejdk8 early access travis update oboformat class name sync oboformat project make oboformatexception extend owlparserexception bug fix fix manchester syntax roundtrip double swrl rule fail fix manchester syntax writer generate unparsable simple renderer write duplicate annotation optimise functional renderer prefix manager fix null pointer exception load ontology fix empty ontology return fix obo ontology parse throw nullpointer update osgi setting oboformat module name dependency fix bundle configuration oboformat november feature add default method return value visitor adapter reimplement nodeid inner class parse thing like xsd string easily obo parser replace oboformat original bug fix fix wrong name gzip source target add stream version restore unparseableontologyexception interface add back deprecate parseconstant compatibility pellet cli warn bug november feature gzip read write ability compress gzip input output stream make sure close stream call osgi dependency remove add namespaces innamespace make parserexception extend owlparserexception owlparserexception runtime exception tidy manchester owl syntax parser add documentation getowldatatype owldatafactory add convenience method convert owl2datatype object owldatatype mvn mvn deploy make aggregate source available add well know namespaces remove non explanatory comment add rdfa core initial context prefix well know prefix prefix name github add rdfa core initial context prefix extend namespaces enum common prefix bug fix fix fix rdfgraph getsortedtriplesforsubject throw exception java7 refactored triplecomparator rdftriple rdfnode comparable dlqueryexample print stringbuilder answer fix null anonymous individual parse objecthasvalue owl xml fix man syntax parser give facet unexpected datatype fix manchester owl syntax parser precedence correctly fix functional syntax parser support comment fix parse error swrl atom fix round trip error functional syntax fix setaddmissingtypes log disable miss serialization transient test serialization bug fix patch iri create string string match iri create string july feature refactored defaultprefixmanager expose addprefixes update pom osgi compatible artifact allow override defaultprefixmanager prefixowlontologyformat add collectionfactory getexpectedthreads reduce expect thread improve general performance bug fix literal parse error stop hermit error osgi support stop protege feature fix typo website htdocs reasoner html fix bug large integer value parse negative ints fix infinite recursion cyclic import structure revert threadlocal cause memory leak webapps bug swrl roundtrip manchester syntax may feature update implement feature add method get entitytype name update iri prefix cache thread local cache rather synchronize cache add test annotation retrieval anonymous individual weakindexcache vulnerability fix improve redirect follow add method owlontologyloaderconfiguration disable cross protocol redirect urlconnections add parameter owlontologyformat temp default disable update javacharstream version fix utf bom issue travis integration github update interface getblocker method osgi compatible remove iri tostring call check blank nod change log remain triple memory update javadoc update mockito bug fix bug iri create string look namespace fragment bug manchesterowlsyntax round trip problem disjoint class bug single anonymous individual split save rdf bug redirect follow bug serve ontology github well bug github miss method owlindividual bug incorrect javadoc owl2datatypeimpl redundant javadoc bug axiom annotation parse correctly bug null pointer check containment anonymous ontology bug turtle parser fail load valid turtle document bug owlapi temp folder bug duplicate axiom save owl functional syntax bug add assertion ability parse bug turtle parser integer format problem ontologyalreadyexist bug call make fast jan feature implement update owlfunctionalsyntaxfactory method remove deprecate method call test package break small package web site update add version management bug fix change versioninfo message default provide information bug fix annotationchange annotationchangedata bug fix simplerenderer render subdatapropertyofaxiom wrong bug fix qnameshortformprovider swap prefix iri bug fix simplerenderer escape double quote literal december feature implement repository migrate git fix memory leak owlobject signature never release cache improve serializable make timeout property functional make owlaxiomchange isadd clean documentation page javadoc owlrdfvocabulary add owlontologymanager removeontology ontologyid add new constructor setontologyid bump minimum java version improvement owlontologymanager relate contrib lack support owlontologymanager version iris parser throw error instead runtimeexception bug fix owlliterals optimise xsd float xsd int optimisation primitive type make reasoner queasy combination w3c test hashcode literal inconsistent misuse xmlutils getncnamesuffix owlontologydocumentalreadyexistsexception owl api iri isabsolute method owldatafactory getrdfplainliteral create new object rdf plainliteral allow owl2el datatypes september feature owlrdfvocabulary javadoc improvement owlontologymanager relate contrib bug fix rdf functional round trip problem anonymous individual round trip problem owl functional rdf xml syntax bump minimum java version fix bug move request feature request manchester syntax import import multiple ont doc contain ont fail unhelpful manchester parse exception typeontologyhandler tpversionirihandler overwrite ontologyid manchester owl parser handle range rule annotation assertion lose annotation prop undeclared turtle parse turtle contain relative iris switch version snapshot qnameshortformprovider deprecate miss import report manchester owl syntax bom parse wrong versioninfo owl api release parse hasvalue restriction pun property fail rdf xml round trip problem way equivalent class mansyntax fail read ontology single property turtle parser handle qnames empty name part august version restructure maven module module api impl parser tool apibinding contract unchanged organization svn change split dependency accordingly defaultexplanationorderer contract explanationordererimpl depend owlmanager directly enable tool module different apibinfing without recompilation bug fix manchester syntax parser parse disjointunionof datafactory return integer instead double restriction property cycle detection work owlequivalentobjectproperties subobjectpropertyofaxioms owlrdfconsumer geterrorentity counter thread safe remove share static owlontologyxmlnamespacemanager arraylist instead treeset turtlerenderer atomicinteger owlontologyid counter may version wrap together minor bug fix performance improvement load time memory footprint large ontology maven support much improve thank thomas scharrenbach effort peter ansell feedback suggestion feature performance improvement load time bug fix obo parser update compliant late draft obo syntax semantics spec obo parser expand xref value integrate openrdf maven snapshot version development junit maven test scope mvn clean require gpg key owlontologymanager contain iri bug functional manchester syntax writer prefix problem syntacticlocalitymoduleextractor subannotationpropertyof ignore import list wrong iris owlliteralimpl corrupt non ascii unicode owlontologyxmlnamespacemanager qname problem multiimportstestcase assume incorrect work directory mismatch haskeytestcase correspond resource functional renderer owlobjectrenderer swap swrl variable maven fail dependency issue manchester owl syntax handle rule anon class rdfturtleformatter escape rdf consumer check annotate axiom triple parse serialization haskey literal builtin owl api throw nullpointerexception load ontology july version api release lgpl apache license developer therefore free choose feature tutorial add follow owled tutorial subpackage tutorialowled2011 visitor determine whether set axiom horn shiq ontology add hornaxiomvisitorex java bug fix test extra module copyright notice update new license fix may version api release lgpl apache license developer therefore free choose bug fix maven support fix minor problem rdfs literal fix parser renderers various language corner case error fix error owlontologymanager removeaxioms throw concurrentmodificationexceptions call specific axiom type fix owlontologyloaderconfiguration introduce provide ontology wise parse configuration strict lax parse mode enable option come parser long leave stream open parse error detect february bug fix rdf base serialisation type triple entity define axiom get add even renderer instruct type undeclared entity relate fix rdf parser would recognise xsd datatypes owl datatypes even lax parse mode relate fix owlontologymanager createontology method set document iri create ontology adverstised ontology iri mapper instal fix february bug fix issue inf serialisation infinity float point literal fix null pointer exception throw obo parser fix owlontologymanager loadontology throw unchecked exception illegalargumentexception fix owlontologyalreadyexistsexception get wrap parse exception obo parser fix owlrdfconsumer owl rdfparser owl datatype instead rdfs datatype fix owlontology getdisjointunionaxioms work expect fix anonymous ontology get type owl ontology save rdf fix owlontology hashcode implement properly fix january version api include various bug fix performance enhancement since version bug fix various round trip problem various syntax plain literal render incorrectly fix cyclic import ontologyalreadyexistsexception throw fix owlaxiom getannotatedaxiom merge annotation fix owlobject getsignature return unmodifiable collection fix various problem character encode fix iri create memory leak fix import location work fix various problem anonymous individual fix dublin core vocabulary owl api parser fix leave open parse error fix august version api include various bug fix enhancement since version feature change representation literal please note slight incompatibility version version due change way literal represent handle api disparity describe owl specification represent version api change bring inline owl specification change follow owlstringliteral owltypedliteral remove replace owlliteral version owlliteral super interface owlstringliteral owltypedliteral client therefore need replace occurrence owlstringliteral owltypedliteral owlliteral method call need change method owlstringliteral owltypedliteral correspond method owlliteral note literal type regard owlstringliterals owlliterals datatype rdf plainliteral although change introduce slight backward incompatibility previous version api believe handle literal much clean follow specification closely change owlreasoner interface owlreasoner interface update method allow fine grain control reason task possible request reasoner classify class hierarchy version prepare reasoner method cause realisation occur well preparereasoner method remove interface due huge amount confusion cause necessary call method get correct name suggest necessary client update replace call preparereasoner appropriate call precomputeinferences javadoc various method clean bug fix annotation declaration axiom save fix owlobjectmaxcardinality restriction incorrectly profile violation owl2rl profile fix owlontology containsaxiom fail various round trip test fix owlobjectpropertyexpression getinverses include property assert inverse fix write large rdf list cause stack overflow save fix system close systemoutdocumenttarget fix owlontologyalreadyexists exception throw import graph contain multiple import ontology fix owlreasoner getsubclasses miss declaration throw list runtime exception get throw fix parse rdf graph contain blank nod nodeids break fix method owlontology return set object change ontology change fix double dash escape xml comment output xmlwriter fix api sometimes print system err fix functional syntax writer write annotation assertion twice fix ontology datasomevaluesfrom restriction incorrectly consider non owl2ql fix ontology functional property incorrectly consider non owl2rl fix owl2datatype xsd_name wrong regex pattern fix rdf render gcis multiple element break fix subobjectpropertyof axiom annotation property chain get parse correctly rdf fix structuralreasoner sometimes crash determine superclass fix simplerenderer render declaration incorrectly fix object property characteristic answer correctly fix owlontology getreferencingaxioms give mutable incorrect fix structuralreasoner call owlclassexpression asowlclass anonymous class fix skosvocabulary date fix regular expression xsd double extra white space fix structural reasoner sometimes miss subclass owl thing fix owlontologymanager getimportsclosure fail reload fix prefixowlontologyformat method remove prefix fix rdf xml render unicode character ugly fix turtle parser parse share blank nod correctly fix january version incompatible previous release many interface name change order acheive close alignment name owl structural specification functional style syntax see opportunity clean method name also take april feature add support ant owl namespaces change owl old ontology write owl11 namespace still load convert owl2 namespace update rdf parser rdf rendere support alldisjointclasses alldisjointproperties add ability save ontology turtle add ability load ontology write turtle add explanation contribute clark parsia add renderer contribute olaf noppens add new comprehensive parser contribute olaf noppens parser parser version syntax racer add ability specify connection timeout url connection via system property owlapi connectiontimeout default value timeout second add method owlontologymanager clear register uri mapper add method owlontologymanager import obtain import declaration add convenience method owlontologymanager add set axiom ontology without create addaxiom change add makeloadimportsrequest method owlontologymanager parser loader order load import add ability set option silent miss import handle owlontologymanager option set exception throw import find load possible set listener get inform import find exception get lose entirely add ability add ontology loader listener owlontologymanager listener get inform load process ontology start finish ontology load whether successfully load etc add method owlreasonerfactory obtain human readable name reasoner factory create add convenience method owlontology obtain reference entity add convenience method owlentity check whether entity owlclass owlobjectproperty owldataproperty owlindividual owldatatype also add asxxx obtain entity specific form add convenience method owldatafactory create disjoint class axiom equivalent class axiom add general purpose renderer interface owlobjects add owlinconsistentontologyexception inference module add skos core list well know namespaces add skos vocabulary enum add method owlontologymanager interface ontology save output target well uri add owlontologyoutputtarget enable write directly outputstreams writer add stringoutputtarget write ontology buff obtain string add new input source streaminputsource readerinputsource fileinputsource rdf parser make classexpression translator selector intelligent property type either object property triple examine make appropriate choice owlrestricteddatarangefacetvocabulary add method obtain facet symbolic name bidirectionalshortformprovider add method obtain short form cache provider add option turn tabbing render manchester syntax add documentation method add ontology uri mapper improve error handle load ontology error nothing parse error unknown host exception factory rethrow error early opportunity rather try parser update parser throw manchesterowlsyntaxontologyparserexception specific type owlparserexception update bidirectionalshortformprovideradapter functionality track ontology change update render cache depend whether entity reference add latex renderer render ontology axiom latex format add ability parse ontology write manchesterowlsyntax add urishortformprovider general purpose interface provide short form uris change simpleshortformprovider simpleurishortformprovider base make tostring render default pluggable via tostringrenderer singleton class add convenience method owldatafactory make create certain type object tedious specifically objectintersectionof objectunionof objectoneof dataoneof create method take variable number argument owldescriptions owlindividuals owlconstants appropriate also add convenience method create type literal directly java string ints double float booleans createowltypedconstant create type literal lexical value datatype xsd integer add convenice method create entity annotation without manually create owlannotation object add getaxiomtype method owlaxiom interface convenience add functionality debug module order explanation add generic infer axiom generator api add new constructor owlontologynamespacemanager possible override ontology format hint generate namespaces add dlsyntax renderer module renderer axiom etc traditional dlsyntax unicode dlsyntax symbol modify rdfxmlnamespacemanager select minimal amount entity namespaces need generate namespaces generate class owlclassassertionaxioms property owlobjectpropertyassertionaxioms owldatapropertyassertionaxioms basically correspond place valid qnames need entity add add declaration dangle entity rdf graph contain clsa reference axiom would drop parser change declaration axiom add ontology case hopefully owl spec update something like map rdf graph add utility class axiomsubjectprovider give axiom return object regard subject axiom give subclassof clsa clsb clsa regard subject modify ontology uri short form provider provide nice look short form add convenience method get individual assert instance owlclass common lang long api replace lightweight utility class order escape string remove fragment module replace profile module profile currently implement add support extend visitor return object visit method turn log rdf parser class default bug fix getontologyuris method autourimapper would return physical rather logic uris fix namespaces annotation uris generate fix remove subclass axiom ontology axiom add ontology gci fix parse ontology accept type set include rdf xml mean ontology parse correctly server configure return rdf html depend request type owl xml writer modify write datatype uri attribute name correctly previously name write datatype however datatypeuri owl xml parser modify literal handler parse literal correct datatype uri attribute name datatype datatypeuri constructor require manager bidirectionalshortformprovideradapter rebuild cache fix unqualified cardinality restriction render qualify cardinality restriction fix save ontology would fail necessary directory exist fix render anonymous property inverse owl xml incorrect fix label comment annotation functional syntax parse properly parse regular annotation fix owlxmlparserhandler handler negative property assertion register fix annotation anonymous individual value render correctly fix rdfxmlontologystorer rdfxmlrenderer always ontology format obtainable manager regardless whether custom ontology format specify fix rule contain individual value object could render fix declaration axiom automatically add property whether ontology contain declaredas triple fix anonymous property render correcty fix rdf render sub property axiom whose sub property property chain old render render comply late owl specification ontology old render still parse rdf list reorder render fix
Semantic web;https://github.com/d2rq/d2rq;d2rq database rdf mapper d2rq expose content relational database rdf consist d2rq map language write mapping database table rdf vocabulary owl ontology d2rq engine sparql sql rewriter evaluate sparql query map database extend arq query engine part apache jena d2r server web application provide access database via sparql protocol link via simple html interface homepage documentation d2rq homepage license apache license version contact feedback discussion please issue tracker github feature bug discussion support request source prerequisite need tool order able d2rq depend operate system may may already instal fork source repository github git command line see java late compile java source java version javac command line see apache d2rq ant command line see get source get fork github repository clone fork directly clone main repository ant d2rq apache ant system ant project main directory get overview available target d2rq tool need least ant jar ant allgenerate distribution zip tar format ant cleandeletes generate artefact ant compilecompile project class ant compile testscompile test class ant jargenerate project jar ant javadocgenerate javadoc api documentation ant targenerate distribution tar format ant testrun test ant vocab configregenerate config vocabulary turtle source ant vocab d2rqregenerate d2rq vocabulary turtle source ant wargenerate war archive deployment servlet container ant zipgenerate distribution zip format d2rq ant jar test various component let assume mysql database call mydb machine generate default map generate map mydb ttl database dump database create dump dump contain map rdf triple format d2r server start server deploy d2r server servlet container edit webapp web inf web xml point configfile parameter location map war ant war deploy war copy servlet container webapps directory unit test unit test execute ant test unit test rely mysql present require database create database call iswc contain doc iswc mysql sql echo create database iswc mysql root mysql root iswc doc iswc mysql sql empty database call d2rq_test
Semantic web;https://github.com/architolk/Linked-Data-Studio;link studio link studio lds platform creation link lds extension link work version link theatre want link theatre see instruction link studio also try release ldt war want create new release lds please look instruction create new release link instruction deploy link studio tomcat container follow instruction deploy deploy also opt docker installation see docker docker link studio configuration graph contain triple make lds configuration instruction create configuration find link theatre security firewall proxy certificate documentation link
Semantic web;https://github.com/AKSW/rocker;rocker refinement operator key discovery demo demo rocker quality offer web interface accessible apis computation large datasets please follow guide terminal first full jar also contain require dependency datasets available oaei benchmark artificial dbpedia real rocker recommend experiment machine least ram maven java library may also java without dependency basic usage cite rocker please refer soru marx ngonga ngomo rocker refinement operator key discovery proceed 24th international conference world wide web www
Semantic web;https://github.com/larsga/Duke;duke duke fast flexible deduplication entity resolution record linkage engine write java top lucene late version see duke find duplicate customer record kind record database connect record set record represent thing another set duke sophisticate comparators handle spell difference number geopositions probabilistic duke handle noisy good accuracy feature high performance highly configurable support csv jdbc sparql ntriples many plug source comparators genetic automatically tune configuration command line client get start embed kind application support batch process continuous process maintain database link find via jndi jdbc multiple thread gettingstarted explain get start link documentation page list real duke complete configuration big picture background contribution whether issue report patch much welcome please fork repository make pull request support java question problem please register issue issue tracker post mail want join list always write larsga garshol priv duke maven duke host maven central want duke easy include follow pom source instal easy give command mvn package root directory produce jar target subdirectory module old documentation blog describe basic approach take match record deal lucene base lookup describe early slow prototype early describe idea behind engine intend architecture
Semantic web;https://github.com/ncarboni/awesome-GLAM-semweb;awesome glam semweb curated list various semantic web link resource heritage humanity art history practitioner list extension semantic web awesome specifically target glam gallery library archive museum semantic web awesome reference general solution list specifically target domain resource belong general list ontology specific software widely within community documentation target practitioner point contact exchange purpose provide reader complete stand alone resource element semantic web awesome report also list public contribution welcome semantic web standard recommendation semantic web standard recommendation rdf rdf rdfs rdfs owl owl shape shape sparql sparql rdfa rdfa link fragment ldf link fragment ldf link notification link notification link platform link platform serialization serialization ontology ontology cidoc crm cidoc crm cidoc crm official extension cidoc crm official extension cidoc crm unofficial extension cidoc crm unofficial extension cidoc crm frbroo tutorial cidoc crmfrbroo tutorial cidoc crm documentation cidoc crm documentation gemeinsame normdatei gnd gemeinsame normdatei gnd europeana europeana dublin core dublin core open archive initiative object reuse exchange oai ore open archive initiative object reuse exchange oai ore encode archival context corporate body person family eac cpf encode archival context corporate body person family eac cpf ica expert group archival description egad ica expert group archival description egad metadata object description schema mads metadata object description schema mads bibframe bibliographic framework initiative bibframe bibliographic framework initiative bibo bibliographic ontology specification bibo bibliographic ontology specification resource description access ontology resource description access ontology premis premis world wide web consortium w3c world wide web consortium w3c others others find ontology find ontology map tool map tool x3ml x3ml karma karma ontop ontop vocabulary vocabulary general general france france italy italy find control vocabulary thesaurus find control vocabulariesthesauri vocabulary management vocabulary management vocabulary validation conversion tool vocabulary validation conversion tool exchange discussion exchange discussion conference conference conference specifically semantic web strong tie community conference specifically semantic web strong tie community discussion group discussion group academic journal academic journal knowledge graph management knowledge graph management link platform ldp link platform ldp book book editor editor textmate textmate sublime text sublime text bbedit bbedit vim vim emacs emacs intellij intellij management management openrefine reconciliation service openrefine reconciliation service validation validation iiif iiif misc misc prefix prefix ontology ontology documentation documentation management management alignment alignment conversion conversion visualisation visualisation image image semantic web standard recommendation rdf rdf rdf rdf concept abstract rdf semantics rdf xsd rdfs rdf schema owl owl web ontology language document owl web ontology language shape shacl shacl sparql sparql sparql query sparql sparql service sparql federate sparql query json sparql query csv tsv sparql query xml format second sparql entailment sparql sparql graph store http rdfa xhtml rdfa third rdfa lite second html rdfa second link fragment ldf link link notification link link platform link platform link platform best practice link platform link platform test serialization format description mime type terse rdf triple language text turtle application turtle plain text format serialize name graph rdf datasets application trig application trig json base serialization link application json rdf json alternate serialization application rdf json line base syntax rdf datasets application triple line base syntax rdf datasets application quad text nquads text nquads notation3 readable rdf syntax text text rdf rdf xml syntax specification application rdf xml application xml rdf triple xml application trix binary rdf representation publication exchange application binary rdf another rdf encode form ontology cidoc crm official website cidoc crm official version cidoc crm available rdf direct link late version available page owl version cidoc crm direct link late version available page cidoc crm periodic visualize search crm user friendly interface cidoc crm official extension provenance metadata scientific observation argumentation functional requirement bibliographic record bibliographical information property crm ary relationship direct link crm late crm version spatiotemporal archaeological study ancient text excavation cidoc crm unofficial extension visual iconographical representation describe musical performance record cidoc crm frbroo tutorial long video tutorial stephen require flash short video tutorial george frbroo cidoc crm documentation official website best reference ready make pattern describe person artwork document event consortium open research basic share pattern interoperable crm link art museum application profile crm json project canadian heritage information foster development lod heritage institution include base cidoc crm gemeinsame normdatei gnd gnd authority europeana dublin core dcmi metadata open archive initiative object reuse exchange oai ore encode archival context corporate body person family eac cpf eac cpf description ontology link archival ica expert group archival description egad record context conceptual record context ontology metadata object description schema mads bibframe bibliographic framework initiative bibo bibliographic ontology specification resource description access ontology rda premis digital preservation metadata world wide web consortium w3c web annotation basic geo wgs84 lat long vocabulary skos simple knowledge organization system skos simple knowledge organization system extension label vcard ontology describe people organization describe link datasets void vocabulary time ontology owl organization ontology vocabulary describe quality metadata represent provenance information others friend friend foaf ontology relation ontology relationship type share across multiple ontology vocabulary describe relationship people vocabulary describe biographical information structure internet google microsoft yahoo yandex semantic publish reference ontology geosparql creative common right quantity unit dimension type ontology vocabulary ontology unit dimension measurement ontology find ontology link open map tool map tool transform csv xml rdf x3ml x3ml transformation engine develop forth perfect work cidoc crm however work greatly ontology well available web application stand alone app x3ml case input xml transform csv xml see order transform necessary create x3ml declaration uri map together necessary command available address consortium open research karma information integration tool aggregate harmonise transform diverse source csv xml json kml web apis process drive ontology transformation original rdf graphical user interface help user map moreover recognize map ontology class ontology propose tie together class karma help user transform normalise ontop application develop university bolzano create virtual rdf graph top current source mapping easily create queryable sparql moreover support reason vocabulary general getty art architecture getty union list artist thesaurus geographic iconclass keyword help cerl book heritage library congress subject thesaurus graphical nomenclature museum help france thesaurus designation objets liste autorite action pour indexation archive liste autorite contexte historique pour indexation archive liste autorite typologie documentaire pour indexation archive nomenclature technique thesaurus designation uvres architecturales espaces thesaurus matieres pour indexation archive vocabulaire activites entites productrices vocabulaire domaines action objets entites productrices vocabulaire pour technique italy thesaurus portale della cultural italiana soggettario biblioteca nazionale centrale china chinese iconography thesaurus find control vocabulary thesaurus vocabulary management access skos vocabulary sparql api web base multilingual collaborative platform manage owl skos generic rdf datasets collaborative management alignment vocabulary multilingual collaborative management skos vocabulary management system semantic web manage share publish skos vocabulary vocabulary validation conversion tool validate convert improve skos vocabulary find quality issue skos vocabulary skos render visualise thesaurus taxonomy control vocabulary furthermore convert excel spreadsheet skos exchange discussion conference international semantic web conference iswc european semantic web conference eswc cidoc icom international committee workshop humanity semantic web semantic web lodlam conference specifically semantic web strong tie community international conference theory practice digital library international conference metadata semantics european library automation digital heritage europeana discussion group cidoc crm sig mail lodlam link open library archive museum community w3c semantic web mail w3c link open mail glam wiki wikidata glam wiki facebook academic journal semantic web journal web international journal web semantic knowledge graph management proprietary opensource free version platform manage interact entry point template graph author rdf store specifically target glam researcher institution platform manage interact entry point template graph author rdf store drupal base platform interact entry point rdf store collaborative information management rdf graphdb rdf database knowledge graph link platform ldp repository platform native link support warp ldp manager apache link platform link platform epimorphics link server book link explorer guide semantic semantic web semantic web work program semantic ontology basic formal structure organize knowledge explore taxonomy ontology validate rdf demystify owl knowledge editor textmate sparql turtle sublime text turtle sparql syntax sparql turtle trig triple quad notation3 syntax bbedit turtle syntax vim sparql syntax highlight emacs intellij sparql language plugin intellij idea management management enrichment share clean normalisation openrefine reconciliation service openrefine reconciliation service viaf orcid open library available make work necessary launch jar endpoint available openrefine reconciliation service available make work necessary launch script endpoint available reconciliation service offer endpoint openrefine possible add column reconcile value social archival context endpoint openrefine nomisma provide stable digital representation numismatic concept endpoint openrefine open database company endpoint openrefine getty research openrefine reconciliation service getty vocabulary ulan tgn aat openrefine reconciliation service nomisma endpoint openrefine documentation openrefine reconciliation service available pleiades openrefine reconciliation service pleiades endpoint openrefine information openrefine reconciliation service godot endpoint openrefine validation validator shacl scala shex shacl possible demo version web interface rdf test suite include limit shacl dotnetrdf shacl procecssor check conformance validate graph shape graph shex editor shex simple online validator shex iiif international image interoperability awesome iiif relate misc prefix source prefix website ontology documentation ontology documentation environment ontology documentation include lode management ontology management environment collaborative graphical ontology design alignment link integration framework ontology alignment gui alignment tool express generate share ontology alignment conversion rdfconvert simple command line tool convert rdf betweeen different syntax format java tool convert rdf format format take input intermarc xml unimarc xml generate output rdf command line tool concatenate ntriples document diff web apis sparql query visualisation ontology tool visualise rdf convert rdf dot graphviz construct visual representation image platform link rdf description image
Semantic web;https://github.com/blokhin/genealogical-trees;semantic web genealogical tree rationale logical reason apply graph genealogical tree define kinship type top genealogical tree seem perfect case semantic technology source gedcom format ged common exchange genealogical information aid rdflib gedcom library gedcom convert owl ontology abox turtle syntax ttl extension adopt tbox family history knowledge base see note fhkb ontology although small unusually complex role hierarchy rather hard modern reasoner reason naive owl profile infer possible triple ontology finally convert json format graph browser visualization inside bundle html5 web app mean javascript library repository summarize script like upload visualize bundle html5 web app server script copy currently host github locally serve web server process require library list instal virtualenv highly recommend blog tutorial remark fhkb note however follow fhkb author probably wish drive genealogical application fhkb form purpose educational touch owl show lot also considerable amount inference maximise fhkb break owl reasoner time write however serve role teach owl owl style really work family history remark reason reason naive owl profile slow take hour relatively big family tree therefore fast native reasoner like fact desirable wrap bind fact perform order magnitude fast
Semantic web;https://github.com/cygri/pubby;link server add html interface dereferenceable url top rdf sit sparql store see pubby detail instruction
Semantic web;https://github.com/yyz1989/NoSPA-RDF-Data-Cube-Validator;nospa rdf cube validator introduction rdf cube validator significant difference exist validators base sparql query name nospa jena library manipulate rdf official sparql query constraint check interpret parse validator search function nest statement list function provide jena filter different condition outstanding performance entire process execute memory believe valuable sacrifice memory save time reference knowledge background tool official rdf cube spec rdf cube jena api apache official sparql spec sparql query update late release rewrite function boost performance validate constraint occupy computation time among constraint nospa capable handle cube million level observation add progress monitor validation requirement jdk maven want compile jvm want execute jar directly installation tool write java manage maven compile easily first thing need git clone repository update package jar already upload find release page need need mvn package root directory repository find jar nospa rdf cube validator target nospa rdf cube validator jar note case library jena log4j include package case need package independently need mvn package assembly single root directory repository find jar nospa rdf cube validator target nospa rdf cube validator jar dependency jar include require library validation basically way ide hack main class without make package case need integrate project import package rdf cube validator jar create new validator instance call function normalize validate cube validator validator validatorfactory createvalidator nospa inputpath inputformat validator normalize validator validateall first argument createvalidaotr method type validator option nospa sparql since implement software inputpath path cube inputformat indicate rdf format cube rdf xml turtle triple etc may also want check constraint selectively case validatorfactory type validator different implementions validate constraint individually bite difficulty unify interface validate nospa validator nospavalidator nospavalidator new nospavalidator inputpath inputformat nospavalidator normalize nospavalidator validateic1 nospavalidator validateic20_21 validate sparql validator sparqlvalidator sparqlvalidator new sparqlvalidator inputpath inputformat sparqlvalidator normalize sparqlvalidator validate ic1 sparqlvalidator validateic20_21 ic20 know difference take look maybe get good idea unify future besides please make sure normalize cube check constraint abbreviate form need normalize sure normalize form note validation tool record log need turn log package log configuration project additionally set system property current timestamp value current time part name validation finally validation find user dir validation_result_ current timestamp case need validate cube manually independently need java jar nospa rdf cube validator jar dependency jar nospa sparql first argument path cube validate second argument name validator respectively currently rdf format support see extension name validator nospa power tool sparql official validation sparql query cube jena arq performance constraint check duplicate observation time consume procedure entire validation motivation develop tool mainly tackle issue test cube contain observation test environment ubuntu vmware cpu core 2450m 2ghz memory ordinary hhd time consumption validate validation sparql query virtuoso hour min validation sparql query jena parser min validation nospa sec update performance late release test 230mb cube include 540k observation test environment web server intel xeon cpu 2630l 00ghz memory time consumption sec prospect due lack faluty datasets test may cover case please give feedback suggestion software keep improve quality still work minor change relate functionality plan make fair front end get stabilize
Semantic web;https://github.com/wbsg/sieve;sieve sieve link quality assessment fusion
Semantic web;https://github.com/protegeproject/swrlapi;swrlapi maven swrlapi java api work rule query language include graphical tool edit execute rule query see swrlapi documentation standalone application swrltab api also available get start follow quickly get start api sample swrlapi base project also find library dependency information find maven would like able execute swrl rule sqwrl query need swrlapi base rule engine currently drool base swrl rule engine provide also host maven central dependency information find maven swrlapi manage owl ontology follow illustrate library create swrl query engine ontology create owlapi execute rule ontology show api create sqwrl query engine create execute sqwrl query engine process extensive documentation swrlapi find swrlapi source library must follow item instal java tool check repository apache get copy late git clone change swrlapi directory swrlapi maven mvn clean completion local maven repository contain generate swrlapi version jar jar swrltab standalone tool provide core swrlapi relate component project contain library integration also provide license software license bsd clause question question library please main protege website subscribe protege developer support mail subscribe send message protege dev list stanford edu
Semantic web;https://github.com/AKSW/cubeviz.ontowiki;cubeviz rdf datacube browser cubeviz component provide faceted browse statistical link web set adopt part european union cubeviz utilize rdf datacube state art represent statistical resource description framework vocabulary compatible user increasingly adopt base vocabulary encode cube cubeviz generate facetted browse widget filter interactively observation visualize chart base select structure cubeviz offer beneficiary chart type option select user want read information project background please look page get start find various information new user please visit page get introduction installation setup cubeviz information repository structure internals also find wiki docker container available provide docker container everybody want bother get ontowiki struggle virtuoso container need docker docker pull docker easy basically ship fully fledge ontowiki pre fill virtuoso store cubeviz start container browser directly cubeviz pull container docker pull aksw dld present cubeviz please docker aksw dld present cubeviz information please look follow project page project page cubeviz compare tool last update create comparison cubeviz tool support datacube vocabulary base support element mention vocabulary purpose overview provide user interest cubeviz information datacube vocabulary support comparison tool encounter erros want mention something please make pull request create issue send email similar like cubeviz equivalent support feature cubeviz opencube ldcx lsd analysis explore rdf select part select unit measurement multiple chart visualization configure dimension collaborative exploration edit explore compare datasets compare meta information observation value normalization set dimension element show cluster csv turtle hierarchy slice olap operation sum avg pivot mobile analysis task script server side geospatial visualization visualization dimension link mention tool lsd miss support cube vocabulary follow list contain element datacube vocabulary support cubeviz yet observationgroup indicate group observation domain property leave open group may attach different resource need restrict single codedproperty superclass cod component property hierarchicalcodelist represent generalize hierarchy concept cod hierarchy define root together property relate concept hierarchy child concept concept may member multiple hierarchy provide different parentchildproperty value hierarchy hierarchyroot specify root hierarchy hierarchy may multiple root must least parentchildproperty specify property relate parent concept hierarchy child concept note child may parent componentattachment indicate level component property attach might slice observation measureproperty componentrequired indicate whether component property require true optional false context dsd applicable component correspond attribute default false optional order indicate priority order component set structure guide presentation low order number come high number number component come last concept give concept measure indicate componentproperty skos sdmx relate entity license cubeviz license term gnu general public license foreign library detail look
Semantic web;https://github.com/ontop/ontop;maven github branch status ontop ontop virtual knowledge graph system expose content arbitrary relational database knowledge graph graph virtual mean remain source instead move another database ontop translate express knowledge graph sql query execute relational source rely r2rml take advantage lightweight ontology compile pack test etc project project compile unit test release binary maven currently maven java project link official website sourceforge docker github google travis license ontop framework available apache license version documentation license creative attribute license
Semantic web;https://github.com/lukostaz/prissma-studio;prissma studio prism designer prissma prissma studio browser web application create prism prissma vocabulary inria prissma prissma_v2 html prissma studio support designer creation lens format ease definition associate prissma create prism store system prissma equip mobile device process prissma selection installation clone repository git clone dependency bower demo check prissma studio demo licence copyright luca costabello program free software redistribute modify term gnu general public license publish free software foundation either version license option late version program distribute hope useful without warranty without even imply warranty merchantability fitness particular purpose see gnu general public license detail receive copy gnu general public license along program see contact detail prissma project contact luca
Semantic web;https://github.com/oeg-upm/gtfs-bench;gtfs madrid bench present gtfs madrid bench benchmark evaluate declarative construction engine provision access mechanism virtual knowledge graph proposal introduce several scenario aim measure performance scalability well query capability kind engine consider heterogeneity source benchmark derive subway madrid transform several format csv json sql xml scale query set aim address representative number sparql feature cover usual query consumer may interest main publication david chaves fraga freddy priyatna andrea cimmino jhon toledo edna ruckhaus oscar corcho gtfs madrid bench benchmark virtual knowledge graph access transport domain journal web semantics cite gtfs madrid bench gtfs madrid bench work please cite virtual kgc reproduce resource provide materialize kgc reproduce resource provide requirement locally instal decide distribution test standard distribution source represent format gtfs csv gtfs json gtfs sql custom distribution source represent format select user shape json calendar csv etc madrid gtfs bench docker image always ensure last version docker image docker v20 late docker pull always itv pwd output oegdataintegration gtfs bench previous version docker pull oegdataintegration gtfs bench docker itv pwd output oegdataintegration gtfs bench choose scale format obtain distribution want test provide first scale line separate comma select standard distribution none need configuration custom distribution want generate several custom distribution generator several time demo gif misc gtfs demo gif available zip current work directory folder structure folder datasets query virtual inside datasets folder folder distribution csv sql custom distribution folder provide require size size folder correspond map associate distribution sql scheme need consider repeat resource scale level mapping sql path define distribution level agency csv management perform correct evaluation user script visit folder provide idea manage see follow resource additionally generator engine provide desirable scale distribution together correspond mapping query also common resource openly available modify practicioner developer folder contain rml mapping csv xml json rdb distribution input gtfs r2rml map rdb xr2rml map mongodb also include csvw annotation csv distribution folder include query different level complexity include representative set sparql operator additionally folder contain simple help test basic capability virtual construction engine understand engine able translate correctly sparql operator different gtfs distribution start test performance scalability utils experience test virtual knowledge graph engine reveal difficulty set infrastructure many variable resource involve database raw mapping query path map path database connection etc reason order facilitate benchmark developer practitioner provide set docker compose template evaluation bash script opinion reduce time prepare test set desirable metric highly recommend virutalizers materializers construction engine test benchmark provide least follow metris total execution time number answer memory consumption initial delay dief continuous stream behavior dief continuous stream behavior virtual knowledge graph system also encourage developer tester provide load time map translation time apply number request source selection time query generation disitribution time query rewritting time query translation time query exececution time aggregation time package available extension license datasets generate benchmark follow license consorcio regional transporte madrid contribute know variable dimension take account current version benchmark transformation function define map rule interest collaborate new version benchmark send email open new author david chaves fraga dchaves upm mailto dchaves upm freddy priyatna jhon toledo daniel dona edna ruckhaus andrea cimmino oscar corcho ontology engineer group october present
Semantic web;https://github.com/uzh/triplerush;triplerush distribute memory graph store triplerush distribute memory graph store support sparql select query design take full advantage cluster resource distribute parallelize query process develop eclipse typesafe ide scala ensure eclipse java library jvm preference java instal jres jre jdk instal select import project eclipse import maven exist maven project select triplerush folder thank lot university hasler generously fund research graph process github help host travis offer convenient continuous codacy give automate
Semantic web;https://github.com/AKSW/RDFUnit;rdfunit rdf unit test suite maven coverity scan coverage codacy codebeat project homepage documentation slack rdfunit mail list rdfunit googlegroups com presentation brief overview rdfunit implement top test drive validation design read produce rdf comply ontology main component rdfunit read testcases manual automatic pattern rdfunit also strictly define testsuite execution along different level content basic usage basic usage docker docker support schema support schema acknowledgement acknowledgement basic usage see rdfunit command bin rdfunit lot option simple set follow rdfunit get statistic property class get namespaces try dereference exist test schema generate rdfunit test case rdfunit test case get report html default request even multiple serialization html turtle jsonld default aggregate count request different level detail status aggregate shacl shacllite see detail also define schema pick step also prefix directly foaf skos get everything define docker dockerfile provide create docker image cli rdfunit create docker image mean execute rdfunit command shutdown container output rdfunit stdout enough want include container directory could mount via docker order create output include usage create temporary docker container command print stdout stop plus remove usage cli visit support schema rdfunit support follow type schema owl cwa pick common owl axiom well schema org see detail shacl full shacl almost available except shacl whatever construct support also directly sparql endpoint ibm resource shape progress track soon shacl become stable drop support dsp dublin core set profile progress track soon shacl become stable drop support dsp note mix constraint together rdfunit validate acknowledgement first version rdfunit formely know databugger develop aksw part phd thesis dimitris kontokostas lot additional work improvement requirement refactoring perform fund project project lot project partner provide feedback contribute like wolters kluwers germany semantic web company also user rdfunit also many well people submit bug report provide constructive feedback addition rdfunit java profiler optimization
Semantic web;https://github.com/tarql/tarql;tarql sparql table tarql command line tool convert csv rdf sparql syntax write java base apache arq see documentation get github tarql maven create executable script window unix target appassembler bin tarql mvn package appassembler assemble otherwise standard maven
Semantic web;https://github.com/lanthaler/HydraClient;hydraclient work progress documentation follow meantime check
