Label;Repo;Text
Semantic web;https://github.com/CMU-Q/DREAM;dream distribute rdf engine adaptive query planner minimal communication rdf sparql query language gain wide popularity acceptance dream hybrid rdf system combine advantage avert disadvantage centralize distribute rdf scheme particular dream avoid partition rdf datasets reversely partition sparql query partition datasets dream offer general paradigm different type pattern match query entirely preclude intermediate shuffle auxiliary shuffle partition query dream suggest adaptive scheme query different number machine depend complexity dream achieve goal significantly outperform relate system via employ novel graph base rule orient query planner new cost dream implement available open source mit license dream dream directly github repository github also offer zip repository git git command line clone repository current version dream test ubuntu linux bite require bite operate system dependency dream follow dependency mpich engine part dream unpack binary id2name usage wiki provide guide dream cluster contribute fork create feature branch git checkout new feature commit change git commit add feature push branch git push origin new feature create new pull request
Semantic web;https://github.com/wastl/rdfdot;rdfdot tool draw graph rdf graphviz implement java java native interface call graphviz demo access demo demo time simply cut paste turtle rdf xml document optionally change configuration press render rdfdot come several different renderers access graphviz layouting library different approach call _dot_ process external command java require graphviz instal accessible server java native interface library provide rdfdot fast require manual compilation external command first approach simple standard maven mvn clean dskiptests dskiptests necessary moment test require jni library work properly java native interface want jni library please follow follow sequence mvn clean rdfdot core src main native make mvn call make necessary library compile link statically jni library rdfdot note test work linux instal rdfdot currently consist library rdfdot api rdfdot core project web application rdfdot web deploy java web container rdfdot properly instal simply add approprate maven dependency project net wastl rdfdot rdfdot core snapshot want fast jni render library necessary copy libgraphviz library appropriate location call java djava library path path location library usage configuration rdfdot api library contain class graphconfiguration set layouting configuration option graph currently support change node style shape color fillcolor uri bnode literal nod well arrow shape style color edge furthermore possible change layout direction graph default leave right available option define enums arrow layout shape style rdfhandler visualization library implement sesame rdfhandler anywhere sesame accept rdfhandler rio parser rdfparser setrdfhandler repository query repositoryconnection exportstatements sparql graph query graphquery evaluate initialize rdfhandler follow sequence statement graphconfiguration configuration new graphconfiguration graphvizserializer serializer new graphvizserializernative configuration rdfparser parser rio createparser rdfformat turtle parser setrdfhandler new graphvizhandler serializer parser parse byte image serializer getresult different graphserializers available include graphserializernative jni call graphserializercommand execute command
Semantic web;https://github.com/stain/profilechecker;owl api profile checker university manchester license apache license see license notice require notice author stian soiland reyes requirement apache late note need compile source also stain ralph ubuntu src profilechecker mvn clean package info scan project info info info owl api profile checker info info replace home stain src profilechecker target profilechecker jar home stain src profilechecker target profilechecker shade jar info dependency reduce pom write home stain src profilechecker dependency reduce pom xml info info success info info total time 912s info finish thu feb gmt info final memory 22m 169m info usage help java jar target profilechecker jar usage profilechecker jar profile available profile owl2_dl owl owl2_ql owl owl2_el owl owl2_rl owl owl2_full owl default modify version number correspond output parameter give local name absolute iri default profile ontology iri name check default profile owl full java jar target profilechecker jar exit ontology conform owl full case output stderr specify owl2 profile check specific profile java jar target profilechecker jar owl2qlprofile non superclass expression position require superclass expression exit ontology conform specify profile error log stderr ontology profile specify form order preference owl2_dl enum value iri owl profile relative iri owl profile owl2dlprofile classname profile check profile java jar target profilechecker jar owl2_dl owl2_ql violation owl2_el violation owl2_rl violation owl2_full exit ontology conform profile violation count per profile output stdout warn note warn error log owlapi prefix main ontology load necessarily mean violation profile java jar target profilechecker jar desktop annotate ttl main error manchester owl owlapi owlontologymanagerimpl illegal redeclarations entity reuse entity pun allow owl2_dl violation owl2_ql violation owl2_el violation owl2_rl violation owl2_full
Semantic web;https://github.com/D2KLab/sparql-transformer;sparql transformer write sparql query directly json would like output javascript package try look news parameter librarymode allow perform pagination merge object obtain exactly limit object possible set different merge anchor instead anchor modifier table content motivation motivation query json query json credit credit want watch query json core idea module write single query expect output json syntax support plain json json format query city plain json json syntax compose main part prototype graph proto property contain prototype expect value take query declare follow syntax modifier option subject predicate variable declare automatically assign close mergin anchor structure property exist otherwise default sparql variable name manually var modifier automatically assign modifier present separate sign prepend option give modifier modifier option note require omit clause wrap optional sample extract single value property add sample select lang lang string optional filter language absence language pick first value lang root lang lang lang bestlang acceptedlangs string optional choose best match best_langmatch language accord list express accept language list append express lang root bestlang bestlang var var string specify variable assign query refer root property like filter miss prepended var myvariable var name anchor set property merge anchor set valid current level json tree ignore eventual sibling property anchor set subject sparql statement merge final property reverse set property current variable subject sparql predicate rather object count sum min max avg return respective aggregate function count sum min max avg variable langtag hide show default hide language tag include output hide label bologna show label value bologna language accept string number boolean set value type different specify discard aslist set interest property value would always list even single element way specify map json output property endpoint value non prepended transfer output root property something root property allow make query specific present output query level support property property input note string array add clause triple format dbo city value object set value specify variable map presence lang tag lang attribute attach relate property take account value dbr bari limit number limit sparql limitmode query default library perform limit operation query obtain library string uri define graph select offset number offset apply sparql distinct boolean default true set distinct select orderby string array order variable input orderby desc name age groupby string array group variable input groupby string array allow declare content array item concatenate filter string array add content filter filter mynum prefix object set prefix format foaf lang acceptedlangs string default language bestlang see express accept language lang langtag hide show default hide language tag include output similar inline langtag act global level hide label bologna show label value bologna language context property json version transfer output output query intend plain json array object shape prototype json array object shape prototype graph property sibling context nodejs npm add application browser sparql transformer expose rely technology allow bare import first parameter query query json format json already parse object define real time nodejs local path json read parse option parameter optional define follow option default note context value context overwrite query sparqlfunction null function receive input transform query sparql return promise specify module perform query specify endpoint endpoint sparqlfunction specify debug false enter debug mode allow print console generate sparql query see test test credit module research work please cite pasquale lisena albert merono penuela tobias kuhn raphael troncy easy web api development sparql transformer 18th international semantic web conference iswc auckland new zealand october bib bib lisena2019easyweb bib pasquale lisena raphael troncy transform json output sparql query link client www companion web conference companion april lyon france bib bib lisena2018sparqltransformer bib lightweight sparql client src sparql client mjs
Semantic web;https://github.com/ont-app/igraph;ont app igraph igraph define protocol aim provide general interface variety graph base representation rdf datascript datomic loom also define graph datatype implement igraph minute video introduction content dependency dependency motivation motivation igraph protocol igraph protocol method summary method summary member access member_access normal form normal_form tractability tractability subject subjects_method get get o_method get get o_method ask ask_method query query_method invoke arity invoke_method content manipulation content_manipulation mutability mutability_method add graph multimethod add graph remove graph multimethod remove graph igraphimmutable protocol igraphimmutable add add_method subtract subtract_method igraphmutable protocol igraphmutable add add _method subtract subtract _method igraphaccumulateonly protocol igraphaccumulateonly claim claim_method retract retract_method igraphset protocol igraphset protocol method summary igraphset method summary union union_method intersection intersection_method difference difference_method traversal traversal traverse function traverse_function traversal function traversal_functions context context queue queue traversal utility traversal_utilities transitive closure transitive closure traverse link traverse link maybe traverse link maybe traverse link traverse traverse traversal composition comp traversal_composition short form comp short long form comp long traversal function argument invoke traversal cardinality utilites cardinality 1_utilities unique unique flatten description flatten description normalize flat description normalize flat description assert unique assert unique write write read read utility other_utilities reduce spo reduce spo ont app igraph graph graph graph graph creation graph creation query query sparql client sparql client datascript graph datascript graph datomic client datomic client acknowledgement acknowledgement future work future work license license dependency deploy clojars require thus motivation define characteristic clojure revolve around minimal set basic structure think argue collection primitive clojure approximately order degree expressiveness seq first rest set membership vector indexable member map collection association conceit igraph room new collection primitive high level expressiveness graph collection name relationship name entity inform large degree aim align link encode rdf keep direct dependency minimum igraph protocol protocol define basic operation graph conceive set triple subject object typically name entity property name relation apply entity directly inspire rdf requirement identifier adhere strictly rdf specification uris literal value restrict small set scalar relax quite bite method summary igraph protocol specify follow method member access normal form subject lazy sequence get get ask truthy query dependent query content manipulation mutability read immutable mutable accumulate invoke support ifn normal form truthy member access normal form implemetation protocol regardless _native representation_ must expressable igraph normal form let start graph call triple fact subject john mary fact john person like beef mary also person like chicken normal form tier level map subject level description subject normal form description map property identifier level set object say subject property aim form extremely regular simple lend express think basic set operation graph note keyword identifier keep thing simple readable none keywords practice probably want namespaced keywords igraph interact directly rdf base representation expect tractability expect many igraph memory structure modest size others might huge knowledge base provide server somewhere latter case always acceptable throw igraph intractable method warrant subject subject method must return lazy sequence complete set subject graph modulo tractability get must able get level description subject get get must able get level set object subject predicate get ask must able test whether particular triple graph ask truthy response query must able query graph format appropriate native representation format expect ont app igraph graph graph describe query case set bind map map variable value similar set query comparison sketch equivalent sparql query would appropriate igraph protocol target sparql endpoint might call sparql invoke arity instance igraph must provide invoke follow without argument must return normal form throw igraph intractable single argument must treat argument subject get argument set object must return often value get may also accept argument _traversal function_ describe traversal argument response must truthy often equivalent ask argument traversal function describe traversal content manipulation several factor take account add remove content graph graph public sparql endpoint update permission may subject modification native representation sparql endpoint update permission might best treat mutable graph naturally thing equal prefer solution immutable graph possible readme apply immutable graph mutability mutability method return follow value igraph read mean alter content graph igraph immutable graph implement igraphimmutable igraphimmutable igraph mutable graph implement igraphmutable igraphmutable igraph accumulate graph implement igraphaccumulateonly igraphaccumulateonly approach datomic add graph multimethod igraph define multimethod add graph dispatch type graph function triple format multimethod inform mutable immutable accumulate graph naturally normal form possible format another possible value vector subject least pair finally vector vector igraph support add graph format remove graph multimethod igraph also define multimethod remove graph dispatch graph type function triple removal format multimethod inform mutable immutable graph triple removal format function return keywords triple format add underspecified triple vector element triple removal format assign vector vector flag vector either vector underspecified vector igraph support flag allow subtract format could also add plus igraphimmutable protocol add subtract operation immutable graph return cheap copy original graph modify per argument provide add call add add must return immutable graph graph contain add triple add already graph skip see note add graph add graph multimethod typically add graph easily express vector vector vector normal form graph add another subtract multimethod remove graph support subtract operation dispatch type graph triple removal format describe remove graph igraphmutable protocol graph native representation implement mutable repository support igraphmutable protocol provide method add subtract add graph add graph remove graph remove graph multimethods still inform logic behavior essentially exception graph return object mutate specify add add add argument return value error throw mutablility igraph mutable subtract subtract subtract argument return value error throw mutablility igraph mutable igraphaccumulateonly protocol graph whose native representation base implement datomic call accumulate approach add remove graph support igraphaccumulateonly protocol provide method claim correspond datomic add operation retract scheme state graph roll back point history see datomic detail add graph add graph remove graph remove graph multimethods still inform logic behavior essentially exception graph return point recent state graph make modification give instantiation graph remain immutable claim claim add append graph point recent state error throw mutablility igraph accumulate retract retract retract append graph point recent state error throw mutablility igraph accumulate igraphset protocol make sense many igraph also implement basic set operation define igraphset set operation may suitable large graph purpose demonstration let assume second graph think operation serve describe method summary union new graph triple graph difference new graph triple also intersection new graph triple share graph union intersection difference traversal clojure functional program language idiom allow user create aggregation sequence provide reducer function express relationship member sequence aggregation igraph define traverse function allow user create aggregation content graph provide traversal function analogous reducer function nessesarily bite involve traverse traversal context acc queue acc traverse traversal acc queue acc default context traverse per traversal function start first element queue possibly inform context function repeatedly call traversal function queue empty return final value acc call traversal function return modify version context acc queue illustrate traversal let expand graph add type structure assume graph call type type provide bite context hero john mary note isa subclassof differ _domain_ isa relate instance class subclassof relate class parent traverse function traverse function work start traversal function call subclassof follow accumulate subclassof link start initial queue say meat beer argument traverse invariant graph traversal function acc acc define logic step traversal context optional map hold traversal history plus whatever traversal may want track default acc optional accumulate value traversal default queue start queue traversal function traversal function take argument return vector length first argument invariant graph second argument first element return context subclassof leave unchanged context traverse avoid cycle explain detail context sophisticate traversal function may context kind blackboard third argument second element return value accumulate identical counterpart _reduce_ idiom fourth argument third element return traversal queue must sequential may order way make sense empty queue signal end traversal point traverse return value accumulator possible definition subclassof context context argument traverse traversal function map contain key value may inform course traversal part accumulate value include history set traverse update hold element encounter course traversal order avoid cycle element history skip ever appear head queue traverse function also support optional key context skip optional function truthy applicable head queue override history seek optional function context acc acc specify function call begin traversal truthy non empty traversal end immediately value addition traversal function may context blackboard communicate iteration traversal may want prune order queue base set heuristic detail store context queue queue argument must sequential otherwise unrestricted empty queue signal end traversal point traverse return accumulate value note conj ing vector traversal function suggest breadth first traversal conj ing seq suggest depth first tranversal sophisticate traversal function may context inform logic prune order queue optimize traversal traversal utility igraph provide utility express several common type traversal function transitive closure trasitive closure context acc visit context acc queue return traversal function accumulate _o_ _s_ queue associate _o_ _p_ link subclassof function could define thus traverse link traverse link context acc queue context acc function return accumulate _o_ _s_ _queue_ truthy maybe traverse link maybe traverse link context acc queue context acc match occurrence _p_ traverse traverse context acc queue context acc _ps_ traversal function merge output keyword argument interpret implicit traverse link traversal composition comp composition function composable short form long form short form short form composition traversal function meet follow criterion none component function manipulate traversal context component function accumulate sequential value suitable serve initial queue component function follow function call simple vector long form case want compose traversal function meet criterion instead pas traversal comp vector traversal function pas map follow key call comp equivalent call comp path parameter allow much control need flow context stage traversal flow output stage input queue next stage however time short form sufficient point long form test heavily path parameter vector traversal function specification traversal function specification must either traversal function keyword entry long form map keyword eligible implicit traverse link traverse link traversal function specification function apply directly traversal function specification keyword comp map match entry keyword look interpret map parameter describe next section spec keyword without entry long form map assume candidate implicit traverse link graph element position _g_ traversal specification parameter traversal function doc optional docstring optional container output coerce default local context optional function global context local context produce context stage traversal update local context optional function global context local context global context capture whatever aspect current stage traversal may interest subsequent stag traversal function argument invoke recall igraph provide invoke function argument function involve specification _p_ parameter inform multimethod dispatch whether _p_ function match traverse match traverse truthy typical declaration igraph contain method declaration _p_ argument function _p_ expect match signature traversal function output method value traversal start queue _s_ _p_ function match directly element graph give traversal function cardinality utilites require normal form provide set 3rd tier representation advantage ensure normal form simple regular possible make easy think set operation graph however bite unwieldy deal many case descriptive map key reliably map single scalar value follow utility provide help unique translate singleton sequence value flatten description automatically translate description simple mapping wherever single _v_ exist normalize flat description inverse flatten description assert unique replace singleton object another unique unique function take sequence optional ambiguity argument default ambiguity throw info type igraph non unique sometimes define alias unique read good easy type flatten description normalize flat description inverse flatten description assert unique replace singleton value another assert unique general write normal form graph stream apply reader end fairly straightforward predicate bear reader choke object course need filter point clj platform directly support pair function read write system write write path path write edn normal form content _g_ read read path read normal form content _path_ _g_ utility reduce spo reduce spo acc acc _f_ call triple _g_ _f_ acc acc ont app igraph graph module make igraph available without additional dependency far library ont app project implement protocol plan would interest publish party ont app igraph graph graph igraph library come ont app igraph graph whose graph deftype lightweight igraph native representation normal form hashable object technically provide _s_ _p_ _o_ best practice keep non identifier level want play easily igraph graph creation make graph create new graph optional content argument content argument must normal form query query simple vector triple graph pattern keywords start serve variable return unordered set bind map minimalistic select order group aggregation need downstream call traversal function specify _p_ position sparql client implement mutable igraph sparql initializtion require configure query update endpoint query language keyword identifier expect namespaced rely library namespace metadata intercede clojure namespaces rdf namespaces set operation support datascript graph implement igraph native representation may may need initialize schema declaration query language datalog immutable set operation datomic client implement igraph datomic client query language datalog mutability accumulate set operation support future work port loom ubergraph graph orient library regime provide annotation reify triple weight port table base representation igraph graph query plan index kind scheme bring various query format single tent acknowledgement thank ram feedback advice license copyright eric scott distribute eclipse public license either version option late version natural lexicon logo copyright eric scott artwork athena scott release term license display logo derivates thereof must include attribution original source link
Semantic web;https://github.com/apseyed/SemantGeo;semantgeo
Semantic web;https://github.com/AKSW/HiBISCuS;hibiscus hibiscus hypergraph base source selection sparql endpoint federation source hibiscus source along extension splendid fedx darq checkout project website fedbench fedbench query project website datasets availability datasets correspond virtuoso sparql endpoint project old website usage information follow explain setup bigrdfbench evaluation framework measure performance federation engine sparql endpoint setup first step sparql endpoint portable virtuoso saprql endpoint second table different machine computer best would sparql endpoint per machine therefore need total machine however start sparql endpoint per machine next step start sparql endpoint bin start bat window bin start_virtuoso linux make list sparql endpoint url require input index free sparql query federation engine fedx important note index assist federation engine splendid darq anapsid usually store endpoint url index local sparql endpoint url give second table sparql query provide list sparql endpoint url fedbench query underlie federation engine query evaluation start select system checkout project website give fedx original package package org aksw simba start queryevaluation java fedx hibiscus package package org aksw simba fedsum startup queryevaluation java splendid original package package uni_koblenz west evaluation queryprocessingeval java splendid hibiscus package package uni_koblenz west evaluation queryprocessingeval java anapsid follow instruction give configure system anapsid ivan script runquery query
Semantic web;https://github.com/robstewart57/rdf4h;rdf4h rdf library haskell available hackage badge hackage hackage license bsd3 badge license license status badge travis travis badge travis travis badge hackage hackage badge license license rdf4h library work rdf haskell detail see github project page support ghc version stackage lts stackage lts development nix direnv enter development environment require software also allow prefer instal work development environment future whenever enter directory development environment allow either stack cabal software rdf format coverage w3c rdf standard format parse serialise ntriples complete complete turtle complete complete rdf xml complete support produce version library test w3c unit test rdf format feature request parser library parse large string content entirely generate rdf triple scale large implement stream base rdf parser would overcome problem create input stream enable output stream library consume triple fly parse discus rdf xml serialisation rdf graph test test parser library api specific parser test bug fix benchmark bencharks
Semantic web;https://github.com/AKSW/Sparqlify-Extensions;sparqlify extension extension project sparqlify
Semantic web;https://github.com/Swirrl/matcha;matcha clojars cljdoc warn alpha software subject change clojure dsl query memory triple sparql like language matcha provide simple bgp basic graph pattern style query memory graph link triple matcha whilst matcha intend query rdf also query arbitrary clojure long consist clojure value store tuple vector entity triple assume follow clojure value equality semantics primary case matcha make handle graph rdf easy query sparql like query typical workflow construct backend sparql query matcha query graph locally feature sparql like bgp query across multiple triple pattern parameterised query clojure let ability index database index triple order query matcha need index unindexed index query dispose index lead poor performance want query set multiple time construct graph query directly clojure datastructures support value clause unlike sparql yet support bind arbitrary tuples table support value form support optional sparql like semantics limitation initial macro heavy mean case want dynamically create memory query may awkward currently support follow sparql like feature reason memory vocabulary rdfs maybe owl clojurescript support plan usage matcha define primary query function select select construct construct ask first let define memory database triple reality could come sparql query construct define rdf like inline triple vector clojure value datastructure support positional destructuring via clojure lang index allow matcha work grafter rdf protocol statement record matcha work clojure value triple java uri clojure keywords query function general query semantics main concept matcha query typically define projection state variable return clojure program datastructure return basic graph pattern bgp define pattern graph traversal bgps semantics need aware clojure symbol begin treat specially query variable symbol resolve value always group return solution sequence clojure map subject group map map group property property multiple value roll set otherwise scalar value map return typically represent resource graph project sequence map potentially multi value key take bind subject map map form specify projection property value bind bgp database note foaf know project set value rick single scalar value katie subject default associate key grafter rdf uri wish specify key provide key value pair subject substitute person person change return value like know always return sequence map remove key correspond unbind variable introduce optionals unlike construct select select compile query argument return sequence tuples directly analagous sparql select query bgp argument analagous sparql clause bgp call argument select project qvar query analagous select sparql call argument select expect first argument vector variable project solution sequence also select like select return first solution construct note construct return map first consider fix issue present common construct usage construct allow construct arbitrary clojure structure directly query position project query variable ever want within project datastructure template args construct pattern arbitrary clojure structure project qvar hole bgps argument analagous sparql clause bgps idx matcha database call argument construct return query function accept idx argument call function return sequence match tuples form construct pattern call argument query idx directly return sequence form construct pattern map projection contain special key grafter rdf uri trigger extra behaviour query engine group solution subject merge value clojure set query notice foaf know group solution want map group include magic key grafter rdf uri top level projection also construct like construct return first solution see unit include matcha grafter statement vocabulary ask ask query specify explicit projection accept bgp like query type return boolean match find parameterising query parameterise matcha query simply add lexical bind wrap function call matcha query optionals support sparql like optional query type follow syntax value support dynamic value clause query type like also hardcode value query flat collection sequential set valid right hand side value bind performance matcha intend modest size typically triple usually triple proper benchmarking yet find solution database million triple laptop second query time scale seem roughly linear database size avoid clj kondo lint error matcha macro matcha export clj kondo configuration prevent clj kondo warn unbind variable matcha query macro import configs project follow command simply add follow clj kondo config edn develop matcha matcha development test command test whilst jar local mvn repository however consume local matcha change local project usually good tool deps classpath override create branch consume via git url deploy clojars deployment circleci automatically deploy tag form major minor patch number permission swirrl developer recommend workflow create new release main branch github tag bump version number appropriately _note_ step work need appropriate deployment privilege clojars org license copyright swirrl ltd distribute eclipse public license either version option late version
Semantic web;https://github.com/JeniT/linked-csv;link csv many open set essentially table set table follow regular structure link csv set convention csv enable link together interpret json xml rdf repository contain work progress spec link csv
Semantic web;https://github.com/uzh/signal-collect;signal collect signal collect framework computation large graph allow concisely express many iterate flow algorithm framework parallelize distribute computation develop eclipse typesafe ide scala ensure eclipse java library jvm preference java instal jres jre jdk instal select import project eclipse import maven exist maven project select signal collect folder thank lot university hasler generously fund research graph process development signal collect github help host travis offer convenient continuous codacy give automate
Semantic web;https://github.com/Data-Liberation-Front/csvlint.rb;dependency coverage csv lint ruby gem support validate csv check syntax content either gem within ruby standalone command line application summary feature validation check structural format csv validation delimiter separate value dsv accesible via url style object stringio validation csv validation multiple schema standard json table csv development ruby version test codebase include rspec cucumber test together rake separately rake spec rake feature cucumber test first script create test base late version csv web test include create local cache test require internet connection patience follow test locally also batch script bin csvw test test command line need refresh csv web test bin csvw test feature csvw_validation_tests feature feature fixture csvw cucumber test ruby feature support load_tests installation add line application gemfile gem csvlint execute bundle gem csvlint usage either gem within ruby standalone command line application command line instal gem validate csv command line like csvlint myfile csv may need add gem exectuable directory path add usr local lib ruby gem bin whatever version bash_profile path entry like see validation together warn error also optionally pas schema like csvlint myfile csv schema schema json ruby currently gem support retrieve csv accessible url style object stringio require csvlint validator csvlint validator new validator csvlint validator new new path csv validator csvlint validator new stringio new my_data_in_a_string validate url range error warn wide library also check http header best practice invoke validation validator validate check validation status validator valid access array error csvlint errormessage object validator error access array warn validator warn access array information message validator info_messages get information csv validate validator encode validator content_type validator extension validator row_count retrieve http header request validator header control csv parse validator support configuration csv specify pas dialect hash constructor dialect header true delimiter validator csvlint validator new dialect option hash conform csv json structure option configure parser correctly process validator still raise error warn csv structure consider invalid miss header different delimiters note parser also check header parameter content type header return fetch remote csv specify rfc value present absent content type text csv header present error report validator provide feedback validation instance csvlint errormessage error divide error warn information message validation attempt successful error message provide context include category symbol indicate category error warn structure well formedness issue schema schema validation context publish metadata content type type symbol indicate type error warn report row hold line number problem column hold column number issue content hold content row generate error warn error follow type error report wrong_content_type content type text csv ragged_rows row different number column first row blank_rows completely empty row blank line line column value empty invalid_encoding encode error parse row invalid character not_found http error retrieve stray_quote miss stray quote unclosed_quote unclosed quote field whitespace quote column lead trail whitespace line_breaks line break inconsistent incorrectly specify warn follow type warn report no_encoding content type header return http request charset parameter encode character set utf no_content_type serve without content type header excel content type header extension check_options csv appear contain single column inconsistent_values inconsistent value column report value seem type either numeric alphanumeric include punctuation empty_column_name column csv header empty name duplicate_column_name column csv header duplicate name title_row appear title field first row csv information message also information message available nonrfc_line_breaks non crlf line break conform rfc4180 assumed_header validator assume header present schema validation library support validate schema schema configuration provide hash parse json structure currently follow json table schema extension rudinmentary csv web json table schema schema field name constraint require true type name price constraint require true minlength name postcode constraint require true pattern equivalent csv web metadata context url tableschema column name require true datatype base integer name price require true datatype base string minlength name postcode require true parse validate schema either kind schema csvlint schema load_from_json uri validator csvlint validator new nil schema csv web validation support gem pas validation test official csv web test though might still error part csv web test test suite json table schema support support constraint require must value field every row unique value every row unique minlength minimum number character value maxlength maximum number character value pattern value must match provide regular expression type specify xml schema type value column must valid value type minimum specify minimum range value value parse specify type maximum specify maximum range value value parse specify type datepattern specify strftime compatible date pattern parse date value min max constraint support type still work progress string effectively integer float double uri boolean non positive integer positive integer non negative integer negative integer date date time year year month time unknown type column fail validate schema validation provide additional type error warn message missing_value error column mark require schema value min_length error column minlength constraint value short max_length error column maxlength constraint value long pattern error column pattern constraint value match regular expression malformed_header warn header csv match schema missing_column warn row csv miss column specify schema warn may legitimate extra_column warn row csv extra column unique error column unique constraint contain non unique value below_minimum error column minimum constraint contain value minimum above_maximum error column maximum constraint contain value maximum validation option also provide optional option hash fourth argument validator new support option limit_lines check number line csv good quick check huge lambda pas block call line validate give access validator object return current line number every line validate
Semantic web;https://github.com/Quetzal-RDF/quetzal;quetzal que tran tion ibraries sparql sql translation engine multiple backends db2 postgresql apache spark philosophy goal quetzal provide researcher framework experiment various technique store query graph efficiently end provide modular component store current store schema similar describe sigmod schema lay outgo incoming label edge give vertex base analysis characteristic optimize storage give goal layout store give vertex single row table optimize star query common sparql compile sparql sql current give set statistic characteristic compiler compile sparql query sql compiler optimize order execute sparql query base statistic support sql multiple backends current support db2 postgresql apache spark first useful workload require characteristic normally support relational backends transactional support third target analytic workload might mix graph analytic workload declarative query workload overview component layout current row base layout graph vertex incoming edge outgo edge lay much possible row detail set experiment examine layout advantageous see sigmod outgo edge store table call dph direct primary hashtable incoming edge store table call rph reverse primary hashtable rdf many property dedicate column per property option fact datasets exhaust database system limit number column rdf sparse though vertex tend small subset total number property current perform analysis property occur others graph color hash function map property column property occur together typically assign row get assign row single vertex several edge sort property collision possible schema record fact sql adjust appropriately note multi value property dph rph record existence property give vertex actual value require join direct secondary reverse secondary table respectively sparql sql compiler current compilation job class call com ibm research rdf store sparql11 planner planner method call public plan plan query store store sparqloptimizerstatistics stats goal planner compile sparql query sql order query order start selective triple triple least cost join second selective triple base become available evaluate first triple planner must respect semantics sparql join variable name separate brances union planner employ greedy algorithm evaluate available nod exist plan plan first nod get collapse single region querytriple nod triple within node target first triple node within evaluate cost base variable available node notion variable produce bind base access method access method dph typically would produce object variable bind conversely access method rph would typically produce subject variable bind cost produce bind estimate base average number outgo dph incoming rph edge case unless triple happen popular node appear top set complex nod exist union optional nod evaluate cost recursively plan subtrees see planner choose cheap node schedule first choose node set available variable change new cost computation perform find next step planner proceed manner till available nod plan output planner com ibm research rdf store sparql11 planner plan basically binary plan tree compose plan nod leave join nod etc serve input next step sql generator current plan serve input number sql template get create every type node plan tree com ibm research rdf store sparql11 sqltemplate package contain template generate sql modularly per node plan tree common table expression ctes template general purpose keep track thing specific cte node mapping external variable need project variable join together etc actual job generate sql different backends accomplish specialize string template string library com ibm research rdf store sparql11 sqltemplate common stg template common backends information get start click wiki repository issue source get follow git clone maven also late jdbc driver drop lib compile clone repository maven storage graph cloud sql back store spanner bigquery since time work quetzal number cloud database emerge support complex sql query need access graph question start ask recently whether storage graph good suit column orient nest type layout bigquery whether row store spanner good suit storage graph tradeoff mean exhaustive comparison different approach perform initial experiment follow layout bigquery versus spanner simple graph query hop neighborhood node note rather interest query graph generate lehigh university benchmark lubm set student take course university advisor sparse many entity many edge query query benchmark find student take course teach advisor student graph take many course single advisor advisor teach many course query ask find triangle specify student take class teach advisor graph billion triple translate 174m row entity orient store assume many edge take course teach course represent single row array nest structure 79g write json layout spanner bigquery provide support nest follow entity orient view quetzal subject entity various edge type map distinct column bigquery ideal store columnar sparse map edge type column furthermore actually need reverse map since bigquery index every query scan instead exploit fact specific column ever invoke give query maintain schema spanner ensure apple apple comparison layout therefore like dph table sigmod change separate many value edge separate table spanner bigquery support array type store multi value predicate column note spanner also support interleave row table could support multi value predicate first experiment check spanner loader bigquery loader directory mapping edge type column name lubm schema edge bigquery lubm schema field name subject type string name col_8 type string name col_6 type string name col_5 type string name col_12 type string name col_3 type string name col_15 type string name col_9 type string name col_16 type string name col_7 type string mode repeat name col_2 type string name col_11 type string name col_4 type string name col_0 type string mode repeat name col_14 type string mode repeat name col_10 type string name col_13 type string name col_1 type string mode repeat correspond schema spanner write java static void createdatabase databaseadminclient dbadminclient databaseid operation dbadminclient createdatabase getinstanceid getinstance getdatabase array aslist create table dph subject string max null col_0 array col_1 array col_2 string max col_3 string max col_4 string max col_5 string max col_6 string max col_7 array col_8 string max col_9 string max col_10 string max col_11 string max col_12 string max col_13 string max col_14 array col_15 string max col_16 string max primary key subject database waitfor getresult system println create database getid query bigquery support common table expression crucial provide nice abstraction construct complex graph query query bigquery select subject student col_13 advisor lubm dph col_13 null select subject student col_14 course lubm dph col_14 null select subject teacher col_7 course lubm dph col_7 null select teacher course course course select student course course course select student teacher course course course teacher advisor student student correspond query spanner support common table expression ctes select dph1 subject student dph1 col_13 advisor course dph2 subject teacher dph dph1 dph dph2 cross join unnest dph1 col_14 course cross join unnest dph2 col_7 dph1 col_13 null dph1 col_14 null dph2 col_7 null course dph1 col_13 dph2 subject bigquery perform query process spanner time minute possible spanner handle nest array well bigquery interest datapoint suggest spanner may need different style schema store many edge performance bigquery rather impressive comparison database quetzal support 100m edge see course hand craft experiment seem suggest bigquery least key advantage spanner query graph support ctes
Semantic web;https://github.com/anqit/spanqit;spanqit excite update spanqit merge eclipse foundation project development continue first perhaps backported check link source java base sparql query generator spanqit open source fluent java library programatically create sparql query see javadocs come soon info new version support update need adapter rdf element create spanqit include iri blank nod support sparql syntax construct like predicate object list triple pattern blank nod convenience method bug fix javadocs check update detail usage
Semantic web;https://github.com/architolk/Linked-Data-Theatre;link theatre link theatre ldt platform optimal presentation link installation usage easy way ldt late release tomcat container follow instruction deploy doc deploy ldt war user upgrade version low version ldt work triplestore via rdf4j interface might need change configuration bite please look deploy doc deploy section instruction user upgrade version low config xml change release please make sure entry exist upgrade link theatre configuration graph contain triple make ldt configuration instruction create configuration find basic configuration basic configuration ttl provide get start wiki contain guide common feature theatre linux docker installation see doc instruction link theatre deploy link theatre tomcat container follow instruction deploy doc deploy step step installation guide linux also available linux_setup doc linux_setup also opt docker installation see docker doc docker advance installation production setting default set ldt development purpose read production doc production information secure ldt production environment create link ldt extend link lds version lds include version ldt want create new release ldt please look license doc license instruction create approriate license header see release doc release step make release include upload github add security link theatre follow instruction secure doc secure link theatre behind corporate firewall access internet restrict proxy follow instruction proxy doc proxy want access secure endpoint certificate untrusted set keystore follow instruction keystore doc keystore
Semantic web;https://github.com/nichtich/wdq;name wdq command line access wikidata query service status coverage kwalitee synopsis access wikidata query via command line perform sparql query query mode lookup entity lookup search item property search psearch wdq solar system search solar system english wdq psearch parte search property parte spanish wdq p361 q544 lookup property item wdq wdt p361 q544 query part solar system see manual detail get help via wdq help wdq help option list explain command line option wdq help mode list explain request mode wdq help output explain output control wdq help format list explain output format wdq help ontology show wikidata ontology nutshell wdq help prefix list rdf prefix allow query wdq help version show version wdq description command line script wdq include cpan module provide tool access wikidata query support formulation execution sparql select extract select information wikidata wikibase instance installation perl already instal operate system otherwise get cpan source cpan include dependency cpanm app wdq first miss installation app wdq fail try cpanm option notest dependency package describe prebuild package dependency prebuild package operate system debian base system ubuntu sudo apt get librdf query perl window activestate ppm http tiny ppm rdf query wdq cpan describe copy script place path wget chmod wdq latter method documentation mode request mode query default lookup serch psearch explicitly set via first argument guess argument query read sparql query stdin option query argument namespace definition select clause add miss wdq wdt p361 q544 wdq wdt p361 q544 equivalent wdq select wdt p361 q544 equivalent wdq queryfile lookup read wikidata entity url wikimedia project url stdin argument field label description wdq wdq lookup equivalent echo wdq lookup equivalent wdq search psearch search item property field label description possibly match alias search language read environment option language wdq search pippi langstrump default output format search mode text option query query query query stdin default format format template output format string template call wdq help format detail export exporter exporter output format header exclude header csv output exporter enumerate enumerate add counter variable limit integer add override limit clause limitate number single digit option also also set limit abbreviate wikidata identifier uris string language language query label description set locale default option currentl lookup mode count var prepend sparql query count distinct value label var description var text var add label description add label description variable xlabel xdescription ignore ignore empty instead issue warn exit color default output color write terminal disable color monochrome force color color api url sparql endpoint default value mediawiki query mediawiki api map url wikidata item execute execute sparql query show expand form useful validate pretty print query mediawiki api request may execute query mediawiki execute help show usage help ontology show information wikidata ontology default prefix add default namespace prefix sparql query man show detailled manual version show version script output output control option format export header header color color format option format set output format string template simple default query lookup mode flat json without language tag text default search mode print label alias description count count also set option ldjson line delimit flat json csv sparql query csv format suppress header option header catmandu csv exporter option tsv sparql query tsv format xml sparql query xml format json sparql query json format string template call wdq help pretty detail pretty option format set string template bracket expression optional template parameter instance pre post style highlight name value identifier title error length abbreviate long value align leave right align short value give length pre post add string value export option export set exporter create output give correspond exporter module instal write yaml excel markdown table table among format wdq export yaml short form wdq format ldjson catmandu convert yaml equivalent catmandu config catmandu yml configure export see also tool process search solar system english q544 wdq solar system search part property p361 wdq psearch part get part solar system wdq wdt p361 q544 look label description wdq q42 look german wikipedia article get label description french wdq get reference item wdq prop prov wasderivedfrom ref get doctoral advisor graph academic genealogy csv wdq student wdt p184 advisor format csv print expand sparql query wdq wdt p361 q544 execute query return first tab separate value wdq tsv limit query print markdown table require catmandu exporter table wdq export table query count instance p31 book q571 wdq count wdt p31 q571 list type p279 exoplanets q44559 label description wdq wdt p279 q44559 text format text wikidata ontology entity item property owl sameas rdfs label skos altlabel schema description schema datemodified schema version wdt uri blank statement item schema schema inlanguage wikibase badge property wikibase propertytype propertytype wkibase directclaim wdt wikibase claim wikibase statementproperty wikibase statementvalue psv wikibase qualifier wikibase qualifiervalue pqv wikibase reference wikibase referencevalue prv wikibase novalue wdno propertytype wikibase string url wikibaseitem wikibaseproperty commonsmedia math monolingualtext globecoordinate quantity time externalid statement wds wikibase rank rank wdno uri blank psv value uri blank pqv value prov wasderivedfrom reference reference wdref uri prv value rank wikibase normalrank preferredrank deprecatedrank bestrank value globecoordinatevalue quantityvalue timevalue wdv wikibase geolatitude geolongitude geoprecision geoglobe uri wikibase timevalue timeprecision timetimezone timecalendarmodel wikibase quantityamount quantityupperbound quantitylowerbound quantityunit uri copyright license copyright jakob voss voss gbv base php script marius hoch hoo online license gpl
Semantic web;https://github.com/camwebb/owlconvert;owlconvert simple owl format converter base want local tool handle format conversion similar online converter could find anything handy ready make hack know close java please lenient usage owlconvert manchester functional turtle rdfxml send standard installation compile place dir owlapi bin jar javac classpath owlapi bin jar owlconvert java replace correct path java classpath owlapi bin jar owlconvert make script alias anywhere alias owlconvert java classpath owlapi owlconvertpath owlconvert
Semantic web;https://github.com/SANSA-Stack/SANSA-RDF;sansa stack project comprise whole semantic analytics stack sansa glance feature follow functionality ingest rdf owl various format rdds operator work rdds frame rdf various level triple bind graph etc transformation rdds frame partition rdds r2rml map frame distribute sparql query r2rml map frame partition rdb2rdf engine sparqlify ontop enrichment rdds inference application machine algorithm detail description sansa please visit layer sansa project structure follow layer develop respective sub folder rdf sansa rdf owl sansa owl query sansa query inference sansa inference sansa release cycle sansa stack release every month consist late stable version layer point repository organise joint release usage spark requirement currently require spark scala setup spark version source base branch release version dependency maven central yet need add follow maven repository project pom repository section want import full sansa stack please add follow maven dependency project pom want particular layer replace layer_name correspond name layer snapshot version release version available maven central late snapshot version instal source full sansa spark stack single layer layer_name alternatively follow maven repository add project pom repository section release version add dependency contribute always welcome new contributor project please see contribution detail get start contribute sansa
Semantic web;https://github.com/rollxx/antlr-sparql-grammar;sparql grammar project include parser lexer grammar antlr specific syntax follow sparql specification sparql update query sparql openlink virtuoso specific sparql parser grammar
Semantic web;https://github.com/semarglproject/semargl;welcome home semargl semargl modular framework crawl link structure document main goal project provide lightweight performant tool without excess dependency moment semargl offer high performant stream parser rdf xml triple json stream serializers turtle ntriples nquads integration jena clerezza sesame small memory footprint cpu requirement allow framework embed system seamlessly android gae check framework capability via rdfa parser maven coverage semargl lightweight semargl small simple understand external dependency never read internally operate raw string create object possible android gae application happy standard conformant parser serializers fully support correspond w3c test suit dead simple joke want semargl standalone framework find useful internal serializers easily extendable api framework mvn clean rdfa test require direct internet connection
Semantic web;https://github.com/ontola/rdf-serializers;rdf serializers rdf serializers enable serialization rdf format serializers modification serialization gem want know passion open send mail mailto ontola argu installation add line application gemfile execute get start first register format wish serialize add follow config initializers rdf_serializers automatically register mime type controller add configuration configure gem rdf serializers configure format register multiple format add correct gem add rdf turtle gemfile put initializer rdf gem list available rdf serialization include ntriples turtle rdf xml json serialize add predicate attribute relation wish serialize recommend reuse exist vocabulary provide rdf gem gem add vocab miss predicate way able access different vocabs throughout application define module add predicate serializers old new rdf serialization require add iri method must return rdf resource contrast json api serializer rdf serializers automatically serialize type recommend add attribute type predicate rdf type method define type serializers fix custom statement per add custom statement serialization serializer meta statement add additional statement serialization controller contribute usual stuff open issue discus change open pull request directly bugfixes refactors
Semantic web;https://github.com/banana-rdf/banana-rdf;banana rdf current publish version compile scala find maven central groupid snapshot release find need add sonatype resolver sbt scala3 version develop branch repository rdf library scala banana rdf library rdf sparql link technology scala exist library without add cost wrap involve manipulate directly real object currently support jena rdf4j plantain pure scala feature banana rdf emphasize type safety immutability come cost underlie mutable look jena rdf4j try keep clear distinction core concept enhance syntax scala give rdf rdf share src main scala org banana rdf scala define record type _plug_ type type alone enough introduce rdfops rdf share src main scala org banana rdfops scala typeclass define mandatory operation rdf must implement sparqlops rdf share src main scala org banana sparqlops scala sparql banana rdf get _diesel_ nice dsl navigate within point graph graph pointer inner node also get abstraction graph store graphstore rdf share src main scala org banana graphstore scala sparql engine sparqlengine rdf share src main scala org banana sparqlengine scala course serialize deserialize rdf syntax well json rdfa come soon banana rdf introduce concept binder let bridge scala rdf world common datastructures already available even map class unlike usual orm technique rely annotation reflection write thorough documentation best place understand test start geeking get banana rdf get feel easy fast way may well directly ammonite explain script ammonite wiki always help available lot useful test suite need recent version java also easy specific target platform note scala compilation memory see travis yml travis yml ide setup banana rdf work intellij global sbt independent prefer ide optionally add follow line sbt global sbt prevent generation empty source directory eclipse eclipse work box addition follow global setting sbt global sbt sbt plugins sbt generate eclipse project command intellij idea intellij idea work box since community discussion fit issue may try either w3c banana rdf mail long discussion banana rdf gitter quick real time socialise conduct banana rdf contributor agree follow w3c ethic professional want take action feel free contact alexandre bertails also contact w3c staff explain w3c licence source make available w3c business friendly license
Semantic web;https://github.com/utapyngo/owl2vcs;owl2vcs set tool design facilitate version control owl ontology owl2 version control system content owl2diff command line diff tool owl ontology set script integrate tool git git mercurial subversion svn feature detect axiom addition removal detect import addition removal detect ontology annotation addition removal detect prefix addition removal modification rename detect ontology iri version iri change detect ontology format change support rdf xml owl xml owl functional syntax manchester owl syntax turtle changeset serializer parser format change compact like owl functional syntax indent indent instead parenthesis readable format iris simple qname full label requirement java high java path git git git path mercurial path installation instruction owl2vcs late unzip add path path standalone usage add directory path owl2diff command compare version ontology see owl2diff help information usage git mercurial open command repository type owl2enable view informative diffs owl rdf ttl either owl2diff git diff git diff hang window git diff git difftool want owl2vcs compare extension edit hgrc git info attribute please help project still development feedback suggestion welcome encourage issue list issue github provide feedback feel free fork fork repo commit addition contribute fork fork clone develop branch machine git clone develop git github com utapyngo owl2vcs git create feature branch git checkout new feature commit change git commit add feature push branch git push origin new feature create new pull request owl2 git svn owl2vcs late path issue fork
Semantic web;https://github.com/shaoxiongji/awesome-knowledge-graph;knowledge graph github github github collection knowledge graph cod read note knowledge graph knowledge graph survey survey venue venue category category general knowledge graph general knowledge graph domain specific domain specific entity recognition entity recognition collection collection library software tool library software tool krl library krl library knowledge graph database knowledge graph database others others interactive app interactive app course tutorial seminar course tutorial seminar course course relate repos relate repos acknowledgement acknowledgement survey __a survey knowledge graph representation acquisition applications__ ieee tnnls _shaoxiong shirui pan erik cambria pekka marttinen philip yu_ __knowledge graphs__ preprint _aidan hogan eva blomqvist michael cochez claudia amato gerard melo claudio gutierrez jose emilio labra gayo sabrina kirrane sebastian neumaier axel polleres roberto navigli axel cyrille ngonga ngomo sabbir rashid anisa rula lukas schmelzeisen juan sequeda steffen staab antoine zimmermann_ __knowledge representation quantitative review__ preprint _lin yankai han xie ruobing liu zhiyuan sun maosong_ __knowledge graph embed survey approach applications__ tkde _wang quan mao zhendong wang bin guo li_ __knowledge graph refinement survey approach evaluation methods__ semantic web _paulheim heiko_ __a review relational machine knowledge graphs__ proceed ieee _nickel maximilian murphy kevin tresp volker gabrilovich evgeniy_ venue year www aaai acl conference www20 conference aaai20 conference acl20 category knowledge graph embed embed cross modal embed cross modal knowledge acquisition knowledge graph completion kgc relation extraction entity discovery entity knowledge aware application natural language understand application natural langauge understand commonsense knowledge application commonsense knowledge question answer application question answer dialogue system application dialogue system recommendation system application recommendation system information retrieval application information retrieval temporal knowledge graph temporal knowledge graph reason reason shoot shoot shoot domain specific knowledge graph domain database system database general knowledge graph wordnet opencyc cyc yago dbpedia freebase nell wikidata probase isa google large scale chinese knowledge graph gdelt global database event language domain specific __openkg knowledge graph novel coronavirus covid 19__ knowledge graph knowledge graph covid research clinical knowledge graph knowledge graph people expert hero knowledge graph public event __covid graph covid virus__ __kgbase covid knowledge graph__ __academic graphs__ oag open academic graph entity recognition cord comprehensieve name entity annotation cord ner covid open research challenge cord corpus collection baidu broad datasets __aser large scale eventuality knowledge graph__ www _zhang library software tool krl library grakn knowledge graph library library representation knowledge graph open source package knowledge embed efficient transe extend knowledge representation library compute knowledge graph embeddings open source package neural relation extraction nre knowledge graph database distribute knowledge graph store others interactive app knowledge graph app simple knowledge graph application easily json manage entirely via graphql layer course tutorial seminar course stanford knowledge graph explicitly represent knowledge _vinay chaudhri naren chittar michael genesereth_ stanford 224w machine graph _jure leskovec_ university bonn analysis knowledge graph _jens lehmmann_ knowledge graph _harald sack mehwish alam_ relate repos repo knowledge graph chinese repo nlp dialogue system chinese top level conference publication knowledge graph geospatial knowledge graph acknowledgement acknowledgment give follow people comment contribute repository list chronologically awesome knowledge graph
Semantic web;https://github.com/aschaetzle/Sempala;sempala sempala sparql sql approach provide interactive time sparql query process hadoop store rdf columnar layout parquet hdfs either impala spark execution layer top sparql query translate impala spark sql execution license unless explicitly state otherwise repository license apache software license copyright university freiburg license apache license version license may except compliance license may obtain copy license unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license project need maven instal system simply mvn package root directory sempala loader sempala translator finally sempala also sepala loader sempala translator mvn package correspond subdirectory note jar generate sempala translator impala sempala translator spark spark sempala translator purpose project_repo directory cloudera impala jdbc connector ship several library connector available maven cloudera central repository pull time maven fit maven architecture connector instal project repository behave like remote central repository update version impala jdbc connector project repository new version update pom sempala parent main pom root directory project version get jdbc driver cloudera com maven plugin take care checksum official guide instal 3rd party jar although rarely sometimes 3rd party jar need put local repository since exist public repository like maven central jar must place local repository correct place order correctly pick apache maven make easy error prone provide goal maven plugin make relatively painless jar local repository follow command pom well follow command version maven plugin get even good jar apache maven contain pom xml subfolder meta inf directory read default case need source
Semantic web;https://github.com/jindrichmynarz/sparql-to-csv;sparql csv command line tool stream sparql csv tool primarily intend support preparation analyse require tabular input help avoid write hoc script piece large tabular datasets many sparql query allow generate query template either execute page query execute query base query usage release compile create executable find configuration option main case tool page query pip query page query first page execution sparql select query rdf store often limit number row sparql select query retrieve thus avoid load query impose store query select limit per request execution must split several request complete need obtain way partition query split page delimit limit offset indicate size start index respectively page page require deterministic order achieve order clause due limitation rdf store see virtuoso documentation page query may need contain inner sub select order clause wrap select slice page order limit offset like order page query need provide tool mustache template generate query individual page query must contain limit offset parameter like limit set page size parameter offset incremented page size successive request execution page query stop individual query return empty pip query may desirable decompose complex query several simple query avoid limit demand query due performance person may want retrieve complex description may possible achieve sub select page individual person select compose description query would demand since sort person select description consequently may possible query since would end time instead query decompose query first select person page manner describe second receive first query fetch description approach also useful need query sparql endpoint another sparql endpoint feasible federate suffer performance problem pip query take csv input line execute query generate mustache template provide line parameter csv generate query contain column person query template person input csv must header column name order usable mustache template column name input csv contain ascii character right allow melange pip query enable create process pipeline instance first query store person mustache second query store describe_person mustache pipeline follow command pip indicate pip query default pip input replace output query however extend parameter extend input row append input row allow combine multiple query pip query arbitrarily chain allow join across many sparql endpoint license copyright jindrich mynarz distribute eclipse public license version
Semantic web;https://github.com/sspider/etalis;etalis export google com etalis etalis open source system complex event process accompany language call etalis language event ele event process sparql sparql etalis base declarative semantics ground logic program complex event derive simple event mean deductive rule due root logic etalis also support reason event context real time complex situation knowledge base event process etalis stand event transaction logic inference system etalis implement prolog engine many prolog system yap swi sicstus xsb tuprolog lpa prolog etalis instal etalis sparql several operate system include window vista mac android tuprolog linux base system ubuntu redhat suse feature declarative rule base language event process detection complex event reason state logic rule classic event operator sequence concurrent conjunction disjunction negation etc language support operator allen interval algebra meet start finish etc count base slide window event aggregation count avg sum min max etc event filter enrichment projection translation multiplication support alarm event trigger event certain duration time absolute datimes work swi prolog process order event event delay due different circumstance anomaly etc event retraction revision share computation plan evaluation complex event rule support event process sparql sparql language see etalis manual information etalis evaluate etalis implement fast flower delivery case create opher etzion peter niblett book event process action description case find aforementioned book event process technical society website case etalis find flower_delivery correspond fast_flower_delivery_use_case wiki page contact darko anicic question relate etalis design architecture underlie algorithm paul fodor question relate etalis engine problem execution etalis program
Semantic web;https://github.com/drlivingston/kr;clojure api rdf sparql knowledge representation reason tool library enable easy clojure rdf sparql prove unify interface jena sesame extend apis underlie triplestores overview currently facilitate rdf base representation back triple quad store provide consistent clojure base way interact back currently include jena sesame apis library enable easy work knowledge representation knowledge base provide support common task include forward chain reification release note update see note sesame version basic setup primary api function likely come core apis actually get instance work need make sure specific load instance acquire function function take keyword argument sesame mem jena mem take name several native jena sesame object pre construct jena sesame instance create wrapper around jena sesame sail need help know namespace mapping server mapping bring third party call synch mapping add basic load rdf triple query rdf triple query triple pattern sparql detail also provide detail interact able pom include connect remote repository local memory repository detail find test case rdf sparql apis maven release deploy clojars core dependency core core dependency unnecessary brine either sesame jena acknowledgement open source ccp lab university colorado denver primary developer kevin livingston ccp lab university colorado denver kevin livingston sesame release
Semantic web;https://github.com/nicholashauschild/kotlin-rdf;kotlin rdf rdf dsl write kotlin series dsl support create query rdf graph specific library back apache jena usage add dependency release dependency yet release still experimental snapshot dependency dsl propertyschema propertyschema dsl setup property predicate namespace showcase complete set option available propertyschema dsl breakdown mostly line line happen line thing establish start propertyschema dsl construct provide value propertyschema namespace namespace useful provide default uri template allow remove superfluous configuration price line thing provide common name new property establish start definition new property uri line define uri enclose property last line close respective construct property configuration table configuration option available property field require description default value uri false uri property common name merge namespace template aliasing property property name long would like allow refer additional name utilize alias keyword create alias property color pigment different name refer property propertyschema return type propertyschema dsl return object type propertyschema object function signature operator fun get name string property access underlie property object property interface apache jena api reduce ceremonious syntax propertyschema definition show begin section write bite succinctly general idea behind namespace template able common base uri derive actual uri property template base name default behavior property definition information rewrite initial propertyschema dsl definition like would get equivalent pair alias keyword utilize whatever common name property still keep definition concise even unary plus operator add property provide configuration outside default value worth note variation may look future version library likely utilize customization property unary plus operator create property customization whatsoever former syntax allow pick choose type customization rdfgraph rdfgraph dsl mean create rdf graph query showcase complete set option available rdfgraph dsl note propertyschema dsl breakdown mostly line line happen rdfgraph line establish start rdfgraph dsl construct resource line establish start resource definition resource define within construct utilize late statement creation line create resource refer lead string short hand syntax name syntax statement dsl construct refer actual resource object statement line establishig start statement definition statement create subject predicate object triple setup object portion able literal resource dog cat parrot line subject part triple block start shorthand mean define multiple predicate object pair subject line show different predicate object pair assign enclose subject create triple first map predicate name enemies_with propertyschema cat resource remember cat syntax second map predicate name hair_color propertyschema string literal golden third map predicate name leg_count propertyschema integer literal rdfgraph return type rdfgraph dsl return object type org apache jena rdf apache jena api reduce ceremonious syntax possible simply reference propertyschema property require provide propertyschemas rdfgraph dsl setup provide propertyschema check property order provide return first match property none find exception throw worth point string consider property unlike name refer resource work form string literal resource question make dsl kotlin rdf support feature new rdf understand limit request please let know via email via github issue system please note feature request guarantee implement something
Semantic web;https://github.com/pkumod/gStore;gstore gstore graph database engine manage large graph structure open source target linux project write help library readline antlr source tarballs provide currently mean compile source want gstore formal help document english doc help gstore_help pdf doc help gstore_help_zh pdf formal experiment experiment doc test formal_experiment pdf irc channel name gstore freenode visit homepage get start compile source system really user friendly pick several minute remember check platform want system view system requirement doc demand verify please get project source several way suggest type git clone terminal git gui acquire zip repository extract fork repository github account need compile project first time need type make pre prepare antlr library lexer parser program late need type command make command home directory gstore executables generate fast compile speed make instead many thread machine check correctness program please type make test command first strategy suggest get source easily acquire update type git pull home directory gstore repository addition directly check version type git log see commit log want branch instead master branch like dev branch clone master branch type git checkout dev terminal clone dev branch directly type git clone dev deploy via docker easily deploy gstore via docker provide dockerfile docker image please see docker deployment doc doc docker_deploy_en docker doc docker_deploy_cn detail gstore please type bin gbuild database_name dataset_path database name bin gquery database_name command query exist database wonderful tool design database server access via http protocol notice command type root directory gstore database name end advance help want understand detail gstore system want try advance operation api server client please see chapter basic introduction doc intro introduce theory feature gstore guide doc instruction system doc usage detail information gstore system api explanation doc api guide develop application base api project structure doc struct show whole structure process project relate essay doc essay contain essay publication relate gstore update log doc changelog keep log system update test doc test present test series experiment business bug record bug report doc bug welcome submit bug discover exist write series short essay address recur challenge gstore realize application place recipe book doc tip welcome report advice error github issue part repository require time reply however want urgent deal report please email submit suggestion report bug full list whole team mail list doc mail restriction current gstore project see limit description doc limit sometimes may find strange phenomenon wrong case something hard understand solve know next hesitate visit frequently ask question doc faq page graph database engine new area still try thing plan next future plan doc plan chapter hope people support even join support many way watch star project fork repository submit pull request system report bug suggestion people inspire contribute project list thank list doc thank chapter
Semantic web;https://github.com/kbss-cvut/jb4jsonld-jackson;java bind json jackson java bind json jackson jb4json jackson bind jb4json core jb4json map find info find usage jb4json base annotation enable pojo attribute map ontological construct object annotation property java class ontological class owldataproperty annotate field owlobjectproperty annotate field reference map entity integrate library jackson register cvut jsonld jackson jsonldmodule jackson objectmapper like objectmapper registermodule new jsonldmodule good see jsonldserializiontest see executable jb4json jackson action serialization serializer output verify valid json parseable java json reference output basically context compact json full iris attribute name deserialization since jsonld java first process incoming json matter form expand frame flatten input get jb4json jackson way get jb4json jackson clone repository zip maven maven
Semantic web;https://github.com/edmcouncil/rdf-toolkit;rdf toolkit rdf toolkit command line swiss army knife tool read write rdf owl whatever format primary reason create tool reference toolkit formatter create fibo ontology store github fibo point time still private repository however tool way specific fibo set ontology matter even normal rdf currently owlapi rdf4j hard work see page doc dependency info product commit hook make sure rdf repo store way see information develop rdf toolkit doc develop page page doc dependency information dependency recommend output format recommend output format time rdf xml format omg require submission edm council develop fibo ontology submit rdf xml serialize rdf toolkit omg also rdf xml github issue work resolve either fix rdf xml output generate owlapi rdf4j eventually migrate format git need format requirement git base ontology serialization diff line possible per pull request relative uris git branch tag name become part final ontology version iri dereferencing tool like protege straight github repo would work readable rdf xml readable issue fibo jira server separate project rdf toolkit please add issue bug feature request requirement question issue jira site rdf toolkit usage rdf toolkit jar mention section computer linux mac linux mac execute rdf toolkit follow open terminal type name rdf toolkit jar command prompt supply help option window open command start menu type cmd exe ensure java instal type java version command line java version least java launch rdf toolkit help function follow help current help option give follow information sesame serializer documentation doc rdfformatter
Semantic web;https://github.com/dice-group/CostFed;costfed cost base query optimization sparql endpoint federation costfed index assist federation engine federate sparql query process multiple sparql endpoint costfed make statistical information collect endpoint perform efficient source selection cost base query plan contrast state art rely non linear estimation selectivity join therewith able generate good plan state art federation engine experimental evaluation base fedbench benchmark show costfed time fast state art sparql endpoint federation engine live demo costfed live demo comprise follow main application endpoint manager available endpoint manager select endpoint include federation also allow create update costfed index query formulator executer availble main interface allow execute federate non federate query start costfed web create local demo dockerfile help user provide federate query fedbench largerdfbench directly execute costfed checkout source import new maven project create sub project costfed fex semagrow bench create index since costfed index assist appraoch first step generate index endpoint hand index generation updation give costfed src main java org aksw simba quetsal util tbsssummariesgenerator java note fedbench largerdfbench index already give costfed summary sum localhost configuration set property costfed costfed prop default query execution costfed src main java org aksw simba start queryevaluation java need specify url sparql endpoint want give query federate provide configuration costfed prop argument benchmark query evaluation homepage datasets availability datasets correspond virtuoso sparql endpoint link give may start sparql endpoint bin start bat window bin start_virtuoso linux dump window endpoint linux endpoint local endpoint url live endpoint url system address sparql system address sparql system address sparql geo system address sparql system address sparql system address sparql link system address sparql new york system address sparql semantic web dog system address sparql system address sparql evaluation runtime error compare state art sparql endpoint federation system costfed complete evaluation author muhammad aksw university leipzig alexander potocki aksw university leipzig tommaso aksw university leipzig olaf linkoping university sweden axel cyrille ngonga aksw university leipzig especially thankful andreas schwarte fluid operation germany olaf gorlitz university koblenz germany angelos charalambidis institute informatics telecommunication paraskevi greece email conversation feedback explanation
Semantic web;https://github.com/blazegraph/blazegraph-samples;welcome blazegraph sample project blazegraph database ultra high performance graph database support blueprint rdf sparql apis support billion edge single machine available enterprise feature high availability scale production fortune customer emc autodesk many others power wikimedia foundation wiki query service see late feature sign get late news blazegraph please also visit find issue need help see purchase blazegraph sample sample blazegraph link everything simple application demonstrate blazegraph load query different mode sample directory sample sesame first sesame api emmbedded mode sample sesame embed sesame api emmbedded mode sample sesame remote sesame api remote mode sample blueprint embed blueprint api embed mode sample blueprint remote blueprint api remote mode sample rdr rdf sparql blazegraph sample customfunction embed custom embed function sample test sample unit test technical project create system
Semantic web;https://github.com/creativesoftwarefdn/weaviate;weaviate first vector search engine report coverage description weaviate nutshell weaviate vector search engine vector database weaviate machine vectorize store find answer natural language query weaviate also bring custom production scale weaviate detail weaviate low latency vector search engine box support different medium type text image etc offer semantic search question answer extraction classification customizable pytorch tensorflow kera scratch weaviate store object vector allow combine vector search structure filter fault tolerance cloud native database accessible graphql rest various language client weaviate help software engineer weaviate first database application box module nlp semantic search automatic classification image similarity search easy integrate current architecture full crud support like database cloud native distribute well kubernetes scale workload engineer weaviate vector database grind ann core love lucene base search engine weaviate modular setup allow inside weaviate also box sbert resnet fasttext etc weaviate take care scalability deploy maintain production reliably efficiently scientist weaviate seamless handover machine mlops deploy maintain production reliably efficiently weaviate modular design allow easily package custom want smooth accelerate handover machine engineer graphql interface demo weaviate graphql demo news article contain transformer module graphql usage semantic search _additional feature aggregate function demo gui semantic search aggregate feature weaviate make easy state art give scalability ease safety cost effectiveness purpose vector database notably fast query weaviate typically perform neighbor search million object considerably 100ms medium type weaviate module state art inference transformer text image etc search query time let weaviate manage process vectorizing import vector combine vector scalar search weaviate allow efficient combine vector scalar search article relate covid pandemic publish within past day weaviate store object vector make sure retrieval always efficient need third party object storage real time persistent weaviate let search even currently import update addition every write write write ahead log wal immediately persist write even crash occur horizontal scalability scale weaviate exact need high availability maximum ingestion large possible size maximum query per second etc multi node sharding since replication development cost effectiveness large datasets need keep entirely memory weaviate time available memory increase speed query allow conscious speed cost trade suit every case graph like connection object make arbitrary connection object graph like fashion resemble real life connection point traverse connection graphql documentation find detail documentation developer section directly doc link list additional material video weaviate introduction read weaviate open source search engine power vector graph graphql weaviate ann database crud support sub 50ms neural search distilbert weaviate towards get start weaviate library towards find support stackoverflow github slack channel newsletter stay contribute
Semantic web;https://github.com/fluentdesk/FRESCA;fresh resume schema rational schema resume base fresh fresh resume schema fresh open source standard friendly json yaml drive format resume employment artifact view official fresh schema document schema view sample fresh resume exemplar fresh support natively hackmyresume hmr trivially convert json resume format fresca establish optimize human readable computer friendly representation resume career base json equivalent yaml generate resume career artifact specific concrete format html latex markdown pdf etc well enable 21st century analysis resume career way possible traditional 20th century resume tool format anatomy fresh resume fresh resume text base versionable standard compliant human readable editable computer friendly easily parsable tool json equivalent yaml generate specific format like html pdf latex free proprietary structure site tool specific lock license fresh resume schema license mit crazy hmr fresh schema schema fresh resume schema json cli fluentcv exemplar npm
Semantic web;https://github.com/dvcama/LodLive;lodlive browse web sparql navigator lodlive experimental project set spread promote link open philosophy create tool connect rdf browser capability effectiveness graph representation lodlive first navigator rdf resource base solely sparql endpoint lodlive aim demonstrate resource publish w3c standard semantic web make easily accessible legible viable tool lodlive capable connect resource exist configure endpoint allow user pas endpoint another make lod interconnection capacity lodlive ideate maintain diego valerio camarda alessandro antonuccio support silvia mazzini diego rdf guy behind technology see alessandro designer responsible interface see
Semantic web;https://github.com/Swirrl/csv2rdf;csv2rdf command line application clojure library convert csv accord specification csv native experimental native command line app linux mac csv2rdf command line give location either tabular metadata reference describe tabular location either path local machine uri document web tabular java jar csv2rdf standalone jar path tabular csv rdf write standard output format output instead write option java jar csv2rdf standalone jar path tabular csv output ttl extension output determine output format full list support format define common format list extension format ttl xml trig note quad format like trig quad graph nil triple generate accord csvw standard mode default mode specify parameter java jar csv2rdf standalone jar path tabular csv minimal support value mode standard minimal annotate annotate mode non standard mode behave like minimal mode addition note non standard annotation define table group table output correspond metadata element specify recommend way start process tabular metadata document describe structure reference tabular tabular need provide process metadata since metadata contain reference tabular java jar csv2rdf standalone jar path metadata json output ttl library csv2rdf also expose functionality library please see csv2rdf library doc library description library interface see overview doc overview codebase see develop csv2rdf doc develop quickstart guide work library application license copyright swirrl ltd distribute eclipse public license either version option late version
Semantic web;https://github.com/the-open-university/basil;basil maven jdk maven java basil design middleware system mediate sparql endpoint application basil web apis top sparql endpoint basil store sparql query apis standard customizable format basil project manage maven note also test need active internet connection public sparql endpoint want skip test need mysql server prepare database sql sql query root codebase prepare configuration connection parameter see basil ini prepare log4j2 configuration want log see server src test resource log4j2 xml ready execute release follow command pack release sign artefact push maven central
Semantic web;https://github.com/mro/librdf.sqlite;improve rdf triple storage cross platform plain source come target inspire official sqlite usage see license test minunit copyright john warranty others copyright marcus rohrmoser mobile human right license license design goal quality good good normal irrelevant functionality reliability usability efficiency changeability portability currently runtime save 100k triple intense sqlite prepare bind stringbuffers strcpy memcpy sql escape compile statement possible cost thread safety sql statement possible cost non trivial sqlite index cost large
Semantic web;https://github.com/sparksrdf/sparks;spark javascript library spark set javascript library design simplify access rdf spark license mit license disclaimer first release library contain initial version prism filter framework know bug library support upcoming spark plug library spark depend order work properly put spark spark directory inside alternatively might spark prism include everything except usage
Semantic web;https://github.com/owlcs/owlapitools;owlapitools owlapi version concurrentimpl multithread safe internals owlapi access threadsafeowlmanager suggestor api simplify recur task reasoner owlknowledgeexplorerreasoner work fact jfact atomicdecomposition reasoner independent self contain atomic decomposition modularisation port tool implement dmitry tsarkov fact java without jni without fact
Semantic web;https://github.com/earthquakesan/fox-py;fox bind fox federate knowledge extraction framework instal virtualenv
Semantic web;https://github.com/kbss-cvut/jb4jsonld;java bind json java bind json jb4json simple library serialization java object json vice versa note core abstract actual usage bind like usage jb4json base annotation enable pojo attribute map ontological construct object annotation property java class ontological class owldataproperty annotate field owlobjectproperty annotate field reference map entity see executable jb4json action together spring jackson java json configuration parameter default value explanation ignoreunknownproperties false whether ignore unknown property deserializing json default behavior throw exception scanpackage package library look map class scan important support polymorphism object deserialization highly recommend specify value otherwise library attempt load scan class classpath requireid false whether require identifier serialize object set true identifier find either field value null exception throw default blank node identifier generate present assumetargettype false whether allow assume target type case json object contain type type set true provide java type deserialization invocation argument field type target type enableoptimistictargettyperesolution false whether enable optimistic target type resolution enable allow pick target type even multiple match class would normally end ambiguoustargettypeexception prefersuperclass false allow specify optimistic target type resolution default target class may select set true make resolver attempt select superclass match class also target set see cvut jsonld configparam documentation documentation api javadoc also get jb4json way get jb4json clone repository zip maven maven note likely need integration json serialization library like license lgplv3
Semantic web;https://github.com/AtomGraph/CSV2RDF;csv2rdf stream transform csv rdf converter read csv tsv generic csv rdf transform row sparql construct describe stream output triple generic csv rdf format base minimal mode generate rdf tabular transformation base approach enable resource uris fly fix remapping datatypes map different group value different rdf structure csv2rdf differ way map query graph pattern clause tarql query operate table bind provide implicit value block csv column name become variable name csv2rdf generate intermediary rdf graph csv row column name relative uri property pattern explicitly match mvn clean produce executable jar target csv2rdf jar dependency jar dependency library include usage csv read stdin rdf write stdout csv2rdf available jar well docker image recommend parameter query text sparql query string base base uri also become base uri sparql query property namespace construct add base uri option delimiter value delimiter character default max char per column max character per column value default input charset csv input encode default utf output charset rdf output encode default utf _note delimiters might special therefore always enclose single quote execute csv2rdf want retrieve raw csv rdf output identity query construct csv park facility csv postdistrict roadcode housenumber name fid long lat address postcode parkingspace owner parkingtype information kbenhavn adelgade p_hus p_hus adelgade privat klder adelgade park construct query park facility java execution cat park facility csv java jar csv2rdf jar dependency jar park facility park facility ttl alternatively docker execution cat park facility csv docker stdin stdout stderr pwd park facility tmp park facility atomgraph csv2rdf tmp park facility park facility ttl note docker need stdin stdout stderr stream query container filepath _within container_ query output park facility ttl p_hus klder adelgade park adelgade adelgade p_hus query map query find demo app performance large test far row csv triple minute hardware x64 window intel core 7200u ghz cpu ram dependency apache
Semantic web;https://github.com/aldonline/fbrs;fbrs facebook rdf sync facebook graph api return almost proper link ask polite manner accept text turtle however still sparql complete solution load subset facebook graph give time subset load tricky question depend case framework support common way load facebook include batch incremental well keep sync facebook real time update setup need follow dependency node openlink virtuoso virtuoso isql client library path fbrs access virtuoso via isql client library sparql http endpoint configure port late clone repo git github com aldonline fbrs git dependency fbrs npm load usage fbrs batch mode via http server bath simple keep sync batch load everything incremental web server real time update fbrs_virtuoso_port fbrs_virtuoso_username dba fbrs_virtuoso_password dba fbrs_port fbrs_callback_port fbrs_access_token
Semantic web;https://github.com/spy16/fabric;wip fabric report fabric triple store write fabric provide simple function store option deal subject predicate object relation call triple usage get fabric get github com spy16 fabric fabric library external dependency sql database store triple follow snippet fabric sqlstore standard database sql package sql database support interface include major sql database work additional store support add implement store interface optional counter reweighter implement store support extend query option
Semantic web;https://github.com/VeritasOS/fedx;welcome fedx repository fedx practical framework transparent access link source federation incorporate new sophisticate optimization technique combine effective variant exist technique thus highly scalable solution practical federate query process fedx move veritas fedx eclipse rdf4j development continue please see
Semantic web;https://github.com/vastix/blazegraph-service;vert blazegraph service service provide asynchronous interface around blazegraph service place maven local repo task want service maven local dependency part gradle
Semantic web;https://github.com/AKSW/IGUANA;java codacy project iguana semantic web become important grow day triple store backbone manage hence important triple store must scale handle several user current benchmark approach could provide realistic scenario realistic could adjustet need easily additionally question answer system natural language process system become popular thus need stresstested well impossible compare different benchmark iguana integerated suite benchmarking read write performance http endpoint cli application solve issue provide enviroment highly configurable provide realistic scneario benchmark work every work sparql http endpoint work http get post endpoint work cli application easily extendable information visit get start prerequisite need java great ubuntu follow command iguana module iguana consist module corecontroller benchmark system resultprocessor calculate metric save raw benchmark corecontroller corecontroller benchmark system start machine start resultprocessor resultprocessor calculate metric default store ntriple may configure write directly triple store process side calculate various metric per metric query mix per hour qmph number query per hour noqph number query noq average query per second avgqps per query metric query per second qps number successful fail query size query per second sum execution time change iguana benchmark suite config basic save mention metric call results_ date_rp_started setup iguana please release zip iguana zip new release available contain follow iguana corecontroller jar start iguana suite yml benchmark create configuration basic provide modify need information please visit wiki page detail step step instruction please attend execute benchmark start script iguana execute benchmark suite configure suite yml cite
Semantic web;https://github.com/sparql-generate/sparql-generate;sparql generate project contain source sparql generate sttl sparql template apache jena
Semantic web;https://github.com/albertmeronyo/SPARQL2Git;sparql2git
Semantic web;https://github.com/Callidon/pyHDT;pyhdt documentation pypi pyhdt join rdflib family part rdflib release development continue repository archive read query hdt document ease online requirement version high gcc clang support development header header available system python3 dev package debian ubuntu system pybind11 installation installation strongly advise pip recommend manual installation get start handle non utf string hdt document encode non utf encode previous work correctly unicodedecodeerror detail convert string str handle double api hdt document add search_triples_bytes return iterator triple byte byte byte search_join_bytes return iterator set solution map set byte byte convert_tripleid_bytes return triple byte byte byte convert_id_bytes return byte parameter documentation standard version
Semantic web;https://github.com/TopQuadrant/shacl;topbraid shacl api open source w3c shape constraint language shacl base apache jena contact holger knublauch holger topquadrant com perform shacl constraint check rule inferencing jena base java application api also serve reference shacl spec coverage shacl core shacl sparql shacl advance feature rule former coverage version shacl compact former coverage version shacl javascript topbraid shacl api internally european commission generic shacl base rdf validate rdf content shacl shape shacl shape validate shacl shape topbraid product currently align topbraid release feedback question become github issue send topbraid user mail list please prefix message shacl api get start look class validationutil package org topbraid shacl validation also test case master src test java org topbraid shacl validationexample java application dependency release available central maven repository command line usage late release binary distribution command line utility include shaclvalidate perform constraint validation shaclinfer perform shacl rule inferencing set environment similar note shacl include jena window another linux add bashrc line tool take follow parameter shaclvalidate bat datafile myfile ttl shapesfile myshapes ttl shapesfile optional fall back graph shape graph add validateshapes case want include metashapes tosh namespace particular currently turtle ttl support tool print validation report inference graph output screen
Semantic web;https://github.com/plt-tud/r43ples;r43ples r43ples revision triple open source revision management tool semantic web provide different revision name graph via sparql interface information revision change commit branch tag store additional name graph beside original graph attach external triple store coverity scan codebeat ohloh project project provide enhance sparql endpoint revision management name graph r43ples internal jena tdb attach exist sparql endpoint triplestore act another endpoint normal sparql query well revision enhance sparql query name r43ples query r43ples endpoint allow specify revision query name graph inside sparql query whole revision information store additional graph attach jena tdb r43ples contain project include develop branch test server available get start dependency jdk maven sudo apt get maven default jdk compile maven compile mvn compile exec java package jar dependency webservice mvn package r43ples standalone web server release release store also stable late docker image available default r43ples via docker specific configuration configuration configuration name resource r43ples conf important follow triplestore type type attach triplestore tdb virtuoso work right triplestore uri uri path r43ples access attach triplestore triplestore user user attach triplestore necessary triplestore password password attach triplestore necessary revision graph name graph r43ples store revision graph information evolution graph name graph r43ples store information regard evolution sdg graph name graph store sdg sdg graph defaultcontent default content sdg store within name graph sdg graph sdg graph defaultsdg structural definition group within name graph sdg graph associate new graph revision control mmo hasdefaultsdg rule graph name graph store high level change aggregation evolution rule rule graph defaultcontent default content rule service host host provide r43ples service port port provide r43ples service path path host provide r43ples log configuration store resource log4j property interface extend sparql endpoint sparql endpoint available uri port r43ples sparql endpoint directly accept sparql query http get http post parameter query format uri port r43ples sparql query format support format format specify url path parameter format http post paramter format http header parameter accept text turtle application json application rdf xml text html text plain r43ples keywords additional keywords extend sparql control revision graph create graph create graph select query select graph revision select graph revision master update query user mgraube message test commit insert graph branch master user mgraube message test commit delete graph branch develop branch user mgraube message test commit branch graph revision unstable tag user mgraube message test commit tag graph revision alpha merge user mister message merge common merge merge graph branch branch branch branch user mister message merge automatica conflict resolution base upon specify sdd merge auto graph branch branch branch branch user mister message merge common merge conflict resolution part merge graph branch branch branch branch user mister message merge manual specification merge revision content merge manual graph branch branch branch branch pick revision branch user mister message pick single revision pick graph revision branch develop user mister message pick multiple revision pick graph revision revision branch develop aggregate atomic change high level semantic change agg graph revision revision coevolve semantic change dependent revise graph user mister message coevolution coevo graph revision revision query rewrite option new option r43ples improve performance necessary revision temporarily generate anymore sparql query rewrite way branch change set directly join inside query include order change set currently development research option enable pas additional parameter query_rewriting true currently support multiple graph multiple triplepath filter minus detail look doc directory debug sparql endpoint r43ples redirect query perform debug endpoint directly attach triplstore thus endpoint debug purpose uri port r43ples debug api r43ples provide functionality additionally via external api even information also query directly triplestore api getrevisedgraphs list graph manage r43ples createsampledataset generate sample datasets revision information revisiongraph graph format application json provide revision graph specify graph concept r43ples extend sparql proxy r43ples story information information revise graph revise graph store attach triplestore r43ples act proxy evaluate additional revision information sparql query system structure doc r43ples system png revision information information revision history name graph store name graph long configure otherwise configuration revision management ontology rmo revision branch tag furthermore commit store connect revision tag branch prior revision rmo derive prov ontology rmo doc ontology rmo_uml png exemplary revision graph show rmo doc revision management description r43ples creategraph png http header information response header contain information revision information graph specify request r43ples revisiongraph http header field information follow rmo transfer turtle serialization client also pas information r43ples update query r43ples server via r43ples revisiongraph http header attribute server check client aware recent version involve revise graph case update query reject library framework follow library r43ples restful web service java web server jena process sparql jena triplestore javascript framework html framework template engine spin engine
Semantic web;https://github.com/yasarkhangithub/SAFE;safe sparql federation rdf cub access control safe sparql query federation engine enable decentralise access clinical information represent rdf cub control access experimental setup experimental setup datasets set query evaluation safe describe safe source checkedout safe github datasets group datasets explore different case internal external first group datasets internal collect clinical partner involve primary case datasets contain aggregate clinical represent rdf cub privately restrict second group datasets external collect legacy link contain sociopolitical economical statistic form rdf cub world bank imf international monetary fund eurostat fao food agriculture organization unite nation transparency international external datasets evaluation experiment safe safe external setting load different sparql endpoint separate physical machine experiment carry local cost remain negligible machine experiment ghz core processor ram hard disk bite window host virtuoso open source sparql endpoint host physically separate machine detail parameter configure virtuoso list table virtuoso version experiment table sparql endpoint configuration sparql endpoint port url virtuoso config parameter imf system sparql nob mdf mqm world bank system sparql nob mdf mqm system sparql nob mdf mqm eurostat system sparql nob mdf mqm fao system sparql nob mdf mqm nob numberofbuffers mdf maxdirtybuffers mqm maxquerymem query total query design evaluate compare query federation performance safe fedx hibiscus splendid base metric define define query federation external datasets federation internal datasets query external query make available due owner restriction query evaluation experiment safe safe metric query type measure number source select average source selection time average query execution time number ask request issue source team yasar muhammad aidan muntazir qaiser dietrich ratnesh
Semantic web;https://github.com/cosminbasca/rdftools;rdftools rdftools wrapper number rdf relate tool rdf parser serializers void utility lubm generator etc important note software product research carry university come warranty whatsoever fun todo project document yet compile project ensure libraptor2 cityhash instal system either package manager compile source rdftools option manual installation requirement first automatic pip manual installation project pip also look clean test script include codebase include late jvm rdf tool update late create assembly copy jar target folder lib folder inside rdftools tool jvmrdftools module reinstall package tool find tool simply supply help comand line argument tool available tool rdfconvert convert rdf source format destination format libraptor2 rdf parser rdfconvert2 convert rdf source format destination format rdf2rdf java rdf parser rdfencode endode ntriples binary format string hash cityhash bite genlubm generate lubm parallel genlubmdistro generate lubm parallel mix university sit specify distribution genvoid generate statistic source genvoid2 generate statistic rdf source nxparser void exporter ntround round numeric literal type untyped ntriples give precision thank lot university swiss national science generously fund research lead software
Semantic web;https://github.com/zazuko/rdf-vocabularies;zazuko rdf vocabulary zazuko default ontology prefix coverage npm package contain distribution commonly rdf ontology schema vocab whatever call include default prefix together set utility function work prefix extend rdfa core initial contain consider commonly prefix popular prefix resolve dereferencable rdf thus skip package node project ship quad vocabulary could useful program language well take care ontology installation usage read take look module vocabulary publish package also export module import synchronously parse require without additional dependency web app set see raw loader instruction module rdf vocabulary datasets export factory return array quad quad take rdf datafactory parameter bundle web project also possible directly import single like import schema zazuko rdf vocabulary datasets schema time write support new version node already fix schedule release vocabulary metadata see _index ontology _index vocabulary function require zazuko rdf vocabulary vocabulary option accept optional option object option array default undefined subset available prefix load option factory rdf datasetfactory default factory abide rdf create return datasets option stream boolean default false whether return rdf quad stream instead regular object datasets load vocabulary datasets browser environment cause request individual thus recommend always load need ontology load ontology datasets reduce unnecessary traffic save bandwidth load vocabulary datasets get readable stream quad stream vocabulary function browser prefer usage browser project avoid import zazuko rdf vocabulary require additional bundle dynamic quad module instead import partial module import expand zazuko rdf vocabulary expand import prefix zazuko rdf vocabulary prefix import shrink zazuko rdf vocabulary shrink module zazuko rdf vocabulary expandwithcheck require rdf ext parse datasets see instruction configure application package main module also browser albeit need bundler webpack additional step configure package browser albeit need bundler webpack additional step configure enable dynamic webpack extend bundler setup load content vocabulary triple webpack module rule test raw loader careful prefetching chunk application may generate prefetch link dynamically load chunk ontology quite large number grow time hence may desire exclude certain chunk eagerly load check expand prefix expand ing mean xsd datetime opposite shrink shrink iri ing way expand prefix vocabulary expand prefixedterm string string synchronous expand without check similar prefix sense prefix would expand schema imnotinschemadotorg vocabulary expand prefixedterm string type array promise asynchronous expand type check type array string namednodes see shrink iri shrink ing mean xsd datetime opposite expand expand prefix ing shrink expand xsd datetime xsd datetime vocabulary shrink iri string string note return empty string correspond prefix always check output shrink user provide string access prefix vocabulary prefix get object prefix base uri return object src prefix access package access quad command line package also include simple command line interface forward vocabulary datasets standard output way prefix namespace uri versioning scheme package vendoring ontology ontology update periodically package versioned date pull zazuko rdf vocabulary update vendored ontology achieve npm fetch package add new prefix new prefix add open pull request github new request first check creator owner namespace define prefix check case prefix ambiguous discussion raise pull request get integrate last thing check predefined namespaces dbpedia sparql popular rdf resource like find please refer pull request step add prefix add entry src prefix src prefix necessary add entry override override similar others option scheme iri path relative repository root npm fetch prefix pas parameter multiple prefix also fetch multiple ontology commit change submit project specific prefix also possible add prefix within project function expand expand prefix shrink shrink iri
Semantic web;https://github.com/RMLio/rmlmapper-java;rmlmapper maven rmlmapper execute rml rule generate link java library available via command line api doc rmlmapper load memory aware work big datasets want get start quickly check release release find late cli jar see usage cli commandline interface table content feature feature support support future future release release usage usage cli cli library library docker docker include function include function generate metadata generate metadata test test rdbs rdbs dependency dependency commercial support commercial support remark remark type spreadsheet type spreadsheet xml parse performance xml parse performance language tag support language tag support duplicate removal serialization format duplicate removal serialization format question get help question get help documentation documentation uml diagram uml diagram feature support local source excel xlsx libreoffice csv include csvw json jsonpath xml xpath remote source relational database mysql postgresql oracle sqlserver web apis w3c web thing sparql endpoint via http url via get csv json jsonpath select current object xml xpath function case function within rml map document look rml fno test configuration metadata generation output format nquads default turtle trig trix jsonld hdt join condition target local void sparql endpoint sparql update future function case condition case source nosql database tpf server release standalone jar commandline interface cli every release find release page github find late release recommend way get start rmlmapper want source check rmlmapper maven also test oracle check access oracle database detail need specific set test recommend without test mvn dskiptests true want test skip oracle test mvn test dtest mapper_oracledb_test standalone jar find target jar find target slim jar without bundle dependency standalone jar suffix jar dependency bundle usage cli follow option common map map path string multiple value concatenate output path output serialization serialization format nquads default trig trix jsonld hdt option find execute java jar rmlmapper jar help output find access web apis authentication w3c web thing security describe web apis authentication perform include necessary credential access web api credential supply psd cli argument path argument must point private security contain necessary credential access web api find test case src test resource web thing src test resource web thing access oracle database need add oracle jdbc driver manually class path want access oracle database require driver ojdbc8 ojdbc8 jar execute rmlmapper via option follow rmlmapper jar ojdbc8 jar put jar rmlmapper jdbc driver classpath ugent rml cli main ugent rml cli main entry point rmlmapper rule rml ttl rml rule rule rml ttl exact option mention early support library rmlmapper external library find docker dockerhub publish docker image automatically dockerhub every release find image image docker rmlmapper follow step docker image docker rmlmapper docker container docker pwd rmlmapper map ttl parameter available via cli rmlmapper execute folder docker container include function way include new function within rml mapper dynamic load add link java jar load dynamically runtime preloading register functionality via need rebuild mapper functionality registration function turtle find src main resource function ttl snippet link fno function library provide jar grelfunctions jar dynamic load put java jar resource folder root folder jar location parent folder jar location find dynamically note java jar find relative cwd change function ttl path multiple function ttl path commandline option preloading override dynamic load preload custom function find generate metadata conform describe scientific rmlmapper allow automatically generate metadata specifically need cli argument specify output metadata store level metadata store triple term level metadata test test via test derive test test excel derive test csv script generate_spreadsheet_test_cases rdbs make sure problem problem docker start container cause sqlserver test fail locally test always succeed locally problem docker start container cause postgresql test fail locally window machine dependency dependency license qos logback logback classic eclipse public license gnu less general public license common cli common lang apache license com opencsv opencsv apache license common cli common cli apache license org eclipse rdf4j rdf4j runtime eclipse public license junit junit eclipse public license com jayway jsonpath json path apache license javax xml parser jaxp api apache license org jsoup mit mysql mysql connector java gnu general public license vorbuger mariadb4j mariadb4j apache license postgresql postgresql bsd com microsoft sqlserver mssql jdbc mit com spotify docker client apache license com fasterxml jackson core jackson core apache license org eclipse jetty jetty server eclipse public license apache license org eclipse jetty jetty security eclipse public license apache license org apache jena apache jena libs apache license org apache jena jena fuseki embed apache license com github bjdmeest hdt java gnu less general public license common validator common validator apache license com github fnoio grel function java mit commercial support need specific feature different integration bugfixes _your_ timeline custom expert commercial support license welcome contact mailto info rml regard premise enterprise internal installation integration deployment commercial support available also offer consult thing rml remark type spreadsheet spreadsheet yet regard plain csv type information like currency date xml parse performance rmlmapper xml parse javax xml parser choose support full xpath cause large memory consumption time large original xml size however rmlmapper easily adapt different xml parse might good suit specific case language tag support processor check whether correct language tag regular expression regex support language length currently apply qaa qtz duplicate removal serialization format performance depend serialization format serialization duplicate removal enable duplicate experiment various configuration may lead good performance case question get help question relate write rml map rule rml specification etc feel free ask find bug need feature rmlmapper make issue repository documentation generate static doc apidocs uml diagram architecture uml diagram generate intellij idea require ultimate edition right click package ugent rml diagram show diagram java class diagram choose property class want show upper leave corner export png save diagram uml sequence diagram edit click open exist diagram choose html dimou verborgh mannens mechant van walle automate metadata generation link generation publish workflow proceed 9th workshop link web montreal canada
Semantic web;https://github.com/kasei/kineo;kineo persistent rdf quadstore sparql engine swift release swift package manager swift package add kineo swift project add dependency package swift load create database geo load triple turtle specify filename load filename default graph alternatively load specific name graph similarly custom graph name query default graph query query sparql kineo api kineo api create memory persistent quadstore load rdf evaluate sparql query also api expose rdf term graph vertex edge traversal sparql endpoint finally companion package sparql endpoint allow sparql protocol client access
Semantic web;https://github.com/KNowledgeOnWebScale/unshacled;unshacled visual editor rdf constraint currently support visual notation import export validation constraint previous unshacled implement open summer belgium mit license update version add support different visual notation interact visually rdf constraint content overview overview setup setup contribute contribute overview time write editor support shacl future support shex envision editor make abstraction specific constraint language expose concept simple visual interface functionality drag drop rearrange visualize shape add remove edit shape constraint relationship view edit namespaces prefix import shacl json turtle export shacl json turtle import json turtle view edit json format validate concept internal represent shape edit browser exist shape require import translate translation edit visual editor interface setup start application follow command dependency compile hot reload development documentation generate doc follow command useful develop test linting compile minify production execute command move content dist page branch application automatically deploy contribute section contain information help contribute project information project structure internal cetera please consult wiki previous linting ensure style consistency configure eslintrc test test vue unit test keep directory class test share filename extension somefile somefile test test execute follow command documentation make sure document jsdoc documentation generate command
Semantic web;https://github.com/sebneu/csvw-parser;pycsvw w3c csv web specification author sebastian neumaier jurgen umbrich mao
Semantic web;https://github.com/guiveg/rdfsurveyor;rdf surveyor rdf surveyor easy exploration tool semantic datasets plug cors enable sparql endpoint without require installation feature rdf surveyor intuitive user interface completely hide rdf sparql syntax give overview repository content support class navigation individual visualization installation require explore rdf work large datasets dbpedia prepare work multilingual datasets adapt mobile device restful design please cite rdf surveyor vega gorgojo slaughter von zernichow nikolov roman link exploration rdf surveyor ieee access december usage rdf surveyor web application develop javascript easily deploy web server try rdf surveyor begin exploration repository need copy uri target sparql endpoint optionally uri name graph also import uris well know repository dbpedia import configuration button help improve rdf surveyor available apache license please send email guiveg ifi uio mailto guiveg ifi uio plan rdf surveyor project drop also message comment suggestion improvement screenshots screenshots rdf surveyor screenshot screenshots config png config screenshot screenshots namespaces png namespaces screenshot screenshots upper png upper class screenshot screenshots artwork png artwork class screenshot screenshots painting0 png surrender breda individual screenshot screenshots painting1 png surrender breda individual screenshot screenshots oslo png oslo configuration edit parameter configuration etc config pagesize number element per page default hidemax maximum number element show list include show button default hidebegin element index begin hide default repos preloaded configuration repository element name endpoint uri optionally name graph uri geoenabled true rdf surveyor try find geographic coordinate individual show map widget provide geooptions map widget provide require accesstoken rest parameter change gaenabled true rdf surveyor log event request resource latency number sparql query google gaproperty provide property order log google analytics event
Semantic web;https://github.com/wallix/triplestore;report triple store triple store library manipulate rdf triple fast fluent fashion rdf triple allow represent relation versatile concept link graph traversal storage etc rdf triple follow along w3c rdf note reification implement digestible info rdf feature overview create manage triple convenient dsl snapshot query rdfgraphs binary encode decode lenient ntriples encode decode see w3c test suite _testdata ntriples w3c_suite encode stream encode decode binary ntriples format memory conscious program cli command line interface utility read convert triple library library write language need get test bench import source get cli concept triple make component subject predicate object also view entity attribute value triple consist subject predicate object subject unicode string predicate unicode string object resource iri literal blank node support literal unicode string associate datatype string integer resource iri unicode string point another resource source persistent yet mutable source container triple rdfgraph immutable set triple snapshot source queryable basically collection rdfgraph also view library usage create triple although triple way want usually know rdf vocabulary namespace dynamically even short blank nod language tag literal create triple struct convenience create triple singular struct control embed bnode equality triple source source persistent yet mutable source container triple rdfgraph rdfgraph immutable set triple query get rdfgraph snapshotting source codec triple encode decode either simple binary format standard text format like ntriples triple therefore persist disk serialize send create triple lenient ntriples format encode dot graph load binary multiple rdfgraph concurrently give triplestore cli cli mainly ised triple conversion inspection get github com wallix triplestore cmd triplestore triplestore help usage rdfgraph tree tree define rdfgraph give specific predicate edge consider triple point rdf resource object navigate tree exist api call tree tstore newtree mygraph mypredicate tree traversedfs tree traverseancestors tree traversesiblings look fro info note moment construct new tree graph verify tree valid namely cycle child parent
Semantic web;https://github.com/usc-isi-i2/Web-Karma;karma integration tool travis karma tutorial also check dig web karma extensively process 90m web page see release karma karma information integration tool enable user quickly easily integrate variety source include database spreadsheet delimit text xml json kml web apis user integrate information accord ontology choice graphical user interface automate much process karma recognize map ontology class ontology propose tie together class user interact system adjust automatically generate process user transform need normalize express different format restructure complete user publish integrate rdf store database find useful tutorial project website installation setup look wiki frequently ask question perform offline rdf generation source publish source publish publish locate src main webapp publish r2rml inside karma directory generate rdf csv json xml top level karma directory follow command terminal valid argument value sourcetype csv json xml also need escape double quote inside argument value invocation json generate rdf database table top level karma directory follow command terminal valid argument value dbtype oracle mysql sqlserver postgis sybase invocation mvn exec java dexec mainclass edu isi karma rdf offlinerdfgenerator dexec args help get information require argument set password protection access karma src main config jettyrealm property change user password wish src main webapp web inf web xml uncomment security section end pom xml uncomment security section search loginservices additional step require import oracle database yes due oracle binary license issue distribute jar require import oracle database follow step resolve runtime error get try current source appropriate jdbc drive jar jdk match oracle version link put jar inside lib folder karma source add follow snippet pom xml present inside top level folder karma source inside dependency xml element make sure filename mention systempath element match jar likely installation folder different user karma make sure correct additional step require import mysql database yes due mysql binary license issue distribute jar require import mysql database follow step resolve runtime error get try current source appropriate mysql driver jar jdk match mysql version link put jar inside lib folder karma source add follow snippet pom xml karma jdbc project inside dependency xml element make sure filename mention systempath element match jar likely installation folder different user karma make sure correct version version jar
Semantic web;https://github.com/rdfostrich/ostrich;ostrich _offset enable triple store changesets_ docker automate ostrich _rdf triple store_ allow _multiple versions_ store query time store hybrid _snapshot_ _delta_ _timestamp based_ storage provide good trade storage size query time provide several algorithm enable efficient iterator base query _at_ certain version _between_ version _for_ version query support limit offset triple pattern insertion first insert snapshot encode hdt rdfhdt org delta insert contain addition deletion base last delta snapshot detail ostrich find article ostrich require zlib kyoto cabinet cmake compilation instal compile ostrich always load current directory test query insert input delta must sort spo order evaluate load changesets path structure path_to_patch_directory patch_id main addition txt path_to_patch_directory patch_id main deletion txt csv format insert emit version add durationms rate accsize load changesets query triple pattern give separate line give number replication csv format query emit time microsecond version query type patch offset limit count lookup docker alternatively ostrich docker instead container pre image test query insert evaluate load changesets path structure path_to_patch_directory patch_id main addition txt path_to_patch_directory patch_id main deletion txt load changesets query triple pattern give separate line give number replication enable debug mode compiler variable patch_insert_buffer_size size triple parser buff patch insertion default flush_positions_count amount triple patch position flush disk avoid memory issue default flush_triples_count amount triple store flush disk avoid memory issue default kc_memory_map_size memory map size per tree default 1ll 128mb kc_page_cache_size page cache size per tree default 1ll 32mb min_addition_count minimum addition triple count store change value effect insertion time lookup compatible value default cite extend ostrich part scientific publication would appreciate citation license software write ruben colleague copyright ghent university release mit
Semantic web;https://github.com/wikier/djubby;project currently maintain please risk djubby link frontend sparql endpoint djubby link frontend sparql endpoint django web framework quite inspire richard cyganiak exception html style write scratch due many difference language java framework javaee django information feature provide link interface local remote sparql protocol server provide dereferenceable uris rewrite uris find sparql expose djubby server namespace provide simple html interface show available resource take care handle redirect content negotiation compatible django web framework plan include metadata extension add metadata provide limitation work sparql endpoint answer ask describe query multiple support may work expect recommend simply set separate djubby instance dependency rdflib sparqlwrapper django mimeparse usage installation lib sudo setup author sergio license gnu library less general public license lgpl
Semantic web;https://github.com/RubenVerborgh/N3.js;lightning fast asynchronous stream rdf javascript coverage npm library rdf low level let handle javascript easily offer parse parse triple quad notation3 write write triple quad storage store triple quad memory parse write asynchronous triple arrive soon possible stream stream parse come parse large memory fast fast spec compatible parser come along installation node come npm seamlessly work browser via unfamiliar tool read _webpack create bundle get _introduction need create umd bundle supply name option browserify also load via cdn create triple quad follow rdf low level datafactory give function create triple quad rest document treat triple quad equally assume quad simply triple name default graph parse rdf document quad parser transform turtle trig triple quad document quad callback callback first argument optional error value second quad quad callback invoke last time null quad hash prefix third argument pas second callback parse retrieve prefix read callback provide parse happen synchronously default parser parse permissive superset turtle trig triple quad strict compatibility language pas format argument upon creation notation3 support _only_ format argument possible provide base iri document want parse pas baseiri argument upon creation default parser prefix blank node label digit prefix prevent collision unrelated blank nod identical label blanknodeprefix constructor argument modify prefix set empty string completely disable prefix rdf stream quad parser parse node grow return quad soon ready streamparser node rdf solution ideal consumer slow since source read consumer ready dedicate prefix event signal every prefix prefix term argument write quad string writer serialize quad rdf document write quad addquad default writer write turtle trig quad name graph write triple quad instead pas format argument upon creation quad rdf stream writer also write quad node stream quad stream rdf stream streamwriter node rdf blank nod list might want list notation turtle trig however stream writer create automatically shorthand notation possible blank nod list head late determine conclusively end stream blank list function allow create manually instead store store allow store triple memory find fast create new store add triple pluto dog mickey mouse find triple mickey subject addition deletion quad store provide follow manipulation method addquad insert quad addquads insert array quad removequad remove quad removequads remove array quad remove remove stream quad removematches remove quad match give pattern deletegraph remove quad give graph createblanknode return unused blank node identifier search quad entity store provide follow search method getquads return array quad match give pattern match return stream quad match give pattern countquads count number quad match give pattern foreach execute callback match quad every return whether callback match quad always return true return whether callback match quad return true least getsubjects return array unique subject occur match quad forsubjects execute callback unique subject occur match quad getpredicates return array unique predicate occur match quad forpredicates execute callback unique predicate occur match quad getobjects return array unique object occur match quad forobjects execute callback unique object occur match quad getgraphs return array unique graph occur match quad forgraphs execute callback unique graph occur match quad compatibility format specification parser writer fully compatible follow w3c specification rdf earl rdf earl rdf earl rdf earl addition parser also support notation3 official specification yet parser writer also fully compatible rdf variant w3c specification default mode permissive allow mixture different syntax include rdf pas format option constructor name mime type format strict fault intolerant behavior format string contain star turtlestar trig rdf support format enable interface specification submodules compatible follow interface datafactory implement term create implement triple quad create implement streamparser implement streamwriter implement store implement license contribution library copyright ruben release mit contribution welcome bug report pull request always helpful plan implement large feature best contact first
Semantic web;https://github.com/epimorphics/IntervalServer;intervalserver intervalserver repo contain source servlet provide interval service reference gov source make available apache open source license interval uris interval uris provide information interval service interval uris support statistical publication
Semantic web;https://github.com/daedafusion/cyber-ontology;cyber intelligence ontology cyber license
Semantic web;https://github.com/jiemakel/visu;visu visual sparql query tool available combine google visualization sparql query instantly visualize tool also able save state url query visualization share aggregate birth death place time dbpedia visualize motion chart chart show reason wikipedia contain disproportionate number french people die 1930s number chinese people appear altogether low
Semantic web;https://github.com/kasei/swift-serd;serd swift swift package wrapper serd rdf
Semantic web;https://github.com/gbv/dso;repository contain document service ontology dso uri ontology uri namespace register yet current version specification find public git repository welcome follow diagram illustrate class property define ontology dso serviceevent hasdocument documentservice document class loan hasservice presentation interloan openaccess digitization identification
Semantic web;https://github.com/egonw/jqudt;maven introduction java library deal qudt unit conversion qudt quantity unit dimension type owl xml qudt project nasa ames research center topquadrant inc license java library new bsd installation maven groovy quick demo keep mind conversion purely derive information define qudt ontology take advantage fact unit type qudt molarconcentrationunit qudt temperatureunit respectively source output
Semantic web;https://github.com/stardog-union/stardog-groovy;stardog groovy license apache license version _current version stardog groovy groovy language bind develop apps stardog graph rdf bind provide set idiomatic groovy apis interact stardog database similar stardog spring project easy method create connection pool ability query query stardog groovy standard groovy pattern pas closure iterate set common case stardog groovy etl script command line application usage grail groovy framework stardog stardog com follow installation instruction add com complexible stardog stardog groovy dependency declaration tool maven gradle make sure prioritize local maven repository repository core stardog binary instal step enjoy also shadowjar task available via shadow plugin produce fatjar stardog dependency quickstart create new embed database line collect query via closure collect query via project value like query execute tuplequeryresult insert multidimensional array single triple also work remove triple via simple groovy list upgrade prior release significant change installation available via maven central com complexible stardog stardog groovy dependency long dependency spring stardog spring datasource long pas constructor stardog groovy class perform operation stardog groovy late gradle development get start clone project need local copy stardog able information start stardog service work stardog find everything need get stardog local project start local stardog create testdb stardog admin create testdb stardog lumbschema owl stardog university0_0 owl project gradle validate test pas gradle jar local junit test create jar libs test stardog receive error test likely stardog server invalid license usually manifest exit gradle worker jvm junit test contribute framework continuous development please check page welcome contribute license copyright stardog union copyright clark parsia llc copyright baker license apache license version license may except compliance license may obtain copy license apache license version unless require applicable law agree write software distribute license distribute basis without warranty condition kind either express imply see license specific language govern permission limitation license
