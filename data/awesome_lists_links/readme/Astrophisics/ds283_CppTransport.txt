[![Build Status: experimental](https://travis-ci.org/ds283/CppTransport.svg?branch=experimental)](https://travis-ci.org/ds283/CppTransport)

# Overview

**CppTransport** is an automated platform that can be used to solve for the 2- and 3-point functions of the perturbations produced during an inflationary epoch in the very early universe. The present version can accommodate models with an arbitrary  field-space metric and arbitrary potential, including models with canonical kinetic terms as a special case. It does not yet support more general models where the Lagrangian is an arbitrary function of the kinetic energies and field values. For example, the well-studied Dirac-Born-Infeld model is of this type.

Future versions of **CppTransport** may include support for these generalizations. If you would like to contribute to this effort then any patches, corrections or enhancements are very welcome. The best way to start is to fork this repository and submit enhancements [via pull requests](https://guides.github.com/introduction/flow).

The numerical results produced by **CppTransport** are accurate to tree-level, including all quantum effects. In particular this includes:

* effects generated by interference between growing and decaying modes near horizon exit
* effects generated by a nontrivial mass hierarchy, correctly accounting for modes that are heavy or light compared to the inflationary scale
* particle production due to time-varying masses
* effects from trajectory bending and species correlation near horizon exit
* superhorizon evolution of the perturbations

The limitations of the tree-level calculation are discussed more explicitly in the technical methods paper referenced [below](#how-to-cite-cpptransport). If you are studying a non-standard scenario, particularly one where the curvature perturbation is generated by decay of other particles, then it is advisable to check that your scenario can be handled by tree-level methods. This is **not the same** as checking that each relevant S-matrix process is individually well-described by a tree-level calculation.

The present version of **CppTransport** has been written by David Seery at the University of Sussex with contributions from Sean Butchers. It implements a formalism developed by Mafalda Dias, Jonathan Frazer, David Mulryne and David Seery.

A number of different tools implementing the same formalism, but with slightly different design goals, have been developed. These include a [Python platform](https://github.com/jronayne/PyTransport) and a [Mathematica platform](https://github.com/mafaldadias/mTransport). These tools can be obtained from their respective GitHub repositories, or are available from [transportmethod.com](http://transportmethod.com).

# Releases

The current release of CppTransport is 2018.1 (23 February 2018). This release can be identified via a DOI linking to a deposit at [zenodo.org](https://zenodo.org/record/1183518). The same .tar.gz archives for each release are also available directly from [GitHub](https://github.com/ds283/CppTransport/releases), but for citations please use the [zenodo.org](https://zenodo.org) versions.

* 2018.1 (23 February 2018) [Source code DOI:10.5281/zenodo.1183518](https://doi.org/10.5281/zenodo.1183518) [user guide being updated]
* 2016.3 (31 August 2016) [Source code DOI:10.5281/zenodo.61237](https://doi.org/10.5281/zenodo.61237) | [User guide DOI:10.5281/zenodo.61239](https://doi.org/10.5281/zenodo.61239)
* 2016.2 (3 August 2016) [Source code DOI:10.5281/zenodo.59403](https://doi.org/10.5281/zenodo.59403) | [User guide DOI:10.5281/zenodo.59406](https://doi.org/10.5281/zenodo.59406)
* 2016.1 (26 July 2016) [Source code DOI:10.5281/zenodo.58710](https://doi.org/10.5281/zenodo.58710) | [User guide DOI:10.5281/zenodo.58714](https://doi.org/10.5281/zenodo.58714)

# Upgrading repositories from 2016.3 and earlier

Version 2018.1 introduces a [small change](https://github.com/ds283/CppTransport/commit/1a61ecc7d1003fff20b662648f709ce0e7bcf220) in the repository database. This is backwards compatible: it is generally possible to use repositories from <= 2016.3 with >= 2018.1, and vice-versa, *except* for generating HTML reports. In this case, **CppTransport** versions 2018.1 and above will produce an error:
```
SQLite error: no such column: cpu_brand
```
To fix this you should upgrade your repositories to the new format. As explained above, they will remain compatible with older versions of **CppTransport**. To upgrade, simply run a **CppTransport** with the `--upgrade` flag:
```
./dquad -v -r <repo name> --upgrade
```
This is a one-time operation; it does not need to be done again. If you enabled verbose output using `-v` then you will see a list of notifications when **CppTransport** finds a data container that requires conversion:
```
Upgrading data container '.../20160421T020324/data.sqlite'
```

# Licensing

**CppTransport** is distributed under the GNU General Public License version 2, or (at your option) any later version. This license is bundled with the source code as LICENSE.txt.

The **CppTransport** platform depends on, or incorporates, portions of other open source projects. For details, see the file NOTICE.txt.

# Examples and cookbook

An extensive worked example of double-quadratic inflation is included in the [user guide](https://doi.org/10.5281/zenodo.58714).

Alternatively, the C++ codes and model description files required to reproduce the plots in Dias et al. (2016) are available in a [separate GitHub repository](https://github.com/ds283/transport-paper).

Some examples and cookbook-style snippets for common tasks are collected on the [Wiki](https://github.com/ds283/CppTransport/wiki).

# How to cite *CppTransport*

Further development of **CppTransport** depends on demonstrating its usefulness to funding agencies. If you use **CppTransport** to produce numerical results supporting your research, then we would appreciate a citation to the main technical reference:

* *Numerical evaluation of the bispectrum in multiple-field inflation*, Mafalda Dias, Jonathan Frazer, David Mulryne and David Seery. [arXiv:1609.00379](http://arXiv.org/abs/1609.00379)

The **CppTransport** platform itself can be cited using the DOI for the 2016.3 user guide:

* *CppTransport: a platform to automate calculation of inflationary correlation functions*, David Seery. [arXiv:1609.00380](https://arXiv.org/abs/1609.00380) [DOI:10.5281/zenodo.61239](https://doi.org/10.5281/zenodo.61239)

### Original literature

The use of evolution equations to compute n-point functions synthesized during an inflationary epoch (including all quantum effects) was described in:

* *Transporting non-Gaussianity from sub to super-horizon scales*, David J. Mulryne. JCAP 1309 (2013) 010 [arXiv:1302.3842](http://arxiv.org/abs/arXiv:1302.3842) [DOI:10.1088/1475-7516/2013/09/010](https://doi.org/10.1088/1475-7516/2013/09/010)

Concrete numerical details are described in the paper [*Numerical evaluation of the bispectrum in multiple-field inflation*](http://arXiv.org/abs/1609.00379) listed above, or were first given for the two-point function in:

* *Computing observables in curved multifield models of inflation - A guide (with code) to the transport method*, Mafalda Dias, Jonathan Frazer and David Seery. JCAP 1512 (2015) 12 030 [arXiv:1502.03125](http://arxiv.org/abs/arXiv:1502.03125) [DOI:10.1088/1475-7516/2015/12/030](https://doi.org/10.1088/1475-7516/2015/12/030)

A full list of references is given in the **CppTransport** documentation, or can be found at [transportmethod.com](https://transportmethod.com/method/).

# Acknowledgments

Development of the **CppTransport** platform was supported between October 2012 and September 2017 by the grant *Precision tests of the inflationary scenario*, funded by the European Union’s Seventh Framework Programme (FP/2007–2013) and ERC Grant Agreement No. 308082.

Some development has been supported by other sources, including:

* The UK Science and Technology Facilities Council via grants ST/I000976/1, ST/L000652/1 and ST/P000525/1 which funded the science programme at the University of Sussex Astronomy Centre between April 2011 abd March 2020.

* The Leverhulme Trust via a Philip Leverhulme Prize.

* The National Science Foundation Grant No. PHYS-1066293 and the hospitality of the Aspen Center for Physics.

* The hospitality of the Higgs Centre for Theoretical Physics at the University of Edinburgh, and the Centre for Astronomy & Particle Physics at the University of Nottingham.
