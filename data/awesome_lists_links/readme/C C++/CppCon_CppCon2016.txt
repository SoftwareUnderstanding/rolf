CppCon 2016 Presentation Materials
==================================

https://github.com/CppCon/CppCon2016 is the canonical location for presentations
and code from [CppCon 2016](https://github.com/CppCon/CppCon2016/tree/master/).

[For Speakers: Submitting Materials](https://github.com/CppCon/CppCon2016/tree/master/Submitting.md)

# Index of Materials

## Keynotes

 - [extern C - Talking to C Programmers About C++](https://github.com/CppCon/CppCon2016/tree/master/Keynotes/extern%20C%20-%20Talking%20to%20C%20Programmers%20About%20C++/extern%20C%20-%20Talking%20to%20C%20Programmers%20About%20C++%20-%20Dan%20Saks%20-%20CppCon%202016.pdf) by Dan Saks
 - [The Evolution of C++ - Past, Present, and Future](https://github.com/CppCon/CppCon2016/tree/master/Keynotes/The%20Evolution%20of%20C++%20-%20Past,%20Present,%20and%20Future/The%20Evolution%20of%20C++%20-%20Past,%20Present,%20and%20Future%20-%20Bjarne%20Stroustrup%20-%20CppCon%202016.pdf) by Bjarne Stroustrup

## Presentations

 - [A C++ MQTT Message Broker for the Enterprise](https://github.com/CppCon/CppCon2016/tree/master/Presentations/A%20C++%20MQTT%20Message%20Broker%20for%20the%20Enterprise/A%20C++%20MQTT%20Message%20Broker%20for%20the%20Enterprise%20-%20John%20Dubchak%20-%20CppCon%202016.pdf) by John Dubchak [.pptx](https://github.com/CppCon/CppCon2016/tree/master/Presentations/A%20C++%20MQTT%20Message%20Broker%20for%20the%20Enterprise/A%20C++%20MQTT%20Message%20Broker%20for%20the%20Enterprise%20-%20John%20Dubchak%20-%20CppCon%202016.pptx) [.pdf](https://github.com/CppCon/CppCon2016/tree/master/Presentations/A%20C++%20MQTT%20Message%20Broker%20for%20the%20Enterprise/A%20C++%20MQTT%20Message%20Broker%20for%20the%20Enterprise%20-%20John%20Dubchak%20-%20CppCon%202016.pdf)
 - [A modern database interface for C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/A%20modern%20database%20interface%20for%20C++/A%20modern%20database%20interface%20for%20C++%20-%20Erik%20Smith%20-%20CppCon%202016.pdf) by Erik Smith
 - [AAAARGH! Adopting Almost Always Auto Reinforces Good Habits!](https://github.com/CppCon/CppCon2016/tree/master/Presentations/AAAARGH!%20Adopting%20Almost%20Always%20Auto%20Reinforces%20Good%20Habits!/AAAARGH!%20Adopting%20Almost%20Always%20Auto%20Reinforces%20Good%20Habits!%20-%20Andy%20Bond%20-%20CppCon%202016.pdf) by Andy Bond
 - [accumulate - Exploring an Algorithmic Empire](https://github.com/CppCon/CppCon2016/tree/master/Presentations/accumulate%20-%20Exploring%20an%20Algorithmic%20Empire/accumulate%20-%20Exploring%20an%20Algorithmic%20Empire%20-%20Ben%20Deane%20-%20CppCon%202016.pdf) by Ben Deane
 - [Advanced Levelization Techniques](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Advanced%20Levelization%20Techniques/Advanced%20Levelization%20Techniques%20-%20John%20Lakos%20-%20CppCon%202016.pdf) by John Lakos
 - [Algorithm Design For Values Distributed In Time](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Algorithm%20Design%20For%20Values%20Distributed%20In%20Time/Algorithm%20Design%20For%20Values%20Distributed%20In%20Time%20-%20Kirk%20Shoop%20-%20CppCon%202016.pdf) by Kirk Shoop
 - [Beyond the Issaquah Challenge](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Beyond%20the%20Issaquah%20Challenge/Beyond%20the%20Issaquah%20Challenge%20-%20Paul%20McKenney%20-%20CppCon%202016.pdf) by Paul McKenney
 - [Building Software Capital](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Building%20Software%20Capital/Building%20Software%20Capital%20-%20David%20Sankel%20-%20CppCon%202016.pdf) by David Sankel
 - [C++ Coroutines - Under The Covers](https://github.com/CppCon/CppCon2016/tree/master/Presentations/C++%20Coroutines%20-%20Under%20The%20Covers/C++%20Coroutines%20-%20Under%20The%20Covers%20-%20Gor%20Nishanov%20-%20CppCon%202016.pdf) by Gor Nishanov
 - [C++ Costless Abstractions - the Compiler View](https://github.com/CppCon/CppCon2016/tree/master/Presentations/C++%20Costless%20Abstractions%20-%20the%20Compiler%20View/C++%20Costless%20Abstractions%20-%20the%20Compiler%20View%20-%20Serge%20Guelton%20-%20CppCon%202016.pdf) by Serge Guelton [README](https://github.com/CppCon/CppCon2016/tree/master/Presentations/C++%20Costless%20Abstractions%20-%20the%20Compiler%20View/README.md)
 - [C++14 Reflections Without Macros, Markup nor External Tooling](https://github.com/CppCon/CppCon2016/tree/master/Presentations/C++14%20Reflections%20Without%20Macros,%20Markup%20nor%20External%20Tooling/C++14%20Reflections%20Without%20Macros,%20Markup%20nor%20External%20Tooling%20-%20Antony%20Polukhin%20-%20CppCon%202016.pdf) by Antony Polukhin [.odp](https://github.com/CppCon/CppCon2016/tree/master/Presentations/C++14%20Reflections%20Without%20Macros,%20Markup%20nor%20External%20Tooling/C++14%20Reflections%20Without%20Macros,%20Markup%20nor%20External%20Tooling%20-%20Antony%20Polukhin%20-%20CppCon%202016.odp) [.pdf](https://github.com/CppCon/CppCon2016/tree/master/Presentations/C++14%20Reflections%20Without%20Macros,%20Markup%20nor%20External%20Tooling/C++14%20Reflections%20Without%20Macros,%20Markup%20nor%20External%20Tooling%20-%20Antony%20Polukhin%20-%20CppCon%202016.pdf)
 - [Channels - An Alternative to Callbacks and Futures](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Channels%20-%20An%20Alternative%20to%20Callbacks%20and%20Futures/Channels%20-%20An%20Alternative%20to%20Callbacks%20and%20Futures%20-%20John%20Bandela%20-%20CppCon%202016.pdf) by John Bandela
 - [Constant Fun](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Constant%20Fun/Constant%20Fun%20-%20Dietmar%20Kuehl%20-%20CppCon%202016.pdf) by Dietmar Kuehl [README](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Constant%20Fun/README.md)
 - [Deploying C++ modules to 100s of millions of lines of code](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Deploying%20C++%20modules%20to%20100s%20of%20millions%20of%20lines%20of%20code/Deploying%20C++%20modules%20to%20100s%20of%20millions%20of%20lines%20of%20code%20-%20Manuel%20Klimek%20-%20CppCon%202016.pdf) by Manuel Klimek
 - [Developing Correct C++ at Facebook Scale](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Developing%20Correct%20C++%20at%20Facebook%20Scale/Developing%20Correct%20C++%20at%20Facebook%20Scale%20-%20Mark%20Isaacson%20-%20CppCon%202016.pdf) by Mark Isaacson
 - [Elegant Asynchronous Code](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Elegant%20Asynchronous%20Code/Elegant%20Asynchronous%20Code%20-%20Nat%20Goodspeed%20-%20CppCon%202016.pdf) by Nat Goodspeed
 - [Embracing Standard C++ for the Windows Runtime](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Embracing%20Standard%20C++%20for%20the%20Windows%20Runtime/Embracing%20Standard%20C++%20for%20the%20Windows%20Runtime%20-%20Kenny%20Kerr%20and%20James%20McNellis%20-%20CppCon%202016.pdf) by Kenny Kerr and James McNellis
 - [From Numerical Cosmology to Efficient Bit Abstractions for the Standard Library](https://github.com/CppCon/CppCon2016/tree/master/Presentations/From%20Numerical%20Cosmology%20to%20Efficient%20Bit%20Abstractions%20for%20the%20Standard%20Library/From%20Numerical%20Cosmology%20to%20Efficient%20Bit%20Abstractions%20for%20the%20Standard%20Library%20-%20Vincent%20Reverdy%20-%20CppCon%202016.pdf) by Vincent Reverdy
 - [From Zero To Iterators](https://github.com/CppCon/CppCon2016/tree/master/Presentations/From%20Zero%20To%20Iterators/From%20Zero%20To%20Iterators%20-%20Patrick%20Niedzielski%20-%20CppCon%202016.pdf) by Patrick Niedzielski
 - [Game Engine Using C++11](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Game%20Engine%20Using%20C++11/Game%20Engine%20Using%20C++11%20-%20Jason%20Jurecka%20-%20CppCon%202016.pdf) by Jason Jurecka
 - [High Performance C++ Concurrent Transactional Data Structures](https://github.com/CppCon/CppCon2016/tree/master/Presentations/High%20Performance%20C++%20Concurrent%20Transactional%20Data%20Structures/High%20Performance%20C++%20Concurrent%20Transactional%20Data%20Structures%20-%20Deli%20Zhang%20-%20CppCon%202016.pdf) by Deli Zhang [README](https://github.com/CppCon/CppCon2016/tree/master/Presentations/High%20Performance%20C++%20Concurrent%20Transactional%20Data%20Structures/README.md)
 - [How to test static_assert](https://github.com/CppCon/CppCon2016/tree/master/Presentations/How%20to%20test%20static_assert/How%20to%20test%20static_assert%20-%20Roland%20Bock%20-%20CppCon%202016.pdf) by Roland Bock
 - [I Just Wanted a Random Integer!](https://github.com/CppCon/CppCon2016/tree/master/Presentations/I%20Just%20Wanted%20a%20Random%20Integer!/I%20Just%20Wanted%20a%20Random%20Integer!%20-%20Cheinan%20Marks%20-%20CppCon%202016.pdf) by Cheinan Marks
 - [Implementing a Modern C++ MQTT Client for Embedded Devices](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Implementing%20a%20Modern%20C++%20MQTT%20Client%20for%20Embedded%20Devices/Implementing%20a%20Modern%20C++%20MQTT%20Client%20for%20Embedded%20Devices%20-%20Michael%20Caisse%20-%20CppCon%202016.pdf) by Michael Caisse
 - [Implementing Lightweight Object Persistence With Modern C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Implementing%20Lightweight%20Object%20Persistence%20With%20Modern%20C++/Implementing%20Lightweight%20Object%20Persistence%20With%20Modern%20C++%20-%20Bob%20Steagall%20-%20CppCon%202016.pdf) by Bob Steagall
 - [Improving Performance Through Compiler Switches](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Improving%20Performance%20Through%20Compiler%20Switches/Improving%20Performance%20Through%20Compiler%20Switches%20-%20Tim%20Haines%20-%20CppCon%202016.pdf) by Tim Haines
 - [IncludeOS - from bootloader to REST API with the new C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/IncludeOS%20-%20from%20bootloader%20to%20REST%20API%20with%20the%20new%20C++/IncludeOS%20-%20from%20bootloader%20to%20REST%20API%20with%20the%20new%20C++%20-%20Alfred%20Bratterud%20-%20CppCon%202016.pdf) by Alfred Bratterud [README](https://github.com/CppCon/CppCon2016/tree/master/Presentations/IncludeOS%20-%20from%20bootloader%20to%20REST%20API%20with%20the%20new%20C++/README.md)
 - [Instruction Re-ordering Everywhere](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Instruction%20Re-ordering%20Everywhere/Instruction%20Re-ordering%20Everywhere%20-%20Charles%20Bay%20-%20CppCon%202016.pdf) by Charles Bay
 - [Introduction to C++ Coroutines](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Introduction%20to%20C++%20Coroutines/Introduction%20to%20C++%20Coroutines%20-%20James%20McNellis%20-%20CppCon%202016.pdf) by James McNellis
 - [Iterator Haiku](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Iterator%20Haiku/Iterator%20Haiku%20-%20Casey%20Carter%20-%20CppCon%202016.pdf) by Casey Carter [.pdf](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Iterator%20Haiku/Iterator%20Haiku%20-%20Casey%20Carter%20-%20CppCon%202016.pdf) [.pptx](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Iterator%20Haiku/Iterator%20Haiku%20-%20Casey%20Carter%20-%20CppCon%202016.pptx)
 - [Lifetime Safety By Default - Making Code Leak-Free by Construction](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Lifetime%20Safety%20By%20Default%20-%20Making%20Code%20Leak-Free%20by%20Construction/Lifetime%20Safety%20By%20Default%20-%20Making%20Code%20Leak-Free%20by%20Construction%20-%20Herb%20Sutter%20-%20CppCon%202016.pdf) by Herb Sutter
 - [Make Friends with the Clang Static Analysis Tools](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Make%20Friends%20with%20the%20Clang%20Static%20Analysis%20Tools/Make%20Friends%20with%20the%20Clang%20Static%20Analysis%20Tools%20-%20Gabor%20Horvath%20-%20CppCon%202016.pdf) by Gabor Horvath [.pptx](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Make%20Friends%20with%20the%20Clang%20Static%20Analysis%20Tools/Make%20Friends%20with%20the%20Clang%20Static%20Analysis%20Tools%20-%20Gabor%20Horvath%20-%20CppCon%202016.pptx) [.pdf](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Make%20Friends%20with%20the%20Clang%20Static%20Analysis%20Tools/Make%20Friends%20with%20the%20Clang%20Static%20Analysis%20Tools%20-%20Gabor%20Horvath%20-%20CppCon%202016.pdf)
 - [Optimally Shooting Furry Balls out of Vulkanoes](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Optimally%20Shooting%20Furry%20Balls%20out%20of%20Vulkanoes/Optimally%20Shooting%20Furry%20Balls%20out%20of%20Vulkanoes%20-%20Alexandru%20Voicu%20-%20CppCon%202016.pdf) by Alexandru Voicu
 - [Out of memory - Business as usual](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Out%20of%20memory%20-%20Business%20as%20usual/Out%20of%20memory%20-%20Business%20as%20usual%20-%20Sergey%20Zubkov%20-%20CppCon%202016.pdf) by Sergey Zubkov
 - [Parallelism in Modern C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Parallelism%20in%20Modern%20C++/Parallelism%20in%20Modern%20C++%20-%20Hartmut%20Kaiser%20-%20CppCon%202016.pdf) by Hartmut Kaiser
 - [Putting Coroutines to Work with the Windows Runtime](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Putting%20Coroutines%20to%20Work%20with%20the%20Windows%20Runtime/Putting%20Coroutines%20to%20Work%20with%20the%20Windows%20Runtime%20-%20Kenny%20Kerr%20and%20James%20McNellis%20-%20CppCon%202016.pdf) by Kenny Kerr and James McNellis
 - [Python and C++. The beauty and the beast](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Python%20and%20C++.%20The%20beauty%20and%20the%20beast/Python%20and%20C++.%20The%20beauty%20and%20the%20beast%20-%20Diego%20Rodriguez-Losada%20-%20CppCon%202016.pdf) by Diego Rodriguez-Losada
 - [Rainbow Six Siege - Quest for Performance](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Rainbow%20Six%20Siege%20-%20Quest%20for%20Performance/Rainbow%20Six%20Siege%20-%20Quest%20for%20Performance%20-%20Nicolas%20Fleury%20-%20CppCon%202016.pdf) by Nicolas Fleury
 - [Regular Expressions in C++, Present and Future](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Regular%20Expressions%20in%20C++,%20Present%20and%20Future/Regular%20Expressions%20in%20C++,%20Present%20and%20Future%20-%20Tim%20Shen%20-%20CppCon%202016.pdf) by Tim Shen
 - [SPMD Programming Using C++ and ISPC](https://github.com/CppCon/CppCon2016/tree/master/Presentations/SPMD%20Programming%20Using%20C++%20and%20ISPC/SPMD%20Programming%20Using%20C++%20and%20ISPC%20-%20Nicolas%20Guillemot%20-%20CppCon%202016.pdf) by Nicolas Guillemot
 - [Standards Proposals for SG6 - Integers](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Standards%20Proposals%20for%20SG6%20-%20Integers/Standards%20Proposals%20for%20SG6%20-%20Integers%20-%20John%20McFarlane%20-%20CppCon%202016.pdf) by John McFarlane
 - [STL Algorithms](https://github.com/CppCon/CppCon2016/tree/master/Presentations/STL%20Algorithms/STL%20Algorithms%20-%20Marshall%20Clow%20-%20CppCon%202016.pdf) by Marshall Clow
 - [The Continuing Future of Concurrency in C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20Continuing%20Future%20of%20Concurrency%20in%20C++/The%20Continuing%20Future%20of%20Concurrency%20in%20C++%20-%20Anthony%20Williams%20-%20CppCon%202016.pdf) by Anthony Williams
 - [The Exception Situation](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20Exception%20Situation/The%20Exception%20Situation%20-%20Patrice%20Roy%20-%20CppCon%202016.pdf) by Patrice Roy
 - [The Guideline Support Library - One Year Later](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20Guideline%20Support%20Library%20-%20One%20Year%20Later/The%20Guideline%20Support%20Library%20-%20One%20Year%20Later%20-%20Neil%20MacIntosh%20-%20CppCon%202016.pdf) by Neil MacIntosh
 - [The MAME Story - From C to Modern C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20MAME%20Story%20-%20From%20C%20to%20Modern%20C++/The%20MAME%20Story%20-%20From%20C%20to%20Modern%20C++%20-%20Miodrag%20Milanovic%20-%20CppCon%202016.pdf) by Miodrag Milanovic [README](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20MAME%20Story%20-%20From%20C%20to%20Modern%20C++/README.md)
 - [The Power of Reflection with Facebook's Thrift](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20Power%20of%20Reflection%20with%20Facebook's%20Thrift/The%20Power%20of%20Reflection%20with%20Facebook's%20Thrift%20-%20Marcelo%20Juchem%20-%20CppCon%202016.pdf) by Marcelo Juchem
 - [The speed of concurrency (is lock-free faster)](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20speed%20of%20concurrency%20/The%20speed%20of%20concurrency%20-%20Fedor%20Pikus%20-%20CppCon%202016.bz2) by Fedor Pikus
 - [The strange details of std string at Facebook](https://github.com/CppCon/CppCon2016/tree/master/Presentations/The%20strange%20details%20of%20std%20string%20at%20Facebook/The%20strange%20details%20of%20std%20string%20at%20Facebook%20-%20Nicholas%20Ormrod%20-%20CppCon%202016.pdf) by Nicholas Ormrod
 - [Towards Heterogeneous Programming in C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Towards%20Heterogeneous%20Programming%20in%20C++/Towards%20Heterogeneous%20Programming%20in%20C++%20-%20Gordon%20Brown%20and%20Michael%20Wong%20-%20CppCon%202016.pdf) by Gordon Brown and Michael Wong
 - [tuple, What's New, And How It Works](https://github.com/CppCon/CppCon2016/tree/master/Presentations/tuple,%20What's%20New,%20And%20How%20It%20Works/tuple,%20What's%20New,%20And%20How%20It%20Works%20-%20Stephan%20T.%20Lavavej%20-%20CppCon%202016.pdf) by Stephan T. Lavavej
 - [Using build2, C++ Build Toolchain](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Using%20build2,%20C++%20Build%20Toolchain/Using%20build2,%20C++%20Build%20Toolchain%20-%20Boris%20Kolpackov%20-%20CppCon%202016.pdf) by Boris Kolpackov [.txt](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Using%20build2,%20C++%20Build%20Toolchain/Using%20build2,%20C++%20Build%20Toolchain%20-%20Boris%20Kolpackov%20-%20CppCon%202016.txt) [.pdf](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Using%20build2,%20C++%20Build%20Toolchain/Using%20build2,%20C++%20Build%20Toolchain%20-%20Boris%20Kolpackov%20-%20CppCon%202016.pdf) [README](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Using%20build2,%20C++%20Build%20Toolchain/README.md)
 - [Using Weakly Ordered C++ Atomics Correctly](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Using%20Weakly%20Ordered%20C++%20Atomics%20Correctly/Using%20Weakly%20Ordered%20C++%20Atomics%20Correctly%20-%20Hans%20Boehm%20-%20CppCon%202016.pdf) by Hans Boehm
 - [Variadic expansion in examples](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Variadic%20expansion%20in%20examples/Variadic%20expansion%20in%20examples%20-%20Michał%20Dominiak%20-%20CppCon%202016.pdf) by Michał Dominiak
 - [Variants - Past, Present, and Future](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Variants%20-%20Past,%20Present,%20and%20Future/Variants%20-%20Past,%20Present,%20and%20Future%20-%20David%20Sankel%20-%20CppCon%202016.pdf) by David Sankel
 - [Welcome To The Time Zone](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Welcome%20To%20The%20Time%20Zone/Welcome%20To%20The%20Time%20Zone%20-%20Howard%20Hinnant%20-%20CppCon%202016.pdf) by Howard Hinnant
 - [What C++ Programmers Need to Know about Header \<random\>](https://github.com/CppCon/CppCon2016/blob/master/Presentations/What%20C%2B%2B%20Programmers%20Need%20to%20Know%20About%20random/What%20C%2B%2B%20Programmers%20Need%20to%20Know%20About%20random%20-%20Walter%20E%20Brown%20-%20CppCon%202016.pdf) by Walter E. Brown
 - [What Happened to Deprecated and Removed Features of C++](https://github.com/CppCon/CppCon2016/tree/master/Presentations/What%20Happened%20to%20Deprecated%20and%20Removed%20Features%20of%20C++/What%20Happened%20to%20Deprecated%20and%20Removed%20Features%20of%20C++%20-%20Billy%20Baker%20-%20CppCon%202016.pdf) by Billy Baker
 - [What is the basic interface](https://github.com/CppCon/CppCon2016/tree/master/Presentations/What%20is%20the%20basic%20interface/What%20is%20the%20basic%20interface%20-%20Lisa%20Lippincott%20-%20CppCon%202016.pdf) by Lisa Lippincott
 - [What We’ve Learned From the C++ Community](https://github.com/CppCon/CppCon2016/tree/master/Presentations/What%20We’ve%20Learned%20From%20the%20C++%20Community/What%20We’ve%20Learned%20From%20the%20C++%20Community%20-%20Rob%20Irving%20and%20Jason%20Turner%20-%20CppCon%202016.pdf) by Rob Irving and Jason Turner
 - [Writing applications in modern C++ and Qt](https://github.com/CppCon/CppCon2016/tree/master/Presentations/Writing%20applications%20in%20modern%20C++%20and%20Qt/Writing%20applications%20in%20modern%20C++%20and%20Qt%20-%20Jens%20Weller%20-%20CppCon%202016.pdf) by Jens Weller

## Tutorials

 - [A chrono Tutorial](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/A%20chrono%20Tutorial/A%20chrono%20Tutorial%20-%20Howard%20Hinnant%20-%20CppCon%202016.pdf) by Howard Hinnant
 - [Asynchronous IO with Boost.Asio](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Asynchronous%20IO%20with%20Boost.Asio/Asynchronous%20IO%20with%20Boost.Asio%20-%20Michael%20Caisse%20-%20CppCon%202016.pdf) by Michael Caisse
 - [BDE Libraries - An Orientation](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/BDE%20Libraries%20-%20An%20Orientation/BDE%20Libraries%20-%20An%20Orientation%20-%20Steven%20Breitstein%20-%20CppCon%202016.pdf) by Steven Breitstein
 - [Better Mutual Exclusion on the Filesystem](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Better%20Mutual%20Exclusion%20on%20the%20Filesystem/Better%20Mutual%20Exclusion%20on%20the%20Filesystem%20-%20Niall%20Douglas%20-%20CppCon%202016.pdf) by Niall Douglas
 - [C++17 Parallel Algorithms and Beyond](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/cpp17_parallel_algorithms/cppcon_2016__cpp17_parallel_algorithms__bryce_adelstein_lelbach__r2.pdf) by Bryce Adelstein lelbach
 - [GDB - a lot more than you realized](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/GDB%20-%20a%20lot%20more%20than%20you%20realized/GDB%20-%20a%20lot%20more%20than%20you%20realized%20-%20Greg%20Law%20-%20CppCon%202016.pdf) by Greg Law
 - [Implementing static control flow in C++14](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Implementing%20static%20control%20flow%20in%20C++14/Implementing%20static%20control%20flow%20in%20C++14%20-%20Vittorio%20Romeo%20-%20CppCon%202016.pdf) by Vittorio Romeo [.pptx](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Implementing%20static%20control%20flow%20in%20C++14/Implementing%20static%20control%20flow%20in%20C++14%20-%20Vittorio%20Romeo%20-%20CppCon%202016.pptx) [.pdf](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Implementing%20static%20control%20flow%20in%20C++14/Implementing%20static%20control%20flow%20in%20C++14%20-%20Vittorio%20Romeo%20-%20CppCon%202016.pdf) [README](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Implementing%20static%20control%20flow%20in%20C++14/README.md)
 - [Practical Performance Practices](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Practical%20Performance%20Practices/Practical%20Performance%20Practices%20-%20Jason%20Turner%20-%20CppCon%202016.pdf) by Jason Turner
 - [Template Normal Programming, Part 1](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Template%20Normal%20Programming,%20Part%201/Template%20Normal%20Programming,%20Part%201%20-%20Arthur%20O'Dwyer%20-%20CppCon%202016.pdf) by Arthur O'Dwyer
 - [Template Normal Programming, Part 2](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Template%20Normal%20Programming,%20Part%202/Template%20Normal%20Programming,%20Part%202%20-%20Arthur%20O'Dwyer%20-%20CppCon%202016.pdf) by Arthur O'Dwyer
 - [The Blaze High Performance Math Library](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/The%20Blaze%20High%20Performance%20Math%20Library/The%20Blaze%20High%20Performance%20Math%20Library%20-%20Klaus%20Iglberger%20-%20CppCon%202016.pdf) by Klaus Iglberger
 - [Using Types Effectively](https://github.com/CppCon/CppCon2016/tree/master/Tutorials/Using%20Types%20Effectively/Using%20Types%20Effectively%20-%20Ben%20Deane%20-%20CppCon%202016.pdf) by Ben Deane

## Demos

 - [Achieving financial data processing performance through compile time introspection](https://github.com/CppCon/CppCon2016/tree/master/Demos/Achieving%20financial%20data%20processing%20performance%20through%20compile%20time%20introspection/Achieving%20financial%20data%20processing%20performance%20through%20compile%20time%20introspection%20-%20Eduardo%20Madrid%20-%20CppCon%202016.pdf) by Eduardo Madrid [more materials](https://github.com/CppCon/CppCon2016/tree/master/Demos/Achieving%20financial%20data%20processing%20performance%20through%20compile%20time%20introspection)
 - [Cache Optimised Hash library](https://github.com/CppCon/CppCon2016/tree/master/Demos/Cache%20Optimised%20Hash%20library/Cache%20Optimised%20Hash%20library%20-%20Christiaan%20Pretorius%20-%20CppCon%202016.pdf) by Christiaan Pretorius
 - [Conan C and C++ package manager](https://github.com/CppCon/CppCon2016/tree/master/Demos/Conan%20C%20and%20C++%20package%20manager/Conan%20C%20and%20C++%20package%20manager%20-%20Diego%20Rodriguez-Losada%20-%20CppCon%202016.pdf) by Diego Rodriguez-Losada
 - [Rich Code For Tiny Machines](https://github.com/CppCon/CppCon2016/tree/master/Demos/Rich%20Code%20For%20Tiny%20Machines/Rich%20Code%20For%20Tiny%20Machines%20-%20Jason%20Turner%20-%20CppCon%202016.pptx) by Jason Turner [README](https://github.com/CppCon/CppCon2016/tree/master/Demos/Rich%20Code%20For%20Tiny%20Machines/README.md)

## Lightning Talks and Lunch Sessions

 - [On using singletons in C++](https://github.com/CppCon/CppCon2016/tree/master/Lightning%20Talks%20and%20Lunch%20Sessions/On%20using%20singletons%20in%20C++/On%20using%20singletons%20in%20C++%20-%20Arno%20Lepisk%20-%20CppCon%202016.pdf) by Arno Lepisk
 - [Presenting Code](https://github.com/CppCon/CppCon2016/tree/master/Lightning%20Talks%20and%20Lunch%20Sessions/Presenting%20Code/Presenting%20Code%20-%20Jens%20Weller%20-%20CppCon%202016.pdf) by Jens Weller
 - [Programming](https://github.com/CppCon/CppCon2016/tree/master/Lightning%20Talks%20and%20Lunch%20Sessions/Programming/Programming%20-%20Jens%20Weller%20-%20CppCon%202016.pdf) by Jens Weller
 - [uftrace - A function graph tracer C C++ userspace programs](https://github.com/CppCon/CppCon2016/tree/master/Lightning%20Talks%20and%20Lunch%20Sessions/uftrace%20-%20A%20function%20graph%20tracer%20C%20C++%20userspace%20programs/uftrace%20-%20A%20function%20graph%20tracer%20C%20C++%20userspace%20programs%20-%20Namhyung%20Kim%20and%20Honggyu%20Kim%20-%20CppCon%202016.pdf) by Namhyung Kim and Honggyu Kim
 - [Variants of variadic and](https://github.com/CppCon/CppCon2016/tree/master/Lightning%20Talks%20and%20Lunch%20Sessions/Variants%20of%20variadic%20and/Variants%20of%20variadic%20and%20-%20Roland%20Bock%20-%20CppCon%202016.pdf) by Roland Bock

## Posters

 - [uftrace - A function graph tracer for userspace programs](https://github.com/CppCon/CppCon2016/tree/master/Posters/uftrace%20-%20A%20function%20graph%20tracer%20for%20userspace%20programs/uftrace%20-%20A%20function%20graph%20tracer%20for%20userspace%20programs%20-%20Namhyung%20Kim%20and%20Honggyu%20Kim%20-%20CppCon%202016.pdf) by Namhyung Kim and Honggyu Kim

