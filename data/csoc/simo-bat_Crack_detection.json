{
    "syntactic": [
        "probability",
        "gpu",
        "test samples",
        "binary classification",
        "computer vision",
        "convolutional neural networks",
        "data augmentation",
        "class labels",
        "engineers",
        "crack detection",
        "regularization",
        "surface cracks"
    ],
    "semantic": [
        "probability",
        "binary classification",
        "computer vision",
        "regularization parameters",
        "engineers",
        "crack detection",
        "regularization"
    ],
    "union": [
        "probability",
        "gpu",
        "class labels",
        "surface cracks",
        "test samples",
        "binary classification",
        "computer vision",
        "convolutional neural networks",
        "regularization parameters",
        "engineers",
        "crack detection",
        "regularization",
        "data augmentation"
    ],
    "enhanced": [
        "mathematics",
        "program processors",
        "classifiers",
        "classification methods",
        "machine learning",
        "support vector machine",
        "computer imaging and vision",
        "neural networks",
        "parameterization",
        "inverse problems",
        "optical fibers",
        "damage detection",
        "image reconstruction",
        "bayesian analysis"
    ],
    "explanation": {
        "surface cracks": [
            "surface crack"
        ],
        "crack detection": [
            "surface crack",
            "crack detection"
        ],
        "computer vision": [
            "computer vision"
        ],
        "binary classification": [
            "binary classification"
        ],
        "test samples": [
            "test set"
        ],
        "class labels": [
            "class label"
        ],
        "engineers": [
            "engineer career",
            "engineer career track",
            "springboard machine engineer",
            "machine engineer",
            "machine engineer career",
            "civil engineer project",
            "engineer project problem",
            "engineer",
            "engineer project"
        ],
        "data augmentation": [
            "dataaugmentation"
        ],
        "convolutional neural networks": [
            "cnn"
        ],
        "regularization": [
            "modeltraining hyperparameters tune",
            "hyperparameter tune",
            "notebook modeltraining hyperparameter",
            "dropout regularization",
            "modeltraining hyperparameters",
            "hyperparameters tune",
            "hyperparameter tune test",
            "dataaugmentation modeltraining hyperparameters",
            "modeltraining hyperparameter tune",
            "modeltraining hyperparameter",
            "regularization",
            "hyperparameter",
            "hyperparameters"
        ],
        "gpu": [
            "gpu"
        ],
        "probability": [
            "convert probability",
            "probability",
            "class probability",
            "probability class",
            "probability image"
        ],
        "regularization parameters": [
            "modeltraining hyperparameters tune",
            "hyperparameter tune",
            "notebook modeltraining hyperparameter",
            "modeltraining hyperparameters",
            "hyperparameters tune",
            "hyperparameter tune test",
            "dataaugmentation modeltraining hyperparameters",
            "modeltraining hyperparameter tune",
            "modeltraining hyperparameter",
            "hyperparameter",
            "hyperparameters"
        ],
        "mathematics": [
            "convert probability",
            "probability",
            "class probability",
            "probability class",
            "probability image"
        ],
        "program processors": [
            "gpu"
        ],
        "classifiers": [
            "class label"
        ],
        "classification methods": [
            "binary classification",
            "class label"
        ],
        "machine learning": [
            "test set"
        ],
        "support vector machine": [
            "binary classification"
        ],
        "computer imaging and vision": [
            "computer vision"
        ],
        "neural networks": [
            "cnn"
        ],
        "parameterization": [
            "modeltraining hyperparameters tune",
            "hyperparameter tune",
            "notebook modeltraining hyperparameter",
            "modeltraining hyperparameters",
            "hyperparameters tune",
            "hyperparameter tune test",
            "dataaugmentation modeltraining hyperparameters",
            "modeltraining hyperparameter tune",
            "modeltraining hyperparameter",
            "hyperparameter",
            "hyperparameters"
        ],
        "inverse problems": [
            "modeltraining hyperparameters tune",
            "hyperparameter tune",
            "notebook modeltraining hyperparameter",
            "modeltraining hyperparameters",
            "hyperparameters tune",
            "hyperparameter tune test",
            "dataaugmentation modeltraining hyperparameters",
            "modeltraining hyperparameter tune",
            "modeltraining hyperparameter",
            "hyperparameter",
            "hyperparameters"
        ],
        "optical fibers": [
            "engineer career",
            "engineer career track",
            "springboard machine engineer",
            "machine engineer",
            "machine engineer career",
            "civil engineer project",
            "engineer project problem",
            "engineer",
            "engineer project"
        ],
        "damage detection": [
            "surface crack",
            "crack detection"
        ],
        "image reconstruction": [
            "notebook modeltraining hyperparameter",
            "modeltraining hyperparameters",
            "hyperparameters tune",
            "dataaugmentation modeltraining hyperparameters",
            "modeltraining hyperparameter tune",
            "modeltraining hyperparameter",
            "hyperparameter",
            "hyperparameters",
            "modeltraining hyperparameters tune",
            "hyperparameter tune",
            "dropout regularization",
            "hyperparameter tune test",
            "regularization"
        ],
        "bayesian analysis": [
            "dataaugmentation"
        ]
    }
}