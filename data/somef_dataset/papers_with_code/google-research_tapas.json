{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.04312",
      "https://arxiv.org/abs/2106.00479",
      "https://arxiv.org/abs/2103.12011",
      "https://arxiv.org/abs/2103.12011",
      "https://arxiv.org/abs/2103.12011",
      "https://arxiv.org/abs/1908.08962"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can cite the [ACL 2020 paper](https://www.aclweb.org/anthology/2020.acl-main.398/)\nand the [EMNLP 2020 Findings paper](https://www.aclweb.org/anthology/2020.findings-emnlp.27/) for the laters work on pre-training objectives.\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/google-research/tapas",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For help or issues, please submit a GitHub issue.\n",
      "technique": "Header extraction"
    }
  ],
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows Google's Open Source Community\nGuidelines.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-31T15:14:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-12T20:01:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9092797132076509
      ],
      "excerpt": "Code and checkpoints for training the transformer-based Table QA models introduced \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806111479130188
      ],
      "excerpt": "Released code for sparse table attention from MATE: Multi-view Attention for Table Transformer Efficiency. For more info check here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9511596695857428
      ],
      "excerpt": "New models and code for DoT: An efficient Double Transformer for NLP tasks with tables released \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.994023129661318,
        0.9112599550926095
      ],
      "excerpt": "New release of NQ with tables data used in Open Domain Question Answering over Tables via Dense Retrieval. The use of the data is detailed here. \nNew models and code for Open Domain Question Answering over Tables via Dense Retrieval released \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9707718998946223,
        0.971053068272576
      ],
      "excerpt": "The upcoming NAACL 2021 short paper Open Domain Question Answering over Tables via Dense Retrieval extends the TAPAS capabilities to table retrieval and open-domain QA. We are planning to release the new models and code soon. \nTAPAS is added to huggingface/transformers in version 4.1.1. 28 checkpoints are added to the huggingface model hub and can be played with using a custom table question answering widget. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9579845970992596
      ],
      "excerpt": "For more details see this issue. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9947435369568465
      ],
      "excerpt": "Based on the HEM method described in section 3.3 of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8699837978317432
      ],
      "excerpt": "Released code & models to run TAPAS on TabFact for table entailment, companion for the EMNLP 2020 Findings paper Understanding tables with intermediate pre-training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8079748047612583,
        0.8608463003616399,
        0.8523447258557585
      ],
      "excerpt": "New pre-trained models (see Data section below) \nreset_position_index_per_cell: New option that allows to train models that instead of using absolute position indices reset the position index when a new cell starts. \nBump TensorFlow to v2.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8231483330570721,
        0.9754192421554858
      ],
      "excerpt": "We provide pre-trained models for different model sizes. \nThe metrics are computed by our tool and not the official metrics of the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8608770879052344,
        0.9616484033404022
      ],
      "excerpt": "are in the right ballpark. They are medians over three individual runs. \nNew models based on the ideas discussed in Understanding tables with intermediate pre-training. Learn more about the methods use here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8066894980120731,
        0.9648946220427667,
        0.811763404043944
      ],
      "excerpt": "Based on the pre-trained checkpoints available at the BERT github page. \nSee the page or the paper for detailed information on the model dimensions. \nReset refers to whether the parameter reset_position_index_per_cell was \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9187665373826849,
        0.9289083420142421
      ],
      "excerpt": "The accuracy depends on the respective task. It's denotation accuracy for \nWTQ and WIKISQL, average position accuracy with gold labels for the previous answers for SQA and Mask-LM accuracy for Mask-LM. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "  --output_dir=\"$data/\" \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "  --init_checkpoint=\"${tapas_data_dir}/model.ckpt\" \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043515950517629,
        0.8740214023464973
      ],
      "excerpt": "Here we explain some details about different tasks. \nBy default, SQA will evaluate using the reference answers of the previous \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8199231509670785
      ],
      "excerpt": "For the official evaluation results one should convert the TAPAS predictions to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "End-to-end neural table-text understanding models.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://tox.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/google-research/tapas/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 151,
      "date": "Wed, 22 Dec 2021 19:45:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/google-research/tapas/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "google-research/tapas",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/google-research/tapas/master/notebooks/retrieval_predictions.ipynb",
      "https://raw.githubusercontent.com/google-research/tapas/master/notebooks/tabfact_predictions.ipynb",
      "https://raw.githubusercontent.com/google-research/tapas/master/notebooks/wtq_predictions.ipynb",
      "https://raw.githubusercontent.com/google-research/tapas/master/notebooks/sqa_predictions.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The easiest way to try out TAPAS with free GPU/TPU is in our\n[Colab](http://tiny.cc/tapas-colab), which shows how to do predictions on [SQA](http://aka.ms/sqa).\n\nThe repository uses protocol buffers, and requires the `protoc` compiler to run.\nYou can download the latest binary for your OS [here](https://github.com/protocolbuffers/protobuf/releases).\nOn Ubuntu/Debian, it can be installed with:\n\n```bash\nsudo apt-get install protobuf-compiler\n```\n\nAfterwards, clone and install the git repository:\n\n```bash\ngit clone https://github.com/google-research/tapas\ncd tapas\npip install -e .\n```\n\nTo run the test suite we use the [tox](https://tox.readthedocs.io/en/latest/) library which can be run by calling:\n```bash\npip install tox\ntox\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8155627195132723
      ],
      "excerpt": "You can start a separate eval job by setting --nodo_train --doeval. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8587054779971252
      ],
      "excerpt": "using the more realistic setup \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.80013637911115
      ],
      "excerpt": "Small change to WTQ training example creation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8167897637304485
      ],
      "excerpt": "set to true or false during training. In general it's recommended to set it to true. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8305567562932813
      ],
      "excerpt": "The TF examples for pre-training can be created using Google Dataflow: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8526825756960351,
        0.9336801098518991
      ],
      "excerpt": "python3 setup.py sdist \npython3 tapas/create_pretrain_examples_main.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "  --output_dir=\"gs://your_bucket/output\" \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 tapas/create_pretrain_examples_main.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8748707648425716
      ],
      "excerpt": "python3 tapas/experiments/tapas_pretraining_experiment.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.894036606553709,
        0.896858500678198
      ],
      "excerpt": "  --input_file_train=\"${data}/train.tfrecord\" \\ \n  --input_file_eval=\"${data}/test.tfrecord\" \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8597396519192996
      ],
      "excerpt": "where the previous answer are model predictions. run_task_main.py will output \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/google-research/tapas/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TAble PArSing (TAPAS)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tapas",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "google-research",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/google-research/tapas/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "TAPAS is essentialy a BERT model and thus has the same [requirements](https://github.com/google-research/bert/blob/master/README.md#out-of-memory-issues).\nThis means that training the large model with 512 sequence length will\nrequire a TPU.\nYou can use the option `max_seq_length` to create shorter sequences. This will\nreduce accuracy but also make the model trainable on GPUs.\nAnother option is to reduce the batch size (`train_batch_size`),\nbut this will likely also affect accuracy.\nWe added an options `gradient_accumulation_steps` that allows you to split the\ngradient over multiple batches.\nEvaluation with the default test batch size (32) should be possible on GPU.\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We need to create the TF examples before starting the training.\nFor example, for SQA that would look like:\n\n```bash\npython3 tapas/run_task_main.py \\\n  --task=\"SQA\" \\\n  --input_dir=\"${sqa_data_dir}\" \\\n  --output_dir=\"${output_dir}\" \\\n  --bert_vocab_file=\"${tapas_data_dir}/vocab.txt\" \\\n  --mode=\"create_data\"\n```\n\nOptionally, to handle big tables, we can add a `--prune_columns` flag to\napply the **HEM** method described section 3.3 of our\n[paper](https://www.aclweb.org/anthology/2020.findings-emnlp.27/) to discard some columns based on\ntextual overlap with the sentence.\n\nAfterwards, training can be started by running:\n\n```bash\npython3 tapas/run_task_main.py \\\n  --task=\"SQA\" \\\n  --output_dir=\"${output_dir}\" \\\n  --init_checkpoint=\"${tapas_data_dir}/model.ckpt\" \\\n  --bert_config_file=\"${tapas_data_dir}/bert_config.json\" \\\n  --mode=\"train\" \\\n  --use_tpu\n```\n\nThis will use the preset hyper-parameters set in `hparam_utils.py`.\n\nIt's recommended to start a separate eval job to continuously produce predictions\nfor the checkpoints created by the training job. Alternatively, you can run\nthe eval job after training to only get the final results.\n\n```bash\npython3 tapas/run_task_main.py \\\n  --task=\"SQA\" \\\n  --output_dir=\"${output_dir}\" \\\n  --init_checkpoint=\"${tapas_data_dir}/model.ckpt\" \\\n  --bert_config_file=\"${tapas_data_dir}/bert_config.json\" \\\n  --mode=\"predict_and_evaluate\"\n```\n\nAnother tool to run experiments is ```tapas_classifier_experiment.py```. It's more\nflexible than ```run_task_main.py``` but also requires setting all the hyper-parameters\n(via the respective command line flags).\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 748,
      "date": "Wed, 22 Dec 2021 19:45:03 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "nlp-machine-learning",
      "question-answering",
      "table-parsing",
      "tensorflow"
    ],
    "technique": "GitHub API"
  }
}