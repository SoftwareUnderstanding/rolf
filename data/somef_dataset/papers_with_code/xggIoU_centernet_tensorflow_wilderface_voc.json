{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1807.11164>\n* Yolov3 is is modified from:<https://github.com/wizyoung/YOLOv3_TensorFlow>\n* Yolov3:<https://pjreddie.com/media/files/papers/YOLOv3.pdf>\n* ExFuse:<https://arxiv.org/abs/1804.03821>\n### 2. My experimental environment\n* anaconda3\u3001pycharm-community\u3001python3.6\u3001numpy1.14\n* tensorflow1.13\u3001slim\n* cuda10.0\u3001cudnn7.6\n* opencv-python4.1\n* gtx1080ti*1\n### 3. datasets\n* For single-target detection, trained on wilderface dataset with 12876 training images.\n* For multi-target detection, trained on pascal-voc2012 dataset with 17125 training images.\n### 4. Experimental\n#### 4.1 Modified the heat map generation method to solve the problem that the loss cannot be optimized\n![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/src_box.png",
      "https://arxiv.org/abs/1804.03821>\n### 2. My experimental environment\n* anaconda3\u3001pycharm-community\u3001python3.6\u3001numpy1.14\n* tensorflow1.13\u3001slim\n* cuda10.0\u3001cudnn7.6\n* opencv-python4.1\n* gtx1080ti*1\n### 3. datasets\n* For single-target detection, trained on wilderface dataset with 12876 training images.\n* For multi-target detection, trained on pascal-voc2012 dataset with 17125 training images.\n### 4. Experimental\n#### 4.1 Modified the heat map generation method to solve the problem that the loss cannot be optimized\n![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/src_box.png"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "shufflenetv2_face_v1            21.37           512x512      20.5MB \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xggIoU/centernet_tensorflow_wilderface_voc",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-07T16:44:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-25T06:43:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* This is the unofficial  implementation of the \"CenterNet:Objects as Points\".In my experiment, it was not based on the DLA34, Hourglass and other networks in the original paper. I simply modified shufflenetv2_1.0x and yolov3, and kept their feature extraction part, then connected to centernet_detect_head, and did not use dcn convolution.\n* This is just a simple attempt to the effect of the algorithm.I only have one 1080ti,**I did not use any data augmentation and any other tricks during training\uff0cso the model is not very good,still need more work to get good results**.If it helps you, please give me a star.You can read my Chinese notes.(1)<https://zhuanlan.zhihu.com/p/68383078>         (2)<https://zhuanlan.zhihu.com/p/76378871>\n* Official implementation:<https://github.com/xingyizhou/CenterNet>\n* CenterNet:Objects as Points:<https://arxiv.org/pdf/1904.07850.pdf>\n* Shufflenetv2 is modified from:<https://github.com/timctho/shufflenet-v2-tensorflow>\n* Shufflenetv2:<https://arxiv.org/abs/1807.11164>\n* Yolov3 is is modified from:<https://github.com/wizyoung/YOLOv3_TensorFlow>\n* Yolov3:<https://pjreddie.com/media/files/papers/YOLOv3.pdf>\n* ExFuse:<https://arxiv.org/abs/1804.03821>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8985453654301253
      ],
      "excerpt": "The function about how to create and parse tfrecords is under folder img2tfrecords_detection. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is the unofficial  implementation of the \"CenterNet:Objects as Points\".Just a simple try with self-modified shufflenetv2 and yolov3.If you want better results, you need more experiments.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/src_box.png)\n\npic1 src_bbox_gt\n\n                                          \n![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/heatmap_original.png)       ![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/heatmap_modified.png)\n\npic2 heatmap_original and heatmap_modified\n\n![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/heatmap_original_box.png)  ![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/heatmap_modified_box.png)\n\npic3 heatmap_original_box and heatmap_modified_box\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 26,
      "date": "Tue, 28 Dec 2021 20:30:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xggIoU/centernet_tensorflow_wilderface_voc/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "xggIoU/centernet_tensorflow_wilderface_voc",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![](https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/display_image/voc_detect.jpg)\n\npic8 shufflenetv2_centernet_voc_result\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9043017324064829
      ],
      "excerpt": "environment\uff1apython3.6 gtx1080ti*1 intel-i7-8700k \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8948345600444043
      ],
      "excerpt": "You only need to modify the following variables\uff1aimg_path, txt_path, tfrecords. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xggIoU/centernet_tensorflow_wilderface_voc/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 xggIoU\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "centernet_tensorflow_wilderface_voc",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "centernet_tensorflow_wilderface_voc",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "xggIoU",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xggIoU/centernet_tensorflow_wilderface_voc/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "download ckpt file<https://pan.baidu.com/s/1OVtOyHdc6qgcvTn56s5m2w>code:qd35,and put them to ./shufflenetv2_face_V1/, ./shufflenetv2_seb_voc/, ./shufflenetv2_voc/,and ./yolo3_voc/,then run test_voc_on_images.py or test_face_on_images.py\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 106,
      "date": "Tue, 28 Dec 2021 20:30:09 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "download ckpt file<https://pan.baidu.com/s/1OVtOyHdc6qgcvTn56s5m2w>code:qd35,and put them to ./shufflenetv2_face_V1/, ./shufflenetv2_seb_voc/, ./shufflenetv2_voc/,and ./yolo3_voc/,then run test_voc_on_images.py or test_face_on_images.py\n",
      "technique": "Header extraction"
    }
  ]
}