{
  "citation": [
    {
      "confidence": [
        0.99793919739415
      ],
      "excerpt": "| https://arxiv.org/pdf/1611.07004.pdf| Paper original Pix2Pix. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9415368217772304,
        0.8171181552303577,
        0.8356013927728488
      ],
      "excerpt": "Toda la red fue programada y entrenada desde un entorno de google Colab ejecutado de manera local en una Nvidia GTX 960 4Gb (debido a las limitaciones de tiempo de google Colab y a fallos de sincronizaci\u00f3n con google drive) \nEs altamente recomendable utilizar una o varias GPUs Nvidia debido a la compatibilidad que proporciona tensorflow a las tarjetas Nvidia, existe una librer\u00eda llamada ROCm para ejectuar tensorflow en GPUs AMD pero carece de la cantidad de desarrollo y soporte que tiene CUDA.  \nEn principio todo el codigo de este repositorio es compatible con tarjetas AMD, ya que nos funcion\u00f3 con una RX 470, para utilizarla debes instalar ROCm siguiendo estos pasos \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9788914761692258
      ],
      "excerpt": "- Crear una macro en photoshop que desenfoque las im\u00e1genes originales (aqu\u00ed puedes elegir el tipo de desenfoque y su intensidad, recomendamos el desenfoque de lente ya que es lo m\u00e1s parecido a una im\u00e1gen desenfocada de forma natural por una c\u00e1mara) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8393204901374335
      ],
      "excerpt": "- En la carpeta de google drive encontraras las primeras 11000 fotos de nuestro dataset, el resto se subir\u00e1n m\u00e1s adelante \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9827573060106022,
        0.8028046190715653
      ],
      "excerpt": "Establecer la variable n al numero de im\u00e1genes que deseas cargar para el entrenamiento y testeo (en un ratio 8:2) \n  los resultados mostrados aqui han sido entrenados con n = 1000 debido a nuestras limitaciones de GPU, en un sistema \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9698483046903941
      ],
      "excerpt": "El entrenamiento emplea un batch_size de una sola im\u00e1gen para maximizar fidelidad visual \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9943529507053313,
        0.8906174419333412,
        0.9999898933896941,
        0.9891660718205854
      ],
      "excerpt": "Tambi\u00e9n es posible entrenar usando la CPU pero cualquier tarjeta gr\u00e1fica barata de hace unos a\u00f1os es minimo el doble de r\u00e1pida que cualquier procesador de alta gama actual. \nSi vas a utilizar otro dataset o prefieres entrenar desde cero borra todo el contenido de la carpeta tf_ckpts \nEl modelo trata de mejorar las im\u00e1genes generadas mediante un valor de error determinado por total_gen_loss = gan_loss + (100 * pixel_loss) donde gan_loss es el valor de error generado por el discriminador (patchGAN) y pixel_loss es la diferencia media en el valor de cada pixel entre la im\u00e1gen original y la generada. pixel_lossesta multiplicado por 100para que sea 100 veces mas significativo que el valor del discriminador lo cual mejora los resultados seg\u00fan el equipo de Pix2Pix detalla en su paper (link arriba). \nTodos los pesos de tanto el generador como el discriminador as\u00ed como todas las variables son guardadas en la carpeta tf_ckpts y recupera el ultimo punto guardado al ejecutar el codigo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968090369380537,
        0.9799411683948944
      ],
      "excerpt": "Modificar la variable epoch_number al numero de iteraciones de entrenamiento que quieras usar (ten en cuenta que debes establecer el numero total, si entrenas 50 iteraciones y despues entrenas otra vez con epoch_number = 100 solo entrenar\u00e1 otras 50 iteraciones, esto es asi para llevar la cuenta de cuanto ha iterado aunque se interrumpa el entrenamiento) \ncrear una carpeta llamada tf_ckpts y pegar dentro todos los archivos de guardado (el ultimo link de arriba) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/theburgman21/Pix2Pix-Deblurrer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-12T17:55:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-28T17:00:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8542067603269061
      ],
      "excerpt": "Jupyter notebook (para el entorno local de google Colab) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Utilizar el modelo Pix2Pix para entrenar a una IA y corregir im\u00e1genes desenfocadas.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/theburgman21/Pix2Pix-Deblurrer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sun, 26 Dec 2021 08:44:17 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/theburgman21/Pix2Pix-Deblurrer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "theburgman21/Pix2Pix-Deblurrer",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/theburgman21/Pix2Pix-Deblurrer/master/run.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8082288248587498
      ],
      "excerpt": "| https://github.com/NVlabs/ffhq-dataset  | Flickr-Faces-HQ dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9587373441757713
      ],
      "excerpt": "GPU Nvidia \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8506354088017435
      ],
      "excerpt": "Adobe Photoshop CC fue usado para modificar las im\u00e1genes del dataset FFHQ. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8407579093471153
      ],
      "excerpt": "- Usar esa misma macro para reescalar todas las im\u00e1genes a 256 x 256 pixeles y guardarlas en formato .jpg (importante que sea .jpg y no cualquier otro) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641156093255327
      ],
      "excerpt": "Es necesario modificar ciertas variables en run.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "- una carpeta llamada output, output_2 y tf_ckpts \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/theburgman21/Pix2Pix-Deblurrer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pix2Pix-Deblurrer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pix2Pix-Deblurrer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "theburgman21",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/theburgman21/Pix2Pix-Deblurrer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sun, 26 Dec 2021 08:44:17 GMT"
    },
    "technique": "GitHub API"
  }
}