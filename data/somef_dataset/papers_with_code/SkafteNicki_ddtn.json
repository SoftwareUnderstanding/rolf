{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.02025"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{freifeld2017transformations,\n  title={Transformations Based on Continuous Piecewise-Affine Velocity Fields},\n  author={Freifeld, Oren and Hauberg, Soren and Batmanghelich, Kayhan and Fisher, John W},\n  journal={IEEE Transactions on Pattern Analysis and Machine Intelligence},\n  year={2017},\n  publisher={IEEE}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{detlefsen2018transformations,\n  title = {Deep Diffeomorphic Transformer Networks},\n  author = {Nicki Skafte Detlefsen and Oren Freifeld and S{\\o}ren Hauberg},\n  journal = {Conference on Computer Vision and Pattern Recognition (CVPR)},\n  year={2018},\n  publisher={IEEE}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SkafteNicki/ddtn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-03-13T10:52:31Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-14T21:49:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9646589794967918
      ],
      "excerpt": "This repo is a Tensorflow implementation of so called continues piecewise \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.948771006680223
      ],
      "excerpt": "transformations to create a more flexible spatial transformer layer, than the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9882316803902447,
        0.9251713998426264
      ],
      "excerpt": "of this repo is a so implementation of a ST-layer with diffeomorphic transformations.  \nHowever, the repo also contains code for other kinds of ST-layers. The following \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9840672259883448
      ],
      "excerpt": "The code is based upon the original implementation of the CPAB transformations by \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9736021544634469,
        0.9825259317190123
      ],
      "excerpt": "Additionally, some of the code for doing interpolation is based upon the Tensorflow \nimplementation of the Spatial Transformer Networks (Github repo:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9440156428822988
      ],
      "excerpt": "Using the slow pure tensorflow implementation for CPAB \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8571461942073999
      ],
      "excerpt": "To use the different transformers in your own settings, there are primarily 3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8019665051328533,
        0.8817240943244812
      ],
      "excerpt": "'tf_CPAB_transformer' in binary running on HedonismeBot. Make sure the Op and  \nKernel are registered in the binary running in this process\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609602895969611
      ],
      "excerpt": "    the fact that tensorflow sessions freeze the current graph. Look into \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Repository for our upcoming code, that we used for our \"Deep diffeomorphic transformer networks\" paper (Accepted to CVPR 2018). Will be update during the spring of 2018.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SkafteNicki/ddtn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 27 Dec 2021 13:08:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SkafteNicki/ddtn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SkafteNicki/ddtn",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone this reposatory to a directory of your choice\n```\ngit clone https://github.com/SkafteNicki/ddtn\n```\n2. Add this directory to your PYTHONPATH\n```\nexport PYTHONPATH=$PYTHONPATH:$YOUR_FOLDER_PATH/ddtn\n```\n3. (optional) If you want to use the fast GPU version their is a good chance that\nyou have to recompile the dynamic libraries where the operation is defined. Go to\nthe folder 'ddtn/ddtn/cuda/' and type the following in a command prompt\n```\nmake clean\nmake\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8278521915991974
      ],
      "excerpt": "Oren Freifeld (Github repo: cpabDiffeo). \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9133368656218674
      ],
      "excerpt": "import ddtn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.885184386277395
      ],
      "excerpt": "python mnist_classifier.py <- trains a classifier on a distorted mnist dataset \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SkafteNicki/ddtn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/SkafteNicki/ddtn/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2016 Nicki Skafte Detlefsen.\\nEach contributor holds copyright over his own contributions. The project\\nversioning keep tracks of such information.\\n\\nBy contributing to the ddtn repository, the contributor releases their\\ncontent to the license and copyright terms herein.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ddtn (Deep Diffeomorphic Transformer Networks)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ddtn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SkafteNicki",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SkafteNicki/ddtn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generic python packages: numpy, scipy, matplotlib\n* Tensorflow\n* To use the GPU implementation, you need a nvidia GPU and CUDA + cuDNN installed. \n  See [Tensorflows GPU installation instructions](https://www.tensorflow.org/install/) \n  for more details\n  \nThe code was testes running python 3.6, tensorflow 1.8.0 and CUDA 9.0. However, \nthe code should be compatible with tensorflow from version 1.4.0.\n\nThe code should run on all operating system with or without an GPU. If you are on\nLinux or MAC and tensorflow is able to detect your GPU then the fast GPU version\nof the CPAB transformations will be uses. If you are on windows or do have an GPU,\nan slower (and memory consuming) implementation will be used that is written in\npure tensorflow.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 46,
      "date": "Mon, 27 Dec 2021 13:08:50 GMT"
    },
    "technique": "GitHub API"
  }
}