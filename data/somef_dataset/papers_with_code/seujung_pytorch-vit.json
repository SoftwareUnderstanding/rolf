{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- https://github.com/huggingface/transformers\n- https://github.com/PyTorchLightning/pytorch-lightning\n- https://github.com/lucidrains/vit-pytorch\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.932897929375164
      ],
      "excerpt": "TRANSFORMERS FOR IMAGE RECOGNITION AT SCALE \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seujung/pytorch-vit",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-05T12:47:31Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-01T16:39:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9733067510737018
      ],
      "excerpt": "Pytorch implementation of AN IMAGE IS WORTH 16X16 WORDS: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8880010619039387
      ],
      "excerpt": "- save_last : save model every epoch end \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seujung/pytorch-vit/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 15:41:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seujung/pytorch-vit/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "seujung/pytorch-vit",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/seujung/pytorch-vit/main/run.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8154966156064152
      ],
      "excerpt": "config : model config file path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806231503790735,
        0.8773662981534157
      ],
      "excerpt": "- batch_size : batch size \n- num_train_epochs : total train epochs \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seujung/pytorch-vit/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 2-Clause \"Simplified\" License",
      "url": "https://api.github.com/licenses/bsd-2-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 2-Clause License\\n\\nCopyright (c) 2020, seujung hwan, Jung\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vision Transformer with Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-vit",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "seujung",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seujung/pytorch-vit/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- python >= 3.6.11\n- torch == 1.6.0\n- transformers == 3.3.1\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sun, 26 Dec 2021 15:41:06 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Model architecture\n    - based on BERTConfig\n    - addtional config\n        - image_size : crop image size\n        - patch_size : partial image size\n        - max_position_embedinngs : patch_size * patch_size + 1(cls token)\n    - config/vit-config.json \n        - For Caltech 256 Case\n        - if you use another data, you should change num_classes\n    ```\n    {\n        \"attention_probs_dropout_prob\": 0.1,\n        \"hidden_act\": \"gelu\",\n        \"hidden_dropout_prob\": 0.1,\n        \"hidden_size\": 768,\n        \"initializer_range\": 0.02,\n        \"intermediate_size\": 3072,\n        \"layer_norm_eps\": 1e-12,\n        \"max_position_embeddings\": 257,\n        \"model_type\": \"bert\",\n        \"num_attention_heads\": 12,\n        \"num_hidden_layers\": 12,\n        \"image_size\": 256,\n        \"patch_size\": 16,\n        \"num_classes\": 258\n      }\n    ```\n\n- Data format\n    - based on torchvision.datasets.ImageFolder\n    - A generic data loader where the images are arranged in this way:\n    ```\n    root/dog/xxx.png\n    root/dog/xxy.png\n    root/dog/xxz.png\n\n    root/cat/123.png\n    root/cat/nsdf3.png\n    root/cat/asd932_.png\n    ```\n\n",
      "technique": "Header extraction"
    }
  ]
}