{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gerardrbentley/Pytorch-U-Net-AutoEncoder",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-22T21:31:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T00:09:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9781133113169214
      ],
      "excerpt": "A good practice of testing a new model is getting it to Overfit a sample dataset. In our case we want one image to be encoded, decoded, and segmented extremely well. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9262889335555702
      ],
      "excerpt": "Recommended transforms for this model:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9805329967640859
      ],
      "excerpt": "#: Input size of model is 224x224 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9791054887118872
      ],
      "excerpt": " TODO  Check the mean and std on our dataset, these are the values to Normalize over ImageNet (Or some other natural image datasets I believe) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Experiments with U-net architectures on image auto encoding tasks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gerardrbentley/Pytorch-U-Net-AutoEncoder/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 15:44:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gerardrbentley/Pytorch-U-Net-AutoEncoder/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gerardrbentley/Pytorch-U-Net-AutoEncoder",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/gerardrbentley/Pytorch-U-Net-AutoEncoder/master/notebook_training.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If working with [conda](https://docs.conda.io/en/latest/miniconda.html) you can use the following to set up a virtual python environment.\n```\nconda create --name mldev python=3.8\nconda activate mldev\n```\nThen you can use pip install to get all the dependencies (this works with virtualenv as well)\n```\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8615700502632957
      ],
      "excerpt": "In datasets.py is an OverfitDataset that defaults to using the image overfit.png 2000 times per epoch (and 3 times for validation / evaluation loop because distributed training requires at least one sample per GPU). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012248701992861
      ],
      "excerpt": "    import input_target_transforms as TT \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9104057360833766
      ],
      "excerpt": "Running the command python train.py --dataset overfit --epochs 5 --no-aug should start the training on your machine. python train.py --help will show all available Command Line Flags (or look at the parse_args() function of ml_args.py). You may need to lower --batch-size and --workers depending on your computer's computing abilities. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378835578642458
      ],
      "excerpt": "python -m torch.distributed.launch --nproc_per_node=$NUM_GPUS --use_env train.py --relevant --training --flags \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gerardrbentley/Pytorch-U-Net-AutoEncoder/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Game Texture Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pytorch-U-Net-AutoEncoder",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gerardrbentley",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gerardrbentley/Pytorch-U-Net-AutoEncoder/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 15:44:15 GMT"
    },
    "technique": "GitHub API"
  }
}