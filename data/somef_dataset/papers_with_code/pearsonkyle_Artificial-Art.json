{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434. Use the procedurally generated images to create mosaics.\r\n\r\n![](images/output.png"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pearsonkyle/Artificial-Art",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-18T16:24:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T09:18:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8134350984282053,
        0.9790648232765137
      ],
      "excerpt": "The neural network will create outputs during the training process to the folder:images/`. This process could take a while depending on your computer. For comparison the two pretrained models used 15000 training epochs which took ~1-2 hours on a GTX 1070. \nIf your images are looking bad, try to increase the number of dimensions in your latent space. Sometimes adding more dropout into the layers of the generative model can help too. This was often my go to when the discriminator had an accuracy of 100% which hindered the generator from learning.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Create animated art pieces with machine learning using a DCGAN. Procedurally generate tiles for any type of mosaic. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pearsonkyle/Artificial-Art/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 17,
      "date": "Thu, 30 Dec 2021 10:48:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pearsonkyle/Artificial-Art/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pearsonkyle/Artificial-Art",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The  `create_dataset` function will cut random slices from images to create a new data set. This function requires you to put images in a new directory before hand\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nfrom dcgan import create_dataset \r\n\r\n#: first resize the original image to 75% \r\n#: then cut 100 random 128x128 subframes from each image in the directory \r\nx_train, y_train = create_dataset(128,128, nSlices=100, resize=0.75, directory='space/')\r\n\r\n#: scale RGB data between 0 and 1\r\nx_train /= 255 \r\n\r\n#: plot results to make sure data looks good!\r\nfig, axs = plt.subplots(4, 4)\r\nfor i in range(4):\r\n    for j in range(4):\r\n        axs[i,j].imshow( x_train[ np.random.randint(x_train.shape[0]) ] )\r\n        axs[i,j].axis('off')\r\nplt.show()\r\n```\r\nAn example output should look like this: \r\n\r\n![](https://github.com/pearsonkyle/Neural-Nebula/blob/master/images/nebula_training_sample.png)\r\n\r\nIf `x_train` is empty make sure you have `.jpg` or `.png` files in the directory where your images are stored (e.g. `space/`) \r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9006388813191513
      ],
      "excerpt": "Change some parameters below like: directory, name, latent_dim, epochs, etc.. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "```python  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "                name='nebula_32_128') \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8027920905463317
      ],
      "excerpt": "Download your favorite images to a new directory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516,
        0.8458751354831934
      ],
      "excerpt": "from dcgan import DCGAN, create_dataset \nif name == 'main': \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.8360423132668983
      ],
      "excerpt": "                name='nebula_32_128') \ndcgan.train(x_train, epochs=10000, batch_size=32, save_interval=100) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pearsonkyle/Artificial-Art/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Art created with artificial intelligence",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Artificial-Art",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pearsonkyle",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pearsonkyle/Artificial-Art/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Python 3+](https://www.anaconda.com/distribution/)\r\n- Keras, Tensorflow, Matplotlib, Numpy, PIL, Scikit-learn\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 142,
      "date": "Thu, 30 Dec 2021 10:48:12 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "I have included a pretrained model for generating space tiles\r\n\r\n`generator (space_128_64).h5` will create images like the one below. The images are generated from a latent parameter space of 128 dimensions and the output images will be 64 x 64. This network was trained on images of galaxies from the [NASA image archive](https://images.nasa.gov/). \r\n\r\n![](images/nebula.gif)\r\n\r\nThin film inference on the surface of a bubble\r\n\r\n![](images/bubble64_mosaic.png)\r\n\r\n`Fluid Art` - 128x128px output from a 256 dimensional latent space trained on images of acrylic pour/fluid art after 10000 training epochs\r\n\r\n![](images/fluid_neural.gif)\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}