{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.04802 paper but combines it with feature loss described in Perceptual Losses for Real-Time Style Transfer and Super-Resolution https://arxiv.org/abs/1603.08155.\n* `twtygqyy`'s implementation of Srresnet https://github.com/twtygqyy/pytorch-SRResNet is modified to do 2x instead of 4x upscaling. For 4x upscaling the code simply passes the same image through the model twice.\n* Jeremy howard's implementation of Feature loss is was used as the loss function for training.\n\n## References\n1. Srresnet paper : Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network https://arxiv.org/abs/1609.04802\n2.  `twtygqyy`'s implementation of Srresnet https://github.com/twtygqyy/pytorch-SRResNet\n3. Perceptual Losses for Real-Time Style Transfer and Super-Resolution https://arxiv.org/abs/1603.08155\n4. Fastai coursev3 Lesson 7 implementation of Feature loss : https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson7-superres.ipynb\n",
      "https://arxiv.org/abs/1603.08155.\n* `twtygqyy`'s implementation of Srresnet https://github.com/twtygqyy/pytorch-SRResNet is modified to do 2x instead of 4x upscaling. For 4x upscaling the code simply passes the same image through the model twice.\n* Jeremy howard's implementation of Feature loss is was used as the loss function for training.\n\n## References\n1. Srresnet paper : Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network https://arxiv.org/abs/1609.04802\n2.  `twtygqyy`'s implementation of Srresnet https://github.com/twtygqyy/pytorch-SRResNet\n3. Perceptual Losses for Real-Time Style Transfer and Super-Resolution https://arxiv.org/abs/1603.08155\n4. Fastai coursev3 Lesson 7 implementation of Feature loss : https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson7-superres.ipynb\n",
      "https://arxiv.org/abs/1609.04802\n2.  `twtygqyy`'s implementation of Srresnet https://github.com/twtygqyy/pytorch-SRResNet\n3. Perceptual Losses for Real-Time Style Transfer and Super-Resolution https://arxiv.org/abs/1603.08155\n4. Fastai coursev3 Lesson 7 implementation of Feature loss : https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson7-superres.ipynb\n",
      "https://arxiv.org/abs/1603.08155\n4. Fastai coursev3 Lesson 7 implementation of Feature loss : https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson7-superres.ipynb\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Srresnet paper : Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network https://arxiv.org/abs/1609.04802\n2.  `twtygqyy`'s implementation of Srresnet https://github.com/twtygqyy/pytorch-SRResNet\n3. Perceptual Losses for Real-Time Style Transfer and Super-Resolution https://arxiv.org/abs/1603.08155\n4. Fastai coursev3 Lesson 7 implementation of Feature loss : https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson7-superres.ipynb\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AtharvBhat/Plus-Ultra",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-23T14:50:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-17T12:29:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9697436698893194,
        0.9901116114834785
      ],
      "excerpt": "Plus Ultra is a tool to enhance digital media. Currently it supports upscaling and jpeg artifact removal from 2D illustrations or images resembling anime style art and manga. \nI DONOT own the rights to any of the screenshots , images or art presented in this repo. The rights are held by their original owners and makers. I am using it in my repo for demonstration purposes only ! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8650073396995254,
        0.803588341246139
      ],
      "excerpt": "This is an open source tool which uses deeplearning to enhance and denoise images. \nIt comes with two pretrained models namely, Art.pkl and Photo.pkl. These were indiviually trained to be better at enhancing 2D Anime style images and more realistic photos respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9431249574754892,
        0.9419522575572572
      ],
      "excerpt": "The 2D Art model may not provide good results on realistic scenes with high-frequency texture detail since animes generally lack those details, hence the different pretrained model for realistic images. \nIt isnt magic. It will not magically come up with new information about the image and make it look as good as you imagine. It infers things about the image and tries to approximate a better looking picture.  I will go into more technical details later. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8998377954858359
      ],
      "excerpt": "  --model MODEL         File name of the model to use for upscaling with extention \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633053689527708
      ],
      "excerpt": "  --tta                 test time augmentation. take 4 transformations of the image and average their results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8803188107165578
      ],
      "excerpt": "* Set Paths to your low resolution and high resolution images by edditing the following lines of code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8091329183033288
      ],
      "excerpt": "* Set model Hyperparameters according to your input image size and GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Plus Ultra is a tool to enhance digital media. Currently it supports upscaling and jpeg artifact removal from 2D illustrations or images resembling anime style art and manga.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AtharvBhat/Plus-Ultra/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 12:58:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AtharvBhat/Plus-Ultra/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AtharvBhat/Plus-Ultra",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/AtharvBhat/Plus-Ultra/master/train.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Open the python interpreter by typing `python` in your anaconda terminal and copy and run the following code\n```\nimport fastai.utils\nfastai.utils.show_install(1)\n```\n\nIf you get an output that looks something like this , you have successfully installed all libraries\n```\n=== Software ===\npython        : 3.8.2\nfastai        : 1.0.61\nfastprogress  : 0.2.3\ntorch         : 1.5.0\nnvidia driver : 446.14\ntorch cuda    : 10.2 / is available\ntorch cudnn   : 7604 / is enabled\n\n=== Hardware ===\nnvidia gpus   : 1\ntorch devices : 1\n  - gpu0      : 8192MB | GeForce GTX 1070 Ti\n```\n\nIf your output does not match this , you can find troubleshooting steps here : https://docs.fast.ai/troubleshoot.html\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* The tool is written in **python** programming language and uses the **fastai** library which runs on top of **pytorch** framework. Hence you will need to install the latest version of **pytorch** along with **fastai** library.\n\n* Nvidia GPU is required\n\n* **I recommend using anaconda for installing pytorch and fastai**\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9800821012502422
      ],
      "excerpt": "Install Anaconda with python verion 3.x for your appropriate OS \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8863445470346532,
        0.9927861922488089,
        0.9865441524656512,
        0.9147307474729934,
        0.999746712887969
      ],
      "excerpt": "Open Anaconda terminal and create a new environment if needed. ( Optional but recommended to avoid conflicts ) \nInstall Pytorch framework by running the following command in the anaconda terminal https://pytorch.org/ \nconda install pytorch torchvision cudatoolkit=10.2 -c pytorch \nInstall the fastai library by running this command in anaconda terminal \npip install fastai \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9193423657070725
      ],
      "excerpt": "To Train your own model , you can use the train.ipynb jupyter notebook. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9235286844008953
      ],
      "excerpt": "usage: upscale.py [-h] [--input_dir INPUT_DIR] [--output_dir OUTPUT_DIR] [--model MODEL] [--fp_16] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8407772486416
      ],
      "excerpt": "                        String containing path of folder containing input images \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8452094550808463,
        0.8090960375047486
      ],
      "excerpt": "                        String containing path of output directory \n  --model MODEL         File name of the model to use for upscaling with extention \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8052854703259666
      ],
      "excerpt": "python upscale.py --input_dir \"test_inputs\" --output_dir \"test_outputs\" --model \"Art.pkl\" --scale_factor 4 --fp_16 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189042999480336
      ],
      "excerpt": "You have now trained your own model ! Copy paste it in the models directory of the repo and use the upscale.py file to see how it performs on the test inputs ! \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AtharvBhat/Plus-Ultra/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Atharv Bhat\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Plus-Ultra",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Plus-Ultra",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AtharvBhat",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AtharvBhat/Plus-Ultra/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* The tool is written in **python** programming language and uses the **fastai** library which runs on top of **pytorch** framework. Hence you will need to install the latest version of **pytorch** along with **fastai** library.\n\n* Nvidia GPU is required\n\n* **I recommend using anaconda for installing pytorch and fastai**\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Wed, 29 Dec 2021 12:58:31 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deeplearning",
      "anime",
      "image-super-resolution",
      "pytorch",
      "fastai"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* To use this tool , first download the repo.\n* Open anaconda terminal and navigate to the downloaded folder using the `cd` command followed by the path of the folder\n```\ncd name-of-subfolder/sub-subfolder/\n```\n* Activate the environment where you installed fastai library ( Optional )\n\n",
      "technique": "Header extraction"
    }
  ]
}