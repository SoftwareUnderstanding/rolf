{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1505.05770",
      "https://arxiv.org/abs/1807.03039"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8614550012600334
      ],
      "excerpt": "Reimplementation of Variational Inference with Normalizing Flows (https://arxiv.org/abs/1505.05770) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ex4sperans/variational-inference-with-normalizing-flows",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-03-23T20:58:02Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T23:18:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9961990379321694,
        0.9820523966793605
      ],
      "excerpt": "The idea is to approximate a complex multimodal probability density with a simple probability density followed by a sequence of invertible nonlinear transforms. Inference in such model requires a computation of multiple Jacobian determinants, that can be computationaly expensive. Authors propose a specific form of the transformation that reduces the cost of computing the Jacobians from approximately  to  where  is the dimensionality of the data. \nNOTE: Currently I provide implementation for the simple case, where the true density can be expressed in a closed form, so it's possible to explicitly minimize KL-divergence between the true density and the density represented by a normalizing flow. Implementing the most general case of normalizing which is capable of learning from the raw data is a bit problematic for the transformation described in the paper since inverse function for such transformation can not be expressed in a closed form. Currently I'm working on another kind of normalizing flow called Glow where all the transformations have closed-form inverse functions, and I'm planning to release it soon. Stay tuned! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Reimplementation of Variational Inference with Normalizing Flows (https://arxiv.org/abs/1505.05770)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ex4sperans/variational-inference-with-normalizing-flows/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 27,
      "date": "Wed, 29 Dec 2021 09:06:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ex4sperans/variational-inference-with-normalizing-flows/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ex4sperans/variational-inference-with-normalizing-flows",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9626347507739125,
        0.9990268690172057
      ],
      "excerpt": "To reproduce my results, you will need to install pytorch. \nThen you will need to install other dependencies from requirements.txt. If you are using pip, simply run pip install -r requirements.txt. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8420901103073459,
        0.8890818307099057
      ],
      "excerpt": "  <img src=\"/assets/density.png\" width=\"320\"/> \n  <img src=\"/assets/flow_2.png\" width=\"320\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890818307099057,
        0.8890818307099057
      ],
      "excerpt": "  <img src=\"/assets/flow_4.png\" width=\"320\"/> \n  <img src=\"/assets/flow_16.png\" width=\"320\"/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ex4sperans/variational-inference-with-normalizing-flows/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Variational Inference with Normalizing Flows",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "variational-inference-with-normalizing-flows",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ex4sperans",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ex4sperans/variational-inference-with-normalizing-flows/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 168,
      "date": "Wed, 29 Dec 2021 09:06:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "variational-inference",
      "density-estimation",
      "python",
      "pytorch",
      "normalizing-flows"
    ],
    "technique": "GitHub API"
  }
}