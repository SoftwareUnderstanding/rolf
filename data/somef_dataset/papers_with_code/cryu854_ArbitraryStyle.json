{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cryu854/ArbitraryStyle-tfjs",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-24T16:25:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-20T16:10:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9685046164572871,
        0.8273994034757167
      ],
      "excerpt": "This is an implementation of Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization on Tensorflow 2 and Tensorflow js. Demo website : https://cryu854.github.io/ArbitraryStyle-tfjs/ \nThe model runs purely on your browser, so your data will not be leaked. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9249913634619837
      ],
      "excerpt": "The network architecture is conposed of an encoder, a decoder, and an AdaIN layer. The encoder is fixed to the first few layer (up to relu4_1) of a pre-trained VGG-19. The decoder mostly mirrors the encoder, with all pooling layers replaced by nearest up-sampling to reduce checkerboard effects. Set REFLECT_PADDING=True to use reflection padding in both encoder and decoder to avoid border artifacts, but the model will not be able to be deployed on the browser. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8948006369078993
      ],
      "excerpt": "Use tensorflow-js converter to generate a web friendly json model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Arbitrary Style Transfer in TensorFlow js",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cryu854/ArbitraryStyle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 17:22:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cryu854/ArbitraryStyle-tfjs/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cryu854/ArbitraryStyle-tfjs",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8686212115551148
      ],
      "excerpt": "Before you run this, you should download MSCOCO and WikiArt dataset.  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9494136840109799
      ],
      "excerpt": "<img src = 'images/src/web_demo.jpg' height=\"480px\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9083525711348268
      ],
      "excerpt": "<img src = 'images/src/architecture.PNG' height=\"240px\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9586561169440052
      ],
      "excerpt": "<a href = 'images/src/example.PNG'><img src = 'images/src/example.PNG' height = '640px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925619830435868,
        0.822636805414703
      ],
      "excerpt": "Example usage: \npython main.py inference --content ./path/to/content.jpg   \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.933642750824214
      ],
      "excerpt": "<img src = 'images/src/interpolate.PNG' height=\"200px\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925619830435868,
        0.906305687217687
      ],
      "excerpt": "Example usage: \npython main.py train --content ./path/to/MSCOCO_dataset   \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8025615723747587
      ],
      "excerpt": "                     --debug True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925619830435868
      ],
      "excerpt": "Example usage: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cryu854/ArbitraryStyle-tfjs/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "JavaScript",
      "HTML"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Arbitrary Style Transfer in Tensorflow js",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ArbitraryStyle-tfjs",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cryu854",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cryu854/ArbitraryStyle-tfjs/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- TensorFlow >= 2.0\n- Python 3.7.5, Pillow 7.0.0, Numpy 1.18\n- If you want to convert a pre-trained model to tensorflow-js model:\n  - Tensorflowjs >= 2.0\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 17:22:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tensorflow",
      "tensorflow2",
      "tensorflowjs",
      "tensorflow-js",
      "style-transfer",
      "browser",
      "deep-learning",
      "keras"
    ],
    "technique": "GitHub API"
  }
}