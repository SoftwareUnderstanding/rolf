{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1705.09655",
      "https://arxiv.org/abs/1503.08895",
      "https://arxiv.org/abs/1603.01417"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code is based on the following paper:\n\n<i> \"deep neural network for learning graph representations\". Cao, Shaosheng . Thirtieth Aaai Conference on Artificial Intelligence AAAI Press, 2016.[aaai.org](https://aaai.org/ocs/index.php/AAAI/AAAI16/paper/view/12423/11715) </i>\n\n<i> \"Style Transfer from Non-Parallel Text by Cross-Alignment\". Tianxiao Shen, Tao Lei, Regina Barzilay, and Tommi Jaakkola. NIPS 2017. [arXiv](https://arxiv.org/abs/1705.09655) </i>\n\n<i> \"End-To-End Memory Networks\". Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, Rob Fergus. NIPS 2015. [arXiv](https://arxiv.org/abs/1503.08895) </i>\n\n<i> \"Dynamic Memory Networks for Visual and Textual Question Answering\". Caiming Xiong, Stephen Merity, Richard Socher. 2017. [arXiv](https://arxiv.org/abs/1603.01417) </i>\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-24T07:45:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-24T12:49:35Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9911305177340766,
        0.9661989112097261,
        0.9824620943771758
      ],
      "excerpt": "This repo contrains of the Clever Commenter: Let's Try More Apps project in Google AI ML Winter Camp. \nClever Commenter: Let's Try More Apps is an interesting and powerful automatic comment generator. It consists of the following modules: \n- Key-words Extraction: This module uses the structure data of the app (such as Category, Age group, Price) to find the most relevant apps based on Social Network theory instead of basic low order similarity. Then extracts the key-words of the related apps as an alternative of the newly released App.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9636504922560905,
        0.8269436315368501
      ],
      "excerpt": "- Review Sentiment Transfer: This module transfer a negative review into a positive review, and vice versa. In this way, \"Clever Commenter: Let's Try More Apps\" can control the emotion of the generated reviews. \nThe model aims to find APP's most similar APPs based on Social Network theory instead of basic low level similarity, then extract these APP's keywords. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9235616269676761
      ],
      "excerpt": "The model aims to generate fluent and reasonable reviews based on the input keywords describing the product. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246798214693486,
        0.8927629375056778,
        0.8480210084426134
      ],
      "excerpt": "<code>XX.src1</code> is the file of the input keywords. \n<code>XX.src2</code> is the file of the concepts extracted from ConceptNet.  \n<code>XX.tgt</code> is the file of the output reviews. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9369237424240305
      ],
      "excerpt": "The model learns to transfer a negative sentiment review into a positive one without any parallel data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This project contrains of the Clever Commenter: Let's Try More Apps project in Google AI ML Winter Camp. by \u8d76\u8bba\u6587ing",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Comments are one of the most important ways for App downloaders to understand this App. However, many newly released (online) Apps have few comments, which seriously affects the user's interest and enthusiasm of those apps. Therefore, in order to **help App downloaders better understand the newly released Apps**, we designed an automatic comment generator called \"**Clever Commenter: Let's Try More Apps**\".\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 09:02:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/master/demo/run_server.sh",
      "https://raw.githubusercontent.com/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/master/demo/__MACOSX/._run_server.sh",
      "https://raw.githubusercontent.com/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/master/review-generator/script/bpe_pipeline.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8642048070865512
      ],
      "excerpt": "If the test file has sentiment labels, just run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9048998989897635
      ],
      "excerpt": "And then, run the follow code to get the transferred review:bash \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9152262520874422,
        0.803259993717315
      ],
      "excerpt": "python3 preprocess.py --load_data data/source_data/ --save_data data/save_data/ \nTo train a model, go to the review-generator folder and run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9127066717432788,
        0.8442671540608847
      ],
      "excerpt": "python3 train.py --gpus gpu_id --config config.yaml --log log_name \nTo test the well-trained model, go to the review-generator folder and run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908330742937503
      ],
      "excerpt": "python3 predict.py --gpus gpu_id --config config.yaml --restore checkpoint_path --log log_name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8048633922031804
      ],
      "excerpt": "To train a model, go to the sentiment-transfer folder and run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8750127253947336
      ],
      "excerpt": "python style_transfer.py --train ../data/sentiment_transfer/train --dev ../data/sentiment_transfer/dev --output ../tmp/sentiment.dev --vocab ../tmp/google.vocab --model ../tmp/model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481350649048493
      ],
      "excerpt": "python style_transfer.py --test ../data/sentiment_transfer/test --output ../tmp/sentiment_transfer.test --vocab ../tmp/google.vocab --model ../tmp/model --load_model true \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.8885879624349438,
        0.8633989807152664,
        0.9445987627995207
      ],
      "excerpt": ": train \npython classifier.py --train ../data/sentiment_transfer/train --dev ../data/sentiment_transfer/dev --vocab ../tmp/google.vocab --model ../tmp/classifer-model  \n: test \npython classifier.py --test TEST_FILE_PATH --output OUTPUT_FILE_PATH --vocab ../tmp/google.vocab --model ../tmp/model --load_model true \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.937944938787514
      ],
      "excerpt": "python style_transfer.py --test OUTPUT_FILE_PATH --output ../tmp/sentiment_transfer.test --vocab ../tmp/google.vocab --model ../tmp/model --load_model true \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Roff",
      "Python",
      "Perl",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Clever Commenter: Let's Try More Apps",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Clever-Commenter-Let-s-Try-More-Apps",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sy-sunmoon",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sy-sunmoon/Clever-Commenter-Let-s-Try-More-Apps/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 09:02:28 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Run the http server to allow the js. script.\n```bash\npython3 -m web/run_server.sh &\n```\n2. Visit web/demo.htm to watch the demo.\n\n***************************************************************\n\n",
      "technique": "Header extraction"
    }
  ]
}