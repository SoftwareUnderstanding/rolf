{
  "citation": [
    {
      "confidence": [
        0.9999340814824812
      ],
      "excerpt": "Reference : <a href=\"https://arxiv.org/pdf/1801.04381.pdf\">https://arxiv.org/pdf/1801.04381.pdf</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "    <td align=\"center\">32</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "    <td align=\"center\">(32,112,112)</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "    <td align=\"center\">32</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "    <td align=\"center\">(32,28,28)</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "    <td align=\"center\">64</td> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aryanasadianuoit/MobileNet_V2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-22T14:12:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-26T21:57:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9727389952892334
      ],
      "excerpt": "Unofficial implementation of MobileNet-V2 in PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9895388786371987
      ],
      "excerpt": "MobileNet-V2 addresses the challenges of using deep learning models in resource constraints environments, e.g., mobile devices and embedded systems. The main idea behind MobileNet-V2 is to replace most of the regular convolutional layers in a conventional CNN model with <b>Inverted Residual blocks</b>. These blocks are made of <b>depth-wise</b> convolutions (with the kernel size of 3 * 3), <b>point-wise</b> convolutions (with the kernel size of 1 * 1), both equipped with <b>non-linear activations</b>, and a final <b>point-wise</b> convolution with linear mapping. The figure below depicts the mechanism of depth-wise, and point-wise convolutional layers, as well as inverted residual blocks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.978484023250091,
        0.9493606594732685
      ],
      "excerpt": "<p><b>PS-1</b>: In the original paper, the activation function for non-linear transformation is <b>ReLU-6</b>. In this implementation, I have replaced ReLU-6 with the regular ReLU.</p> \n<p><b>PS-2</b>: In the original paper, the last layer is a regular convolutional layer with <b>1000 channels</b> (number of ImageNet classes), and <b>(1,1)</b> spatial size. In this implementation, <b>a combination of dropout(0.2), and a linear layer</b> has been used instead of the mentioned CNN layer (inspired by the <a href=\"https://github.com/pytorch/vision/blob/master/torchvision/models/mobilenetv2.py\">PyTorch</a> implementation)</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9328855576372315
      ],
      "excerpt": "  <p>The following table is the architecture of MobileNet-V2. </p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unofficial implementation of MobileNet-V2 in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aryanasadianuoit/MobileNet_V2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 17:35:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/aryanasadianuoit/MobileNet_V2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "aryanasadianuoit/MobileNet_V2",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/aryanasadianuoit/MobileNet_V2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNet_V2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNet_V2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "aryanasadianuoit",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aryanasadianuoit/MobileNet_V2/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 17:35:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "mobilenet",
      "mobilenetv2",
      "deep-learning",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}