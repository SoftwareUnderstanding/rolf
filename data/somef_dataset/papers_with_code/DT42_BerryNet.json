{
  "citation": [
    {
      "confidence": [
        0.8067892593090776
      ],
      "excerpt": "1: Enter http://127.0.0.1:8080 in browser's URL bar, and press enter \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8067892593090776
      ],
      "excerpt": "1: Enter http://192.168.1.42:8080 in browser's URL bar, and press enter \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DT42/BerryNet",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "We use Developer Certificate of Origin.\nTo use DCO, you only need to add your signature into a Git commit:\n$ git commit -s -m \"your commit message.\"",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-04-27T16:49:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T02:21:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project turns edge devices such as Raspberry Pi into an intelligent gateway with deep learning running on it. No internet connection is required, everything is done locally on the edge device itself. Further, multiple edge devices can create a distributed AIoT network.\n\nAt DT42, we believe that bringing deep learning to edge devices is the trend towards the future. It not only saves costs of data transmission and storage but also makes devices able to respond according to the events shown in the images or videos without connecting to the cloud.\n\n![Figure 1](https://user-images.githubusercontent.com/292790/45943626-a3d28b80-c019-11e8-829c-5eb6afd3faa4.png)\n\n<p align=\"center\">Figure 1: BerryNet architecture</p>\n\nFigure 1 shows the software architecture of the project, we use Node.js/Python, MQTT and an AI engine to analyze images or video frames with deep learning. So far, there are two default types of AI engines, the classification engine (with Inception v3 [[1]](https://arxiv.org/pdf/1512.00567.pdf) model) and the object detection engine (with TinyYOLO [[2]](https://pjreddie.com/media/files/papers/YOLO9000.pdf) model or MobileNet SSD [[3]](https://arxiv.org/pdf/1704.04861.pdf) model). Figure 2 shows the differences between classification and object detection.\n\n![Figure 2](https://cloud.githubusercontent.com/assets/292790/25520013/d9497738-2c2c-11e7-9693-3840647f2e1e.jpg)\n\n<p align=\"center\">Figure 2: Classification vs detection</p>\n\nOne of the application of this intelligent gateway is to use the camera to monitor the place you care about. For example, Figure 3 shows the analyzed results from the camera hosted in the DT42 office. The frames were captured by the IP camera and they were submitted into the AI engine. The output from the AI engine will be shown in the dashboard. We are working on the Email and IM notification so you can get a notification when there is a dog coming into the meeting area with the next release.\n\n![Figure 3](https://cloud.githubusercontent.com/assets/292790/25498294/0ab79976-2bba-11e7-9114-46e328d15a18.gif)\n\n<p align=\"center\">Figure 3: Object detection result example</p>\n\nTo bring easy and flexible edge AI experience to user, we keep expending support of the AI engines and the reference HWs.\n\n![Figure 4](https://user-images.githubusercontent.com/292790/64026655-c2b69780-cb71-11e9-90b9-6269319012f1.png)\n\n<p align=\"center\">Figure 4: Reference hardwares</p>\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9453047626939184
      ],
      "excerpt": "Freeboard is a web-based dashboard. Here are the steps to show the detection result iamge and text on Freeboard: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8842026899148479
      ],
      "excerpt": "Device A with IP 192.168.1.42, BerryNet default application runs on it \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9203966013378297
      ],
      "excerpt": "3: Replace all the localhost to 192.168.1.42 in dashboard-tflitedetector.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9933182454699052,
        0.8398012773082936
      ],
      "excerpt": "For more details about dashboard configuration (e.g. how to add widgets), please refer to Freeboard project. \nYou might want to store the snapshot and inference results for data analysis. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Deep learning gateway on Raspberry Pi and other edge devices",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DT42/BerryNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 237,
      "date": "Thu, 23 Dec 2021 07:13:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DT42/BerryNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "DT42/BerryNet",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/DT42/BerryNet/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/install-opencv.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/install-caffe2-ubuntu.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/install-movidius.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/setup-bn-devenv-rpi.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/install-caffe2-raspbian.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/bn-image-creator.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/install-caffe2-models.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/rpi3-temperature.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/nest/nest_get_snapshoturl.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/remote-debugging/escape-capsule.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/dyda/run_pipeline.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/utils/darknet/utils/localrun.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/examples/run-darknet-detector.sh",
      "https://raw.githubusercontent.com/DT42/BerryNet/master/examples/run-openvino-classifier.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can install BerryNet by using pre-built image or from source. Please refer to the [installation guide](https://dt42.io/berrynet-doc/tutorials/installation/) for the details. \n\nWe are pushing BerryNet into Debian repository, so you will be able to install by only typing one command in the future.\n\nHere is the quick steps to install from source:\n\n```\n$ git clone https://github.com/DT42/BerryNet.git\n$ cd BerryNet\n$ ./configure\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8244618317868981
      ],
      "excerpt": "Here are the steps: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8759768535765312
      ],
      "excerpt": "To run BerryNet data collector manually, you can run the command below: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DT42/BerryNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "JavaScript",
      "Shell",
      "Dockerfile",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Introduction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "BerryNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "DT42",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DT42/BerryNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "",
        "dateCreated": "2021-02-07T04:51:08Z",
        "datePublished": "2021-02-07T04:54:01Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v3.10.2",
        "name": "",
        "tag_name": "v3.10.2",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v3.10.2",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/37563610",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v3.10.2"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "# Added\r\n\r\n* Get `berrynet` Python Wheel on [PyPI](https://pypi.org/project/berrynet/)\r\n* `bndyda` module is the interface to use a [Dyda](https://github.com/numbersprotocol/dyda) data pipeline as a single service / engine.\r\n* Experimental - `dyda_config_update` is the mockup to updae Dyda pipeline configuration remotely.\r\n\r\n# Changed\r\n\r\n* Make `camera` and `fbdashboard` clients to be AIKEA-compatible w/o customization.\r\n* Docker support from Debian Stretch to Buster.\r\n\r\n# Fixed\r\n\r\n* TFLite compatibility issue caused by v2.3.0 API changes.\r\n* OpenVINO compatibility issue caused by 2020.1 for x86 update.",
        "dateCreated": "2020-11-01T03:57:59Z",
        "datePublished": "2020-11-01T04:33:47Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v3.10.1",
        "name": "",
        "tag_name": "v3.10.1",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v3.10.1",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/33314731",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v3.10.1"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "Installation image, md5sum, and installation guide:\r\n\r\n* https://berrynet.s3.amazonaws.com/images/2019-07-15-raspbian-buster-berrynet.zip\r\n* https://berrynet.s3.amazonaws.com/images/2019-07-15-raspbian-buster-berrynet.md5sum\r\n* https://github.com/DT42/BerryNet/wiki/Installation\r\n\r\n# Features and Improvements\r\n\r\n1. Use TFLite as default engine\r\n1. Add `bn_{tflite, openvino, darknet}` CLI executors\r\n1. Update TFLite support to 1.14.0\r\n1. Update OpenVINO support to 2019R1.1\r\n\r\n# Incompatible Changes\r\n\r\nN/A",
        "dateCreated": "2019-07-14T02:55:25Z",
        "datePublished": "2019-07-19T10:48:41Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v3.7.0",
        "name": "Release v3.7.0",
        "tag_name": "v3.7.0",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v3.7.0",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/18729761",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v3.7.0"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "Installation image, md5sum, and installation guide:\r\n\r\n* https://s3.amazonaws.com/berrynet/images/2019-05-24-raspbian-stretch-berrynet.zip\r\n* https://s3.amazonaws.com/berrynet/images/2019-05-24-raspbian-stretch-berrynet.md5sum\r\n* https://github.com/DT42/BerryNet/wiki/Installation\r\n\r\n# Features and Improvements\r\n\r\n1. Update Wiki pages\r\n1. Fix camera.py stream-src param issue\r\n1. Update default supervisor configuration file\r\n\r\n# Incompatible Changes\r\n\r\nN/A",
        "dateCreated": "2019-05-19T09:26:37Z",
        "datePublished": "2019-05-19T09:31:04Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v3.5.1",
        "name": "Release v3.5.1",
        "tag_name": "v3.5.1",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v3.5.1",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/17446041",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v3.5.1"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "Installation image, md5sum, and installation guide:\r\n\r\n* Generating and will update later.\r\n\r\n# Features and Improvements\r\n\r\n1. Make camera.py to support video stream input.\r\n1. Push freeboard to Debian, and use the upstream version as the base of BerryNet dashboard.\r\n\r\n# Incompatible Changes\r\n\r\n1. Freeboard configuration format is changed by upstream.",
        "dateCreated": "2019-05-19T03:37:48Z",
        "datePublished": "2019-05-19T03:45:48Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v3.5.0",
        "name": "",
        "tag_name": "v3.5.0",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v3.5.0",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/17443988",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v3.5.0"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "Installation image, md5sum, and installation guide:\r\n\r\n* Will be available in the next release.\r\n\r\n# Features and Improvements\r\n\r\n1. Provide default detection application after installation is completed.\r\n1. Change service management from systemd to supervisor.\r\n1. Fix camera.py FPS parameter type.\r\n1. Fix berrynet.log permission issue.\r\n\r\n# Incompatible Changes\r\n\r\n1. berrynet-manager refactoring is on-going, and can not work currently.\r\n1. JS-based input clients (e.g. camera.js, localimg.js) refactoring is on-going, and can not work currently.",
        "dateCreated": "2019-05-12T05:04:10Z",
        "datePublished": "2019-05-12T05:16:06Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v3.4.1",
        "name": "Release v3.4.1",
        "tag_name": "v3.4.1",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v3.4.1",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/17296224",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v3.4.1"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "Installation image, md5sum, and installation guide:\r\n\r\n* https://s3.amazonaws.com/berrynet/images/berrynet-2.3.0.img\r\n* https://s3.amazonaws.com/berrynet/images/berrynet-2.3.0.md5sum\r\n* https://github.com/DT42/BerryNet/wiki/Installation\r\n\r\n# Features and Improvements\r\n\r\n1. Provide installation image.\r\n1. Fix node-opencv building issue.\r\n1. Fix BerryNet repository enablement issue.\r\n\r\n# Incompatible Changes\r\n\r\nN/A",
        "dateCreated": "2018-07-08T08:03:49Z",
        "datePublished": "2018-07-09T11:37:18Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v2.3.0",
        "name": "Release v2.3.0",
        "tag_name": "v2.3.0",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v2.3.0",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/11836067",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v2.3.0"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "# Features and Improvements\r\n\r\n1. Support Movidius neural compute stick.\r\n\r\n# Incompatible Changes\r\n\r\nN/A",
        "dateCreated": "2017-12-09T13:49:43Z",
        "datePublished": "2017-12-09T14:32:33Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v2.2.0",
        "name": "Release v2.2.0",
        "tag_name": "v2.2.0",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v2.2.0",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/8839506",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v2.2.0"
      },
      {
        "authorType": "User",
        "author_name": "bafu",
        "body": "# New Features and Updates\r\n\r\n* Add supports for USB, RPi, and Nest cameras in both snapshot and stream modes.\r\n* Add faster detection backend reducing inference time to ~40%.\r\n* Add data collector for saving snapshots and inference results for data analysis.\r\n* Add transfer learning tutorial in README for detection backend.\r\n* Add IM client: LINE.\r\n* Add more utilities.\r\n* Change intermediate updating mechanism and disable periodic cleaner.",
        "dateCreated": "2017-10-09T16:55:45Z",
        "datePublished": "2017-10-09T17:30:26Z",
        "html_url": "https://github.com/DT42/BerryNet/releases/tag/v2.1.0",
        "name": "BerryNet 2.1.0 Release Note",
        "tag_name": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/DT42/BerryNet/tarball/v2.1.0",
        "url": "https://api.github.com/repos/DT42/BerryNet/releases/8051150",
        "zipball_url": "https://api.github.com/repos/DT42/BerryNet/zipball/v2.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1530,
      "date": "Thu, 23 Dec 2021 07:13:02 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "raspberry-pi",
      "deep-learning",
      "tensorflow",
      "iot",
      "mqtt",
      "aiot",
      "edge-devices",
      "edge-ai",
      "openvino",
      "tensorrt",
      "edge-computing"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "BerryNet performs an AIoT application by connecting independent components together. Component types include but not limited to AI engine, I/O processor, data processor (algorithm), or data collector.\n\nWe recommend to manage BerryNet componetns by [supervisor](http://supervisord.org/), but you can also run BerryNet components manually. You can manage BerryNet via `supervisorctl`:\n\n    ```\n    #: Check status of BerryNet components\n    $ sudo supervisorctl status all\n\n    #: Stop Camera client\n    $ sudo supervisorctl stop camera\n\n    #: Restart all components\n    $ sudo supervisorctl restart all\n\n    #: Show last stderr logs of camera client\n    $ sudo supervisorctl tail camera stderr\n    ```\n\nFor more possibilities of supervisorctl, please refer to the [official tutorial](http://supervisord.org/running.html#running-supervisorctl).\n\nThe default application has three components:\n\n* Camera client to provide input images\n* Object detection engine to find type and position of the detected objects in an image\n* Dashboard to display the detection results\n\nYou will learn how to configure or change the components in the [Configuration](#configuration) section.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The original instruction of retraining YOLOv2 model see [github repository of darknet](https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects)\n\nIn the current of BerryNet, TinyYolo is used instead of YOLOv2. \nThe major differences are:\n\n1. Create file yolo-obj.cfg with the same content as in `tiny-yolo.cfg`\n2. Download pre-trained weights of darknet reference model, `darknet.weights.12`, for the convolutional layers (6.1MB)\nhttps://drive.google.com/drive/folders/0B-oZJEwmkAObMzAtc2QzZDhyVGM?usp=sharing\n\nThe rest parts are the same as retraining YOLO.\n\nIf you use [LabelMe](http://labelme.csail.mit.edu/Release3.0/) to annotate data, `utils/xmlTotxt.py` can help convert the xml format to the text format that darknet uses.\n\n\n",
      "technique": "Header extraction"
    }
  ]
}