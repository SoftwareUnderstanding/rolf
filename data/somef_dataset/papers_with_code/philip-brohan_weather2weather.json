{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Derived from [pix2pix-tensorflow](https://github.com/affinelayer/pix2pix-tensorflow).\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite the paper this code is based on: <a href=\"https://arxiv.org/pdf/1611.07004v1.pdf\">Image-to-Image Translation Using Conditional Adversarial Networks</a>:\n\n```\n@article{pix2pix2016,\n  title={Image-to-Image Translation with Conditional Adversarial Networks},\n  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},\n  journal={arxiv},\n  year={2016}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{pix2pix2016,\n  title={Image-to-Image Translation with Conditional Adversarial Networks},\n  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},\n  journal={arxiv},\n  year={2016}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/philip-brohan/weather2weather",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-06-15T11:46:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-01T10:17:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Forecast the weather with machine learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/philip-brohan/weather2weather/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 22 Dec 2021 16:43:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/philip-brohan/weather2weather/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "philip-brohan/weather2weather",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/philip-brohan/weather2weather/master/3day.1by1.sh",
      "https://raw.githubusercontent.com/philip-brohan/weather2weather/master/3day.1by1.test.sh",
      "https://raw.githubusercontent.com/philip-brohan/weather2weather/master/weather2image/make_freerun_video.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/philip-brohan/weather2weather/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "R",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 philip-brohan\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Forecast the weather using tensorflow and the pix2pix model.",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "weather2weather",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "philip-brohan",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/philip-brohan/weather2weather/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Wed, 22 Dec 2021 16:43:51 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First we need a tool to encode a surface weather field\n  (2m air temperature anomaly, mean-sea-level-pressure, and precipitation rate)\n  as an image. [Script](./weather2image//make.3var.plot.R)\n\nThen we need a set of pairs of such images - a source image, and a target image from 6-hours later. Each pair should be separated by at least 5 days, so they are independent states. [Script](./weather2image//make.training.batch.R)\n\nThen we need to take a training set (400) of those pairs of images and pack them into the 512x256 side-by-side format used by pix2pix (source in the left half, and target in the right half). [Script](./weather2image/make_p2p_training_images.R)\n\nAlternatively, you can get the set of training and test images I used from [Dropbox](https://www.dropbox.com/s/0knxkll2btjjnyl/weather2weather_imgs.tar).\n\nThen train a model on this set for 200 epochs - with a fast GPU this should take about 1 hour, but, CPU-only, it takes a bit over 24 hours on my 4-core iMac. (It took about 2 hours on one gpu-node of [Isambard](http://gw4.ac.uk/isambard/)).\n\n```sh\npython weather2weather.py \\\n  --mode train \\\n  --output_dir $SCRATCH/weather2weather/model_train \\\n  --max_epochs 200 \\\n  --input_dir $SCRATCH/weather2weather/p2p_format_images_for_training \\\n  --which_direction AtoB\n```\nNow make some more pairs of images (100) to test the model on - same format as the training set, but must be different weather states (times). [Script](./weather2image/make_p2p_validation_images.R)\n\nUse the trained model to make predictions from the validation set sources and compare those predictions to the validation set targets.\n\n```sh\npython weather2weather.py \\\n  --mode test \\\n  --output_dir $SCRATCH/weather2weather/model_test \\\n  --input_dir $SCRATCH/weather2weather/p2p_format_images_for_validation \\\n  --checkpoint $SCRATCH/weather2weather/model_train\n```\n\nThe test run will output an HTML file at `$SCRATCH/weather2weather/model_test/index.html` that shows input/output/target image sets. This is good for a first glance, but those images are in a packed analysis form. So we need a tool to convert the packed image pairs to a clearer image format: [Script](./weather2image/replot.p2p.image.R). This shows target weather (top left), model output weather (top right), target pressure increment (bottom left), and model output pressure increment (bottom right).\n\nTo postprocess all the test cases run:\n```sh\n./weather2image/replot_all_validation.R \\\n  --input.dir=$SCRATCH/weather2weather/model_test/images \\\n  --output.dir=$SCRATCH/weather2weather/model_test/postprocessed\n```\n\nThis will produce an HTML file at  `$SCRATCH/weather2weather/model_test/index.html` showing results of all the test cases.\n\nThis clearly does have skill at 6-hour weather forecasts - it gets the semi-diurnal oscillation, and some of the extratropical structure. The final step is to use the model on it's own output - by making repeated 6-hour forecasts we can make a forecast as far into the future as we like. [This is less successful](https://vimeo.com/275778137).\n\n",
      "technique": "Header extraction"
    }
  ]
}