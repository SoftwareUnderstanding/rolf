{
  "citation": [
    {
      "confidence": [
        0.9659007734668753,
        0.9983631321262452
      ],
      "excerpt": "This is a TensorFlow implementation of ResNet, a deep residual network developed by Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun.  \nRead the original paper: \"Deep Residual Learning for Image Recognition\" (http://arxiv.org/abs/1512.03385). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seishinkikuchi/test",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-04T12:22:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-24T08:29:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8555409851400255
      ],
      "excerpt": "This is a TensorFlow implementation of ResNet, a deep residual network developed by Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9635312153232468
      ],
      "excerpt": "Disclaimer: I implemented this for only learning purposes. Check out the original repo for other unofficial implementations. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seishinkikuchi/test/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 14:54:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seishinkikuchi/test/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "seishinkikuchi/test",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seishinkikuchi/test/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ResNet TensorFlow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "test",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "seishinkikuchi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seishinkikuchi/test/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 14:54:57 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nCloning the repo\r\n\r\n```shell\r\n$ git clone http://github.com/xuyuwei/resnet-tf\r\n$ cd resnet-tf\r\n```\r\n\r\nSetting up the virtualenv, installing TensorFlow (OS X)\r\n```shell\r\n$ virtualenv venv\r\n$ source venv/bin/activate\r\n(venv)$ pip install --upgrade https://storage.googleapis.com/tensorflow/mac/tensorflow-0.6.0-py2-none-any.whl\r\n```\r\n\r\nIf you don't have virtualenv installed, run `pip install virtualenv`. Also, the cifar-10 data for python can be found at: https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz. Place the data in the main directory.\r\n\r\nStart Training:\r\n```shell\r\n(venv)$ python main.py \r\n```\r\n\r\nThis starts the training for ResNet-20, saving the progress after training every 512 images. To train a net of different depth, comment the line in `main.py`\r\n```\r\nnet = models.resnet(X, 20)\r\n```\r\nand uncomment the line initializing the appropriate model.\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}