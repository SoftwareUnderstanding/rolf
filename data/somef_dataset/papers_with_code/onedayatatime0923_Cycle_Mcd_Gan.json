{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "code is done in iis sinica.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1712.02560.pdf",
      "https://arxiv.org/abs/1712.02560"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{CycleGAN2017,\n  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},\n  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},\n  booktitle={Computer Vision (ICCV), 2017 IEEE International Conference on},\n  year={2017}\n}\n\n```\n```\n@article{saito2017maximum,\n  title={Maximum Classifier Discrepancy for Unsupervised Domain Adaptation},\n  author={Saito, Kuniaki and Watanabe, Kohei and Ushiku, Yoshitaka and Harada, Tatsuya},\n  journal={arXiv preprint arXiv:1712.02560},\n  year={2017}\n}\n\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{saito2017maximum,\n  title={Maximum Classifier Discrepancy for Unsupervised Domain Adaptation},\n  author={Saito, Kuniaki and Watanabe, Kohei and Ushiku, Yoshitaka and Harada, Tatsuya},\n  journal={arXiv preprint arXiv:1712.02560},\n  year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{CycleGAN2017,\n  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},\n  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},\n  booktitle={Computer Vision (ICCV), 2017 IEEE International Conference on},\n  year={2017}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/onedayatatime0923/Cycle_Mcd_Gan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-28T01:45:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-29T02:17:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9593053215595709
      ],
      "excerpt": "This is my PyTorch implementation for semi-supervised un-paired co-training. Although it is not yet been completed, it is nolonger under development. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8537762311132225
      ],
      "excerpt": "Note: The current software works well with PyTorch 0.4. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "Split data \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/onedayatatime0923/Cycle_Mcd_Gan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 20:24:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/onedayatatime0923/Cycle_Mcd_Gan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "onedayatatime0923/Cycle_Mcd_Gan",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Install torch and dependencies from https://github.com/torch/distro\n- Install tensorboardX from https://github.com/lanpa/tensorboardX\n- Clone this repo:\n```bash\ngit clone https://github.com/onedayatatime0923/Cycle_Mcd_Gan\ncd Cycle_Mcd_Gan\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8292951252264541
      ],
      "excerpt": "Download gtFine_trainvaltest.zip and leftImg8bit_trainvaltest.zip from https://www.cityscapes-dataset.com/downloads/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8158558366234303
      ],
      "excerpt": "Note: the datastructure will become like this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9020639017397599
      ],
      "excerpt": "cd checkpoints/cycle_mcd_da \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "\u2502   \u2514\u2500\u2500\u2500train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "\u2502   \u2514\u2500\u2500\u2500test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "    \u2514\u2500\u2500\u2500train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "    \u2514\u2500\u2500\u2500test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8650194983791794,
        0.8971881547609816
      ],
      "excerpt": "Generate txt file \npython3 datamanager/generate_txt.py [directory of Cityscapes Dataset] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.855248716819772
      ],
      "excerpt": "python3 datamanager/split_gta.py [directory of GTA Dataset] [path of split.mat] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "\u2502   \u2514\u2500\u2500\u2500train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "\u2502   \u2514\u2500\u2500\u2500test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "    \u2514\u2500\u2500\u2500train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "    \u2514\u2500\u2500\u2500test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8650194983791794,
        0.8971881547609816,
        0.8737873112808705
      ],
      "excerpt": "Generate txt file \npython3 datamanager/generate_txt.py [directory of GTA Dataset] \nTrain a model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 cycle_mcd_trainer.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/onedayatatime0923/Cycle_Mcd_Gan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Combination of CycleGan and Mcd in Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Cycle_Mcd_Gan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "onedayatatime0923",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/onedayatatime0923/Cycle_Mcd_Gan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Linux\n- NVIDIA GPU + CUDA CuDNN (CPU mode and CUDA without CuDNN may work with minimal modification, but untested)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 20:24:34 GMT"
    },
    "technique": "GitHub API"
  }
}