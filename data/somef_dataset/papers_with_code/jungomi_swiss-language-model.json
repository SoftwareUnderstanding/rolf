{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.04805\n[bert-german]: https://deepset.ai/german-bert\n[bert-swiss-lm]: https://drive.google.com/open?id=1FBIIMO9C1Os-Er7DpL2G2DuUbsjWP2ts\n[huggingface-transformers]: https://github.com/huggingface/transformers\n[huggingface-pre-trained]: https://huggingface.co/transformers/pretrained_models.html\n[lavd]: https://github.com/jungomi/lavd\n[leipzig-corpora]: https://wortschatz.uni-leipzig.de/en/download/\n[pytorch]: https://pytorch.org/\n[pytorch-started]: https://pytorch.org/get-started/locally/\n[swiss-crawl-corpus]: https://icosys.ch/swisscrawl"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jungomi/swiss-language-model",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-08T18:58:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-06T16:03:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9860395278585553
      ],
      "excerpt": "A language model for Swiss German based on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804603488422683
      ],
      "excerpt": "Using [BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding][arxiv-bert] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9934062727890142,
        0.8519094586221898
      ],
      "excerpt": "The model is then fine tuned on the Swiss German data of the \n[Leipzig Corpora Collection][leipzig-corpora] and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8148515412670545
      ],
      "excerpt": "Alternatively, a GPT-2 model can also be trained, but there is no German \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8482408147664496,
        0.815252133175934,
        0.8200557260665617
      ],
      "excerpt": "| bert-swiss-lm | bert-base   | Leipzig and SwissCrawl     | [Google Drive][bert-swiss-lm] | \nData for training essentially raw text files, but since the Leipzig corpus uses \na TSV style, that has been kept, but instead of the second column containing the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9606693139498327
      ],
      "excerpt": "that needs additional labels (e.g. for sentiment of the sentence) or just any \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9530115832297301
      ],
      "excerpt": "additionally to the full data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9674247428260099
      ],
      "excerpt": "option to swiss-crawl. For this preparation a minimum probability of 0.99 is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8573714390468252
      ],
      "excerpt": "Different models can be selected with the -m/--model option, which are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490854633510192,
        0.9750012099023379
      ],
      "excerpt": "There's also the possibility to train either of the model from scratch by \nchoosing bert-scratch or gpt-scratch for the --model. The configuration \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.922850474223194
      ],
      "excerpt": "During the training various types of logs are created with Lavd and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Language model for Swiss German",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jungomi/swiss-language-model/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 09:18:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jungomi/swiss-language-model/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jungomi/swiss-language-model",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.909013307912275
      ],
      "excerpt": "python train.py --name some-name -c log/some-name/checkpoints/0022/ --train-text /path/to/text.tsv --validation-text /path/to/text.tsv --fp16 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8526995814891686
      ],
      "excerpt": "can be changed with --vocab (path to the directory of the generated \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8039313620959272
      ],
      "excerpt": "| Model           | Configuration | Datasets used for training | Download                      | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8086421543465477
      ],
      "excerpt": "sentences (first one in Leipzig corpus is the index), it is now the first one. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8153739945059787
      ],
      "excerpt": "The Leipzig corpus can be converted with prepare_data.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9181333468563343
      ],
      "excerpt": "python prepare_data.py -i data/leipzig.tsv -o leipzig-converted --split 80 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.814042570688278
      ],
      "excerpt": "data/leipzig/ in this example. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.93536132375664,
        0.9042404453571893
      ],
      "excerpt": "python prepare_data.py -i data/swiss-crawl.csv -o swiss-crawl-converted --split 80 -t swiss-crawl \nTraining is done with the train.py script: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410348584220486
      ],
      "excerpt": "python train.py --name some-name -c log/some-name/checkpoints/0022/ --train-text /path/to/text.tsv --validation-text /path/to/text.tsv --fp16 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.900463228540164
      ],
      "excerpt": "For all options see python train.py --help. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8181435911925999
      ],
      "excerpt": "To visualise the logged data run: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jungomi/swiss-language-model/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n=====================\\n\\nCopyright \\xc2\\xa9 2019 Michael Jungo\\n\\nPermission is hereby granted, free of charge, to any person\\nobtaining a copy of this software and associated documentation\\nfiles (the \\xe2\\x80\\x9cSoftware\\xe2\\x80\\x9d), to deal in the Software without\\nrestriction, including without limitation the rights to use,\\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the\\nSoftware is furnished to do so, subject to the following\\nconditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\xe2\\x80\\x9cAS IS\\xe2\\x80\\x9d, WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\\nOTHER DEALINGS IN THE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Swiss Language Model",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "swiss-language-model",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jungomi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jungomi/swiss-language-model/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3\n- [PyTorch][pytorch]\n- [Huggingface/Transformers][huggingface-transformers]\n\nAll dependencies can be installed with pip.\n\n```sh\npip install --user -r requirements.txt\n```\n\nOn *Windows* the PyTorch packages may not be available on PyPi, hence you need\nto point to the official PyTorch registry:\n\n```sh\npip install --user -r requirements.txt -f https://download.pytorch.org/whl/torch_stable.html\n```\n\nIf you'd like to use a different installation method or another CUDA version\nwith PyTorch follow the instructions on\n[PyTorch - Getting Started][pytorch-started].\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Fri, 24 Dec 2021 09:18:02 GMT"
    },
    "technique": "GitHub API"
  }
}