{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1508.06576\n* Very Deep Convolutional Networks for Large-Scale Image Recognition: https://arxiv.org/abs/1409.1556\n* An Improved Style Transfer Algorithm Using Feedforward Neural Network for \nReal-Time Image Conversion: https://www.mdpi.com/2071-1050/11/20/5673\n\n## Articles\n* Art & AI: The Logic Behind Deep Learning \u2018Style Transfer\u2019: https://medium.com/codait/art-ai-the-logic-behind-deep-learning-style-transfer-1f59f51441d1\n* Neural Style Transfer: Creating Art with Deep Learning: https://blog.tensorflow.org/2018/08/neural-style-transfer-creating-art-with-deep-learning.html",
      "https://arxiv.org/abs/1409.1556\n* An Improved Style Transfer Algorithm Using Feedforward Neural Network for \nReal-Time Image Conversion: https://www.mdpi.com/2071-1050/11/20/5673\n\n## Articles\n* Art & AI: The Logic Behind Deep Learning \u2018Style Transfer\u2019: https://medium.com/codait/art-ai-the-logic-behind-deep-learning-style-transfer-1f59f51441d1\n* Neural Style Transfer: Creating Art with Deep Learning: https://blog.tensorflow.org/2018/08/neural-style-transfer-creating-art-with-deep-learning.html"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.902188706293722
      ],
      "excerpt": "Style transfer on images through machine learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9974395365152372,
        0.9715104224169802
      ],
      "excerpt": "A Neural Algorithm of Artistic Style: https://arxiv.org/abs/1508.06576 \nVery Deep Convolutional Networks for Large-Scale Image Recognition: https://arxiv.org/abs/1409.1556 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wkostuch/wild-style",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-04T01:35:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-29T22:00:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9903535525054611,
        0.9294206925617331,
        0.8970983220737236,
        0.8739296025330651
      ],
      "excerpt": "This project creates art with AI by using a number of variations on the method  \nof deep learning style transfer.  In the file base_demo.py, an implementation  \nis given of the style transfer algorithm given by Gatys et. al. in their seminal \npaper, \"A Neural Algorithm of Artistic Style\".  The algorithm produces some \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537120366410197,
        0.9453221914781951
      ],
      "excerpt": "A Texas landscape rendered in the style of Van Gogh's \"Starry Night\". \nA lakeside combined with The Parable of the Sower produces a quite painterly \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9577483545030481
      ],
      "excerpt": "A dog rendered in the style of Picasso's \"Girl with a Mandolin\" produces a  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8758274266503614
      ],
      "excerpt": "An Improved Style Transfer Algorithm Using Feedforward Neural Network for  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Style transfer on images through machine learning.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wkostuch/wild-style/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 16:44:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/wkostuch/wild-style/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "wkostuch/wild-style",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone the repository to your computer.  From the root of the cloned repo, run the \ncommand `pip install -r requirements.txt` to install the required dependencies.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/wkostuch/wild-style/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "wild-style",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "wild-style",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "wkostuch",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wkostuch/wild-style/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Fri, 24 Dec 2021 16:44:39 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To try it with your own images, edit the file paths for the content_path and \n`style_path` variables at the top of `base_demo.py` to point to images in your own \nfile system, then run the file.\n\n",
      "technique": "Header extraction"
    }
  ]
}