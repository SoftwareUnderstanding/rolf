{
  "citation": [
    {
      "confidence": [
        0.9911346835164355
      ],
      "excerpt": "successfully to retro Atari video games: http://arxiv.org/pdf/1312.5602v1.pdf. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/blakeMilner/DeepQLearning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2014-11-15T18:47:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-09T04:07:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9560774642128295,
        0.9775245870382447
      ],
      "excerpt": "Written by Blake Milner and Jeff Soldate, with help from Eugenio Culurciello and his lab. Work was \ndone as part of a project for BME495, a Computational Neuroscience course at Purdue. The original \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9798891790413099,
        0.9713051828322274,
        0.9150861590537623,
        0.930346534584148,
        0.9211815287270051
      ],
      "excerpt": "Deep Q Learning is a powerful machine learning algorithm utilizing Q-Learning. The state space is implemented using Neural Networks, thus bypassing inefficient static look up tables. This aplication was implemented using Torch 7 and Lua. \nIn many practical engineering scenarios it is often necessary for an algorithm to perform a \nseries of decisions in order to accomplish a given task. However, that task itself is not always \nwell-defined and the intermediate decisions to accomplish it are often complex and ever-changing. \nFurthermore, information that contributes to accomplishing the task is often not readily available \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9742697793401607,
        0.9550760744620929
      ],
      "excerpt": "situations in which a series of actions is required in order to accomplish a task. \nThis application also presents an AI based approach to learning a game where the rules aren't \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9174507137173111
      ],
      "excerpt": "order to address this problem. One of these methods, called Q-learning, utilizes a policy in order to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374015727459002
      ],
      "excerpt": "accepts a state that contains all pertinent information about the playing field along with a possible \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9445657506739098,
        0.9460757111944834,
        0.9783187322768448,
        0.9114883751208006,
        0.9718370617485127,
        0.9954208863203944
      ],
      "excerpt": "of an action is evaluated based on the immediate reward gained from taking that action and the \npossibility of a delayed reward that the action may lead to. For large games with many states and possible \nactions the above approach is very time-consuming and computationally intense. Using a neural network to \nrepresent the Q-function can solve many of these issues by eliminating the need for enumeration in order to completely \nsupport the exploration of the state space. \nAn implementation of the method described above (written in JavaScript) exists and is freely available: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9522548390846293,
        0.9821145184472575,
        0.9461185953084279,
        0.9484663153241628,
        0.8326189511585351
      ],
      "excerpt": "However, this package is designed for a browser and used primarily as a learning tool. DeepQLearning is a  \npartial port of the Q-learning component of this package to the Lua scripting language. The Neural Network  \ncomponent is powered by Torch 7, a scientific computing framework used for machine learning. It is the hope  \nof the authors that this package can be used to fuel further scientific inquiry into this topic. \nThis page also contains a broswer game that the JS Qlearning engine learns from scratch. If the settings are optimized \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A powerful machine learning algorithm utilizing Q-Learning and Neural Networks, implemented using Torch and Lua.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/blakeMilner/DeepQLearning/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 59,
      "date": "Thu, 23 Dec 2021 19:26:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/blakeMilner/DeepQLearning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "blakeMilner/DeepQLearning",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements:\n\n * Torch7 (with nnx and optim package) \n-- A scientific computing framework with wide support for machine learning algorithms. (https://github.com/torch/torch7)\n\n\nUsage:\n\nThe DeepQLearning module can be easily included in a Lua scipt using:\n\n```bash\nBrain = require 'deepqlearn'\n```\n\nThe brain must then be initialized with the number of expected inputs and outputs:\n\n```bash\nBrain.init(num_inputs, num_outputs)   \n```\n\nAn action can be selected from an input state space using:\n\n```bash\naction = Brain.forward(state); \n```\n\nLearning can be affected from the last state space input to Brian.forward by giving a reward value:\n\n```bash\nBrain.backward(reward); \n```\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/blakeMilner/DeepQLearning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MoonScript",
      "Lua"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepQLearning",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepQLearning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "blakeMilner",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/blakeMilner/DeepQLearning/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "blakeMilner",
        "body": "",
        "dateCreated": "2014-11-15T19:29:27Z",
        "datePublished": "2014-11-15T19:31:20Z",
        "html_url": "https://github.com/blakeMilner/DeepQLearning/releases/tag/v1.0",
        "name": "",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/blakeMilner/DeepQLearning/tarball/v1.0",
        "url": "https://api.github.com/repos/blakeMilner/DeepQLearning/releases/707113",
        "zipball_url": "https://api.github.com/repos/blakeMilner/DeepQLearning/zipball/v1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 130,
      "date": "Thu, 23 Dec 2021 19:26:44 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements:\n\n * Torch7 (with nnx and optim package) \n-- A scientific computing framework with wide support for machine learning algorithms. (https://github.com/torch/torch7)\n\n\nUsage:\n\nThe DeepQLearning module can be easily included in a Lua scipt using:\n\n```bash\nBrain = require 'deepqlearn'\n```\n\nThe brain must then be initialized with the number of expected inputs and outputs:\n\n```bash\nBrain.init(num_inputs, num_outputs)   \n```\n\nAn action can be selected from an input state space using:\n\n```bash\naction = Brain.forward(state); \n```\n\nLearning can be affected from the last state space input to Brian.forward by giving a reward value:\n\n```bash\nBrain.backward(reward); \n```\n",
      "technique": "Header extraction"
    }
  ]
}