{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- https://medium.com/analytics-vidhya/transforming-the-world-into-paintings-with-cyclegan-6748c0b85632\n- https://machinelearningmastery.com/how-to-develop-cyclegan-models-from-scratch-with-keras/\n- https://medium.com/datadriveninvestor/style-transferring-of-image-using-cyclegan-3cc7aff4fe61\n- https://www.tensorflow.org/tutorials/generative/cyclegan\n- https://arxiv.org/pdf/1703.10593.pdf\n- https://towardsdatascience.com/style-transfer-with-gans-on-hd-images-88e8efcf3716\n- https://www.tensorflow.org/tutorials/generative/pix2pix\n- https://gluon.mxnet.io/chapter14_generative-adversarial-networks/pixel2pixel.html\n- https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/honzaMaly/cyclegan-style-transfer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-25T08:12:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-17T14:09:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9930449542174918
      ],
      "excerpt": "This repository contains a Tensorflow implementation and demonstration of CycleGAN technique. Note that this project is still work in progress and requires some polishing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8579035200599411,
        0.8510614859079503
      ],
      "excerpt": "- translation of handwritten digits \n- style transfer based on paintings by Leonid Afremov \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow implementation and demonstration of CycleGAN technique",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/honzaMaly/cyclegan-style-transfer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 17:59:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/honzaMaly/cyclegan-style-transfer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "honzaMaly/cyclegan-style-transfer",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/honzaMaly/cyclegan-style-transfer/master/style_transfer.ipynb",
      "https://raw.githubusercontent.com/honzaMaly/cyclegan-style-transfer/master/digit_transformation.ipynb",
      "https://raw.githubusercontent.com/honzaMaly/cyclegan-style-transfer/master/image_preparation.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Clone this repository\n- Setup Python environment (preferably version 3.6) with **pip** command available for this project\n- Check _requirements.txt_ with the list of all dependencies. Select appropriate Tensorflow dependency given your configuration.\n- Install all dependencies by executing: `pip install -r requirements.txt` into the Python environment.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/honzaMaly/cyclegan-style-transfer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Jan Mal\\xc3\\xbd\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Neural style transfer with CycleGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cyclegan-style-transfer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "honzaMaly",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/honzaMaly/cyclegan-style-transfer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Linux, macOS or Windows\n- Python 3 (tested version 3.6)\n- CPU or NVIDIA GPU + CUDA CuDNN\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 23 Dec 2021 17:59:18 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Start a **Jupyter server** within your Python environment by executing a command: `jupyter notebook`. Make sure that this command is executed relative to the project directory, so the project's script can be imported with no changes to the code.\n- Check the log of a Jupyter server in the console. There should be a server's address. Use it to interact with the server.\n- Open _**digit_transformation**_ or _**style_transfer**_ notebook on the server and run all cells. The example should run as it is (it will automatically download the data set for you)\n\n",
      "technique": "Header extraction"
    }
  ]
}