{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [https://github.com/AlexeyAB/darknet](https://github.com/AlexeyAB/darknet)\n* [https://github.com/ultralytics/yolov3](https://github.com/ultralytics/yolov3)\n* [https://github.com/ultralytics/yolov5](https://github.com/ultralytics/yolov5)\n* [HaloTrouvaille/YOLO-Multi-Backbones-Attention](https://github.com/HaloTrouvaille/YOLO-Multi-Backbones-Attention/tree/1f425d379783b6d132b44f14ecfd251d8e2448fa)\n* [SpursLipu/YOLOv3v4-ModelCompression-MultidatasetTraining-Multibackbone](https://github.com/SpursLipu/YOLOv3v4-ModelCompression-MultidatasetTraining-Multibackbone)\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.10934"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{bochkovskiy2020yolov4,\n  title={{YOLOv4}: Optimal Speed and Accuracy of Object Detection},\n  author={Bochkovskiy, Alexey and Wang, Chien-Yao and Liao, Hong-Yuan Mark},\n  journal={arXiv preprint arXiv:2004.10934},\n  year={2020}\n}\n```\n\n```\n@inproceedings{wang2020cspnet,\n  title={{CSPNet}: A New Backbone That Can Enhance Learning Capability of {CNN}},\n  author={Wang, Chien-Yao and Mark Liao, Hong-Yuan and Wu, Yueh-Hua and Chen, Ping-Yang and Hsieh, Jun-Wei and Yeh, I-Hau},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops},\n  pages={390--391},\n  year={2020}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{wang2020cspnet,\n  title={{CSPNet}: A New Backbone That Can Enhance Learning Capability of {CNN}},\n  author={Wang, Chien-Yao and Mark Liao, Hong-Yuan and Wu, Yueh-Hua and Chen, Ping-Yang and Hsieh, Jun-Wei and Yeh, I-Hau},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops},\n  pages={390--391},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{bochkovskiy2020yolov4,\n  title={{YOLOv4}: Optimal Speed and Accuracy of Object Detection},\n  author={Bochkovskiy, Alexey and Wang, Chien-Yao and Liao, Hong-Yuan Mark},\n  journal={arXiv preprint arXiv:2004.10934},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9869405348645832,
        0.9869405348645832,
        0.9869405348645832,
        0.9997745333706407
      ],
      "excerpt": "SE Block paper : arxiv.org/abs/1709.01507 \nCBAM Block paper : arxiv.org/abs/1807.06521 \nECA Block paper : arxiv.org/abs/1910.03151 \nFunnel Activation for Visual Recognition : arxiv.org/abs/2007.11824 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/e96031413/AA-YOLO",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-22T14:12:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-10T13:06:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9928243993608922
      ],
      "excerpt": "This project is based on WongKinYiu/PyTorch_YOLOv4 u3_preview branch with some modification \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9311415939111559,
        0.9311415939111559,
        0.9567588029116127,
        0.9193223214207077,
        0.9311415939111559
      ],
      "excerpt": "Yolov4 with Efficientnet b0-b7 Backbone \nYolov4 with MobileNet V2/V3 Backbone \nYolov4 with Resnext50/ SE-Resnet50 Backbones \nYolov4 with Resnet Backbone \nYolov4 with VGG Backbone \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This project is based on WongKinYiu / PyTorch_YOLOv4 with some modification",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nsh data/get_coco.sh\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/e96031413/AA-YOLO/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 07:27:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/e96031413/AA-YOLO/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "e96031413/AA-YOLO",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/e96031413/AA-YOLO/main/data/get_coco.sh",
      "https://raw.githubusercontent.com/e96031413/AA-YOLO/main/utils/evolve.sh",
      "https://raw.githubusercontent.com/e96031413/AA-YOLO/main/utils/gcp.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9719631893979841
      ],
      "excerpt": "pip uninstall numpy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.994475329494408
      ],
      "excerpt": "pip install numpy==1.17 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9961667711587116
      ],
      "excerpt": "pip install pycocotools \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9128616812924379,
        0.8837680365796365,
        0.9322609392449874
      ],
      "excerpt": "NVIDIA-SMI 450.80.02    Driver Version: 450.80.02    CUDA Version: 11.0 \npython 3.6.9  \nPyTorch 1.6.0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8440293382790072
      ],
      "excerpt": ": line 8 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8440293382790072,
        0.8695403356153178,
        0.912523392024684
      ],
      "excerpt": ": line 138~140 \nfrom statistics import mean  \nprint('%sDone. (FPS:%.1f)' % (s, 1/(t2 - t1))) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9095276013032494
      ],
      "excerpt": "print('Avg FPS: (%.1f)' % (mean(FPS_avg))) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8581018771166031
      ],
      "excerpt": "python test.py --data coco2017.data --cfg yolov4-tiny.cfg --weights yolov4-tiny.pt --img 416 --augment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8621882743635256
      ],
      "excerpt": "elif file == 'yolov4.conv.137': \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8914936873095193
      ],
      "excerpt": "\u65b0\u589eReLU6(\u5728utils/layers.py)\u3001ReLU(\u5728utils/layers.py)\u3001DepthWise Convolution(\u5728models.py)\u3001ShuffleNetUnit(\u5728models.py) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8913205967248953,
        0.9416890921693968
      ],
      "excerpt": "\u4fee\u6539\u4e86PyTorch_YOLOv4\u7684u3_preview\u7576\u4e2d\uff0cmodels.py\u7b2c355\u884c(\u652f\u63f4pre-trained weight)\u3001train.py\u7b2c67\u884c(\u652f\u63f432\u500d\u6578\u7684\u89e3\u6790\u5ea6)\u3001dataset.py\u7b2c262\u53ca267\u884c(\u8655\u7406dataset\u76f8\u5c0d\u8def\u5f91\u7684\u554f\u984c) \nmodels.py line 355 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8510312545361018
      ],
      "excerpt": "    file = Path(weights).name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8094548885326436,
        0.811854372964597
      ],
      "excerpt": "    elif file == 'yolov3-tiny.conv.15': \n        cutoff = 15 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9602494194895941
      ],
      "excerpt": "train.py line 67 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9047117679884127
      ],
      "excerpt": "utils/dataset.py  line 262 and 267 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8563698968046812,
        0.8282232051740801
      ],
      "excerpt": "class LoadImagesAndLabels(Dataset):  #: for training/testing \n    def __init__(self, path, img_size=416, batch_size=16, augment=False, hyp=None, rect=False, image_weights=False, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8844726919410728,
        0.8827536783538414
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python train.py --data coco2017.data --cfg AA-YOLO-twin-head.cfg --weights 'yolov4-tiny.conv.29' --name yolov4-tiny --img 416 \nCUDA_VISIBLE_DEVICES=0 python test.py --data coco2017.data --cfg AA-YOLO-twin-head.cfg --weights yolov4-tiny.pt --img 416 --augment \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/e96031413/AA-YOLO/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch_YOLOv4-tiny",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "AA-YOLO",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "e96031413",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/e96031413/AA-YOLO/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n#: Install mish-cuda if you want to lower the GPU memory consumption during training (from 12G -> 8G) \npip install git+https://github.com/thomasbrandon/mish-cuda/\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 07:27:16 GMT"
    },
    "technique": "GitHub API"
  }
}