{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.01575"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{lai2019contrastive,\n  title={Contrastive Predictive Coding Based Feature for Automatic Speaker Verification},\n  author={Lai, Cheng-I},\n  journal={arXiv preprint arXiv:1904.01575},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9997241805039175
      ],
      "excerpt": "If you find the code useful, please cite \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "Cheng-I Lai. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jefflai108/Contrastive-Predictive-Coding-PyTorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-02T21:42:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T02:42:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9900070766221808,
        0.8431349157798528
      ],
      "excerpt": "This repository contains (PyTorch) code to reproduce the core results for:  \n* Representation Learning with Contrastive Predictive Coding \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9280593593223079,
        0.8006730447438866,
        0.8489760650772673
      ],
      "excerpt": "CDCK2: base model from the paper 'Representation Learning with Contrastive Predictive Coding'. \nCDCK5: CDCK2 with a different decoder. \nCDCK6: CDCK2 with a shared encoder and double decoders.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.871387227172208
      ],
      "excerpt": "|        CPC model ID         | number of epoch |   model size   |  dev NCE loss   |    dev acc.    | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Contrastive Predictive Coding for Automatic Speaker Verification ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 59,
      "date": "Mon, 20 Dec 2021 10:39:59 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jefflai108/Contrastive-Predictive-Coding-PyTorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jefflai108/Contrastive-Predictive-Coding-PyTorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/run.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/run_cpc.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/run_mfcc.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/path.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/cmd.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/make_sre.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/make_mx6.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/make_musan.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/extract_ivectors_mod.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/nnet3/xvector/prepare_feats_for_egs.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/nnet3/xvector/run_xvector.sh",
      "https://raw.githubusercontent.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/master/ivector/local/nnet3/xvector/tuning/run_xvector_1a.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8481942365069672
      ],
      "excerpt": " <img src=\"img/CDCK2.png\" width=\"60%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8673805446708356
      ],
      "excerpt": " <img src=\"img/CPC-ivector.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283484075787515
      ],
      "excerpt": " <img src=\"img/CDCK6.png\" width=\"70%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8673805446708356
      ],
      "excerpt": " <img src=\"img/det_curve_1_trial_list_1.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8673805446708356
      ],
      "excerpt": " <img src=\"img/det_curve_1_trial_list_2.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jefflai108/Contrastive-Predictive-Coding-PyTorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Perl",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Jeff Lai \\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contrastive-Predictive-Coding-PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contrastive-Predictive-Coding-PyTorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jefflai108",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jefflai108/Contrastive-Predictive-Coding-PyTorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 305,
      "date": "Mon, 20 Dec 2021 10:39:59 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "representation-learning",
      "contrastive-loss",
      "predictive-modeling",
      "unsupervised-learning",
      "automatic-speaker-verification"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`./src/model/model.py` contains the CPC models implementation, `./src/main.py` is the code for training the CPC models, `./src/spk_class.py` trains a NN speaker classifier, `./ivector/` contains the scripts for running an i-vectors speaker verification system. \n\nAn example of CPC and speaker classifier training can be found at\n```\n./run.sh\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}