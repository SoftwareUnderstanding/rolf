{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.04948\n\n# Introduction\nThis project show cases the use of Tensorflow JS, a JavaScript library released by Tensorflow, for Image Conversion using GANs (Pix2Pix architecture here"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Huge thanks to https://github.com/yining1023/pix2pix_tensorflowjs_lite and \nhttps://github.com/affinelayer/pix2pix-tensorflow repos for the detailed explanation.\n\nPlease check them out for training your own GAN models.\n\nThe dataset used for the project is  **ffhq dataset** available at https://github.com/NVlabs/ffhq-dataset\n\nIt is available under [Creative Commons BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/) license\n\n**Dataset paper citation:**\n\n>A Style-Based Generator Architecture for Generative Adversarial Networks\nTero Karras (NVIDIA), Samuli Laine (NVIDIA), Timo Aila (NVIDIA)\nhttps://arxiv.org/abs/1812.04948\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-30T10:15:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-30T13:02:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project show cases the use of Tensorflow JS, a JavaScript library released by Tensorflow, for Image Conversion using GANs (Pix2Pix architecture here).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8726870205755926,
        0.953140132453698
      ],
      "excerpt": "Tfjs addressed the most common problem with deployment of DL models - Setting up the environment. \nWith tfjs the model outputs can be shown right in the browser, making it available and easier to use for a larger demographic. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:27:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS/main/colorization_with_pix2pix.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8579917971137208
      ],
      "excerpt": "Leveraging the tfjs script we can run inferences on the client-side with virtually no setup. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "JavaScript",
      "HTML",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 TADI SANTH KUMAR\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Colorize-Images-Pix2Pix-in-TensorflowJS",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Colorize-Images-Pix2Pix-in-TensorflowJS",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "santhtadi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/santhtadi/Colorize-Images-Pix2Pix-in-TensorflowJS/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Find the ipynb Jupyter notebook file in the repo.\n2. Upload it to colab and select the GPU instance. Please note that colab uses TF2.0, but affinelayer's repo is built using tfv1, the appropriate changes are suggested in the notebook.\n3. Create your own dataset (each image is 256x256) and stitch them side by side (512x256) (Please refer to the repos in credits for more info).\n4. Follow the instructions in the notebook to generate the pix2pix model and the tfjs model.\n5. Place the pict file in models folder.\n6. Edit the index.js file as required.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:27:38 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "A Live demo can be found at [santhtadi.github.io](https://santhtadi.github.io/Colorize-Images-Pix2Pix-in-TensorflowJS/)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Find the ipynb Jupyter notebook file in the repo.\n2. Upload it to colab and select the GPU instance. Please note that colab uses TF2.0, but affinelayer's repo is built using tfv1, the appropriate changes are suggested in the notebook.\n3. Create your own dataset (each image is 256x256) and stitch them side by side (512x256) (Please refer to the repos in credits for more info).\n4. Follow the instructions in the notebook to generate the pix2pix model and the tfjs model.\n5. Place the pict file in models folder.\n6. Edit the index.js file as required.\n\n\n",
      "technique": "Header extraction"
    }
  ]
}