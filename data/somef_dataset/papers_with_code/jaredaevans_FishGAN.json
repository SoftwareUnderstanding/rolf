{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.10196 (ProGAN"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* https://arxiv.org/abs/1710.10196 (ProGAN)\n* https://keras.io/examples/generative/wgan_gp/\n* https://github.com/keras-team/keras/blob/master/keras/layers/convolutional.py\n* https://machinelearningmastery.com/how-to-implement-progressive-growing-gan-models-in-keras/\n* https://medium.com/@jonathan_hui/gan-wasserstein-gan-wgan-gp-6a1a2aa1b490\n* https://towardsdatascience.com/gan-ways-to-improve-gan-performance-acf37f9f59b\n* https://distill.pub/2016/deconv-checkerboard/\n* <ins>Hands on Machine Learning with Scikit-Learn, Keras, and Tensorflow</ins> by Aurelien Geron\n* <ins>Deep Learning with Python</ins> by Francois Chollet\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jaredaevans/FishGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-04T20:59:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-06T16:36:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9245988848627604,
        0.956130835766135,
        0.9860111503969717,
        0.8682834602710648
      ],
      "excerpt": "Construction of a fish generator   \nWhy fish?  Many fish are very beautiful with extremes in colorations, shapes, and patterns that have a tremendous spread in presentation.  Rather than aspiring to construct a generator that would make a fish that looks obviously like a subtly different version of an existing fish, my hope is to construct a generator that can make beautiful images of fish that look both unlike any fish I have seen, yet clearly fishy. \nThis is heavily influenced by ProgressiveGAN (below), but I did not use the progressive aspect. Overall, a big success.  I shrunk the figures to 64x64 and then used those to train the GAN.  See Notebooks/WGAN-GP-64 for specific implementation.  Here I think the critic was unable to keep up with the generator in some regards - particularly with fins and eyes, so I suspect strengthening the critic (more layers or more filters) might help. \nMostly as above.  I shrunk the figures to 32x32 and then used those to train the GAN.  See Notebooks/WGAN-GP for specific implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Construction of a tropical fish generator",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jaredaevans/FishGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 15:24:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jaredaevans/FishGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jaredaevans/FishGAN",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/jaredaevans/FishGAN/master/Notebooks/WGAN-GP-64/FishWGAN-GP-64.ipynb",
      "https://raw.githubusercontent.com/jaredaevans/FishGAN/master/Notebooks/WGAN-GP/FishWGAN-GP.ipynb",
      "https://raw.githubusercontent.com/jaredaevans/FishGAN/master/Notebooks/Simple-DCGAN/FishGANsimple.ipynb",
      "https://raw.githubusercontent.com/jaredaevans/FishGAN/master/Notebooks/ProGAN/FishWGAN.ipynb",
      "https://raw.githubusercontent.com/jaredaevans/FishGAN/master/ImagePrep/FishIMAGES.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jaredaevans/FishGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "FishGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FishGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jaredaevans",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jaredaevans/FishGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 15:24:11 GMT"
    },
    "technique": "GitHub API"
  }
}