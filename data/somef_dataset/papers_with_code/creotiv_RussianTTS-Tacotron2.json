{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This implementation uses code from the following repos: [Nvidia/Tacotron2](https://github.com/NVIDIA/tacotron2)\n\n\n[Ruslan Model]: https://drive.google.com/file/d/1CCC0_v3cL5qrLFBsSBuNE3_QgZfDH7wl/view?usp=sharing\n[HiFi-GAN Model]: https://drive.google.com/drive/folders/1-eEYTB5Av9jNql0WGBlRoi-WH2J7bp5Y\n[LJ Speech model]: https://drive.google.com/file/d/1c5ZTuT7J08wLUoVZ2KkUs_VdZuJ86ZqA/view?usp=sharing\n[pytorch 1.0]: https://github.com/pytorch/pytorch#installation\n[ignored]: https://github.com/NVIDIA/tacotron2/blob/master/hparams.py#L22\n[Apex]: https://github.com/nvidia/apex\n[AMP]: https://github.com/NVIDIA/apex/tree/master/apex/amp\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.08969\n* Added Maximizing Mutual Information for Tacotron (MMI",
      "https://arxiv.org/abs/1909.01145\n    - Can't make it work as showed in paper\n    - DGA still gives better results, and much cleaner\n* Added Russian text preparation with simple stress dictionary (za'mok i zamo'k"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9603369639556263,
        0.9965586474521223
      ],
      "excerpt": "Added Diagonal guided attention (DGA) from another model https://arxiv.org/abs/1710.08969 \nAdded Maximizing Mutual Information for Tacotron (MMI) https://arxiv.org/abs/1909.01145 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/creotiv/RussianTTS-Tacotron2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-01T13:48:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-13T04:28:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8141949346816867,
        0.8372396012058242,
        0.8468068119053629
      ],
      "excerpt": "PyTorch implementation of Natural TTS Synthesis By Conditioning \nWavenet On Mel Spectrogram Predictions.  \nThis implementation includes distributed and automatic mixed precision support \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8095220026254744
      ],
      "excerpt": "Can't make it work as showed in paper \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/creotiv/RussianTTS-Tacotron2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 10:34:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/creotiv/RussianTTS-Tacotron2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "creotiv/RussianTTS-Tacotron2",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/creotiv/RussianTTS-Tacotron2/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/creotiv/RussianTTS-Tacotron2/master/inference.ipynb",
      "https://raw.githubusercontent.com/creotiv/RussianTTS-Tacotron2/master/notebooks/DatasetAnalyze.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Download and extract the [RUSLAN dataset](https://ruslan-corpus.github.io/)\n2. Clone this repo: `git clone https://github.com/NVIDIA/tacotron2.git`\n3. CD into this repo: `cd tacotron2`\n6. Install [PyTorch 1.0]\n7. Install [Apex]\n8. Install python requirements or build docker image \n    - Install python requirements: `pip install -r requirements.txt`\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.919541088332267
      ],
      "excerpt": "python train.py --output_directory=outdir --log_directory=logdir \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800965357800894
      ],
      "excerpt": "Training using a pre-trained model can lead to faster convergence \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.919541088332267,
        0.9457437603218569
      ],
      "excerpt": "python train.py --output_directory=outdir --log_directory=logdir -c tacotron2_statedict.pt --warm_start \npython -m multiproc train.py --output_directory=outdir --log_directory=logdir --hparams=distributed_run=True,fp16_run=True \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/creotiv/RussianTTS-Tacotron2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Roff",
      "Jupyter Notebook",
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2017 Keith Ito\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tacotron 2 (with HiFi-GAN)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "RussianTTS-Tacotron2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "creotiv",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/creotiv/RussianTTS-Tacotron2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. NVIDIA GPU + CUDA cuDNN\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 10:34:51 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Download our published [Ruslan Model] or [LJ Speech model]\n2. Download published [HiFi-GAN Model] (Universal model recommended for non-English languages)\n3. `jupyter notebook --ip=127.0.0.1 --port=31337`\n4. Load inference.ipynb \n\nN.b.  When performing Mel-Spectrogram to Audio synthesis, make sure Tacotron 2\nand the Mel decoder were trained on the same mel-spectrogram representation. \n\n\n",
      "technique": "Header extraction"
    }
  ]
}