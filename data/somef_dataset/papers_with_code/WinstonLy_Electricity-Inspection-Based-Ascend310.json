{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.10934"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "[YOLO v4\u8bba\u6587\u5730\u5740]\uff1a(https://arxiv.org/abs/2004.10934) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "if batch_size &lt;= 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if dynamic: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "    if n.op_type == \"Resize\": \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "\u5728\u6700\u540e\u4e00\u884c\u52a0\u5165export LD_LIBRARY_PATH=/usr/lib64:/home/winston/Ascend/acllib/lib64:/home/winston/ascend_ddk/arm/lib:$LD_LIBRARY_PATH \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "if batch_size &lt;= 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if dynamic: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/WinstonLy/Electricity-Inspection-Based-Ascend310",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-30T02:15:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-20T06:50:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "|------data:  \u8f93\u5165\u6570\u636e\u6587\u4ef6\u5939 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.889343023163983
      ],
      "excerpt": "    model = Yolov4(n_classes=n_classes, inference=False)  #: inference\u6539\u4e3aFalse\u5373\u53ef\u53bb\u9664\u540e\u5904\u7406\u7b97\u5b50 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    model.load_state_dict(pretrained_dict) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9413341593395155,
        0.8983523073135788
      ],
      "excerpt": "for i in range(len(model.graph.node)): \n    n = model.graph.node[i] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8948916935560638
      ],
      "excerpt": "        model.graph.initializer.append( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8855816019207474,
        0.8983523073135788
      ],
      "excerpt": "        model.graph.node.remove(model.graph.node[i]) \n        model.graph.node.insert(i, newnode) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816887423812075
      ],
      "excerpt": "Process finished with exit code 137 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    model = Darknet(cfgfile) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    onnx.checker.check_model(model) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    C.check_model(model.SerializeToString()) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.826553306692172
      ],
      "excerpt": " is not output of any previous nodes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8512383250373934
      ],
      "excerpt": "[ERROR] TBE(11393,atc.bin):2021-04-01-21:34:22.057.726 [/home/jenkins/agent/workspace/Compile_Canndev_Centos_X86/canndev/ops/built-in/op_proto/array_ops.cc:2235][OP_PROTO] ExpandInferShape:2235 OpName:[Expand_456] \"Get constValue failed of [shape]\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\u501f\u52a9\u4e8eAscend310 AI\u5904\u7406\u5668\u5b8c\u6210\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u90e8\u7f72\u4efb\u52a1\uff0c\u5e94\u7528\u80cc\u666f\u4e3a\u53d8\u7535\u7ad9\u7535\u529b\u5de1\u68c0\uff0c\u57fa\u4e8eYOLO v4\u7b97\u6cd5\u6a21\u578b\u5bf9\u5e38\u89c1\u7535\u529b\u5de1\u68c0\u76ee\u6807\u8fdb\u884c\u68c0\u6d4b\uff0c\u5e76\u5145\u5206\u5229\u7528Ascend310\u63d0\u4f9b\u7684DVPP\u7b49\u786c\u4ef6\u652f\u6301\u80fd\u529b\u6765\u5b8c\u6210\u6d41\u5a92\u4f53\u7684\u4f20\u8f93\u3001\u5904\u7406\u7b49\u4efb\u52a1\uff0c\u5e76\u5bf9\u7cfb\u7edf\u6027\u80fd\u505a\u51fa\u4e00\u5b9a\u7684\u4f18\u5316\u3002",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/WinstonLy/Electricity-Inspection-Based-Ascend310/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Tue, 21 Dec 2021 20:31:52 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/WinstonLy/Electricity-Inspection-Based-Ascend310/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "WinstonLy/Electricity-Inspection-Based-Ascend310",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/image_main.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/upload_all.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/upload.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/build.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/video_main.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/load.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/script/run_presenter_server.sh",
      "https://raw.githubusercontent.com/WinstonLy/Electricity-Inspection-Based-Ascend310/master/script/presenterserver/prepare_presenter_server.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9096104964140866
      ],
      "excerpt": "|------build: cmake\u76ee\u5f55 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9661747491377832
      ],
      "excerpt": "   bash Anaconda3-2020.11-Linux-x86_64.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9938678389118305,
        0.907580978099355
      ],
      "excerpt": "   conda --version \n   conda upgrade --all \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9772227696564274
      ],
      "excerpt": "\u521b\u5efa\u865a\u62df\u73af\u5883\uff1aconda create -name ascend python=3.7.5 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9554169436001461
      ],
      "excerpt": "   source activate ascend  deactivate\u9000\u51fa \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "            name=n.name, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999833231880651
      ],
      "excerpt": "pip3 install onnx-simplifier \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8054738238174037
      ],
      "excerpt": "\u5229\u7528sudo find / -name libopencv_...\u7c7b\u4f3c\u7684\u547d\u4ee4\u67e5\u627e\u4f4d\u7f6e\uff0c\u5c06\u5bf9\u5e94\u8def\u5f84\u6309\u7167\u4e0b\u9762\u6240\u793a\u7684\u6b65\u9aa4\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043929270298233
      ],
      "excerpt": "    source ~/.bashrc \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999833231880651
      ],
      "excerpt": "\u5148\u5b89\u88c5onnxsim\uff1apip3 install onnx-simplifier \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9151270764930737
      ],
      "excerpt": "|------src\uff1a  \u5de5\u7a0b\u6e90\u4ee3\u7801\u76ee\u5f55 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189072827892548
      ],
      "excerpt": "dynamic = False \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8704890082338824
      ],
      "excerpt": "    dynamic = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248881994699955
      ],
      "excerpt": "    print('Export the onnx model ...') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "                      export_params=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "                      do_constant_folding=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.872465127896529
      ],
      "excerpt": "    print('Onnx model exporting done') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9528136232111187
      ],
      "excerpt": "python3.7 demo_pytorch2onnx.py yolov4.pth data/dog.jpg -1 80 608 608 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414093171839489
      ],
      "excerpt": "        #: print(\"Resize\", i, n.input, n.output) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "            name=n.name, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8954838692664512
      ],
      "excerpt": "        print(\"replace {} index {}\".format(n.name, i)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3.7 dy_resize.py yolov4_-1_3_608_608_dynamic.onnx \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374337916548001
      ],
      "excerpt": "    atc --model=yolov4_-1_3_608_608_dynamic_dbs.onnx --framework=5 --output=yolov4 --input_format=NCHW --log=info --soc_version=Ascend310 --input_shape=\"input:1,3,608,608\" --out_nodes=\"Conv_402:0;Conv_418:0;Conv_434:0\" --insert_op_conf=aipp.config \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9282585135518893
      ],
      "excerpt": " python3.7 demo_darknet2onnx.py ./electricity_yolov4_darknet/network_final.cfg ./electricity_yolov4_darknet/network_final.weights ./data/dog.jpg 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u66ff\u6362\u52a8\u6001resize\u7b97\u5b50\u4e3a\u9759\u6001\u7b97\u5b50\uff0c\u8fd0\u884c\u811a\u672c\uff1apython3.7 dy_resize.py yolov4_-1_3_608_608_dynamic.onnx,\u51fa\u73b0\u8f6c\u6362\u9519\u8bef \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374337916548001
      ],
      "excerpt": "atc --model=yolov4_1_3_608_608_sim_dbs.onnx --framework=5 --output=yolov4_power --input_format=NCHW --log=info --soc_version=Ascend310 --input_shape=\"input:1,3,608,608\" --out_nodes=\"Conv_388:0;Conv_404:0;Conv_420:0\" --insert_op_conf=aipp.config \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "yolov4_model_convert\u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\u4e86YOLO v4\u7684\u540e\u5904\u7406\u811a\u672c\uff08bin_to_predict_yolov4_pytorch.py)\u3002\u7531\u4e8e\u6a21\u578b\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u53bb\u9664\u4e86YOLO v4\u7684\u540e\u5904\u7406\u4ee3\u7801\uff0c\u56e0\u6b64\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u770b\u4e0d\u5230\u76f8\u5e94\u7684\u5904\u7406\u7ed3\u679c\uff0c\u4e3a\u5b8c\u6210YOLO v4\u7684\u540e\u5904\u7406\u6a21\u5757\uff0c\u91c7\u7528\u4ee5\u4e0b\u6b65\u9aa4\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9097959787595412
      ],
      "excerpt": "python3.7 bin_to_predict_yolov4_pytorch.py --bin_data_path ./result/ --det_results_path ./detection-results/ --origin_jpg_path ./data/ --coco_class_names ./coco2014.names  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8992337782661388
      ],
      "excerpt": "<img src=\"./image/feature_map.jpg\" width=\"300\" alt=\"featuremap\">                                                     <img src=\"./image/feature_map_c.jpg\" width=300> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8252878791619844
      ],
      "excerpt": "    cmake ../src -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -DCMAKE_SKIP_RPATH=TRUE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8634053566963894
      ],
      "excerpt": "            print('unknown type %s' % (block['type'])) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8327073792883504,
        0.8189072827892548
      ],
      "excerpt": "print('Loading weights from %s... Done!' % (weightfile)) \ndynamic = False \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8704890082338824
      ],
      "excerpt": "    dynamic = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8230519935531784
      ],
      "excerpt": "x = torch.randn((1, 3, model.height, model.width), requires_grad=False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8489602939738357,
        0.8592348059559567
      ],
      "excerpt": "    x = torch.randn((1, 3, model.height, model.width), requires_grad=True) \n    onnx_file_name = \"yolov4_-1_3_{}_{}_dynamic.onnx\".format(model.height, model.width) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248881994699955
      ],
      "excerpt": "    print('Export the onnx model ...') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "                      export_params=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "                      do_constant_folding=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.872465127896529
      ],
      "excerpt": "    print('Onnx model exporting done') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9282585135518893
      ],
      "excerpt": "python3.7 demo_darknet2onnx.py ./electricity_yolov4_darknet/network_final.cfg ./electricity_yolov4_darknet/network_final.weights ./data/dog.jpg 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8748494143062703
      ],
      "excerpt": "input: \"1127\" input: \"1128\" output: \"1129\" name: \"Mul_472\" op_type: \"Mul\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414697126945667
      ],
      "excerpt": "\u518d\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff1apython3 -m onnxsim --skip-optimization src.onnx dst.onnx \u5b8c\u6210\u7b80\u5316 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/WinstonLy/Electricity-Inspection-Based-Ascend310/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "JavaScript",
      "Python",
      "C++",
      "Makefile",
      "HTML",
      "CMake",
      "CSS",
      "C",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 WinstonLy\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Electricity-Inspection-Based-Ascend310",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Electricity-Inspection-Based-Ascend310",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "WinstonLy",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/WinstonLy/Electricity-Inspection-Based-Ascend310/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Tue, 21 Dec 2021 20:31:52 GMT"
    },
    "technique": "GitHub API"
  }
}