{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.11248",
      "https://arxiv.org/abs/1606.03476",
      "https://arxiv.org/abs/1706.03741"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@misc{wang2020imitation,\n  author = {Wang, Steven and Toyer, Sam and Gleave, Adam and Emmons, Scott},\n  title = {The {\\tt imitation} Library for Imitation Learning and Inverse Reinforcement Learning},\n  year = {2020},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/HumanCompatibleAI/imitation}},\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{wang2020imitation,\n  author = {Wang, Steven and Toyer, Sam and Gleave, Adam and Emmons, Scott},\n  title = {The {\\tt imitation} Library for Imitation Learning and Inverse Reinforcement Learning},\n  year = {2020},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/HumanCompatibleAI/imitation}},\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HumanCompatibleAI/imitation",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nPlease follow a coding style of:\n  * PEP8, with line width 88.\n  * Use the black autoformatter.\n  * Follow the Google Python Style Guide unless\n    it conflicts with the above. Examples of Google-style docstrings can be found\n    here.\nPRs should include unit tests for any new features, and add type annotations where possible. \nIt is OK to omit annotations when it would make the code significantly more complex.\nWe use pytest for unit testing: run pytest tests/ to run the test suite.\nWe use pytype for static type analysis.\nYou should run ci/code_checks.sh to run linting and static type checks,\nand may wish to configure this as a Git commit hook:\nbash\nln -s ../../ci/code_checks.sh .git/hooks/pre-commit\nThese checks are run on CircleCI and are required to pass before merging.\nAdditionally, we track test coverage by CodeCov and require that code coverage\nshould not decrease. This can be overridden by maintainers in exceptional cases.\nFiles in imitation/{examples,scripts}/ have no coverage requirements.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-08T05:15:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-26T19:49:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9780455514583657,
        0.9310544926563249,
        0.9417727022240272
      ],
      "excerpt": "This project aims to provide clean implementations of imitation and reward learning algorithms. \nCurrently we have implementations of Behavioral Cloning, DAgger (with synthetic examples), density-based reward modeling, Maximum Causal Entropy Inverse Reinforcement Learning, Adversarial Inverse Reinforcement Learning, Generative Adversarial Imitation Learning and Deep RL from Human Preferences. \nWe provide several CLI scripts as a front-end to the algorithms implemented in imitation. These use Sacred for configuration and replicability. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9574273795378506,
        0.8380588602938205
      ],
      "excerpt": "For more information on how to configure Sacred CLI options, see the Sacred docs. \nSee examples/quickstart.py for an example script that loads CartPole-v1 demonstrations and trains BC, GAIL, and AIRL models on that data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Clean PyTorch implementations of imitation and reward learning algorithms",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://sacred.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://imitation.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HumanCompatibleAI/airl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 71,
      "date": "Sun, 26 Dec 2021 19:56:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/HumanCompatibleAI/imitation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "HumanCompatibleAI/imitation",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/HumanCompatibleAI/airl/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/mce_irl.ipynb",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/examples/density_baseline_demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/download_models.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/dagger_benchmark.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/imit_benchmark.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/common.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/transfer_learn_benchmark.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/bc_benchmark.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/benchmark_and_table.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/train_experts.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/experiments/rollouts_from_policies.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/tests/generate_test_data.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/ci/build_venv.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/ci/code_checks.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/examples/quickstart.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/runners/launch_docker-dev.sh",
      "https://raw.githubusercontent.com/HumanCompatibleAI/airl/master/runners/build_push_image.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ngit clone http://github.com/HumanCompatibleAI/imitation\ncd imitation\npip install -e .\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install imitation\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.837119522142655
      ],
      "excerpt": ": Train GAIL from demonstrations. Tensorboard logs saved in output/ (default log directory). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.837119522142655
      ],
      "excerpt": ": Train AIRL from demonstrations. Tensorboard logs saved in output/ (default log directory). \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8889075913041773
      ],
      "excerpt": ": Train GAIL from demonstrations. Tensorboard logs saved in output/ (default log directory). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8889075913041773
      ],
      "excerpt": ": Train AIRL from demonstrations. Tensorboard logs saved in output/ (default log directory). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008533460271655
      ],
      "excerpt": "See examples/quickstart.py for an example script that loads CartPole-v1 demonstrations and trains BC, GAIL, and AIRL models on that data. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/HumanCompatibleAI/imitation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Center for Human-Compatible AI and Google LLC\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Imitation Learning Baseline Implementations",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "imitation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "HumanCompatibleAI",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HumanCompatibleAI/imitation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "shwang",
        "body": "",
        "dateCreated": "2021-03-14T13:10:24Z",
        "datePublished": "2020-10-23T23:07:06Z",
        "html_url": "https://github.com/HumanCompatibleAI/imitation/releases/tag/v0.2.0",
        "name": "First PyTorch release",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/HumanCompatibleAI/imitation/tarball/v0.2.0",
        "url": "https://api.github.com/repos/HumanCompatibleAI/imitation/releases/33001505",
        "zipball_url": "https://api.github.com/repos/HumanCompatibleAI/imitation/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "shwang",
        "body": "",
        "dateCreated": "2020-09-01T01:39:13Z",
        "datePublished": "2020-09-01T01:39:59Z",
        "html_url": "https://github.com/HumanCompatibleAI/imitation/releases/tag/v0.1.1",
        "name": "Final TF1 release",
        "tag_name": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/HumanCompatibleAI/imitation/tarball/v0.1.1",
        "url": "https://api.github.com/repos/HumanCompatibleAI/imitation/releases/30472894",
        "zipball_url": "https://api.github.com/repos/HumanCompatibleAI/imitation/zipball/v0.1.1"
      },
      {
        "authorType": "User",
        "author_name": "AdamGleave",
        "body": "Prototype versions of AIRL, GAIL, BC, DAGGER.",
        "dateCreated": "2020-05-09T19:43:19Z",
        "datePublished": "2020-05-09T19:46:07Z",
        "html_url": "https://github.com/HumanCompatibleAI/imitation/releases/tag/v0.1.0",
        "name": "Initial release",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/HumanCompatibleAI/imitation/tarball/v0.1.0",
        "url": "https://api.github.com/repos/HumanCompatibleAI/imitation/releases/26345707",
        "zipball_url": "https://api.github.com/repos/HumanCompatibleAI/imitation/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Follow instructions to install [mujoco\\_py v1.5 here](https://github.com/openai/mujoco-py/tree/498b451a03fb61e5bdfcb6956d8d7c881b1098b5#install-mujoco).\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 373,
      "date": "Sun, 26 Dec 2021 19:56:43 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "reward-learning",
      "inverse-reinforcement-learning",
      "imitation-learning"
    ],
    "technique": "GitHub API"
  }
}