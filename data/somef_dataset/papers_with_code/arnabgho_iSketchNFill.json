{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Code is inspired by [pytorch-CycleGAN-and-pix2pix]( https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix ). The UI is inspired by [iGAN](https://github.com/junyanz/iGAN). The pix2pixhd implementation is from [SPADE](https://github.com/NVlabs/SPADE). The warp functionality is from [Moving-Least-Squares](https://github.com/Jarvis73/Moving-Least-Squares).\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this code for your research, please cite our paper.\n```\n@inproceedings{ghosh2019isketchnfill,\n  title= {Interactive Sketch & Fill: Multiclass Sketch-to-Image Translation},\n  author={Ghosh, Arnab and Zhang, Richard and Dokania, Puneet K. and Wang, Oliver and Efros, Alexei A. and Torr, Philip H. S. and Shechtman, Eli},\n  booktitle={Proceedings of the IEEE international conference on computer vision},\n  year={2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{ghosh2019isketchnfill,\n  title= {Interactive Sketch &amp; Fill: Multiclass Sketch-to-Image Translation},\n  author={Ghosh, Arnab and Zhang, Richard and Dokania, Puneet K. and Wang, Oliver and Efros, Alexei A. and Torr, Philip H. S. and Shechtman, Eli},\n  booktitle={Proceedings of the IEEE international conference on computer vision},\n  year={2019}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnabgho/iSketchNFill",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-28T05:26:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T12:36:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9582996031709236,
        0.8972218863714637,
        0.9676831323173414,
        0.9457102757106125
      ],
      "excerpt": "We propose an interactive GAN-based sketch-to-image translation method \nthat helps novice users easily create images of simple objects. \nThe user starts with a sparse sketch and a desired object category, and the network then recommends its plausible completion(s) and shows a corresponding synthesized image. This enables a feedback loop, where the user can edit the sketch based on the network's recommendations, while the network is able to better synthesize the image that the user might have in mind. \nIn order to use a single model for a wide array of object classes, we introduce a gating-based approach for class conditioning, which allows us to generate distinct classes without feature mixing, from a single generator network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8206250410595616
      ],
      "excerpt": "Play with the interface \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9798052011208358,
        0.9452597437655542,
        0.8213326745593982
      ],
      "excerpt": "Drawing Pad: The main window of the interface where the user can draw with the left mouse button and erase with the right mouse button. The user has to keep the appropriate mouse button pressed to draw. The size of the brush can be altered by using the scroll bar on the mouse. As the user starts drawing the autocompletions help the user to draw. \nGenerations: The window in which the final rendered RGB image from one of the autocompletions is displayed. \nClasses: The available classes are depicted in this window. The user can select a class and start drawing objects of that class. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8728496130794655,
        0.844533701376222,
        0.9721999211446409,
        0.9670509255973233,
        0.9595046282767294,
        0.852684541568146,
        0.949047136024099,
        0.9749399521686924
      ],
      "excerpt": "Dice: This button changes the latent code for the generator, thus changing the shadow. The user can explore the dataset using this feature. \nDraw Stroke: This is the default mode whereby the user can sketch in the drawing pad. \nMove Stroke: This feature allows the user to select part of the sketch the user has drawn and move around to explore the various modes quickly. The size of the stroke grabbing area can be changed by using the scroll button in the mouse. \nWarp Stroke: An experimental feature whereby the user can warp the sketch using control points. The control points can be set using the right click button. Once the user has made all the control points he/she can put the cursor close to one of the points and drag to the desired position with the left mouse button pressed. \nEnable Shadows: This feature enables the multiple shadows to be overlayed with the the drawing pad. Otherwise only 1 autocompletion is shown. \nFor some classes the brush can be made thinner for better feedback. \nIf the user draws close to the shadows they can snap between modes such as go to different shapes of watermelons. \nWith a small stroke the user can try to move the stroke to see possible autocompletions that depict different sizes/shapes of the object. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9261654972888262
      ],
      "excerpt": "Here we see that the user first chooses a completion with glasses, locks in the patch. The chin stroke is lowered until a beard appears. The user locks in this patch and moves on to the hair. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9868941300423577,
        0.9205601432911252
      ],
      "excerpt": "Here we see the user making control points at the edges of the stroke using the right click of the mouse. Then using the left click the user can drag the control point to change the shape of the watermelon. \nGet the data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8252114565781546,
        0.9631267688951419
      ],
      "excerpt": "Prepare the training data for training autocomplete model. \nThe original data for the emoji is from Cartoon Set collected by Google. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8252114565781546
      ],
      "excerpt": "Prepare the training data for training autocomplete model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833188904563421
      ],
      "excerpt": "In case one wants to train the autocomplete model on their own dataset, they have to first extract the edges using Im2Pencil. The edges need to be simplified using Sketch Simplification. Scripts for doing these 2 are coming.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Software that can autocomplete sketches as the user starts drawing.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnabgho/iSketchNFill/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Tue, 28 Dec 2021 16:10:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/arnabgho/iSketchNFill/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "arnabgho/iSketchNFill",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/arnabgho/iSketchNFill/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/ui_shadow_draw/py-thin-plate-spline/TPS.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/scripts/prepare_autocomplete_scribble_dataset.sh",
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/scripts/download_pretrained_sketchy_dataset.sh",
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/scripts/download_pretrained_emoji.sh",
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/scripts/download_pretrained_car_outlines.sh",
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/scripts/prepare_autocomplete_emoji.sh",
      "https://raw.githubusercontent.com/arnabgho/iSketchNFill/master/scripts/download_pretrained_scribble_dataset.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/download_pretrained_scribble_dataset.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/download_pretrained_sketchy_dataset.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/download_pretrained_car_outlines.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/download_pretrained_emoji.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.918544008244225
      ],
      "excerpt": "One can select patches from the autocompletions using the select patch option. One can cycle through the completions using the scroll button on the mouse and left click to select the patch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/prepare_autocomplete_emoji.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/prepare_autocomplete_scribble_dataset.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8778095306951353
      ],
      "excerpt": "<img src ='docs/resources/imgs/teaser.png' width=\"1000px\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8730031738918097
      ],
      "excerpt": "  <img  height=\"200\" src='docs/resources/gifs/cupcake.gif'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.898805806843621
      ],
      "excerpt": "Download pretrained model (Scribble Dataset) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8596743344294941
      ],
      "excerpt": "python main_gui_shadow_draw_color.py --name wgangp_sparse_label_channel_pix2pix_autocomplete_multiscale_nz_256_nc_1_nf_32_gp_0_multigpu --model sparse_wgangp_pix2pix  --checkpoints_dir checkpoints_sparse --gpu_ids 0 --nz 256 --sparseSize 4 --fineSize 128 --ngf 32 --ndf 32 --num_interpolate 8 --input_nc 1 --output_nc 1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.870125512813809
      ],
      "excerpt": "python main_gui_shadow_draw_sketchy.py --name wgangp_sparse_label_channel_pix2pix_autocomplete_multiscale_nz_256_nc_1_nf_32_gp_0 --model sparse_wgangp_pix2pix --checkpoints_dir checkpoints_sparse_sketchy --gpu_ids 0 --nz 256 --sparseSize 4 --fineSize 128 --ngf 32 --ndf 32 --num_interpolate 8  --input_nc 1 --output_nc 1 --n_classes 6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.870125512813809
      ],
      "excerpt": "python main_gui_shadow_draw_sketch.py --name wgangp_sparse_label_channel_pix2pix_autocomplete_multiscale_nz_256_nc_1_nf_32_gp_0 --model sparse_wgangp_pix2pix --checkpoints_dir checkpoints_sparse_cars_outlines --gpu_ids 0 --nz 256 --sparseSize 4 --fineSize 128 --ngf 32 --ndf 32 --num_interpolate 6  --input_nc 1 --output_nc 1 --n_classes 1 --test_std 0.8 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625491842930201
      ],
      "excerpt": "  <img  height=\"300\" src='docs/resources/gifs/emoji.gif'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8470187363879009,
        0.8523166134615358
      ],
      "excerpt": "python main_gui_shadow_draw_pix2pix.py --name wgangp_sparse_label_channel_pix2pix_autocomplete_multiscale_nz_256_nc_1_nf_32_gp_0_multigpu --model sparse_wgangp_pix2pix  --checkpoints_dir checkpoints_sparse_emoji --gpu_ids 0 --nz 256 --sparseSize 4 --fineSize 128 --ngf 32 --ndf 32 --num_interpolate 8 --input_nc 1 --output_nc 1 --checkpoints_dir_pix2pix ./checkpoints --name_pix2pix scribble2emoji --model_pix2pix pix2pixhd --n_classes 1 \n<img src='docs/resources/imgs/interface.png' width=800> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625491842930201
      ],
      "excerpt": "  <img  height=\"300\" src='docs/resources/gifs/select_patches.gif'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625491842930201
      ],
      "excerpt": "  <img  height=\"300\" src='docs/resources/gifs/watermelon_warp.gif'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8026247178823822
      ],
      "excerpt": "Prepare the training data for training autocomplete model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589658548129034,
        0.9104587710574166,
        0.8026247178823822
      ],
      "excerpt": "Train the autocomplete model \npython train.py --name wgangp_sparse_label_channel_pix2pix_autocomplete_multiscale_nz_256_nc_1_nf_32_gp_0_multigpu --model sparse_wgangp_pix2pix --dataroot ../data/autocomplete-cartoons/  --lambda_A 0.0 --lambda_GAN 1 --niter 800  --lr_d 1e-4 --lr_g 1e-4 --checkpoints_dir checkpoints_sparse_cartoons --batchSize 128 --gpu_ids 0 --save_epoch_freq 1 --nz 256 --sparseSize 4 --fineSize 128 --ngf 32 --ndf 32 --autocomplete_dataset_outline  --img_conditional_D --input_nc 1 --output_nc 1 \nPrepare the training data for training autocomplete model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589658548129034,
        0.9314688849955166
      ],
      "excerpt": "Train the autocomplete model \npython train.py --name wgangp_sparse_label_channel_pix2pix_autocomplete_multiscale_nz_256_nc_1_nf_32_gp_0_multigpu --model sparse_wgangp_pix2pix --dataroot ../data/autocomplete-scribble-dataset/  --lambda_A 0.0 --lambda_GAN 1 --niter 800  --lr_d 1e-4 --lr_g 1e-4 --checkpoints_dir checkpoints_sparse_scribble_dataset --batchSize 128 --gpu_ids 0 --save_epoch_freq 1 --nz 256 --sparseSize 4 --fineSize 128 --ngf 32 --ndf 32 --autocomplete_dataset_outline  --img_conditional_D --input_nc 1 --output_nc 1 --n_classes 10 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/arnabgho/iSketchNFill/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Christoph Heindl\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "iSketchNFill",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "iSketchNFill",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "arnabgho",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnabgho/iSketchNFill/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Linux or macOS\n- Python 3\n- CPU or NVIDIA GPU + CUDA CuDNN\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 169,
      "date": "Tue, 28 Dec 2021 16:10:15 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "autocomplete-sketches",
      "draw",
      "autocompletions",
      "image",
      "generative-adversarial-network",
      "animation",
      "official",
      "interactive-interface",
      "sketch",
      "image-editing",
      "image-processing",
      "computer-vision"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Clone this repo:\n```\ngit clone https://github.com/arnabgho/iSketchNFill\ncd iSketchNFill\n```\n- Install PyTorch 1.0+ and dependencies from http://pytorch.org\n- Install Torchvision\n- Install all requirements\n```\npip install -r requirements.txt\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}