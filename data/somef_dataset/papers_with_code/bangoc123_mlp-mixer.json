{
  "citation": [
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "- Github: bangoc123 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bangoc123/mlp-mixer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-03T03:05:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-13T06:32:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9539045330504526
      ],
      "excerpt": "This library belongs to our project: Papers-Videos-Code where we will implement AI SOTA papers and publish all source code. Additionally, videos to explain these models will be uploaded to ProtonX Youtube channels. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation for paper MLP-Mixer: An all-MLP Architecture for Vision",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bangoc123/mlp-mixer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Thu, 23 Dec 2021 01:49:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bangoc123/mlp-mixer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bangoc123/mlp-mixer",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Create 2 folders `train` and `validation` in the `data` folder (which was created already). Then `Please copy` your images with the corresponding names into these folders.\n\n- `train` folder was used for the training process\n- `validation` folder was used for validating training result after each epoch \n\nThis library use `image_dataset_from_directory` API from `Tensorflow 2.0` to load images. Make sure you have some understanding of how it works via [its document](https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image_dataset_from_directory).\n\nStructure of these folders.\n\n```\ntrain/\n...class_a/\n......a_image_1.jpg\n......a_image_2.jpg\n...class_b/\n......b_image_1.jpg\n......b_image_2.jpg\n...class_c/\n......c_image_1.jpg\n......c_image_2.jpg\n```\n\n```\nvalidation/\n...class_a/\n......a_image_1.jpg\n......a_image_2.jpg\n...class_b/\n......b_image_1.jpg\n......b_image_2.jpg\n...class_c/\n......c_image_1.jpg\n......c_image_2.jpg\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Make sure you have installed Miniconda. If not yet, see the setup document [here](https://conda.io/en/latest/user-guide/install/index.html#regular-installation).\n\n2. `cd` into `mlp-mixer` and use command line `conda env create -f environment.yml` to setup the environment\n\n3. Run conda environment using the command `conda activate mlp-mixer`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8142711462726017
      ],
      "excerpt": "Run it on colab: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8773043558525849
      ],
      "excerpt": "<!-- <img src=./images/architecture.png width=400> --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9639222244837433
      ],
      "excerpt": "python predict.py --test-file-path ${test_file_path} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9775993409721372
      ],
      "excerpt": "python predict.py --test-file-path ./data/test/cat.2000.jpg \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bangoc123/mlp-mixer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# MLP Mixer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mlp-mixer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bangoc123",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bangoc123/mlp-mixer/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\npython train.py --epochs ${epochs} --num-classes ${num_classes}\n```\n\nYou want to train a model in 10 epochs for binary classification problems (with 2 classes)\n\nExample: \n\n```bash\npython train.py --epochs 10 --num-classes 2\n```\n\nThere are some `important` arguments for the script you should consider when running it:\n\n-  `train-folder`: The folder of training images\n-  `valid-folder`: The folder of validation images\n-  `model-folder`: Where the model after training saved\n-  `num-classes`: The number of your problem classes.  \n- `batch-size`: The batch size of the dataset\n- `c`: Patch Projection Dimension\n- `ds`: Token-mixing units. It was mentioned in the paper on [page 3](https://arxiv.org/pdf/2105.01601.pdf)\n- `dc`: Channel-mixing units. It was mentioned in the paper on [page 3](https://arxiv.org/pdf/2105.01601.pdf)\n- `num-of-mlp-blocks`: The number of MLP Blocks\n- `learning-rate`: The learning rate of Adam Optimizer\n\nAfter training successfully, your model will be saved to `model-folder` defined before\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 74,
      "date": "Thu, 23 Dec 2021 01:49:29 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "mlp-mixer",
      "tensorflow2"
    ],
    "technique": "GitHub API"
  }
}