{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.11946.\n\nCactiNet in a CNN modeled after EfficentNet with changes in no of 'mobile inverted bottleneck convolutional' layers and parameter values to identify aerial images of columnar cactus. \n\n## EfficientNet\n\nEfficientNets are a family of image classification models, which achieve state-of-the-art accuracy, yet being an order-of-magnitude smaller and faster than previous models.\n\nEfficientNets were developed based on AutoML and Compound Scaling. In particular, first use AutoML Mobile framework to develop a mobile-size baseline network, named as EfficientNet-B0; Then, use the compound scaling method to scale up this baseline to obtain EfficientNet-B1 to B7.\n\n![Effnet](https://github.com/PotatoSpudowski/CactiNet/blob/master/Images/params.png",
      "https://arxiv.org/abs/1312.6034 is to back-prop the output of the network with respect to a target class until the input and plot the computed gradient. This will highligh the part of the image responsible for that class.\n\n![sal](https://github.com/PotatoSpudowski/CactiNet/blob/master/Images/sal.png",
      "https://arxiv.org/abs/1905.11946\n* MnasNet: https://arxiv.org/pdf/1807.11626.pdf\n* Deep Inside Convolutional Networks: Visualising Image Classification Models and Saliency Maps \nhttps://arxiv.org/abs/1312.6034\n* Kaggle data: https://www.kaggle.com/c/aerial-cactus-identification\n",
      "https://arxiv.org/abs/1312.6034\n* Kaggle data: https://www.kaggle.com/c/aerial-cactus-identification\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9999662089929381
      ],
      "excerpt": "[1] Mingxing Tan and Quoc V. Le. EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. ICML 2019. Arxiv link: https://arxiv.org/abs/1905.11946. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977994744046882,
        0.9944484218006108
      ],
      "excerpt": "EfficientNet Paper: https://arxiv.org/abs/1905.11946 \nMnasNet: https://arxiv.org/pdf/1807.11626.pdf \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PotatoSpudowski/CactiNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-28T13:49:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-19T09:39:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* They learned that CNN\u2019s must be scaled up in multiple dimensions. Scaling CNN\u2019s only in one direction (eg depth only) will result in rapidly deteriorating gains relative to the computational increase needed.\nAs shown in the image below.\n\n![them_gains](https://github.com/PotatoSpudowski/CactiNet/blob/master/Images/gains.jpeg)\n\n* In order to scale up efficiently, all dimensions of depth, width and resolution have to be scaled together, and there is an optimal balance for each dimension relative to the others. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9314680446272473
      ],
      "excerpt": "Google recently published both a very exciting paper and source code for a newly designed CNN (convolutional neural network) called EfficientNet, that set new records for both accuracy and computational efficiency. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9711611992583032,
        0.9796153583255878
      ],
      "excerpt": "CactiNet in a CNN modeled after EfficentNet with changes in no of 'mobile inverted bottleneck convolutional' layers and parameter values to identify aerial images of columnar cactus. \nEfficientNets are a family of image classification models, which achieve state-of-the-art accuracy, yet being an order-of-magnitude smaller and faster than previous models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.986383404716351,
        0.8587422161970151
      ],
      "excerpt": "EfficientNets achieve state-of-the-art accuracy on ImageNet with an order of magnitude better efficiency. \nData used to build the model were aerial images of cactus obtained by kaggle. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9104657831382171,
        0.9500049936189162
      ],
      "excerpt": "The idea proposed by https://arxiv.org/abs/1312.6034 is to back-prop the output of the network with respect to a target class until the input and plot the computed gradient. This will highligh the part of the image responsible for that class. \nFitting data on Google's EfficientNet models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8044377364600335
      ],
      "excerpt": "Deep Inside Convolutional Networks: Visualising Image Classification Models and Saliency Maps  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch Implementation of a CNN similar to Google Brain's new EfficientNet from scratch to identify images of cactus\ud83c\udf35",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PotatoSpudowski/CactiNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 22:09:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PotatoSpudowski/CactiNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "PotatoSpudowski/CactiNet",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/PotatoSpudowski/CactiNet/master/Building_EfficientNet_model_using_Pytorch.ipynb",
      "https://raw.githubusercontent.com/PotatoSpudowski/CactiNet/master/Visualizing_CactiNet.ipynb",
      "https://raw.githubusercontent.com/PotatoSpudowski/CactiNet/master/Aerial_Cactus_Identification_using_transfer_learning.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9134108894517974
      ],
      "excerpt": "For the complete notebook related to modeling CactiNet check https://github.com/PotatoSpudowski/CactiNet/blob/master/Building_EfficientNet_model_using_Pytorch.ipynb \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PotatoSpudowski/CactiNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CactiNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CactiNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "PotatoSpudowski",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PotatoSpudowski/CactiNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 22:09:31 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch-implementation",
      "efficientnet",
      "cactus"
    ],
    "technique": "GitHub API"
  }
}