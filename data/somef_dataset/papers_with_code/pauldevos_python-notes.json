{
  "citation": [
    {
      "confidence": [
        0.8865875105383526
      ],
      "excerpt": "pyenv - (tutorial), (Deep dive into how pyenv actually works by leveraging the shim design pattern) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8406975741289269
      ],
      "excerpt": "Miguel Grinberg Visual Studio Code Setup \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9272052801450107
      ],
      "excerpt": "YouTube: Traversy Media - 15 VS Code Extensions For Front-End Developers in 2019 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8599496888611512
      ],
      "excerpt": "10 Common Software Architectural Patterns in a nutshell \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8224900193343084
      ],
      "excerpt": "Eric J Ma Best Testing Practices for Data Science PyCon 2017 - Github \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "source venv/bin/activate \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8251284127985855
      ],
      "excerpt": "Raymond Hettinger - Beyond PEP 8 -- Best practices for beautiful intelligible code - PyCon 2015 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8542830226002949,
        0.8104961231658132,
        0.9823800221584712
      ],
      "excerpt": "Python Machine Learning (2nd edition) - Sebastian Raschka \nIntroduction to Artificial Neural Networks and Deep Learning - Sebastian Raschka code \nPattern Classification - Sebastian Raschka \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024323296814487
      ],
      "excerpt": "Yellowbrick - Visual analysis and diagnostic tools to facilitate machine learning model selection. http://www.scikit-yb.org/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "catboost - https://github.com/catboost/catboost \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9812741753720983
      ],
      "excerpt": "awesome-machine-learning-interpretability - A curated list of awesome machine learning interpretability resources. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9551632216476252
      ],
      "excerpt": "kubeflow - Machine Learning Toolkit for Kubernetes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9195926162616405,
        0.9445752933810097
      ],
      "excerpt": "Machine Learning Cheatsheet \nLearning Math for Machine Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9223245388385979
      ],
      "excerpt": "Skorch at Scipy 2019 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.882445087035899
      ],
      "excerpt": "H20ai - Tutorials and training material for the H2O Machine Learning Platform \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024323296814487
      ],
      "excerpt": "Yellowbrick - Visual analysis and diagnostic tools to facilitate machine learning model selection. http://www.scikit-yb.org/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8970957752492467
      ],
      "excerpt": "OpenCV-Python - Open Source Computer Vision Library for Python \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9826010756233197
      ],
      "excerpt": "precommit (article) - A framework for managing and maintaining multi-language pre-commit hooks. (Black + Flake8) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "  https://github.com/rushter/MLAlgorithms \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9792388966131378,
        0.8430947044219899,
        0.9105368110547479,
        0.9105368110547479,
        0.9105368110547479,
        0.9936099085658282,
        0.9105368110547479,
        0.9105368110547479,
        0.8283268420643993
      ],
      "excerpt": "  https://github.com/WillKoehrsen/machine-learning-project-walkthrough \n  https://github.com/Avik-Jain/100-Days-Of-ML-Code \n  https://github.com/llSourcell/Learn_Data_Science_in_3_Months \n  https://github.com/llSourcell/Learn_Machine_Learning_in_3_Months \n  https://github.com/llSourcell/100_Days_of_ML_Code \n  https://github.com/ZuzooVn/machine-learning-for-software-engineers \n  https://github.com/llSourcell/Learn_Deep_Learning_in_6_Weeks \n  https://github.com/Spandan-Madan/DeepLearningProject \nMachine Learning from Scratch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9550388602129056
      ],
      "excerpt": "Learning AI if you Suck at Math \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.909900852992773
      ],
      "excerpt": "Machine Learning for Everyone \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8711248079754514
      ],
      "excerpt": "Airbnb - Knowledge Repo - tag and share analysis \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pauldevos/python-notes",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-24T02:17:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T23:39:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8317612526892125
      ],
      "excerpt": "VS Code Pluin Recommendations for better development experience. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.989575776229348
      ],
      "excerpt": "For Data Science projects, I also recommend Jupyter Notebooks as it's the defacto quick prototyping \"IDE\" for Data Science, Data Viz, and other similar projects that need non-technical stakeholder input. There definitely are ways to do \"development\" in Notebooks right as well. I'll try to share some resources on that. You will often use Notebooks in conjuction with a text editor like VS Code. There is JupyterLab which does attempt to combine notebooks and a text editor into one \"environment\" but as of March 2020 I haven't really been impressed with it to abandon using VS Code or Atom or Sublime for what JupyterLab can offer. To me the essential tool is a great text editor slash IDE and VS Code is that. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9455727437314645
      ],
      "excerpt": "YouTube: Overview of Pytest, Unittest, Coverage, and Pytest-cov \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9810706751001248,
        0.9869116418065537
      ],
      "excerpt": "The Hitchhiker's Guide to Packaging \nThe Hitchhiker's Guide to Structuring Your Project \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8089371761978,
        0.8587653181289979
      ],
      "excerpt": "Creating Web APIs with Python and Flask \nUsing Elasticsearch with Python and Flask \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8410373825429557
      ],
      "excerpt": ": Put the venv in your .gitignore: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9342118033545062
      ],
      "excerpt": "A list of some favorite libraries in Python as well as specific areas of Python e.g. Data Science, Machine Learning, etc. that I've found helpful. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8585071817387594
      ],
      "excerpt": "Data Science Workflows using Docker Containers(YouTube) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9828481699629865,
        0.9828481699629865
      ],
      "excerpt": "Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow \nHands-on Machine Learning with Scikit-Learn, Keras and TensorFlow 2 (2nd Ed) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9597439991400454
      ],
      "excerpt": "Introduction to Artificial Neural Networks and Deep Learning - Sebastian Raschka code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8362902200828946
      ],
      "excerpt": "Deep Learning with Python - Fran\u00e7ois Chollet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8098010629793582
      ],
      "excerpt": "ISLR - ISLR in Python - An Introduction to Statistical Learning (James, Witten, Hastie, Tibshirani, 2013): Python code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9943054471801716
      ],
      "excerpt": "Deep Learning Tutorials - Repository of teaching materials, code, and data for my data analysis and machine learning projects. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9547355883461663,
        0.9196490320846572,
        0.8275326751594033,
        0.8283215624712351
      ],
      "excerpt": "Yellowbrick - Visual analysis and diagnostic tools to facilitate machine learning model selection. http://www.scikit-yb.org/ \nscikit-plot - An intuitive library to add plotting functionality to scikit-learn objects. \nmissingno - Visualize missing data \nHoloviews - With Holoviews, your data visualizes itself \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9183210175628693,
        0.9588998143516615,
        0.9487475917302387,
        0.8501007413950404
      ],
      "excerpt": "scikit-optimize - Sequential model-based optimization with a scipy.optimize interface https://scikit-optimize.github.io \nLime - Lime: Explaining the predictions of any machine learning classifier \nshap - A unified approach to explain the output of any machine learning model. \neli5 - A library for debugging/inspecting machine learning classifiers and explaining their predictions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8443834934903293,
        0.8609735131435217
      ],
      "excerpt": "awesome-machine-learning-interpretability - A curated list of awesome machine learning interpretability resources. \ngym - A toolkit for developing and comparing reinforcement learning algorithms. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9196490320846572
      ],
      "excerpt": "scikit-plot - An intuitive library to add plotting functionality to scikit-learn objects. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9075377261982543
      ],
      "excerpt": "Hands-on Machine Learning Model Interpretation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278232242769112,
        0.8385241036292745,
        0.8171219178020955
      ],
      "excerpt": "Learning Math for Machine Learning \nGoogle's Best Practices for ML Engineering \n100 Days of ML Code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8435954817637751
      ],
      "excerpt": "category_encoders - A library of sklearn compatible categorical variable encoders \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9488400788062732
      ],
      "excerpt": "skorch - A scikit-learn compatible neural network library that wraps pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816460684786448
      ],
      "excerpt": "ipywebrtc - WebRTC for Jupyter notebook/lab \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8816741111988894
      ],
      "excerpt": "itk-jupyter-widgets - Interactive Jupyter widgets to visualize images in 2D and 3D. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8188247892956092,
        0.8390606537267924
      ],
      "excerpt": "voila - From Jupyter notebooks to standalone web applications and dashboards - And voil\u00e0! \nnb2xls - Convert Jupyter notebook to Excel spreadsheet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9558781543648446
      ],
      "excerpt": "RISE - RISE allows you to instantly turn your Jupyter Notebooks into a slideshow. No out-of-band conversion is needed, switch from jupyter notebook to a live reveal.js-based slideshow in a single keystroke, and back. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8848181057195952,
        0.9507287942046133
      ],
      "excerpt": "Explorations in reproducible analysis with Nodebook \nSoS: A polyglot notebook and workflow system for both interactive multilanguage data analysis and batch data processing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816460684786448
      ],
      "excerpt": "beakerx - Beaker Extensions for Jupyter Notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8611380958463621,
        0.8949582112449173
      ],
      "excerpt": "auto-sklearn - Automated Machine Learning with scikit-learn https://automl.github.io/auto-sklearn \nH20ai - Tutorials and training material for the H2O Machine Learning Platform \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8322484883542415,
        0.8851108711547887,
        0.9519796081068208
      ],
      "excerpt": "Top 50 matplotlib Visualizations \u2013 The Master Plots \nFrom Data to Viz - Graphing Decisions - code in R \nThe Art of Effective Visualization of Multi-dimensional Data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8797693035295481,
        0.9629098578619139,
        0.9368125404346277,
        0.9867510544696229,
        0.9547355883461663,
        0.9196490320846572,
        0.9352165906919482,
        0.9001716824758617
      ],
      "excerpt": "Observable - D3 and Other Data Vizualizations \nOur World in Data (Visualizations) \nOpen Data Science - Data Visualization \u2013 How to Pick the Right Chart Type? \nData Viz Project | Collection of data visualizations to get inspired and finding the right type. \nYellowbrick - Visual analysis and diagnostic tools to facilitate machine learning model selection. http://www.scikit-yb.org/ \nscikit-plot - An intuitive library to add plotting functionality to scikit-learn objects. \nipyvolume - 3d plotting for Python in the Jupyter notebook based on IPython widgets using WebGL \nDash - Written on top of Flask, Plotly.js, and React.js, Dash can be used for highly custom user interfaces in Python \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8003750797256557,
        0.8992549367572398
      ],
      "excerpt": "bqplot - 2-D plotting library for Project Jupyter \nipyleaflet - A Jupyter / Leaflet bridge enabling interactive maps in the Jupyter notebook. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8863471256345953,
        0.9316930387440756,
        0.8275326751594033
      ],
      "excerpt": "vaex - Lazy Out-of-Core DataFrames for Python. Visualize a billion rows per second on a single computer. \nscattertext - Beautiful visualizations of how language differs among document types. \nmissingno - Visualize missing data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8602012275933651
      ],
      "excerpt": "geoplotlib - python toolbox for visualizing geographical data and making maps \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9120118290980889
      ],
      "excerpt": "geonotebook - A Jupyter notebook extension for geospatial visualization and analysis \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934651361584934
      ],
      "excerpt": "Creating Interactive Visualizations with Plotly\u2019s Dash Framework \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9647226325344382,
        0.9718627873230559
      ],
      "excerpt": "NetworkX - NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks. \nSeaborn - Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.814624010298464
      ],
      "excerpt": "Effectively Using Matplotlib \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9504795915093488,
        0.9337418501672098,
        0.9253193825463191
      ],
      "excerpt": "pyLDAvis - Python library for interactive topic model visualization. Port of the R LDAvis package \nDataShader - uses Dask and Numba to visualize huge data sets \nGraph-Tool - Graph-tool is an efficient Python module for manipulation and statistical analysis of graphs (a.k.a. networks) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816460684786448,
        0.8169122572308648
      ],
      "excerpt": "ipywebrtc - WebRTC for Jupyter notebook/lab \nweasyprint - WeasyPrint converts web documents (HTML with CSS, SVG, \u2026) to PDF. https://weasyprint.org/ (Creating PDF Reports with Pandas, Jinja and WeasyPrint) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9618582824858725
      ],
      "excerpt": "Our World in Data - data visualizations of many things around the world \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9669830057571325
      ],
      "excerpt": "Pandas - Flexible and powerful data analysis / manipulation library for Python, providing labeled data structures similar to R data.frame objects, statistical functions, and much more \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.812257469831484
      ],
      "excerpt": "Faker - Faker is a Python package that generates fake data for you. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8107855664472192,
        0.9568736495901659
      ],
      "excerpt": "Prophet - A Facebook Time Series Analysis library \nPyFlux - Time series analysis library with flexible range of modelling and inference options. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9379245317851715
      ],
      "excerpt": "textblob - Simple, Pythonic, text processing--Sentiment analysis, part-of-speech tagging, noun phrase extraction, translation, and more. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9665092864692744
      ],
      "excerpt": "Pattern - Web mining module for Python, with tools for scraping, natural language processing, machine learning, network analysis and visualization \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8668623982743658
      ],
      "excerpt": "Feature Engineering Text Data - Advanced Deep Learning Strategies \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8069216424114248
      ],
      "excerpt": "xlnet - XLNet: Generalized Autoregressive Pretraining for Language Understanding \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8976656286165084
      ],
      "excerpt": "Pyro - Pyro is a flexible, scalable deep probabilistic programming library built on PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8838111733407588
      ],
      "excerpt": "Screenshot-to-code - A neural network that transforms a design mock-up into a static website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9475508502479938
      ],
      "excerpt": "fastai - The fastai deep learning library, plus lessons and and tutorials \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016,
        0.9476971931400519,
        0.9193807561955877
      ],
      "excerpt": "keras-tuner - Hyperparameter tuning for humans \nVisdom - A flexible tool for creating, organizing, and sharing visualizations of live, rich data. Supports Torch and Numpy. \ntalos - Hyperparameter Optimization for Keras Models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8175563190233672
      ],
      "excerpt": "Amazon-Product-Recommender-System - Sentiment analysis on Amazon Review Dataset available at http://snap.stanford.edu/data/web-Amazon.html \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8593170605865162
      ],
      "excerpt": "wget - free utility for non-interactive downloading files from the web \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8782530740074466
      ],
      "excerpt": "credstash - A little utility for managing credentials in the cloud \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8194711462376117
      ],
      "excerpt": "How to Stream Text Data from Twitch with Sockets in Python \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8070508537969732
      ],
      "excerpt": "sanic - Async Python 3.5+ web server that's written to go fast \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8830201612923246
      ],
      "excerpt": "Falcon - Falcon is a bare-metal Python web API framework for building high-performance microservices, app backends, and higher-level frameworks. Docs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8755103838612504
      ],
      "excerpt": "fastapi, Docs - FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9737574897314522,
        0.9485646752808042,
        0.9162463001312922,
        0.869713275424294
      ],
      "excerpt": "Flask-AppBuilder - Simple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD generation for your models, google charts and much more. \nAwesome-Flask - A curated list of awesome Flask resources and plugins \nNikola - A static website and blog generator \nPelican - Static site generator that supports Markdown and reST syntax. Powered by Python. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.940836090492478,
        0.8248009379968336
      ],
      "excerpt": "pdftabextract - A set of tools for extracting tables from PDF files helping to do data mining on (OCR-processed) scanned documents. \nHitchhiker's Guide to D3.js \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9109625027258258
      ],
      "excerpt": "Data Visualization with D3.js, a FreeCodeCamp course \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8880755999462941
      ],
      "excerpt": "pcapy - Pcapy is a Python extension module that interfaces with the libpcap packet capture library. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8122960497115559,
        0.9300856133334845
      ],
      "excerpt": "fsociety - fsociety Hacking Tools Pack \u2013 A Penetration Testing Framework \nPayloadsAllTheThings - A list of useful payloads and bypass for Web Application Security and Pentest/CTF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.969668571466445,
        0.885166556873162
      ],
      "excerpt": "Learn to Build Machine Learning Services, Prototype Real Applications, and Deploy your Work to Users \nCombining D3 with Kedion: Graduating from Toy Visuals to Real Applications \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9167556625169607,
        0.9494904867982752,
        0.9314878784756385,
        0.9721753777598023,
        0.8397200836735625
      ],
      "excerpt": "Neural Networks and Deep Learning \nIntroduction to Statistics With Python \nHow To Create Data Products That Are Magical Using Sequence-to-Sequence Models \nHow To Create Natural Language Semantic Search For Arbitrary Objects With Deep Learning \nMachine Learning for Everyone \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9025071724817231
      ],
      "excerpt": "nbashots - NBA shot charts using matplotlib, seaborn, and bokeh. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.844050291759684
      ],
      "excerpt": "Projects - Project Solutions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9601398186466245
      ],
      "excerpt": "nbdime - Tools for diffing and merging of Jupyter notebooks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8997994177666053
      ],
      "excerpt": "Sparkmagic - Jupyter magics and kernels for working with remote Spark clusters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8350643229440967
      ],
      "excerpt": "py_d3 - D3 block magic for Jupyter notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9002997922162025
      ],
      "excerpt": "JupyterLab-toc - Table of Contents Extension \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714128671815062
      ],
      "excerpt": "Bringing the best out of Jupyter Notebooks for Data Science \n",
      "technique": "Supervised classification"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Sphinx\n- [pweave](http://mpastell.com/pweave/) - Pweave is a scientific report generator and a literate programming tool for Python. It can capture the results and plots from data analysis and works well with numpy, scipy and matplotlib.\n\n---\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://flashtext.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://pyflux.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://mlbox.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://ipywidgets.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pauldevos/python-notes/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 08:00:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pauldevos/python-notes/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pauldevos/python-notes",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pauldevos/python-notes/master/deploying-ml-on-aws/docker/dockerfiles/jupyter-ubuntu-anaconda/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pauldevos/python-notes/master/python-data-structures/Data-Structures.ipynb",
      "https://raw.githubusercontent.com/pauldevos/python-notes/master/python-data-structures/.ipynb_checkpoints/Data-Structures-checkpoint.ipynb",
      "https://raw.githubusercontent.com/pauldevos/python-notes/master/1-random-analysis-musings/US-Males-Height-Age-20-39.ipynb",
      "https://raw.githubusercontent.com/pauldevos/python-notes/master/1-random-analysis-musings/.ipynb_checkpoints/US-Males-Height-Age-20-39-checkpoint.ipynb",
      "https://raw.githubusercontent.com/pauldevos/python-notes/master/deep-learning/AlphaPose.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8717512223190318
      ],
      "excerpt": "Installing and Managing Python Versions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8344538946128716
      ],
      "excerpt": "To get set up with Visual Studio Code for Python projects I recommend these tutorials: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9395696914546919
      ],
      "excerpt": "YouTube: Git Playlist Corey Schafer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8425584281887476
      ],
      "excerpt": "YouTube: Python Testing 201 with pytest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365,
        0.8837680365796365
      ],
      "excerpt": "Python Anti-Patterns \nBerkeley Python Bootcamp \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8354858609574315
      ],
      "excerpt": "How To Package Your Python Code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8354385389358223
      ],
      "excerpt": "Python by Programiz - OOP \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906813965171598,
        0.8149163481828332
      ],
      "excerpt": "mkdir myproject && cd myproject \n: create a python env \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8075004293796461
      ],
      "excerpt": "git init \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8076264984190383
      ],
      "excerpt": "Doing this keeps your virtual environment out of source control (Git). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9779906815418535,
        0.8211232956927162,
        0.9967226375118565,
        0.9907081940898859,
        0.9450945630068187,
        0.9756673021865978,
        0.8450011079483095,
        0.9619024749388386
      ],
      "excerpt": ": Activate the environment: \nsource venv/bin/activate \n: Install packages \npip install requests bs4 \n: Freeze the requirements: \npip freeze > requirements.txt \n: Check requirements.txt into source control: \ngit add requirements.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176854362291084
      ],
      "excerpt": "scikit-optimize - Sequential model-based optimization with a scipy.optimize interface https://scikit-optimize.github.io \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "catboost - https://github.com/catboost/catboost \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8533674476963026
      ],
      "excerpt": "ipywebrtc - WebRTC for Jupyter notebook/lab \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9190945534655844
      ],
      "excerpt": "jupytext - Jupyter notebooks as Markdown documents, Julia, Python or R scripts \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9032649108355532,
        0.9619436441986458
      ],
      "excerpt": "Jupyter Notebook Extensions \nStackOverflow - R & Python in One Jupyter Notebook %%R \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821060098405617
      ],
      "excerpt": "JupyterLab - JupyterLab computational environment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958985422496989
      ],
      "excerpt": "beakerx - Beaker Extensions for Jupyter Notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9372326714979307
      ],
      "excerpt": "  A Python / ThreeJS bridge utilizing the Jupyter widget infrastructure. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8142402087472481,
        0.9139835513903644,
        0.9248408471258772
      ],
      "excerpt": "ggpy - ggplot for Python \nMatplotlib - matplotlib: plotting with Python \nEffectively Using Matplotlib \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9666971320346821
      ],
      "excerpt": "jupyter-matplotlib - Matplotlib Jupyter Extension \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8533674476963026
      ],
      "excerpt": "ipywebrtc - WebRTC for Jupyter notebook/lab \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "  https://github.com/rushter/MLAlgorithms \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406,
        0.8918974083095406,
        0.8918974083095406
      ],
      "excerpt": "  https://github.com/llSourcell/Learn_Data_Science_in_3_Months \n  https://github.com/llSourcell/Learn_Machine_Learning_in_3_Months \n  https://github.com/llSourcell/100_Days_of_ML_Code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406,
        0.8918974083095406
      ],
      "excerpt": "  https://github.com/llSourcell/Learn_Deep_Learning_in_6_Weeks \n  https://github.com/Spandan-Madan/DeepLearningProject \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073356990156553
      ],
      "excerpt": "PayPal Notebook Extensions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8438673028706873,
        0.8239979767280847
      ],
      "excerpt": "Jupyter Notebook Formatting Extensions \nJupyter Notebooks Dashboards Extension \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184472650198229
      ],
      "excerpt": "Jupyter Extension Tricks \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8277284271708881,
        0.8154978347736538
      ],
      "excerpt": "YouTube: Python Testing 101 with pytest \nYouTube: Python Testing 201 with pytest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8358038243500444
      ],
      "excerpt": "MLtest - Testing framework to simplify writing ML unit tests. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836680396384429
      ],
      "excerpt": "Regex tutorial\u200a\u2014\u200aA quick cheatsheet by examples \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8969489283938035
      ],
      "excerpt": "TensorFlow Models Examples \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8075919228883373
      ],
      "excerpt": "D3 Tutorials \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pauldevos/python-notes/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Python Resources",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "python-notes",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pauldevos",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pauldevos/python-notes/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 08:00:13 GMT"
    },
    "technique": "GitHub API"
  }
}