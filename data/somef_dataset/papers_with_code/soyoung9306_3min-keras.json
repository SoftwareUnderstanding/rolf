{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661 \n\n[2] Ian Goodfellow, \"Generative Adversarial Networks\" at NIPS Workshop on Perturbation, Optimization, and Statistics, Montreal, 2014. (presentation",
      "https://arxiv.org/abs/1404.7828\u202f. doi:10.1016/j.neunet.2014.09.003. PMID 25462637.\n\n[2] \ub370\uc774\ud130 \uc0ac\uc774\uc5b8\uc2a4 \uc2a4\ucfe8, \u201c\uc2e0\uacbd\ub9dd \uc131\ub2a5\uac1c\uc120\", https://datascienceschool.net/view-notebook/f18248a467e94c6483783afc93d08af9/ (2017. 12. 2)\n\n\n### \ucf00\ub77c\uc2a4\ub85c \uad6c\ud604\ud558\ub294 DNN\n[1] LeCun, Yann; Bengio, Yoshua; Hinton, Geoffrey (2015). \"Deep learning\". Nature. 521 (7553): 436\u2013444. Bibcode:2015Natur.521..436L. doi:10.1038/nature14539. PMID 26017442.\n\n[2] Wizard's Note, \u201c\ub525\ub7ec\ub2dd \ub2e8\uc5b4\uc0ac\uc804\u201d, http://wizardsnote.tumblr.com/post/138818343004/\ub525\ub7ec\ub2dd-\ub2e8\uc5b4\uc0ac\uc804-\ub274\ub7f4\ub137-\uad6c\uc870-1 (2017. 12. 2)\n\n\n### \ucf00\ub77c\uc2a4\ub85c \uad6c\ud604\ud558\ub294 CNN\n[1] LeCun, Yann. \"LeNet-5, convolutional neural networks\". Retrieved 16 November 2013.\n\n[2] Github.io, \u201cCS231n: Convolutional Neural Networks for Visual Recognition\u201d, http://cs231n.github.io (2017. 12. 2)\n\n\n### \ucf00\ub77c\uc2a4\ub85c \uad6c\ud604\ud558\ub294 RNN\n[1] Deeplearning4j (DL4J), \ucd08\ubcf4\uc790\ub97c \uc704\ud55c RNNs\uacfc LSTM \uac00\uc774\ub4dc, https://deeplearning4j.org/kr/lstm \n\n[2] \uae40\ubcd1\ud76c, \uc21c\ud658\uc2e0\uacbd\ub9dd(Recurrent neural networks) \uac1c\uc694, slideshare.net, 2017. 3. 22, https://www.slideshare.net/ByoungHeeKim1/recurrent-neural-networks-73629152 \n\n\n### \ucf00\ub77c\uc2a4\ub85c \uad6c\ud604\ud558\ub294 AE\n[1] The Keras Blog, Building Autoencoders in Keras, 2016. 5. 14, https://blog.keras.io/building-autoencoders-in-keras.html (2017. 12. 4) \n\n[2] \uc815\ubcd1\uae30, Image denoising with Autoencoder in Keras, 2017. 3. 3, https://byeongkijeong.github.io/Keras-Autoencoder/   (2017. 12 4)\n\n[3] \uc870\ub300\ud611, \uc624\ud1a0\uc778\ucf54\ub354\ub97c \uc774\uc6a9\ud55c \ube44\uc815\uc0c1 \uac70\ub798 \uac80\ucd9c \ubaa8\ub378\uc758 \uad6c\ud604 #1 - \uc2e0\uc6a9\uce74\ub4dc \uac70\ub798 \ub370\uc774\ud130 \ubd84\uc11d, 2017. 9. 11, http://bcho.tistory.com/1197 (2017. 12. 4)\n\n\n### \ucf00\ub77c\uc2a4\ub85c \uad6c\ud604\ud558\ub294 GAN\n[1] Ian Goodfellow, \u201cGenerative Adversarial Networks\u201d, 2014, https://arxiv.org/abs/1406.2661 \n\n[2] Ian Goodfellow, \"Generative Adversarial Networks\" at NIPS Workshop on Perturbation, Optimization, and Statistics, Montreal, 2014. (presentation)\n\n[3] \uae43\ud5c8\ube0c, \u201cPyTorch\ub85c \uad6c\ud604\ud55c GAN\u201d,  https://github.com/devnag/pytorch-generative-adversarial-networks/blob/master/gan_pytorch.py (2017. 12. 4)\n\n[4] Dev Nag, \u201cGenerative Adversarial Networks (GANs) in 50 lines of code (PyTorch)\u201d,  https://medium.com/@devnag/generative-adversarial-networks-gans-in-50-lines-of-code-pytorch-e81b79659e3f (2017. 12. 4)\n\n[5] \uc720\uc7ac\uc900, \u201c\ucd08\uc9dc \ub300\ud559\uc6d0\uc0dd \uc785\uc7a5\uc5d0\uc11c \uc774\ud574\ud558\ub294 Generative Adversarial Nets\u201d, http://jaejunyoo.blogspot.com/2017/01/generative-adversarial-nets-1.html  (2017. 12. 4) \n\n[6] \ub9c1\ub9c1 (ling1134), \uc0dd\ud0dc\ud559 - \uc0c1\uc0ac(Analogous)\uc640 \uc0c1\ub3d9(Homologous), \uacf5\uc9c4\ud654(Coevolution)\uc640 \uacf5\uc0dd(Coexistence), 2013. 3. 18, http://blog.naver.com/PostView.nhn?blogId=ling1134&logNo=70162877431&parentCategoryNo=&categoryNo=34&viewDate=&isShowPopularPosts=false&from=postView (2017. 12. 4)\n\n[7] \uae40\ubc94\uc218, \u201cBatch Normalization \uc124\uba85 \ubc0f \uad6c\ud604\u201d, 2016. 1. 13,  https://shuuki4.wordpress.com/2016/01/13/batch-normalization-\uc124\uba85-\ubc0f-\uad6c\ud604/ (2017. 12. 4)  \n\n[8] \uc784\uc885\ub300(\ubc88\uc5ed), \u2018\uae30\uacc4 \ud559\uc2b5(Machine Learning, \uba38\uc2e0 \ub7ec\ub2dd)\uc740 \uc990\uac81\ub2e4! Part 7\u2019, https://medium.com/@jongdae.lim/\uae30\uacc4-\ud559\uc2b5-machine-learning-\uc740-\uc990\uac81\ub2e4-part-7-2435b4a55ccd (2017. 12. 2)\n\n\n### \ucf00\ub77c\uc2a4\ub85c \uad6c\ud604\ud558\ub294 UNET\n[1] Ronneberger, O., Fischer, P. & Brox, T., \u201cU-net: Convolutional networks for biomedical image segmentation.\u201d in International Conference on Medical Image Computing and Computer-Assisted Intervention 234\u2013241 (Springer, 2015).\n\n\n### \ucf00\ub77c\uc2a4 \uc751\uc6a9 \n[1] Arthur Juliani, \u201cResNets, HighwayNets, and DenseNets, Oh My!\u201d, 2016. 10. 14, https://chatbotslife.com/resnets-highwaynets-and-densenets-oh-my-9bb15918ee32 (2017. 12. 2)\n\n[2] Github.io, \u201cTransfer learning\u201d in CS231n: Convolutional Neural Networks for Visual Recognition, http://cs231n.github.io/transfer-learning/ (2017. 12. 2)\n\n[3] Greg Chu, \u201cHow to use transfer learning and fine-tuning in Keras and Tensorflow to build an image recognition system and classify (almost) any object\u201d, https://deeplearningsandbox.com/how-to-use-transfer-learning-and-fine-tuning-in-keras-and-tensorflow-to-build-an-image-recognition-94b0b02444f2 (2017. 12. 2)\n\n[4] Felix Yu, \u201cA Comprehensive guide to Fine-tuning Deep Learning Models in Keras (Part I)\u201d, 2016. 10. 8, https://flyyufelix.github.io/2016/10/03/fine-tuning-in-keras-part1.html (2017. 12. 2) \n\n[5] Adrian Rosebrock, \u201cImageNet: VGGNet, ResNet, Inception, and Xception with Keras\u201d, 2017. 3. 20, https://www.pyimagesearch.com/2017/03/20/imagenet-vggnet-resnet-inception-xception-keras/ (2012. 12. 2) "
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9370752330100366
      ],
      "excerpt": "<img src=\"http://image.yes24.com/momo/TopCate1742/MidCate007/174166602.jpg\" alt=\"3\ubd84 \ub525\ub7ec\ub2dd \ucf00\ub77c\uc2a4\ub9db\" title=\"3\ubd84 \ub525\ub7ec\ub2dd \ucf00\ub77c\uc2a4\ub9db\" width=\"350\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808498626019349
      ],
      "excerpt": "ANN(artificial neural network)\uc740 \ub450\ub1cc\uc758 \uc2e0\uacbd\ub9dd\uc744 \ud749\ub0b4 \ub0b8 \uc778\uacf5\uc9c0\ub2a5 \uae30\uc220\uc785\ub2c8\ub2e4. ANN\uc740 \uc785\ub825 \uacc4\uce35, \uc740\ub2c9 \uacc4\uce35, \ucd9c\ub825 \uacc4\uce35\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ucd08\uae30\uc5d0\ub294 \uae30\uc220\uc801\uc778 \ud55c\uacc4\ub85c \uc740\ub2c9 \uacc4\uce35\uc744 \ud55c \uac1c\ub9cc \ud3ec\ud568\ud558\uc5ec \uc8fc\ub85c \ucd1d 3\uac1c \uacc4\uce35\uc73c\ub85c ANN\uc744 \uad6c\uc131\ud588\uc2b5\ub2c8\ub2e4. \uc774 \uc7a5\uc5d0\uc11c\ub294 ANN \uad6c\uc131\uc5d0 \ud544\uc694\ud55c \uc694\uc18c\ub97c \uc774\ud574\ud558\uace0 \uc608\uc81c\ub97c \uc0b4\ud3b4\ubcf4\uba70 ANN \uad6c\ud604 \ubc29\ubc95\uc744 \uc775\ud799\ub2c8\ub2e4. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9992679852394774,
        0.9984019688398249,
        0.9996000128159652,
        0.999345642075537,
        0.9998731784781779
      ],
      "excerpt": "[1] \ucd94\ud615\uc11d, \u300c\uc778\uacf5\uc9c0\ub2a5\uc758 \uc5ed\uc0ac\uc640 \uc131\uacf5\uc694\uc778\u300d, \uc6d4\uac04SW\uc911\uc2ec\uc0ac\ud68c, 2016.12., https://spri.kr/posts/view/21643?code=inderstry_trend (2017. 12. 4) \n[2] NVIDIA KOREA, \u300c\uc778\uacf5\uc9c0\ub2a5(AI)\uc740 \uc5b4\ub5bb\uac8c \ubc1c\ub2ec\ud574\uc654\ub294\uac00\u300d, \uc778\uacf5\uc9c0\ub2a5\uc758 \uc5ed\uc0ac, 2016. 3. 13, http://blogs.nvidia.co.kr/2016/03/13/history_of_ai/ (2017. 12. 4) \n[3] \u300cNVIDIA KOREA, \uc778\uacf5\uc9c0\ub2a5\uacfc \uba38\uc270\ub7ec\ub2dd, \ub525\ub7ec\ub2dd\uc758 \ucc28\uc774\uc810\uc744 \uc54c\uc544\ubcf4\uc790, 2016. 8. 3, http://blogs.nvidia.co.kr/2016/08/03/difference_ai_learning_machinelearning/ (2017. 12. 4) \n[4] \uc0bc\uc131\uc804\uc790, \u201c[\ud56b\ud14c\ud06c 3\ubd84 \ud074\ub798\uc2a4] \ub525\ub7ec\ub2dd \ud3b8\u201d, YouTube, 2016. 10. 16, https://www.youtube.com/watch?v=3jCaGDIY6VM (2017. 12. 4) \n[5]  Vertex.ai, \u201cPlaidML \uc18c\uac1c: \ubaa8\ub4e0 \ud50c\ub7ab\ud3fc\uc744 \uc704\ud55c \uc624\ud508\uc18c\uc2a4 \ub525\ub7ec\ub2dd (Announcing PlaidML: Open Source Deep Learning for Every Platform)\u201d, 2017. 10. 20, http://vertex.ai/blog/announcing-plaidml (2017. 12. 4) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184658499669879
      ],
      "excerpt": "[7] \u201c\uc560\ud50c, AI \uce69 \u2018\ub274\ub7f0 \uc5d4\uc9c4\u2019 \uac1c\ubc1c\u2026\uc0dd\ud0dc\uacc4 \ud655\uc7a5\u201d, ZDNET Korea, 2017. 5. 28, http://www.zdnet.co.kr/news/news_view.asp?artice_id=20170528102955  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.986327158429457
      ],
      "excerpt": "\u201c, https://keras.io/ (2017. 12. 4) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9795187663973746,
        0.9962204900780209,
        0.9997658190452026,
        0.9871859645224971,
        0.9993286195237108,
        0.9448100533552249
      ],
      "excerpt": "[10] Jaeseung Lee, Jupyter Notebook \uc124\uce58/\uc0ac\uc6a9\ubc29\ubc95, 2016. 5. 25, \nhttps://m.blog.naver.com/PostView.nhn?blogId=jaeseung172&logNo=220719131067&proxyReferer=https%3A%2F%2Fwww.google.com%2F (2017. 12. 12) \n[1] Schmidhuber, J. (2015). \"Deep Learning in Neural Networks: An Overview\". Neural Networks. 61: 85\u2013117. arXiv:1404.7828\u202f. doi:10.1016/j.neunet.2014.09.003. PMID 25462637. \n[2] \ub370\uc774\ud130 \uc0ac\uc774\uc5b8\uc2a4 \uc2a4\ucfe8, \u201c\uc2e0\uacbd\ub9dd \uc131\ub2a5\uac1c\uc120\", https://datascienceschool.net/view-notebook/f18248a467e94c6483783afc93d08af9/ (2017. 12. 2) \n[1] LeCun, Yann; Bengio, Yoshua; Hinton, Geoffrey (2015). \"Deep learning\". Nature. 521 (7553): 436\u2013444. Bibcode:2015Natur.521..436L. doi:10.1038/nature14539. PMID 26017442. \n[2] Wizard's Note, \u201c\ub525\ub7ec\ub2dd \ub2e8\uc5b4\uc0ac\uc804\u201d, http://wizardsnote.tumblr.com/post/138818343004/\ub525\ub7ec\ub2dd-\ub2e8\uc5b4\uc0ac\uc804-\ub274\ub7f4\ub137-\uad6c\uc870-1 (2017. 12. 2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998953899806715,
        0.9278824608274014,
        0.9971307637171646
      ],
      "excerpt": "[2] Github.io, \u201cCS231n: Convolutional Neural Networks for Visual Recognition\u201d, http://cs231n.github.io (2017. 12. 2) \n[1] Deeplearning4j (DL4J), \ucd08\ubcf4\uc790\ub97c \uc704\ud55c RNNs\uacfc LSTM \uac00\uc774\ub4dc, https://deeplearning4j.org/kr/lstm  \n[2] \uae40\ubcd1\ud76c, \uc21c\ud658\uc2e0\uacbd\ub9dd(Recurrent neural networks) \uac1c\uc694, slideshare.net, 2017. 3. 22, https://www.slideshare.net/ByoungHeeKim1/recurrent-neural-networks-73629152 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.993735861070179,
        0.9989023391904346,
        0.9993035025913225,
        0.9934396937462175,
        0.910467733970265
      ],
      "excerpt": "[2] \uc815\ubcd1\uae30, Image denoising with Autoencoder in Keras, 2017. 3. 3, https://byeongkijeong.github.io/Keras-Autoencoder/   (2017. 12 4) \n[3] \uc870\ub300\ud611, \uc624\ud1a0\uc778\ucf54\ub354\ub97c \uc774\uc6a9\ud55c \ube44\uc815\uc0c1 \uac70\ub798 \uac80\ucd9c \ubaa8\ub378\uc758 \uad6c\ud604 #1 - \uc2e0\uc6a9\uce74\ub4dc \uac70\ub798 \ub370\uc774\ud130 \ubd84\uc11d, 2017. 9. 11, http://bcho.tistory.com/1197 (2017. 12. 4) \n[1] Ian Goodfellow, \u201cGenerative Adversarial Networks\u201d, 2014, https://arxiv.org/abs/1406.2661  \n[2] Ian Goodfellow, \"Generative Adversarial Networks\" at NIPS Workshop on Perturbation, Optimization, and Statistics, Montreal, 2014. (presentation) \n[3] \uae43\ud5c8\ube0c, \u201cPyTorch\ub85c \uad6c\ud604\ud55c GAN\u201d,  https://github.com/devnag/pytorch-generative-adversarial-networks/blob/master/gan_pytorch.py (2017. 12. 4) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9996952188339409,
        0.9455181097724338,
        0.9998397742399596,
        0.9999921943629847,
        0.9999552612290422,
        0.999899801768331,
        0.9999285579854591
      ],
      "excerpt": "[5] \uc720\uc7ac\uc900, \u201c\ucd08\uc9dc \ub300\ud559\uc6d0\uc0dd \uc785\uc7a5\uc5d0\uc11c \uc774\ud574\ud558\ub294 Generative Adversarial Nets\u201d, http://jaejunyoo.blogspot.com/2017/01/generative-adversarial-nets-1.html  (2017. 12. 4)  \n[6] \ub9c1\ub9c1 (ling1134), \uc0dd\ud0dc\ud559 - \uc0c1\uc0ac(Analogous)\uc640 \uc0c1\ub3d9(Homologous), \uacf5\uc9c4\ud654(Coevolution)\uc640 \uacf5\uc0dd(Coexistence), 2013. 3. 18, http://blog.naver.com/PostView.nhn?blogId=ling1134&logNo=70162877431&parentCategoryNo=&categoryNo=34&viewDate=&isShowPopularPosts=false&from=postView (2017. 12. 4) \n[7] \uae40\ubc94\uc218, \u201cBatch Normalization \uc124\uba85 \ubc0f \uad6c\ud604\u201d, 2016. 1. 13,  https://shuuki4.wordpress.com/2016/01/13/batch-normalization-\uc124\uba85-\ubc0f-\uad6c\ud604/ (2017. 12. 4)   \n[8] \uc784\uc885\ub300(\ubc88\uc5ed), \u2018\uae30\uacc4 \ud559\uc2b5(Machine Learning, \uba38\uc2e0 \ub7ec\ub2dd)\uc740 \uc990\uac81\ub2e4! Part 7\u2019, https://medium.com/@jongdae.lim/\uae30\uacc4-\ud559\uc2b5-machine-learning-\uc740-\uc990\uac81\ub2e4-part-7-2435b4a55ccd (2017. 12. 2) \n[1] Ronneberger, O., Fischer, P. & Brox, T., \u201cU-net: Convolutional networks for biomedical image segmentation.\u201d in International Conference on Medical Image Computing and Computer-Assisted Intervention 234\u2013241 (Springer, 2015). \n[1] Arthur Juliani, \u201cResNets, HighwayNets, and DenseNets, Oh My!\u201d, 2016. 10. 14, https://chatbotslife.com/resnets-highwaynets-and-densenets-oh-my-9bb15918ee32 (2017. 12. 2) \n[2] Github.io, \u201cTransfer learning\u201d in CS231n: Convolutional Neural Networks for Visual Recognition, http://cs231n.github.io/transfer-learning/ (2017. 12. 2) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/soyoung9306/Keras_simple",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-13T02:37:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-06T04:42:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8760834993305507
      ],
      "excerpt": "Keras \ucf54\ub4dc\ub85c \ub9db\ubcf4\ub294 ANN, DNN, CNN, RNN, AE, GAN, UNET \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9627487715650112
      ],
      "excerpt": "\ucf00\ub77c\uc2a4\ub97c \uc774\uc6a9\ud574 \ub525\ub7ec\ub2dd \uc778\uacf5\uc2e0\uacbd\ub9dd\uc744 \ub9cc\ub4e4\uc5b4 \uc778\uacf5\uc9c0\ub2a5\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. 1\uc7a5\uc740 \ucf00\ub77c\uc2a4\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \ud544\uc694\ud55c \uae30\ucd08\ub97c \ub2e4\ub8f9\ub2c8\ub2e4. 2\uc7a5\ubd80\ud130\ub294 \ucd5c\uc2e0 \uc778\uacf5\uc9c0\ub2a5 \uad6c\ud604 \ubc29\ubc95\uc778 \uc8fc\uc694 \uc778\uacf5\uc2e0\uacbd\ub9dd\uc744 \uc608\uc81c\ub85c \uc774\uc6a9\ud574 \ub2e4\ub8f9\ub2c8\ub2e4. 2\uc7a5~5\uc7a5\uc5d0\uc11c \ub2e4\ub8e8\ub294 ANN, DNN, CNN, RNN\uc740 \uc9c0\ub3c4\ud559\uc2b5 \ubc29\uc2dd\uc758 \uc778\uacf5\uc9c0\ub2a5\uc785\ub2c8\ub2e4. 6\uc7a5\uacfc 7\uc7a5\uc5d0\uc11c \ub2e4\ub8e8\ub294 AE\uc640 GAN\uc740 \ube44\uc9c0\ub3c4\ud559\uc2b5 \ubc29\uc2dd\uc774\uace0 8\uc7a5\uc758 UNET\uc740 \uace0\uae09 \uc9c0\ub3c4\ud559\uc2b5 \ubc29\ubc95\uc785\ub2c8\ub2e4. 9\uc7a5\uc740 8\uc7a5\uae4c\uc9c0 \ubc30\uc6b4 \ub0b4\uc6a9\uc744 \uc751\uc6a9\ud558\uace0 \ud655\uc7a5\ud558\ub294 \ubc29\ubc95\uc744 \ub2e4\ub8f9\ub2c8\ub2e4.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374352952006486
      ],
      "excerpt": "[4] Dev Nag, \u201cGenerative Adversarial Networks (GANs) in 50 lines of code (PyTorch)\u201d,  https://medium.com/@devnag/generative-adversarial-networks-gans-in-50-lines-of-code-pytorch-e81b79659e3f (2017. 12. 4) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\ucf54\ub529\uc170\ud504\uc758 3\ubd84 \ub525\ub7ec\ub2dd, \ucf00\ub77c\uc2a4\ub9db implement",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/soyoung9306/3min-keras/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 20:39:21 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/soyoung9306/Keras_simple/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "soyoung9306/Keras_simple",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex9_3_advanced_keras.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex6_1_ae_fc_mnist_mc.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex7_2_gan_cnn_mnist_tf.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex2_1_ann_mnist_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex6_2_ae_conv_mnist_mc.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex5_2_lstm_airplane.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex7_1_gan_dnn_prob.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex5_1_lstm_imdb_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex8_1_unet_cifar10.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex9_1_applications_agumentation.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/Simple_yolov2.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex9_4_2_tfwithkeras.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex2_2_ann_rg.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex3_1_dnn_mnist_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex3_2_dnn_cifar10_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex1_1_simple_exercise.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex4_1_cnn_mnist_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex4_2_cnn_cifar10_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex9_4_1_my_layer.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/nb_ex9_2_pretrained_method.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/7-2_01%20unet_conv_cifar10rgb_mc%20%28in_ch%202%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/5-1%20RNN%20imdb.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/5-2%20IRNN%20with%20MNIST.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-2%20cnn_minst_cl.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/7-2_00%20unet_conv_cifar10rgb_mc.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_xx%20dnn_cifar10_cl%20%28dropout%20n%20m%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/nb_ex4_2_cnn_cifar10%20%28old%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_02%20dnn_cifar10_cl%20%28dropout%20_05%20_1%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_01%20dnn_cifar10_cl%20%28dropout%20_05%20_2%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/3-3_00%20ae_conv_mnist_mc.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_05%20dnn_cifar10_cl%20%28dropout%20_01%20_0%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_03%20dnn_cifar10_cl%20%28dropout%20_05%20_05%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_05%20dnn_cifar10_cl%20%28dropout%20_01%20_01%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3%20cnn_cifar10_cl%20%28no%20dropout%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_00%20dnn_cifar10_cl%20%28no%20dropout%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/5-1%20RNN%20imdb%20%28step%29-KERASPP%20STYLE.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/2-3_04%20dnn_cifar10_cl%20%28dropout%20_01%20_05%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/5-1%20RNN%20imdb%20%28step%29.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/3-2_00%20ae_fc_mnist_mc.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/old/8-1_10%20CNN1D-GAN%20for%20Prob.ipynb",
      "https://raw.githubusercontent.com/soyoung9306/3min-keras/master/bonus/bonus_my_layer.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/soyoung9306/Keras_simple/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Sungjin Kim\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "KERASPP",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Keras_simple",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "soyoung9306",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/soyoung9306/Keras_simple/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 20:39:21 GMT"
    },
    "technique": "GitHub API"
  }
}