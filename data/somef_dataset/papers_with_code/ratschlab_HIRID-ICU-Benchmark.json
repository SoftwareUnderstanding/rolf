{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.1078",
      "https://arxiv.org/abs/1412.3555"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ratschlab/HIRID-ICU-Benchmark",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-04T15:35:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T10:17:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.869752466659009,
        0.9401137258055805,
        0.9624692150619887,
        0.984937533366108,
        0.8820143555298807,
        0.955749935324844,
        0.8452570370534435,
        0.9625685053477573,
        0.9366895688532955,
        0.9071769431695276,
        0.9828270778198044,
        0.9235310950927283,
        0.9752654795459985,
        0.9905167670114904,
        0.9225326379685856,
        0.8297304744317802
      ],
      "excerpt": "This repository contains the needed resources to build the HIRID-ICU-Benchmark dataset for which the manuscript can be found here. \nWe first introduce key resources to better understand the structure and specificity of the data. \nWe then detail the different features of our pipeline and how to use them as shown in the below figure. \nWe build our work on previously released data, models, and metrics. To help users which might be unfamiliar with them we provide in this section some related documentation. \nWe based our benchmark on a recent dataset in intensive care called HiRID. \nIt is a freely accessible critical care dataset containing data from more than 33,000 patient admissions to the Department of Intensive Care Medicine, Bern University Hospital, Switzerland (ICU) from January 2008 to June 2016. \nIt was first released as part of the circulatory Early Warning Score project.  \nFirst, you can find some more details about the demographics of the patients of the data in Appendix A: HiRID Dataset Details. However, for more details about the original data, it's better to refer to its latest documentation . \nMore in detail the documentation contains the following sections of interest: \n- Getting started This first section points to a jupyter notebook to familiarize yourself with the data. \n- Data details This second section contains a description of the variables existing in the dataset. To complete this section you can refer to our varref.tsv which we use to build the common version of the data. \n- Structure of the published data This final section contains details about the structure of the raw data you will have to download and place in hirid-data-root folder (see \"Run Pre-Processing\"). \nAs for the data, in this benchmark, we compare existing machine learning models that are commonly used for multivariate time-series data. \nFor these models' implementation we use pytorch, for the deep learning models, lightgbm for the boosted tree approaches, and sklearn for the logistic regression model and metrics.  \nIn the deep learning models we used the following models:  \n- Long Short-term Memory (LSTM): The most commonly used type of Recurrent Neural Networks for long sequences. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9348857029224747
      ],
      "excerpt": "- Temporal Convolutional Networks (TCN): 1D convolution approach to sequence data. By using dilated convolution to extend the receptive field of the network it has shown great performance on long-term dependencies. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9330596664118616,
        0.9474769919614909,
        0.9816347193199136,
        0.9744440729685047
      ],
      "excerpt": "In our benchmark we use different metrics depending on the tasks, however, all the implementations are from sklearn which documents well their usage: \n- Binary Classification: Because our tasks are all highly imbalanced, we use both ROC and PR Area Under the Curve using sklearn.metrics.roc_auc_score and sklearn.metrics.average_precision_score \n- Multiclass Classification: As here also the Phenotyping task is imbalanced, we compare model with Balanced Accuracy using sklearn.metrics.balanced_accuracy_score \n- Regression : For regression we prefer the Mean Absolute Error (MAE) as our metric of choice with sklearn.metrics.mean_absolute_error \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9103202036399924
      ],
      "excerpt": "- model.(torch/txt/joblib) : The weights of the model that was trained. The extension depends model type. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8190123910862875
      ],
      "excerpt": "The pre-built scripts are divided into four categories as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043976968442363
      ],
      "excerpt": "- ablations: This folder contains the scripts to reproduce the ablations studies on the horizon, sequence length, and weighting. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9604604529782936
      ],
      "excerpt": "- pretrained: This last type of script allows us to evaluate pretrain models from our experiments. We discuss them more in detail in the next section \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9353158949491759,
        0.9351031112660316
      ],
      "excerpt": "To either check the pre-processing pipeline outcome or simply reproduce the paper results we provided weights for all models of the benchmark experiment in files/pretrained_weights. \nPlease note that the data items in this repository utilize the git-lfs framework.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9568399482806446
      ],
      "excerpt": "Note that we provide only one set of weights for each model which corresponds to the median performance among the 10 runs reported in the manuscript. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9258473846839183
      ],
      "excerpt": "the difference between consecutive timestamps is sampled from the distribution of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9488691510108723
      ],
      "excerpt": "variableid/pharmaid is selected at random also according to the distribution in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9623777083523681,
        0.8755970472565091
      ],
      "excerpt": "gaussian with mean and standard deviation as observed in the original data. We \nthen clip the values to fit the lower and upperbound as given in the varref table. \n",
      "technique": "Supervised classification"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Get access to the HiRID 1.1.1 dataset on [physionet](https://physionet.org/content/hirid/1.1.1/). This entails\n   1. getting a [credentialed physionet account](https://physionet.org/settings/credentialing/)\n   2. [submit a usage request](https://physionet.org/request-access/hirid/1.1.1/) to the data depositor\n2. Once access is granted, download the following files\n   1. [reference_data.tar.gz](https://physionet.org/content/hirid/1.1.1/reference_data.tar.gz)\n   2. [observation_tables_parquet.tar.gz](https://physionet.org/content/hirid/1.1.1/raw_stage/observation_tables_parquet.tar.gz)\n   3. [pharma_records_parquet.tar.gz](https://physionet.org/content/hirid/1.1.1/raw_stage/pharma_records_parquet.tar.gz)\n3. unpack the files into the same directory using e.g. `cat *.tar.gz | tar zxvf - -i`\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ratschlab/HIRID-ICU-Benchmark/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 17:50:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ratschlab/HIRID-ICU-Benchmark/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ratschlab/HIRID-ICU-Benchmark",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/ratschlab/HIRID-ICU-Benchmark/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Mortality_At24Hours/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_UrineOutput_2Hours_Reg/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_UrineOutput_2Hours_Reg/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_UrineOutput_2Hours_Reg/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_UrineOutput_2Hours_Reg/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_UrineOutput_2Hours_Reg/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_UrineOutput_2Hours_Reg/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_RespFailure_12Hours/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Phenotyping_APACHEGroup/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Dynamic_CircFailure_12Hours/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Remaining_LOS_Reg/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Remaining_LOS_Reg/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Remaining_LOS_Reg/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Remaining_LOS_Reg/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Remaining_LOS_Reg/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/pretrained/Remaining_LOS_Reg/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Multiclass/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Resp/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Circ/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Regression/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Regression/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Regression/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Regression/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Regression/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/Dynamic_Regression/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/random-search/24h_Binary/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Horizon_impact/Dynamic_RespFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Horizon_impact/Dynamic_RespFailure_12Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Horizon_impact/Dynamic_CircFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Horizon_impact/Dynamic_CircFailure_12Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_RespFailure_12Hours/TCN_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_RespFailure_12Hours/LSTM_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_RespFailure_12Hours/Transformer_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_RespFailure_12Hours/GRU_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_CircFailure_12Hours/TCN_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_CircFailure_12Hours/LSTM_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_CircFailure_12Hours/Transformer_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Resolution_impact/Dynamic_CircFailure_12Hours/GRU_data_resolution.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Phenotyping/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Phenotyping/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Dynamic_RespFailure_12Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Dynamic_RespFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Dynamic_CircFailure_12Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Dynamic_CircFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Dynamic_CircFailure_12Hours/LGBM_w_feat_backup.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Mortality/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/ablations/Weighting_impact/Mortality/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Mortality_At24Hours/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_UrineOutput_2Hours_Reg/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_UrineOutput_2Hours_Reg/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_UrineOutput_2Hours_Reg/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_UrineOutput_2Hours_Reg/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_UrineOutput_2Hours_Reg/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_UrineOutput_2Hours_Reg/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_RespFailure_12Hours/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Phenotyping_APACHEGroup/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/LogisticRegression.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Dynamic_CircFailure_12Hours/GRU.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Remaining_LOS_Reg/LSTM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Remaining_LOS_Reg/LGBM.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Remaining_LOS_Reg/LGBM_w_feat.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Remaining_LOS_Reg/transformer.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Remaining_LOS_Reg/TCN.sh",
      "https://raw.githubusercontent.com/ratschlab/HIRID-ICU-Benchmark/master/run_scripts/baselines/Remaining_LOS_Reg/GRU.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In the following we assume a Linux installation, however, other platforms may also work\n\n1. Install Conda, see the [official installation instructions](https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html)\n2. clone this repository and change into the directory of the repository\n3. `conda env update` (creates an environment `icu-benchmark`)\n4. `pip install -e .`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9823428514527863,
        0.8628658428791911
      ],
      "excerpt": "To run a custom training you should, activate the conda environment using conda activate icu-benchmark. Then \nicu-benchmarks train -c [path to gin config] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9320915940700408
      ],
      "excerpt": "Task name should be one of the following: Mortality_At24Hours, Dynamic_CircFailure_12Hours, Dynamic_RespFailure_12Hours, Dynamic_UrineOutput_2Hours_Reg, Phenotyping_APACHEGroup or Remaining_LOS_Reg.\\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9292753890533855
      ],
      "excerpt": "- tensorboard/: (Optional) Directory with tensorboard logs. One can do tensorboard --logdir ./tensorboard to visualize \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9117074235153865,
        0.9023697225149864
      ],
      "excerpt": "For instance, you can run the following command to reproduce the GRU baseline on the Mortality task: \nsh run_script/baselines/Mortality_At24Hours/GRU.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.979760753323293
      ],
      "excerpt": "You need to install git-lfs on your system to be able to download and access the pretrained weights. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309401210949916
      ],
      "excerpt": "sh ./run_scripts/pretrained/[task name]/[model name].sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8164638699562684
      ],
      "excerpt": "icu-benchmarks train -c [path to gin config] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8486540428062531
      ],
      "excerpt": "this will create a new directory [path to logdir]/[task name]/[seed number]/ containing: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073240019156227
      ],
      "excerpt": "As for custom training, you will create a directory with the files mentioned above.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8726869273949558
      ],
      "excerpt": "This command will evaluate the model at [path to logdir]/[task name]/model.(torch/txt/joblib) on the test set of the dataset provided in the config. Results are saved to test_metrics.pkl file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8457202772616935
      ],
      "excerpt": "sh ./run_scripts/pretrained/[task name]/[model name].sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111896595303353
      ],
      "excerpt": "python -m icu_benchmarks.synthetic_data.generate_simple_fake_data files/dataset_stats/ files/fake_data/ --var-ref-path preprocessing/resources/varref.tsv \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ratschlab/HIRID-ICU-Benchmark/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n\\nMIT License\\n\\nCopyright (c) 2021, ETH Zurich, Biomedical Informatics Group; ratschlab\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "HiRID-ICU-Benchmark",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "HIRID-ICU-Benchmark",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ratschlab",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ratschlab/HIRID-ICU-Benchmark/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Activate the conda environment using `conda activate icu-benchmark`. Then\n\n```\nicu-benchmarks preprocess --hirid-data-root [path to unpacked parquet files as downloaded from phyiosnet] \\\n                          --work-dir [output directory] \\\n                          --var-ref-path ./preprocessing/resources/varref.tsv \\\n                          --split-path ./preprocessing/resources/split.tsv \\\n                          --nr-workers 8\n```\n\nThe above command requires about 6GB of RAM per core and in total approximately 30GB of disk space.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We provide a small toy data set to test the processing pipeline and to get a\nrough impression how to original data looks like. Since there are restrictions\naccessing the HiRID data set, instead of publishing a small subset of the\ndata, we generated a very simple simulated dataset based on some statistics aggregated from\nthe full HiRID dataset. It is however not useful for data exploration or\ntraining, as for example the values are sampled independently from each other and\nany structure between variables in the original data set is not represented.\n\nThe example data set is provided in [files/fake_data](files/fake_data). Similar as with the original data, the preprocessing pipeline can be run using\n```\nicu-benchmarks preprocess --hirid-data-root files/fake_data --work-dir fake_data_wdir --var-ref-path preprocessing/resources/varref.tsv\n```\n\nNote, that for this fake dataset some models cannot be successfully trained, as the training instances are degenerate. In case you'd\nlike to explore the training part of our pipeline, you could work with pretrained models as described above.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Thu, 23 Dec 2021 17:50:09 GMT"
    },
    "technique": "GitHub API"
  }
}