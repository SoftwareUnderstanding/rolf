{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Theano based abstractions from [Multi-Agent Actor-Critic for Mixed Cooperative-Competitive Environments](https://arxiv.org/pdf/1706.02275.pdf).\n\nSegment Tree for PER [OpenAI Baselines](https://github.com/openai/baselines/blob/master/baselines/deepq/replay_buffer.py)\n\nAttention Based Abstractions/Operations [MAC Network](https://github.com/stanfordnlp/mac-network/blob/master/ops.py)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this code please consider citing SARNet\n\n```\n@inproceedings{rangwala2020learning,\n author = {Rangwala, Murtaza and Williams, Ryan},\n booktitle = {Advances in Neural Information Processing Systems},\n pages = {10088--10098},\n title = {Learning Multi-Agent Communication through Structured Attentive Reasoning},\n url = {https://proceedings.neurips.cc/paper/2020/file/72ab54f9b8c11fae5b923d7f854ef06a-Paper.pdf},\n volume = {33},\n year = {2020}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{rangwala2020learning,\n author = {Rangwala, Murtaza and Williams, Ryan},\n booktitle = {Advances in Neural Information Processing Systems},\n pages = {10088--10098},\n title = {Learning Multi-Agent Communication through Structured Attentive Reasoning},\n url = {https://proceedings.neurips.cc/paper/2020/file/72ab54f9b8c11fae5b923d7f854ef06a-Paper.pdf},\n volume = {33},\n year = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9556053520387433
      ],
      "excerpt": "Code repository for Learning Multi-Agent Communication through Structured Attentive Reasoning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": "- Multi-Agent Particle Environemt: mpe \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503133473281189,
        0.8503133473281189
      ],
      "excerpt": "- --policy-grad maddpg for continuous action spaces \n- --policy-grad reinforce for discrete action spaces \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/caslab-vt/SARNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-23T18:28:08Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-02T14:55:35Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.90971219936379
      ],
      "excerpt": "agents are the default agents for fully-cooperative environments, i.e. good agents are only used for competing environments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8888606447557421
      ],
      "excerpt": "MAAC: --adv-critic-model MAAC or --gd-critic-model MAAC \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127,
        0.9567588029116127,
        0.9567588029116127,
        0.9567588029116127,
        0.9567588029116127,
        0.9567588029116127
      ],
      "excerpt": "- Predator-Prey with 3 vs 1: simple_tag_3 \n- Predator-Prey with 6 vs 2: simple_tag_6 \n- Predator-Prey with 12 vs 4: simple_tag_12 \n- Predator-Prey with 15 vs 5: simple_tag_15 \n- Cooperative Navigation with 3 agents: simple_spread_3 \n- Cooperative Navigation with 6 agents: simple_spread_6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "- Cooperative Navigation with 20 agents: simple_spread_20 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "For Traffic Junction - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8180219546036827
      ],
      "excerpt": "Number of cooperating agents can be specified by --num-adversaries. For environments with competing agents, the code  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code repository for SARNet: Learning Multi-Agent Communication through Structured Attentive Reasoning (NeurIPS 2020)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/caslab-vt/SARNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 21 Dec 2021 08:55:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/caslab-vt/SARNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "caslab-vt/SARNet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- To install, `cd` into the root directory and type `pip install -e .`\n\n- Known dependencies: Python (3.5.4+), OpenAI gym (0.10.5), tensorflow (1.14.0)\n\nInstall my implementation of [Multi-Agent Particle Environments (MPE)] included in this repository.\n(https://github.com/openai/multiagent-particle-envs), given in the repository\n- `cd` into multiagent-particle-envs and type `pip install -e .`\n\nInstall my implementation of [Traffic Junction] included in this repository.\n(https://github.com/IC3Net/IC3Net/tree/master/ic3net-envs), given in the repository\n- `cd` into ic3net-envs and type `python setup.py develop`\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/caslab-vt/SARNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2018, Anonymous\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Structured Attentive Reasoning Network (SARNet)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SARNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "caslab-vt",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/caslab-vt/SARNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Tue, 21 Dec 2021 08:55:29 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "reinforcement-learning",
      "gym",
      "multiagent-reinforcement-learning",
      "deep-reinforcement-learning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Cooperative Navigation with 6 SARNet Agents: `python train.py --policy-grad maddpg --env-type mpe --scenario simple_spread_6 --num_adversaries 6 --key-units 32 --value-units 32 --query-units 32 --len-traj-update 10 --td3 --PER-sampling --encoder-model LSTM --max-episode-len 100`\n\n- Traffic Junction with 6 SARNet Agents: `python train.py --env-type ic3net --scenario traffic_junction --policy-grad reinforce --num-adversaries 6 --adv-test SARNET --gpu-device 0 --exp-name SAR-TJ6-NoCurrLr --max-episode-len 20 --num-env 50 --dim 6 --add_rate_min 0.3 --add_rate_max 0.3 --curr_start 250 --curr_end 1250 --num-episodes 500000 --batch-size 500 --difficulty easy --vision 0 --batch-size 500`\n\n",
      "technique": "Header extraction"
    }
  ]
}