{
  "citation": [
    {
      "confidence": [
        0.8824264439431111
      ],
      "excerpt": "Factorization Machines Article \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jamesdvance/predicting_clicks",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-22T10:22:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-21T22:00:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.995822684364402,
        0.9708607822451127,
        0.9003547416045937,
        0.9733270317524757,
        0.9944839186595514,
        0.91140934323169,
        0.8981822159297104
      ],
      "excerpt": "Predicting clicks is hugely important to today's web. Anything personalized such as recommendations, search results or dynamic ads can be driven with a click-prediction model. Still its not a simple problem to crack. The relative quality of the model is not trivial. Over millions of impressions a company has a lot to gain from a slight improvement in their probability of click prediction. From 2016 -2021, the advances in these algorithms is substantial. This project seeks to summarize the bleeding edge of CTR prediction and how we got here. \nCTR models are typically concerned with modeling complex interactions between categorical features. An online recommender system usually consists of ranking products to recommend using customer attributes. Because of this the better a model can be at modeling the complex ways those features interact, the better its recommendations will be. An example might be an app store seeing higher lift recommending based on the interaction of timestamp and app category (e.g. food ordering apps at meal times or gaming apps after school). Modeling multiple interactions can yield even more precise results (e.g. age, timestamp, and gender when recommending gaming apps). \nProduct here refers to the mathematical product of two vectors, not the 'products' whose clicks are being predicted! \nProduct-based neural networks (PNNs) are defined as having a layer immediately after an embedding layer which uses pairwise products between embedded features. The pairwise products can either be inner products resulting in a scaler or outer products resulting in a matrix. In addition to pairwise products creating a quadratic signal, a unit of '1' is appended to the embedding layer, meaning for each pairwise node of two embeddings, there also exists a node of a single embedding and 1, which results in a linear signal. This way the layer gets the benefit for a quadratic signal, while not ignoring a linear signal from the embeddings.   \nThe logic behind using pairwise products to better learn interactions is to learn weights and biases that multiplication works as a sort of AND operator between embedding vectors while addition is like an OR operator.  \nThe embedding layer does not use a pre-trained Factorization Machine to seed the feature vector. Rather the model learns the embeddings from scratch. Additional, several fully-connected layers are added to the end of the network to complete its learning. The paper found 3 layers, including the final activation layer, were optimal. \nProduct-Based Neural Networks For User Response Prediction \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821076564337751,
        0.9937983853247657,
        0.9941476733842936
      ],
      "excerpt": "Deep Factorization machines are neither factorization machines nor Neural Factorization Machines.  \nFactorization machines are a heavy influence of Product Neural Networks (above) which were able to capture pairwise interactions between features. Deep Factorization Machines (DeepFM) work to improve on PNNs and FMs by capturing both low-order and high-order interactions of multiple variables. It also improves on Wide and Deep by not requiring any feature engineering.  \nA little background on Factorization Machines [2]. Factorization Machines are a class of non-DL machine learning algorithm that are suited for cases of high sparsity such as purchases in recommender systems or any problem dealing with large categorical variable domains. FMs can be used to predict probability to click, a user's rating for a product, and an item's rank. They are also capable of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A survey of different click-prediction datasets with various methods",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jamesdvance/predicting_clicks/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 20:48:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jamesdvance/predicting_clicks/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jamesdvance/predicting_clicks",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/jamesdvance/predicting_clicks/main/pnn.ipynb",
      "https://raw.githubusercontent.com/jamesdvance/predicting_clicks/main/.ipynb_checkpoints/pnn-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jamesdvance/predicting_clicks/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Predicting Clicks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "predicting_clicks",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jamesdvance",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jamesdvance/predicting_clicks/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 20:48:32 GMT"
    },
    "technique": "GitHub API"
  }
}