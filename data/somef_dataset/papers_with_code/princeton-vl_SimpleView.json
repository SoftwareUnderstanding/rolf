{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{goyal2021revisiting,\n  title={Revisiting Point Cloud Shape Classification with a Simple and Effective Baseline},\n  author={Goyal, Ankit and Law, Hei and Liu, Bowei and Newell, Alejandro and Deng, Jia},\n  journal={International Conference on Machine Learning},\n  year={2021}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/princeton-vl/SimpleView",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-01T10:05:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T05:06:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8067698215652298
      ],
      "excerpt": "SimpleView/models: Code for various models in PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9457452401592824
      ],
      "excerpt": "SimpleView/dataloader.py: Code for different variants of the dataloader. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9931512725107721
      ],
      "excerpt": "The code for our experiments on ScanObjectNN can be found in ScanObjectNN/SimpleView of this repo. Please refer to README.md in ScanObjectNN/SimpleView for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9550233881465015
      ],
      "excerpt": "Even with the same SEED the results could vary slightly because of the randomization introduced for faster cuDNN operations. More details could be found here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150771532802734
      ],
      "excerpt": "| Method&#8595;    |(Tab. 2, Col. 7)|(Tab. 2, Col. 6)| (Tab. 2, Col. 5)| (Tab. 2, Col. 2)   | (Tab. 4, Col. 2)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9667032467986283,
        0.9394611099894637,
        0.9330714887098298
      ],
      "excerpt": "We would like to thank the authors of the following reposities for sharing their code. \n- PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation: 1, 2 \n- PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space: 1, 2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official Code for ICML 2021 paper \"Revisiting Point Cloud Shape Classification with a Simple and Effective Baseline\"",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you are in `SimpleView`. `download.sh` script can be used for downloading all the data and the pretrained models. It also places them at the correct locations. First, use the following command to provide execute permission to the `download.sh` script. \n```\nchmod +x download.sh\n```\n\nTo download ModelNet40 execute the following command. This will download the ModelNet40 point cloud dataset released with pointnet++ as well as the validation splits used in our work.\n```\n./download.sh modelnet40\n```\n\nTo download the pretrained models, execute the following command.\n```\n./download.sh pretrained\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/princeton-vl/SimpleView/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Tue, 28 Dec 2021 13:05:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/princeton-vl/SimpleView/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "princeton-vl/SimpleView",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/princeton-vl/SimpleView/tree/master/rs_cnn/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/download.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/eval_models.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/part_seg/command.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/part_seg/command_one_hot.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/tf_ops/3d_interpolation/tf_interpolate_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/tf_ops/grouping/tf_grouping_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/tf_ops/grouping/test/compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/tf_ops/sampling/tf_sampling_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet2_tf/utils/compile_render_balls_so.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/dgcnn/tensorflow/part_seg/download_data.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/dgcnn/tensorflow/sem_seg/test_job.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/dgcnn/tensorflow/sem_seg/download_data.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/dgcnn/tensorflow/sem_seg/train_job.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet_pyt/scripts/download.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/pointnet_pyt/scripts/build.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/download.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/scripts/utils.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/scripts/test_modelnet40_on_scanobjnn.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/scripts/train_modelnet40.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/scripts/test_scanobjnn_on_modelnet40.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/scripts/train_scanobjnn.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SimpleView/scripts/test_scanobjnn.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/3DmFV-Net/utils/EMD/tf_auctionmatch_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/3DmFV-Net/utils/EMD/tf_sampling_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SpiderCNN/tf_ops/3d_interpolation/tf_interpolate_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SpiderCNN/tf_ops/grouping/tf_grouping_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SpiderCNN/tf_ops/grouping/test/compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/SpiderCNN/tf_ops/sampling/tf_sampling_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/pointnet2/tf_ops/3d_interpolation/tf_interpolate_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/pointnet2/tf_ops/grouping/tf_grouping_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/pointnet2/tf_ops/grouping/test/compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/pointnet2/tf_ops/sampling/tf_sampling_compile.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/ScanObjectNN/pointnet2/utils/compile_render_balls_so.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/rs_cnn/train_partseg.sh",
      "https://raw.githubusercontent.com/princeton-vl/SimpleView/master/rs_cnn/train_cls.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We recommend you first install [Anaconda](https://anaconda.org/) and create a virtual environment.\n```\nconda create --name simpleview python=3.7.5\n```\n\nActivate the virtual environment and install the libraries. Make sure you are in `SimpleView`.\n```\nconda activate simpleview\npip install -r requirements.txt\nconda install sed  #: for downloading data and pretrained models\n```\n\nFor PointNet++, we need to install custom CUDA modules. Make sure you have access to a GPU during this step. You might need to set the appropriate `TORCH_CUDA_ARCH_LIST` environment variable depending on your GPU model. The following command should work for most cases `export TORCH_CUDA_ARCH_LIST=\"6.0;6.1;6.2;7.0;7.5\"`. However, if the install fails, check if `TORCH_CUDA_ARCH_LIST` is correctly set. More details could be found [here](https://en.wikipedia.org/wiki/CUDA#GPUs_supported).\n```\ncd pointnet2_pyt && pip install -e . && cd ..\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9174780959764073
      ],
      "excerpt": "SimpleView/main.py: Training and testing any models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8777739399392659
      ],
      "excerpt": "To train or test any model, we use the main.py script. The format for running this script is as follows.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248779286196888
      ],
      "excerpt": "We provide pretrained models. They can be downloaded using the ./download pretrained command and are stored in the SimpleView/pretrained folder. To test a pretrained model, the command is of the following format. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/princeton-vl/SimpleView/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Cuda",
      "Shell",
      "C",
      "CMake"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Yongcheng Liu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Getting Started",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SimpleView",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "princeton-vl",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/princeton-vl/SimpleView/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code is tested on Linux OS with Python version **3.7.5**, CUDA version **10.0**, CuDNN version **7.6** and GCC version **5.4**. We recommend using these versions especially for installing [pointnet++ custom CUDA modules](https://github.com/erikwijmans/Pointnet2_PyTorch/tree/22e8cf527b696b63b66f3873d80ae5f93744bdef).\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 85,
      "date": "Tue, 28 Dec 2021 13:05:58 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "point-cloud",
      "point-cloud-processing",
      "icml-2021",
      "simpleview",
      "modelnet-dataset",
      "modelnet40",
      "sota",
      "3d-vision",
      "point-cloud-classification",
      "pointnet",
      "pointnet2",
      "dgcnn",
      "rscnn",
      "scanobjectnn"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First clone the repository. We would refer to the directory containing the code as `SimpleView`.\n\n```\ngit clone git@github.com:princeton-vl/SimpleView.git\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}