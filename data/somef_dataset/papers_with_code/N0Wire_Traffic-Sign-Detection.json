{
  "citation": [
    {
      "confidence": [
        0.9851354003651293,
        0.9507374082549614,
        0.9996123363991182
      ],
      "excerpt": "[1] Selective Search for Object Recognition \n    J. R. R. Uijlings, K. E. A. van de Sande, T. Gevers, A. W. M. Smeulders \n    International Journal of Computer Vision 2013. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490817347094297,
        0.9944484218006108
      ],
      "excerpt": "    Max Jaderberg, Karen Simonyan, Andrew Zisserman, and Koray Kavukcuoglu \n    (https://arxiv.org/pdf/1506.02025v3.pdf) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9959760363326629,
        0.9985565457736333
      ],
      "excerpt": "       Sebastian Houben and Johannes Stallkamp and Jan Salmen and Marc Schlipsing and Christian Igel, \n    International Joint Conference on Neural Networks 2013. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9695650689129703,
        0.9833028844893704,
        0.9999048329240958
      ],
      "excerpt": "[4] The German Traffic Sign Recognition Benchmark: A multi-class classification competition \n    Johannes Stallkamp and Marc Schlipsing and Jan Salmen and Christian Igel, \n    IEEE International Joint Conference on Neural Networks 2011. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/N0Wire/Traffic-Sign-Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-28T17:01:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-14T00:29:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.924535050991333,
        0.9469661257085341,
        0.8323430059988159,
        0.8664772299216892
      ],
      "excerpt": "Selective Search [1] is used for localization, a Support Vector Machine (SVM) for  \ndetermination of sign or no sign and a Spatial Transformer Network [2] combined  \nwith a classification Convolutional Neural Networ (CNN) gives classification results. \nFor training and testing purposes the GTSDB [3] and GTSRB [4] database are used. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8517470733252411,
        0.8281186117799467,
        0.9961000605284894,
        0.9331411074696665
      ],
      "excerpt": "It takes some time, but try it out! We have included pictures from Heidelberg. :) \nThis file does the final evaluation of the combined system. For the trainset of the GTSDB the bounding boxes \nof the Selective Search + SVM are loaded and fed into the CNN+STN classifier. The accuracy is calculated. \nAdditionally the result of the STN on some of the bounding boxes is plotted. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9238469550255459
      ],
      "excerpt": "The preprocessor and dataloader is tested. The plot from the project report of the preprocessor result is created. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9090415819646647,
        0.952922609997224,
        0.8619655188991918,
        0.9401001582043803
      ],
      "excerpt": "This trained classifier of our pretrained classifier can be loaded and all the evaluation plots are created \nthat can also be found in the  project report. \nThis file contains the image class, which is used internally for saving preprocessed images, the preprocessor, which performs \nhistogram stretching, resizing and calculates the Canny edge picture. Also the datasets are written that can be used for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9862853149261369,
        0.872275668704695,
        0.8932258912830439,
        0.8749779313263605
      ],
      "excerpt": "This file contains our neural network for the CNN+STN classifier with initilization functions. \nThis file contains everything which is needed to make the classifer work. It contains the train function, which trains the system, \nit contains an evaluate function to evaluate datasets, it contains a predict function to predict the classid for an image etc. \nThis file contains stuff to save and load the datastructures we use (especially the model) and scalar values for later evaluation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9585308891720321
      ],
      "excerpt": "This file contains the import_classifier function, which sets up the neural network and all other objects and loads all data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8829137459445752,
        0.9595398263782187,
        0.9857943969062604
      ],
      "excerpt": "Contains the saved models. \nContains all plots. All created plots for the classifier are saved there. \nThe saving checkpoints of the model are saved there. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8480554563311443
      ],
      "excerpt": "Calculates the Mean Best Overlap(MBO), recall and precision for collected bounding boxes of signs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9398529305501541
      ],
      "excerpt": "The full and the cropped signs are used. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8563285552326955
      ],
      "excerpt": "This script is used to evaluate the images from the GTSDB dataset. It is split \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9679278075388833,
        0.8011536818349314
      ],
      "excerpt": "This file contains our own implementation of the Selective Search algorithm from [1]. \nIt returns the bounding boxes of the region proposals. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8973804260775868
      ],
      "excerpt": "[2] Spatial Transformer Networks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "    Johannes Stallkamp and Marc Schlipsing and Jan Salmen and Christian Igel, \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/N0Wire/Traffic-Sign-Detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 18:53:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/N0Wire/Traffic-Sign-Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "N0Wire/Traffic-Sign-Detection",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8626798667210626
      ],
      "excerpt": "    (https://ivi.fnwi.uva.nl/isis/publications/2013/UijlingsIJCV2013) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8234605560560624
      ],
      "excerpt": "The function in this file will output a plot with the found bounding boxes and the name of the traffic sign. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8207188622925744,
        0.8537241398925915
      ],
      "excerpt": "random negative samples for the SVM training. \nPreprocesses training signs from the GTSRB dataset as positive training samples for the SVM. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477628268160681
      ],
      "excerpt": "Loads data generated by preprocess_GTS*B.py to train a SVM. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/N0Wire/Traffic-Sign-Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Traffic-Sign-Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Traffic-Sign-Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "N0Wire",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/N0Wire/Traffic-Sign-Detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Wed, 29 Dec 2021 18:53:33 GMT"
    },
    "technique": "GitHub API"
  }
}