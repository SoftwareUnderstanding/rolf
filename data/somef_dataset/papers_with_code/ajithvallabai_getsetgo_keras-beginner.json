{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385\n\n\n*VGG16 model*\nArchitecture speciality: Use of 3x3 convolution filters with depth of 16 weight layers\nhttps://arxiv.org/abs/1409.1556\n\n*VGG19 model*\nArchitecture speciality: Use of 3x3 convolution filters with depth of 19 weight layers\nhttps://arxiv.org/abs/1409.1556\n\n*InceptionV3 model*\nArchitecture speciality:1x1,3x3,5x5,max pooling convolutions performed with less computation cost-sparsely deep connected network-Hebbian principle(neurons that fire together wire \ntogether",
      "https://arxiv.org/abs/1409.1556\n\n*VGG19 model*\nArchitecture speciality: Use of 3x3 convolution filters with depth of 19 weight layers\nhttps://arxiv.org/abs/1409.1556\n\n*InceptionV3 model*\nArchitecture speciality:1x1,3x3,5x5,max pooling convolutions performed with less computation cost-sparsely deep connected network-Hebbian principle(neurons that fire together wire \ntogether",
      "https://arxiv.org/abs/1409.1556\n\n*InceptionV3 model*\nArchitecture speciality:1x1,3x3,5x5,max pooling convolutions performed with less computation cost-sparsely deep connected network-Hebbian principle(neurons that fire together wire \ntogether"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": " > -https://mlblr.com/  <br/>\n > -https://keras.io/ <br/>\n > -https://colab.research.google.com/ <br/>\n\n\n*codes used here are executed and tested only in colab.research.google.com \nplease make sure you have enabled GPU access from notebook settings for faster execution process*\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ajithvallabai/getsetgo_keras-beginner",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-19T02:43:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-04T05:55:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.860059181823877,
        0.8606373029533114
      ],
      "excerpt": "1.Resnet50 model <br/> \n- Classifying input image with probabilities notebook link <br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503994816348221,
        0.8606373029533114,
        0.9544035876945832,
        0.860059181823877,
        0.8606373029533114,
        0.8952437462481208,
        0.8966907343492238,
        0.860059181823877,
        0.8606373029533114,
        0.8952437462481208,
        0.8966907343492238,
        0.9407230888533996
      ],
      "excerpt": "2.VGG16 model <br/> \n- Classifying input image with probabilities notebook link  \n- Visuvalizing vgg16 model notebook link  \n3.VGG19 model <br/> \n- Classifying input image with probabilities  notebook link  \n- Extracting last layer of vgg19 and using them to predict  notebook link \n- Visuvalizing model extracted model notebook link   \n4.InceptionV3 model <br/> \n- Classifying input image with probabilities notebook link \n- Extracting last layer of vgg19 and using them to predict  notebook link \n- Visuvalizing model extracted model notebook link   \nWhat is a pretrained model? <br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8688775252367782
      ],
      "excerpt": "Use of pretrained model:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Resnet50 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503994816348221
      ],
      "excerpt": "VGG16 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877,
        0.8194697181447214
      ],
      "excerpt": "VGG19 model \nArchitecture speciality: Use of 3x3 convolution filters with depth of 19 weight layers \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "InceptionV3 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pretrained Convolutional Neural Network models(CNN) (Imagenet challange ILSVRC) are used to predict input image .Codes to extract specific layers ,fine tune and visualize those models are also provided.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ajithvallabai/getsetgo_keras-beginner/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Thu, 30 Dec 2021 00:04:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ajithvallabai/getsetgo_keras-beginner/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ajithvallabai/getsetgo_keras-beginner",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Resnet50_visualization.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Inceptionv3_imagenet_prediction.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Resnet50_imagenet_prediction.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Inceptionv3_vizualizing.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/VGG19_imagenet_extractinglayer.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/VGG19_visualization.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Inceptionv3_extractinglayer.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/VGG19_imagenet_prediction.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Vgg16_imagenet_prediction.ipynb",
      "https://raw.githubusercontent.com/ajithvallabai/getsetgo_keras-beginner/master/notebooks/Vgg16_visualization.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8261155596678104
      ],
      "excerpt": "Instead of training from scratch/starting with random weight initialiation pre-trained \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ajithvallabai/getsetgo_keras-beginner/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Using pretrained Convolutional Neural Network models(CNN) in Keras",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "getsetgo_keras-beginner",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ajithvallabai",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ajithvallabai/getsetgo_keras-beginner/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Thu, 30 Dec 2021 00:04:41 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "cnn-keras",
      "python3",
      "google-colab",
      "pretrained-models",
      "colab-notebook"
    ],
    "technique": "GitHub API"
  }
}