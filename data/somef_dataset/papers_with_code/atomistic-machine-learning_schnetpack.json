{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1809.01072",
      "https://arxiv.org/abs/1809.01072](https://arxiv.org/abs/1809.01072). (2018)\n\n\n## References\n\n* [1] K.T. Sch\u00fctt. F. Arbabzadah. S. Chmiela, K.-R. M\u00fcller, A. Tkatchenko.  \n*Quantum-chemical insights from deep tensor neural networks.*\nNature Communications **8**. 13890 (2017)   \n[10.1038/ncomms13890](http://dx.doi.org/10.1038/ncomms13890)\n\n* [2] K.T. Sch\u00fctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\u00fcller.  \n*SchNet: A continuous-filter convolutional neural network for modeling quantum interactions.*\nAdvances in Neural Information Processing Systems 30, pp. 992-1002 (2017) [link](http://papers.nips.cc/paper/6700-schnet-a-continuous-filter-convolutional-neural-network-for-modeling-quantum-interactions)\n\n* [3] K.T. Sch\u00fctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\u00fcller.  \n*SchNet - a deep learning architecture for molecules and materials.* \nThe Journal of Chemical Physics 148(24), 241722 (2018) [10.1063/1.5019779](https://doi.org/10.1063/1.5019779)\n\n* [4] M. Gastegger, L. Schwiedrzik, M. Bittermann, F. Berzsenyi, P. Marquetand.\n*wACSF\u2014Weighted atom-centered symmetry functions as descriptors in machine learning potentials.*\nThe Journal of Chemical Physics, 148(24), 241709. (2018) [10.1063/1.5019667](https://doi.org/10.1063/1.5019667)\n\n* [5] J. Behler, M. Parrinello. \n*Generalized neural-network representation of high-dimensional potential-energy surfaces.*\nPhysical Review Letters, 98(14), 146401. (2007) [10.1103/PhysRevLett.98.146401](https://doi.org/10.1103/PhysRevLett.98.146401)"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [1] K.T. Sch\u00fctt. F. Arbabzadah. S. Chmiela, K.-R. M\u00fcller, A. Tkatchenko.  \n*Quantum-chemical insights from deep tensor neural networks.*\nNature Communications **8**. 13890 (2017)   \n[10.1038/ncomms13890](http://dx.doi.org/10.1038/ncomms13890)\n\n* [2] K.T. Sch\u00fctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\u00fcller.  \n*SchNet: A continuous-filter convolutional neural network for modeling quantum interactions.*\nAdvances in Neural Information Processing Systems 30, pp. 992-1002 (2017) [link](http://papers.nips.cc/paper/6700-schnet-a-continuous-filter-convolutional-neural-network-for-modeling-quantum-interactions)\n\n* [3] K.T. Sch\u00fctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\u00fcller.  \n*SchNet - a deep learning architecture for molecules and materials.* \nThe Journal of Chemical Physics 148(24), 241722 (2018) [10.1063/1.5019779](https://doi.org/10.1063/1.5019779)\n\n* [4] M. Gastegger, L. Schwiedrzik, M. Bittermann, F. Berzsenyi, P. Marquetand.\n*wACSF\u2014Weighted atom-centered symmetry functions as descriptors in machine learning potentials.*\nThe Journal of Chemical Physics, 148(24), 241709. (2018) [10.1063/1.5019667](https://doi.org/10.1063/1.5019667)\n\n* [5] J. Behler, M. Parrinello. \n*Generalized neural-network representation of high-dimensional potential-energy surfaces.*\nPhysical Review Letters, 98(14), 146401. (2007) [10.1103/PhysRevLett.98.146401](https://doi.org/10.1103/PhysRevLett.98.146401)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9073606813822723
      ],
      "excerpt": "git clone https://github.com/atomistic-machine-learning/schnetpack.git \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/atomistic-machine-learning/schnetpack",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-03T15:44:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T10:57:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9225285542757086,
        0.9872823198868742
      ],
      "excerpt": "extensible to custom atomistic architectures. \nSchNet - an end-to-end continuous-filter CNN for molecules and materials [1-3] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9785779815312714
      ],
      "excerpt": "Note: This is the last version before a major update. In the next version, we plan to adopt Hydra and PyTorch Lightning, switch to indexing instead of masking and make the networks compatible with TorchScript. Therefore, there will be breaking changes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "SchNetPack - Deep Neural Networks for Atomistic Systems",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For the full API reference, visit our [documentation](https://schnetpack.readthedocs.io).\n\nIf you are using SchNetPack in you research, please cite:\n\nK.T. Sch\u00fctt, P. Kessel, M. Gastegger, K. Nicoli, A. Tkatchenko, K.-R. M\u00fcller.\nSchNetPack: A Deep Learning Toolbox For Atomistic Systems.\nJ. Chem. Theory Comput.\n[10.1021/acs.jctc.8b00908](http://dx.doi.org/10.1021/acs.jctc.8b00908)\n[arXiv:1809.01072](https://arxiv.org/abs/1809.01072). (2018)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/atomistic-machine-learning/schnetpack/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 130,
      "date": "Fri, 24 Dec 2021 13:56:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/atomistic-machine-learning/schnetpack/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "atomistic-machine-learning/schnetpack",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/atomistic-machine-learning/schnetpack/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/atomistic-machine-learning/schnetpack/master/docs/tutorials/tutorial_03_force_models.ipynb",
      "https://raw.githubusercontent.com/atomistic-machine-learning/schnetpack/master/docs/tutorials/tutorial_01_preparing_data.ipynb",
      "https://raw.githubusercontent.com/atomistic-machine-learning/schnetpack/master/docs/tutorials/tutorial_02_qm9.ipynb",
      "https://raw.githubusercontent.com/atomistic-machine-learning/schnetpack/master/docs/tutorials/tutorial_04_molecular_dynamics.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install .\n```\n\nYou're ready to go!\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install schnetpack\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/atomistic-machine-learning/schnetpack/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/atomistic-machine-learning/schnetpack/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'COPYRIGHT\\n\\nCopyright (c) 2018 Kristof Sch\\xc3\\xbctt, Michael Gastegger, Pan Kessel, Kim Nicoli\\n\\nAll other contributions:\\nCopyright (c) 2018, the respective contributors.\\nAll rights reserved.\\n\\nEach contributor holds copyright over their respective contributions.\\nThe project versioning (Git) records all such contribution source information.\\n\\nLICENSE\\n\\nThe MIT License\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SchNetPack - Deep Neural Networks for Atomistic Systems",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "schnetpack",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "atomistic-machine-learning",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/atomistic-machine-learning/schnetpack/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "ktschuett",
        "body": "## Note\r\nThis is the last release before a major update. In the next version, we plan to adopt Hydra and PyTorch Lightning, switch to indexing instead of masking and make the networks compatible with TorchScript. Therefore, there will be breaking changes.\r\n\r\n## New Contributors\r\n* @heytitle made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/12\r\n* @pankessel made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/14\r\n* @bartolsthoorn made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/26\r\n* @WardLT made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/38\r\n* @RoberTnf made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/40\r\n* @FarnazH made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/76\r\n* @Dom1L made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/101\r\n* @lmj1029123 made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/117\r\n* @nzhan made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/158\r\n* @jan-janssen made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/164\r\n* @dumkar made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/174\r\n* @giadefa made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/205\r\n* @zyt0y made their first contribution in https://github.com/atomistic-machine-learning/schnetpack/pull/266\r\n\r\n**Full Changelog**: https://github.com/atomistic-machine-learning/schnetpack/compare/v0.2.1...v1.0.0",
        "dateCreated": "2021-10-12T15:15:35Z",
        "datePublished": "2021-10-12T15:16:14Z",
        "html_url": "https://github.com/atomistic-machine-learning/schnetpack/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/atomistic-machine-learning/schnetpack/tarball/v1.0.0",
        "url": "https://api.github.com/repos/atomistic-machine-learning/schnetpack/releases/51219892",
        "zipball_url": "https://api.github.com/repos/atomistic-machine-learning/schnetpack/zipball/v1.0.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- ASE\n- numpy\n- PyTorch (>=1.8)\n- h5py\n- Optional: tensorboardX\n\n_**Note: We recommend using a GPU for training the neural networks.**_\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 407,
      "date": "Fri, 24 Dec 2021 13:56:40 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "neural-network",
      "quantum-chemistry",
      "condensed-matter",
      "molecular-dynamics"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The best place to start is training a SchNetPack model on a common benchmark dataset. \nThe example scripts provided by SchNetPack are inserted into your PATH during installation. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The QM9 example scripts allows to train and evaluate both SchNet and wACSF neural networks.\nThe training can be started using:\n\n```\nspk_run.py train <schnet/wacsf> qm9 <dbpath> <modeldir> --split num_train num_val [--cuda]\n```\n\nwhere num_train and num_val need to be replaced by the number of training and validation datapoints respectively.\n\nYou can choose between SchNet and wACSF networks and have to provide a path to the database file and a path to a directory which will be used to store the model. If the database path does not exist, the data is downloaded and stored there. Please note that the database path must include the file extension .db.\nWith the `--cuda` flag, you can activate GPU training.\nThe default hyper-parameters should work fine, however, you can change them through command-line arguments. \nPlease refer to the help at `spk_run.py train <schnet/wacsf> --help`. \n\nThe training progress will be logged in `<modeldir>/log`, either as CSV \n(default) or as TensorBoard event files. For the latter, TensorBoard needs to be installed to view the event files.\nThis can be done by installing the version included in TensorFlow \n\n```\npip install tensorflow\n```\n\nor the [standalone version](https://github.com/dmlc/tensorboard).\n\nTo evaluate the trained model with the best validation error, call\n\n```\nspk_run.py eval <datapath> <modeldir> --split test [--cuda]\n```\n\nwhich will run on the specified `--split` and write a result file `evaluation.txt` into the model directory.\n\n",
      "technique": "Header extraction"
    }
  ]
}