{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1912.04216",
      "https://arxiv.org/abs/1805.08318"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Kavalerov_2021_WACV,\nauthor = {Kavalerov, Ilya and Czaja, Wojciech and Chellappa, Rama},\ntitle = {A Multi-Class Hinge Loss for Conditional GANs},\nbooktitle = {Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision (WACV)},\nmonth = {January},\nyear = {2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.842790493796475
      ],
      "excerpt": "Adversarial Networks (GANs). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9860655120770058
      ],
      "excerpt": "Please cite: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": "Multi-Hinge GAN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8318824788622078
      ],
      "excerpt": "1M steps takes about 10 days on a v3-8 TPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "export REGION=\"europe-west4\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "export REGION=\"europe-west4\" \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ilyakava/gan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-19T20:17:10Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-14T05:51:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9412935150913753
      ],
      "excerpt": "This code is forked from TF-GAN. TF-GAN is a lightweight library for training and evaluating Generative \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800126952398464
      ],
      "excerpt": "This code implements cGANs with Multi-Hinge Loss from this paper, for fully and semi supervised settings. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.897165625837563,
        0.9632943541594493,
        0.8567596099993539,
        0.8924030561937636
      ],
      "excerpt": "print out eval metrics in google cloud without tensorboard and with no more than 6GB of mem required. \nThese work on both TPU and GPU, but the TPU implementation has more features. \nThis code builds off of the tf example for Self-Attention Generative Adversarial Networks. \nSee more info here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.921082868971282
      ],
      "excerpt": "Because of the design choices everything outside of the SAGAN example, including all tests not specified below, may no longer work. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8549888020074636
      ],
      "excerpt": "ACGAN with cross entropy does (best ever) IS 48.94 and FID 24.72. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8350181948515603
      ],
      "excerpt": "See Quickstart but in general: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490757362322093
      ],
      "excerpt": "For lower costs the following custom size is sufficient for a v3-8 TPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174586187831858
      ],
      "excerpt": "gcloud beta compute ssh --zone=${ZONE} ${TPU_NAME} --project=${PROJECT_NAME} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8695212665637617
      ],
      "excerpt": "Cloud tpu tensorboard crashes very often, but it does work during the 1st hour of training while there are few logfiles. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8833587712294376
      ],
      "excerpt": "Check status with: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "cGANs with Multi-Hinge Loss: tensorflow TPU and GPU implementation",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[Downloads root is here](https://drive.google.com/drive/folders/1SZeCaPrEqRYXUyhWi_BLEEpiJFdtpX1B?usp=sharing)\n\nNote: in some cases multiple checkpoints of weights are given. To control which weights are loaded edit the number in txt 'checkpoint' file in each model directory.\n\nNote: to run eval you need the original dataset.\n\n- Imagenet 128x128 SAGAN\n    - [download pretrained baseline SAGAN model here](https://drive.google.com/drive/folders/1oLBISsbAbs5G-emQ6Roix2-LOQiZEJy1?usp=sharing)\n    - step 1130000 has FID 21.9846 and IS 52.8251\n    - used in `/gan/tensorflow_gan/examples/gpu/example_genimages_imagenet128_baseline.sh`\n    - used in `/gan/tensorflow_gan/examples/gpu/example_eval_imagenet128_baseline.sh`\n- Imagenet 128x128 MHGAN\n    - [download pretrained MHGAN model here](https://drive.google.com/drive/folders/1acQL6rhSIuIzpPvymclbw6cNaee7N1Fy?usp=sharing)\n    - has FID 19.1119 and IS 60.9724\n    - used in `/gan/tensorflow_gan/examples/gpu/example_genimages_imagenet128_expt.sh`\n    - used in `/gan/tensorflow_gan/examples/gpu/example_eval_imagenet128_expt.sh`\n- Imagenet 64x64 high-fidelity-low-diversity contrast\n    - contrast the normal SAGAN model with the high-fidelity-low-diversity one at the later checkpoint\n    - [download pretrained models here](https://drive.google.com/drive/folders/1GfuPWCks08v1Ftgdd7jHL-_TRs7QxgZ-?usp=sharing)\n    - step 999999 has FID 15.482412 and IS 19.486443\n    - step 1014999 has FID 10.249778 and IS 29.656748 but very low diversity\n    - used in `/gan/tensorflow_gan/examples/gpu/example_lowdiversity_eval_imagenet64.sh`\n    - used in `/gan/tensorflow_gan/examples/gpu/example_lowdiversity_genimages_imagenet64.sh`\n- Imagenet 128x128 high-fidelity-low-diversity contrast\n    - contrast the normal SAGAN model with the high-fidelity-low-diversity one at the later checkpoint\n    - [download pretrained models here](https://drive.google.com/drive/folders/1CGjsCqhRinxB3qRf0fmpAA8fYxauOiO6?usp=sharing)\n    - step 580000 has IS 47.79 and FID 17.10\n    - step 585000 has IS 169.68 and FID 8.87 but very low diversity    \n    - used in `/gan/tensorflow_gan/examples/gpu/example_lowdiversity_genimages_imagenet128.sh`\n    - 64000 images (class is random) sampled from each of these models are [available here as tarball](https://drive.google.com/drive/folders/1OKMHYQSZCNHQBsmNCmU3xLFx-Y42NfYC?usp=sharing)\n    - [Browser viewable images here](https://drive.google.com/drive/folders/1iN7io65N7QzkiXYx079SRWr4naOCHbHU?usp=sharing) of 36 images per class from each of these models.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "[Install gsutil](https://cloud.google.com/storage/docs/gsutil_install)\n\n`gsutil cp -R ${STORAGE_BUCKET}/experiments/${EXPERIMENT_NAME}/eval_eval ./${EXPERIMENT_NAME}/`\n\nand launch tensorboard locally. Will incure high egress costs.\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ilyakava/gan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 19:52:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ilyakava/gan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ilyakava/gan",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/colab_notebooks/tfgan_tutorial.ipynb",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/colab_notebooks/tfgan_on_tpus.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ilyakava/gan/master/test_releases.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/release_pypi_package.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/pip_pkg.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/pypi_utils.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_ifid_cifar100baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/cifar_improvedgan_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_imagenet64_expt.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_ifid_cifar100.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_ifid_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_lowdiversity_eval_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/imagenet64_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/cifar_complementgan_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_eval_imagenet128_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/_base.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_lowdiversity_genimages_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/cifar_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_lowdiversity_genimages_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/ramawks84.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_genimages_imagenet128_expt.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_imagenet64_tyan.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_genimages_imagenet128_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/cifar_marygan_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/genimages_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_ifid_imagenet64_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/cifar_amgan_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_imagenet64_ramawks84.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/stl_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_cifar.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/imagenet128_ramawks69.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/example_eval_imagenet128_expt.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/eval_ifid_cifar.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/genimages_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/gpu/_eval_base.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_multiproj.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar_acbaseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/stl128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/_train_base.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_acbaseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_acbaseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar.3.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_trial3.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_ifid_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar100.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenette.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_ctdas_multiproj.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/ssl_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/_base.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/biggan128_96compare_expt.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/ssl_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_ifid_imagenet128_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/stl.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_acbaseline_noproj.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar100_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/biggan128_96compare.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_ifid_cifar100_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_ctdas_multiproj.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/genimages_imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_ifid_imagenet64_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/biggan128_baseline96_acc.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenette128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar.2.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar100_acbaseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_trial2.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar100_kp1_wgan.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_baseline_acc.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_acbaseline_trial2.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar.1.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_imagenet128_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/retry.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/biggan128_baseline96.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/stl64_og.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar100_kp1.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_baseline_96_acc.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/cifar.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/genmats_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/stl64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/eval_ifid_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/genimages_imagenet128.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/ssl_imagenet64_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet128_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/ssl_imagenet128_baseline.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_acbaseline.1.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/_eval_base.sh",
      "https://raw.githubusercontent.com/ilyakava/gan/master/tensorflow_gan/examples/tpu/imagenet64_og.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Open a python REPL and:\n\n```\n#: if you don't do this, it will crash on Imagenet\nimport resource\nlow, high = resource.getrlimit(resource.RLIMIT_NOFILE)\nresource.setrlimit(resource.RLIMIT_NOFILE, (high, high))\n\nimport tensorflow_datasets as tfds\n```\n\nThen depending on your dataset:\n\n- `ds = tfds.load('imagenet_resized/64x64', split=\"train\", data_dir=\"/mydir/data/tfdf\")`\n- `ds = tfds.load('cifar100', split=\"train\", data_dir=\"/mydir/data/tfdf\")`\n- `ds = tfds.load(\"cifar10\", split=\"train\", data_dir=\"/mydir/data/tfdf\")`\n\nFor Imagenet at 128x128, you need to manually download the data and place the compressed files in the tfdf data_dir downloads folder before running \n\n`ds = tfds.load(\"imagenet2012\", split=\"train\", data_dir=\"gs://mybucket/data\")`\n\nBe forewarned Imagenet128 takes several hours to download and over 24 hours to setup initially on a n1-standard-2 instance.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nexport TFGAN_REPO=/home/ilyak/gan\nexport PYTHONPATH=${TFGAN_REPO}/tensorflow_gan/examples:${PYTHONPATH}\nexport PYTHONPATH=${TFGAN_REPO}:${PYTHONPATH}\n\ncd gan/tensorflow_gan/examples\n\ngit pull origin dev\nsource tpu/retry.sh\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Use python3.7, tensorflow 2.1.\n\nAfter launching run:\n\n```\npip3.7 install --upgrade tensorflow_datasets --user\ngit clone --single-branch --branch dev https://github.com/ilyakavagan.git\npip3.7 install tensorflow_gan --user\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nexport TFGAN_REPO=`pwd`\nexport PYTHONPATH=${TFGAN_REPO}/tensorflow_gan/examples:${PYTHONPATH}\nexport PYTHONPATH=${TFGAN_REPO}:${PYTHONPATH}\ncd tensorflow_gan/examples\n```\n\nThen run a script in `gpu/`.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Use miniconda3, python 3.7.7, tensorflow 2.1, cuda/10.1.243, cudnn/v7.6.5. Install `venvtf2p1.yml`.\n\nIn general:\n\n\n```\npip install tensorflow_datasets\npip install tensorflow_gan\npip uninstall -y tensorflow_probability\npip install tensorflow_probability==0.7\npip install pillow\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "ctpu status --zone=$ZONE --name=${TPU_NAME} \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.80383854860453
      ],
      "excerpt": "ctpu up --zone=${ZONE} --tpu-size=\"v3-8\" --tf-version=2.1 --name=${TPU_NAME} --machine-type=n1-standard-1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8353483912448277
      ],
      "excerpt": "Use gan/tensorflow_gan/examples/print_tf_log.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "ctpu status --zone=$ZONE --name=${TPU_NAME} \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ilyakava/gan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2018 The TensorFlow GAN Authors.  All rights reserved.\\n\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2018, The TensorFlow GAN Authors.\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "cGANs with Multi-Hinge Loss: tensorflow TPU and GPU implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "gan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ilyakava",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ilyakava/gan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "See scripts in:\n- `gan/tensorflow_gan/examples/gpu/*.sh`\n- `gan/tensorflow_gan/examples/tpu/*.sh`\n\nTo replicate the baseline:\n\n- `gan/tensorflow_gan/examples/tpu/imagenet128_baseline.sh`\n\nTo replicate MHingeGAN:\n\n- `gan/tensorflow_gan/examples/tpu/imagenet128.sh`\n\nTo eval:\n\n- `gan/tensorflow_gan/examples/tpu/eval_ifid_imagenet128.sh`\n- `gan/tensorflow_gan/examples/gpu/eval_imagenet128.sh`\n- `gan/tensorflow_gan/examples/tpu/genimages_imagenet128.sh`\n\nTo run a small experiment, see for example:\n\n- `/gan/tensorflow_gan/examples/gpu/cifar_ramawks69.sh`\n- `/gan/tensorflow_gan/examples/tpu/cifar100.sh`\n\nSuch an experiment takes only an hour to get to 200k on a v3-8 TPU.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The only tests maintained are related to intra-fid calculation and some new losses:\n\n```\nCUDA_VISIBLE_DEVICES=0 python tensorflow_gan/python/eval/eval_utils_test.py\nCUDA_VISIBLE_DEVICES=0 python tensorflow_gan/python/eval/classifier_metrics_test.py\nCUDA_VISIBLE_DEVICES=0 python tensorflow_gan/python/losses/other_losses_impl_test.py\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 19:52:44 GMT"
    },
    "technique": "GitHub API"
  }
}