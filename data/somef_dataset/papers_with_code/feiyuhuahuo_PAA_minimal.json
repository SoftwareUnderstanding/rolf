{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2007.08103"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- https://github.com/kkhoot/PAA\n```\n@inproceedings{paa-eccv2020,\n  title={Probabilistic Anchor Assignment with IoU Prediction for Object Detection},\n  author={Kim, Kang and Lee, Hee Seok},\n  booktitle = {ECCV},\n  year={2020}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{paa-eccv2020,\n  title={Probabilistic Anchor Assignment with IoU Prediction for Object Detection},\n  author={Kim, Kang and Lee, Hee Seok},\n  booktitle = {ECCV},\n  year={2020}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/feiyuhuahuo/PAA_minimal",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-22T02:33:53Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-09T13:09:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.893793074705138,
        0.9750205614588957
      ],
      "excerpt": "Minimal PyTorch implementation of ECCV2020: Probabilistic Anchor Assignment with IoU Prediction for Object Detection. \nThe original project is here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8647854720436411
      ],
      "excerpt": "The result is slightly different from the original paper because of a different training batch size and the training progress itself is a little unstable.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8533606514808572
      ],
      "excerpt": "| Backbone  | Google Drive                                                                                    |Baidu Cloud                                                        | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8099610095880642
      ],
      "excerpt": ": Train by res50_1x configuration with a certain batch_size on some specific GPUs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8310207142167638
      ],
      "excerpt": ": Evaluate with a specific batch size. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8557864687032882
      ],
      "excerpt": ": Evaluate with score voting. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Minimal PyTorch implementation of ECCV2020: Probabilistic Anchor Assignment with IoU Prediction for Object Detection.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/feiyuhuahuo/PAA_minimal/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 02:37:55 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/feiyuhuahuo/PAA_minimal/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "feiyuhuahuo/PAA_minimal",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Download COCO 2017 datasets, modify the paths of training and evalution datasets in `config.py`. \n- ```\n  #: Build DCN, NMS, CUDA FocalLoss.\n  cd build_stuff\n  python setup.py build develop\n  ```\n\n- Download weights and put the weight files in `weights` folder.  \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9607998250017745,
        0.8837680365796365
      ],
      "excerpt": "1.1 <= PyTorch <= 1.4 (Version > 1.4 will cause a compilation error). \nPython >= 3.6.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8712279230539444
      ],
      "excerpt": "--score_voting, activate score voting during validation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8366648514709535
      ],
      "excerpt": ": Evaluate COCO val2017 on a specific GPU. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8394584605822506
      ],
      "excerpt": "|res101_2x  |288000 (bs=10)  |44.2 (44.3 with SV)  | res101_2x_287999.pth|password: 9hpa | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244645832971972,
        0.8174540907975313,
        0.8244645832971972
      ],
      "excerpt": "python -m torch.distributed.launch --nproc_per_node=2 train.py --train_bs=12 --cfg=res101_2x \n: Resume training. \npython -m torch.distributed.launch --nproc_per_node=2 train.py --train_bs=12 --cfg=res101_2x --resume=weight/[weight_file] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.803703929774029,
        0.8133401255328262,
        0.836609449246399
      ],
      "excerpt": "--test_bs=2, set validation batch size. \n--val_interval=6000, set validation interval during training. \n--val_num=500, set validation number during training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879600024064755
      ],
      "excerpt": "python val.py --gpu_id=0 --weight=weights/res50_1x_116000.pth \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879600024064755
      ],
      "excerpt": "python val.py --gpu_id=0 --weight=weights/res50_1x_116000.pth --test_bs=2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879600024064755
      ],
      "excerpt": "python val.py --gpu_id=0 --weight=weights/res50_1x_116000.pth --val_num=500 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879600024064755
      ],
      "excerpt": "python val.py --gpu_id=0 --weight=weights/res50_1x_116000.pth --score_voting \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879600024064755
      ],
      "excerpt": "python val.py --gpu_id=0 --weight=weights/res50_1x_116000.pth --improved_coco \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/feiyuhuahuo/PAA_minimal/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Slark\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# PAA_minimal",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PAA_minimal",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "feiyuhuahuo",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/feiyuhuahuo/PAA_minimal/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Wed, 29 Dec 2021 02:37:55 GMT"
    },
    "technique": "GitHub API"
  }
}