{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.06409.\n\nBuilding\n--------\n\nThe ROI pooling and the MS COCO loader needs to be compiled first. To do so, run make in the root directory of the project. You may need to edit *BoxEngine/ROIPooling/Makefile* if you need special linker/compiler options.\n\n*NOTE:* If you have multiple python versions on your system, and you want to use a different one than \"python\", provide an environment variable called PYTHON before calling make. For example: PYTHON=python3 make\n\nYou may get undefined symbol problems while trying to load the .so file. This will be the case if you built your TensorFlow version yourself and the Makefile fails to auto-detect your ABI version. You may encounter errors like \"tensorflow.python.framework.errors_impl.NotFoundError: BoxEngine/ROIPooling/roi_pooling.so: undefined symbol: \\_ZN10tensorflow7strings6StrCatB5cxx11ERKNS0_8AlphaNumE\" in the log. In this case clean the project (make clean"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.937325223996523
      ],
      "excerpt": "Paper is available on https://arxiv.org/abs/1605.06409. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ghamarian/rfcn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-24T20:33:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-24T23:48:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8974750666964358
      ],
      "excerpt": "NOTE: this pretrained model was not hyperparameter-optimized in any way. The model can (and will) have much better performance when optimized. Try out different learning rates and classification to regression loss balances. Optimal values are highly test dependent. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ghamarian/rfcn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 22:09:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ghamarian/rfcn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ghamarian/rfcn",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8340897985000502,
        0.9770390360179362
      ],
      "excerpt": "The ROI pooling and the MS COCO loader needs to be compiled first. To do so, run make in the root directory of the project. You may need to edit BoxEngine/ROIPooling/Makefile if you need special linker/compiler options. \nNOTE: If you have multiple python versions on your system, and you want to use a different one than \"python\", provide an environment variable called PYTHON before calling make. For example: PYTHON=python3 make \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.838532362114554,
        0.9574475949997998,
        0.988244226119546
      ],
      "excerpt": "You may want to build ROI pooling without GPU support. Use the USE_GPU=0 flag to turn off the CUDA part of the code. \nYou may want to install python dependencies by running: \npip install --user -r packages.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9779247510738917
      ],
      "excerpt": "Extract it to your project directory. Then you can run the network with the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.917075485048082
      ],
      "excerpt": "For training the network you will first need to download the MS COCO dataset. Download the needed files and extract them to a directory with the following structure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9652472391227556
      ],
      "excerpt": "Run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9086961664898343
      ],
      "excerpt": "* \\<COCO> - full path to the coco root directory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8582428430091543
      ],
      "excerpt": "The \\<savedir> will have the following structure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609906360426073
      ],
      "excerpt": "\u251c\u2500  save - TensorFlow checkpoint directory \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8956629299135966,
        0.855615606828651
      ],
      "excerpt": "You can run trained models with test.py. Model path should be given without file extension (without .data* and .index). An example: \nYou can download a pretrained model from here: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8652805990210353
      ],
      "excerpt": "./test.py -n export/model -i \\<input image> -o \\<output image> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8440778139635595
      ],
      "excerpt": "For training the network you will first need to download the MS COCO dataset. Download the needed files and extract them to a directory with the following structure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9037551349878072
      ],
      "excerpt": "./main.py -dataset \\<COCO> -name \\<savedir> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8251782031465299
      ],
      "excerpt": "\u2502    \u2514\u2500  preview.jpg - preview snapshots from training process. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8563908714713415
      ],
      "excerpt": "\u251c\u2500  save - TensorFlow checkpoint directory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8476011484325464
      ],
      "excerpt": "\u2514\u2500  args.json - saved command line arguments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9499983976897444
      ],
      "excerpt": "./main.py -name \\<savedir> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ghamarian/rfcn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "C",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TensorFlow implementation of RFCN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "rfcn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ghamarian",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ghamarian/rfcn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 22:09:16 GMT"
    },
    "technique": "GitHub API"
  }
}