{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rakeshbm/QA-using-Torch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-06T16:31:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-28T08:41:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- preprocess.py: a Python script to index the data.\n- train.lua: a Lua script to train and load the QA model.\n- interact.lua: a Lua script to load the saved model and querying user requirements.\n- model.dot: a grahical representation of the model configuration.\n- output.png: a sample output screenshot.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9765912389832043,
        0.885378728682775,
        0.9733886816336008
      ],
      "excerpt": "This is an implementation of attention based End-To-End Memory Network architecture to build a Question Answering model. \nThe reference paper is MemN2N (https://arxiv.org/pdf/1503.08895v5.pdf - Sukhbaatar, 2015). The model is GPU-enabled and supports Adjacent Weight Tying, Position Encoding, Temporal Encoding and Linear Start. \nThe data corpus used is the collection of internal policies belonging to ITC Infotech Limited Organization. The goal was to provide employees an easier information access to the organization's policies. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Query-based Information Extraction System using Deep Learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rakeshbm/QA-using-Torch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 19:01:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rakeshbm/QA-using-Torch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "rakeshbm/QA-using-Torch",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rakeshbm/QA-using-Torch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Lua",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Query-based Information Extraction System using Deep Learning",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "QA-using-Torch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "rakeshbm",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rakeshbm/QA-using-Torch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 19:01:37 GMT"
    },
    "technique": "GitHub API"
  }
}