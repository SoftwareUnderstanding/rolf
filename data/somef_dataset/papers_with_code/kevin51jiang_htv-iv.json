{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1704.07809",
      "https://arxiv.org/abs/1611.08050",
      "https://arxiv.org/abs/1602.00134",
      "https://arxiv.org/abs/1812.08008"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite these papers in your publications if it helps your research. The body-foot model and any additional functionality (calibration, 3-D reconstruction, etc.) use `[Cao et al. 2018]`; the hand and face keypoint detectors use `[Cao et al. 2018]` and `[Simon et al. 2017]` (the face detector was trained using the same procedure than for hands); and the old (deprecated) body-only model uses `[Cao et al. 2017]`.\n\n    @inproceedings{cao2018openpose,\n      author = {Zhe Cao and Gines Hidalgo and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {arXiv preprint arXiv:1812.08008},\n      title = {Open{P}ose: realtime multi-person 2{D} pose estimation using {P}art {A}ffinity {F}ields},\n      year = {2018}\n    }\n\n    @inproceedings{simon2017hand,\n      author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n      year = {2017}\n    }\n\n    @inproceedings{cao2017realtime,\n      author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2017}\n    }\n\n    @inproceedings{wei2016cpm,\n      author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Convolutional pose machines},\n      year = {2016}\n    }\n\nLinks to the papers:\n\n- [OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1812.08008)\n- [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809)\n- [Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1611.08050)\n- [Convolutional Pose Machines](https://arxiv.org/abs/1602.00134)\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{wei2016cpm,\n  author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Convolutional pose machines},\n  year = {2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cao2017realtime,\n  author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n  year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{simon2017hand,\n  author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n  year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cao2018openpose,\n  author = {Zhe Cao and Gines Hidalgo and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n  booktitle = {arXiv preprint arXiv:1812.08008},\n  title = {Open{P}ose: realtime multi-person 2{D} pose estimation using {P}art {A}ffinity {F}ields},\n  year = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8601411888489422
      ],
      "excerpt": "Single-person tracking for further speed up or visual smoothing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9078433383978455,
        0.9677640385174676
      ],
      "excerpt": "Sep 2019: Training code released! \nJan 2019: Unity plugin released! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8086054433170089
      ],
      "excerpt": "Dec 2018: Foot dataset released and new paper released! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9737478833998597
      ],
      "excerpt": "    <sup><a href=\"http://tianyizhao.com\" target=\"_blank\">Tianyi Zhao</a> and <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gines Hidalgo</a> testing their <a href=\"https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin\" target=\"_blank\">OpenPose Unity Plugin</a></sup> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kevin51jiang/htv-iv",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nBelow you will find a collection of guidelines for submitting issues as well as contributing code to the Caffe repository.\nPlease read those before starting an issue or a pull request.\nIssues\nSpecific Caffe design and development issues, bugs, and feature requests are maintained by GitHub Issues.\nPlease do not post installation, build, usage, or modeling questions, or other requests for help to Issues.\nUse the caffe-users list instead.\nThis helps developers maintain a clear, uncluttered, and efficient view of the state of Caffe.\nSee the chapter caffe-users below for guidance on posting to the users list.\nWhen reporting an issue, it's most helpful to provide the following information, where applicable:\n* How does the problem look like and what steps reproduce it?\n* Can you reproduce it using the latest master, compiled with the DEBUG make option?\n* What hardware and software are you running? In particular:\n    * GPU make and model, if relevant,\n    * operating system/distribution,\n    * compiler; please also post which version (for example, with GCC run gcc --version to check),\n    * CUDA version, if applicable (run nvcc --version to check),\n    * cuDNN version, if applicable (version number is stored in cudnn.h, look for lines containing CUDNN_MAJOR, CUDNN_MINOR and CUDNN_PATCHLEVEL),\n    * BLAS library,\n    * Python version, if relevant,\n    * MATLAB version, if relevant.\n* What have you already tried to solve the problem? How did it fail? Are there any other issues related to yours?\n* If this is not a build-related issue, does your installation pass make runtest?\n* If the bug is a crash, provide the backtrace (usually printed by Caffe; always obtainable with gdb).\n* If you are reporting a build error that seems to be due to a bug in Caffe, please attach your build configuration (either Makefile.config or CMakeCache.txt) and the output of the make (or cmake) command.\nIf only a small portion of the code/log is relevant to your issue, you may paste it directly into the post, preferably using Markdown syntax for code block: triple backtick ( ``` ) to open/close a block.\nIn other cases (multiple files, or long files), please attach them to the post - this greatly improves readability.\nIf the problem arises during a complex operation (e.g. large script using pycaffe, long network prototxt), please reduce the example to the minimal size that still causes the error.\nAlso, minimize influence of external modules, data etc. - this way it will be easier for others to understand and reproduce your issue, and eventually help you.\nSometimes you will find the root cause yourself in the process.\nTry to give your issue a title that is succinct and specific. The devs will rename issues as needed to keep track of them.\nCaffe-users\nBefore you post to the caffe-users list, make sure you look for existing solutions.\nThe Caffe community has encountered and found solutions to countless problems - benefit from the collective experience.\nRecommended places to look:\n* the users list itself,\n* caffe tag on StackOverflow,\n* GitHub issues tracker (some problems have been answered there),\n* the public wiki,\n* the official documentation.\nFound a post/issue with your exact problem, but with no answer?\nDon't just leave a \"me too\" message - provide the details of your case.\nProblems with more available information are easier to solve and attract good attention.\nWhen posting to the list, make sure you provide as much relevant information as possible - recommendations for an issue report (see above) are a good starting point.\nPlease make it very clear which version of Caffe you are using, especially if it is a fork not maintained by BVLC.\nFormatting recommendations hold: paste short logs/code fragments into the post (use fixed-width text for them), attach long logs or multiple files.\nPull Requests\nCaffe welcomes all contributions.\nSee the contributing guide for details.\nBriefly: read commit by commit, a PR should tell a clean, compelling story of one improvement to Caffe. In particular:\n\nA PR should do one clear thing that obviously improves Caffe, and nothing more. Making many smaller PRs is better than making one large PR; review effort is superlinear in the amount of code involved.\nSimilarly, each commit should be a small, atomic change representing one step in development. PRs should be made of many commits where appropriate.\nPlease do rewrite PR history to be clean rather than chronological. Within-PR bugfixes, style cleanups, reversions, etc. should be squashed and should not appear in merged PR history.\nAnything nonobvious from the code should be explained in comments, commit messages, or the PR description, as appropriate.",
    "technique": "File Exploration"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributors\nCaffe is developed by a core set of BAIR members and the open-source community.\nWe thank all of our contributors!\nFor the detailed history of contributions of a given file, try\ngit blame file\n\nto see line-by-line credits and\ngit log --follow file\n\nto see the change log even across renames and rewrites.\nPlease refer to the acknowledgements on the Caffe site for further details.\nCopyright is held by the original contributor according to the versioning history; see LICENSE.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-15T08:33:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-07T13:38:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8131713502595892
      ],
      "excerpt": "15 or 18 or 25-keypoint body/foot keypoint estimation. Running time invariant to number of detected people. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8803032892520638,
        0.829764411921952
      ],
      "excerpt": "2x21-keypoint hand keypoint estimation. Currently, running time depends on number of detected people. \n70-keypoint face keypoint estimation. Currently, running time depends on number of detected people. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.8651211561510381
      ],
      "excerpt": "Synchronization of Flir cameras handled. \nCompatible with Flir/Point Grey cameras, but provided C++ demos to add your custom input. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9258258971606813
      ],
      "excerpt": "Easy estimation of distortion, intrinsic, and extrinsic camera parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8081919631325624
      ],
      "excerpt": "Jan 2019: Improved Python API released! Including body, face, hands, and all the functionality of the C++ API! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563482207387877
      ],
      "excerpt": "For further details, check all released features and release notes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9670967175148483
      ],
      "excerpt": "    <sup>Testing the 3D Reconstruction Module of OpenPose</sup> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8529400837257711
      ],
      "excerpt": "Inference time comparison between the 3 available pose estimation libraries: OpenPose, Alpha-Pose (fast Pytorch version), and Mask R-CNN: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9260645045163415
      ],
      "excerpt": "This analysis was performed using the same images for each algorithm and a batch size of 1. Each analysis was repeated 1000 times and then averaged. This was all performed on a system with a Nvidia 1080 Ti and CUDA 8. Megvii (Face++) and MSRA GitHub repositories were excluded because they only provide pose estimation results given a cropped person. However, they suffer the same problem than Alpha-Pose and Mask R-CNN, their runtimes grow linearly with the number of people. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9186600130118575
      ],
      "excerpt": "Check the OpenPose Benchmark as well as some hints to speed up and/or reduce the memory requirements for OpenPose on doc/speed_up_openpose.md. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9472746578989021,
        0.8068207356313903,
        0.8209667310810166
      ],
      "excerpt": "For the foot dataset, check the foot dataset website and new OpenPose paper for more information. \nOur library is open source for research purposes, and we want to continuously improve it! So please, let us know if... \n... you find videos or images where OpenPose does not seems to work well. Feel free to send them to openposecmu@gmail.com (email only for failure cases!), we will use them to improve the quality of the algorithm! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8461871581041338
      ],
      "excerpt": "... you know how to speed up or improve any part of the library. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kevin51jiang/htv-iv/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 21:59:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kevin51jiang/htv-iv/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kevin51jiang/htv-iv",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/docker/gpu/Dockerfile",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/docker/cpu/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/kevin51jiang/htv-iv/tree/master/openpose/3rdparty/caffe/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/02-fine-tuning.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/pascal-multilabel-with-datalayer.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/net_surgery.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/detection.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/01-learning-lenet.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/brewing-logreg.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/00-classification.ipynb",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/siamese/mnist_siamese.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/generate_gh_pages.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/osx/install_brew.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/osx/install_deps.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_cudnn.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_openpose_JetsonTX2_JetPack3.1.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_deps.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_deps_and_cuda.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_caffe_and_openpose_JetsonTX2_JetPack3.1.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_caffe_and_openpose_JetsonTX2_JetPack3.3.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_cuda.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu/install_openpose_JetsonTX2_JetPack3.3.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu_deprecated/copy_makefile_files.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu_deprecated/install_openpose_if_cuda8.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/ubuntu_deprecated/install_caffe_and_openpose_if_cuda8.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/pose_accuracy_coco_test_dev.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/pose_time_Caffe_layers.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/drawProtoTxt.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/pose_time_visual_GUI.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/pose_accuracy_car_val.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/pose_accuracy_coco_val.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/hand_accuracy_test.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/tests/speed_test.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/defaults.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/configure_make.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/run_make.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/configure.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/configure_cmake.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/install_deps_osx.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/install_deps_ubuntu.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/scripts/travis/run_tests.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/models/getModels.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/install_caffe_if_cuda8.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/install_caffe_JetsonTX2_JetPack3.1.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/install_caffe_JetsonTX2_JetPack3.3.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/deploy_docs.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/download_model_from_gist.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/upload_model_to_gist.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/gather_examples.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/install-python-deps.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/test.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/defaults.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/setup-venv.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/configure-make.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/configure.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/install-deps.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/scripts/travis/configure-cmake.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/imagenet/create_imagenet.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/imagenet/resume_training.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/imagenet/train_caffenet.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/imagenet/make_imagenet_mean.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/cifar10/create_cifar10.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/cifar10/train_quick.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/cifar10/train_full_sigmoid.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/cifar10/train_full_sigmoid_bn.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/cifar10/train_full.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_lenet_adam.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_lenet_consolidated.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_lenet_docker.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_mnist_autoencoder_adagrad.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_lenet_rmsprop.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/create_mnist.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_mnist_autoencoder_nesterov.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_lenet.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_mnist_autoencoder.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/mnist/train_mnist_autoencoder_adadelta.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/siamese/create_mnist_siamese.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/examples/siamese/train_mnist_siamese.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/tools/extra/parse_log.sh",
      "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/openpose/3rdparty/caffe/tools/extra/launch_resize_and_crop_images.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**Windows portable version**: Simply download and use the latest version from the [Releases](https://github.com/CMU-Perceptual-Computing-Lab/openpose/releases) section.\n\nOtherwise, check [doc/installation.md](doc/installation.md) for instructions on how to build OpenPose from source.\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.888920789185811
      ],
      "excerpt": "OS: Ubuntu (14, 16), Windows (8, 10), Mac OSX, Nvidia TX2. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9525136576736464
      ],
      "excerpt": "CUDA (Nvidia GPU), OpenCL (AMD GPU), and CPU-only (no GPU) versions. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9314414163784198
      ],
      "excerpt": "Output: Basic image + keypoint display/saving (PNG, JPG, AVI, ...), keypoint saving (JSON, XML, YML, ...), and/or keypoints as array class. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185784219166022
      ],
      "excerpt": "    <img src=\"doc/media/dance_foot.gif\", width=\"360\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185784219166022
      ],
      "excerpt": "    <img src=\"doc/media/openpose3d.gif\", width=\"360\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185784219166022,
        0.8185784219166022
      ],
      "excerpt": "    <img src=\"doc/media/pose_face.gif\", width=\"360\"> \n    <img src=\"doc/media/pose_hands.gif\", width=\"360\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8473463230273421,
        0.8473463230273421,
        0.8473463230273421
      ],
      "excerpt": "    <img src=\"doc/media/unity_main.png\", width=\"240\"> \n    <img src=\"doc/media/unity_body_foot.png\", width=\"240\"> \n    <img src=\"doc/media/unity_hand_face.png\", width=\"240\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8473463230273421
      ],
      "excerpt": "    <img src=\"doc/media/openpose_vs_competition.png\", width=\"360\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606280910157142
      ],
      "excerpt": "Quick Start \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8135831848549969
      ],
      "excerpt": "Output (format, keypoint index ordering, etc.) in doc/output.md. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kevin51jiang/htv-iv/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Cuda",
      "CMake",
      "Shell",
      "JavaScript",
      "CSS",
      "HTML",
      "Batchfile",
      "HCL",
      "PowerShell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/kevin51jiang/htv-iv/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (C) 2016 Jason R Coombs &#106;&#97;&#114;&#97;&#99;&#111;&#64;&#106;&#97;&#114;&#97;&#99;&#111;&#46;&#99;&#111;&#109;\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \"Software\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\\nof the Software, and to permit persons to whom the Software is furnished to do\\nso, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Features",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "htv-iv",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kevin51jiang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kevin51jiang/htv-iv/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 21:59:06 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Most users do not need the OpenPose C++/Python API, but can simply use the OpenPose Demo:\n\n- **OpenPose Demo**: To easily process images/video/webcam and display/save the results. See [doc/demo_overview.md](doc/demo_overview.md). E.g., run OpenPose in a video with:\n```\n#: Ubuntu\n./build/examples/openpose/openpose.bin --video examples/media/video.avi\n:: Windows - Portable Demo\nbin\\OpenPoseDemo.exe --video examples\\media\\video.avi\n```\n\n- **Calibration toolbox**: To easily calibrate your cameras for 3-D OpenPose or any other stereo vision task. See [doc/modules/calibration_module.md](doc/modules/calibration_module.md).\n\n- **OpenPose C++ API**: If you want to read a specific input, and/or add your custom post-processing function, and/or implement your own display/saving, check the C++ API tutorial on [examples/tutorial_api_cpp/](examples/tutorial_api_cpp/) and [doc/library_introduction.md](doc/library_introduction.md). You can create your custom code on [examples/user_code/](examples/user_code/) and quickly compile it with CMake when compiling the whole OpenPose project. Quickly **add your custom code**: See [examples/user_code/README.md](examples/user_code/README.md) for further details.\n\n- **OpenPose Python API**: Analogously to the C++ API, find the tutorial for the Python API on [examples/tutorial_api_python/](examples/tutorial_api_python/).\n\n- **Adding an extra module**: Check [doc/library_add_new_module.md](./doc/library_add_new_module.md).\n\n- **Standalone face or hand detector**:\n    - **Face** keypoint detection **without body** keypoint detection: If you want to speed it up (but also reduce amount of detected faces), check the OpenCV-face-detector approach in [doc/standalone_face_or_hand_keypoint_detector.md](doc/standalone_face_or_hand_keypoint_detector.md).\n    - **Use your own face/hand detector**: You can use the hand and/or face keypoint detectors with your own face or hand detectors, rather than using the body detector. E.g., useful for camera views at which the hands are visible but not the body (OpenPose detector would fail). See [doc/standalone_face_or_hand_keypoint_detector.md](doc/standalone_face_or_hand_keypoint_detector.md).\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}