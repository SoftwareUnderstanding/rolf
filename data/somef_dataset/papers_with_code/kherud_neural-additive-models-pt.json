{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.13912",
      "https://arxiv.org/abs/2004.13912\n\n\n      @article{agarwal2020neural,\n        title={Neural additive models: Interpretable machine learning with neural nets",
      "https://arxiv.org/abs/2004.13912"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kherud/neural-additive-models-pt",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-02T22:13:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T08:32:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9355796765594253,
        0.8240548419245547
      ],
      "excerpt": "This is a PyTorch re-implementation for neural additive models, check out: \nNeural Additive Models: Interpretable Machine Learning with Neural Nets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation for Neural Additive Models",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kherud/neural-additive-models-pt/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 30 Dec 2021 07:45:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kherud/neural-additive-models-pt/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kherud/neural-additive-models-pt",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install nam-pt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kherud/neural-additive-models-pt/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "[Neural Additive Models (PyTorch)](https://github.com/google-research/google-research/tree/master/neural_additive_models)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "neural-additive-models-pt",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kherud",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kherud/neural-additive-models-pt/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- torch==1.7.0\n- fsspec==0.8.4\n- pandas==1.1.4\n- tqdm==4.54.0\n- sklearn==0.0\n- absl-py==0.11.0\n- gcsfs==0.7.1\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 30 Dec 2021 07:45:46 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nconda env create -f environment.yml\nconda activate nam-pt\npython run.py\n```\n\nIn Python:\n\n``` python\nfrom nam import NeuralAdditiveModel\n\nmodel = NeuralAdditiveModel(input_size=x_train.shape[-1],\n                            shallow_units=100,\n                            hidden_units=(64, 32, 32),\n                            shallow_layer=ExULayer,\n                            hidden_layer=ReLULayer,\n                            hidden_dropout=0.1,\n                            feature_dropout=0.1)\nlogits, feature_nn_outputs = model.forward(x)\n```\n\nCiting\n------\nIf you use this code in your research, please cite the following paper:\n\n> Agarwal, R., Frosst, N., Zhang, X., Caruana, R., & Hinton, G. E. (2020).\n> Neural additive models: Interpretable machine learning with neural nets.\n> arXiv preprint arXiv:2004.13912\n\n\n      @article{agarwal2020neural,\n        title={Neural additive models: Interpretable machine learning with neural nets},\n        author={Agarwal, Rishabh and Frosst, Nicholas and Zhang, Xuezhou and\n        Caruana, Rich and Hinton, Geoffrey E},\n        journal={arXiv preprint arXiv:2004.13912},\n        year={2020}\n      }\n\n---\n\n*Disclaimer about COMPAS dataset: It is important to note that\ndeveloping a machine learning model to predict pre-trial detention has a\nnumber of important ethical considerations. You can learn more about these\nissues in the Partnership on AI\n[Report on Algorithmic Risk Assessment Tools in the U.S. Criminal Justice System](https://www.partnershiponai.org/report-on-machine-learning-in-risk-assessment-tools-in-the-u-s-criminal-justice-system/).\nThe Partnership on AI is a multi-stakeholder organization -- of which Google\nis a member -- that creates guidelines around AI.*\n\n*We\u2019re using the COMPAS dataset only as an example of how to identify and\nremediate fairness concerns in data. This dataset is canonical in the\nalgorithmic fairness literature.*\n\n*Disclaimer: This is not an official Google product.*\n",
      "technique": "Header extraction"
    }
  ]
}