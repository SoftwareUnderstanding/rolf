{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* video_analyst/evaluation/vot_benchmark and other related code have been borrowed from [PySOT](https://github.com/STVIR/pysot)\n* video_analyst/evaluation/got_benchmark and other related code have been borrowed from [got-toolkit](https://github.com/got-10k/toolkit.git)\n* [detectron2](https://github.com/facebookresearch/detectron2)\n* [fvcore](https://github.com/facebookresearch/fvcore)\n* [pytracking](https://github.com/visionml/pytracking/tree/f0fc646b98166cc28c33f6b12f5169bb6f0647be)\n* [DROL](https://github.com/shallowtoil/DROL)\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.06188",
      "https://arxiv.org/abs/2003.00482"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{xu2020siamfc++,\n  title={SiamFC++: Towards Robust and Accurate Visual Tracking with Target Estimation Guidelines.},\n  author={Xu, Yinda and Wang, Zeyu and Li, Zuoxin and Yuan, Ye and Yu, Gang},\n  booktitle={AAAI},\n  pages={12549--12556},\n  year={2020}\n}\n```\n```\n@inproceedings{chen2020state,\n  title={State-Aware Tracker for Real-Time Video Object Segmentation},\n  author={Chen, Xi and Li, Zuoxin and Yuan, Ye and Yu, Gang and Shen, Jianxin and Qi, Donglian},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={9384--9393},\n  year={2020}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{chen2020state,\n  title={State-Aware Tracker for Real-Time Video Object Segmentation},\n  author={Chen, Xi and Li, Zuoxin and Yuan, Ye and Yu, Gang and Shen, Jianxin and Qi, Donglian},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={9384--9393},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{xu2020siamfc++,\n  title={SiamFC++: Towards Robust and Accurate Visual Tracking with Target Estimation Guidelines.},\n  author={Xu, Yinda and Wang, Zeyu and Li, Zuoxin and Yuan, Ye and Yu, Gang},\n  booktitle={AAAI},\n  pages={12549--12556},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9540017794037046
      ],
      "excerpt": "SiamFC++: Towards Robust and Accurate Visual Tracking with Target Estimation Guidelines [demo] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806200336678936,
        0.806200336678936
      ],
      "excerpt": "Please refer to SOT_TEST.md for detail. \nPlease refer to SOT_TRAINING.md for detail. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 pipeline  #: pipeline builder (tracking / vos) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177918124334298
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 tracker  #: tracker builder for tracking \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MegviiDetection/video_analyst",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Maintainer (sorted by family name):\n\n* Xi Chen[@XavierCHEN34](https://github.com/XavierCHEN34)\n* Zuoxin Li[@lzx1413](https://github.com/lzx1413)\n* Zeyu Wang[@JWarlock](http://github.com/JWarlock)\n* Yinda Xu[@MARMOTatZJU](https://github.com/MARMOTatZJU)\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-23T06:13:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T05:30:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.870022328632997
      ],
      "excerpt": "This is the implementation of a series of basic algorithms which is useful for video understanding, including Single Object Tracking (SOT), Video Object Segmentation (VOS), etc. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8078831458235529,
        0.8078831458235529
      ],
      "excerpt": "Please refer to SOT_TEST.md for detail. \nPlease refer to SOT_TRAINING.md for detail. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936514791930992
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 data  #: modules related to data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u2502   \u2502   \u2514\u2500\u2500 transformer  #: data augmentation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 model #: model builder \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 segmenter  #: segmenter builder for vos \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8686854746506163
      ],
      "excerpt": "SOT_MODEL_ZOO.md: description of released sot models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8686854746506163
      ],
      "excerpt": "VOS_MODEL_ZOO.md: description of released sot models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9573246167030727
      ],
      "excerpt": "DEVELOP.md: description of project design (registry, configuration tree, etc.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A series of basic algorithms that are useful for video understanding, including Single Object Tracking (SOT), Video Object Segmentation (VOS) and so on.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MegviiDetection/video_analyst/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 152,
      "date": "Wed, 22 Dec 2021 22:16:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MegviiDetection/video_analyst/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MegviiDetection/video_analyst",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/docs/ENVIRONMENT/DOCKER/video_analyst-vot/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/MegviiDetection/video_analyst/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/check_format.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/compile.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/videoanalyst/evaluation/vot_benchmark/make.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/demo/tools/osdet_demo_wt_static_image.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/demo/tools/osdet_demo_wt_got10k_image.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/test/test_VOT.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/test/test_GOT.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/test/test_LaSOT.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/test/test_OTB.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/lasot/train_test-shufflenetv2x1_0.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/lasot/train_test-alexnet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/lasot/train_test-shufflenetv2x0_5.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/lasot/train_test-googlenet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/fulldata/train_test-googlenet-fulldata.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/fulldata/dist_train_test-googlenet-fulldata.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/trackingnet/train_test-alexnet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/trackingnet/train_test-googlenet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/dist_train_test-googlenet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/dist_train_test-shufflenetv2x0_5.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/train_test-tinyconv.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/train_test-shufflenetv2x1_0.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/train_test-alexnet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/train_test-shufflenetv2x0_5.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/dist_train_test-shufflenetv2x1_0.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/dist_train_test-alexnet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/train_test-googlenet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/siamfcpp/train_test/got10k/debug/train_test-googlenet.sh",
      "https://raw.githubusercontent.com/MegviiDetection/video_analyst/master/tools/sat/test/test_DAVIS2017.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please refer to [SETUP.md](docs/TUTORIALS/SETUP.md), [SOT_SETUP.md](docs/TUTORIALS/SOT_SETUP.md)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8166923198570362
      ],
      "excerpt": "SOT_SETUP.md: instructions for setting-up \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8166923198570362
      ],
      "excerpt": "VOS_SETUP.md: instructions for setting-up \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8518390428554551
      ],
      "excerpt": "  <img src=\"docs/resources/siamfcpp_ice2.gif\" width=\"800px\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8518390428554551
      ],
      "excerpt": "  <img src=\"docs/resources/sat_runman.gif\" width=\"800px\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8621882743635256
      ],
      "excerpt": "File Tree \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8134244054013117,
        0.8142835995138061,
        0.8850461504357243,
        0.903439759413063
      ],
      "excerpt": "\u251c\u2500\u2500 experiments  #: experiment configurations, in yaml format \n\u251c\u2500\u2500 main \n\u2502   \u251c\u2500\u2500 train.py  #: trainng entry point \n\u2502   \u2514\u2500\u2500 test.py  #: test entry point \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.890931038248693
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 dataloader.py  #: data loading procedure \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.907074300291625,
        0.8906840050907322
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 trainer.py  #: train a epoch \n\u2502   \u2502   \u251c\u2500\u2500 tester.py  #: test a model on a benchmark \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8446137404220972
      ],
      "excerpt": "\u2502   \u2502   \u2514\u2500\u2500 utils  #: pipeline utils \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MegviiDetection/video_analyst/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 MegviiDetection\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Video Analyst",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "video_analyst",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MegviiDetection",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MegviiDetection/video_analyst/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 664,
      "date": "Wed, 22 Dec 2021 22:16:57 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "video",
      "sot",
      "vos",
      "segmentation"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```Bash\n#: demo with web camera\npython3 ./demo/main/video/sot_video.py --config 'experiments/siamfcpp/test/vot/siamfcpp_alexnet.yaml' --device cuda --video \"webcam\" \n\n#: demo with video file, and dump result into video file (optional)\npython3 ./demo/main/video/sot_video.py --config 'experiments/siamfcpp/test/vot/siamfcpp_alexnet.yaml' --device cuda --video $video_dir/demo.mp4 --output $dump_path/result.mp4\n\n#: demo with extracted image files, and dump result into image files (optional)\npython3 ./demo/main/video/sot_video.py --config 'experiments/siamfcpp/test/vot/siamfcpp_alexnet.yaml' --device cuda --video $video_dir/*.jpg --output $dump_dir\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}