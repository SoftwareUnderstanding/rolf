{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.05466",
      "https://arxiv.org/abs/1810.05466](https://arxiv.org/abs/1810.05466) (2018).\n\nExecute `train.py` to train a ResNet20 on CIFAR10 from scratch, with all its batch normalizations (BN) replaced with mode normalization (MN) \u2013 thereby jointly normalizing samples similar to each other with individual means and standard deviations.\n\nTo train a different architecture, run `train.py --model resnet56`. To learn on CIFAR100, pass `--dataset cifar100`. For an overview over commands use `train.py --help`.\n\nThis repository implements two modes of operation for MN, described below. \n\n#### 1. Replace all normalizations\n\nIn the default setting `--mn full`, all of the model's BNs are replaced with MN.\n\nA predefined job is located in the `jobs/full` folder. In this seeded example a ResNet56 is trained on CIFAR100, with a final test error of **28.75%**.\n\n> While the code has a `--seed` parameter in place, this does not necessarily guarantee portability across devices, c.f. this [note](https://pytorch.org/docs/stable/notes/randomness.html) on the official PyTorch website.\n\n#### 2. Replace initial BN\n\nBy setting `--mn init`, only the initial BN is replaced with MN. Early on in the network the amount of variation is arguably highest, and the runtime increase from replacing a single BN unit is tiny.\n\nIn `jobs/init` we include a trial for this alternative setup. We replaced the initial BN in a ResNet20 with MN and two modes on CIFAR10, obtaining a test error of **7.73%**.\n\n## Reference\n\n```\n@inproceedings{Deecke19,\n\tauthor       = \"Deecke, Lucas and Murray, Iain and Bilen, Hakan\",\n\ttitle        = \"Mode Normalization\",\n\tbooktitle    = \"Proceedings of the 7th International Conference on Learning Representations\",\n\tyear         = \"2019\"\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{Deecke19,\n\tauthor       = \"Deecke, Lucas and Murray, Iain and Bilen, Hakan\",\n\ttitle        = \"Mode Normalization\",\n\tbooktitle    = \"Proceedings of the 7th International Conference on Learning Representations\",\n\tyear         = \"2019\"\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Deecke19,\n    author       = \"Deecke, Lucas and Murray, Iain and Bilen, Hakan\",\n    title        = \"Mode Normalization\",\n    booktitle    = \"Proceedings of the 7th International Conference on Learning Representations\",\n    year         = \"2019\"\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9596636805383334
      ],
      "excerpt": "This repository contains code for the normalization approach described in \"Mode Normalization\", L. Deecke, I. Murray, H. Bilen,  arXiv:1810.05466 (2018). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ldeecke/mn-torch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-24T10:48:10Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-08T03:59:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Mode normalization (ICLR 2019).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ldeecke/mn-torch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 20:34:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ldeecke/mn-torch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ldeecke/mn-torch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ldeecke/mn-torch/master/jobs/full/resnet56_cifar100.sh",
      "https://raw.githubusercontent.com/ldeecke/mn-torch/master/jobs/init/resnet20_cifar10_init.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8406008828417939
      ],
      "excerpt": "Execute train.py to train a ResNet20 on CIFAR10 from scratch, with all its batch normalizations (BN) replaced with mode normalization (MN) \u2013 thereby jointly normalizing samples similar to each other with individual means and standard deviations. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ldeecke/mn-torch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Mode normalization",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mn-torch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ldeecke",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ldeecke/mn-torch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Tue, 28 Dec 2021 20:34:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "deep-learning",
      "normalization",
      "multimodality"
    ],
    "technique": "GitHub API"
  }
}