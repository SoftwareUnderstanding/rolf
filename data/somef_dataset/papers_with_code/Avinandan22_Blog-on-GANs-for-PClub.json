{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Inspired enough?\nCheck out the original research paper on GANs by Ian Goodfellow and begin rightaway!\n[Original Paper on GANs by Ian Goodfellow] (https://arxiv.org/pdf/1406.2661.pdf)\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Avinandan22/Blog-on-GANs-for-PClub",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-06T07:22:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-06T08:05:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9859661787929819,
        0.9818901140950763,
        0.9853471510396963,
        0.9629193153331174
      ],
      "excerpt": "Unlike previous deep learning fields which focus on classifying things, generative models try to produce things. Classifying an image as drawn by Monet or as a fake is easy, but creating a drawing in the Monet style is quite challenging. GANs are the solution to this challenge. Cool, isn't it? \nGANs try to achieve what they promise to do by using an adverserial process of training two networks simultaneously ,the Generator network which tries to capture the data distribution by producing stuff from absolute noise, and the Discrimnator network which tries to tell the probability that the data point came from the original distribution compared to the generator network. This turns out to be a MiniMax two player game. \nBoth the networks are multilayer perceptrons. G(z;\u03b8g) is a differentiable function such that z is sampled from random noise and  \u03b8g are the parameters we wish to learn. D(x;\u03b8d) is the second network that takes x either from the generator netowrk or the original distribution and predicts the probability of its coming from the latter to its former.  \nD is trained so as to maximise the assigning of correct labels to data from original distribution and that from G. Simultaneously G is trained to fool D. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8276223538857184
      ],
      "excerpt": "One impetus is definitely the cool applications it has. Listed below are some really amazing applications that would surely want you to explore more about GANs and want to try them out.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8391877268019432
      ],
      "excerpt": "    Heavy tasks like game generation and animation will reduce much human labour with the advent of GANs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8819907518538044
      ],
      "excerpt": "Text to Image  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9694309803366088
      ],
      "excerpt": "    An attempt to produce the probable images at differnet ages of an input image by trying to retain most of th salient features. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Avinandan22/Blog-on-GANs-for-PClub/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 15:24:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Avinandan22/Blog-on-GANs-for-PClub/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Avinandan22/Blog-on-GANs-for-PClub",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Avinandan22/Blog-on-GANs-for-PClub/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## What are GANs?",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Blog-on-GANs-for-PClub",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Avinandan22",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Avinandan22/Blog-on-GANs-for-PClub/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 15:24:02 GMT"
    },
    "technique": "GitHub API"
  }
}