{
  "citation": [
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if dilation &gt; 1: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998369197675008
      ],
      "excerpt": "    \"Deep Residual Learning for Image Recognition\" &lt;https://arxiv.org/pdf/1512.03385.pdf&gt;_ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "    if with_pool: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    #: if num_classes &gt; 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "    if dilate: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "    #: if self.with_pool: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sunlizhuang/YOLOv1-PaddlePaddle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-04T15:10:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-03T06:56:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9322821676184678
      ],
      "excerpt": "\u8fd1\u51e0\u5e74\u6765\uff0c\u76ee\u6807\u68c0\u6d4b\u7b97\u6cd5\u53d6\u5f97\u4e86\u5f88\u5927\u7684\u7a81\u7834\u3002\u6bd4\u8f83\u6d41\u884c\u7684\u7b97\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u57fa\u4e8eRegion Proposal\u7684R-CNN\u7cfb\u7b97\u6cd5\uff08R-CNN\uff0cFast R-CNN, Faster R-CNN\uff09\uff0c\u5b83\u4eec\u662ftwo-stage\u7684\uff0c\u9700\u8981\u5148\u4f7f\u7528\u542f\u53d1\u5f0f\u65b9\u6cd5\uff08selective search\uff09\u6216\u8005CNN\u7f51\u7edc\uff08RPN\uff09\u4ea7\u751fRegion Proposal\uff0c\u7136\u540e\u518d\u5728Region Proposal\u4e0a\u505a\u5206\u7c7b\u4e0e\u56de\u5f52\u3002\u800c\u53e6\u4e00\u7c7b\u662fYolo\uff0cSSD\u8fd9\u7c7bone-stage\u7b97\u6cd5\uff0c\u5176\u4ec5\u4ec5\u4f7f\u7528\u4e00\u4e2aCNN\u7f51\u7edc\u76f4\u63a5\u9884\u6d4b\u4e0d\u540c\u76ee\u6807\u7684\u7c7b\u522b\u4e0e\u4f4d\u7f6e\u3002\u7b2c\u4e00\u7c7b\u65b9\u6cd5\u662f\u51c6\u786e\u5ea6\u9ad8\u4e00\u4e9b\uff0c\u4f46\u662f\u901f\u5ea6\u6162\uff0c\u4f46\u662f\u7b2c\u4e8c\u7c7b\u7b97\u6cd5\u662f\u901f\u5ea6\u5feb\uff0c\u4f46\u662f\u51c6\u786e\u6027\u8981\u4f4e\u4e00\u4e9b\u3002\u8fd9\u53ef\u4ee5\u5728\u56fe2\u4e2d\u770b\u5230\u3002\u672c\u6587\u4ecb\u7ecd\u7684\u662fYolo\u7b97\u6cd5\uff0c\u5176\u5168\u79f0\u662fYou Only Look Once: Unified, Real-Time Object Detection\uff0c\u5176\u5b9e\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u9898\u76ee\u53d6\u5f97\u975e\u5e38\u597d\uff0c\u57fa\u672c\u4e0a\u628aYolo\u7b97\u6cd5\u7684\u7279\u70b9\u6982\u62ec\u5168\u4e86\uff1aYou Only Look Once\u8bf4\u7684\u662f\u53ea\u9700\u8981\u4e00\u6b21CNN\u8fd0\u7b97\uff0cUnified\u6307\u7684\u662f\u8fd9\u662f\u4e00\u4e2a\u7edf\u4e00\u7684\u6846\u67b6\uff0c\u63d0\u4f9bend-to-end\u7684\u9884\u6d4b\uff0c\u800cReal-Time\u4f53\u73b0\u662fYolo\u7b97\u6cd5\u901f\u5ea6\u5feb\u3002\u8fd9\u91cc\u6211\u4eec\u8c08\u7684\u662fYolo-v1\u7248\u672c\u7b97\u6cd5\uff0c\u5176\u6027\u80fd\u662f\u5dee\u4e8e\u540e\u6765\u7684SSD\u7b97\u6cd5\u7684\uff0c\u4f46\u662fYolo\u540e\u6765\u4e5f\u7ee7\u7eed\u8fdb\u884c\u6539\u8fdb\uff0c\u4ea7\u751f\u4e86Yolo9000\u7b97\u6cd5\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043338218891326,
        0.8061857574010289
      ],
      "excerpt": "        Block (BasicBlock|BottleneckBlock): block module of model. \n        depth (int): layers of resnet, default: 50. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8680038560871421
      ],
      "excerpt": "      #: Divide prediction to obj_pred, txtytwth_pred and cls_pred    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "          with paddle.no_grad(): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9765908718211957
      ],
      "excerpt": "              all_conf = paddle.nn.functional.sigmoid(conf_pred)[0]           #: 0 is because that these is only 1 batch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8143416542620154
      ],
      "excerpt": "          conf_loss, cls_loss, txtytwth_loss, total_loss = tools.loss(pred_conf=conf_pred, pred_cls=cls_pred, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8967971808184361
      ],
      "excerpt": "\u5c06\u5e73\u53f0\u6302\u8f7dVOC2007+2012\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u538b\u7f29\u5305VOCdevkit.zip\u79fb\u5230/work/datasets\u6587\u4ef6\u5939\u4e0b\uff0c\u89e3\u538b\u6570\u636e\u96c6 datasets/\u4e0b\u7684 `VOCdevkit.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9307383248562998
      ],
      "excerpt": "                        help='The upper bound of warm-up') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8253494743538556
      ],
      "excerpt": "                    help='Weight decay for SGD') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8087590850880387
      ],
      "excerpt": "                    help='Gamma update for SGD') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806113439153924
      ],
      "excerpt": "                    help='Number of workers used in dataloading') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8087590850880387
      ],
      "excerpt": "                    help='Gamma update for SGD') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\u57fa\u4e8ePaddlePaddle\u6846\u67b6\u7684YOLOv1\u590d\u73b0",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sunlizhuang/YOLOv1-PaddlePaddle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 16:11:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sunlizhuang/YOLOv1-PaddlePaddle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sunlizhuang/YOLOv1-PaddlePaddle",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8233588558014837,
        0.8233588558014837,
        0.8233588558014837
      ],
      "excerpt": "              all_conf = all_conf.numpy() \n              all_class = all_class.numpy() \n              all_bbox = all_bbox.numpy() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8872354558339971
      ],
      "excerpt": "Python3.7, opencv-python, PaddlePaddle 2.1.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8732089505944296
      ],
      "excerpt": "\u767b\u5f55AI Studio\u53ef\u5728\u7ebf\u8fd0\u884c\uff1ahttps://aistudio.baidu.com/aistudio/projectdetail/2259467 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544760947253799
      ],
      "excerpt": "    parser.add_argument('-v', '--version', default='yolo', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9186162768499533
      ],
      "excerpt": "                    help='use gpu.') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544760947253799
      ],
      "excerpt": "parser.add_argument('-v', '--version', default='yolo', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.803689668256436
      ],
      "excerpt": "                    help='use cuda.') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544760947253799
      ],
      "excerpt": "parser.add_argument('-v', '--version', default='yolo', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9186162768499533
      ],
      "excerpt": "                    help='Use gpu') \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8499361657487803
      ],
      "excerpt": "    self.scale = np.array([[[input_size[1], input_size[0], input_size[1], input_size[0]]]]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8376361932128717
      ],
      "excerpt": "        depth (int): layers of resnet, default: 50. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8838148168639296
      ],
      "excerpt": "    Examples: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150292379961057
      ],
      "excerpt": "def __init__(self, block, depth, num_classes=1000, with_pool=True): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8180399424730084
      ],
      "excerpt": "    layers = layer_cfg[depth] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "      #: test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8114944726662412
      ],
      "excerpt": "    parser.add_argument('-ms', '--multi_scale', action='store_true', default=False, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049111263940625,
        0.8394798025505024
      ],
      "excerpt": "    parser.add_argument('--batch_size', default=32, type=int,  \n                        help='Batch size for training') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049371310928791
      ],
      "excerpt": "    parser.add_argument('--wp_epoch', type=int, default=2, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049371310928791,
        0.8798960858628782,
        0.8963164390721959
      ],
      "excerpt": "    parser.add_argument('--start_epoch', type=int, default=0, \n                        help='start epoch to train') \n    parser.add_argument('-r', '--resume', default=None, type=str,help='keep training') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8297721586366898,
        0.8032361651522086
      ],
      "excerpt": "                    help='Momentum value for optim') \nparser.add_argument('--weight_decay', default=5e-4, type=float,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049371310928791
      ],
      "excerpt": "parser.add_argument('--num_workers', default=8, type=int,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309854032519439
      ],
      "excerpt": "parser.add_argument('--gpu', action='store_true', default=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8385773340782163
      ],
      "excerpt": "parser.add_argument('--save_folder', default='weights/', type=str,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515752551715031
      ],
      "excerpt": "python test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8343748588127864
      ],
      "excerpt": "parser.add_argument('-size', '--input_size', default=416, type=int, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9060083923907688
      ],
      "excerpt": "                    type=str, help='Trained state_dict file path to open') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309854032519439
      ],
      "excerpt": "parser.add_argument('--gpu', action='store_true', default=True,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8943096850060217
      ],
      "excerpt": "python eval.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8231526254797409
      ],
      "excerpt": "parser.add_argument('--trained_model', type=str, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8613687175717502,
        0.8343748588127864
      ],
      "excerpt": "                    help='Trained state_dict file path to open') \nparser.add_argument('-size', '--input_size', default=416, type=int, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309854032519439
      ],
      "excerpt": "parser.add_argument('--gpu', action='store_true', default=True, \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sunlizhuang/YOLOv1-PaddlePaddle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "\u57fa\u4e8ePaddlePaddle\u6846\u67b6\u7684YOLOv1\u590d\u73b0",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "YOLOv1-PaddlePaddle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sunlizhuang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sunlizhuang/YOLOv1-PaddlePaddle/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 21 Dec 2021 16:11:41 GMT"
    },
    "technique": "GitHub API"
  }
}