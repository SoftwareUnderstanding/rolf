{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Original CycleGAN repository: https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix\n* CycleGAN paper: https://arxiv.org/pdf/1703.10593.pdf\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.973109365481453
      ],
      "excerpt": "Testing multi-iterative CycleGAN results:<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.973109365481453
      ],
      "excerpt": "Testing multi-iterative CycleGAN results:<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-12T08:42:08Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T02:07:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9630254488044645
      ],
      "excerpt": "The input to the model is an image (image in the original domain) and the output is also an image (image in the adapted domain). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9797337164830515
      ],
      "excerpt": "Source codes for the entire project: Provided with this repository.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8117464829396227
      ],
      "excerpt": "* To train on the docker, much higher shared memory is needed. We need to recreate the docker container with higher shared memory. First delete the existing container by typing docker rm daGAN  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9268961818694118
      ],
      "excerpt": "The --shm-size flag controls the amount of shared memory allocated to the container.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8315656425092144
      ],
      "excerpt": "* Attach back into the container by typing docker attach daGAN  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Closing the domain gap between simulator generated images and real-world images using CycleGAN",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simulation environments are being widely used for training intelligent agents for different tasks like \nautonomous driving, robotic hand manipulation, robotic navigation and for many other reinforcement learning and supervised learning tasks. Even though these simulation environments expedite the training process, the domain gap between the real-world distribution and the simulated distribution is significant. \n<br>\nCycleGANs have the potential of reducing this domain gap by mapping the simulated images to real-world images. The tight constraint which the cyclic loss in CycleGANs provide ensures that the domain adapted image would keep the characteristics and structure of the original simulated image. This technique can then further be combined with noise-reduction techniques and other domain adaptation techniques to improve the results. \n<br>\nAdditionally, this repository also contains a Multi-iterative CycleGAN architecture which can be used to enhance the output produced by normal CycleGAN and also can be used to understand the behavior of the generator. (Example - In case of Summer to Winter dataset, the generator is learning to invert the colors (green to white and white to green) depending on the shade of the colors.) The multi-iterative CycleGAN present in this repository can be used with any dataset. \n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:26:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Omkar-Ranadive/Domain-Adaptation-CycleGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Omkar-Ranadive/Domain-Adaptation-CycleGAN",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/CycleGAN.ipynb",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/pix2pix.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/test_cyclegan.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/download_pix2pix_model.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/conda_deps.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/download_cyclegan_model.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/install_deps.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/test_pix2pix.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/test_single.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/test_colorization.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/train_colorization.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/train_cyclegan.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/train_pix2pix.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/scripts/eval_cityscapes/download_fcn8s.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/datasets/download_cyclegan_dataset.sh",
      "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/datasets/download_pix2pix_dataset.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<img src=\"./imgs/segRes.jpg\" height=\"294\" width=\"555\"/>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Clone the repository \n```\ngit clone https://github.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN\n```\n* Install Pytorch and torchvision by following the instructions given on their [website.](https://pytorch.org/get-started/locally/)\n* Install the remaining dependencies by going into the project directory and running the following command: \n```\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Download the docker file provided from [here. ](https://github.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/blob/master/Dockerfile) \n* Run `docker build -t omkarnu/domain-adaptation:adl .` in the directory where the Dockerfile is present. \n* Run the image by typing the following: \n```\ndocker run -it -p 8097:8097 --name daGAN -t omkarnu/domain-adaptation:adl /bin/bash\n```\n* Switch into the project directory: `cd Domain-Adaptation-CycleGAN`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Pull the pre-built docker file by running  `docker pull omkarnu/domain-adaptation:adl` \n* Run the image by typing the following: \n```\ndocker run -it -p 8097:8097 --name daGAN -t omkarnu/domain-adaptation:adl /bin/bash\n```\n* Switch into the project directory: `cd Domain-Adaptation-CycleGAN`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8473295732711499,
        0.8827727081825528
      ],
      "excerpt": "* Go into project directory cd Domain-Adaptation-CycleGAN \n* Run the training using the following command:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8266008914058072
      ],
      "excerpt": "Open a separate terminal window with the same environment activated and start the visdom server by typing python -m visdom.server. Live training process can be viewed by navigating to http://localhost:8097/.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8751843833341711
      ],
      "excerpt": "Note: The testing images for summer2winter are provided with the repository so the aforementioned command can be executed directly. However, if needed, the full summer2winter dataset can be downloaded from here. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.917532272209152
      ],
      "excerpt": "Training data: Download here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090986455766528
      ],
      "excerpt": "Docker Image: Download here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9541819344948579
      ],
      "excerpt": "python iterative_output.py --dataroot ./datasets/sim2real --name=s2r --model=test --no_dropout --carData True --iterations 1 --num_test 130 --gpu_ids -1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9311134619703794
      ],
      "excerpt": "python iterative_output.py --dataroot ./datasets/summer2winter_yosemite --name=s2w_iterative --model=test --no_dropout --iterations 3 --num_test 50 --gpu_ids -1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8438611748329435
      ],
      "excerpt": "* Download the training data from here.. Note: This data is a subset of GTA5 dataset and the Cityscapes dataset.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8345285018564524
      ],
      "excerpt": "docker run -it -p 8097:8097 --name daGAN --shm-size 16G -t omkarnu/domain-adaptation:adl /bin/bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9366628404928405
      ],
      "excerpt": "python -m visdom.server &amp; python train_sim.py --dataroot ./datasets/sim2real --name s2r --model cycle_gan --carData True --gpu_ids -1 --continue_train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9620940849603384,
        0.8685131755836041
      ],
      "excerpt": "python train_sim.py --dataroot ./datasets/sim2real --name s2r --model cycle_gan --carData True --continue_train \nNote: The pretrained models are provided with this repository, so training can be continued from that point onwards. In case you want to start training from scratch, remove the --continue_train parameter while running the train_sim.py file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9541819344948579
      ],
      "excerpt": "python iterative_output.py --dataroot ./datasets/sim2real --name=s2r --model=test --no_dropout --carData True --iterations 1 --num_test 130 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9311134619703794
      ],
      "excerpt": "python iterative_output.py --dataroot ./datasets/summer2winter_yosemite --name=s2w_iterative --model=test --no_dropout --iterations 3 --num_test 50 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9095249842956632
      ],
      "excerpt": "* Run the file seg_test.py by typing python seg_test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9250827184056599
      ],
      "excerpt": "<img src=\"./imgs/e26.jpg\" height=\"282\" width=\"566\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9250827184056599
      ],
      "excerpt": "<img src=\"./imgs/e64.jpg\" height=\"282\" width=\"566\"/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Omkar-Ranadive/Domain-Adaptation-CycleGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "HTML",
      "Python",
      "Jupyter Notebook",
      "Shell",
      "MATLAB",
      "TeX",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2017, Jun-Yan Zhu and Taesung Park\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\\n--------------------------- LICENSE FOR pix2pix --------------------------------\\nBSD License\\n\\nFor pix2pix software\\nCopyright (c) 2016, Phillip Isola and Jun-Yan Zhu\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n----------------------------- LICENSE FOR DCGAN --------------------------------\\nBSD License\\n\\nFor dcgan.torch software\\n\\nCopyright (c) 2015, Facebook, Inc. All rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\n\\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\n\\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\n\\nNeither the name Facebook nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Domain Adaptation using CycleGAN and Multi-iterative CycleGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Domain-Adaptation-CycleGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Omkar-Ranadive",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Omkar-Ranadive/Domain-Adaptation-CycleGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 15:26:50 GMT"
    },
    "technique": "GitHub API"
  }
}