{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [**Max deGroot**](https://github.com/amdegroot) for providing open-source SSD code\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1409.1556"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8926135451731163
      ],
      "excerpt": "<a href='#code-organization'>Code Organization</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "--algo_threshold 30  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999934686718875
      ],
      "excerpt": "Mali, Parag, et al. \u201cScanSSD: Scanning Single Shot Detector for Mathematical Formulas in PDF Document Images.\u201d ArXiv:2003.08005 [Cs], Mar. 2020. arXiv.org, http://arxiv.org/abs/2003.08005. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MaliParag/ScanSSD",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-19T12:33:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-19T20:57:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9205730204149583
      ],
      "excerpt": "A PyTorch implementation of ScanSSD Scanning Single Shot MultiBox Detector by Parag Mali. It was developed using SSD implementation by Max deGroot. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8024271881490016,
        0.8969865819776012
      ],
      "excerpt": "data directory also contains gtdb_new.py data reader that uses sliding windows to generates sub-images of page for training. All the scripts regarding stitching the sub-image level detections are in gtdb directory.  \nFunctions for data augmentation, visualization of bounding boxes and heatmap are in utils. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "--dataset_root ~/data/GTDB/  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Scanning Single Shot Detector for Math in Document Images",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MaliParag/ScanSSD/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 41,
      "date": "Fri, 24 Dec 2021 16:39:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MaliParag/ScanSSD/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MaliParag/ScanSSD",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you are not sure how to setup data, use [dir_struct](https://github.com/MaliParag/ScanSSD/blob/master/dir_struct) file. It has the one of the possible directory structure that you can use for setting up data for training and testing. \n\nTo generate .pmath files or .pchar files you can use [this](https://github.com/MaliParag/ScanSSD/blob/master/gtdb/split_annotations_per_page.py) script. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Install [PyTorch](http://pytorch.org/)\n- Clone this repository. Requires Python3\n- Download the dataset by following the instructions on (https://github.com/MaliParag/TFD-ICDAR2019).\n- Install [Visdom](https://github.com/facebookresearch/visdom) for real-time loss visualization during training!\n  * To use Visdom in the browser:\n  ```Shell\n  #: First install Python server and client\n  pip install visdom\n  #: Start the server (probably in a screen or tmux)\n  python -m visdom.server\n  ```\n  * Then (during training) navigate to http://localhost:8097/ (see the Train section below for training details).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8602935847217126
      ],
      "excerpt": "Developed using Cuda 9.1.85 and Pytorch 1.1.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9287467277036058
      ],
      "excerpt": "<a href='#installation'>Installation</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8085558230105739
      ],
      "excerpt": "First download the fc-reduced VGG-16 PyTorch base network weights here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8813637337101988
      ],
      "excerpt": "Run command \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9685004728391048
      ],
      "excerpt": "For instructions on Visdom usage/installation, see the <a href='#installation'>Installation</a> section. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8204456385704659
      ],
      "excerpt": "<img align=\"right\" src= \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "<a href='#training-scanssd'>Training</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9327827826800132
      ],
      "excerpt": "SSD model is built in ssd.py. Training and testing the SSD is managed in train.py and test.py. All the training code is in layers directory. Hyper-parameters for training and testing can be specified through command line and through config.py file inside data directory.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "python3 train.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "--visdom True  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "--neg_mining True  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9010185718090522,
        0.8417505268456251
      ],
      "excerpt": "You can pick-up training from a checkpoint by specifying the path as one of the training parameters (again, see train.py for options) \nFor quick testing, pre-trained weights are available here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9521174821235511
      ],
      "excerpt": "python3 test.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8030282699377912
      ],
      "excerpt": "You can specify the parameters listed in the eval.py file by flagging them or manually changing them. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 <Workspace>/ssd/gtdb/stitch_patches_pdf.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "--postprocess True  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8640914411334293
      ],
      "excerpt": "math_dir is output dir generated by test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8393475436530102
      ],
      "excerpt": "| IOU75 | 77.38 % | 69.01% | 72.96% | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MaliParag/ScanSSD/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Max deGroot, Ellis Brown\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ScanSSD: Scanning Single Shot Detector for Math in Document Images",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ScanSSD",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MaliParag",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MaliParag/ScanSSD/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "MaliParag",
        "body": "",
        "dateCreated": "2020-04-07T01:16:24Z",
        "datePublished": "2020-06-15T00:34:01Z",
        "html_url": "https://github.com/MaliParag/ScanSSD/releases/tag/v0.1-alpha",
        "name": "ScanSSD",
        "tag_name": "v0.1-alpha",
        "tarball_url": "https://api.github.com/repos/MaliParag/ScanSSD/tarball/v0.1-alpha",
        "url": "https://api.github.com/repos/MaliParag/ScanSSD/releases/27538366",
        "zipball_url": "https://api.github.com/repos/MaliParag/ScanSSD/zipball/v0.1-alpha"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 81,
      "date": "Fri, 24 Dec 2021 16:39:26 GMT"
    },
    "technique": "GitHub API"
  }
}