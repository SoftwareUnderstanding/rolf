{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.00028\n\n**Data set**\n\nThe dataset is in pickle form, one can open it by\n\n```\nreal_mask = pickle.load( open( \"mask_data.pkl\", \"rb\" "
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9633938539680127
      ],
      "excerpt": "Original paper is https://arxiv.org/abs/1704.00028 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "real_mask = pickle.load( open( \"mask_data.pkl\", \"rb\" ) ) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bigmao8576/WGAN-GP-Tensorflow2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-09T18:42:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-05T08:19:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.939166505444752
      ],
      "excerpt": "This repo is offering a perfect example for implementing WAGN-GP using Tensorflow 2.0. The code should be compatible with tf 2.2.0 or future versions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9853099521027773
      ],
      "excerpt": "This data is a set of masks, which would be used for language model or signal model with different lengths. Say, if we hope to generate the signals with variant length, we can train a gan for generating the mask first. The values of the mask are either '0' or '1' in float32 form. The maximum length is 8192 (2^13). Some examples are shown as follows \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.948021678662916
      ],
      "excerpt": "The dimension of the latent vector is 1000. Considering the mask is a 1d vector, we can just use two dense layers. The activation function of the first one is leaky_relu, and the second one is sigmoid, since the output is either 1 or 0.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046296999949394
      ],
      "excerpt": "Just three dense layers. The activation functions of the first two layers are leaky_relu. Some online documents used sigmoid as the last layer activation for critic, but we found unstability during trainning ('nan' values). So no activation function is used for the last layer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9815700945090868,
        0.8981583163158492
      ],
      "excerpt": "For generater, the optimizer is Adam, while RMSprop for critic. \nA flag function was used for iteratively examining the generated data, once these data meet some criterion, the training stops. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9947611334989565
      ],
      "excerpt": "The easist way to examine diversity is to plot the histogram of the lengths of masks (summation of '1's). The length distributions of real data(1600+) and fake data(512) are shown as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Wasserstein GAN (WGAN) with gradient penalty Tensorflow 2 implementation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bigmao8576/WGAN-GP-Tensorflow2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 22 Dec 2021 21:05:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bigmao8576/WGAN-GP-Tensorflow2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bigmao8576/WGAN-GP-Tensorflow2",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bigmao8576/WGAN-GP-Tensorflow2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Wasserstein GAN (WGAN) with gradient penalty (WGAN-GP) Tensorflow 2 implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "WGAN-GP-Tensorflow2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bigmao8576",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bigmao8576/WGAN-GP-Tensorflow2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Wed, 22 Dec 2021 21:05:16 GMT"
    },
    "technique": "GitHub API"
  }
}