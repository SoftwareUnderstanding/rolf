{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1705.02894"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "````bibtex\n@inproceedings{Goodfellow2014,\n    title = {Generative Adversarial Nets},\n    author = {Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},\n    booktitle = {Advances in Neural Information Processing Systems},\n    volume = {27},\n    year = {2014}\n}\n````\n\n````bibtex\n@inproceedings{Arjovsky2017,\n    title={Wasserstein generative adversarial networks},\n    author={Arjovsky, Martin and Chintala, Soumith and Bottou, L{\\'e}on},\n    booktitle={International conference on machine learning},\n    pages={214--223},\n    year={2017},\n    organization={PMLR}\n}\n````\n\n````bibtex\n@inproceedings{Gulrajani2017,\n    title={Improved training of wasserstein GANs},\n    author={Gulrajani, Ishaan and Ahmed, Faruk and Arjovsky, Martin and Dumoulin, Vincent and Courville, Aaron},\n    booktitle={Proceedings of the 31st International Conference on Neural Information Processing Systems},\n    pages={5769--5779},\n    year={2017}\n}\n````\n\n````bibtex\n@article{Lim2017,\n    title={Geometric gan},\n    author={Lim, Jae Hyun and Ye, Jong Chul},\n    journal={arXiv preprint arXiv:1705.02894},\n    year={2017}\n}\n````\n\n````bibtex\n@inproceedings{Mao2017,\n    title={Least squares generative adversarial networks},\n    author={Mao, Xudong and Li, Qing and Xie, Haoran and Lau, Raymond YK and Wang, Zhen and Paul Smolley, Stephen},\n    booktitle={Proceedings of the IEEE international conference on computer vision},\n    pages={2794--2802},\n    year={2017}\n}\n````\n\n````bibtex\n@inproceedings{Sinha2020,\n    title = {Top-k Training of GANs: Improving GAN Performance by Throwing Away Bad Samples},\n    author = {Sinha, Samarth and Zhao, Zhengli and ALIAS PARTH GOYAL, Anirudh Goyal and Raffel, Colin A and Odena, Augustus},\n    booktitle = {Advances in Neural Information Processing Systems},\n    volume = {33},\n    year = {2020}\n}\n````\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Sinha2020,\n    title = {Top-k Training of GANs: Improving GAN Performance by Throwing Away Bad Samples},\n    author = {Sinha, Samarth and Zhao, Zhengli and ALIAS PARTH GOYAL, Anirudh Goyal and Raffel, Colin A and Odena, Augustus},\n    booktitle = {Advances in Neural Information Processing Systems},\n    volume = {33},\n    year = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Mao2017,\n    title={Least squares generative adversarial networks},\n    author={Mao, Xudong and Li, Qing and Xie, Haoran and Lau, Raymond YK and Wang, Zhen and Paul Smolley, Stephen},\n    booktitle={Proceedings of the IEEE international conference on computer vision},\n    pages={2794--2802},\n    year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{Lim2017,\n    title={Geometric gan},\n    author={Lim, Jae Hyun and Ye, Jong Chul},\n    journal={arXiv preprint arXiv:1705.02894},\n    year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Gulrajani2017,\n    title={Improved training of wasserstein GANs},\n    author={Gulrajani, Ishaan and Ahmed, Faruk and Arjovsky, Martin and Dumoulin, Vincent and Courville, Aaron},\n    booktitle={Proceedings of the 31st International Conference on Neural Information Processing Systems},\n    pages={5769--5779},\n    year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Arjovsky2017,\n    title={Wasserstein generative adversarial networks},\n    author={Arjovsky, Martin and Chintala, Soumith and Bottou, L{\\'e}on},\n    booktitle={International conference on machine learning},\n    pages={214--223},\n    year={2017},\n    organization={PMLR}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Goodfellow2014,\n    title = {Generative Adversarial Nets},\n    author = {Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},\n    booktitle = {Advances in Neural Information Processing Systems},\n    volume = {27},\n    year = {2014}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ChristophReich1996/Mode_Collapse",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-30T02:33:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-07T04:50:57Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Mode collapse example of GANs in 2D (PyTorch).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ChristophReich1996/Mode_Collapse/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 16:43:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ChristophReich1996/Mode_Collapse/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ChristophReich1996/Mode_Collapse",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To install all necessary dependencies simply run:\n\n````shell script\npip install -r requirements.txt\n````\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ChristophReich1996/Mode_Collapse/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Christoph Reich\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Mode Collapse Example",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Mode_Collapse",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ChristophReich1996",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ChristophReich1996/Mode_Collapse/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To reproduces the achieved results run the [`main.py`](main.py) script with the corresponding arguments.\n\n|Argument | Default value | Info |\n| --- | :---: | --- |\n|`--device` | 'cuda' | Set device to be utilized (cuda or cpu) |\n|`--epochs` | 500 | Training epochs to be performed |\n|`--plot_frequency` | 10 | Frequency of epochs to produce plots |\n|`--lr` | 0.0001 | Learning rate to be applied |\n|`--latent_size` | 32 | Size of latent vector to be utilized |\n|`--samples` | 10000 | Number of samples from the real distribution |\n|`--batch_size` | 500 | Batch size to be utilized |\n|`--loss` | 'standard' | GAN loss function to be used (standard, non-saturating, hinge, wasserstein, wasserstein-gp or least-squares) |\n|`--spectral_norm` | False | If set spectral norm is utilized |\n|`--topk` | False | If set top-k training is utilized after 0.5 of the epochs to be performed |\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Fri, 24 Dec 2021 16:43:40 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gan",
      "mode-collapse",
      "generative-adversarial-network",
      "wasserstein-gan",
      "least-squares-gan",
      "geometric-gan",
      "non-saturating-gan-loss",
      "plot",
      "2d",
      "visualization"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository showcases the mode collapse problem of GANs for different loss functions on a 2D toy example distribution.\n\n<table>\n  <tr>\n    <td> Standard GAN loss </td>\n    <td> Non-saturating GAN loss </td>\n    <td> Non-saturating GAN loss + top-k </td>\n    <td> Hinge GAN loss </td>\n  </tr> \n  <tr>\n    <td> <img src=\"/plots/standard.gif\"  alt=\"1\" width = 200px height = 150px ></td>\n    <td><img src=\"/plots/non-saturating.gif\" alt=\"2\" width = 200px height = 150px></td>\n    <td> <img src=\"/plots/non-saturating_top_k.gif\"  alt=\"3\" width = 200px height = 150px ></td>\n    <td><img src=\"/plots/hinge.gif\" alt=\"4\" width = 200px height = 150px></td>\n  </tr> \n  <tr>\n    <td> Wasserstein GAN loss + spec. norm </td>\n    <td> Wasserstein GAN loss + GP </td>\n    <td> Wasserstein GAN loss GP + top-k </td>\n    <td> Least squares GAN loss </td>\n  </tr> \n  <tr>\n    <td> <img src=\"/plots/wasserstein.gif\"  alt=\"5\" width = 200px height = 150px ></td>\n    <td><img src=\"/plots/wasserstein-gp.gif\" alt=\"6\" width = 200px height = 150px></td>\n    <td> <img src=\"/plots/wasserstein-gp_top_k.gif\"  alt=\"7\" width = 200px height = 150px ></td>\n    <td><img src=\"/plots/least-squares.gif\" alt=\"8\" width = 200px height = 150px></td>\n  </td>\n  </tr>\n</table>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To reproduces the achieved results run the [`main.py`](main.py) script with the corresponding arguments.\n\n|Argument | Default value | Info |\n| --- | :---: | --- |\n|`--device` | 'cuda' | Set device to be utilized (cuda or cpu) |\n|`--epochs` | 500 | Training epochs to be performed |\n|`--plot_frequency` | 10 | Frequency of epochs to produce plots |\n|`--lr` | 0.0001 | Learning rate to be applied |\n|`--latent_size` | 32 | Size of latent vector to be utilized |\n|`--samples` | 10000 | Number of samples from the real distribution |\n|`--batch_size` | 500 | Batch size to be utilized |\n|`--loss` | 'standard' | GAN loss function to be used (standard, non-saturating, hinge, wasserstein, wasserstein-gp or least-squares) |\n|`--spectral_norm` | False | If set spectral norm is utilized |\n|`--topk` | False | If set top-k training is utilized after 0.5 of the epochs to be performed |\n\n",
      "technique": "Header extraction"
    }
  ]
}