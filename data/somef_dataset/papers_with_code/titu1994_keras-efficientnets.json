{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.11946",
      "https://arxiv.org/abs/1905.11946.\n```"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n[1] Mingxing Tan and Quoc V. Le. EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. ICML 2019. Arxiv link: https://arxiv.org/abs/1905.11946.\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9515897314631402
      ],
      "excerpt": "results = optimize_coefficients(phi=1., max_cost=2.0, search_per_coeff=10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8772692606136239
      ],
      "excerpt": "print(\"Num unique configs = \", len(results)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9927449287321329
      ],
      "excerpt": "results = optimize_coefficients(phi=1., max_cost=2.0, search_per_coeff=10, tol=1e-10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8772692606136239
      ],
      "excerpt": "print(\"Num unique configs = \", len(results)) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/titu1994/keras-efficientnets",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-02T02:20:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-18T03:08:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9699574435119254,
        0.9179137836052081,
        0.979748778235039,
        0.9952611275597514
      ],
      "excerpt": "Keras implementation of EfficientNets from the paper EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. \nContains code to build the EfficientNets B0-B7 from the paper, and includes weights for configurations B0-B5. B6 and B7 weights will be ported when made available from the Tensorflow repository. \nSupports building any other configuration model of efficient nets as well, other than the B0-B7 variants. \nThe core idea about Efficient Nets is the use of compound scaling - using a weighted scale of three inter-connected hyper parameters of the model - Resolution of the input, Depth of the Network and Width of the Network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116828110430569
      ],
      "excerpt": "<img src=\"https://latex.codecogs.com/png.latex?\\inline&space;\\dpi{300}&space;\\bg_white&space;\\begin{align*}&space;depth:&&space;d&space;=&space;\\alpha&space;^&space;\\phi&space;\\\\&space;width:&&space;w&space;=&space;\\beta&space;^&space;\\phi&space;\\\\&space;resolution:&&space;r&space;=&space;\\gamma&space;^&space;\\phi&space;\\end{align*}\" title=\"\\begin{align*} depth:& d = \\alpha ^ \\phi \\\\ width:& w = \\beta ^ \\phi \\\\ resolution:& r = \\gamma ^ \\phi \\end{align*}\" height=25% width=25%/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9628460435356109
      ],
      "excerpt": "When phi, the compound coefficient, is initially set to 1, we get the base configuration - in this case EfficientNetB0. We then use this configuration in a grid search to find the coefficients alpha, beta and gamma which optimize the following objective under the constraint: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9087704958472196
      ],
      "excerpt": "<img src=\"https://latex.codecogs.com/png.latex?\\inline&space;\\dpi{300}&space;\\begin{align*}&space;\\alpha&space;\\cdot&space;\\beta&space;^&space;2&space;\\cdot&space;\\gamma&space;^&space;2&space;&\\approx&space;2&space;\\\\&space;\\alpha&space;\\ge&space;1,&space;\\beta&space;\\ge&space;&1,&space;\\gamma&space;\\ge&space;1&space;\\end{align*}\" title=\"\\begin{align*} \\alpha \\cdot \\beta ^ 2 \\cdot \\gamma ^ 2 &\\approx 2 \\\\ \\alpha \\ge 1, \\beta \\ge &1, \\gamma \\ge 1 \\end{align*}\" height=25% width=25%/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9912254940522405,
        0.9587070367049239
      ],
      "excerpt": "Once these coefficients for alpha, beta and gamma are found, then simply scale phi, the compound coeffieints by different amounts to get a family of models with more capacity and possibly better performance. \nIn doing so, and using Neural Architecture Search to get the base configuration as well as great coefficients for the above, the paper generates EfficientNets, which outperform much larger and much deeper models while using less resources during both training and evaluation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8210850859845812,
        0.9004020240463091,
        0.9391969912624799
      ],
      "excerpt": "the set of hyper parameters that closely satisfy the cost function (here, MSE between the value and max cost permissible). \nAn example is shown below which uses the default parameters from the paper. The user can change the number of coefficients \nas well as the cost function itself in order to get different values of the compound coefficients. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8950108828528472,
        0.9437166111205774
      ],
      "excerpt": "Increase the number of search scopes using search_per_coeff to some larger int value. You could also combine this \nwith tol to compute a vast set of coefficients, and then select only those that have a cost value lower than the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Keras Implementation of EfficientNets",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/titu1994/keras-efficientnets/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 65,
      "date": "Fri, 24 Dec 2021 12:38:00 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/titu1994/keras-efficientnets/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "titu1994/keras-efficientnets",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.999746712887969
      ],
      "excerpt": "$ pip install keras_efficientnets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9984079357284334
      ],
      "excerpt": "pip install git+https://github.com/titu1994/keras-efficientnets.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9893272198983933,
        0.9906248903846466,
        0.999746712887969
      ],
      "excerpt": "git clone https://github.com/titu1994/keras-efficientnets.git \ncd keras-efficientnets \npip install . \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8801854956928516,
        0.8801854956928516
      ],
      "excerpt": "from keras_efficientnets.optimize import optimize_coefficients \nfrom keras_efficientnets.optimize import get_compound_coeff_func \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9062949388959629,
        0.9040952627234907,
        0.8580712101130682
      ],
      "excerpt": "print(\"Num unique configs = \", len(results)) \nfor i in range(10):  #: print just the first 10 results out of 1000 results \n    print(i + 1, results[i], \"Cost :\", cost_func(results[i])) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516,
        0.8801854956928516
      ],
      "excerpt": "from keras_efficientnets.optimize import optimize_coefficients \nfrom keras_efficientnets.optimize import get_compound_coeff_func \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9062949388959629,
        0.9028362629552478,
        0.8580712101130682
      ],
      "excerpt": "print(\"Num unique configs = \", len(results)) \nfor i in range(10):  #: print just the first 10 results out of 125 results \n    print(i + 1, results[i], \"Cost :\", cost_func(results[i])) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/titu1994/keras-efficientnets/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Somshubra Majumdar\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientNets in Keras",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "keras-efficientnets",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "titu1994",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/titu1994/keras-efficientnets/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n\r\n- Support for Tensorflow 2.0",
        "dateCreated": "2019-10-09T03:29:00Z",
        "datePublished": "2019-10-09T04:09:04Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.7",
        "name": "EfficientNet v0.1.7",
        "tag_name": "v0.1.7",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.7",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/20566983",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.7"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n## Bugfixes\r\n - Removes a redundant buggy reshape in the `optimize_coefficients` function which might break if using user-defined cost functions.",
        "dateCreated": "2019-07-11T04:19:26Z",
        "datePublished": "2019-07-11T04:23:02Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.6.1",
        "name": "EfficientNet v0.1.6.1",
        "tag_name": "v0.1.6.1",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.6.1",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/18541948",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.6.1"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n## Improvements\r\n- Addition of the `optimize` module which includes functions to compute valid candidates of hyperparameters, either via the function given in the paper or via a user-defined cost function.\r\n\r\n",
        "dateCreated": "2019-07-11T04:00:36Z",
        "datePublished": "2019-07-11T04:21:55Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.6",
        "name": "EfficientNet v0.1.6",
        "tag_name": "v0.1.6",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.6",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/18541934",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.6"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n## Improvements\r\n - Testing of models to ensure that they are built properly, load weights and make reasonable predictions.\r\n\r\n## Bugfixes\r\n - Major bug where only a single EfficientNet model could be built (and subsequent models would throw shape mismatch errors in Add()) is now fixed. \r\n",
        "dateCreated": "2019-06-28T23:13:08Z",
        "datePublished": "2019-06-28T23:28:48Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.5",
        "name": "EfficientNet v0.1.5",
        "tag_name": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.5",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/18305865",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.5"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n## New Weights\r\n\r\n - Weights for the B4 and B5 models are now available, and have been ported.\r\n - The code for the models have been updated to default load those weights.",
        "dateCreated": "2019-06-19T02:56:04Z",
        "datePublished": "2019-06-19T03:00:47Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.4",
        "name": "EfficientNet v0.1.4",
        "tag_name": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.4",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/18080458",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.4"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n## Bugfix\r\n\r\n - Fix weight loading issues due to incorrect parameter parsing in `round_filters(...)`",
        "dateCreated": "2019-06-05T01:22:21Z",
        "datePublished": "2019-06-05T01:29:01Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.3",
        "name": "EfficientNet v0.1.3",
        "tag_name": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.3",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/17785907",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.3"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Changelog\r\n## Bugfixes\r\n - Fixed the incorrect DropConnect implementation.\r\n - Fixed preprocess_input function due to backend not being supplied.",
        "dateCreated": "2019-06-04T03:01:29Z",
        "datePublished": "2019-06-04T03:05:21Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.2",
        "name": "EfficientNet v0.1.2",
        "tag_name": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.2",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/17759294",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.2"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "Initial release",
        "dateCreated": "2019-06-02T16:15:38Z",
        "datePublished": "2019-06-02T16:19:55Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1.0",
        "name": "EfficientNet v0.1.0",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1.0",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/17729250",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1.0"
      },
      {
        "authorType": "User",
        "author_name": "titu1994",
        "body": "# Imagenet Weights\r\n\r\nWeights for following model configurations:\r\n - EfficientNetB0\r\n - EfficientNetB1\r\n - EfficientNetB2\r\n - EfficientNetB3\r\n - EfficientNetB4\r\n - EfficientNetB5\r\n\r\nWeights for B6-B7 will be ported once available from the [Tensorflow repository](https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet)",
        "dateCreated": "2019-06-02T02:19:39Z",
        "datePublished": "2019-06-02T02:24:40Z",
        "html_url": "https://github.com/titu1994/keras-efficientnets/releases/tag/v0.1",
        "name": "EfficientNets ImageNet Weights",
        "tag_name": "v0.1",
        "tarball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/tarball/v0.1",
        "url": "https://api.github.com/repos/titu1994/keras-efficientnets/releases/17725548",
        "zipball_url": "https://api.github.com/repos/titu1994/keras-efficientnets/zipball/v0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Tensorflow 1.13+ (CPU or GPU version must be installed *before* installation of this library)\n- Keras 2.2.4+\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 191,
      "date": "Fri, 24 Dec 2021 12:38:00 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simply import `keras_efficientnets` and call either the model builder `EfficientNet` or the pre-built versions `EfficientNetBX` where `X` ranger from 0 to 7.\n\n```python\nfrom keras_efficientnets import EfficientNetB0\n\nmodel = EfficientNetB0(input_size, classes=1000, include_top=True, weights='imagenet')\n```\n\nTo construct custom EfficientNets, use the `EfficientNet` builder. The `EfficientNet` builder code requires a list of `BlockArgs`\nas input to define the structure of each block in model. A default set of `BlockArgs` are provided in `keras_efficientnets.config`.\n\n```python\nfrom keras_efficientnets import EfficientNet, BlockArgs\n\nblock_args_list = [\n    #: First number is `input_channels`, second is `output_channels`.\n    BlockArgs(32, 16, kernel_size=3, strides=(1, 1), num_repeat=1, se_ratio=0.25, expand_ratio=1),\n    BlockArgs(16, 24, kernel_size=3, strides=(2, 2), num_repeat=2, se_ratio=0.25, expand_ratio=6),\n    ...\n]\n\nmodel = EfficientNet(input_shape, block_args_list, ...)\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}