{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "TODO the reference information\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/Discover304/SinGlow/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Discover304/SinGlow",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "@Discover304: singlow training and development\n@?",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-07T09:44:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-07T03:37:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9704184567974429,
        0.9776252823565368,
        0.9709315066969011,
        0.9758293521526559
      ],
      "excerpt": "See more in the paper: SinGlow: Singing Voice Synthesis with Glow ---- Help Virtual Singers More Human-like \nSinGlow is a part of my Singing voice synthesis system. It can extract features of sound, particularly songs and musics. Then we can use these features (or perfect encoding) for feature migrating tasks. For example migrate features of real singers' song to those virtual singers' songs. \nThis project is developed above the project GLOW-tf2 under MIT licence, and the following words are from its developers. \nMy implementation of GLOW from the paper https://arxiv.org/pdf/1807.03039 in Tensorflow 2. GLOW is an interesting generative model as it uses invertible neural network to transform images to normal distribution and vice versa. Additionally, it is strongly based on RealNVP, so knowing it would be helpful to understand GLOW's contribution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9836581537404797,
        0.9908599855610181,
        0.950839196261924
      ],
      "excerpt": "Singing voice synthesis (SVS) is a task using the computer to generate songs with lyrics. So far, researchers are focusing on tunning the pre-recorded sound pieces according to rigid rules. For example, in Vocaloid, one of the commercial SVS systems, there are 8 principal parameters modifiable by song creators. The system uses these parameters to synthesise sound pieces pre-recorded from professional voice actors. We notice a common difference between computer-generated songs and real singers' songs. This difference can be addressed to help the generated ones become more like the real-singer ones.  \nIn this paper, we propose SinGlow, as a solution to minimise this difference. SinGlow is one of the Normalising Flow that directly uses the calculated Negative Log-Likelihood value to optimise the trainable parameters. This feature gives SinGlow the ability to perfectly encode inputs into feature vectors, which allows us to manipulate the feature space to minimise the difference we discussed before. To our best knowledge, we are the first to propose an application of Normalising Flow in SVS fields.  \nIn our experiments, SinGlow shows the ability to encode sound and make the input virtual-singer songs more human-like. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9072170482070846,
        0.8314882688963432
      ],
      "excerpt": "There are also some sampling of the network (image generation mode) that are going to be stored in results directory. Additionally, TensorBoard is used to track z's mean and variance, as well as the negative log-likelihood.  \nIn optimal state, z should have zero mean and one variance. Additionally, the TensorBoard stores sampling with temperature of 0.7. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9201718360635598,
        0.9309712636632201,
        0.8052949539847851,
        0.9181371878687146
      ],
      "excerpt": "To contribute to the project, these steps can be followed. Anyone that contributes will surely be recognized and mentioned here! \nContributions to the project are made using the \"Fork & Pull\" model. The typical steps would be: \ncreate an account on github \nfork this repository \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.891163296740692
      ],
      "excerpt": "(go to your fork's webpage and click on \"Pull Request.\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "SinGlow is a part of my Singing voice synthesis system. It can extract features of sound, particularly songs and musics. Then we can use these features (or perfect encoding) for feature migrating tasks. For example migrate features of real singers' song to those virtual singers' songs.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Discover304/SinGlow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 12:12:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Discover304/SinGlow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Discover304/SinGlow",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Discover304/SinGlow/master/notebooks/run.ipynb",
      "https://raw.githubusercontent.com/Discover304/SinGlow/master/notebooks/experiment.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9127905597054865,
        0.8705391537609293
      ],
      "excerpt": "make a local clone \nmake changes on the local copy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8827405864753333
      ],
      "excerpt": "push to your GitHub account: git push origin \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9296314086179155
      ],
      "excerpt": "You can then add a message to describe your proposal.) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8292897153407979,
        0.8117928303459995,
        0.8457886186580807
      ],
      "excerpt": "\u2502   common_definitions.py //model configurations are located here \n\u2502   data_loarder.py //construct tfrecord dataset from wav or mp3 data, and load it \n\u2502   model.py //Glow Model / SinGlow Model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9454001575990145,
        0.8879105375732793
      ],
      "excerpt": "\u2502       utils.py //originate from Glow-OpenAI \n\u2502       weightnorm.py //originate from Tensorflow \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150949912405066
      ],
      "excerpt": "python3 train.py [-h] [--dataset [DATASET]] [--k_glow [K_GLOW]] [--l_glow [L_GLOW]] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8228074100029767
      ],
      "excerpt": "  --dataset [DATASET]   The dataset to train on (\"mnist\", \"cifar10\", \"cifar100\") \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Discover304/SinGlow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2020 Samuel Matthew Koesnadi\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SinGlow: Generative Flow for SVS tasks in Tensorflow 2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SinGlow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Discover304",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Discover304/SinGlow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`pip3 install -r requirements.txt`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sun, 26 Dec 2021 12:12:02 GMT"
    },
    "technique": "GitHub API"
  }
}