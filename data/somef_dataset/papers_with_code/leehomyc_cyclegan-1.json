{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leehomyc/cyclegan-1",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-07-18T16:13:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-23T03:11:22Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code contains two versions of the network architectures and hyper-parameters. The first one is based on the [TensorFlow implementation](https://github.com/hardikbansal/CycleGAN). The second one is based on the [official PyTorch implementation](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix). The differences are minor and we observed both versions produced good results. You may need to train several times as the quality of the results are sensitive to the initialization.  \n\nBelow is a snapshot of our result at the 50th epoch on one training instance:\n\n<img src='imgs/horse2zebra.png' width=\"900px\"/>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8913866701832389
      ],
      "excerpt": "[update 9/26/2017] We observed faster convergence and better performance after adding skip connection between input and output in the generator. To turn the feature on, use switch --skip=True. This is the result of turning on skip after training for 23 epochs: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9793477358411846,
        0.9449677463605686
      ],
      "excerpt": "This is the TensorFlow implementation for CycleGAN. The code was written by Harry Yang and Nathan Silberman. \nCycleGAN: [Project] [Paper] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow implementation of CycleGANs",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leehomyc/cyclegan-1/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 114,
      "date": "Sun, 26 Dec 2021 13:26:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/leehomyc/cyclegan-1/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "leehomyc/cyclegan-1",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/leehomyc/cyclegan-1/master/download_datasets.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* You can either download one of the defaults CycleGAN datasets or use your own dataset. \n\t* Download a CycleGAN dataset (e.g. horse2zebra):\n\t```bash\n\tbash ./download_datasets.sh horse2zebra\n\t```\n\t* Use your own dataset: put images from each domain at folder_a and folder_b respectively. \n\n* Create the csv file as input to the data loader. \n\t* Edit the cyclegan_datasets.py file. For example, if you have a face2ramen_train dataset which contains 800 face images and 1000 ramen images both in PNG format, you can just edit the cyclegan_datasets.py as following:\n\t```python\n\tDATASET_TO_SIZES = {\n    'face2ramen_train': 1000\n\t}\n\n\tPATH_TO_CSV = {\n    'face2ramen_train': './CycleGAN/input/face2ramen/face2ramen_train.csv'\n\t}\n\n\tDATASET_TO_IMAGETYPE = {\n    'face2ramen_train': '.png'\n\t}\n\n\t``` \n\t* Run create_cyclegan_dataset.py:\n\t```bash\n\tpython -m CycleGAN_TensorFlow.create_cyclegan_dataset --image_path_a=folder_a --image_path_b=folder_b --dataset_name=\"horse2zebra_train\" --do_shuffle=0\n\t```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "python -m CycleGAN_TensorFlow.create_cyclegan_dataset --image_path_a=folder_a --image_path_b=folder_b --dataset_name=\"horse2zebra_test\" --do_shuffle=0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9154330685897901
      ],
      "excerpt": "<img src='imgs/skip_result.jpg' width=\"900px\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8255841276231665,
        0.8407651001510851
      ],
      "excerpt": "Create the configuration file. The configuration file contains basic information for training/testing. An example of the configuration file could be fond at configs/exp_01.json.  \nStart training: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8410994372961152
      ],
      "excerpt": "python -m CycleGAN_TensorFlow.main \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "    --log_dir=CycleGAN_TensorFlow/output/cyclegan/exp_01 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8410994372961152
      ],
      "excerpt": "python -m CycleGAN_TensorFlow.main \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "    --log_dir=CycleGAN_TensorFlow/output/cyclegan/exp_01 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863,
        0.8094502420640322,
        0.8737168320372917,
        0.8758165763268217
      ],
      "excerpt": "    --checkpoint_dir=CycleGAN_TensorFlow/output/cyclegan/exp_01/#:timestamp#: \nCreate the testing dataset. \nEdit the cyclegan_datasets.py file the same way as training. \nCreate the csv file as the input to the data loader.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8450031123434668
      ],
      "excerpt": "Run testing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8410994372961152
      ],
      "excerpt": "python -m CycleGAN_TensorFlow.main \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "    --log_dir=CycleGAN_TensorFlow/output/cyclegan/exp_01 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "    --checkpoint_dir=CycleGAN_TensorFlow/output/cyclegan/exp_01/#:old_timestamp#: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/leehomyc/cyclegan-1/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Harry Yang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CycleGAN in TensorFlow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cyclegan-1",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "leehomyc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leehomyc/cyclegan-1/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 226,
      "date": "Sun, 26 Dec 2021 13:26:09 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "generative-adversarial-network",
      "tensorflow",
      "gan"
    ],
    "technique": "GitHub API"
  }
}