{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1505.05770"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9865746777900657
      ],
      "excerpt": "Keras implementation of the two normalizing flows introduced by Rezende/Mohamed 2016 (https://arxiv.org/abs/1505.05770). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PhilippeNguyen/keras_normalizing_flows",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-07T02:19:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-06T13:04:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9621341409701473
      ],
      "excerpt": "This was mostly instructional for me, I quickly found tensorflow_probability is much better suited for this kind of thing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9227233266933573
      ],
      "excerpt": "Two of the scripts (planar_logprob.py and radial_logprob.py) are showing the transformation using 1 flow. Of course, these are cooked simple examples, to get more complex distributions, you'll need flow stacks and more complex transformations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9464644941930189
      ],
      "excerpt": "Last script shows a stack of flows, transforming the usual isotropic gaussian latent into something more complex before sending it along to a non-flow NN decoder. Generally, in more sophisticated applications, the decoder is represented as a flow too. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Simple keras implementation of planar and radial flows",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PhilippeNguyen/keras_normalizing_flows/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 19:01:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PhilippeNguyen/keras_normalizing_flows/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "PhilippeNguyen/keras_normalizing_flows",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PhilippeNguyen/keras_normalizing_flows/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "keras_normalizing_flows",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "keras_normalizing_flows",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "PhilippeNguyen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PhilippeNguyen/keras_normalizing_flows/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Only keras is really needed to use the layers.\n\nHowever, tensorflow (tensorflow_probability), matplotlib and numpy as required for the scripts\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 19:01:30 GMT"
    },
    "technique": "GitHub API"
  }
}