{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1607.04606",
      "https://arxiv.org/abs/1607.01759",
      "https://arxiv.org/abs/1612.03651",
      "https://arxiv.org/abs/1607.04606",
      "https://arxiv.org/abs/1607.01759",
      "https://arxiv.org/abs/1612.03651"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "(From fastText's [references](https://github.com/facebookresearch/fastText#references))\n\nPlease cite [1](#enriching-word-vectors-with-subword-information) if using this code for learning word representations or [2](#bag-of-tricks-for-efficient-text-classification) if using for text classification.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{joulin2016fasttext,\n  title={FastText.zip: Compressing text classification models},\n  author={Joulin, Armand and Grave, Edouard and Bojanowski, Piotr and Douze, Matthijs and J{\\'e}gou, H{\\'e}rve and Mikolov, Tomas},\n  journal={arXiv preprint arXiv:1612.03651},\n  year={2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{joulin2016bag,\n  title={Bag of Tricks for Efficient Text Classification},\n  author={Joulin, Armand and Grave, Edouard and Bojanowski, Piotr and Mikolov, Tomas},\n  journal={arXiv preprint arXiv:1607.01759},\n  year={2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{bojanowski2016enriching,\n  title={Enriching Word Vectors with Subword Information},\n  author={Bojanowski, Piotr and Grave, Edouard and Joulin, Armand and Mikolov, Tomas},\n  journal={arXiv preprint arXiv:1607.04606},\n  year={2016}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/luckyPT/jvm-ml",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-05-12T08:29:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-24T02:20:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8965799723048201
      ],
      "excerpt": "[2] A. Joulin, E. Grave, P. Bojanowski, T. Mikolov, Bag of Tricks for Efficient Text Classification \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "machine learning implement by scala and java",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/luckyPT/jvm-ml/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 03:23:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/luckyPT/jvm-ml/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "luckyPT/jvm-ml",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8514016617147449
      ],
      "excerpt": "[3] A. Joulin, E. Grave, P. Bojanowski, M. Douze, H. J\u00e9gou, T. Mikolov, FastText.zip: Compressing text classification models \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/luckyPT/jvm-ml/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Scala",
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "\u7b80\u4ecb",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "jvm-ml",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "luckyPT",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/luckyPT/jvm-ml/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 03:23:36 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [\u903b\u8f91\u56de\u5f52](/src/main/java/com/pt/ml/algorithm/LogisticRegression.scala)\n\n- [\u6700\u5927\u71b5\u6a21\u578b\u53ca\u81ea\u5b9a\u4e49\u5b9e\u73b0](/src/main/java/com/pt/ml/algorithm/MaxEntropy.java)\n\n- [\u51b3\u7b56\u6811\u5206\u7c7b\u53ca\u8c03\u4f18\u603b\u7ed3(CART\u6811)](/src/main/java/com/pt/ml/algorithm/DecisionTree.scala)\n\n- [spark GBDT\u7b97\u6cd5](/src/main/java/com/pt/ml/algorithm/GradientBoostTree.scala)\n\n- [spark \u968f\u673a\u68ee\u6797\u7b97\u6cd5](/src/main/java/com/pt/ml/algorithm/RandomForest.scala)\n\n- [\u7ebf\u6027\u652f\u6491\u5411\u91cf\u673a](/src/main/java/com/pt/ml/algorithm/SurportVectorMerchine.scala)\n\n- [xgboost for scala](/src/main/java/com/pt/ml/algorithm/Xgboost4jScala.scala)\n\n- [xgboost for spark](/src/main/java/com/pt/ml/algorithm/Xgboost4jSpark.scala)\n\n- [LDA \u805a\u7c7b](/src/main/java/com/pt/ml/algorithm/LdaCluster.scala)\n\n- [spark\u751f\u6210tfRecord\u6587\u4ef6\u4ee5\u53capython\u8bfb\u53d6\u7684demo](/src/main/java/com/pt/ml/generate/tfrecord/GenerateTfrecordBySpark.scala)\n\n- [\u4e8c\u5206\u7c7b\u7684ROC\u66f2\u7ebf\u3001PR\u66f2\u7ebf\u3001\u9608\u503c\u4e0ePR\u66f2\u7ebf\u3001\u9608\u503cF1\u66f2\u7ebf\u7ed8\u5236](/src/main/java/com/pt/ml/util/BinaryClassEvaluation.scala)\n\n- [\u591a\u5206\u7c7b\u8bc4\u4f30\u6307\u6807\u8ba1\u7b97,\u7cbe\u786e\u5ea6\u3001\u52a0\u6743\u51c6\u786e\u7387\u53ec\u56de\u7387\u3001F1\u503c\u3001\u5404\u7c7b\u522b\u7684\u51c6\u786e\u7387-\u53ec\u56de\u7387-F1\u503c](/src/main/java/com/pt/ml/util/MultiClassEvaluation.scala)\n\n- [Ansj\u5206\u8bcd](/src/main/java/com/pt/ml/process/AnsjSegmenterUtil.java)\n\n- [JieBa\u5206\u8bcd](/src/main/java/com/pt/ml/process/JiebaSegmenterUtil.java)\n\n- [\u81ea\u5b9a\u4e49\u7b80\u6613\u5206\u8bcd](/src/main/java/com/pt/ml/process/CustomSegmenter.java)\n\n- [\u6570\u636e\u6807\u51c6\u5316\u4e0e\u5f52\u4e00\u5316](/src/main/java/com/pt/ml/process/Scaler.scala)\n\n- [TF-IDF\u8ba1\u7b97](/src/main/java/com/pt/ml/process/TfIdf.scala)\n\n- [\u751f\u6210\u8bcd\u5411\u91cf](/src/main/java/com/pt/ml/process/WordToVector.scala)\n\n- [\u8fde\u7eed\u7279\u5f81\u79bb\u6563\u5316](/src/main/java/com/pt/ml/process/Discretization.scala)\n\n- [\u8ba1\u7b97\u7f16\u8f91\u8ddd\u79bb](/src/main/java/com/pt/ml/example/EditDistanceDemo.java)\n\n- [SimHash\u7b97\u6cd5](/src/main/java/com/pt/ml/process/SimHash.java)\n\n- [PCA\u964d\u7ef4](/src/main/java/com/pt/ml/process/Pca.scala)\n\n- [TSNE\u964d\u7ef4](/src/main/java/com/pt/ml/process/TSNEStandard.java)\n\n- [fastText for java\u8bad\u7ec3](/src/main/java/com/pt/ml/algorithm/FastText4J.scala)\n\n- [fastText for java \u8bcd\u5411\u91cf\u6a21\u578b\u4f7f\u7528](/src/main/java/com/pt/ml/deeplearning/nlp/Word2VecFastText.java)\n\n- [java \u7ed8\u5236\u70b9\u3001\u7ebf\u3001\u67f1\u72b6\u56fe](/src/main/java/com/pt/ml/visualization)\n\n- [deeplearning4j - \u5355\u673a\u524d\u5411\u4f20\u64ad\u795e\u7ecf\u7f51\u7edc](/src/main/java/com/pt/ml/deeplearning/BpNeuralNetwork.java)\n\n- [deeplearning4j - \u5355\u673a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc](/src/main/java/com/pt/ml/deeplearning/CnnNeuralNetwork.java)\n\n- [deeplearning4j - spark\u7248\u672c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc](/src/main/java/com/pt/ml/deeplearning/CnnNeuralNetworkSpark.scala)\n\n- [deeplearning4j - \u5355\u673a\u5faa\u73af\u795e\u7ecf\u7f51\u7edc](/src/main/java/com/pt/ml/deeplearning/LstmClassification.java)\n\n- [deeplearning4j - spark\u7248\u672c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc](/src/main/java/com/pt/ml/deeplearning/LstmClassificationSpark.scala)\n\n- [deeplearning4j - \u8bcd\u5411\u91cf\u4f7f\u7528](/src/main/java/com/pt/ml/deeplearning/nlp/Word2VecDeeplearning4j.java)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}