{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1409.4842",
      "https://arxiv.org/abs/1312.2249",
      "https://arxiv.org/abs/1610.07629"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9255313418819783
      ],
      "excerpt": "        (https://arxiv.org/abs/1610.07629) to restyle the camera preview image \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GenesisDCarmen/C_Reconocimiento_Facial",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-02T16:53:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-30T05:53:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The demos in this folder are designed to give straightforward samples of using\nTensorFlow in mobile applications.\n\nInference is done using the [TensorFlow Android Inference Interface](../../../tensorflow/contrib/android),\nwhich may be built separately if you want a standalone library to drop into your\nexisting application. Object tracking and YUV -> RGB conversion is handled by\nlibtensorflow_demo.so.\n\nA device running Android 5.0 (API 21) or higher is required to run the demo due\nto the use of the camera2 API, although the native libraries themselves can run\non API >= 14 devices.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9468382390111717,
        0.8969623583910403
      ],
      "excerpt": "        model to classify camera frames in real-time, displaying the top results \n        in an overlay on the camera image. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9466539810099501,
        0.8742699764884205
      ],
      "excerpt": "        using Deep Neural Networks to \n        localize and track people in the camera preview in real-time. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9196314296378064
      ],
      "excerpt": "        Uses a model based on [A Learned Representation For Artistic Style] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9745016918822199
      ],
      "excerpt": "        to that of a number of different artists. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9589040312974123
      ],
      "excerpt": "for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9631372483368169
      ],
      "excerpt": "support for gradle/cmake builds is coming soon, but in the meantime we suggest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8776493615463461
      ],
      "excerpt": "\"The external label '//external:android/sdk' is not bound to anything\" will \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9088385125922914
      ],
      "excerpt": "Also edit the API levels for the SDK in WORKSPACE to the highest level you \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9901291572334209
      ],
      "excerpt": "of the API level of the demo, which is defined in AndroidManifest.xml). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8158621307241036
      ],
      "excerpt": "After editing your WORKSPACE file to update the SDK/NDK configuration, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8938578158474143
      ],
      "excerpt": "matches that of your system. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8859571234816218
      ],
      "excerpt": "other application (it will call out to Bazel to build the native code with the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9683458276894727
      ],
      "excerpt": "Full CMake support for the demo is coming soon, but for now it is possible to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "App de Android de reconocimiento facial hecho para la materia de Sistemas Operativos LINUX",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GenesisDCarmen/C_Reconocimiento_Facial/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 16:37:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GenesisDCarmen/C_Reconocimiento_Facial/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "GenesisDCarmen/C_Reconocimiento_Facial",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure that adb debugging is enabled on your Android 5.0 (API 21) or\nlater device, then after building use the following command from your workspace\nroot to install the APK:\n\n```bash\nadb install -r bazel-bin/tensorflow/examples/android/tensorflow_demo.apk\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The TensorFlow `GraphDef`s that contain the model definitions and weights\nare not packaged in the repo because of their size. They are downloaded\nautomatically and packaged with the APK by Bazel via a new_http_archive defined\nin `WORKSPACE` during the build process, and by Gradle via download-models.gradle.\n\n**Optional**: If you wish to place the models in your assets manually,\nremove all of the `model_files` entries from the `assets`\nlist in `tensorflow_demo` found in the `[BUILD](BUILD)` file. Then download\nand extract the archives yourself to the `assets` directory in the source tree:\n\n```bash\nBASE_URL=https://storage.googleapis.com/download.tensorflow.org/models\nfor MODEL_ZIP in inception5h.zip mobile_multibox_v1a.zip stylize_v1.zip\ndo\n  curl -L ${BASE_URL}/${MODEL_ZIP} -o /tmp/${MODEL_ZIP}\n  unzip /tmp/${MODEL_ZIP} -d tensorflow/examples/android/assets/\ndone\n```\n\nThis will extract the models and their associated metadata files to the local\nassets/ directory.\n\nIf you are using Gradle, make sure to remove download-models.gradle reference\nfrom build.gradle after your manually download models; otherwise gradle\nmight download models again and overwrite your models.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Bazel is the primary build system for TensorFlow. To build with Bazel,\nit and the Android NDK and SDK must be installed on your system.\n\n1. Install the latest version of Bazel as per the instructions [on the Bazel website](https://bazel.build/versions/master/docs/install.html).\n2. The Android NDK is required to build the native (C/C++) TensorFlow code.\n        The current recommended version is 12b, which may be found\n        [here](https://developer.android.com/ndk/downloads/older_releases.html#ndk-12b-downloads).\n3. The Android SDK and build tools may be obtained\n        [here](https://developer.android.com/tools/revisions/build-tools.html),\n        or alternatively as part of\n        [Android Studio](https://developer.android.com/studio/index.html). Build\n        tools API >= 23 is required to build the TF Android demo (though it will\n        run on API >= 21 devices).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8221466885496103
      ],
      "excerpt": "nightly build \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9599742107588157,
        0.8237203173575234
      ],
      "excerpt": "that Windows users download the \nprebuilt binaries \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9413697808616512
      ],
      "excerpt": "you may build the APK. Run this from your workspace root: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8849183998647933,
        0.9127396894821996
      ],
      "excerpt": "If you get build errors about protocol buffers, run \ngit submodule update --init and make sure that you've modified your WORKSPACE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9902867843750384,
        0.8189029636063984
      ],
      "excerpt": "make sure that you can build with Bazel following the above directions. Then, \nlook at build.gradle and make sure that the path to Bazel \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8331976046070074,
        0.8281818273461852
      ],
      "excerpt": "Android Studio project. Click through installing all the Gradle extensions it \nrequests, and you should be able to have Android Studio build the demo like any \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "TF Classify: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "TF Detect: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "TF Stylize: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9198549067316595
      ],
      "excerpt": "<img src=\"sample_images/classify1.jpg\" width=\"30%\"><img src=\"sample_images/stylize1.jpg\" width=\"30%\"><img src=\"sample_images/detect1.jpg\" width=\"30%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513276061138573
      ],
      "excerpt": "bazel build -c opt //tensorflow/examples/android:tensorflow_demo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8481247402142855
      ],
      "excerpt": "file as instructed, then try building again. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8599060580060816
      ],
      "excerpt": "At this point you can add the tensorflow/examples/android directory as a new \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GenesisDCarmen/C_Reconocimiento_Facial/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TensorFlow Android Camera Demo",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "C_Reconocimiento_Facial",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "GenesisDCarmen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GenesisDCarmen/C_Reconocimiento_Facial/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Bazel is the primary build system for TensorFlow. To build with Bazel,\nit and the Android NDK and SDK must be installed on your system.\n\n1. Install the latest version of Bazel as per the instructions [on the Bazel website](https://bazel.build/versions/master/docs/install.html).\n2. The Android NDK is required to build the native (C/C++) TensorFlow code.\n        The current recommended version is 12b, which may be found\n        [here](https://developer.android.com/ndk/downloads/older_releases.html#ndk-12b-downloads).\n3. The Android SDK and build tools may be obtained\n        [here](https://developer.android.com/tools/revisions/build-tools.html),\n        or alternatively as part of\n        [Android Studio](https://developer.android.com/studio/index.html). Build\n        tools API >= 23 is required to build the TF Android demo (though it will\n        run on API >= 21 devices).\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Once the app is installed it can be started via the \"TF Classify\", \"TF Detect\"\nand \"TF Stylize\" icons, which have the orange TensorFlow logo as their icon.\n\nWhile running the activities, pressing the volume keys on your device will\ntoggle debug visualizations on/off, rendering additional info to the screen\nthat may be useful for development purposes.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 16:37:39 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This folder contains an example application utilizing TensorFlow for Android\ndevices.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Once the app is installed it can be started via the \"TF Classify\", \"TF Detect\"\nand \"TF Stylize\" icons, which have the orange TensorFlow logo as their icon.\n\nWhile running the activities, pressing the volume keys on your device will\ntoggle debug visualizations on/off, rendering additional info to the screen\nthat may be useful for development purposes.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Pick your preferred approach below. At the moment, we have full support for\nBazel, and partial support for gradle, cmake, make, and Android Studio.\n\nAs a first step for all build types, clone the TensorFlow repo with:\n\n```\ngit clone --recurse-submodules https://github.com/tensorflow/tensorflow.git\n```\n\nNote that `--recurse-submodules` is necessary to prevent some issues with\nprotobuf compilation.\n\n",
      "technique": "Header extraction"
    }
  ]
}