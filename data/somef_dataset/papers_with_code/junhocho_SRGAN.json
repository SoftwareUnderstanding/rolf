{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.04802",
      "https://arxiv.org/abs/1603.05027"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/junhocho/SRGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-10-13T06:16:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-20T13:05:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9632014529988243,
        0.9671984572427039,
        0.8556438185832755,
        0.9066496618579636,
        0.8708961497171931,
        0.8356807242413153,
        0.931253208416436,
        0.8510584427344329,
        0.9090356965456863
      ],
      "excerpt": "This is implementation of SRGAN under working. \nCurrently only generator part is implemented. SRResNet is implemented but not benchmarked yet. \nSRGAN is hopefully implementation soon. \nI can't reproduce PSNR of bicubic in the paper, thus haven't measured the PSNR. \nThe paper is Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network. \nThese images are generated from LR images into 4x SR with trained with with the code. Check 23K results \nThere more experiments going on. For ex, using preactivation ResNet, 4x4 deconvolution layer to remove artifacts. \nThis repository started from altering Torch7-Network Profiler. \nUsed ResNet but changed a lot from original. Final using model is models/resnet-deconv2.lua. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8686882711317918
      ],
      "excerpt": "LR Patch is 3x24x24 and SR Patch is 3x96x96. It was vague in the paper that 96x96x is either LR or SR but LR96 was untrainable because of not enough memory (GTX1080). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8404749475586613
      ],
      "excerpt": "I've tried training in preactviation resnet and removing artifacts by deconv. So far, analyzing what are pros and cons. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of [Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network arXiv:1609.04802v2]",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/junhocho/SRGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Tue, 21 Dec 2021 10:20:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/junhocho/SRGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "junhocho/SRGAN",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/junhocho/SRGAN/master/VGG/saveVGG19.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8892071212374467
      ],
      "excerpt": "Then, start train with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884787485315007,
        0.999833231880651,
        0.9895305581863357,
        0.9038295358981701
      ],
      "excerpt": "ContentLoss. Inlcuded VGG/saveVGG19.sh to build VGG loss. \nluarocks install loadcaffe \nDownload VGG : cd VGG; ./saveVGG19 \nluarocks install https://raw.githubusercontent.com/szym/display/master/display-scm-0.rockspec  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8147992314696947
      ],
      "excerpt": "For first time, just uncomment prepImageNet to have paths to images. Save it as imgBatch.t7 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8133098911268626
      ],
      "excerpt": "th profile-model.lua -m models/resnet-deconv2.lua -r 16x3x24x24 -p cuda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8628789093093363,
        0.8577923425860119
      ],
      "excerpt": "Then, start train with \nth train-SRResNet.lua -model_name 9x9-15res-LR24 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768877185798397,
        0.8744768763334037
      ],
      "excerpt": "th train-SRResNet.lua -model_name 9x9-15res-LR24 -checkpoint_start_from models/9x9-15res-LR24/230000.t7 \nth run-SRResNet.lua -checkpoint_path models/9x9-15res-LR24/230000.t7 -dataset BSD100 -result_path results_23K \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8779715668117936
      ],
      "excerpt": "th train-SRResNet-VGGloss.lua -arch models/resnet-4x4deconv-preact.lua  -model_name VGGloss-4x4deconv -checkpoint_save_iter 1000 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/junhocho/SRGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Lua",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2016 Junho Cho\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SRGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SRGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "junhocho",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/junhocho/SRGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 81,
      "date": "Tue, 21 Dec 2021 10:20:02 GMT"
    },
    "technique": "GitHub API"
  }
}