{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2106.07454\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Minghan Yang, Dong Xu, Qiwen Cui, Zaiwen Wen, Pengxiang Xu, NG+ : A Multi-Step Matrix-Product Natural Gradient Method for Deep Learning,  https://arxiv.org/abs/2106.07454\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yangorwell/NGPlus",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We hope that the package is useful for your application. If you have any bug reports or comments, please feel free to email one of the toolbox authors:\n\n- Minghan Yang, yangminghan at pku.edu.cn\n- Dong Xu, taroxd at pku.edu.cn\n- Zaiwen Wen, wenzw at pku.edu.cn\n\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-05T11:00:12Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T15:16:22Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9240266367075577,
        0.9522502922949462,
        0.9324244305765553
      ],
      "excerpt": "NG+ is a multi-step matrix-product natural gradient method for deep learning. \nThis is an example of training ResNet-50 V1.5 on the ImageNet1K  (ILSVRC2012) dataset. NG+ can finish the training within 40 epochs to top-1 accuracy of 75.9% using 16 Tesla V100 GPUs with batch size 4,096. \nThe overall network architecture of ResNet-50 is shown below: link \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9419073588740874
      ],
      "excerpt": "resnet_ngplus.py: The definition of resnet50 model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "NG+: A new second-order optimizer for deep learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yangorwell/NGPlus/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sun, 26 Dec 2021 03:13:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yangorwell/NGPlus/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yangorwell/NGPlus",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8299417457335019
      ],
      "excerpt": "This is an example of training ResNet-50 V1.5 on the ImageNet1K  (ILSVRC2012) dataset. NG+ can finish the training within 40 epochs to top-1 accuracy of 75.9% using 16 Tesla V100 GPUs with batch size 4,096. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9107745176791624
      ],
      "excerpt": "main.py: The main script for training. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yangorwell/NGPlus/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# NG+",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "NGPlus",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yangorwell",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yangorwell/NGPlus/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "python 3.8, pytorch (>= 1.5.0), tensorboardX, [NVIDIA DALI](https://developer.nvidia.com/dali), CUDA, CUDNN, and NCCL.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 03:13:58 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "second-order-optimization",
      "optimization"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For batch size 4096 (256 x 16), run the following code:\n\n```python\npython -m torch.distributed.launch --master_port 12226 --nproc_per_node=16  main.py --fp16 --batch_size 256  --lr-decay-rate 0.75 --damping 0.35 --lr_init 3.8  --method 'poly' --epoch_end 60 --lr_exponent 6  --warmup_epoch 5 --curvature_momentum 0.9 --datadir /mnt/ILSVRC2012 --logdir your_log_file --decay_epochs 37 --inv-update-freq 1000 --cov-update-freq 1000\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}