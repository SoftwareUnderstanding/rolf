{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.08287",
      "https://arxiv.org/abs/2005.03572"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@Article{zheng2021ciou,\n  author    = {Zheng, Zhaohui and Wang, Ping and Ren, Dongwei and Liu, Wei and Ye, Rongguang and Hu, Qinghua and Zuo, Wangmeng},\n  title     = {Enhancing Geometric Factors in Model Learning and Inference for Object Detection and Instance Segmentation},\n  booktitle = {IEEE Transactions on Cybernetics},\n  year      = {2021},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@Inproceedings{zheng2020diou,\n  author    = {Zheng, Zhaohui and Wang, Ping and Liu, Wei and Li, Jinze and Ye, Rongguang and Ren, Dongwei},\n  title     = {Distance-IoU Loss: Faster and Better Learning for Bounding Box Regression},\n  booktitle = {The AAAI Conference on Artificial Intelligence (AAAI)},\n  year      = {2020},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.988109762061828
      ],
      "excerpt": " - [Distance-IoU Loss: Faster and Better Learning for Bounding Box Regression][arxiv] [pdf] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "YOLO v3 https://github.com/Zzh-tju/DIoU-darknet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Link: https://pan.baidu.com/s/1ZkVapEsMcqJz3-PfTF2kSA \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Zzh-tju/DIoU",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-18T06:53:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T12:37:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Bounding box regression is the crucial step in object detection. In existing methods, while $\\ell_n$-norm loss is widely adopted for bounding box regression, it is not tailored to the evaluation metric, i.e., Intersection over Union (IoU). Recently, IoU loss and generalized IoU (GIoU) loss have been proposed to benefit the IoU metric, but still suffer from the problems of slow convergence and inaccurate regression. In this paper, we propose a Distance-IoU (DIoU) loss by incorporating the normalized distance between the predicted box and the target box, which converges much faster in training than IoU and GIoU losses. Furthermore, this paper summarizes three geometric factors in bounding box regression, i.e., overlap area, central point distance and aspect ratio, based on which a Complete IoU (CIoU) loss is proposed, thereby leading to faster convergence and better performance. By incorporating DIoU and CIoU losses into state-of-the-art object detection algorithms, e.g., YOLO v3, SSD and Faster RCNN, we achieve notable performance gains in terms of not only IoU metric but also GIoU metric. Moreover, DIoU can be easily adopted into non-maximum suppression (NMS) to act as the criterion, further boosting performance improvement.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9426246180270526,
        0.994780294459279
      ],
      "excerpt": "Our paper is accepted by IEEE Transactions on Cybernetics (TCYB). \nThis is the code for our papers: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8857899008282228,
        0.9831524629951867,
        0.9333891183249508
      ],
      "excerpt": " - Enhancing Geometric Factors into Model Learning and Inference for Object Detection and Instance Segmentation \nDIoU and CIoU losses are incorporated into state-of-the-art detection algorithms, including YOLO v3, SSD and Faster R-CNN.  \nThe details of implementation and comparison can be respectively found in the following links.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9721234355873049,
        0.9843353825399871
      ],
      "excerpt": "There are two modes that we provide. One is test_1715k.m and the other is simple_test.m. \ntest_1715k.m provides a large regression samples, for the details of its settings, please refer to our paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.99167667470052
      ],
      "excerpt": "This is a convenient and intutive way to see how IoU based loss works. All the gradients of these four IoU based losses are calculated consistent with our DIoU-Darknet (YOLO v3). Note that the IoU term is necessary, otherwise the comparison will be meaningless. If you find some other forms of loss functions, you can run this simulation to see its convergence, about how fast it is or how much error it has. And these performance will appear in high probability in benchmark training which is our original idea about the simulation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9010724473745699,
        0.8576271370222273
      ],
      "excerpt": "We note that the basins in (a) and (b) correspond to good regression cases. One can see that IoU loss has large errors for non-overlapping cases, GIoU loss has large errors for horizontal and vertical cases, and our DIoU loss leads to very small regression errors everywhere. \nWe provide txt files for the simulation results. For how to use, please take a look at the end of simulation experiment/test_1715k.m \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Distance-IoU Loss: Faster and Better Learning for Bounding Box Regression (AAAI 2020)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Zzh-tju/DIoU/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 48,
      "date": "Thu, 23 Dec 2021 12:18:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Zzh-tju/DIoU/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Zzh-tju/DIoU",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8918974083095406,
        0.9667326416418838,
        0.8404049025955376
      ],
      "excerpt": "YOLO v3 https://github.com/Zzh-tju/DIoU-darknet \nSSD https://github.com/Zzh-tju/DIoU-SSD-pytorch \nFaster R-CNN https://github.com/Zzh-tju/DIoU-pytorch-detectron \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9128621123462006
      ],
      "excerpt": "Download simulation experiment files, you can run it on Matlab. Our matlab version is MATLAB 2017a. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8732089505944296
      ],
      "excerpt": "Link: https://pan.baidu.com/s/1ZkVapEsMcqJz3-PfTF2kSA \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9197735714648932
      ],
      "excerpt": "<img src=\"simulation_examples/regression_error.jpg\" width=\"800px\"/>  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Zzh-tju/DIoU/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB",
      "M"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Complete-IoU Loss and Cluster-NMS for Improving Object Detection and Instance Segmentation.",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DIoU",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Zzh-tju",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Zzh-tju/DIoU/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 257,
      "date": "Thu, 23 Dec 2021 12:18:11 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We further provide three typical cases in simulation experiments. \n\nFirst, the anchor box is set at diagonal orientation.\nGIoU loss generally increases the size of predicted box to overlap with target box, while DIoU loss directly minimizes normalized distance of central points. \n\n<img src=\"simulation_examples/diag.jpg\" width=\"600px\"/>\n\nSecond, the anchor box is set at horizontal orientation. GIoU loss broadens the right edge of prediction box, while the\ncentral point of prediction box only moves slightly towards target box. And then when there is overlap between prediction and\ntarget boxes, the IoU term in GIoU loss would make better match. From the final result at T = 400, one can see that target box\nhas been included into prediction box, where GIoU loss has totally degraded to IoU loss. \n\n<img src=\"simulation_examples/horizontal.jpg\" width=\"800px\"/> \n\nThird, the anchor box is set at\nvertical orientation. Similarly, GIoU loss broadens the bottom edge of prediction box, and these two boxes do not match in the\nfinal iteration. In comparison, our DIoU loss converges to good matches in only a few dozen iterations.\n\n<img src=\"simulation_examples/vertical.jpg\" width=\"800px\"/> \n\n",
      "technique": "Header extraction"
    }
  ]
}