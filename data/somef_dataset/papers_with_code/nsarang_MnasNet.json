{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1807.11626\n\n## Usage\nAvailable implementations: **a1, b1, small, d1, d1_320**\n```python\nfrom MnasNet_models import Build_MnasNet\n\n# Standard model\nmodel = Build_MnasNet('a1'"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[MnasNet - Official implementation for Cloud TPU](https://github.com/tensorflow/tpu/tree/master/models/official/mnasnet)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9988556427481537,
        0.9998416198938155
      ],
      "excerpt": "Mingxing Tan, Bo Chen, Ruoming Pang, Vijay Vasudevan, Mark Sandler, Andrew Howard, Quoc V. Le.  MnasNet: Platform-Aware Neural Architecture Search for Mobile. CVPR 2019. \n   Arxiv link: https://arxiv.org/abs/1807.11626 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nsarang/MnasNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-06T15:28:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-07T04:32:05Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A TensorFlow 2.0 implementation of MnasNet: Platform-Aware Neural Architecture Search for Mobile.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nsarang/MnasNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 22 Dec 2021 18:14:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nsarang/MnasNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nsarang/MnasNet",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8152141836200899
      ],
      "excerpt": "| Model | Dataset | Input Size | Depth Multiplier | Top-1 Accuracy | Top-5 Accuracy | Pixel 1 latency (ms) | DownLoad Link | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nsarang/MnasNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MnasNet Tensorflow 2 Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MnasNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nsarang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nsarang/MnasNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Wed, 22 Dec 2021 18:14:39 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "mnasnet",
      "tensorflow",
      "tensorflow2",
      "keras",
      "architecture-search",
      "deep-learning",
      "mobile-development",
      "imagenet"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Available implementations: **a1, b1, small, d1, d1_320**\n```python\nfrom MnasNet_models import Build_MnasNet\n\n#: Standard model\nmodel = Build_MnasNet('a1')\n\n\n#: Change default parameters:\nmodel = Build_MnasNet('a1', dict(input_shape=(128, 128, 3), dropout_rate=0.5))\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}