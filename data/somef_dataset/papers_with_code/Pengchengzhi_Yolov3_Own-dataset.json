{
  "citation": [
    {
      "confidence": [
        0.9598596565459202
      ],
      "excerpt": "anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8221899747000617
      ],
      "excerpt": "    if(dets[k].objectness &gt; thresh &amp;&amp; iou &gt; best_iou){ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9986557469884713
      ],
      "excerpt": "rec,prec,ap = voc_eval('/home/karry/Documents/Yolo/darknet/results/{}.txt', '/home/karry/Documents/Yolo/darknet/val_xml/{}.xml', '/home/karry/Documents/Yolo/darknet/val.txt', 'classname','.') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8631735726517773
      ],
      "excerpt": "Open program src/image.c, find function draw_box_width(), change the loop function: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955,
        0.8456806903995955
      ],
      "excerpt": "        if (dets[i].prob[j] &gt; thresh){ \n            if (class &lt; 0) { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if(class &gt;= 0){ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Pengchengzhi/Yolov3_Own-dataset",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-14T04:38:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-30T09:36:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9783504683358745
      ],
      "excerpt": "My project is to detect five different kinds of objects: lizard,bird,car,dog,turtle and I use labelImg to label my pictures. After that, prepare a folder to save all the pictures and another folder to save all the .xml documents.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106701384912924
      ],
      "excerpt": "2. Change some relevant files and codes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627010306890404
      ],
      "excerpt": "Copy voc.data, rename to animal.data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9341998352897353
      ],
      "excerpt": "I have 150 pictures for training and 30 pictures for testing, each group, so my folder data is like  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8856534491856156
      ],
      "excerpt": "When I finished training and want to visulize the loss, I found I did't save it. So maybe try the following code for training instead of the previous one: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8083877045469582
      ],
      "excerpt": "2' Change the for loop as directed by fix error in validate_detector_recall #952 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8222563177364892
      ],
      "excerpt": "mAP (MeanAveragePrecision) ---> for all images in all classes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016,
        0.9394449182630016
      ],
      "excerpt": "for(i = 0; i < w; i++) \nfor(i = 0; i <= w; i++) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8560580791216782
      ],
      "excerpt": "Generally it's because my picture is too small, only 128 x 128 pixels. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "    for(i = 0; i < w; i++){ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Train yolov3 on my own dataset, Ubuntu 16.04",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**0. Download source code**\n\n```\n git clone https://github.com/pjreddie/darknet\n cd darknet\n```\n\nInstead of this original edition of yolov3, there is another [AlexeyAB edition](https://github.com/AlexeyAB/darknet) of yolov3, chose whatever you want.\n\n**1. Change makefile** ---> `vi Makefile`\n\n* Want to use GPU  --->   `GPU=1`\n\n* Want to use openCV   --->   `OPENCV=1`\n\n* Want to use CUDNN\n\n```\n CUDNN=1\n NVCC=/usr/local/cuda-10.0/bin/nvcc\n```\n\n**2. Compile**  --->   `make`\n\n**3. Test**\n\nDownload a pre-trained model to test --> `wget https://pjreddie.com/media/files/yolov3.weights`\n\nThen test the dog picture ---> ` ./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg`\n\nIf you are lucky, you will get a picture like this\n\n![dog_picture](https://github.com/Pengchengzhi/Yolov3_Own-dataset/blob/master/images/dog_predictions.jpg)\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Pengchengzhi/Yolov3_Own-dataset/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 13:19:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Pengchengzhi/Yolov3_Own-dataset/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pengchengzhi/Yolov3_Own-dataset",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9197793462380229
      ],
      "excerpt": "Environment: Ubuntu 16.04  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": "CUDA  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8230077020096176
      ],
      "excerpt": "Copy yolov3-voc.cfg in folder cfg, rename to animal.cfg, make the following changes: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8004918426573991
      ],
      "excerpt": "P (Precision) ---> for one image in one class \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9445374248504765,
        0.8260239137212084
      ],
      "excerpt": "The forth one is class name. \nThe fifth one is the path to save annots.pkl file. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8650194983791794
      ],
      "excerpt": "1. Generate .txt file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9197072329100662,
        0.8942412300152255
      ],
      "excerpt": "train.txt: Store the paths of pictures used for training (without .jpg). One path per line. \nval.txt: Store the paths of pictures used for testing (without .jpg). One path per line. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216270093103228
      ],
      "excerpt": "for example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8144892841258486
      ],
      "excerpt": "Put folder labels and folder pictures under the same directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8982619412270011
      ],
      "excerpt": "* Copy voc.names , rename to animal.names, and change the class names, one class name per line.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8413528894561991
      ],
      "excerpt": "The order of the names should match class name index in picture_name.txt. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8814031789055796
      ],
      "excerpt": " train   =  data/train.txt     #: Path to train.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8379159393586141
      ],
      "excerpt": " names   =  data/animal.names  #: Path to animal.names \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": ": Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8320839096736419
      ],
      "excerpt": "anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9049461924292027
      ],
      "excerpt": "5. Start training ---> sudo ./darknet detector train data/animal.data cfg/animal.cfg darknet53.conv.74  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9016142931904224
      ],
      "excerpt": "Switch the .cfg file to test mode: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": ": Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8286513782611465,
        0.8329580503535051,
        0.8369512892262344
      ],
      "excerpt": "Now choose a picture from test set and test: \nsudo ./darknet detector test data/animal.data ./cfg/animal.cfg ./backup/animal_20000.weights ./data/val_images/000133.JPEG \nI trained a total number of 128w pictures, my results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984,
        0.8594142235991984
      ],
      "excerpt": "True posotive ---> tp \nTrue negative ---> tn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8548870596752892
      ],
      "excerpt": "1' Detect test set and save the results classname.txt to darknet/results folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9355354798037551,
        0.8666117960574022
      ],
      "excerpt": "2' Download voc_eval.py \n3' Build compute_map.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from voc_eval import voc_eval \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8976279839892589
      ],
      "excerpt": "The third path is for val.txt which contains picture name of test set, no picture path, no .jpg, only picture name. One name per line. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9364541555520881
      ],
      "excerpt": "4' Run compute_map.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8329580503535051
      ],
      "excerpt": "sudo ./darknet detector test data/animal.data ./cfg/animal.cfg ./backup/animal_20000.weights ./data/val_images/000133.JPEG \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809547384061538
      ],
      "excerpt": "                strcat(labelstr, names[j]); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809547384061538
      ],
      "excerpt": "                strcat(labelstr, names[j]); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8515870683040514
      ],
      "excerpt": "            printf(\"%s: %.0f%%\\n\", names[j], dets[i].prob[j]*100); \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Pengchengzhi/Yolov3_Own-dataset/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Train yolov3 on my own dataset",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yolov3_Own-dataset",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pengchengzhi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Pengchengzhi/Yolov3_Own-dataset/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Tue, 21 Dec 2021 13:19:58 GMT"
    },
    "technique": "GitHub API"
  }
}