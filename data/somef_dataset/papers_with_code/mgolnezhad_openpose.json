{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1704.07809",
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1704.07809",
      "https://arxiv.org/abs/1611.08050",
      "https://arxiv.org/abs/1602.00134"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite these papers in your publications if OpenPose helps your research. All of OpenPose is based on [OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1812.08008), while the hand and face detectors also use [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809) (the face detector was trained using the same procedure than the hand detector).\n\n    @article{8765346,\n      author = {Z. {Cao} and G. {Hidalgo Martinez} and T. {Simon} and S. {Wei} and Y. A. {Sheikh}},\n      journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},\n      title = {OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2019}\n    }\n\n    @inproceedings{simon2017hand,\n      author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n      year = {2017}\n    }\n\n    @inproceedings{cao2017realtime,\n      author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2017}\n    }\n\n    @inproceedings{wei2016cpm,\n      author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Convolutional pose machines},\n      year = {2016}\n    }\n\nPaper links:\n- OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields:\n    - [IEEE TPAMI](https://ieeexplore.ieee.org/document/8765346)\n    - [ArXiv](https://arxiv.org/abs/1812.08008)\n- [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809)\n- [Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1611.08050)\n- [Convolutional Pose Machines](https://arxiv.org/abs/1602.00134)\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{wei2016cpm,\n  author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Convolutional pose machines},\n  year = {2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cao2017realtime,\n  author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n  year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{simon2017hand,\n  author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n  year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{8765346,\n  author = {Z. {Cao} and G. {Hidalgo Martinez} and T. {Simon} and S. {Wei} and Y. A. {Sheikh}},\n  journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},\n  title = {OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n  year = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9815837285142566
      ],
      "excerpt": "    <sup>Testing OpenPose: (Left) <a href=\"https://www.youtube.com/watch?v=2DiQUX11YaY\" target=\"_blank\"><i>Crazy Uptown Funk flashmob in Sydney</i></a> video sequence. (Center and right) Authors <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gin\u00e9s Hidalgo</a> and <a href=\"http://www.cs.cmu.edu/~tsimon\" target=\"_blank\">Tomas Simon</a> testing face and hands</sup> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9928168535578981
      ],
      "excerpt": "    <sup><a href=\"https://ziutinyat.github.io/\" target=\"_blank\">Tianyi Zhao</a> and <a href=\"https://www.gineshidalgo.com\" target=\"_blank\">Gin\u00e9s Hidalgo</a> testing the <a href=\"https://github.com/CMU-Perceptual-Computing-Lab/openpose_unity_plugin\" target=\"_blank\">OpenPose Unity Plugin</a></sup> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9604675413581302
      ],
      "excerpt": "Single-person tracking for further speedup or visual smoothing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999415965119371
      ],
      "excerpt": "OpenPose papers published in IEEE TPAMI and CVPR. Cite them in your publications if OpenPose helps your research! (Links and more details in the Citation section below). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mgolnezhad/openpose",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-18T18:25:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-06T12:42:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8879017953717132
      ],
      "excerpt": "Related Work \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.988369144398883
      ],
      "excerpt": "We show an inference time comparison between the 3 available pose estimation libraries (same hardware and conditions): OpenPose, Alpha-Pose (fast Pytorch version), and Mask R-CNN. The OpenPose runtime is constant, while the runtime of Alpha-Pose and Mask R-CNN grow linearly with the number of people. More details here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8453623317623902,
        0.9066637355308118,
        0.8625478014426357
      ],
      "excerpt": "15, 18 or 25-keypoint body/foot keypoint estimation, including 6 foot keypoints. Runtime invariant to number of detected people. \n2x21-keypoint hand keypoint estimation. Runtime depends on number of detected people. See OpenPose Training for a runtime invariant alternative. \n70-keypoint face keypoint estimation. Runtime depends on number of detected people. See OpenPose Training for a runtime invariant alternative. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.8714431481092582,
        0.9139430516353368
      ],
      "excerpt": "Synchronization of Flir cameras handled. \nCompatible with Flir/Point Grey cameras. \nCalibration toolbox: Estimation of distortion, intrinsic, and extrinsic camera parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481671044875281
      ],
      "excerpt": "For further details, check the major released features and release notes docs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.82685243379413
      ],
      "excerpt": "Our library is open source for research purposes, and we want to improve it! So let us know (create a new GitHub issue or pull request, email us, etc.) if you... \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mgolnezhad/openpose/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 21:45:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mgolnezhad/openpose/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mgolnezhad/openpose",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/osx/install_brew.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/osx/install_deps.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_openpose_JetsonTX2_JetPack3.1.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_deps.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_caffe_and_openpose_JetsonTX2_JetPack3.1.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_caffe_and_openpose_JetsonTX2_JetPack3.3.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_cuda.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_openpose_JetsonTX2_JetPack3.3.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu/install_cudnn_up_to_Ubuntu16.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu_deprecated/copy_makefile_files.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu_deprecated/install_openpose_if_cuda8.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/ubuntu_deprecated/install_caffe_and_openpose_if_cuda8.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/pose_accuracy_coco_test_dev.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/pose_time_Caffe_layers.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/drawProtoTxt.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/pose_time_visual_GUI.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/pose_accuracy_car_val.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/pose_accuracy_coco_val.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/pose_accuracy_all_val.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/hand_accuracy_test.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/tests/speed_test.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/defaults.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/configure_make.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/run_make.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/configure.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/configure_cmake.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/install_deps_osx.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/install_deps_ubuntu.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/scripts/CI/run_tests.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/.github/CI_deprecated/generate_gh_pages.sh",
      "https://raw.githubusercontent.com/mgolnezhad/openpose/master/models/getModels.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you want to use OpenPose without installing or writing any code, simply [download and use the latest Windows portable version of OpenPose](doc/installation/0_index.md#windows-portable-demo)!\n\nOtherwise, you could [build OpenPose from source](doc/installation/0_index.md#compiling-and-running-openpose-from-source). See the [installation doc](doc/installation/0_index.md) for all the alternatives.\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9263522902214947,
        0.9569199475818335
      ],
      "excerpt": "OS: Ubuntu (20, 18, 16, 14), Windows (10, 8), Mac OSX, Nvidia TX2. \nHardware compatibility: CUDA (Nvidia GPU), OpenCL (AMD GPU), and non-GPU (CPU-only) versions. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8934782684246266
      ],
      "excerpt": "Output: Basic image + keypoint display/saving (PNG, JPG, AVI, ...), keypoint saving (JSON, XML, YML, ...), keypoints as array class, and support to add your own custom output code (e.g., some fancy UI). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8587476985249702
      ],
      "excerpt": "Usage Alternatives: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mgolnezhad/openpose/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Cuda",
      "CMake",
      "Shell",
      "HCL",
      "Batchfile",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/mgolnezhad/openpose/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'OPENPOSE: MULTIPERSON KEYPOINT DETECTION\\nSOFTWARE LICENSE AGREEMENT\\nACADEMIC OR NON-PROFIT ORGANIZATION NONCOMMERCIAL RESEARCH USE ONLY\\n\\nBY USING OR DOWNLOADING THE SOFTWARE, YOU ARE AGREEING TO THE TERMS OF THIS LICENSE AGREEMENT.  IF YOU DO NOT AGREE WITH THESE TERMS, YOU MAY NOT USE OR DOWNLOAD THE SOFTWARE.\\n\\nThis is a license agreement (\"Agreement\") between your academic institution or non-profit organization or self (called \"Licensee\" or \"You\" in this Agreement) and Carnegie Mellon University (called \"Licensor\" in this Agreement).  All rights not specifically granted to you in this Agreement are reserved for Licensor. \\n\\nRESERVATION OF OWNERSHIP AND GRANT OF LICENSE: \\nLicensor retains exclusive ownership of any copy of the Software (as defined below) licensed under this Agreement and hereby grants to Licensee a personal, non-exclusive, \\nnon-transferable license to use the Software for noncommercial research purposes, without the right to sublicense, pursuant to the terms and conditions of this Agreement.  As used in this Agreement, the term \"Software\" means (i) the actual copy of all or any portion of code for program routines made accessible to Licensee by Licensor pursuant to this Agreement, inclusive of backups, updates, and/or merged copies permitted hereunder or subsequently supplied by Licensor,  including all or any file structures, programming instructions, user interfaces and screen formats and sequences as well as any and all documentation and instructions related to it, and (ii) all or any derivatives and/or modifications created or made by You to any of the items specified in (i).\\n\\nCONFIDENTIALITY: Licensee acknowledges that the Software is proprietary to Licensor, and as such, Licensee agrees to receive all such materials in confidence and use the Software only in accordance with the terms of this Agreement.  Licensee agrees to use reasonable effort to protect the Software from unauthorized use, reproduction, distribution, or publication.\\n\\nCOPYRIGHT: The Software is owned by Licensor and is protected by United \\nStates copyright laws and applicable international treaties and/or conventions.\\n\\nPERMITTED USES:  The Software may be used for your own noncommercial internal research purposes. You understand and agree that Licensor is not obligated to implement any suggestions and/or feedback you might provide regarding the Software, but to the extent Licensor does so, you are not entitled to any compensation related thereto.\\n\\nDERIVATIVES: You may create derivatives of or make modifications to the Software, however, You agree that all and any such derivatives and modifications will be owned by Licensor and become a part of the Software licensed to You under this Agreement.\\xc2\\xa0 You may only use such derivatives and modifications for your own noncommercial internal research purposes, and you may not otherwise use, distribute or copy such derivatives and modifications in violation of this Agreement.\\n\\nBACKUPS:  If Licensee is an organization, it may make that number of copies of the Software necessary for internal noncommercial use at a single site within its organization provided that all information appearing in or on the original labels, including the copyright and trademark notices are copied onto the labels of the copies.\\n\\nUSES NOT PERMITTED:  You may not distribute, copy or use the Software except as explicitly permitted herein. Licensee has not been granted any trademark license as part of this Agreement and may not use the name or mark \\xe2\\x80\\x9cOpenPose\", \"Carnegie Mellon\" or any renditions thereof without the prior written permission of Licensor.\\n\\nYou may not sell, rent, lease, sublicense, lend, time-share or transfer, in whole or in part, or provide third parties access to prior or present versions (or any parts thereof) of the Software.\\n\\nASSIGNMENT: You may not assign this Agreement or your rights hereunder without the prior written consent of Licensor. Any attempted assignment without such consent shall be null and void.\\n\\nTERM: The term of the license granted by this Agreement is from Licensee\\'s acceptance of this Agreement by downloading the Software or by using the Software until terminated as provided below.\\n\\nThe Agreement automatically terminates without notice if you fail to comply with any provision of this Agreement.  Licensee may terminate this Agreement by ceasing using the Software.  Upon any termination of this Agreement, Licensee will delete any and all copies of the Software. You agree that all provisions which operate to protect the proprietary rights of Licensor shall remain in force should breach occur and that the obligation of confidentiality described in this Agreement is binding in perpetuity and, as such, survives the term of the Agreement.\\n\\nFEE: Provided Licensee abides completely by the terms and conditions of this Agreement, there is no fee due to Licensor for Licensee\\'s use of the Software in accordance with this Agreement.\\n\\nDISCLAIMER OF WARRANTIES:  THE SOFTWARE IS PROVIDED \"AS-IS\" WITHOUT WARRANTY OF ANY KIND INCLUDING ANY WARRANTIES OF PERFORMANCE OR MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE OR PURPOSE OR OF NON-INFRINGEMENT.  LICENSEE BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE SOFTWARE AND RELATED MATERIALS.\\n\\nSUPPORT AND MAINTENANCE: No Software support or training by the Licensor is provided as part of this Agreement.  \\n\\nEXCLUSIVE REMEDY AND LIMITATION OF LIABILITY: To the maximum extent permitted under applicable law, Licensor shall not be liable for direct, indirect, special, incidental, or consequential damages or lost profits related to Licensee\\'s use of and/or inability to use the Software, even if Licensor is advised of the possibility of such damage.\\n\\nEXPORT REGULATION: Licensee agrees to comply with any and all applicable \\nU.S. export control laws, regulations, and/or other laws related to embargoes and sanction programs administered by the Office of Foreign Assets Control.\\n\\nSEVERABILITY: If any provision(s) of this Agreement shall be held to be invalid, illegal, or unenforceable by a court or other tribunal of competent jurisdiction, the validity, legality and enforceability of the remaining provisions shall not in any way be affected or impaired thereby.\\n\\nNO IMPLIED WAIVERS: No failure or delay by Licensor in enforcing any right or remedy under this Agreement shall be construed as a waiver of any future or other exercise of such right or remedy by Licensor.\\n\\nGOVERNING LAW: This Agreement shall be construed and enforced in accordance with the laws of the Commonwealth of Pennsylvania without reference to conflict of laws principles.  You consent to the personal jurisdiction of the courts of this County and waive their rights to venue outside of Allegheny County, Pennsylvania.\\n\\nENTIRE AGREEMENT AND AMENDMENTS: This Agreement constitutes the sole and entire agreement between Licensee and Licensor as to the matter set forth herein and supersedes any previous agreements, understandings, and arrangements between the parties relating hereto.\\n\\n\\n\\n**********\\n\\nTHIRD-PARTY SOFTWARE NOTICES AND INFORMATION\\n\\nThis project incorporates material from the project(s) listed below (collectively, \"Third Party Code\").  This Third Party Code is licensed to you under their original license terms set forth below.  We reserves all other rights not expressly granted, whether by implication, estoppel or otherwise.\\n \\n1.\\tCaffe, version 1.0.0, (https://github.com/BVLC/caffe/)\\n\\nCOPYRIGHT\\n\\nAll contributions by the University of California:\\nCopyright (c) 2014-2017 The Regents of the University of California (Regents)\\nAll rights reserved.\\n\\nAll other contributions:\\nCopyright (c) 2014-2017, the respective contributors\\nAll rights reserved.\\n\\nCaffe uses a shared copyright model: each contributor holds copyright over\\ntheir contributions to Caffe. The project versioning records all such\\ncontribution and copyright details. If a contributor wants to further mark\\ntheir specific copyright on a particular contribution, they should indicate\\ntheir copyright solely in the commit message of the change when it is\\ncommitted.\\n\\nLICENSE\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met: \\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer. \\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution. \\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nCONTRIBUTION AGREEMENT\\n\\nBy contributing to the BVLC/caffe repository through pull-request, comment,\\nor otherwise, the contributor releases their content to the\\nlicense and copyright terms herein.\\n\\n*END OF THIRD-PARTY SOFTWARE NOTICES AND INFORMATION*\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Contents",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "openpose",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mgolnezhad",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mgolnezhad/openpose/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 21:45:34 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simply use the OpenPose Demo from your favorite command-line tool (e.g., Windows PowerShell or Ubuntu Terminal). E.g., this example runs OpenPose on your webcam and displays the body keypoints:\n```\n#: Ubuntu\n./build/examples/openpose/openpose.bin\n```\n```\n:: Windows - Portable Demo\nbin\\OpenPoseDemo.exe --video examples\\media\\video.avi\n```\n\nYou can also add any of the available flags in any order. E.g., the following example runs on a video (`--video {PATH}`), enables face (`--face`) and hands (`--hand`), and saves the output keypoints on JSON files on disk (`--write_json {PATH}`).\n```\n#: Ubuntu\n./build/examples/openpose/openpose.bin --video examples/media/video.avi --face --hand --write_json output_json_folder/\n```\n```\n:: Windows - Portable Demo\nbin\\OpenPoseDemo.exe --video examples\\media\\video.avi --face --hand --write_json output_json_folder/\n```\n\nOptionally, you can also extend OpenPose's functionality from its Python and C++ APIs. After [installing](doc/installation/0_index.md) OpenPose, check its [official doc](doc/00_index.md) for a quick overview of all the alternatives and tutorials.\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}