{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "DCGAN example https://github.com/pytorch/examples/blob/master/dcgan/main.py\n\nMHGAN code https://github.com/uber-research/metropolis-hastings-gans",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{wang2021reparameterized,\n  title={Reparameterized Sampling for Generative Adversarial Networks},\n  author={Wang, Yifei and Wang, Yisen and Yang, Jiansheng and Lin, Zhouchen},\n  booktitle={Joint European Conference on Machine Learning and Knowledge Discovery in Databases},\n  pages={494--509},\n  year={2021},\n  organization={Springer}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9999915649769714
      ],
      "excerpt": "Authors: Yifei Wang, Yisen Wang, Jiansheng Yang, and Zhouchen Lin (Peking University) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yifeiwang77/repgan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-13T08:39:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-28T05:17:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9268987767487719
      ],
      "excerpt": "Official code of Reparameterized Sampling for Generative Adversarial Networks  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8094468379385207
      ],
      "excerpt": "What for: boostrapping the sample quality of pretrained GANs with latent-sample coupling MCMC \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9848377632869095
      ],
      "excerpt": "Notice: here we take DCGAN in dcgan.py for an example. Other architectures (including WGAN) can also be adapted to fit our algorithm as it is model agnostic. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9714101323852821
      ],
      "excerpt": "    nz: the dimension of the latent z of the generator \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9653235397075701
      ],
      "excerpt": "    clen: length the Markov chain (only the last sample at the end of the chain is left) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833630042306217
      ],
      "excerpt": "    eta: scale of  white noise in L2MC. Default: sqrt(tau) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official code of REPGAN (Reparameterized Sampling for Generative Adversarial Networks) ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yifeiwang77/repgan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 13:34:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yifeiwang77/repgan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yifeiwang77/repgan",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install dependencies with ```pip install -r requirements.txt```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9318407082195516,
        0.8199979522991948
      ],
      "excerpt": "python main.py --dataroot [dataroot] --load-g [generator filename] --load-d [discriminator filename] --calibrate --num-images 50000 \nIt will generate 50,000 images and save them in the numpy format.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8079704324688302
      ],
      "excerpt": "        batch_size=100,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828665034782968
      ],
      "excerpt": "        tau=0.01,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8552870870973762
      ],
      "excerpt": "    batch_size: number of samples per batch \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yifeiwang77/repgan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "GAN Sampling with REPGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "repgan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yifeiwang77",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yifeiwang77/repgan/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 13:34:56 GMT"
    },
    "technique": "GitHub API"
  }
}