{
  "citation": [
    {
      "confidence": [
        0.8133485582990877
      ],
      "excerpt": "Code and datasets for our paper \"KnowPrompt: Knowledge-aware Prompt-tuning  with  Synergistic Optimization for Relation Extraction\" \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zjunlp/KnowPrompt",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-21T06:40:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T00:38:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9731541559136463
      ],
      "excerpt": "Code and datasets for our paper \"KnowPrompt: Knowledge-aware Prompt-tuning  with  Synergistic Optimization for Relation Extraction\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.964310559654779
      ],
      "excerpt": "We provide all the datasets and prompts used in our experiments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9118279103049232
      ],
      "excerpt": "The expected structure of files is: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code and datasets for the paper \"KnowPrompt: Knowledge-aware Prompt-tuning with Synergistic Optimization for Relation Extraction\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zjunlp/KnowPrompt/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 19:23:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zjunlp/KnowPrompt/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zjunlp/KnowPrompt",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zjunlp/KnowPrompt/master/scripts/retacred.sh",
      "https://raw.githubusercontent.com/zjunlp/KnowPrompt/master/scripts/dialogue.sh",
      "https://raw.githubusercontent.com/zjunlp/KnowPrompt/master/scripts/tacred.sh",
      "https://raw.githubusercontent.com/zjunlp/KnowPrompt/master/scripts/semeval.sh",
      "https://raw.githubusercontent.com/zjunlp/KnowPrompt/master/scripts/tacrev.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.99743186551749,
        0.9979947896609701
      ],
      "excerpt": "To install requirements: \npip install -r requirements.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864,
        0.9023697225149864
      ],
      "excerpt": " |    |-- semeval.sh \n |    |-- dialogue.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.815923842335622
      ],
      "excerpt": "Run the experiments \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9635708657517406,
        0.9906248903846466
      ],
      "excerpt": "cd dataset \ncd semeval \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8454553703666403
      ],
      "excerpt": " |    |    |-- train.txt      \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477596219850383
      ],
      "excerpt": " |    |    |-- test.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890390350607155
      ],
      "excerpt": " |    |    |-- train.json      \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8909404767862593
      ],
      "excerpt": " |    |    |-- test.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454553703666403
      ],
      "excerpt": " |    |    |-- train.txt      \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477596219850383
      ],
      "excerpt": " |    |    |-- test.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454553703666403
      ],
      "excerpt": " |    |    |-- train.txt      \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477596219850383
      ],
      "excerpt": " |    |    |-- test.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454553703666403
      ],
      "excerpt": " |    |    |-- train.txt      \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477596219850383
      ],
      "excerpt": " |    |    |-- test.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152676698672798
      ],
      "excerpt": "python get_label_word.py --model_name_or_path bert-large-uncased  --dataset_name semeval \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8683413557127679
      ],
      "excerpt": "Download the data first, and put it to dataset folder. Run the comand below, and get the few shot dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8850542785128428
      ],
      "excerpt": "python generate_k_shot.py --data_dir ./dataset --k 8 --dataset semeval \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8495479514524721
      ],
      "excerpt": "cp rel2id.json val.txt test.txt ./k-shot/8-1 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zjunlp/KnowPrompt/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# KnowPrompt\n\n\nCode and datasets for our paper \"KnowPrompt: Knowledge-aware Prompt-tuning  with  Synergistic Optimization for Relation Extraction\"\n\nRequirements",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "KnowPrompt",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zjunlp",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zjunlp/KnowPrompt/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Our script code can automatically run the experiments in 8-shot, 16-shot, 32-shot and \nstandard supervised settings with both the procedures of train, eval and test. We just choose the random seed to be 1 as an example in our code. Actually you can perform multiple experments with different seeds.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 17,
      "date": "Thu, 23 Dec 2021 19:23:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "relation-extraction",
      "prompt-tuning",
      "few-shot-learning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Train the KonwPrompt model on SEMEVAL with the following command:\n\n```bash\n>> bash scripts/semeval.sh  #: for roberta-large\n```\nAs the scripts  for `TACRED-Revist`, `Re-TACRED`, `Wiki80` included in our paper are also provided, you just need to run it like above example.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "As the data format of DialogRE is very different from other dataset, Class of processor is also different. \nTrain the KonwPrompt model on DialogRE with the following command:\n\n```bash\n>> bash scripts/dialogue.sh  #: for roberta-base\n```\n",
      "technique": "Header extraction"
    }
  ]
}