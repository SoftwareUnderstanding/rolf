{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2106.01954",
      "https://arxiv.org/abs/2102.01752",
      "https://arxiv.org/abs/2106.00736",
      "https://arxiv.org/abs/1706.08500",
      "https://arxiv.org/abs/2106.01954"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Weights & Biases](https://wandb.ai) developer tools for machine learning;\n- [CelebA page](http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html) with faces dataset and [this page](https://www.kaggle.com/jessicali9530/celeba-dataset) with its aligned 64x64 version;\n- [pytorch-fid repo](https://github.com/mseitzer/pytorch-fid) to compute [FID](https://arxiv.org/abs/1706.08500) score;\n- [UNet architecture](https://github.com/milesial/Pytorch-UNet) for transporter network;\n- [ResNet architectures](https://github.com/harryliew/WGAN-QC) for generator and discriminator;\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{korotin2021neural,\n  title={Do Neural Optimal Transport Solvers Work? A Continuous Wasserstein-2 Benchmark},\n  author={Korotin, Alexander and Li, Lingxiao and Genevay, Aude and Solomon, Justin and Filippov, Alexander and Burnaev, Evgeny},\n  journal={arXiv preprint arXiv:2106.01954},\n  year={2021}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{korotin2021neural,\n  title={Do Neural Optimal Transport Solvers Work? A Continuous Wasserstein-2 Benchmark},\n  author={Korotin, Alexander and Li, Lingxiao and Genevay, Aude and Solomon, Justin and Filippov, Alexander and Burnaev, Evgeny},\n  journal={arXiv preprint arXiv:2106.01954},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9842683637089953
      ],
      "excerpt": "This is the official Python implementation of the NeurIPS 2021 paper Do Neural Optimal Transport Solvers Work? A Continuous Wasserstein-2 Benchmark (paper on arxiv) by Alexander Korotin, Lingxiao Li, Aude Genevay, Justin Solomon, Alexander Filippov and Evgeny Burnaev. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8179708844694392,
        0.8962455610920044
      ],
      "excerpt": "Repository for Wasserstein-2 Generative Networks paper. \nRepository for Continuous Wasserstein-2 Barycenter Estimation without Minimax Optimization paper. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iamalexkorotin/Wasserstein2Benchmark",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-11T11:25:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T16:01:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8669748090319087,
        0.9273805818852531,
        0.9314085904849616,
        0.9652050256284443,
        0.9640190315667456,
        0.9022713969565378
      ],
      "excerpt": "This is the official Python implementation of the NeurIPS 2021 paper Do Neural Optimal Transport Solvers Work? A Continuous Wasserstein-2 Benchmark (paper on arxiv) by Alexander Korotin, Lingxiao Li, Aude Genevay, Justin Solomon, Alexander Filippov and Evgeny Burnaev. \nThe repository contains a set of continuous benchmark measures for testing optimal transport solvers for quadratic cost (Wasserstein-2 distance), the code for optimal transport solvers and their evaluation. \nRepository for Wasserstein-2 Generative Networks paper. \nRepository for Continuous Wasserstein-2 Barycenter Estimation without Minimax Optimization paper. \nRepository for Continuous Regularized Wasserstein Barycenters paper. \nRepository for Large-Scale Wasserstein Gradient Flows paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8341942561906039,
        0.9820715580690835
      ],
      "excerpt": "All the experiments are issued in the form of pretty self-explanatory jupyter notebooks (notebooks/). Auxilary source code is moved to .py modules (src/). Continuous benchmark pairs are stored as .pt checkpoints (benchmarks/). \nWe provide all the code to evaluate existing dual OT solvers on our benchmark pairs. The qualitative results are shown below. For quantitative results, see the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9247684287317381
      ],
      "excerpt": "For [QC] solver we used the code from the official WGAN-QC repo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8963745024459224
      ],
      "excerpt": "This code is provided for completeness and is not intended to be used to retrain existing benchmark pairs, but might be used as the base to train new pairs on new datasets. High-dimensional benchmak pairs can be trained from scratch. Training images benchmark pairs requires generator network checkpoints. We used WGAN-QC model to provide such checkpoints. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A set of tests for evaluating large-scale algorithms for Wasserstein-2 transport maps computation.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iamalexkorotin/Wasserstein2Benchmark/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 22 Dec 2021 00:21:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/iamalexkorotin/Wasserstein2Benchmark/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "iamalexkorotin/Wasserstein2Benchmark",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/LS_test_hd_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/W2_test_hd_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/QC_test_hd_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/MM-B_test_hd_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/QC_test_images_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/MM_test_images_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/MM_test_image_generation.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/MM-B_test_images_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/MM_test_hd_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/W2_train_images_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/W2_test_images_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/MMv1_test_hd_benchmark.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/W2_test_image_generation.ipynb",
      "https://raw.githubusercontent.com/iamalexkorotin/Wasserstein2Benchmark/main/notebooks/W2_train_hd_benchmark.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.9484083487441513
      ],
      "excerpt": "from src import map_benchmark as mbm \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8014288176490162
      ],
      "excerpt": "Y_true = benchmark.map_fwd(X, nograd=True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8360724604347454
      ],
      "excerpt": "<p align=\"center\"><img src=\"pics/hd_benchmark.png\" width=\"700\" /></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8360724604347454
      ],
      "excerpt": "<p align=\"center\"><img src=\"pics/images_benchmark.png\" width=\"800\" /></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8360724604347454
      ],
      "excerpt": "<p align=\"center\"><img src=\"pics/images_generation.png\" width=\"800\" /></p> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/iamalexkorotin/Wasserstein2Benchmark/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Continuous Wasserstein-2 Benchmark",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Wasserstein2Benchmark",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "iamalexkorotin",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iamalexkorotin/Wasserstein2Benchmark/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The implementation is GPU-based. Single GPU (~GTX 1080 ti) is enough to run each particular experiment. Tested with\n\n`torch==1.3.0 torchvision==0.4.1`\n\nThe code might not run as intended in newer `torch` versions.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Wed, 22 Dec 2021 00:21:20 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "generative-model",
      "optimal-transport",
      "wasserstein-2-distance",
      "benchmark",
      "solvers"
    ],
    "technique": "GitHub API"
  }
}