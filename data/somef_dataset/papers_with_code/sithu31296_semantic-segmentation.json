{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385",
      "https://arxiv.org/abs/1812.01187",
      "https://arxiv.org/abs/1801.04381",
      "https://arxiv.org/abs/1905.02244",
      "https://arxiv.org/abs/2106.13797",
      "https://arxiv.org/abs/2105.13677v3",
      "https://arxiv.org/abs/2108.05894",
      "https://arxiv.org/abs/1411.4038",
      "https://arxiv.org/abs/1807.10221",
      "https://arxiv.org/abs/1808.00897",
      "https://arxiv.org/abs/1901.02446",
      "https://arxiv.org/abs/2002.10120",
      "https://arxiv.org/abs/2105.15203v2",
      "https://arxiv.org/abs/2108.07058",
      "https://arxiv.org/abs/2109.10322",
      "https://arxiv.org/abs/1909.00948",
      "https://arxiv.org/abs/2004.02147v1",
      "https://arxiv.org/abs/2101.06085",
      "https://arxiv.org/abs/1612.01105",
      "https://arxiv.org/abs/2107.00782",
      "https://arxiv.org/abs/2105.15203",
      "https://arxiv.org/abs/2101.06085",
      "https://arxiv.org/abs/2107.00782 "
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@ARTICLE{Yucondnet21,\n  author={Yu, Changqian and Shao, Yuanjie and Gao, Changxin and Sang, Nong},\n  journal={IEEE Signal Processing Letters}, \n  title={CondNet: Conditional Classifier for Scene Segmentation}, \n  year={2021},\n  volume={28},\n  number={},\n  pages={758-762},\n  doi={10.1109/LSP.2021.3070472}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{Li2020SRNet,\n  title={Towards Efficient Scene Understanding via Squeeze Reasoning},\n  author={Xiangtai Li and Xia Li and Ansheng You and Li Zhang and Guang-Liang Cheng and Kuiyuan Yang and Y. Tong and Zhouchen Lin},\n  journal={ArXiv},\n  year={2020},\n  volume={abs/2011.03308}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{sfnet,\n  title={Semantic Flow for Fast and Accurate Scene Parsing},\n  author={Li, Xiangtai and You, Ansheng and Zhu, Zhen and Zhao, Houlong and Yang, Maoke and Yang, Kuiyuan and Tong, Yunhai},\n  booktitle={ECCV},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{chao2019hardnet,\n  title={HarDNet: A Low Memory Traffic Network}, \n  author={Ping Chao and Chao-Yang Kao and Yu-Shan Ruan and Chien-Hsiang Huang and Youn-Long Lin},\n  year={2019},\n  eprint={1909.00948},\n  archivePrefix={arXiv},\n  primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{Liu2021PSA,\n  title={Polarized Self-Attention: Towards High-quality Pixel-wise Regression},\n  author={Huajun Liu and Fuqiang Liu and Xinyi Fan and Dong Huang},\n  journal={Arxiv Pre-Print arXiv:2107.00782 },\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{wang2021pvtv2,\n  title={PVTv2: Improved Baselines with Pyramid Vision Transformer}, \n  author={Wenhai Wang and Enze Xie and Xiang Li and Deng-Ping Fan and Kaitao Song and Ding Liang and Tong Lu and Ping Luo and Ling Shao},\n  year={2021},\n  eprint={2106.13797},\n  archivePrefix={arXiv},\n  primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{huang2021fapn,\n  title={FaPN: Feature-aligned Pyramid Network for Dense Image Prediction}, \n  author={Shihua Huang and Zhichao Lu and Ran Cheng and Cheng He},\n  year={2021},\n  eprint={2108.07058},\n  archivePrefix={arXiv},\n  primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{zhang2021rest,\n  title={ResT: An Efficient Transformer for Visual Recognition}, \n  author={Qinglong Zhang and Yubin Yang},\n  year={2021},\n  eprint={2105.13677},\n  archivePrefix={arXiv},\n  primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{hong2021deep,\n  title={Deep Dual-resolution Networks for Real-time and Accurate Semantic Segmentation of Road Scenes},\n  author={Hong, Yuanduo and Pan, Huihui and Sun, Weichao and Jia, Yisong},\n  journal={arXiv preprint arXiv:2101.06085},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{xiao2018unified,\n  title={Unified Perceptual Parsing for Scene Understanding}, \n  author={Tete Xiao and Yingcheng Liu and Bolei Zhou and Yuning Jiang and Jian Sun},\n  year={2018},\n  eprint={1807.10221},\n  archivePrefix={arXiv},\n  primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{xie2021segformer,\n  title={SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers},\n  author={Xie, Enze and Wang, Wenhai and Yu, Zhiding and Anandkumar, Anima and Alvarez, Jose M and Luo, Ping},\n  journal={arXiv preprint arXiv:2105.15203},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9958387685202749
      ],
      "excerpt": "<a href=\"https://colab.research.google.com/github/sithu31296/semantic-segmentation/blob/main/tutorial.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "10+ SOTA Backbones \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9531737947012585,
        0.9936810522188035,
        0.9862029344057983,
        0.9782759268835692,
        0.9490753289412834,
        0.9218387569487573,
        0.8356013927728488
      ],
      "excerpt": "* ResNet (CVPR 2016) \n* ResNetD (ArXiv 2018) \n* MobileNetV2 (CVPR 2018) \n* MobileNetV3 (ICCV 2019) \n* PVTv2 (ArXiv 2021) \n* ResT (ArXiv 2021) \n* MicroNet (ICCV 2021) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9819107666668762,
        0.9884759456492003,
        0.9884759456492003,
        0.9868512987915664,
        0.9104388306336967,
        0.9490753289412834,
        0.8356013927728488,
        0.9531201062655354
      ],
      "excerpt": "* FCN (CVPR 2015) \n* UPerNet (ECCV 2018) \n* BiSeNetv1 (ECCV 2018) \n* FPN (CVPR 2019) \n* SFNet (ECCV 2020) \n* SegFormer (ArXiv 2021) \n* FaPN (ICCV 2021) \n* CondNet (IEEE SPL 2021) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9782759268835692
      ],
      "excerpt": "* FCHarDNet (ICCV 2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834
      ],
      "excerpt": "* DDRNet (ArXiv 2021) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9868512987915664,
        0.9490753289412834
      ],
      "excerpt": "* PPM (CVPR 2017) \n* PSA (ArXiv 2021) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9287913210266059
      ],
      "excerpt": "SUN RGB-D | Indoor Scene Parsing | 37 | 2,666 | 2,619 | 5,050<sup>+labels | - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891063347747424
      ],
      "excerpt": "LIP | Multi-Human Parsing | 20 | 30,462 | 10,000 | - | - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9830415875246086
      ],
      "excerpt": "* https://github.com/CoinCheung/BiSeNet \n* https://github.com/open-mmlab/mmsegmentation \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sithu31296/semantic-segmentation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-02T10:39:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-25T04:30:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8696619352540711
      ],
      "excerpt": "<p>Easy to use and customizable SOTA Semantic Segmentation models with abundant datasets in PyTorch</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8881913960830243
      ],
      "excerpt": "PyTorch, ONNX, TFLite and OpenVINO Inference  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176103190109898
      ],
      "excerpt": "Method | Backbone | mIoU (%) | Params <br><sup>(M) | GFLOPs <br><sup>(512x512) | Weights \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8188437479438461
      ],
      "excerpt": "Method | Backbone | mIoU (%) | Params (M) | GFLOPs | Img Size | Weights \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "  <summary><strong>Augmentations</strong> (click to expand)</summary> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8471779931278677
      ],
      "excerpt": "Spatial-level Transforms: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9032750980945194
      ],
      "excerpt": "  <summary><strong>Configuration</strong> (click to expand)</summary> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8446169606639999
      ],
      "excerpt": "To make an inference, edit the parameters of the config file from below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577702579833824
      ],
      "excerpt": "* Set `TEST` >> `MODEL_PATH` to pretrained weights of the testing model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8162550677048906
      ],
      "excerpt": "To convert to OpenVINO and TFLite, see [torch_optimize](https://github.com/sithu31296/torch_optimize). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "  <summary><strong>Citations</strong> (click to expand)</summary> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "SOTA Semantic Segmentation Models in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sithu31296/semantic-segmentation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Tue, 28 Dec 2021 14:25:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sithu31296/semantic-segmentation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sithu31296/semantic-segmentation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sithu31296/semantic-segmentation/main/tutorial.ipynb",
      "https://raw.githubusercontent.com/sithu31296/semantic-segmentation/main/aug_test.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9330068709332219,
        0.8958679288478478
      ],
      "excerpt": "MobileNetV2 | 1.0 | 71.9 | 3 | 300M | [download](https://download.pytorch.org/models/mobilenet_v2-b0353104.pth) \nMobileNetV3 | S\\|L | 67.7`\\|`74.0 | 3`\\|`5 | 56M`\\|`219M | [S](https://download.pytorch.org/models/mobilenet_v3_small-047dcff4.pth)\\|[L](https://download.pytorch.org/models/mobilenet_v3_large-8738ca79.pth) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8284580884493082
      ],
      "excerpt": "Datasets should have the following structure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8263011163541194
      ],
      "excerpt": "|__ COCO \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9431210945663379,
        0.8837680365796365
      ],
      "excerpt": "  <summary><strong>Requirements</strong></summary> \n* python >= 3.6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9966179045153072
      ],
      "excerpt": "Other requirements can be installed with `pip install -r requirements.txt`. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8908056087913143
      ],
      "excerpt": "To train with a single GPU: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851004076518865
      ],
      "excerpt": "#:#: example using ade20k pretrained models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406,
        0.8214144698265419,
        0.926447552395659
      ],
      "excerpt": "* https://github.com/CoinCheung/BiSeNet \n* https://github.com/open-mmlab/mmsegmentation \n* https://github.com/rwightman/pytorch-image-models \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9054113144213709
      ],
      "excerpt": "Dataset | Type | Categories | Train <br><sup>Images | Val<br><sup>Images | Test<br><sup>Images | Image Size<br><sup>(HxW) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "            |__ training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "            |__ training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "        |__ train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "        |__ test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "        |__ train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "        |__ test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "    |__ train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "    |__ test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454553703666403
      ],
      "excerpt": "                |__ train.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "    |__ train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "            |__ Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "    |__ TEST \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "    |__ training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "    |__ train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "    |__ test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.8633989807152664
      ],
      "excerpt": "    |__ train \n    |__ test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8582050490030132
      ],
      "excerpt": "Check out the notebook [here](.aug_test.ipynb) to test the augmentation effects. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9068343700986805
      ],
      "excerpt": "$ python tools/train.py --cfg configs/CONFIG_FILE.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.859004300119123
      ],
      "excerpt": "To train with multiple gpus, set `DDP` field in config file to `true` and run as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8510446004558355
      ],
      "excerpt": "$ python -m torch.distributed.launch --nproc_per_node=2 --use_env tools/train.py --cfg configs/<CONFIG_FILE_NAME>.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.81481575967611
      ],
      "excerpt": "Make sure to set `MODEL_PATH` of the configuration file to your trained model directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8655306694916706
      ],
      "excerpt": "$ python tools/val.py --cfg configs/<CONFIG_FILE_NAME>.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8484099238107792,
        0.8730463114192429,
        0.8953220158140446,
        0.8938533902517651
      ],
      "excerpt": "* Change `MODEL` >> `NAME` and `VARIANT` to your desired pretrained model. \n* Change `DATASET` >> `NAME` to the dataset name depending on the pretrained model. \n* Set `TEST` >> `MODEL_PATH` to pretrained weights of the testing model. \n* Change `TEST` >> `FILE` to the file or image folder path you want to test. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8051523649978138
      ],
      "excerpt": "$ python tools/infer.py --cfg configs/ade20k.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9166381842397849
      ],
      "excerpt": "Example test results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.817551603246621
      ],
      "excerpt": "$ python tools/export.py --cfg configs/<CONFIG_FILE_NAME>.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8346647676834683
      ],
      "excerpt": "$ python scripts/onnx_infer.py --model <ONNX_MODEL_PATH> --img-path <TEST_IMAGE_PATH> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8346647676834683
      ],
      "excerpt": "$ python scripts/openvino_infer.py --model <OpenVINO_MODEL_PATH> --img-path <TEST_IMAGE_PATH> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8346647676834683
      ],
      "excerpt": "$ python scripts/tflite_infer.py --model <TFLite_MODEL_PATH> --img-path <TEST_IMAGE_PATH> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sithu31296/semantic-segmentation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 sithu3\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<div align=\"center\">Semantic Segmentation</div>",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "semantic-segmentation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sithu31296",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sithu31296/semantic-segmentation/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "sithu31296",
        "body": "Add CondNet and bug fixes.",
        "dateCreated": "2021-09-24T18:30:02Z",
        "datePublished": "2021-09-24T18:33:58Z",
        "html_url": "https://github.com/sithu31296/semantic-segmentation/releases/tag/v0.2.6",
        "name": "v0.2.6",
        "tag_name": "v0.2.6",
        "tarball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/tarball/v0.2.6",
        "url": "https://api.github.com/repos/sithu31296/semantic-segmentation/releases/50226801",
        "zipball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/zipball/v0.2.6"
      },
      {
        "authorType": "User",
        "author_name": "sithu31296",
        "body": "- Add FPN and FaPN heads\r\n- Some fixes and improvements",
        "dateCreated": "2021-09-12T16:00:59Z",
        "datePublished": "2021-09-12T16:03:44Z",
        "html_url": "https://github.com/sithu31296/semantic-segmentation/releases/tag/v0.2.5",
        "name": "v0.2.5",
        "tag_name": "v0.2.5",
        "tarball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/tarball/v0.2.5",
        "url": "https://api.github.com/repos/sithu31296/semantic-segmentation/releases/49415476",
        "zipball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/zipball/v0.2.5"
      },
      {
        "authorType": "User",
        "author_name": "sithu31296",
        "body": "New Datasets:\r\n* Sun RGBD\r\n* Mapillary Vistas\r\n* SUIM\r\n\r\nNew Backbones:\r\n* PVTv2, ResT, CycleMLP\r\n\r\nNew Module:\r\n* PSA\r\n\r\nNew Model:\r\n* DDRNet\r\n\r\nAdd tutorial colab notebook and augmentation testing notebook.",
        "dateCreated": "2021-08-25T13:01:38Z",
        "datePublished": "2021-08-25T13:09:42Z",
        "html_url": "https://github.com/sithu31296/semantic-segmentation/releases/tag/v0.2.0",
        "name": "Add Colab Notebook and Backbones",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/tarball/v0.2.0",
        "url": "https://api.github.com/repos/sithu31296/semantic-segmentation/releases/48427921",
        "zipball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "sithu31296",
        "body": "Datasets:\r\n\r\n- ADE20K\r\n- CityScapes\r\n- CamVid\r\n- PASCAL-Context\r\n- COCO-Stuff\r\n- MHPv1/v2\r\n- LIP\r\n- CIHP\r\n- ATR\r\n\r\nModel:\r\n\r\n- SegFormer",
        "dateCreated": "2021-08-06T16:45:50Z",
        "datePublished": "2021-08-06T16:51:33Z",
        "html_url": "https://github.com/sithu31296/semantic-segmentation/releases/tag/v0.1.0",
        "name": "Updated datasets and segformer model",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/tarball/v0.1.0",
        "url": "https://api.github.com/repos/sithu31296/semantic-segmentation/releases/47441185",
        "zipball_url": "https://api.github.com/repos/sithu31296/semantic-segmentation/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 68,
      "date": "Tue, 28 Dec 2021 14:25:09 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "semantic-segmentation",
      "pytorch",
      "transformer",
      "vision-transformer",
      "cityscapes",
      "ade20k",
      "camvid",
      "coco-stuff",
      "pascal-context",
      "deep-learning",
      "dataset"
    ],
    "technique": "GitHub API"
  }
}