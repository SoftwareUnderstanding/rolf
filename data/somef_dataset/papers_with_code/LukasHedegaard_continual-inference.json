{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2106.00050",
      "https://arxiv.org/abs/2106.00050",
      "https://arxiv.org/abs/2106.00050",
      "https://arxiv.org/abs/2106.00050"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This library\n```bibtex\n@article{hedegaard2021colib,\n  title={Continual Inference Library},\n  author={Lukas Hedegaard},\n  journal={GitHub. Note: https://github.com/LukasHedegaard/continual-inference},\n  year={2021}\n}\n```\n\n[Continual 3D CNNs](https://github.com/LukasHedegaard/co3d) [![Paper](http://img.shields.io/badge/paper-arxiv.2106.00050-B31B1B.svg)](https://arxiv.org/abs/2106.00050)\n```bibtex\n@article{hedegaard2021co3d,\n  title={Continual 3D Convolutional Neural Networks for Real-time Processing of Videos},\n  author={Lukas Hedegaard and Alexandros Iosifidis},\n  journal={preprint, arXiv:2106.00050},\n  year={2021}\n}\n```\n\n<!-- [Continual Skeletons](https://github.com/LukasHedegaard/continual-skeletons)\n```bibtex\n@article{hedegaard2021coskelleton,\n  title={Continual Skeletons for Efficient Online Activity Recognition},\n  author={Lukas Hedegaard and Negar Heidari and Alexandros Iosifidis},\n  journal={TBD},\n  year={2021}\n}\n``` -->\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{hedegaard2021coskelleton,\n  title={Continual Skeletons for Efficient Online Activity Recognition},\n  author={Lukas Hedegaard and Negar Heidari and Alexandros Iosifidis},\n  journal={TBD},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{hedegaard2021co3d,\n  title={Continual 3D Convolutional Neural Networks for Real-time Processing of Videos},\n  author={Lukas Hedegaard and Alexandros Iosifidis},\n  journal={preprint, arXiv:2106.00050},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{hedegaard2021colib,\n  title={Continual Inference Library},\n  author={Lukas Hedegaard},\n  journal={GitHub. Note: https://github.com/LukasHedegaard/continual-inference},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9156566588472104
      ],
      "excerpt": "      nn.Conv3D          (spatio-temporal 3D conv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9156566588472104
      ],
      "excerpt": "co.Conv3d  co.Conv3d  co.Conv3d  (continual spatio-temporal 3D conv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": " -----------------    (-: aggregation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": " -----------------    (-: aggregation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9308684666991512
      ],
      "excerpt": "co.Residual - Residual wrapper for modules. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9480067720082448
      ],
      "excerpt": "    <!-- - co.Residual - residual connection, which automatically adds delay if needed --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187756947909643
      ],
      "excerpt": "residual = co.Sequential( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        co.Conv3d(32, 32, kernel_size=3, padding=1), \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9898693455050575
      ],
      "excerpt": "residual = co.Residual(co.Conv3d(32, 32, kernel_size=3, padding=1)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9980677486827262
      ],
      "excerpt": "  MobileNetV2 Inverted residual block. Source: https://arxiv.org/pdf/1801.04381.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187756947909643
      ],
      "excerpt": "mb_conv = co.Residual( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "      co.Conv3d(32, 64, kernel_size=(1, 1, 1)), \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "      co.Conv3d(64, 32, kernel_size=(1, 1, 1)), \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9869405348645832
      ],
      "excerpt": "  Adapted from: https://arxiv.org/pdf/1709.01507.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187756947909643
      ],
      "excerpt": "se = co.Residual( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9369409481226215
      ],
      "excerpt": "  Inception module with dimension reductions. Source: https://arxiv.org/pdf/1409.4842v1.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        norm_relu(co.Conv3d(192, 32, kernel_size=1), 32), \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LukasHedegaard/continual-inference",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-09T10:30:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-13T18:56:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8920314799613506,
        0.8526544006817706,
        0.8414121691505714
      ],
      "excerpt": "Continual Inference Networks are a neural network subset, which can make new predictions efficiently for each new time-step. \nThey are ideal for online detection and monitoring scenarios, but can also be used succesfully in offline situations. \nSome example CINs and non-CINs are illustrated below to  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8901767600744669
      ],
      "excerpt": "nn.Conv2D  nn.Conv2D  nn.Conv2D   (spatial 2D conv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9874700992997082,
        0.9178330945221543,
        0.9633557053261372
      ],
      "excerpt": "Here, we see that all network-modules, which do not utilise temporal information can be used for an Continual Inference Network (e.g. nn.Conv1d and nn.Conv2d on spatial data such as an image).  \nMoreover, recurrent modules (e.g. LSTM and GRU), that summarize past events in an internal state are also useable in CINs. \nHowever, modules that operate on temporal data with the assumption that the more temporal context is available than the current frame cannot be directly applied. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958920730659343
      ],
      "excerpt": "      nn.Conv3D          (spatio-temporal 3D conv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "  -----------------      (concatenate frames to clip) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9412104814360184
      ],
      "excerpt": "Sometimes, though, the computations in such modules, can be cleverly restructured to work for online inference as well! \ud83d\udcaa  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958920730659343
      ],
      "excerpt": "co.Conv3d  co.Conv3d  co.Conv3d  (continual spatio-temporal 3D conv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8990088306277302
      ],
      "excerpt": "Here, the \u03f4 output of the Conv3D and ConvCo3D are identical! \u2728 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9290150469223126
      ],
      "excerpt": "Below, we see principle sketches, which compare regular and continual convolutions during online / continual inference. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9444977638056127
      ],
      "excerpt": "    A regular temporal convolutional layer leads to redundant computations during online processing of video clips, as illustrated by the repeated convolution of inputs (green b,c,d) with a kernel (blue \u03b1,\u03b2) in the temporal dimension. Moreover, prior inputs (b,c,d) must be stored between time-steps for online processing tasks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.985137174150232
      ],
      "excerpt": "    An input (green d or e) is convolved with a kernel (blue \u03b1, \u03b2). The intermediary feature-maps corresponding to all but the last temporal position are stored, while the last feature map and prior memory are summed to produce the resulting output. For a continual stream of inputs, Continual Convolutions produce identical outputs to regular convolutions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9900914633768965
      ],
      "excerpt": "Comparing Figures (1) and (2), we see that Continual Convolutions get rid of computational redundancies. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9240276190781951,
        0.9754458639289717,
        0.891266161398618
      ],
      "excerpt": "\ud83d\udca1  The longer the length of the temporal sequence, the larger the savings. \nFor more information, we refer to the paper on Continual Convolutions. \nThe library components feature three distinct forward modes, which are handy for different situations, namely forward, forward_step, and forward_steps: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9904178885756668
      ],
      "excerpt": "This method is handy for effient training on clip-based data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9614381429350577
      ],
      "excerpt": "Performs a forward computation for a single frame and continual states are updated accordingly. This is the mode to use for continual inference. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8996904016671521
      ],
      "excerpt": "The computation is performed frame-by-frame and continual states are updated accordingly. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.981080066975351
      ],
      "excerpt": "This mode is handy for initialising the network on a whole clip (multipleframes) before the forward is usead for continual inference.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9694755093990225,
        0.8632380351592424
      ],
      "excerpt": "Below is a list of the modules and utilities included in the library: \n<!-- TODO: Replace with link to docs once they are set up --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9317669889990294
      ],
      "excerpt": "co.Sequential - Sequential wrapper for modules. This module automatically performs conversions of torch.nn modules, which are safe during continual inference. These include all batch normalisation and activation function.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8578787955421501
      ],
      "excerpt": "co.Zero - Maps input to output of zeros. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8899645155070716,
        0.8929809300097754
      ],
      "excerpt": "co.forward_stepping - functional wrapper, which enhances temporally local torch.nn modules with the forward_stepping functions. \nIn addition, we support interoperability with a wide range of modules from torch.nn: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109118246950877
      ],
      "excerpt": "  Squeeze-and-Excitation block.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9611856501761117
      ],
      "excerpt": "The library modules are built to integrate seamlessly with other PyTorch projects. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Building blocks for Continual Inference Networks in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LukasHedegaard/continual-inference/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 01:55:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/LukasHedegaard/continual-inference/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "LukasHedegaard/continual-inference",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\npip install continual-inference\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8129286962114062
      ],
      "excerpt": "co.Broadcast - Broadcast one stream to multiple. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073466793369625
      ],
      "excerpt": "co.continual - conversion function from torch.nn modules to co modules. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "- pytorch-lightning \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "O          O          O        (output) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "\u0398              (output)    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "O          O          \u0398      (output) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "O            (O: output) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "O            (O: output) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8370159244607625,
        0.8140599360336075
      ],
      "excerpt": "co.Add - Adds a constant value. \nco.Multiply - Multiplies with a constant factor. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8075489396014769
      ],
      "excerpt": "  <img src=\"https://raw.githubusercontent.com/LukasHedegaard/continual-inference/main/figures/examples/mb_conv.png\" width=\"150\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123005463356274
      ],
      "excerpt": "  <img src=\"https://raw.githubusercontent.com/LukasHedegaard/continual-inference/main/figures/examples/se_block.png\" width=\"230\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123005463356274
      ],
      "excerpt": "  <img src=\"https://raw.githubusercontent.com/LukasHedegaard/continual-inference/main/figures/examples/inception_block.png\" width=\"450\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/LukasHedegaard/continual-inference/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "url": "https://raw.githubusercontent.com/LukasHedegaard/continual-inference/main/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "##### \\*We match PyTorch interfaces exacly. This reduces the codefactor to \"A-\" due to method arguments named \"input\".",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "continual-inference",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "LukasHedegaard",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LukasHedegaard/continual-inference/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Call-mode specific functions in `co.Lambda`",
        "dateCreated": "2021-12-13T18:56:11Z",
        "datePublished": "2021-12-13T18:56:42Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.15.3",
        "name": "Upgraded Lambda",
        "tag_name": "v0.15.3",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.15.3",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/55212601",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.15.3"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Support for functor in `co.Lambda`\r\n\r\n### Remove\r\n- `nn.LayerNorm` from automatically convertible modules",
        "dateCreated": "2021-12-11T07:50:18Z",
        "datePublished": "2021-12-11T07:51:16Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.15.2",
        "name": "Update Lambda and auto convertible modules",
        "tag_name": "v0.15.2",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.15.2",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/55097956",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.15.2"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "Added `nn.LayerNorm` to automatically convertible modules",
        "dateCreated": "2021-12-10T14:44:03Z",
        "datePublished": "2021-12-10T14:45:06Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.15.1",
        "name": "Update auto convertible nn modules",
        "tag_name": "v0.15.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.15.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/55053264",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.15.1"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- `ParallelDispatch` module.\r\n- `Conditional` predicate print in `__repr__`.\r\n\r\n### Fixed\r\n- Sequential `padding` computation.\r\n- `Lambda` `__repr__` function prints.\r\n\r\n### Removed\r\n- CI testing for python v3.6.",
        "dateCreated": "2021-10-29T14:17:33Z",
        "datePublished": "2021-10-29T14:20:18Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.15.0",
        "name": "`ParallelDispatch` module, updated prints and minor bugfixes ",
        "tag_name": "v0.15.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.15.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/52319459",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.15.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Added `phantom_padding` to `Residual`.\r\n- Added `receptive_field` property.\r\n- Added `Reshape` module.\r\n\r\n### Changed\r\n- Rename `forward_shrink` argument to `auto_shrink` in `Delay`.\r\n- Torch requirement to v1.9.\r\n- Replace `Lambda` unsqueeze_step with takes_time and new default to False.\r\n\r\n## Fixed\r\n- `padding` property in sequence.\r\n- `delay` property in sequence.\r\n- `strict` mode in `load_state_dict`.\r\n\r\n## Removed\r\n- Assertion error in `BroadcastReduce` for modules with different delays.\r\n",
        "dateCreated": "2021-09-20T08:48:52Z",
        "datePublished": "2021-09-20T08:49:16Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.14.0",
        "name": "Receptive field, Phantom padding, Reshape, Lambda update and various fixes",
        "tag_name": "v0.14.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.14.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/49837584",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.14.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Add `forward_shrink` option to `Delay` and `Residual`.",
        "dateCreated": "2021-09-14T13:28:05Z",
        "datePublished": "2021-09-14T13:28:46Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.13.0",
        "name": "Add `forward_shrink` option to `Delay` and `Residual`",
        "tag_name": "v0.13.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.13.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/49528904",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.13.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Add `Constant`.\r\n- Add `Zero`.\r\n- Add `One`.\r\n\r\n### Fixed\r\n- `co.ConvXd` cuda compatibility.",
        "dateCreated": "2021-09-14T08:36:09Z",
        "datePublished": "2021-09-14T08:38:04Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.12.0",
        "name": "GPU support and Constant modules",
        "tag_name": "v0.12.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.12.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/49510234",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.12.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Add `flatten_state_dict` state variable.\r\n\r\n### Removed\r\n- Debug message for Convolutions with padding.",
        "dateCreated": "2021-09-08T12:18:39Z",
        "datePublished": "2021-09-08T12:19:13Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.11.3",
        "name": "Add `flatten_state_dict` state variable.",
        "tag_name": "v0.11.3",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.11.3",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/49194308",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.11.3"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Fixed\r\n- `call_mode` for `Linear`.",
        "dateCreated": "2021-09-08T09:18:11Z",
        "datePublished": "2021-09-08T09:19:14Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.11.2",
        "name": "Fix `call_mode` for `co.Linear`",
        "tag_name": "v0.11.2",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.11.2",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/49183431",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.11.2"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Add `call_mode`.\r\n- Add `warm_up`.\r\n\r\n### Changed\r\n- Container implementations to use `__call__` with alternating call_modes. This change was necessary to propperly trigger the torch hooks needed in `ptflops`.\r\n\r\n### Fixed\r\n- `ptflops` compatibility.",
        "dateCreated": "2021-09-06T12:18:37Z",
        "datePublished": "2021-09-06T12:22:55Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.11.1",
        "name": "Fix PyTorch hooks compatibility",
        "tag_name": "v0.11.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.11.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/49068907",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.11.1"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- `co.Linear` module.\r\n- Improved repr in `co.Lambda`.\r\n- Option to skip unsqueeze in `co.Lambda.forward_step`.",
        "dateCreated": "2021-08-31T10:26:04Z",
        "datePublished": "2021-08-31T10:28:28Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.11.0",
        "name": "Add Linear and improve Lambda ",
        "tag_name": "v0.11.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.11.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48733279",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.11.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Changed\r\n- Renamed `co.Parallel` to `co.BroadcastReduce`.\r\n\r\n### Added\r\n- `co.Broadcast` module.\r\n- new `co.Parallel` module.\r\n- `co.Reduce` module.\r\n- Automatic inference of `co.Broadcast.num_streams` in `co.Sequential`.",
        "dateCreated": "2021-08-27T11:42:41Z",
        "datePublished": "2021-08-27T11:43:47Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.10.0",
        "name": "Multistream support",
        "tag_name": "v0.10.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.10.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48566344",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.10.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- `co.Lambda` module.\r\n- `co.Add` module.\r\n- `co.Multiply` module.\r\n- `co.Unity` module.\r\n- `co.Conditional` module.",
        "dateCreated": "2021-08-26T11:07:59Z",
        "datePublished": "2021-08-26T11:09:34Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.9.0",
        "name": "Closure and Conditional modules",
        "tag_name": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.9.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48492462",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.9.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Fixed\r\n- Bug in `forward_stepping`.\r\n- Bug in `clean_state`.",
        "dateCreated": "2021-08-26T08:13:53Z",
        "datePublished": "2021-08-26T08:15:05Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.8.1",
        "name": "Bug-fixes",
        "tag_name": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.8.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48481955",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.8.1"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Fixed\r\n- Bugs in `forward_step(s)` with `update_state=False`.\r\n\r\n### Changed\r\n- `forward_steps` interface to always include `pad_end` argument.\r\n- Name of \"interface.py\" to \"module.py\".\r\n- Implementations of `forward_step(s)` to be consolidated in CoModule.\r\n\r\n### Removed\r\n- `Padded` interface",
        "dateCreated": "2021-08-24T15:12:22Z",
        "datePublished": "2021-08-24T15:13:46Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.8.0",
        "name": "Another minor API change, bug-fixes and implementation restructure",
        "tag_name": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.8.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48363013",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.8.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Independent state_dict and load_state_dict functions.\r\n- Added nonempty check for aggregation functions in Parallel.\r\n- `update_state` argument to all `forward_step(s)` methods.\r\n- Additional tests for edge-cases\r\n\r\n### Changed\r\n- Changed default pad_end value to False.\r\n\r\n### Fixed\r\n- Continual interface and conversion to support both class and module.\r\n- Replicate padding in `co._ConvNd`",
        "dateCreated": "2021-08-24T08:18:57Z",
        "datePublished": "2021-08-24T08:23:48Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.7.0",
        "name": "Minor API change, bug-fixes and improved test-coverage",
        "tag_name": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.7.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48335379",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.7.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Changed\r\n- `co.Residual` modules to be unnamed. This allows the module state dicts to be flattened.",
        "dateCreated": "2021-08-23T09:20:00Z",
        "datePublished": "2021-08-23T09:21:04Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.6.1",
        "name": "Remove modules names in co.Residual",
        "tag_name": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.6.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48266702",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.6.1"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Added\r\n- Flattened state dict export and loading via a `flatten` argument. This feature improves interoperability complex modules, that were not originally constructed with the `co.Sequential` and `co.Parallel` building blocks.\r\n- Context manager for triggering flattened state_dict export and loading.\r\n",
        "dateCreated": "2021-08-23T08:51:54Z",
        "datePublished": "2021-08-23T08:53:20Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.6.0",
        "name": "Improved state interoperability with complex 3rd-party nets",
        "tag_name": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.6.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48265145",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.6.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Added\r\n- Support for zero-delay in `co.Delay`\r\n- Support for broadcasting in `co.Parallel`\r\n- Mul (hadamark product) aggregation in `co.Parallel`\r\n- Example of Squeeze and Excitation block\r\n\r\n## Changed\r\n- `co._PoolNd` attribute naming: \"temporal_\" removed as prefix for kernel_size, stride, dilation, and padding.\r\n",
        "dateCreated": "2021-08-20T09:13:31Z",
        "datePublished": "2021-08-20T09:15:06Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.5.0",
        "name": "_PoolNd attribute changes and Parallel improvements",
        "tag_name": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.5.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48168529",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.5.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Added\r\n- `co.Delay` handling for padding.\r\n- Handling of initialisation and strides in containers\r\n\r\n## Changed\r\n- `co.Conv` `build_from` behavior to not change dilation and stride. Argument overload supported instead. \r\n- `pad_start` and `pad_end` args to convolution and pooling modules `forward_steps`.\r\n- Behavior of modules while they initialise. Now, a TensorPlaceholder is passed for initialising steps.\r\n\r\n## Removed\r\n- Automatic unsqueeze in pooling.",
        "dateCreated": "2021-08-19T13:25:57Z",
        "datePublished": "2021-08-19T13:26:47Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.4.0",
        "name": "Improved handling of padding, strides and initialisation",
        "tag_name": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.4.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48114628",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.4.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Added\r\n- Support for dilation and stride in pooling\r\n- Support for dropout\r\n\r\n## Changed\r\n- Pooling API to match torch.nn better\r\n- `_ConvCoNd.forward_steps` doesn't invoke `clean_state` anymore",
        "dateCreated": "2021-08-18T14:05:05Z",
        "datePublished": "2021-08-18T14:06:38Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.3.1",
        "name": "Improved pooling and nn support",
        "tag_name": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.3.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/48047830",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.3.1"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Added\r\n- Automatic conversion of batch normalisation and activation functions\r\n\r\n## Fixed\r\n- Separate dilation and stride in pool\r\n\r\n## Changed\r\n- Conv forward to use temporal padding like (like nn.Conv)\r\n\r\n## Removed\r\n- `co.BatchNorm2d`",
        "dateCreated": "2021-08-17T12:43:24Z",
        "datePublished": "2021-08-17T12:44:31Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.2.2",
        "name": "Improved interoperability with torch.nn",
        "tag_name": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.2.2",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/47973825",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.2.2"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Changed\r\n- Renamed `unsqueezed` to `forward_stepping`.\r\n\r\n## Removed \r\n- Unused utility `Zeros`",
        "dateCreated": "2021-08-17T07:18:33Z",
        "datePublished": "2021-08-17T07:32:10Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.2.1",
        "name": "Minor refactor and cleanup",
        "tag_name": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.2.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/47955319",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.2.1"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "## Changed\r\n- Naming to match `torch.nn`. This lets the continual modules be used as drop-in replacements for `torch.nn` modules.\r\n- Renamed `forward_regular_unrolled` to `forward`, `forward_regular` to `forward_steps`, and `forward` for `forward_step`.\r\n- Renamed `from_regular` to `build_from`.\r\n- Renamed `continual` to `unsqueezed`.\r\n\r\n## Added\r\n- `Sequential` wrapper for sequential application of modules\r\n- `Parallel` wrapper for parallel application and aggregation of inputs\r\n- `Residual` wrapper for adding a unity residual to a module\r\n- `continual` conversion function\r\n- `register` function for 3rd party modules to register their conversion",
        "dateCreated": "2021-08-16T11:56:38Z",
        "datePublished": "2021-08-16T11:59:37Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.2.0",
        "name": "API changes, auto-conversions and containers",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.2.0",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/47904350",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "### Added\r\n- Pooling modules: MaxPoolCo1d, AvgPoolCo3d, MaxPoolCo3d, AdaptiveAvgPoolCo3d, AdaptiveMaxPoolCo3d",
        "dateCreated": "2021-08-11T11:28:58Z",
        "datePublished": "2021-08-11T11:42:04Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.1.2",
        "name": "Additional Pooling Modules",
        "tag_name": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.1.2",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/47666680",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.1.2"
      },
      {
        "authorType": "User",
        "author_name": "LukasHedegaard",
        "body": "This initial release publishes the basic building blocks for defining Continual Convolutional Networks.",
        "dateCreated": "2021-08-10T11:46:00Z",
        "datePublished": "2021-08-10T11:53:07Z",
        "html_url": "https://github.com/LukasHedegaard/continual-inference/releases/tag/v0.1.1",
        "name": "Initial public release",
        "tag_name": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/tarball/v0.1.1",
        "url": "https://api.github.com/repos/LukasHedegaard/continual-inference/releases/47599153",
        "zipball_url": "https://api.github.com/repos/LukasHedegaard/continual-inference/zipball/v0.1.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 01:55:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "deep-learning",
      "cnn"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`co` modules are weight-compatible drop-in replacement for `torch.nn`, enhanced with the capability of efficient _continual inference_:\n\n```python3\nimport torch\nimport continual as co\n                                                           \n#:                      B, C, T, H, W\nexample = torch.randn((1, 1, 5, 3, 3))\n\nconv = co.Conv3d(in_channels=1, out_channels=1, kernel_size=(3, 3, 3))\n\n#: Same exact computation as torch.nn.Conv3d \u2705\noutput = conv(example)\n\n#: But can also perform online inference efficiently \ud83d\ude80\nfirsts = conv.forward_steps(example[:, :, :4])\nlast = conv.forward_step(example[:, :, 4])\n\nassert torch.allclose(output[:, :, : conv.delay], firsts)\nassert torch.allclose(output[:, :, conv.delay], last)\n\n#: Temporal properties\nassert conv.receptive_field == 3\nassert conv.delay == 2\n```\n\nSee the \"Advanced Examples\" section for additional examples..\n\n",
      "technique": "Header extraction"
    }
  ]
}