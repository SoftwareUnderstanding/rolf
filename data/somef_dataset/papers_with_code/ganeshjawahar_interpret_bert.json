{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository would not be possible without the efforts of the creators/maintainers of the following libraries:\n* [pytorch-pretrained-BERT](https://github.com/huggingface/pytorch-pretrained-BERT) from huggingface\n* [SentEval](https://github.com/facebookresearch/SentEval) from facebookresearch\n* [bert-syntax](https://github.com/yoavg/bert-syntax) from yoavg\n* [tpdn](https://github.com/tommccoy1/tpdn) from tommccoy1\n* [rnn_agreement](https://github.com/TalLinzen/rnn_agreement) from TalLinzen\n* [Chu-Liu-Edmonds](https://github.com/bastings/nlp1-2017-projects/blob/master/dep-parser/mst/mst.ipynb) from bastings\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.04805",
      "https://arxiv.org/abs/1803.05449",
      "https://arxiv.org/abs/1803.05449"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ganeshjawahar/interpret_bert",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-30T09:41:12Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T06:29:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9686874528727154
      ],
      "excerpt": "Code used in our ACL'19 paper for interpreting BERT model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9136111434536363
      ],
      "excerpt": "Extract BERT features for chunking related tasks (clustering and visualization): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.874495950075252
      ],
      "excerpt": "Extract BERT features for sentence level probing tasks (tree_depth in this case): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176484228692729
      ],
      "excerpt": "In the above command, append --untrained_bert flag to extract untrained BERT features. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8320834779787993
      ],
      "excerpt": "We use the hyperparameter search space recommended by SentEval. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8466191258466572
      ],
      "excerpt": "Extract BERT features for SVA task: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8320834779787993
      ],
      "excerpt": "We use the hyperparameter search space recommended by SentEval. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8643854564921635
      ],
      "excerpt": "Extract BERT features for premise sentences present in SNLI: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8588956268202236
      ],
      "excerpt": "Check --role_scheme and --rand_tree flags for setting the role scheme. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Interpreting Bidirectional Encoder Representations from Transformers (BERT)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ganeshjawahar/interpret_bert/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Fri, 24 Dec 2021 02:16:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ganeshjawahar/interpret_bert/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ganeshjawahar/interpret_bert",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9906248903846466,
        0.8575781739760284,
        0.8690107279709035,
        0.8378479983070829
      ],
      "excerpt": "cd chunking/ \nDownload the train set from CoNLL-2000 chunking corpus: \nwget https://www.clips.uantwerpen.be/conll2000/chunking/train.txt.gz \ngunzip train.txt.gz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd probing/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd sva/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd tpdn/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.853749972326472
      ],
      "excerpt": "Download the train set from CoNLL-2000 chunking corpus: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8739069080901071
      ],
      "excerpt": "The last command replaces train.txt.gz file with train.txt file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9642784424292514
      ],
      "excerpt": "python extract_features.py --train_file train.txt --output_file chunking_rep.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8464732098955151
      ],
      "excerpt": "python visualize.py --feat_file chunking_rep.json --output_file_prefix tsne_layer_ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9280857673571561
      ],
      "excerpt": "python cluster.py --feat_file chunking_rep.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436121691893891
      ],
      "excerpt": "Download the data files for 10 probing tasks (e.g. tree_depth.txt) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9489044286875394
      ],
      "excerpt": "python extract_features.py --data_file tree_depth.txt --output_file tree_depth_rep.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9279780502294237
      ],
      "excerpt": "python classifier.py --labels_file tree_depth.txt --feats_file tree_depth_rep.json --layer 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8348896472144746
      ],
      "excerpt": "Download the data file for SVA task and extract it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853029224360882
      ],
      "excerpt": "python extract_features.py --data_file agr_50_mostcommon_10K.tsv --output_folder ./  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9120110235968387
      ],
      "excerpt": "python classifier.py --input_folder ./ --layer 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853029224360882
      ],
      "excerpt": "python extract_features.py --input_folder . --output_folder . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8743322768920632
      ],
      "excerpt": "python approx.py --input_folder . --output_folder . --layer 0 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ganeshjawahar/interpret_bert/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# What does BERT learn about the structure of language?",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "interpret_bert",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ganeshjawahar",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ganeshjawahar/interpret_bert/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [PyTorch](https://pytorch.org/)\n* [pytorch-pretrained-BERT](https://github.com/huggingface/pytorch-pretrained-BERT)\n* [SentEval](https://github.com/facebookresearch/SentEval)\n* [spaCy](https://spacy.io/) (for dependency tree visualization)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 81,
      "date": "Fri, 24 Dec 2021 02:16:25 GMT"
    },
    "technique": "GitHub API"
  }
}