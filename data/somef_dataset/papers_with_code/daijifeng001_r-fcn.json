{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.06409",
      "https://arxiv.org/abs/1605.06409"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find R-FCN useful in your research, please consider citing:\n\n    @article{dai16rfcn,\n        Author = {Jifeng Dai, Yi Li, Kaiming He, Jian Sun},\n        Title = {{R-FCN}: Object Detection via Region-based Fully Convolutional Networks},\n        Journal = {arXiv preprint arXiv:1605.06409},\n        Year = {2016}\n    }\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{dai16rfcn,\n    Author = {Jifeng Dai, Yi Li, Kaiming He, Jian Sun},\n    Title = {{R-FCN}: Object Detection via Region-based Fully Convolutional Networks},\n    Journal = {arXiv preprint arXiv:1605.06409},\n    Year = {2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9999927960204074
      ],
      "excerpt": "By Jifeng Dai, Yi Li, Kaiming He, Jian Sun \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "Pre-computed region proposals: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/daijifeng001/R-FCN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-06-17T07:50:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T04:14:05Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**R-FCN** is a region-based object detection framework leveraging deep fully-convolutional networks, which is accurate and efficient. In contrast to previous region-based detectors such as Fast/Faster R-CNN that apply a costly per-region sub-network hundreds of times, our region-based detector is fully convolutional with almost all computation shared on the entire image. R-FCN can natually adopt powerful fully convolutional image classifier backbones, such as [ResNets](https://github.com/KaimingHe/deep-residual-networks), for object detection.\n\nR-FCN was initially described in a [NIPS 2016 paper](https://arxiv.org/abs/1605.06409).\n\nThis code has been tested on Windows 7/8 64 bit, Windows Server 2012 R2, and Ubuntu 14.04, with Matlab 2014a.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9401842984833303,
        0.9885379122461748
      ],
      "excerpt": "It is highly recommended to use the deformable R-FCN implemented in MXNet, which significantly increases the accuracy at very low extra computational overhead. \nA python version of R-FCN is available, which supports end-to-end training/inference of R-FCN for object detection. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8211607364015674,
        0.8211607364015674
      ],
      "excerpt": "|R-FCN, ResNet-50  | VOC 07+12 trainval  | VOC 07 test           | 77.4% | 0.12sec        | 0.09sec            | \n|R-FCN, ResNet-101 | VOC 07+12 trainval  | VOC 07 test           | 79.5% | 0.17sec        | 0.12sec            | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8511496603161611,
        0.9030729031451832,
        0.8511496603161611,
        0.9030729031451832,
        0.8433557265807149,
        0.8787655747602553
      ],
      "excerpt": "Note: the training time is ~13 hours on Titian X. \nRun experiments/script_rfcn_VOC0712_ResNet50_OHEM_rpn.m to train a model using ResNet-50 net with OHEM, leveraging RPN proposals (using ResNet-50 net). The accuracy should be ~77.4% in mAP. \nNote: the training time is ~13 hours on Titian X. \nRun experiments/script_rfcn_VOC0712_ResNet101_OHEM_rpn.m to train a model using ResNet-101 net with OHEM, leveraging RPN proposals (using ResNet-101 net). The accuracy should be ~79.5% in mAP. \nNote: the training time is ~19 hours on Titian X. \nCheck other scripts in ./experiments for more settings. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9373627771238887,
        0.9738596760496928,
        0.931371657433137
      ],
      "excerpt": "- In all the experiments, training is performed on VOC 07+12 trainval, and testing is performed on VOC 07 test. \n- Results are subject to some random variations. We have run 'experiments/script_rfcn_VOC0712_ResNet50_OHEM_rpn.m' for 5 times, the results are 77.1%, 77.3%, 77.7%, 77.9%, and 77.0%. The mean is 77.4%, and the std is 0.39%. \n- Running time is not recorded in the test log (which is slower), but instead in an optimized implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9196055564002116
      ],
      "excerpt": "Demo R-FCN model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "R-FCN: Object Detection via Region-based Fully Convolutional Networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/daijifeng001/r-fcn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 554,
      "date": "Fri, 24 Dec 2021 09:17:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/daijifeng001/R-FCN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "daijifeng001/R-FCN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "0.\tRun `fetch_data/fetch_caffe_mex_windows_vs2013_cuda75.m` to download a compiled Caffe mex (for Windows only).\n0.\tRun `fetch_data/fetch_model_ResNet50.m` to download an ImageNet-pre-trained ResNet-50 net.\n0.\tRun `fetch_data/fetch_model_ResNet101.m` to download an ImageNet-pre-trained ResNet-101 net.\n0.\tRun `fetch_data/fetch_region_proposals.m` to download the pre-computed region proposals.\n0.\tDownload VOC 2007 and 2012 data to ./datasets.\n0.\tRun `rfcn_build.m`.\n0.\tRun `startup.m`.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "Note:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028830031079996,
        0.8662312593541679
      ],
      "excerpt": "If the automatic \"fetch_data\" fails, you may manually download resouces from: \nPre-complied caffe mex (Windows): \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/daijifeng001/R-FCN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB",
      "C++",
      "Cuda"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/daijifeng001/r-fcn/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Faster R-CNN\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) 2015 Microsoft Corporation\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n\\n**********\\n\\nTHIRD-PARTY SOFTWARE NOTICES AND INFORMATION\\n\\nThis project, Faster R-CNN, incorporates material from the project(s) listed below (collectively, \"Third Party Code\").  Microsoft is not the original author of the Third Party Code.  The original copyright notice and license under which Microsoft received such Third Party Code are set out below. This Third Party Code is licensed to you under their original license terms set forth below.  Microsoft reserves all other rights not expressly granted, whether by implication, estoppel or otherwise.\\n \\n1.\\tCaffe, version 0.9, (https://github.com/BVLC/caffe/)\\n\\nCOPYRIGHT\\n\\nAll contributions by the University of California:\\nCopyright (c) 2014, 2015, The Regents of the University of California (Regents)\\nAll rights reserved.\\n\\nAll other contributions:\\nCopyright (c) 2014, 2015, the respective contributors\\nAll rights reserved.\\n\\nCaffe uses a shared copyright model: each contributor holds copyright over their contributions to Caffe. The project versioning records all such contribution and copyright details. If a contributor wants to further mark their specific copyright on a particular contribution, they should indicate their copyright solely in the commit message of the change when it is committed.\\n\\nThe BSD 2-Clause License\\n\\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n*END OF THIRD-PARTY SOFTWARE NOTICES AND INFORMATION*\\n\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "*R-FCN*: Object Detection via Region-based Fully Convolutional Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "R-FCN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "daijifeng001",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/daijifeng001/R-FCN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "0. `Caffe` build for R-FCN (included in this repository, see `external/caffe`)\n    - If you are using Windows, you may download a compiled mex file by running `fetch_data/fetch_caffe_mex_windows_vs2013_cuda75.m`\n    - If you are using Linux or you want to compile for Windows, please recompile [our Caffe branch](https://github.com/daijifeng001/caffe-rfcn).\n0.\tMATLAB 2014a or later\n \n    \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "GPU: Titan, Titan X, K40, K80.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1218,
      "date": "Fri, 24 Dec 2021 09:17:29 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "0.\tRun `fetch_data/fetch_caffe_mex_windows_vs2013_cuda75.m` to download a compiled Caffe mex (for Windows only).\n0.\tRun `fetch_data/fetch_demo_model_ResNet101.m` to download a R-FCN model using ResNet-101 net (trained on VOC 07+12 trainval).\n0.\tRun `rfcn_build.m`.\n0.\tRun `startup.m`.\n0.\tRun `experiments/script_rfcn_demo.m` to apply the R-FCN model on demo images.\n\n",
      "technique": "Header extraction"
    }
  ]
}