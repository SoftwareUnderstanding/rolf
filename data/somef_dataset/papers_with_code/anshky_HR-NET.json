{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1908.10357",
      "https://arxiv.org/abs/1904.04514",
      "https://arxiv.org/abs/1902.09212"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use our code or models in your research, please cite with:\n```\n@inproceedings{sun2019deep,\n  title={Deep High-Resolution Representation Learning for Human Pose Estimation},\n  author={Sun, Ke and Xiao, Bin and Liu, Dong and Wang, Jingdong},\n  booktitle={CVPR},\n  year={2019}\n}\n\n@inproceedings{xiao2018simple,\n    author={Xiao, Bin and Wu, Haiping and Wei, Yichen},\n    title={Simple Baselines for Human Pose Estimation and Tracking},\n    booktitle = {European Conference on Computer Vision (ECCV)},\n    year = {2018}\n}\n\n@article{WangSCJDZLMTWLX19,\n  title={Deep High-Resolution Representation Learning for Visual Recognition},\n  author={Jingdong Wang and Ke Sun and Tianheng Cheng and \n          Borui Jiang and Chaorui Deng and Yang Zhao and Dong Liu and Yadong Mu and \n          Mingkui Tan and Xinggang Wang and Wenyu Liu and Bin Xiao},\n  journal   = {TPAMI}\n  year={2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{WangSCJDZLMTWLX19,\n  title={Deep High-Resolution Representation Learning for Visual Recognition},\n  author={Jingdong Wang and Ke Sun and Tianheng Cheng and \n          Borui Jiang and Chaorui Deng and Yang Zhao and Dong Liu and Yadong Mu and \n          Mingkui Tan and Xinggang Wang and Wenyu Liu and Bin Xiao},\n  journal   = {TPAMI}\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{xiao2018simple,\n    author={Xiao, Bin and Wu, Haiping and Wei, Yichen},\n    title={Simple Baselines for Human Pose Estimation and Tracking},\n    booktitle = {European Conference on Computer Vision (ECCV)},\n    year = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{sun2019deep,\n  title={Deep High-Resolution Representation Learning for Human Pose Estimation},\n  author={Sun, Ke and Xiao, Bin and Liu, Dong and Wang, Jingdong},\n  booktitle={CVPR},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8559316212367075
      ],
      "excerpt": "Visualization code for showing the pose estimation results. Thanks Depu! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| pose_hrnet_w32 | 97.1 |     95.9 |  90.3 |  86.4 | 89.1 | 87.1 |  83.3 | 90.3 |     37.7 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| pose_resnet_101    |    256x192 | 53.0M   |   12.4 | 0.714 | 0.893 |  0.793 |  0.681 |  0.781 | 0.771 | 0.934 |  0.840 |  0.730 |  0.832 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anshky/HR-NET",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-10T04:38:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-10T04:38:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is an official pytorch implementation of [*Deep High-Resolution Representation Learning for Human Pose Estimation*](https://arxiv.org/abs/1902.09212). \nIn this work, we are interested in the human pose estimation problem with a focus on learning reliable high-resolution representations. Most existing methods **recover high-resolution representations from low-resolution representations** produced by a high-to-low resolution network. Instead, our proposed network **maintains high-resolution representations** through the whole process.\nWe start from a high-resolution subnetwork as the first stage, gradually add high-to-low resolution subnetworks one by one to form more stages, and connect the mutli-resolution subnetworks **in parallel**. We conduct **repeated multi-scale fusions** such that each of the high-to-low resolution representations receives information from other parallel representations over and over, leading to rich high-resolution representations. As a result, the predicted keypoint heatmap is potentially more accurate and spatially more precise. We empirically demonstrate the effectiveness of our network through the superior pose estimation results over two benchmark datasets: the COCO keypoint detection dataset and the MPII Human Pose dataset. </br>\n\n![Illustrating the architecture of the proposed HRNet](/figures/hrnet.png)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9542036385760947
      ],
      "excerpt": "[2020/03/13] A longer version is accepted by TPAMI: Deep High-Resolution Representation Learning for Visual Recognition. It includes more HRNet applications, and the codes are available: semantic segmentation,  objection detection,  facial landmark detection, and image classification. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8585937516853626,
        0.9092748168132341,
        0.977038156913172
      ],
      "excerpt": "Visualization code for showing the pose estimation results. Thanks Depu! \n[2019/08/27] HigherHRNet is now on ArXiv, which is a bottom-up approach for human pose estimation powerd by HRNet. We will also release code and models at Higher-HRNet-Human-Pose-Estimation, stay tuned! \nOur new work High-Resolution Representations for Labeling Pixels and Regions is available at HRNet. Our HRNet has been applied to a wide range of vision tasks, such as image classification, objection detection, semantic segmentation and facial landmark. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8200059297846936,
        0.9939330488280145
      ],
      "excerpt": "Input size is 256x256 \npose_resnet_[50,101,152] is our previous work of Simple Baselines for Human Pose Estimation and Tracking \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9939330488280145,
        0.9296521179250543
      ],
      "excerpt": "pose_resnet_[50,101,152] is our previous work of Simple Baselines for Human Pose Estimation and Tracking. \nGFLOPs is for convolution and linear layers only. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9916436359701111,
        0.9296521179250543
      ],
      "excerpt": "pose_resnet_152 is our previous work of Simple Baselines for Human Pose Estimation and Tracking. \nGFLOPs is for convolution and linear layers only. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anshky/HR-NET/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 01:01:54 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anshky/HR-NET/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "anshky/HR-NET",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/anshky/HR-NET/master/demo/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/anshky/HR-NET/master/demo/build-docker.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**For MPII data**, please download from [MPII Human Pose Dataset](http://human-pose.mpi-inf.mpg.de/). The original annotation files are in matlab format. We have converted them into json format, you also need to download them from [OneDrive](https://1drv.ms/f/s!AhIXJn_J-blW00SqrairNetmeVu4) or [GoogleDrive](https://drive.google.com/drive/folders/1En_VqmStnsXMdldXA6qpqEyDQulnmS3a?usp=sharing).\nExtract them under {POSE_ROOT}/data, and make them look like this:\n```\n${POSE_ROOT}\n|-- data\n`-- |-- mpii\n    `-- |-- annot\n        |   |-- gt_valid.mat\n        |   |-- test.json\n        |   |-- train.json\n        |   |-- trainval.json\n        |   `-- valid.json\n        `-- images\n            |-- 000001163.jpg\n            |-- 000003072.jpg\n```\n\n**For COCO data**, please download from [COCO download](http://cocodataset.org/#download), 2017 Train/Val is needed for COCO keypoints training and validation. We also provide person detection result of COCO val2017 and test-dev2017 to reproduce our multi-person pose estimation results. Please download from [OneDrive](https://1drv.ms/f/s!AhIXJn_J-blWzzDXoz5BeFl8sWM-) or [GoogleDrive](https://drive.google.com/drive/folders/1fRUDNUDxe9fjqcRZ2bnF_TKMlO0nB_dk?usp=sharing).\nDownload and extract them under {POSE_ROOT}/data, and make them look like this:\n```\n${POSE_ROOT}\n|-- data\n`-- |-- coco\n    `-- |-- annotations\n        |   |-- person_keypoints_train2017.json\n        |   `-- person_keypoints_val2017.json\n        |-- person_detection_results\n        |   |-- COCO_val2017_detections_AP_H_56_person.json\n        |   |-- COCO_test-dev2017_detections_AP_H_609_person.json\n        `-- images\n            |-- train2017\n            |   |-- 000000000009.jpg\n            |   |-- 000000000025.jpg\n            |   |-- 000000000030.jpg\n            |   |-- ... \n            `-- val2017\n                |-- 000000000139.jpg\n                |-- 000000000285.jpg\n                |-- 000000000632.jpg\n                |-- ... \n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "4. Init output(training model output directory) and log(tensorboard log directory) directory:\n\n   ```\n   mkdir output \n   mkdir log\n   ```\n\n   Your directory tree should look like this:\n\n   ```\n   ${POSE_ROOT}\n   \u251c\u2500\u2500 data\n   \u251c\u2500\u2500 experiments\n   \u251c\u2500\u2500 lib\n   \u251c\u2500\u2500 log\n   \u251c\u2500\u2500 models\n   \u251c\u2500\u2500 output\n   \u251c\u2500\u2500 tools \n   \u251c\u2500\u2500 README.md\n   \u2514\u2500\u2500 requirements.txt\n   ```\n\n6. Download pretrained models from our model zoo([GoogleDrive](https://drive.google.com/drive/folders/1hOTihvbyIxsm5ygDpbUuJ7O_tzv4oXjC?usp=sharing) or [OneDrive](https://1drv.ms/f/s!AhIXJn_J-blW231MH2krnmLq5kkQ))\n   ```\n   ${POSE_ROOT}\n    `-- models\n        `-- pytorch\n            |-- imagenet\n            |   |-- hrnet_w32-36af842e.pth\n            |   |-- hrnet_w48-8ef0771d.pth\n            |   |-- resnet50-19c8e357.pth\n            |   |-- resnet101-5d3b4d8f.pth\n            |   `-- resnet152-b121ed2d.pth\n            |-- pose_coco\n            |   |-- pose_hrnet_w32_256x192.pth\n            |   |-- pose_hrnet_w32_384x288.pth\n            |   |-- pose_hrnet_w48_256x192.pth\n            |   |-- pose_hrnet_w48_384x288.pth\n            |   |-- pose_resnet_101_256x192.pth\n            |   |-- pose_resnet_101_384x288.pth\n            |   |-- pose_resnet_152_256x192.pth\n            |   |-- pose_resnet_152_384x288.pth\n            |   |-- pose_resnet_50_256x192.pth\n            |   `-- pose_resnet_50_384x288.pth\n            `-- pose_mpii\n                |-- pose_hrnet_w32_256x256.pth\n                |-- pose_hrnet_w48_256x256.pth\n                |-- pose_resnet_101_256x256.pth\n                |-- pose_resnet_152_256x256.pth\n                `-- pose_resnet_50_256x256.pth\n\n   ```\n   \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Install pytorch >= v1.0.0 following [official instruction](https://pytorch.org/).\n   **Note that if you use pytorch's version < v1.0.0, you should following the instruction at <https://github.com/Microsoft/human-pose-estimation.pytorch> to disable cudnn's implementations of BatchNorm layer. We encourage you to use higher pytorch's version(>=v1.0.0)**\n2. Clone this repo, and we'll call the directory that you cloned as ${POSE_ROOT}.\n3. Install dependencies:\n   ```\n   pip install -r requirements.txt\n   ```\n4. Make libs:\n   ```\n   cd ${POSE_ROOT}/lib\n   make\n   ```\n5. Install [COCOAPI](https://github.com/cocodataset/cocoapi):\n   ```\n   #: COCOAPI=/path/to/clone/cocoapi\n   git clone https://github.com/cocodataset/cocoapi.git $COCOAPI\n   cd $COCOAPI/PythonAPI\n   #: Install into global site-packages\n   make install\n   #: Alternatively, if you do not have permissions or prefer\n   #: not to install the COCO API into global site-packages\n   python3 setup.py install --user\n   ```\n   Note that instructions like ",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9452573280334245
      ],
      "excerpt": "The code is developed using python 3.6 on Ubuntu 16.04. NVIDIA GPUs are needed. The code is developed and tested using 4 NVIDIA P100 GPU cards. Other platforms or GPU cards are not fully tested. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8058106310412315
      ],
      "excerpt": "    TEST.MODEL_FILE models/pytorch/pose_mpii/pose_hrnet_w32_256x256.pth \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244951481442103,
        0.8058106310412315
      ],
      "excerpt": "    --cfg experiments/coco/hrnet/w32_256x192_adam_lr1e-3.yaml \\ \n    TEST.MODEL_FILE models/pytorch/pose_coco/pose_hrnet_w32_256x192.pth \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244951481442103
      ],
      "excerpt": "    --cfg experiments/coco/hrnet/w32_256x192_adam_lr1e-3.yaml \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8011308539969674
      ],
      "excerpt": "| pose_resnet_101    | 96.9 |     95.9 |  89.5 |  84.4 | 88.4 | 84.5 |  80.7 | 89.1 |     34.0 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090409838570358
      ],
      "excerpt": "| pose_resnet_152    |    256x192 | 68.6M   |   15.7 | 0.720 | 0.893 |  0.798 |  0.687 |  0.789 | 0.778 | 0.934 |  0.846 |  0.736 |  0.839 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9000528184933404,
        0.817733597986534,
        0.8216293995775839,
        0.898584498893152,
        0.817733597986534,
        0.9000528184933404
      ],
      "excerpt": "python tools/test.py \\ \n    --cfg experiments/mpii/hrnet/w32_256x256_adam_lr1e-3.yaml \\ \n    TEST.MODEL_FILE models/pytorch/pose_mpii/pose_hrnet_w32_256x256.pth \npython tools/train.py \\ \n    --cfg experiments/mpii/hrnet/w32_256x256_adam_lr1e-3.yaml \npython tools/test.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216293995775839,
        0.8725487815795144,
        0.898584498893152
      ],
      "excerpt": "    TEST.MODEL_FILE models/pytorch/pose_coco/pose_hrnet_w32_256x192.pth \\ \n    TEST.USE_GT_BBOX False \npython tools/train.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anshky/HR-NET/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Cuda",
      "Python",
      "C++",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Leo Xiao\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep High-Resolution Representation Learning for Human Pose Estimation (CVPR 2019)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "HR-NET",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "anshky",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anshky/HR-NET/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 01:01:54 GMT"
    },
    "technique": "GitHub API"
  }
}