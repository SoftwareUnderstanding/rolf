{
  "citation": [
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Trust Region Policy Optimization (TRPO) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnomoonens/yarll",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-09-04T10:46:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-08T03:17:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8739233282565593,
        0.9040090603510441
      ],
      "excerpt": "Update 14/05/2021: Added PyTorch implementation of REINFORCE.\\ \nUpdate 11/05/2021: Added PyTorch implementation of SAC.\\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503829381739865
      ],
      "excerpt": "Deep Q-Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.896126685047784
      ],
      "excerpt": "Sarsa with with function approximation and eligibility traces \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851658526419858
      ],
      "excerpt": "A directory containing TensorFlow scalar summaries for different tasks, in which case all of the found scalars are plot. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Combining deep learning and reinforcement learning.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnomoonens/yarll/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 26,
      "date": "Sat, 25 Dec 2021 04:48:45 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/arnomoonens/yarll/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "arnomoonens/yarll",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/arnomoonens/yarll/tf2/notebooks/REINFORCE_AKT_target_task.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8323585454428511
      ],
      "excerpt": "Update 13/04/2021: Converted DDPG to Tensorflow 2. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "Soft Actor-Critic (SAC) (TF2, PyTorch) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8309493903702941,
        0.8162575557646689
      ],
      "excerpt": "Example run after training using 16 threads for a total of 5 million timesteps on the PongDeterministic-v4 environment: \nYou can run algorithms by passing the path to an experiment specification (which is a file in json format) to main.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206
      ],
      "excerpt": "python yarll/main.py <path_to_experiment_specification> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053143414811509
      ],
      "excerpt": "You can see all the possible arguments by running python yarll/main.py -h. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80284898788336
      ],
      "excerpt": "Statistics can be plot using: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8445758600512837
      ],
      "excerpt": "A json file generated using gym.wrappers.Monitor, in case it plots the episode lengths and total reward per episode. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/arnomoonens/yarll/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Arno Moonens\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yet Another Reinforcement Learning Library (YARLL)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "yarll",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "arnomoonens",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnomoonens/yarll/blob/tf2/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "arnomoonens",
        "body": "[PyPi](https://pypi.org/project/yarll/0.0.12/)",
        "dateCreated": "2019-11-19T13:10:00Z",
        "datePublished": "2019-11-19T13:14:17Z",
        "html_url": "https://github.com/arnomoonens/yarll/releases/tag/0.0.12",
        "name": "",
        "tag_name": "0.0.12",
        "tarball_url": "https://api.github.com/repos/arnomoonens/yarll/tarball/0.0.12",
        "url": "https://api.github.com/repos/arnomoonens/yarll/releases/21584755",
        "zipball_url": "https://api.github.com/repos/arnomoonens/yarll/zipball/0.0.12"
      }
    ],
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First, install the library using [pip](https://pypi.python.org/pypi/pip) (you can first remove _OpenCV_ from the `setup.py` file if it is already installed):\n\n```Shell\n\npip install yarll\n\n```\n\nTo use the library on a specific branch or to use it while changing the code, you can add the path to the library to your `$PYTHONPATH` (e.g., in your `.bashrc` or `.zshrc` file):\n\n```Shell\n\nexport PYTHONPATH=/path/to/yarll:$PYTHONPATH\n\n```\n\nAlternatively, you can add a symlink from your `site-packages` to the _yarll_ directory.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 83,
      "date": "Sat, 25 Dec 2021 04:48:45 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "reinforcement-learning",
      "a3c",
      "openai-gym",
      "policy-gradient",
      "reinforcement-learning-algorithms",
      "deep-reinforcement-learning",
      "tensorflow",
      "sarsa",
      "python",
      "soft-actor-critic"
    ],
    "technique": "GitHub API"
  }
}