{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Face Recognization is a personal project, which applies RetinaFace to detect faces. \nAfter that, I'm using the Insight Face model to create embedding from faces that have been split before.\n\nIn the register section, all embedding vectors will be normalized and store in the pool.\n\nWith the recognization section, faces detected will also normalized.\nThe dot product of it with the pool above, which was used to find the nearest face.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Jiankang Deng, Jia Guo, Niannan Xue (2019), ArcFace: Additive Angular Margin Loss for Deep Face Recognition - https://arxiv.org/pdf/1801.07698.pdf\n2. Jiankang Deng, Jia Guo, Yuxiang Zhou, Jinke Yu, Irene Kotsia, Stefanos Zafeiriou (2019), RetinaFace: Single-stage Dense Face Localisation in the Wild - https://arxiv.org/pdf/1905.00641.pdf?fbclid=IwAR3yk-dQamoT-AD0YiK8HSOsxJruNdAz0vWjJlYSoS63p16TDb01UjB5F7U\n3. Yang Li, FACE RECOGNITION SYSTEM - https://arxiv.org/ftp/arxiv/papers/1901/1901.02452.pdf\n4. LAVENDER, Deep Learning v\u00e0 b\u00e0i to\u00e1n nh\u1eadn d\u1ea1ng khu\u00f4n m\u1eb7t - https://techblog.vn/deep-learning-va-bai-toan-nhan-dang-khuon-mat\n5. cs231n, Convolutional Neural Networks (CNNs / ConvNets) - https://cs231n.github.io/convolutional-networks/\n6. Jay Wang, Robert Turko, Omar Shaikh, Haekyu Park, Nilaksh Das, Fred Hohman, Minsuk Kahng, and Polo Chau, CNN Explainer - https://poloclub.github.io/cnn-explainer/\n7. Volodymyr Kovenko (2019), How to precisely align face in Python with OpenCv and Dlib - https://towardsdatascience.com/precise-face-alignment-with-opencv-dlib-e6c8acead262\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8958033106351024
      ],
      "excerpt": "args.add_argument('-rf', '--register_threshold', default=0.8, type=float, help=\"Threshold of face recognition\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958033106351024
      ],
      "excerpt": "args.add_argument('-rf', '--recognized_threshold', default=0.8, type=float, help=\"Threshold of face recognition\") \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TinDang97/face_recognition",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-23T03:19:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T02:55:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8150436058214221
      ],
      "excerpt": "Press Q: quit and save model | Ctr-C: interrupt process without model saving. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8813102930380564
      ],
      "excerpt": "-h to get help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": " - PressQorCtr-C` to exit. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "RetinaFace > Insight Face => Simple Face Recognition System",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TinDang97/face_recognition/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 17:55:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TinDang97/face_recognition/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "TinDang97/face_recognition",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.811345365629244,
        0.9205731613397917,
        0.8587338063147569
      ],
      "excerpt": "Refer using GPU device to get best performance. \nInstall requirement.txt package list. \nMake system can record all your angle face during register step like iPhone. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 register.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from argparse import ArgumentParser \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8896666213614836,
        0.862561571367202,
        0.8072150131673401
      ],
      "excerpt": "args.add_argument('--detect_face_model', default='data/pretrained/mobilenet_header.pth', \n                  type=str, help=\"Face detector model path\") \nargs.add_argument('--detect_face_backbone', default='data/pretrained/mobile_backbone.tar', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8896666213614836,
        0.8403094326025665,
        0.8497174605833342,
        0.8791272852647131,
        0.8234898627306656
      ],
      "excerpt": "args.add_argument('--recognized_model', default='data/pretrained/embedder_resnet50_asia.pth' \n                  , type=str, help=\"Face embedding model path\") \nargs.add_argument('--model_registered', default='model_faces.npy', type=str, help=\"Model contain face's vectors\") \nargs.add_argument('--model_ids', default='model_face_ids.npy', type=str, help=\"Model contain face's ids\") \nargs.add_argument('--register_name', required=True, type=str, help=\"(Required) Register's name!\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8690439016517421
      ],
      "excerpt": "Write register's name in console. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 recognize.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from argparse import ArgumentParser \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8896666213614836,
        0.862561571367202,
        0.8072150131673401
      ],
      "excerpt": "args.add_argument('--detect_face_model', default='data/pretrained/mobilenet_header.pth', \n                  type=str, help=\"Face detector model path\") \nargs.add_argument('--detect_face_backbone', default='data/pretrained/mobile_backbone.tar', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8896666213614836,
        0.8403094326025665,
        0.8497174605833342,
        0.8791272852647131
      ],
      "excerpt": "args.add_argument('--recognized_model', default='data/pretrained/embedder_resnet50_asia.pth' \n                  , type=str, help=\"Face embedding model path\") \nargs.add_argument('--model_registered', default='model_faces.npy', type=str, help=\"Model contain face's vectors\") \nargs.add_argument('--model_ids', default='model_face_ids.npy', type=str, help=\"Model contain face's ids\") \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TinDang97/face_recognition/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 TinDang97\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face Recognition",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "face_recognition",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "TinDang97",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TinDang97/face_recognition/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 23 Dec 2021 17:55:47 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "face-recognition",
      "face-detection",
      "face",
      "computer-vision"
    ],
    "technique": "GitHub API"
  }
}