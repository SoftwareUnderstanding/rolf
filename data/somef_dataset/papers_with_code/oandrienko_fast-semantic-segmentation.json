{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.08545",
      "https://arxiv.org/abs/1612.01105\n",
      "https://arxiv.org/abs/1608.08710\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{fastsemseg2018,\n  author={Andrienko, Oles},\n  title={Fast Semantic Segmentation},\n  howpublished={\\url{https://github.com/oandrienko/fast-semantic-segmentation}},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8951692167752275
      ],
      "excerpt": "). The network compression implemented is based on the paper [Pruning Filters for Efficient ConvNets](https://arxiv.org/abs/1608.08710 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "Oles Andrienko, github: oandrienko \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/oandrienko/fast-semantic-segmentation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-02-19T04:41:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-01T12:28:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.985930967796325
      ],
      "excerpt": "Perform pixel-wise semantic segmentation on high-resolution images in real-time with Image Cascade Network (ICNet), the highly optimized version of the state-of-the-art Pyramid Scene Parsing Network (PSPNet). This project implements ICNet and PSPNet50 in Tensorflow with training support for Cityscapes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8198563301742955
      ],
      "excerpt": "Deploy ICNet and preform inference at over 30fps on NVIDIA Titan Xp. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8170783758865119,
        0.9023847768375118
      ],
      "excerpt": "This implementation is based off of the original ICNet paper proposed by Hengshuang Zhao titled [ICNet for Real-Time Semantic Segmentation on High-Resolution Images](https://arxiv.org/abs/1704.08545). Some ideas were also taken from their previous PSPNet paper, [Pyramid Scene Parsing Network](https://arxiv.org/abs/1612.01105 \n). The network compression implemented is based on the paper [Pruning Filters for Efficient ConvNets](https://arxiv.org/abs/1608.08710 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9253585740271467,
        0.8673862455223569
      ],
      "excerpt": "The baseline PSPNet50 pre-trained model files have been released publically in the Model Zoo. The accuracy of the model surpases that referenced in the ICNet paper. \nInitial release. Project includes scripts for training ICNet, evaluating ICNet and compressing ICNet from ResNet50 weights. Also includes scripts for training PSPNet and evaluating PSPNet as a baseline. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9663747285617093,
        0.8051007872362994,
        0.9869396980608371,
        0.9466166158779566,
        0.8288362592951017
      ],
      "excerpt": "This project has implemented the ICNet training process, allowing you to train your own model directly from ResNet50 weights as is done in the original work. Other available implementations simply convert the Caffe model to Tensorflow, only allowing for fine-tuning from weights trained on Cityscapes. \nBy training ICNet on weights initialized from ImageNet, you have more flexibility in the transfer learning process. Read more about setting up this process can be found <a href='docs/configs.md'>here</a>. For training ICNet, follow the guide <a href='docs/icnet.md'>here</a>. \nIn order to achieve real-time speeds, ICNet uses a form of network compression called filter pruning. This drastically reduces the complexity of the model by removing filters from convolutional layers in the network. This project has also implemented this ICNet compression process directly in Tensorflow. \nThe compression is working, however which \"compression scheme\" to use is still somewhat ambiguous when reading the original ICNet paper. This is still a work in progress. \nIn order to also reproduce the baselines used in the original ICNet paper, you will also find implementations and pre-trained models for PSPNet50. Since ICNet can be thought of as a modified PSPNet, it can be useful for comparison purposes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.988426590583567
      ],
      "excerpt": "This project and some of the documentation was based on the Tensorflow Object Detection API. It was the initial inspiration for this project. The third_party directory of this project contains files from OpenAI's Gradient Checkpointing project by Tim Salimans and Yaroslav Bulatov. The helper modules found in third_party/model_deploy.py are from the Tensorflow Slim project. Finally, another open source ICNet implementation which converts the original Caffe network weights to Tensorflow was used as a reference. Find all these projects below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ICNet and PSPNet-50 in Tensorflow for real-time semantic segmentation",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  * <a href='docs/installation.md'>**Installation**: Setting up the project</a><br>\n  * <a href=\"docs/datasets.md\">**Dataset Format**: Creating TFRecord files for training and evaluation</a><br>\n  * <a href=\"docs/configs.md\">**Configs and Finetune Training**: Creating your own configuration files for training and evaluation</a><br>\n  * <a href=\"docs/pspnet.md\">**PSPNet50**: Walkthrough for Training PSPNet50 baseline</a><br>\n  * <a href=\"docs/icnet.md\">**ICNet**: Walkthrough for Training ICNet with compression</a><br>\n  * <a href=\"docs/model_zoo.md\">**Model Zoo**: Links to pre-trained checkpoints</a><br>\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/oandrienko/fast-semantic-segmentation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 40,
      "date": "Sat, 25 Dec 2021 07:19:17 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/oandrienko/fast-semantic-segmentation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "oandrienko/fast-semantic-segmentation",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/oandrienko/fast-semantic-segmentation/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8292322362519498
      ],
      "excerpt": "<b><i>Download pre-trained ICNet and PSPNet50 models <a href=\"docs/model_zoo.md\">here</a></i></b> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8575687454224082
      ],
      "excerpt": "<img src = 'docs/imgs/cityscapes_seq.gif' width = '720px'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9044073306805348
      ],
      "excerpt": "<img src = 'docs/imgs/icnet_tensorboard.jpg' width='180x'> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/oandrienko/fast-semantic-segmentation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Real-Time Semantic Segmentation in [TensorFlow](https://github.com/tensorflow/tensorflow)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "fast-semantic-segmentation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "oandrienko",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/oandrienko/fast-semantic-segmentation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 207,
      "date": "Sat, 25 Dec 2021 07:19:17 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "icnet",
      "pspnet",
      "tensorflow",
      "semantic-segmentation"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  * <a href=\"https://modeldepot.io/oandrienko/pspnet50-for-urban-scene-understanding\">**PSPNet50 Inference Notebook**</a><br>\n  * <a href=\"https://modeldepot.io/oandrienko/icnet-for-fast-segmentation\">**ICNet Inference Notebook**</a><br>\n\n",
      "technique": "Header extraction"
    }
  ]
}