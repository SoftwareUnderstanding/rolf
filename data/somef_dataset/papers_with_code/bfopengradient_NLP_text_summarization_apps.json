{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.13461\n\nLexRank research paper: https://www.cs.cmu.edu/afs/cs/project/jair/pub/volume22/erkan04a-html/erkan04a.html\n\nAug/2021\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.999487775115096,
        0.9059588437428114
      ],
      "excerpt": "BART research paper: https://arxiv.org/abs/1910.13461 \nLexRank research paper: https://www.cs.cmu.edu/afs/cs/project/jair/pub/volume22/erkan04a-html/erkan04a.html \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bfopengradient/NLP_text_summarization_apps",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-02T01:39:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-11T01:49:33Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.945119794879618,
        0.9007700993948102,
        0.9995624272689535
      ],
      "excerpt": "Both APPs allow the user to input text and have a model or models summarize the text. \nnlpapp.py:  uses a neural net transformer model to read text and generate a summary of the text passed to the app. The App uses a Large BART model from the Huggingface transformer library.The Model uploads once only when app is first run. After uploading you can test the pre-trained model on text as much as is needed.  \nnlpapp2.py: offers the user the BART model and also the LexRank model to summarize text. LexRank is a count based model. It is relatively faster than BART on larger passages of text but personal preference is to work with BART as it produces more insightful/concise summaries on larger passages of text. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Text_summarization_apps. Streamlit apps using the Huggingface  BART model  and the SUMY LexRank model.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bfopengradient/NLP_text_summarization_apps/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 01:54:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bfopengradient/NLP_text_summarization_apps/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bfopengradient/NLP_text_summarization_apps",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9356275657254673
      ],
      "excerpt": "Before running the app from the commandline check with the requirements.txt file which python libraries are used in both apps. If needed , pip install the requirements.txt ahead of running the apps. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.800526017721621
      ],
      "excerpt": "There are two apps: nlpapp.py and nlpapp2.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8246464716438384
      ],
      "excerpt": "nlpapp.py:  uses a neural net transformer model to read text and generate a summary of the text passed to the app. The App uses a Large BART model from the Huggingface transformer library.The Model uploads once only when app is first run. After uploading you can test the pre-trained model on text as much as is needed.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8721294499973476
      ],
      "excerpt": "To run either app locally enter in your commandline:  streamlit run nlpapp.py or streamlit run nlpapp2.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bfopengradient/NLP_text_summarization_apps/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## NLP_text_summarization_apps",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "NLP_text_summarization_apps",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bfopengradient",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bfopengradient/NLP_text_summarization_apps/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 01:54:16 GMT"
    },
    "technique": "GitHub API"
  }
}