{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1611.08050"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite the paper in your publications if it helps your research:    \n\n    @InProceedings{cao2017realtime,\n      title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\n      year = {2017}\n      }\n\t  \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "[x] limbs part affinity fields \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9631308855820759
      ],
      "excerpt": "UPDATE 26/10/2017 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9631308855820759
      ],
      "excerpt": "UPDATE 22/10/2017: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-09T21:57:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-18T16:24:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Code repo for reproducing [2017 CVPR](https://arxiv.org/abs/1611.08050) paper using keras.  \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9516691411586542,
        0.8525098710652759,
        0.9764541818937218
      ],
      "excerpt": "This fork contains pure python version of Realtime Multi-Person Pose Estimation. Initially it was forked from Michal Faber fork, all credit for porting original work to Keras goes to him. \nI this fork I've reimplemented images argumentation in pure python, it is significanly shorter(285 lines vs 1202 lines in Michal Faber's C++ rmpe_server, and way less than in original work) \nDespite of Python language this code is significantly faster than original implementation(140 images/s vs 30 images/s C++ code on my machine). This is not really useful since most of people don't have 5 GPUs, but just to prove the point python programs could be fast. The magic is in combining all affine transformations to one matrix, and calling single warpAffine, and vectorized numpy computation of PAFs and Heatmaps. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8344803298488211,
        0.8364357860562304,
        0.9907093959839337
      ],
      "excerpt": "[x] quality is same as original work and bit better than Michal's version. \n[ ] Ability to easily modify config and train different models. See addins submodule for head detector example and example how to add new datasets(MPII, Brainwash) \nThis is a keras version of  project \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Converting caffe model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8780775167505703
      ],
      "excerpt": "  Note that docker accepts only absolute paths so you have to set the full path to the folder containing this project. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8988489153168701
      ],
      "excerpt": "    For MPI dataset there are 6 channels with additional all masks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804469973267833
      ],
      "excerpt": " This number is used by keras to determine how many samples are in 1 epoch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Keras version of Realtime Multi-Person Pose Estimation project",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 45,
      "date": "Wed, 29 Dec 2021 14:38:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "anatolix/keras_Realtime_Multi-Person_Pose_Estimation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/demo.ipynb",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/trash/matload_test.ipynb",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/trash/lmdb.parse.ipynb",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/testing/inspect_nn_input_output.ipynb",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/testing/coco.ipynb",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/testing/inspect_dataset.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/dataset/get_dataset.sh",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/model/get_keras_model.sh",
      "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/model/get_caffe_model.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8528422379043409
      ],
      "excerpt": "<img src=\"https://github.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/blob/master/readme/dance.gif\", width=\"720\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9439130730965156
      ],
      "excerpt": " don't have to compile/install caffe on your local machine. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8647245128866956,
        0.8175505722441974
      ],
      "excerpt": "Download caffe model cd model; sh get_caffe_model.sh \nDump caffe layers to numpy data cd ..; docker run -v [absolute path to your keras_Realtime_Multi-Person_Pose_Estimation folder]:/workspace -it bvlc/caffe:cpu python dump_caffe_layers.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9013085674052842
      ],
      "excerpt": "  You can start 2 instances, one serving training set and a second one serving validation set (on different port if locally)  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9242975891736176
      ],
      "excerpt": "Download the data set (~25 GB) cd dataset; sh get_dataset.sh, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9988910279637897
      ],
      "excerpt": "cd coco/PythonAPI; sudo python setup.py install to install pycocotools. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9065482190819568
      ],
      "excerpt": "Could be run as iterator inside train_pose.py (default), or as separate ./rmpe_server.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956664835484717
      ],
      "excerpt": "Dump caffe layers to numpy data cd ..; docker run -v [absolute path to your keras_Realtime_Multi-Person_Pose_Estimation folder]:/workspace -it bvlc/caffe:cpu python dump_caffe_layers.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9149436561686528
      ],
      "excerpt": "Convert caffe model (from numpy data) to keras model python caffe_to_keras.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594427238675584,
        0.9427973461247644
      ],
      "excerpt": "Run the notebook demo.ipynb. \npython demo_image.py --image sample_images/ski.jpg to run the picture demo. Result will be stored in the file result.png. You can use \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8657544010508981
      ],
      "excerpt": "python demo_camera.py to run the web demo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.837259816739573
      ],
      "excerpt": " The loss values are quite similar as in the original training - output.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8054461845339794
      ],
      "excerpt": "Results of running demo_image --image sample_images/ski.jpg --model training/weights.best.h5 with model trained only 25000 iterations. Not too bad !!! Training on my single 1070 GPU took around 10 hours. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809042980856104
      ],
      "excerpt": "Download the data set (~25 GB) cd dataset; sh get_dataset.sh, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372898977379456,
        0.8734070689916058
      ],
      "excerpt": "Go to the \"training\" folder cd ../../../training. \nGenerate masks python generate_masks.py. Note: set the parameter \"mode\" in generate_masks.py (validation or training)  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8002502217647488
      ],
      "excerpt": "Start training data server in the first terminal session.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189723213129376
      ],
      "excerpt": "Set the correct number of samples within python train_pose.py - variables \"train_samples = ???\" and \"val_samples = ???\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.863632338037623
      ],
      "excerpt": "Train the model in a third terminal python train_pose.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/new-generation/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'SOFTWARE LICENSE AGREEMENT\\nACADEMIC OR NON-PROFIT ORGANIZATION NONCOMMERCIAL RESEARCH USE ONLY\\n\\nBY USING OR DOWNLOADING THE SOFTWARE, YOU ARE AGREEING TO THE TERMS OF THIS LICENSE AGREEMENT.  IF YOU DO NOT AGREE WITH THESE TERMS, YOU MAY NOT USE OR DOWNLOAD THE SOFTWARE.\\n\\nThis is a license agreement (\"Agreement\") between your academic institution or non-profit organization or self (called \"Licensee\" or \"You\" in this Agreement) and Michal Faber (called \"Licensor\" in this Agreement).  All rights not specifically granted to you in this Agreement are reserved for Licensor.\\n\\nRESERVATION OF OWNERSHIP AND GRANT OF LICENSE:\\nLicensor retains exclusive ownership of any copy of the Software (as defined below) licensed under this Agreement and hereby grants to Licensee a personal, non-exclusive,\\nnon-transferable license to use the Software for noncommercial research purposes, without the right to sublicense, pursuant to the terms and conditions of this Agreement.  As used in this Agreement, the term \"Software\" means (i) the actual copy of all or any portion of code for program routines made accessible to Licensee by Licensor pursuant to this Agreement, inclusive of backups, updates, and/or merged copies permitted hereunder or subsequently supplied by Licensor,  including all or any file structures, programming instructions, user interfaces and screen formats and sequences as well as any and all documentation and instructions related to it, and (ii) all or any derivatives and/or modifications created or made by You to any of the items specified in (i).\\n\\nCONFIDENTIALITY: Licensee acknowledges that the Software is proprietary to Licensor, and as such, Licensee agrees to receive all such materials in confidence and use the Software only in accordance with the terms of this Agreement.  Licensee agrees to use reasonable effort to protect the Software from unauthorized use, reproduction, distribution, or publication.\\n\\nCOPYRIGHT: The Software is owned by Licensor and is protected by United\\nStates copyright laws and applicable international treaties and/or conventions.\\n\\nPERMITTED USES:  The Software may be used for your own noncommercial internal research purposes. You understand and agree that Licensor is not obligated to implement any suggestions and/or feedback you might provide regarding the Software, but to the extent Licensor does so, you are not entitled to any compensation related thereto.\\n\\nDERIVATIVES: You may create derivatives of or make modifications to the Software, however, You agree that all and any such derivatives and modifications will be owned by Licensor and become a part of the Software licensed to You under this Agreement.  You may only use such derivatives and modifications for your own noncommercial internal research purposes, and you may not otherwise use, distribute or copy such derivatives and modifications in violation of this Agreement.\\n\\nBACKUPS:  If Licensee is an organization, it may make that number of copies of the Software necessary for internal noncommercial use at a single site within its organization provided that all information appearing in or on the original labels, including the copyright and trademark notices are copied onto the labels of the copies.\\n\\nUSES NOT PERMITTED:  You may not distribute, copy or use the Software except as explicitly permitted herein.\\n\\nYou may not sell, rent, lease, sublicense, lend, time-share or transfer, in whole or in part, or provide third parties access to prior or present versions (or any parts thereof) of the Software.\\n\\nASSIGNMENT: You may not assign this Agreement or your rights hereunder without the prior written consent of Licensor. Any attempted assignment without such consent shall be null and void.\\n\\nTERM: The term of the license granted by this Agreement is from Licensee\\'s acceptance of this Agreement by downloading the Software or by using the Software until terminated as provided below.\\n\\nThe Agreement automatically terminates without notice if you fail to comply with any provision of this Agreement.  Licensee may terminate this Agreement by ceasing using the Software.  Upon any termination of this Agreement, Licensee will delete any and all copies of the Software. You agree that all provisions which operate to protect the proprietary rights of Licensor shall remain in force should breach occur and that the obligation of confidentiality described in this Agreement is binding in perpetuity and, as such, survives the term of the Agreement.\\n\\nFEE: Provided Licensee abides completely by the terms and conditions of this Agreement, there is no fee due to Licensor for Licensee\\'s use of the Software in accordance with this Agreement.\\n\\nDISCLAIMER OF WARRANTIES:  THE SOFTWARE IS PROVIDED \"AS-IS\" WITHOUT WARRANTY OF ANY KIND INCLUDING ANY WARRANTIES OF PERFORMANCE OR MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE OR PURPOSE OR OF NON-INFRINGEMENT.  LICENSEE BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF THE SOFTWARE AND RELATED MATERIALS.\\n\\nSUPPORT AND MAINTENANCE: No Software support or training by the Licensor is provided as part of this Agreement.\\n\\nEXCLUSIVE REMEDY AND LIMITATION OF LIABILITY: To the maximum extent permitted under applicable law, Licensor shall not be liable for direct, indirect, special, incidental, or consequential damages or lost profits related to Licensee\\'s use of and/or inability to use the Software, even if Licensor is advised of the possibility of such damage.\\n\\nEXPORT REGULATION: Licensee agrees to comply with any and all applicable\\nU.S. export control laws, regulations, and/or other laws related to embargoes and sanction programs administered by the Office of Foreign Assets Control.\\n\\nSEVERABILITY: If any provision(s) of this Agreement shall be held to be invalid, illegal, or unenforceable by a court or other tribunal of competent jurisdiction, the validity, legality and enforceability of the remaining provisions shall not in any way be affected or impaired thereby.\\n\\nNO IMPLIED WAIVERS: No failure or delay by Licensor in enforcing any right or remedy under this Agreement shall be construed as a waiver of any future or other exercise of such right or remedy by Licensor.\\n\\nGOVERNING LAW: This Agreement shall be construed and enforced in accordance with the laws of the Commonwealth of Pennsylvania without reference to conflict of laws principles.  You consent to the personal jurisdiction of the courts of this County and waive their rights to venue outside of Allegheny County, Pennsylvania.\\n\\nENTIRE AGREEMENT AND AMENDMENTS: This Agreement constitutes the sole and entire agreement between Licensee and Licensor as to the matter set forth herein and supersedes any previous agreements, understandings, and arrangements between the parties relating hereto.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## About this fork",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "keras_Realtime_Multi-Person_Pose_Estimation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "anatolix",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anatolix/keras_Realtime_Multi-Person_Pose_Estimation/blob/new-generation/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 118,
      "date": "Wed, 29 Dec 2021 14:38:20 GMT"
    },
    "technique": "GitHub API"
  }
}