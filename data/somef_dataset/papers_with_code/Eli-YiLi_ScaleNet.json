{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use these models in your research, please cite:\n\n\t@inproceedings{Li2019ScaleNet,\n        title={Data-Driven Neuron Allocation for Scale Aggregation Networks},\n        author={Li, Yi and Kuang, Zhanghui and Chen, Yimin and Zhang, Wayne},\n        booktitle={CVPR},\n        year={2019}\n\t}\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Li2019ScaleNet,\n    title={Data-Driven Neuron Allocation for Scale Aggregation Networks},\n    author={Li, Yi and Kuang, Zhanghui and Chen, Yimin and Zhang, Wayne},\n    booktitle={CVPR},\n    year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9982284192051151
      ],
      "excerpt": "By Yi Li, Zhanghui Kuang, Yimin Chen, Wayne Zhang \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Eli-YiLi/ScaleNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-19T07:52:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-08T10:40:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is a PyTorch implementation of [Data-Driven Neuron Allocation for Scale Aggregation Networks](https://arxiv.org/pdf/1904.09460.pdf).(CVPR2019) with pretrained models. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8661562580301176,
        0.8394732650106601
      ],
      "excerpt": "The weights are available on BaiduYun with extract code: f1c5 \nUnlike the paper, we used better training settings: increase the epochs to 120 and replace multi-step learning rate by cosine learning rate. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8019699433842047
      ],
      "excerpt": "| ResNeXt-50 | 22.2 | 4.2 | 147 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8369294295523956
      ],
      "excerpt": "(empty models of ResNet, SE-ResNet, ResNeXt, ScaleNet for speed test) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Data-Driven Neuron Allocation for Scale Aggregation Networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Eli-YiLi/ScaleNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Fri, 24 Dec 2021 18:05:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Eli-YiLi/ScaleNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Eli-YiLi/ScaleNet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8761417608607179
      ],
      "excerpt": "GPU time \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8324675228401371
      ],
      "excerpt": "from pytorch.scalenet import * \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.819132388360871
      ],
      "excerpt": "  <img src=\"https://github.com/Eli-YiLi/ScaleNet/blob/master/figures/coco.png\" width=\"300\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8431270193994085,
        0.8640337402893672
      ],
      "excerpt": "model = scalenet50(structure_path='structures/scalenet50.json', ckpt=None) #: train from stratch \nmodel = scalenet50(structure_path='structures/scalenet50.json', ckpt='weights/scalenet50.pth') #: load pretrained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8704286650775758
      ],
      "excerpt": "| Model | Top-1 err. | FLOPs(10^9) | GPU time(ms)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065104333159325
      ],
      "excerpt": "| SE-ResNet-50 | 23.29 | 4.1 | 98 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8568033712094457
      ],
      "excerpt": "python3 tensorflow/test_speed.py scale|res|se|next \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Eli-YiLi/ScaleNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ScaleNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ScaleNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Eli-YiLi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Eli-YiLi/ScaleNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 53,
      "date": "Fri, 24 Dec 2021 18:05:02 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "scalenet",
      "classification",
      "pytorch",
      "tensorflow"
    ],
    "technique": "GitHub API"
  }
}