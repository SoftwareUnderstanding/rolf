{
  "citation": [
    {
      "confidence": [
        0.8450171500089286
      ],
      "excerpt": "Developed by Ryan Pope for EECS 649 (Intro to Artificial Intelligence). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ryanp73/ChessAI",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-03T18:42:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-17T16:40:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9586751268470615,
        0.9425733185105846,
        0.9483651845978388,
        0.8894258289960115
      ],
      "excerpt": "This repo contains several Jupyter notebooks to explore chess algorithms using python. I utilized the python library python-chess in order to execute and manage all of the chess backend features. I began with simple random move generation and slowly upgraded to using a minimax algorithm with basic material evaluation to determine best moves, \nAfter researching about AlphaZero and Leela Chess Zero, I tried to implement some similar approachs utilizing UCT Monte Carlo Tree Search to generate move sequences and a neural network that was trained to evaluate different positions using previous stockfish evaluations from the lichess dataset. \nI downloaded the May 2015 Lichess dataset from https://database.lichess.org . I then filtered games by Elo of both players greater than 1800 to generate \"better\" play and I used only games with the stockfish evaluations. I iterated over the moves of the game and created frames from the PGNs where I utilized an array of size 64 to store the encoded board. \nfiltered_games.pgn is the filtered PGN dataset that I utilized for training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8676663517606862
      ],
      "excerpt": "ChessExploration.ipynb is a Jupyter notebook with basic algorithms such as Minimax. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8512229316973496
      ],
      "excerpt": "MCTSChess.ipynb implements the Monte Carlo Tree Search and utilizes the Neural Net to evaluate positions. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ryanp73/ChessAI/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 22:22:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ryanp73/ChessAI/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ryanp73/ChessAI",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ryanp73/ChessAI/master/NeuralNetTraining.ipynb",
      "https://raw.githubusercontent.com/ryanp73/ChessAI/master/ChessExploration.ipynb",
      "https://raw.githubusercontent.com/ryanp73/ChessAI/master/Preprocessing.ipynb",
      "https://raw.githubusercontent.com/ryanp73/ChessAI/master/MCTSChess.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8482664447700814
      ],
      "excerpt": "preprocessed.csv is a CSV file containing the data as arrays of 64 values plus the evaluation for the state. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8059708108287507
      ],
      "excerpt": "Preprocessing.ipynb converted the PGN dataset into the arrays stored in the csv. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ryanp73/ChessAI/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Chess AI",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ChessAI",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ryanp73",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ryanp73/ChessAI/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 22:22:44 GMT"
    },
    "technique": "GitHub API"
  }
}