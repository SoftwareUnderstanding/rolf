{
  "citation": [
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "Useful references: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9979416683420556
      ],
      "excerpt": "[2] Tutorial on C51 https://mtomassoli.github.io/2017/12/08/distributional_rl/ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dannysdeng/dqn-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-10-14T07:51:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-11T15:30:33Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.940460648991029,
        0.816583058530494
      ],
      "excerpt": "Towards learning Rainbow-DQN and all that good stuffs in pytorch. \nRun the codes with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9017984680284121,
        0.9782307318167406,
        0.9882794995502091,
        0.8841193652466609
      ],
      "excerpt": "Testing results for 10M is shown in Figure 1.  \nThe comparisons are for \"DDQN + C51\", \"DDQN + QR-C200\" and \"DDQN + IQN-64-64-32\". \nRainbow in this repo runs kinda slow on my machine (TITAN Xp with Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz). It only reached 75 FPS  when using a prioritized memory of size 50,000 on the game Spaceinvaders, so it seems that it may not be able to finish 200M within 10 days. (Could be because of the sub-optimal way that is used for pushing new transitions into the PER buffer.) \nThe result inconsistency (shown by the following figures) w.r.t. the Google Dopamine implementation mainly comes from the fact that we use V4 environments while the reported results by Google Dopamine utilize V0 environments with \"sticky\" actions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch - Implicit Quantile Networks - Quantile Regression - C51",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dannysdeng/dqn-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 20:48:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dannysdeng/dqn-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dannysdeng/dqn-pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/dannysdeng/dqn-pytorch/master/runIt.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dannysdeng/dqn-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "dqn-pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dqn-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dannysdeng",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dannysdeng/dqn-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Thu, 23 Dec 2021 20:48:25 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "implicit-quantile-networks",
      "pytorch",
      "quantile-regression",
      "c51",
      "reinforcement-learning",
      "rainbow"
    ],
    "technique": "GitHub API"
  }
}