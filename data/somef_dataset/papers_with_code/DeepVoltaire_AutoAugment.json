{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1805.09501v1"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8637084770034852
      ],
      "excerpt": "Update July 13th, 2018: Wrote a Blogpost about AutoAugment and Double Transfer Learning. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DeepVoltaire/AutoAugment",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-05T18:36:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T03:38:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9796906916276171
      ],
      "excerpt": "Unofficial implementation of the ImageNet, CIFAR10 and SVHN Augmentation Policies learned by AutoAugment, described in this Google AI Blogpost. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9031063780610304,
        0.957051427313954
      ],
      "excerpt": "Finally, we show that policies found on one task can generalize well across different models and datasets.  \nFor example, the policy found on ImageNet leads to significant improvements on a variety of FGVC datasets. Even on datasets for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unofficial implementation of the ImageNet, CIFAR 10 and SVHN Augmentation Policies learned by AutoAugment using pillow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DeepVoltaire/AutoAugment/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 192,
      "date": "Tue, 28 Dec 2021 18:56:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DeepVoltaire/AutoAugment/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepVoltaire/AutoAugment",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/DeepVoltaire/AutoAugment/master/AutoAugment_Exploration.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DeepVoltaire/AutoAugment/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Philip Popien\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "AutoAugment - Learning Augmentation Policies from Data",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "AutoAugment",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepVoltaire",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DeepVoltaire/AutoAugment/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1245,
      "date": "Tue, 28 Dec 2021 18:56:18 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom autoaugment import ImageNetPolicy\nimage = PIL.Image.open(path)\npolicy = ImageNetPolicy()\ntransformed = policy(image)\n```\n\nTo see examples of all operations and magnitudes applied to images, take a look at  [AutoAugment_Exploration.ipynb](AutoAugment_Exploration.ipynb).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom autoaugment import ImageNetPolicy\ndata = ImageFolder(rootdir, transform=transforms.Compose(\n                        [transforms.RandomResizedCrop(224), \n                         transforms.RandomHorizontalFlip(), ImageNetPolicy(), \n                         transforms.ToTensor(), transforms.Normalize(...)]))\nloader = DataLoader(data, ...)\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom autoaugment import CIFAR10Policy\ndata = ImageFolder(rootdir, transform=transforms.Compose(\n                        [transforms.RandomCrop(32, padding=4, fill=128), #: fill parameter needs torchvision installed from source\n                         transforms.RandomHorizontalFlip(), CIFAR10Policy(), \n\t\t\t transforms.ToTensor(), \n                         Cutout(n_holes=1, length=16), #: (https://github.com/uoguelph-mlrg/Cutout/blob/master/util/cutout.py)\n                         transforms.Normalize(...)]))\nloader = DataLoader(data, ...)\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom autoaugment import SVHNPolicy\ndata = ImageFolder(rootdir, transform=transforms.Compose(\n                        [SVHNPolicy(), \n\t\t\t transforms.ToTensor(), \n                         Cutout(n_holes=1, length=20), #: (https://github.com/uoguelph-mlrg/Cutout/blob/master/util/cutout.py)\n                         transforms.Normalize(...)]))\nloader = DataLoader(data, ...)\n```\n\n------------------\n\n\n",
      "technique": "Header extraction"
    }
  ]
}