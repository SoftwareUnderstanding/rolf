{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1701.00160"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. **Alec Radford, Luke Metz, Soumith Chintala.** *Unsupervised representation learning with deep convolutional \ngenerative adversarial networks.*[[arxiv](https://arxiv.org/abs/1511.06434)]\n2. **Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, \nSherjil Ozair, Aaron Courville, Yoshua Bengio.** *Generative adversarial nets.* NIPS 2014 [[arxiv](https://arxiv.org/abs/1406.2661)]\n3. **Ian Goodfellow.** *Tutorial: Generative Adversarial Networks.* NIPS 2016 [[arxiv](https://arxiv.org/abs/1701.00160)]\n4. DCGAN Tutorial. [https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html]\n5. PyTorch Docs. [https://pytorch.org/docs/stable/index.html]\n6. Natsu6767. [https://github.com/Natsu6767/DCGAN-PyTorch]\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bardank/dcgan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-17T15:30:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-17T08:42:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9778196041634817
      ],
      "excerpt": "PyTorch implementation of DCGAN introduced in the paper: Unsupervised Representation Learning with Deep Convolutional  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9319708861235405
      ],
      "excerpt": "with zipfile.ZipFile(\"celeba.zip\",\"r\") as zip_ref: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8202809028685413
      ],
      "excerpt": "  --workers WORKERS     number of data loading workers \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9416463104432613,
        0.9407862408421551,
        0.8961129328077769
      ],
      "excerpt": "  --imageSize IMAGESIZE the height / width of the input image to network \n  --nz NZ               size of the latent z vector \n  --nc NC               Number of channels of input image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "It is the PyTorch implementation of DC-GAN.",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can download the CelebA dataset by using the following code in terminal:\n```\nmkdir data_faces\nwget https://s3-us-west-1.amazonaws.com/udacity-dlnfd/datasets/celeba.zip \n```\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bardank/dc-gan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 30 Dec 2021 07:05:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bardank/dcgan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bardank/dcgan",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8074332730146293
      ],
      "excerpt": "  --manualSeed SEED     manual seed \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8140599264443972,
        0.9133368656218674,
        0.8009814376166478
      ],
      "excerpt": "also be used. Download the data and update the directory location inside the root variable in utils.py. Also don't forget to change the number of channels in train.py according to the channels of images in your dataset. \nimport zipfile \nwith zipfile.ZipFile(\"celeba.zip\",\"r\") as zip_ref: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8587476985249702,
        0.9343497387491494
      ],
      "excerpt": ":#: Usage \nusage: train.py [-h] --dataset DATASET --dataroot DATAROOT [--workers WORKERS] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8117668274155974
      ],
      "excerpt": "  --batchSize BATCHSIZE input batch size \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bardank/dcgan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep Convolutional GAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dcgan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bardank",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bardank/dcgan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 30 Dec 2021 07:05:46 GMT"
    },
    "technique": "GitHub API"
  }
}