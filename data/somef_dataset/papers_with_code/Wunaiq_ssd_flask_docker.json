{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Liu W, Anguelov D, Erhan D, et al. Ssd: Single shot multibox detector[C]//European conference on computer vision. Springer, Cham, 2016: 21-37.\n2. https://github.com/amdegroot/ssd.pytorch.git\n3. https://github.com/jomalsan/pytorch-mask-rcnn-flask.git\n4. https://github.com/imadelh/ML-web-app.git\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9778418237172694
      ],
      "excerpt": "The referenced paper is: SSD: Single Shot MultiBox Detector https://arxiv.org/pdf/1512.02325.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "           /bin/bash \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Wunaiq/ssd_flask_docker",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-19T10:58:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-24T07:05:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9550099938620472
      ],
      "excerpt": "A SSD object detection web project implemented with Flask and Docker. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8621993744174089,
        0.9019321676830538,
        0.8903055195740364
      ],
      "excerpt": "* image: test on custom data and return image with bboxes drew \n* bboxes: test on custom data and return locations of bboxes \n* precision: eval on VOC and return mAP \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.818949549160152
      ],
      "excerpt": "Eval on VOC  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Wunaiq/ssd_flask_docker/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 06:30:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Wunaiq/ssd_flask_docker/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Wunaiq/ssd_flask_docker",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Wunaiq/ssd_flask_docker/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Wunaiq/ssd_flask_docker/master/app/SSDdetector/data/scripts/VOC2007.sh",
      "https://raw.githubusercontent.com/Wunaiq/ssd_flask_docker/master/app/SSDdetector/data/scripts/VOC2012.sh",
      "https://raw.githubusercontent.com/Wunaiq/ssd_flask_docker/master/app/SSDdetector/data/scripts/COCO2014.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Download COCO:\n\n```\ncd ./SSDdetector\n./data/scripts/COCO2014.sh\n```\n\nDownload VOC:\n\n```\n./data/scripts/VOC2007.sh\n./data/scripts/VOC2012.sh\n```\n\nDownload the fc-reduced VGG-16 PyTorch base network weights:\n```\nmkdir weights\ncd ./weights\nwget https://s3.amazonaws.com/amdegroot-models/vgg16_reducedfc.pth\n\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "           --name=client \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9272405965684261
      ],
      "excerpt": ": Run test scrip in contanier to ensure that the environment meets the requirements. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd ./web_test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.955594071079471
      ],
      "excerpt": "-cuda: test on GPU or not \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9655578390692322
      ],
      "excerpt": "cd ./app/SSDdetector/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999833231880651
      ],
      "excerpt": "pip3 install visdom \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9655578390692322
      ],
      "excerpt": "cd ./app/SSDdetector/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8060878180304415,
        0.9246227682586091
      ],
      "excerpt": ": There are some test images in container for simple testing, more detatils about testing are in Web Test & Eval. \npython web_test.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152700152485309
      ],
      "excerpt": "       -test_url=http://0.0.0.0:8008/test \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8504391150759286,
        0.8477511778345236
      ],
      "excerpt": "mkdir custom_data  #: and put your test images in this folder \npython web_test.py -restype=image \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.844429603831688
      ],
      "excerpt": "python web_test.py -restype=precision \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "python3 ./trainval/train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8808034001556608
      ],
      "excerpt": "python3 ./trainval/eval.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Wunaiq/ssd_flask_docker/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "HTML",
      "JavaScript",
      "CSS",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SSD Flask Docker",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ssd_flask_docker",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Wunaiq",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Wunaiq/ssd_flask_docker/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython >= 3.5\npytorch >= 1.0.0\ncuda 9.0\ncudnn 7\n```\n\n\n\n&nbsp;\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ndocker pull wunaiq/ssd_flask_docker:py36_pytorch1.0.0_cu90\ndocker run -itd \\\n           --name=server \\\n           --network=host \\\n           -p 8008:8008 \\\n           wunaiq/ssd_flask_docker:py36_pytorch1.0.0_cu90\n```\nNow, the web server is runing on: [http://0.0.0.0:8008](http://0.0.0.0:8008)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 06:30:38 GMT"
    },
    "technique": "GitHub API"
  }
}