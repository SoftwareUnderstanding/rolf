{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2007.03316 (2020).\n* **[GCNFN](https://arxiv.org/pdf/1902.06673.pdf)**: Monti, Federico, Fabrizio Frasca, Davide Eynard, Damon Mannion, and Michael M. Bronstein. \"Fake news detection on social media using geometric deep learning.\" arXiv preprint https://arxiv.org/abs/1902.06673 (2019).\n* **[BiGCN](https://arxiv.org/pdf/2001.06362.pdf)**: Bian, Tian, Xi Xiao, Tingyang Xu, Peilin Zhao, Wenbing Huang, Yu Rong, and Junzhou Huang. \"Rumor detection on social media with bi-directional graph convolutional networks.\" In Proceedings of the AAAI Conference on Artificial Intelligence, vol. 34, no. 01, pp. 549-556. 2020.\n* **[UPFD-GCN](https://arxiv.org/pdf/1609.02907.pdf)**: Kipf, Thomas N., and Max Welling. \"Semi-supervised classification with graph convolutional networks.\" arXiv preprint https://arxiv.org/abs/1609.02907 (2016).\n* **[UPFD-GAT](https://arxiv.org/pdf/1710.10903.pdf)**: Veli\u010dkovi\u0107, Petar, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. \"Graph attention networks.\" arXiv preprint https://arxiv.org/abs/1710.10903 (2017).\n* **[UPFD-SAGE](https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf)**: Hamilton, William L., Rex Ying, and Jure Leskovec. \"Inductive representation learning on large graphs.\" arXiv preprint https://arxiv.org/abs/1706.02216 (2017).\n\nSince the UPFD framework is built upon the [PyG](https://github.com/rusty1s/pytorch_geometric), you can easily try other graph classification models\nlike [GIN](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/mutag_gin.py) and [HGP-SL](https://github.com/cszhangzhen/HGP-SL)\nunder our dataset.\n\n\n## How to Contribute\nYou are welcomed to submit your model code, hyper-parameters, and results to this repo via create a pull request.\nAfter verifying the results, your model will be added to the repo and the result will be updated to the [benchmark](https://paperswithcode.com/dataset/upfd).\nPlease email to [ytongdou@gmail.com](mailto:ytongdou@gmail.com) for other inquiries.",
      "https://arxiv.org/abs/1902.06673 (2019).\n* **[BiGCN](https://arxiv.org/pdf/2001.06362.pdf)**: Bian, Tian, Xi Xiao, Tingyang Xu, Peilin Zhao, Wenbing Huang, Yu Rong, and Junzhou Huang. \"Rumor detection on social media with bi-directional graph convolutional networks.\" In Proceedings of the AAAI Conference on Artificial Intelligence, vol. 34, no. 01, pp. 549-556. 2020.\n* **[UPFD-GCN](https://arxiv.org/pdf/1609.02907.pdf)**: Kipf, Thomas N., and Max Welling. \"Semi-supervised classification with graph convolutional networks.\" arXiv preprint https://arxiv.org/abs/1609.02907 (2016).\n* **[UPFD-GAT](https://arxiv.org/pdf/1710.10903.pdf)**: Veli\u010dkovi\u0107, Petar, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. \"Graph attention networks.\" arXiv preprint https://arxiv.org/abs/1710.10903 (2017).\n* **[UPFD-SAGE](https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf)**: Hamilton, William L., Rex Ying, and Jure Leskovec. \"Inductive representation learning on large graphs.\" arXiv preprint https://arxiv.org/abs/1706.02216 (2017).\n\nSince the UPFD framework is built upon the [PyG](https://github.com/rusty1s/pytorch_geometric), you can easily try other graph classification models\nlike [GIN](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/mutag_gin.py) and [HGP-SL](https://github.com/cszhangzhen/HGP-SL)\nunder our dataset.\n\n\n## How to Contribute\nYou are welcomed to submit your model code, hyper-parameters, and results to this repo via create a pull request.\nAfter verifying the results, your model will be added to the repo and the result will be updated to the [benchmark](https://paperswithcode.com/dataset/upfd).\nPlease email to [ytongdou@gmail.com](mailto:ytongdou@gmail.com) for other inquiries.",
      "https://arxiv.org/abs/1609.02907 (2016).\n* **[UPFD-GAT](https://arxiv.org/pdf/1710.10903.pdf)**: Veli\u010dkovi\u0107, Petar, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. \"Graph attention networks.\" arXiv preprint https://arxiv.org/abs/1710.10903 (2017).\n* **[UPFD-SAGE](https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf)**: Hamilton, William L., Rex Ying, and Jure Leskovec. \"Inductive representation learning on large graphs.\" arXiv preprint https://arxiv.org/abs/1706.02216 (2017).\n\nSince the UPFD framework is built upon the [PyG](https://github.com/rusty1s/pytorch_geometric), you can easily try other graph classification models\nlike [GIN](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/mutag_gin.py) and [HGP-SL](https://github.com/cszhangzhen/HGP-SL)\nunder our dataset.\n\n\n## How to Contribute\nYou are welcomed to submit your model code, hyper-parameters, and results to this repo via create a pull request.\nAfter verifying the results, your model will be added to the repo and the result will be updated to the [benchmark](https://paperswithcode.com/dataset/upfd).\nPlease email to [ytongdou@gmail.com](mailto:ytongdou@gmail.com) for other inquiries.",
      "https://arxiv.org/abs/1710.10903 (2017).\n* **[UPFD-SAGE](https://cs.stanford.edu/people/jure/pubs/graphsage-nips17.pdf)**: Hamilton, William L., Rex Ying, and Jure Leskovec. \"Inductive representation learning on large graphs.\" arXiv preprint https://arxiv.org/abs/1706.02216 (2017).\n\nSince the UPFD framework is built upon the [PyG](https://github.com/rusty1s/pytorch_geometric), you can easily try other graph classification models\nlike [GIN](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/mutag_gin.py) and [HGP-SL](https://github.com/cszhangzhen/HGP-SL)\nunder our dataset.\n\n\n## How to Contribute\nYou are welcomed to submit your model code, hyper-parameters, and results to this repo via create a pull request.\nAfter verifying the results, your model will be added to the repo and the result will be updated to the [benchmark](https://paperswithcode.com/dataset/upfd).\nPlease email to [ytongdou@gmail.com](mailto:ytongdou@gmail.com) for other inquiries.",
      "https://arxiv.org/abs/1706.02216 (2017).\n\nSince the UPFD framework is built upon the [PyG](https://github.com/rusty1s/pytorch_geometric), you can easily try other graph classification models\nlike [GIN](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/mutag_gin.py) and [HGP-SL](https://github.com/cszhangzhen/HGP-SL)\nunder our dataset.\n\n\n## How to Contribute\nYou are welcomed to submit your model code, hyper-parameters, and results to this repo via create a pull request.\nAfter verifying the results, your model will be added to the repo and the result will be updated to the [benchmark](https://paperswithcode.com/dataset/upfd).\nPlease email to [ytongdou@gmail.com](mailto:ytongdou@gmail.com) for other inquiries."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{dou2021user,\n  title={User Preference-aware Fake News Detection},\n  author={Dou, Yingtong and Shu, Kai and Xia, Congying and Yu, Philip S. and Sun, Lichao},\n  booktitle={Proceedings of the 44th International ACM SIGIR Conference on Research and Development in Information Retrieval},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9980113117002485
      ],
      "excerpt": "If you use the code in your project, please cite the following paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9042750916398984
      ],
      "excerpt": "plus a 10-dimensional profile feature. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111036989382164
      ],
      "excerpt": "    <a href=\"https://github.com/safe-graph/GNN-FakeNews\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9991783771668673,
        0.9999863311638649,
        0.9999999794880241,
        0.9994482097313714,
        0.9999224733133634,
        0.9999807504843193
      ],
      "excerpt": "GNN-CL: Han, Yi, Shanika Karunasekera, and Christopher Leckie. \"Graph neural networks with continual learning for fake news detection from social media.\" arXiv preprint arXiv:2007.03316 (2020). \nGCNFN: Monti, Federico, Fabrizio Frasca, Davide Eynard, Damon Mannion, and Michael M. Bronstein. \"Fake news detection on social media using geometric deep learning.\" arXiv preprint arXiv:1902.06673 (2019). \nBiGCN: Bian, Tian, Xi Xiao, Tingyang Xu, Peilin Zhao, Wenbing Huang, Yu Rong, and Junzhou Huang. \"Rumor detection on social media with bi-directional graph convolutional networks.\" In Proceedings of the AAAI Conference on Artificial Intelligence, vol. 34, no. 01, pp. 549-556. 2020. \nUPFD-GCN: Kipf, Thomas N., and Max Welling. \"Semi-supervised classification with graph convolutional networks.\" arXiv preprint arXiv:1609.02907 (2016). \nUPFD-GAT: Veli\u010dkovi\u0107, Petar, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. \"Graph attention networks.\" arXiv preprint arXiv:1710.10903 (2017). \nUPFD-SAGE: Hamilton, William L., Rex Ying, and Jure Leskovec. \"Inductive representation learning on large graphs.\" arXiv preprint arXiv:1706.02216 (2017). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/safe-graph/GNN-FakeNews",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-03T10:01:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T14:41:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9710101161930119,
        0.8982984628056572,
        0.9025669737602484
      ],
      "excerpt": "This repo includes the Pytorch-Geometric implementation of a series of Graph Neural Network (GNN) based fake news detection models. \nAll GNN models are implemented and evaluated under the User Preference-aware Fake News Detection (UPFD) framework. \nThe fake news detection problem is instantiated as a graph classification task under the UPFD framework.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629924323411151,
        0.9888246597181629
      ],
      "excerpt": "The UPFD dataset and its example usage is also available at the PyTorch-Geometric official repo \nWe welcome contributions of results of existing models and the SOTA results of new models based on our dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8774185151529805,
        0.908925214220865
      ],
      "excerpt": "The dataset includes fake&real news propagation networks on Twitter built according to fact-check information from \nPolitifact and Gossipcop. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308832761703,
        0.8385710753727007,
        0.9402309030412288
      ],
      "excerpt": "We crawled near 20 million historical tweets from users who participated in fake news propagation in FakeNewsNet to \ngenerate node features in the dataset. \nThe statistics of the dataset is shown below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9376738580101772,
        0.9136865784209064,
        0.8913568171128234,
        0.9668016408325156,
        0.8382892932328052,
        0.8121622411583792
      ],
      "excerpt": "Due to the Twitter policy, we could not release the crawled user historical tweets publicly. \nTo get the corresponding Twitter user information, you can refer to news lists and the node_id-twitter_id mappings under \\data. \nTwo .pkl files include the dictionaries with the keys as the node_ids in the datasets and the values represent corresponding Twitter user_ids. \nIn the UPFD project, we use Tweepy and Twitter Developer API to get the user information. \nWe incorporate four node feature types in the dataset, the 768-dimensional bert and 300-dimensional spacy features  \nare encoded using pretrained BERT and spaCy word2vec, respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8806429530894728
      ],
      "excerpt": "The 310-dimensional content feature is composed of a 300-dimensional user comment word2vec (spaCy) embedding \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9318312795564815
      ],
      "excerpt": "Each graph is a hierarchical tree-structured graph where the root node represents the news, the leaf nodes are Twitter users who retweeted the root news. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112297538260513,
        0.9099981590084745
      ],
      "excerpt": "The following figure shows the UPFD framework including the dataset construction details  \nYou can refer to the paper for more details about the dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080293999876895
      ],
      "excerpt": "The implemented models are as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8742624059444168
      ],
      "excerpt": "BiGCN: Bian, Tian, Xi Xiao, Tingyang Xu, Peilin Zhao, Wenbing Huang, Yu Rong, and Junzhou Huang. \"Rumor detection on social media with bi-directional graph convolutional networks.\" In Proceedings of the AAAI Conference on Artificial Intelligence, vol. 34, no. 01, pp. 549-556. 2020. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8949659710896171,
        0.8212925175202352
      ],
      "excerpt": "Since the UPFD framework is built upon the PyG, you can easily try other graph classification models \nlike GIN and HGP-SL \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9059165551793184
      ],
      "excerpt": "You are welcomed to submit your model code, hyper-parameters, and results to this repo via create a pull request. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A collection of GNN-based fake news detection models.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/safe-graph/GNN-FakeNews/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Wed, 29 Dec 2021 04:11:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/safe-graph/GNN-FakeNews/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "safe-graph/GNN-FakeNews",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the code in this repo, you need to have `Python>=3.6`, `PyTorch>=1.6`, and `PyTorch-Geometric>=1.6.1`.\nPlease follow the installation instructions of [PyTorch-Geometric](https://github.com/rusty1s/pytorch_geometric) to install PyG.\n\nOther dependencies can be installed using the following commands:\n\n```bash\ngit clone https://github.com/safe-graph/GNN-FakeNews.git\ncd GNN-FakeNews\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Our [dataset](https://github.com/dmlc/dgl/blob/master/python/dgl/data/fakenews.py) has been integrated with the official [Deep Graph library](https://github.com/dmlc/dgl)(DGL). Please follow the installation instructions of [DGL](https://github.com/dmlc/dgl) to install the latest version of DGL and check the [docstring](https://github.com/dmlc/dgl/blob/master/python/dgl/data/fakenews.py) of the dataset class for dataset usage.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Our [dataset](https://github.com/rusty1s/pytorch_geometric/blob/master/torch_geometric/datasets/upfd.py) has been integrated with the official PyTorch-Geometric library. Please follow the installation instructions of [PyTorch-Geometric](https://github.com/rusty1s/pytorch_geometric) to install the latest version of PyG and check the [code example](https://github.com/rusty1s/pytorch_geometric/blob/master/examples/upfd.py) for dataset usage.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9261612183234439
      ],
      "excerpt": "You can make reproducible run on CodeOcean without manual configuration. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182862115317536,
        0.9622968778423417
      ],
      "excerpt": "If you have installed the latest version of PyG or DGL, you can use their built-in dataloaders to download and load the UPFD dataset. \nIf you install the project manually, you can download the dataset (1.2GB) via the link below and \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8039087719559532
      ],
      "excerpt": "Installation | Datasets | Models |  PyG Example  | DGL Example   | Benchmark | How to Contribute \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8062424934207347
      ],
      "excerpt": "unzip the data under the \\data directory. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/safe-graph/GNN-FakeNews/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "GNN-based Fake News Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "GNN-FakeNews",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "safe-graph",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/safe-graph/GNN-FakeNews/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 103,
      "date": "Wed, 29 Dec 2021 04:11:19 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "fakenewsdetection",
      "misinformation",
      "graphneuralnetwork",
      "machine-learning",
      "benchmarking",
      "social-media",
      "social-network-analysis",
      "deep-learning"
    ],
    "technique": "GitHub API"
  }
}