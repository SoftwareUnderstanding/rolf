{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Mnih et el 2013, Playing Atari with Deep Reinforcement Learning, NIPS Deep Learning Workshop 2013 (http://arxiv.org/abs/1312.5602)\n2. Mnih et el 2016, Asynchronous Methods for Deep Reinforcement Learning, Proceedings of the 33rd ICML, New York, NY, USA, 2016 (http://arxiv.org/abs/1602.01783)\n3. David Silver's \"Reinforcement Learning\" lecture videos (https://www.youtube.com/watch?v=2pWv7GOvuf0)\n4. https://www.nervanasys.com/demystifying-deep-reinforcement-learning/\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joshiatul/game_playing",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-04-08T01:52:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-18T21:59:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8960987910819759,
        0.9652799368965027
      ],
      "excerpt": "Simple game playing with reinforcement learning and vowpal wabbit - still work in progress \nSolves gridworld (4x4, 5x5, 6x6 so far, does better than random on 7x7) using asynchronous methods as descibed in (2) (also supports experience-replay described in (1) but works 10x slower wrt (2)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Simple game playing with reinforcement learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joshiatul/game_playing/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 15:50:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/joshiatul/game_playing/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "joshiatul/game_playing",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/joshiatul/game_playing/master/solved_environments/blackjack/Blackjack_with_simple_lookup.ipynb",
      "https://raw.githubusercontent.com/joshiatul/game_playing/master/solved_environments/blackjack/Blackjack%20with%20vw.ipynb",
      "https://raw.githubusercontent.com/joshiatul/game_playing/master/solved_environments/gridworld/Gridworld%20with%20vw.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**1. Install python / vw / openAI gym development tools and dependancies:**\n * On linux / centos:\n * sudo yum groupinstall \"Development Tools\"\n * sudo yum -y install gcc-c++ python-devel atlas-sse3-devel lapack-devel gcc-gfortran\n * sudo yum install boost-devel zlib-devel cmake\n * On Mac:\n * brew update\n * brew install boost --with-python\n * brew install boost-python\n * brew install cmake\n\n**2. Create a folder:**\n* sudo mkdir /usr/local/myproject\n* cd /usr/local/myproject\n* sudo chmod -R 777 myproject/\n\n**3. Install pip and virtualenv (skip if you already have it installed):**\n* sudo curl -o /tmp/ez_setup.py https://bootstrap.pypa.io/ez_setup.py\n* sudo /usr/bin/python /tmp/ez_setup.py \n* sudo /usr/bin/easy_install pip \n* sudo pip install virtualenv\n* cd myproject\n* virtualenv venv_ml\n* source /usr/local/myproject/venv_ml/bin/activate\n\n**4. Install python packages in virtual environment:**\n* pip install numpy\n* pip install mmh3\n* pip install gym\n* pip install gym['atari']\t\n* pip install pyaml\t\t\n* pip install pandas\t\n* pip install scipy\n\n**5. Install vw with python:**\n* Either just 'pip install vowpalwabbit'\n\nOr,\n\n* git clone https://github.com/JohnLangford/vowpal_wabbit\n* cd vowpal_wabbit\n* make\n* sudo make install\n* make python\n* cd /usr/local/myproject/vowpalwabbit/python\n* sudo cp pylibvw.so /usr/local/myproject/venv_ml/lib/python2.7/lib-dynload/\n* cp -R vowpalwabbit/ /usr/local/myproject/venv_ml/lib/python2.7/site-packages/vowpalwabbit\n\n**6. Instructions to run training**\n* git clone https://github.com/joshiatul/game_playing\n\ncd game_playing and then run (set config yaml parameters):\n* python simulate_environment.py --config example_config.yaml --train\n* python simulate_environment.py --config example_config.yaml --test\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8226652338458988
      ],
      "excerpt": "Train / try to solve OPENAI gym games - pong / breakout \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/joshiatul/game_playing/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2016 joshiatul\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "game_playing",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "game_playing",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "joshiatul",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joshiatul/game_playing/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 15:50:09 GMT"
    },
    "technique": "GitHub API"
  }
}