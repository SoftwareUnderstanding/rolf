{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.11946",
      "https://arxiv.org/abs/1905.11946.'\n2. [https://github.com/qubvel/efficientnet](https://github.com/qubvel/efficientnet"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Mingxing Tan and Quoc V. Le. EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. ICML 2019. Arxiv link: https://arxiv.org/abs/1905.11946.'\n2. [https://github.com/qubvel/efficientnet](https://github.com/qubvel/efficientnet)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8490817347094312
      ],
      "excerpt": "face detection, gender and age classification. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8251022327183287
      ],
      "excerpt": "Please see age_gender_estimation.ipynb \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/buiquangmanhhp1999/age_gender_estimation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-07T02:13:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T13:12:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9899393773829549,
        0.8618237785088774,
        0.9174796397287345,
        0.9406689615332973,
        0.9183244825263932,
        0.9350816033117622,
        0.9512191035095632
      ],
      "excerpt": "Keras implementation of EfficientNet model for age and gender estimation from the paper \nEfficientNet: Rethinking Model Scaling for Convolutional Neural Networks \nContains code to build the EfficientNets B0-B7 from the paper, and includes weights for configurations. \nIn this paper, I used EfficientNets B4 model for estimation. \nFacial details analysis play an important role in understanding human behavior. Detail such as age and gender  \nare the key indicator in analyzing characteristic of a person. \nIn this paper, we propose an architecture of EfficientNets which can jointly learn representations for three tasks:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9757854426544347
      ],
      "excerpt": "This is a Keras implementation of a EfficientNet model for estimating age and gender from a face image. In this paper, I use  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9599409975509886,
        0.8446176292369991
      ],
      "excerpt": "for testing, which consist of age and gender information \nDataset consist of most popular 100,000 actors as listed on the IMDb website and (automatically) crawled from their profiles \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9826211563101257,
        0.967039677542548,
        0.9707888254525852,
        0.8749757050785032
      ],
      "excerpt": "IMDB-WIKI age data have over 101 age classes, we want to create a model that is practical for real world application \nThere are some images in the data are mis labeled (some with negative age), we have manually check and reorganize the data.  \nThe datasets is processed into 5 classes of age and 2 classes of gender: age_branch(1-13, 14-23, 24-39, 40-55, 56-85),  \ngender_branch(0: Male, 1: Female) based on facial feature of each age segment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8336989823046512
      ],
      "excerpt": "UTKFace dataset is a large-scale face dataset with long age span (range from 0 to 116 years old). The dataset consists of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9511136118699346,
        0.9351707474226835
      ],
      "excerpt": "To increase accuracy, we used MTCNN to crop the faces and remove non-face image. \nTo conveniently moving dataset to Google Drive (for training in Google Collab). We encode all dataset to \u2018.npy\u2019 format  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Keras implementation of EfficientNet model for age and gender estimation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/buiquangmanhhp1999/age_gender_estimation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 18:32:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/buiquangmanhhp1999/age_gender_estimation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "buiquangmanhhp1999/age_gender_estimation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/buiquangmanhhp1999/age_gender_estimation/master/age_gender_estimation.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9278009034463534
      ],
      "excerpt": "Dowload the datasets from the UTKFace dataset. UTKFace.tar.gz can be downloaded  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9364541555520881
      ],
      "excerpt": "run create_db.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9649363715627319
      ],
      "excerpt": "Run file data/create_db.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8210455093558007
      ],
      "excerpt": "(Numpy array) instead of uploading every images. All the datasets are decoded into images before training the model. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/buiquangmanhhp1999/age_gender_estimation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientNets in Keras",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "age_gender_estimation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "buiquangmanhhp1999",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/buiquangmanhhp1999/age_gender_estimation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.7+\n- EfficientNets library (!!! important: pip install -U efficientnet==0.0.4)\n- OpenCV2\n- Keras\n- Numpy\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Sat, 25 Dec 2021 18:32:19 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "age-gender-estimation",
      "utkface-dataset",
      "imdb-wiki-dataset",
      "efficientnet-model"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`python3 inference_img.py`\n\n- Estimated result: \n![selenagomez](https://user-images.githubusercontent.com/48142689/74002820-ff997c80-49a2-11ea-815b-2c64ffc91193.jpg)\n\n",
      "technique": "Header extraction"
    }
  ]
}