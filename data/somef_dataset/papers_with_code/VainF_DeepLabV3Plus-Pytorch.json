{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1706.05587",
      "https://arxiv.org/abs/1802.02611"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] [Rethinking Atrous Convolution for Semantic Image Segmentation](https://arxiv.org/abs/1706.05587)\n\n[2] [Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation](https://arxiv.org/abs/1802.02611)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "        /VOCtrainval_11-May-2012.tar \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "        /VOCtrainval_11-May-2012.tar \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VainF/DeepLabV3Plus-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-28T11:29:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T14:38:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9524342501877803
      ],
      "excerpt": "DeepLabv3, DeepLabv3+ with pretrained models for Pascal VOC & Cityscapes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8119473266644903,
        0.8805154522971181
      ],
      "excerpt": "All pretrained models: Dropbox, Tencent Weiyun \nNote: The HRNet backbone was contributed by @timothylimyl. A pre-trained backbone is available at google drive. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8926979934846211
      ],
      "excerpt": "Atrous Separable Convolution is supported in this repo. We provide a simple tool network.convert_to_separable_conv to convert nn.Conv2d to AtrousSeparableConvolution. Please run main.py with '--separable_conv' if it is required. See 'main.py' and 'network/_deeplab.py' for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    /data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.982071589285009
      ],
      "excerpt": "See chapter 4 of [2] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    /data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9831944719950368
      ],
      "excerpt": "Note: There is no SyncBN in this repo, so training with multple GPUs and small batch size may degrades the performance. See PyTorch-Encoding for more details about SyncBN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "DeepLabv3, DeepLabv3+ and pretrained weights on VOC & Cityscapes",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n/datasets\n    /data\n        /cityscapes\n            /gtFine\n            /leftImg8bit\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VainF/DeepLabV3Plus-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 178,
      "date": "Wed, 29 Dec 2021 16:35:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/VainF/DeepLabV3Plus-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "VainF/DeepLabV3Plus-Pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8027694744286499,
        0.8027694744286499
      ],
      "excerpt": "| DeepLabV3-MobileNet       | 16      |  6.0G      |   16/16  |  0.701     |    Download       | Download | \n| DeepLabV3-ResNet50         | 16      |  51.4G     |  16/16   |  0.769     |    Download | Download | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8284661187021929,
        0.8027694744286499,
        0.8027694744286499
      ],
      "excerpt": "| DeepLabV3Plus-MobileNet   | 16      |  17.0G      |  16/16   |  0.711    |    Download   | Download | \n| DeepLabV3Plus-ResNet50    | 16      |   62.7G     |  16/16   |  0.772     |    Download   | Download | \n| DeepLabV3Plus-ResNet101     | 16      |  83.4G     |  16/16   |  0.783     |    Download   | Download | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8027694744286499
      ],
      "excerpt": "| DeepLabV3Plus-MobileNet   | 16      |  135G      |  16/16   |  0.721  |    Download | Download  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8006694184424418
      ],
      "excerpt": "DeepLabv3, DeepLabv3+ with pretrained models for Pascal VOC & Cityscapes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8114276803694076
      ],
      "excerpt": "All pretrained models: Dropbox, Tencent Weiyun \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474329009328935
      ],
      "excerpt": "colorized_preds = val_dst.decode_target(preds).astype('uint8') #: To RGB images, (N, H, W, 3), ranged 0~255, numpy array \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.965093925617797
      ],
      "excerpt": "python predict.py --input datasets/data/cityscapes/leftImg8bit/train/bremen/bremen_000000_000019_leftImg8bit.png  --dataset cityscapes --model deeplabv3plus_mobilenet --ckpt checkpoints/best_deeplabv3plus_mobilenet_cityscapes_os16.pth --save_val_results_to test_results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9616312936317911,
        0.8134970376519536
      ],
      "excerpt": "python predict.py --input datasets/data/cityscapes/leftImg8bit/train/bremen  --dataset cityscapes --model deeplabv3plus_mobilenet --ckpt checkpoints/best_deeplabv3plus_mobilenet_cityscapes_os16.pth --save_val_results_to test_results \nTraining: 513x513 random crop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.86053719068941
      ],
      "excerpt": "|  Model          | Batch Size  | FLOPs  | train/val OS   |  mIoU        | Dropbox  | Tencent Weiyun  |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8027371034741632
      ],
      "excerpt": "| DeepLabV3-ResNet50         | 16      |  51.4G     |  16/16   |  0.769     |    Download | Download | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8134970376519536
      ],
      "excerpt": "Training: 768x768 random crop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.86053719068941
      ],
      "excerpt": "|  Model          | Batch Size  | FLOPs  | train/val OS   |  mIoU        | Dropbox  |  Tencent Weiyun  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080655337874228,
        0.9080655337874228,
        0.9080655337874228,
        0.9080655337874228
      ],
      "excerpt": "<img src=\"samples/1_image.png\"   width=\"20%\"> \n<img src=\"samples/1_target.png\"  width=\"20%\"> \n<img src=\"samples/1_pred.png\"    width=\"20%\"> \n<img src=\"samples/1_overlay.png\" width=\"20%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080655337874228,
        0.9080655337874228,
        0.9080655337874228,
        0.9080655337874228
      ],
      "excerpt": "<img src=\"samples/23_image.png\"   width=\"20%\"> \n<img src=\"samples/23_target.png\"  width=\"20%\"> \n<img src=\"samples/23_pred.png\"    width=\"20%\"> \n<img src=\"samples/23_overlay.png\" width=\"20%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080655337874228,
        0.9080655337874228,
        0.9080655337874228,
        0.9080655337874228
      ],
      "excerpt": "<img src=\"samples/114_image.png\"   width=\"20%\"> \n<img src=\"samples/114_target.png\"  width=\"20%\"> \n<img src=\"samples/114_pred.png\"    width=\"20%\"> \n<img src=\"samples/114_overlay.png\" width=\"20%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9374164152931248,
        0.9374164152931248
      ],
      "excerpt": "<img src=\"samples/city_1_target.png\"   width=\"45%\"> \n<img src=\"samples/city_1_overlay.png\"  width=\"45%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9374164152931248,
        0.9374164152931248
      ],
      "excerpt": "<img src=\"samples/city_6_target.png\"   width=\"45%\"> \n<img src=\"samples/city_6_overlay.png\"  width=\"45%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.931103334025588
      ],
      "excerpt": "You can run train.py with \"--download\" option to download and extract pascal voc dataset. The defaut path is './datasets/data': \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8108718768164134
      ],
      "excerpt": "Run main.py with \"--year 2012_aug\" to train your model on Pascal VOC2012 Aug. You can also parallel your training on 4 GPUs with '--gpu_id 0,1,2,3' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8940565370729574,
        0.8730152096230279
      ],
      "excerpt": "python main.py --model deeplabv3plus_mobilenet --enable_vis --vis_port 28333 --gpu_id 0 --year 2012_aug --crop_val --lr 0.01 --crop_size 513 --batch_size 16 --output_stride 16 \nRun main.py with '--continue_training' to restore the state_dict of optimizer and scheduler from YOUR_CKPT. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9035532734794456
      ],
      "excerpt": "python main.py ... --ckpt YOUR_CKPT --continue_training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9088907528365279
      ],
      "excerpt": "python main.py --model deeplabv3plus_mobilenet --enable_vis --vis_port 28333 --gpu_id 0 --year 2012_aug --crop_val --lr 0.01 --crop_size 513 --batch_size 16 --output_stride 16 --ckpt checkpoints/best_deeplabv3plus_mobilenet_voc_os16.pth --test_only --save_val_results \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/VainF/DeepLabV3Plus-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Gongfan Fang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepLabv3Plus-Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepLabV3Plus-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "VainF",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VainF/DeepLabV3Plus-Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 619,
      "date": "Wed, 29 Dec 2021 16:35:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deeplabv3plus",
      "deeplabv3",
      "pytorch",
      "pascal-voc",
      "cityscapes",
      "segmentation"
    ],
    "technique": "GitHub API"
  }
}