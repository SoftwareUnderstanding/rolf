{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1508.01991.](https://arxiv.org/pdf/1508.01991.pdf)\n- [Lample, G., Ballesteros, M., Kawakami, K., Subramanian, S., and Dyer, C. 2016. Neural architectures for named entity recognition. In NAACL-HLT.](https://www.aclweb.org/anthology/N16-1030)\n- [Ma, X., and Hovy, E. 2016. End-to-end sequence labeling via bi-directional lstm-cnns-crf. In ACL.](https://arxiv.org/pdf/1603.01354.pdf)"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epwalsh/pytorch-crf",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-05-22T20:50:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-13T06:21:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9882063053316349,
        0.994486112412207,
        0.8160698434761197,
        0.9765389942365142
      ],
      "excerpt": "A PyTorch implementation of a Bi-LSTM CRF with character-level features. \npytorch-crf is a flexible framework that makes it easy to reproduce several state-of-the-art sequence labelling deep neural networks that have proven to excel at the tasks of named entity recognition (NER) and part-of-speech (POS) tagging, among others. Some examples of the models you can reproduce with pytorch-crf are: \n- the LSTM-CRF with LSTM-generated character-level features from Lample et. al., 2016. \n- the CNN-LSTM-CRF with CNN-generated character-level features from Ma & Hovy, 2016. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": ":fire: A PyTorch implementation of a Bi-LSTM CRF with character-level features",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epwalsh/pytorch-crf/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Sat, 25 Dec 2021 00:48:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/epwalsh/pytorch-crf/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "epwalsh/pytorch-crf",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/epwalsh/pytorch-crf/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/epwalsh/pytorch-crf/master/notebooks/CoNLL-2003-find-learning-rate.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/epwalsh/pytorch-crf/master/scripts/setup-hooks-folder.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/epwalsh/pytorch-crf/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Makefile",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Evan Pete Walsh\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-crf",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-crf",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "epwalsh",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epwalsh/pytorch-crf/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First and foremost, you will need Python >= 3.6. The remaining requirements are listed in `requirements.txt` and can be installed with `pip install -r requirements.txt`.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 58,
      "date": "Sat, 25 Dec 2021 00:48:18 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In order to train a model, you will need a dataset and pretrained word embeddings.\nThe dataset should be formatted like this:\n\n```\nEU\tB-ORG\nrejects\tO\nGerman\tB-MISC\ncall\tO\nto\tO\nboycott\tO\nBritish\tB-MISC\nlamb\tO\n...\n```\n\nEach token is followed by a tab character and then the corresponding label.\nThe end of a sentence is indicated by a blank line.\n\nThe pretrained word embeddings should be stored in text file like this:\n\n```\nthe -0.038194 -0.24487 0.72812 -0.39961 ...\n, -0.10767 0.11053 0.59812 -0.54361 ...\n. -0.33979 0.20941 0.46348 -0.64792 ...\nof -0.1529 -0.24279 0.89837 0.16996 ...\n```\n\nEach line contains a term in the vocabulary, followed by a space, and then the embedding coordinates (separated by spaces).\n\nA model is trained using the **pytorch-crf** command-line interface, which is invoked with `python -m pycrf.train`. You can see all of the\navailable options with `python -m pycrf.train --help`.\n\n",
      "technique": "Header extraction"
    }
  ]
}