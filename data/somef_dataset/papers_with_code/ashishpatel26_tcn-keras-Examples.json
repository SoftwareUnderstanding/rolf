{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- https://github.com/philipperemy/keras-tcn ( TCN Keras Version)\n- https://github.com/locuslab/TCN/ (TCN for Pytorch)\n- https://arxiv.org/pdf/1803.01271.pdf (An Empirical Evaluation of Generic Convolutional and Recurrent Networks for Sequence Modeling)\n- https://arxiv.org/pdf/1609.03499.pdf (Original Wavenet paper)\n- ***Note : All the rights reserved by original Author. This Repository creation intense for Educational purpose only.***\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ashishpatel26/tcn-keras-Examples",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-14T12:56:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-10T16:12:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8207436385098936,
        0.8884615282464804
      ],
      "excerpt": "TCNs exhibit longer memory than recurrent architectures with the same capacity. \nConstantly performs better than LSTM/GRU architectures on a vast range of tasks (Seq. MNIST, Adding Problem, Copy Memory, Word-level PTB...). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8347993157070009
      ],
      "excerpt": " Visualization of a stack of dilated causal convolutional layers (Wavenet, 2016) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9460710737895867
      ],
      "excerpt": "padding: String. The padding to use in the convolutions. 'causal' for a causal network (as in the original implementation) and 'same' for a non-causal network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8559252145189965
      ],
      "excerpt": "dropout_rate: Float between 0 and 1. Fraction of the input units to drop. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.918617708960551
      ],
      "excerpt": "3D tensor with shape (batch_size, timesteps, input_dim). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9678334323593218
      ],
      "excerpt": "For a Many to Many regression, a cheap fix for now is to change the number of units of the final Dense layer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9251928896482415
      ],
      "excerpt": "If a TCN has only one stack of residual blocks with a kernel size of 2 and dilations [1, 2, 4, 8], its receptive field is 2 * 1 * 8 = 16. The image below illustrates it: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9038108852247264
      ],
      "excerpt": "If the TCN has now 2 stacks of residual blocks, wou would get the situation below, that is, an increase in the receptive field to 32: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9277819045824917
      ],
      "excerpt": "If we increased the number of stacks to 3, the size of the receptive field would increase again, such as below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9497313588471271,
        0.911462496040253,
        0.9196640848252542
      ],
      "excerpt": "Thanks to @alextheseal for providing such visuals. \nMaking the TCN architecture non-causal allows it to take the future into consideration to do its prediction as shown in the figure below. \nHowever, it is not anymore suitable for real-time applications. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository contains example of keras-tcn on easy way.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ashishpatel26/tcn-keras-Examples/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Thu, 23 Dec 2021 07:28:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ashishpatel26/tcn-keras-Examples/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ashishpatel26/tcn-keras-Examples",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ashishpatel26/tcn-keras-Examples/master/TCN_TimeSeries_Approach.ipynb",
      "https://raw.githubusercontent.com/ashishpatel26/tcn-keras-Examples/master/TCN_MNIST.ipynb",
      "https://raw.githubusercontent.com/ashishpatel26/tcn-keras-Examples/master/TCN_cifar10.ipynb",
      "https://raw.githubusercontent.com/ashishpatel26/tcn-keras-Examples/master/TCN_Self_generated_Data_Training.ipynb",
      "https://raw.githubusercontent.com/ashishpatel26/tcn-keras-Examples/master/TCN_Many_to_Many_Regression.ipynb",
      "https://raw.githubusercontent.com/ashishpatel26/tcn-keras-Examples/master/TCN_IMDB.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\npip install keras-tcn\n```\n\n---\n\n| Topic                            | Github                                                       | Colab                                                        |\n| -------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| MNIST Dataset                    | [MNIST Dataset](https://github.com/ashishpatel26/tcn-keras-Examples/blob/master/TCN_MNIST.ipynb) | [![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_MNIST.ipynb) |\n| IMDB Dataset                     | [IMDA Dataset](https://github.com/ashishpatel26/tcn-keras-Examples/blob/master/TCN_IMDB.ipynb) | [![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_IMDB.ipynb) |\n| Time Series Dataset Milk         | [Time Series Dataset Milk](https://github.com/ashishpatel26/tcn-keras-Examples/blob/master/TCN_TimeSeries_Approach.ipynb) | [![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_TimeSeries_Approach.ipynb) |\n| Many to Many Regression Approach | [MtoM Regression](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_Many_to_Many_Regression.ipynb) | [![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_Many_to_Many_Regression.ipynb) |\n| Self Generated Dataset Approach  | [Self Generated Dataset](https://github.com/ashishpatel26/tcn-keras-Examples/blob/master/TCN_Self_generated_Data_Training.ipynb) | [![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_Self_generated_Data_Training.ipynb) |\n| Cifar10 Image Classification | [Cifar10 Image Classification](https://github.com/ashishpatel26/tcn-keras-Examples/blob/master/TCN_cifar10.ipynb) | [![](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ashishpatel26/tcn-keras-Examples/blob/master/TCN_cifar10.ipynb) |\n\n\nArticle : https://arxiv.org/pdf/1803.01271.pdf\n\ngithub : https://github.com/philipperemy/keras-tcn\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8201481901189106
      ],
      "excerpt": "TCN(nb_filters=64, kernel_size=2, nb_stacks=1, dilations=[1, 2, 4, 8, 16, 32], padding='causal', use_skip_connections=False, dropout_rate=0.0, return_sequences=True, activation='relu', kernel_initializer='he_normal', use_batch_norm=False, **kwargs) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828147611847278
      ],
      "excerpt": "kwargs: Any other arguments for configuring parent class Layer. For example \"name=str\", Name of the model. Use unique names when using multiple TCN. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ashishpatel26/tcn-keras-Examples/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Ashish Patel\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TCN Keras Examples",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tcn-keras-Examples",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ashishpatel26",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ashishpatel26/tcn-keras-Examples/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 25,
      "date": "Thu, 23 Dec 2021 07:28:08 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tcn",
      "keras-tcn",
      "tensorflow-tcn",
      "temporal-convolution-network",
      "keras",
      "keras-tensorflow",
      "neuralnetwork",
      "time-series",
      "sequence-to-sequence"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "***Note : This All Notebook Contains Step by Step code of TCN in different domain Application.***\n\n",
      "technique": "Header extraction"
    }
  ]
}