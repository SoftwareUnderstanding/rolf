{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.05941",
      "https://arxiv.org/abs/2006.03659",
      "https://arxiv.org/abs/:2109.05941"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@article{ye2021efficient,\n  title={Efficient Contrastive Learning via Novel Data Augmentation and Curriculum Learnings},\n  author={Ye, Seonghyeon and Kim, Jiseon and Oh, Alice},\n  journal={arXiv preprint arXiv::2109.05941},\n  year={2021}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{ye2021efficient,\n  title={Efficient Contrastive Learning via Novel Data Augmentation and Curriculum Learnings},\n  author={Ye, Seonghyeon and Kim, Jiseon and Oh, Alice},\n  journal={arXiv preprint arXiv::2109.05941},\n  year={2021}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vano1205/EfficientCL",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to jiant\nThanks for considering contributing to jiant! :+1:\nGuidelines for a successful PR review process:\n\nChoose a descriptive PR title (\u201cAdding SNLI Task\u201d rather than \u201cadd task\u201d).\nIn the PR description field provide a summary explaining the motivation for the changes, and link to any related issues.\nPRs should address only one issue (or a few very closely related issues).\nWhile your PR is a work in progress (WIP), use the Draft PR feature to provide visibility without requesting a review.\nOnce your PR is ready for review, in your Draft PR press \u201cReady for review\u201d.\n\nRequirements for pull requests (PR) into jiant's master branch:\n\nRequirements applied by the automated build system:\nblack formatting check\nflake8 check for style and documentation\npytest unit tests\nRequirements for successful code reviews:\nCode changes must be paired with effective tests.\nPRs adding or modifying code must make appropriate changes to related documentation (using google style).\n\nSetting up your local dev environment to run the validation steps applied to PRs by the build system:\npip install -r requirements-dev.txt\npre-commit install",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-08T07:48:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-19T05:31:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9719969158880127,
        0.9747807713229574
      ],
      "excerpt": "The official code for our paper: Efficient Contrastive Learning via Novel Data Augmentation and Curriculum Learning (Accepted at EMNLP 2021 short paper) \nThe implementation is based on the paper DeCLUTR: Deep Contrastive Learning for Unsupervised Textual Representations and code implementation at (https://github.com/JohnGiorgi/DeCLUTR). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    --output_path data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of \"Efficient Contrastive Learning via Novel Data Augmentation and Curriculum Learning\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vano1205/efficientcl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 20:12:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/vano1205/EfficientCL/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "vano1205/EfficientCL",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/jiant_STILTs_Example.ipynb",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/jiant_Multi_Task_Example.ipynb",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/jiant_XNLI_Example.ipynb",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/jiant_Basic_Example.ipynb",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/jiant_EdgeProbing_Example.ipynb",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/simple_api_fine_tuning.ipynb",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/examples/notebooks/jiant_MNLI_Diagnostic_Example.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/jiant/scripts/benchmarks/xtreme/subscripts/run_all.sh",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/jiant/scripts/benchmarks/xtreme/subscripts/e_run_models.sh",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/jiant/scripts/benchmarks/xtreme/subscripts/b_download_data.sh",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/jiant/scripts/benchmarks/xtreme/subscripts/a_download_model.sh",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/jiant/scripts/benchmarks/xtreme/subscripts/c_tokenize_and_cache.sh",
      "https://raw.githubusercontent.com/vano1205/efficientcl/master/jiant/jiant/scripts/benchmarks/xtreme/subscripts/d_write_configs.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "A dataset is simply a file containing one item of text (a document, a scientific paper, etc.) per line. For demonstration purposes, we have provided a script that will download the [WikiText-103](https://www.salesforce.com/products/einstein/ai-research/the-wikitext-dependency-language-modeling-dataset/) dataset and match our minimal preprocessing\n\n```bash\npython scripts/preprocess_wikitext_103.py path/to/output/wikitext-103/train.txt --min-length 2048\n```\n\n> See [scripts/preprocess_openwebtext.py](scripts/preprocess_openwebtext.py) for a script that can be used to recreate the (much larger) dataset used in our paper.\n\nYou can specify the train set path in the [configs](training_config) under `\"train_data_path\"`.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\ngit clone https://github.com/vano1205/EfficientCL\ncd EfficientCL\npip install -r requirements.txt\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Before installing, you should create and activate a Python virtual environment. See [here](https://github.com/allenai/allennlp#installing-via-pip) for detailed instructions.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository requires Python 3.6.1 or later.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.861841247650765
      ],
      "excerpt": "To train the model, use the allennlp train command with our efficientcl.jsonnet config. Run the following \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9092405514341683
      ],
      "excerpt": "    --overrides \"{'train_data_path': 'path/to/your/dataset/train.txt'}\" \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828436538887439,
        0.9024187163140793
      ],
      "excerpt": "The --overrides flag allows you to override any field in the config with a JSON-formatted string, but you can equivalently update the config itself if you prefer. During training, models, vocabulary, configuration, and log files will be saved to the directory provided by --serialization-dir. This can be changed to any directory you like. \nTo train on more than one GPU, provide a list of CUDA devices in your call to allennlp train. For example, to train with four CUDA devices with IDs 0, 1, 2, 3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd jiant \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8096422022825122
      ],
      "excerpt": "    download \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8589534893990137,
        0.811869988768564,
        0.84669458307596
      ],
      "excerpt": "allennlp train \"training_config/efficientcl.jsonnet\" \\ \n    --serialization-dir \"output\" \\ \n    --overrides \"{'train_data_path': 'path/to/your/dataset/train.txt'}\" \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012768514954086
      ],
      "excerpt": "python scripts/save_pretrained_hf.py \"output\" \"pretrained\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810870454768102
      ],
      "excerpt": "    download \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8013803951358645
      ],
      "excerpt": "    --output_path data \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/vano1205/EfficientCL/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Jsonnet",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 New York University\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Efficient Contrastive Learning via Novel Data Augmentation and Curriculum Learning (EMNLP 2021)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientCL",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "vano1205",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vano1205/EfficientCL/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\ngit clone https://github.com/vano1205/EfficientCL\ncd EfficientCL\npip install -r requirements.txt\n```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Wed, 29 Dec 2021 20:12:37 GMT"
    },
    "technique": "GitHub API"
  }
}