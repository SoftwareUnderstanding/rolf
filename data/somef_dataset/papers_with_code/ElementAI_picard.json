{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.05093",
      "https://arxiv.org/abs/2109.05093"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Scholak2021:PICARD,\n  author = {Torsten Scholak and Nathan Schucher and Dzmitry Bahdanau},\n  title = \"{PICARD}: Parsing Incrementally for Constrained Auto-Regressive Decoding from Language Models\",\n  booktitle = \"Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing\",\n  month = nov,\n  year = \"2021\",\n  publisher = \"Association for Computational Linguistics\",\n  url = \"https://aclanthology.org/2021.emnlp-main.779\",\n  pages = \"9895--9901\",\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "    <th rowspan=2 valign=bottom>URL</th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9343900839872272
      ],
      "excerpt": "<a href=\"https://huggingface.co/tscholak/cxmefzzi\">tscholak/cxmefzzi</a> and <a href=\"https://huggingface.co/tscholak/1wnr382e\">tscholak/1wnr382e</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "    <th rowspan=2 valign=bottom>URL</th> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElementAI/picard",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-31T16:57:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T19:22:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8750535958939324,
        0.9622879445580158,
        0.9173936215115771,
        0.9880417860347515,
        0.9766594843605744,
        0.9722836587476665
      ],
      "excerpt": "The PICARD algorithm for constrained decoding from language models. \nA text-to-SQL semantic parser based on pre-trained sequence-to-sequence models and PICARD achieving state-of-the-art performance on both the Spider and the CoSQL datasets. \nTL;DR: We introduce PICARD -- a new method for simple and effective constrained decoding from large pre-trained language models. \nOn the challenging Spider and CoSQL text-to-SQL datasets, PICARD significantly improves the performance of fine-tuned but otherwise unmodified T5 models. \nUsing PICARD, our T5-3B models achieved state-of-the-art performance on both Spider and CoSQL. \nIn text-to-SQL translation, the goal is to translate a natural language question into a SQL query. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9886928269992136,
        0.8857517859520966
      ],
      "excerpt": "The generated SQL needs to be semantically correct, that is, correctly reflect the meaning of the question. \nThe SQL also needs to be valid, that is, it must not result in an execution error. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9084779625876745
      ],
      "excerpt": "This is the approach taken by most prior work. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8921417307339431,
        0.8887412833256282,
        0.9214521102678616,
        0.8782344749843086
      ],
      "excerpt": "However, this limits the generality of the decoders, which is a problem for the first goal. \nA better approach would be to use a pre-trained encoder-decoder model and to constrain its decoder to produce valid SQL after fine-tuning the model on the text-to-SQL task. \nThis is the approach taken by the PICARD algorithm. \nIt\u2019s an incremental parsing algorithm that integrates with ordinary beam search. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9856185541706741
      ],
      "excerpt": "It works with any model that generates a sequence of tokens (including language models). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9388043843151269,
        0.8736532310392081
      ],
      "excerpt": "It works with character-, sub-word-, and word-level language models. \nThe following picture shows how PICARD is integrated with beam search. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9032203583756692
      ],
      "excerpt": "Decoding starts from the left and proceeds to the right. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8667167251127122
      ],
      "excerpt": "and then keeps expanding the beam with hypotheses generated token-by-token by the decoder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9796269318590034,
        0.8045312891368033,
        0.9871058170396388,
        0.9913239406589891,
        0.946388879602381,
        0.9449815762541233
      ],
      "excerpt": "In the image above, only 3 token predictions are shown, and `k` is set to 2. \nValid tokens (\u2611) are added to the beam. Invalid ones (\u2612) are discarded. The `k+1`-th, `k+2`-th, ... tokens are discarded, too. \nLike in normal beam search, the beam is pruned to contain only the top-`n` hypotheses. \n`n` is the beam size, and in the image above it is set to 2 as well. \nHypotheses that are terminated with the end-of-sentence token (usually `</s>`) are not expanded further. \nThe algorithm stops when the all hypotheses are terminated \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9723574568187832,
        0.8832397601863105,
        0.9821326040828487,
        0.9358635685360442,
        0.9969754160558516
      ],
      "excerpt": "In PICARD, checking, accepting, and rejecting of tokens and token sequences is achieved through parsing. \nParsing means that we attempt to assemble a data structure from the tokens \nthat are currently in the beam or are about to be added to it. \nThis data structure (and the parsing rules that are used to build it) encode the constraints we want to enforce. \nIn the case of SQL, the data structure we parse to is the abstract syntax tree (AST) of the SQL query. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096865554817067,
        0.978027802044922,
        0.9914740301816954,
        0.9622374630020534
      ],
      "excerpt": "Database engines, such as PostgreSQL, MySQL, and SQLite, have their own built-in parser that they use internally to process SQL queries. \nFor Spider and CoSQL, \nwe have implemented a parser that supports a subset of the SQLite syntax and that checks additional constraints on the AST. \nIn our implementation, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8133084030777026,
        0.9557959837045996
      ],
      "excerpt": "PICARD uses a parsing library called attoparsec that supports incremental input. \nThis is a special capability that is not available in many other parsing libraries. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9741087135376058
      ],
      "excerpt": "When parsing reaches the end of an input fragment, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9810706751001248,
        0.8308394266063919
      ],
      "excerpt": "Herein lies the key to PICARD: \nIncremental parsing of input fragments is exactly what we need to check tokens one by one during decoding. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414942311636814,
        0.9847451719173703,
        0.9832620024160852,
        0.9546483373553015
      ],
      "excerpt": "Such failures are discarded and never end up in the beam. \nWe repeat the process until the end of the input is reached. \nThe input is complete once the model predicts the end-of-sentence token. \nWhen that happens, we finalize the parsing by calling the continuation function with an empty string. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9309152782505278,
        0.9650337444417314
      ],
      "excerpt": "The parsing rules are described at a high level in the PICARD paper. \nFor details, see the PICARD code, specifically the Language.SQL.SpiderSQL.Parse module. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9931130500844609
      ],
      "excerpt": "are the versions of the model that we used in our experiments for the paper, reported as T5-3B and T5-Large, respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9331289155936289
      ],
      "excerpt": "Note that, without PICARD, 12% of the SQL queries generated by <a href=\"https://huggingface.co/tscholak/cxmefzzi\">tscholak/cxmefzzi</a> on Spider\u2019s development set resulted in an execution error. With PICARD, this number decreased to 2%. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9801828123895296
      ],
      "excerpt": "Click on the links to download the models. <a href=\"https://huggingface.co/tscholak/2e826ioa\">tscholak/2e826ioa</a> is the version of the model that we used in our experiments for the paper, reported as T5-3B. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9360146630209503
      ],
      "excerpt": "The settings are optimized for a GPU with 40GB of memory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9233910662042986
      ],
      "excerpt": "We have uploaded a model trained on the Spider dataset to the huggingface model hub, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8076197210699066
      ],
      "excerpt": "The default configuration is stored in configs/eval.json. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9819096566331038,
        0.9083747970968178
      ],
      "excerpt": "where my_1st_database and my_2nd_database are the db_ids of the databases. \nOnce the server is up and running, use the Swagger UI to test inference with the /ask endpoint. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8114984456621643
      ],
      "excerpt": "tscholak/text-to-sql-dev: Base image with development dependencies. Use this for development. Pull it with make pull-dev-image from the docker hub. Rebuild the image with make build-dev-image.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PICARD - Parsing Incrementally for Constrained Auto-Regressive Decoding from Language Models",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElementAI/picard/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 23,
      "date": "Sun, 26 Dec 2021 05:43:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ElementAI/picard/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ElementAI/picard",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ElementAI/picard/main/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8629849719896093
      ],
      "excerpt": "Click on the links to download the models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936229696722598,
        0.8904214639314836
      ],
      "excerpt": "You can run it with: \n$ make train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096111731518668
      ],
      "excerpt": "You can also train on CoSQL by running make train-cosql. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8604044484988277
      ],
      "excerpt": "The settings are optimized for a GPU with 40GB of memory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8240378325485356
      ],
      "excerpt": "With PICARD, the accuracy should go up to at least 75%. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936229696722598
      ],
      "excerpt": "You can run it with: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515943673495599,
        0.8474895321345809
      ],
      "excerpt": "You can start serving with: \n$ make serve \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8835186073789011
      ],
      "excerpt": "    <img src=\"beam_search_with_picard.svg\" width=\"400\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8072828058405567
      ],
      "excerpt": "attoparsec will return a continuation function \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8613949615207942
      ],
      "excerpt": "The training script will create the directory train in the current directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.85597789971797
      ],
      "excerpt": "These training settings should result in a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577135093383964
      ],
      "excerpt": "A trained model can be served using the seq2seq/serve_seq2seq.py script. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ElementAI/picard/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Haskell",
      "Python",
      "Dockerfile",
      "Makefile",
      "Thrift"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        https://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   Copyright 2021 ServiceNow, Inc.\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       https://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Watch The Video",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "picard",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ElementAI",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElementAI/picard/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository uses git submodules. Clone it like this:\n```sh\n$ git clone git@github.com:ElementAI/picard.git\n$ cd picard\n$ git submodule update --init --recursive\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 96,
      "date": "Sun, 26 Dec 2021 05:43:47 GMT"
    },
    "technique": "GitHub API"
  }
}