{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Materials:\n* Virtual Reality Demo (HTC Vive, Stable) - https://github.com/avivelor/UnityMachineLearningForProjectButterfly/raw/master/UnitySDK/ExoButterflyVR-HTCViveBuild.zip\n* Standalone Downloadable Demo (Stable) - https://github.com/avivelor/UnityMachineLearningForProjectButterfly/raw/master/UnitySDK/ExoButterfly-StandaloneBuild.zip\n* Imitation Learning and Human vs Neural Network Research Video - https://youtu.be/ckMaDXHUGrw\n* Early Reinforcement Learning Demo Video - https://youtu.be/5J7xes28bZA\n* Blog Posts - https://www.avivelor.com/\n\nExternal Tools Used and Modified for this Project:\n* Unity Machine Learning Agents Beta - https://github.com/Unity-Technologies/ml-agents\n* Project Butterfly - https://www.avivelor.com/post/project-butterfly\n* Unity ML Agents Introduction - https://towardsdatascience.com/an-introduction-to-unity-ml-agents-6238452fcf4c\n* Unity ML Agents Reacher Example - https://github.com/Unity-Technologies/ml-agents/tree/master/Project/Assets/ML-Agents/Examples/Reacher\n* Older Unity ML Reacher Example by PHRABAL  - https://github.com/PHRABAL/DRL-Reacher\n* Proximal Policy Optimization (PPO) in Unity - https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-PPO.md\n* General Adversarial Imitation Learning (GAIL) in Unity - https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-Imitation-Learning.md\n* Deep Reinforcement Learning (through Deep Deterministic Policy Gradient or DDPG) -  https://arxiv.org/pdf/1509.02971.pdf\n* HTC Vive Virtual Reality System (2018) - https://www.vive.com/us/product/vive-virtual-reality-system/\n* HTC Vive Trackers (2018) - https://www.vive.com/us/vive-tracker/\n\nReading References:\n* Unity Machine Learning - https://unity3d.com/machine-learning\n* Academic Paper on Project Butterfly at IEEEVR 2019 Paper by Elor et Al - https://www.researchgate.net/publication/335194991_Project_Butterfly_Synergizing_Immersive_Virtual_Reality_with_Actuated_Soft_Exosuit_for_Upper-Extremity_Rehabilitation\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9996204275641923
      ],
      "excerpt": "Elor, A., & Kurniawan, S. (2020, August). Deep Reinforcement Learning in Immersive Virtual Reality Exergame for Agent Movement Guidance. In 2020 IEEE 8th International Conference on Serious Games and Applications for Health(SeGAH). IEEE, 2020. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.819977856236153
      ],
      "excerpt": "If any questions, email aelor@ucsc.edu and or message Aviv Elor. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/avivelor/UnityMachineLearningForProjectButterfly",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nIf you are interested in contributing, here are some ground rules:\n\n... Define guidelines & rules for what contributors need to know to successfully make Pull requests against your repo ...\n\nAll contributions are subject to the Unity Contribution Agreement(UCA)\nBy making a pull request, you are confirming agreement to the terms and conditions of the UCA, including that your Contributions are your original creation and that you have complete right and authority to make your Contributions.\nOnce you have a change ready following these ground rules. Simply make a pull request",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-13T03:52:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-23T06:24:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9402354731585392,
        0.8329302198027587
      ],
      "excerpt": "It's official, we've been published! More details behind this project can be found at the following manuscript:  \nElor, A., & Kurniawan, S. (2020, August). Deep Reinforcement Learning in Immersive Virtual Reality Exergame for Agent Movement Guidance. In 2020 IEEE 8th International Conference on Serious Games and Applications for Health(SeGAH). IEEE, 2020. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9916532682594597,
        0.8866500395801393
      ],
      "excerpt": "This project is an exploration of Unity ML-Agents on training a double-jointed \"robot arm\" to protect butterflies with bubble shields in an immersive virtual environment. \nThe arm is trained through utilizing General Adversarial Imitation Learning (GAIL) and Reinforcement Learning through Proximal Policy Optimization (PPO) to play an Immersive Virtual Reality Physical Exercise Game. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9572508358473267,
        0.8392177651535012
      ],
      "excerpt": "This section explored the application of General Adversarial Imitation Learning (GAIL) with Deep Reinforcement Learning through Proximal Policy Optimization (PPO). \nDemonstrations were recorded with an HTC Vive 2018 VR System by utilizing two 2018 Vive Trackers on a human demonstrator's shoulder and elbow joint to capture torque and angular momentum using Unity's Fixed Joint API. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.991151380163622,
        0.9710471837983686,
        0.841183654010786
      ],
      "excerpt": "To capture demonstrations in VR, place the SteamVR trackers at the elbow and shoulder joint of the human user.  \nSet the Observations of the agent to be \"Heuristic Only.\"  \nCheck the record demonstration box in the Demonstration Recorder script and have the human user perform ideal and concise movements. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.840264663689478
      ],
      "excerpt": "Pre-recorded demonstrations for Project Butterfly can be found at: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9379695868494151
      ],
      "excerpt": "Training configuration with GAIL for Project Butterfly can be found at: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8535164124825693
      ],
      "excerpt": "After demonstrations are recorded, proceed back to the training scene to begin agent learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8960609241182759
      ],
      "excerpt": "To mess around with deep reinforcement learning and training, refer to the Unity ML-Agents documentation at https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Readme.md. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8002558189199572,
        0.8597526772779842,
        0.9210691312713714
      ],
      "excerpt": "Subsequently, I was able to train the robot arm very well through utilizing 16 agents in parallel through Deep Reinforcement Learning with Proximal Policy Optimization (PPO). \nAfter four hours of training, my reward slowly rose from 0.1 to 40 (where +0.01 reward was given per every frame the arm successfully protected the butterfly). \nSee the demo video below for a discussion of the training, results, and demo experience. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An exploration of Unity ML Agents for deep reinforcement learning on a \"robo arm\" to protect butterflies with bubble shields in an immersive virtual reality exercise game.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/avivelor/UnityMachineLearningForProjectButterfly/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 22:47:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/avivelor/UnityMachineLearningForProjectButterfly/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "avivelor/UnityMachineLearningForProjectButterfly",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/Dockerfile",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/UnitySDK/Library/PackageCache/com.unity.barracuda%400.3.2-preview/Tools/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/avivelor/UnityMachineLearningForProjectButterfly/tree/master/docs",
      "https://github.com/avivelor/UnityMachineLearningForProjectButterfly/tree/master/docs/localized/KR/docs",
      "https://github.com/avivelor/UnityMachineLearningForProjectButterfly/tree/master/docs/localized/zh-CN/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/notebooks/getting-started-gym.ipynb",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/notebooks/getting-started.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/run-tests-editmode-osx-editor.sh",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/run-standalone-build-osx.sh",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/UnitySDK/Library/PackageCache/com.unity.barracuda%400.3.2-preview/Tools/run-in-docker.sh",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/UnitySDK/Library/PackageCache/com.unity.barracuda%400.3.2-preview/Tools/docker-onnx-to-barracuda.sh",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/UnitySDK/Library/PackageCache/com.unity.barracuda%400.3.2-preview/Tools/docker-tensorflow-to-barracuda.sh",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/UnitySDK/Library/PackageCache/com.unity.barracuda%400.3.2-preview/Tools/docker-keras-to-barracuda.sh",
      "https://raw.githubusercontent.com/avivelor/UnityMachineLearningForProjectButterfly/master/protobuf-definitions/make.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.98439905736712
      ],
      "excerpt": "To get started, download Anaconda and set up a virtual environment through conda activate mlagents (see this example to configure your environment https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Readme.md). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9867504215366604
      ],
      "excerpt": "With the anaconda terminal, prepare to train through using the following terminal command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.98439905736712
      ],
      "excerpt": "To get started, download Anaconda and set up a virtual environment through conda activate mlagents (see this example to configure your environment https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Readme.md). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9867504215366604
      ],
      "excerpt": "With the anaconda terminal, prepare to train through using the following terminal command: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/avivelor/UnityMachineLearningForProjectButterfly/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C#",
      "Python",
      "ASP.NET",
      "ShaderLab",
      "Jupyter Notebook",
      "HLSL",
      "Objective-C",
      "C",
      "GLSL",
      "Shell",
      "Dockerfile",
      "Batchfile",
      "Objective-C++",
      "Smalltalk"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2018 Charlie Poole, Rob Prouse\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "UnityMachineLearningForProjectButterfly",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "UnityMachineLearningForProjectButterfly",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "avivelor",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/avivelor/UnityMachineLearningForProjectButterfly/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 22:47:28 GMT"
    },
    "technique": "GitHub API"
  }
}