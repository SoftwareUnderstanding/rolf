{
  "citation": [
    {
      "confidence": [
        0.8728059224385537
      ],
      "excerpt": "source experiment.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seblee97/task_weighted_maml",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-16T21:23:17Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-18T19:07:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository contains code for the [model-agnostic meta-learning algorithm](https://arxiv.org/pdf/1703.03400.pdf) (Finn et al.) including investigation\ninto modifying the task sampling regime. Rather than sampling uniformly, we can sample according to a probability distribution that we\nconstruct using a priority queue containing losses previously seen during training. So far the following sampling regimes have been implemented:\n\n* Uniform (vanilla)\n* Epsilon Greedy (max with certain probability, random otherwise)\n* Weighted Sample (sample according to probability distribution given by priority queue)\n* Importance Weighted Sample (same as above but meta update is now weighted by importance weights)\n* Delta Sample (sample according to probability distribution given by change in priority queue - biases sample to parameter space in which progress has been made)\n* Importance Delta Sample (same as above but meta update is now weighted by importance weights)\n\nThe priority queue is essentially a mapping between parameter tuples and losses where the parameters are those governing the task distribution (e.g. in sinusoidal regression the parameters are the phase shift and amplitude scaling). Each time a task is sampled in the inner loop, the parameter associated with this task in the priority queue will be updated with the loss incurred.\n\nSo far the following tasks have been implemented:\n\n* 2D sinusoidal regression (parameters: phase shift, amplitude)\n* 3D sinusoidal regression (parameters: phase shift, amplitude & frequency scaling)\n\nImplementations for image classification and control tasks will hopefully be added soon. \n\nThis repository uses [Jax](https://github.com/google/jax) for the MAML implementation.  \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8738902397260326,
        0.8724874838192643,
        0.9262045474393035,
        0.9811013554412269,
        0.9090025031058644
      ],
      "excerpt": "Sample results when run with seed 0 are shown below. More details can be found in the paper. \nLoss curves during training of meta sinusoidal regression for the various task sampling regimes. The validation losses (bottom row) are the losses  \nincurred in the inner loop during training. The test losses (top row) are the fine-tuning losses of the meta-parameter on a fixed set of test tasks that \nuniformly span the parameter space. Performance on these test tasks with biased sampling is better than in the vanilla MAML case. \nSample regression results at test time. The top row shows a low amplitude task (hard), while the bottom two rows show medium and high amplitude tasks that are much easier. Even when biased towards seeing harder tasks, a task-weighted MAML can still fine-tune well to easy tasks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "MAML (Finn '17) with different sampling regimes for task selection in inner loop",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seblee97/task_weighted_maml/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 19:20:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seblee97/task_weighted_maml/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "seblee97/task_weighted_maml",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/seblee97/task_weighted_maml/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/experiments/test_regression.ipynb",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/docs/seeds.ipynb",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/docs/meshgrid.ipynb",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/docs/jax_implementation.ipynb",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/docs/.ipynb_checkpoints/seeds-checkpoint.ipynb",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/docs/.ipynb_checkpoints/meshgrid-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/experiments/kill_experiments.sh",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/experiments/experiment.sh",
      "https://raw.githubusercontent.com/seblee97/task_weighted_maml/master/docs/setup.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone this repository. Then run \n\n```pip install -r requirements.txt```\n\nThe primary requirements are:\n\n* jax\n* numpy\n* matplotlib (for visualisation)\n* tensorboardX (for visualisation)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.949476895443723
      ],
      "excerpt": "Individual experiments can be run with the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8159692225956106,
        0.8997354531167342,
        0.8449656451312019
      ],
      "excerpt": "To run the full suite of experiments, use the following command: \nsource experiment.sh \nNote, currently jax does not have multiple GPU support and by default GPU memory is pre-allocated so running multiple experiments simulataneously will likely not be possible when running in GPU mode depending on the size of your GPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9033987252512259
      ],
      "excerpt": "\u251c\u2500\u2500 requirements.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 kill_experiments.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8110064128881393
      ],
      "excerpt": "Sample Results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8452284572407442
      ],
      "excerpt": "python main.py -config *relative path to config choice* \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8526825756960351
      ],
      "excerpt": "\u251c\u2500\u2500 setup.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 __init__.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "\u2502    \u2514\u2500\u2500 main.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 __init__.py  \n\u2502    \u251c\u2500\u2500 jax_model.py  \n\u2502    \u2514\u2500\u2500 jax_sinusoid.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.91892912920148,
        0.9336801098518991
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 __init__.py  \n\u2502    \u251c\u2500\u2500 model.py  \n\u2502    \u2514\u2500\u2500 sinusoid.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8564554080110327
      ],
      "excerpt": "\u251c\u2500\u2500 tests \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 __init__.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 test_base_priority_queue.py \n\u2502    \u2514\u2500\u2500 test_sin_priority_queue.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924976426181745
      ],
      "excerpt": "\u2514\u2500\u2500 utils \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seblee97/task_weighted_maml/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Task-Weighted MAML Repository",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "task_weighted_maml",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "seblee97",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seblee97/task_weighted_maml/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 19:20:42 GMT"
    },
    "technique": "GitHub API"
  }
}