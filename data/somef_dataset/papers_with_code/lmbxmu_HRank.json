{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find HRank useful in your research, please consider citing:\n\n```\n@inproceedings{lin2020hrank,\n  title={HRank: Filter Pruning using High-Rank Feature Map},\n  author={Lin, Mingbao and Ji, Rongrong and Wang, Yan and Zhang, Yichen and Zhang, Baochang and Tian, Yonghong and Shao, Ling},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\n  pages={1529--1538},\n  year={2020}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{lin2020hrank,\n  title={HRank: Filter Pruning using High-Rank Feature Map},\n  author={Lin, Mingbao and Ji, Rongrong and Wang, Yan and Zhang, Yichen and Zhang, Baochang and Tian, Yonghong and Shao, Ling},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\n  pages={1529--1538},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| 1.04M(38.7%) |156.90M(37.9%)| 94.23%   |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "--compress_rate [0.10]+[0.8]*5+[0.85]+[0.8]*3 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9647476761482745
      ],
      "excerpt": "--compress_rate [0.2]+[0.8]*10+[0.8]*13+[0.55]*19+[0.45]*10 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "                default: 5,10 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lmbxmu/HRank",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-17T10:35:12Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T05:54:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8875444636790245,
        0.831970712394572,
        0.9464903443854598
      ],
      "excerpt": "Pytorch implementation of HRank (CVPR 2020, Oral). \nThis repository was what we used during the preparation of CVPR 2020. You can enjoy it! \nA better version of HRank (in both fine-tuning efficiency and accuracy performance) are released at HRankPlus. It is highly suggested!  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9726611515390663,
        0.8556986400821959
      ],
      "excerpt": "Framework of HRank. In the left column, we \ufb01rst use images to run through the convolutional layers to get the feature maps. In the middle column, we then estimate the rank of each feature map, which is used as the criteria for pruning. The right column shows the pruning (the red \ufb01lters), and \ufb01ne-tuning where the green \ufb01lters are updated and the blue \ufb01lters are frozen. \nAny problem, please contact the authors via emails: lmbxmu@stu.xmu.edu.cn or ethan.zhangyc@gmail.com. Do not post issues with github as much as possible, just in case that I could not receive the emails from github thus ignore the posted issues. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9867783336679362
      ],
      "excerpt": "For the ease of reproducibility. we provide some of the experimental results and the corresponding pruned rate of every layer as belows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83375880829357
      ],
      "excerpt": "Note that, in the paper, we mistakenly regarded the FLOPs as 148.70M(41.2%). We apologize for it and We will update the arXiv version as soon as possible. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9298294714055878
      ],
      "excerpt": "After training, checkpoints and loggers can be found in the job_dir. The pruned model will be named [arch]_cov[i] for stage i, and therefore the final pruned model is the one with largest i. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116704922719153
      ],
      "excerpt": "--test_model_dir [job dir of test model] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8403633309101023
      ],
      "excerpt": "    --epochs            The num of epochs to train. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8929499649463868
      ],
      "excerpt": "    --start_cov         The num of conv to start prune \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch implementation of our paper accepted by CVPR 2020 (Oral) -- HRank: Filter Pruning using High-Rank Feature Map",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lmbxmu/HRank/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 43,
      "date": "Mon, 27 Dec 2021 15:52:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lmbxmu/HRank/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lmbxmu/HRank",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358995700737135
      ],
      "excerpt": "--gpu [gpu_id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.9535684810837946
      ],
      "excerpt": "--arch [arch name] \\ \n--gpu [gpu id] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8115897902376928
      ],
      "excerpt": "    --data_dir          dataset directory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9707216730337829
      ],
      "excerpt": "    --gpu           Select gpu to use \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378080875653302
      ],
      "excerpt": "                Optional: resnet_50, vgg_16_bn, resnet_56, resnet_110, densenet_40, googlenet \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python rank_generation.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8645544707693019,
        0.8051945038496451
      ],
      "excerpt": "--arch [model arch name] \\ \n--limit [batch numbers] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.9184924402426097
      ],
      "excerpt": "python main.py \\ \n--job_dir ./result/vgg_16_bn/[folder name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.9184924402426097
      ],
      "excerpt": "python main.py \\ \n--job_dir ./result/resnet_56/[folder name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.9184924402426097
      ],
      "excerpt": "python main.py \\ \n--job_dir ./result/resnet_110/[folder name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.9184924402426097
      ],
      "excerpt": "python main.py \\ \n--job_dir ./result/densenet_40/[folder name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.9184924402426097
      ],
      "excerpt": "python main.py \\ \n--job_dir ./result/googlenet/[folder name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8060372108626078
      ],
      "excerpt": "|  Params | Flops| Acc Top1 |Acc Top5 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206
      ],
      "excerpt": "python main.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184924402426097
      ],
      "excerpt": "--job_dir./result/resnet_50/[folder name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8708148446064828,
        0.8397347746101834
      ],
      "excerpt": "python evaluate.py \\ \n--dataset [dataset name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.828974305572064,
        0.8421074476017179
      ],
      "excerpt": "--test_model_dir [job dir of test model] \\ \n--arch [arch name] \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8132463010927122
      ],
      "excerpt": "    --data_dir          dataset directory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8397347746101834
      ],
      "excerpt": "    --dataset           dataset name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8793559361076495
      ],
      "excerpt": "                    default: 0.01 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8211457805832614
      ],
      "excerpt": "    --resume            load the model from the specified checkpoint \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8224690476464132
      ],
      "excerpt": "    --train_batch_size      Batch size for training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8000318663973657
      ],
      "excerpt": "                default: 100 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lmbxmu/HRank/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "HRank: Filter Pruning using High-Rank Feature Map ([Link](https://128.84.21.199/abs/2002.10179))![]( https://visitor-badge.glitch.me/badge?page_id=lmbxmu.hrank).",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "HRank",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lmbxmu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lmbxmu/HRank/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In this code, you can run our models on CIFAR-10 and ImageNet dataset. The code has been tested by Python 3.6, Pytorch 1.0 and CUDA 9.0 on Ubuntu 16.04.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 194,
      "date": "Mon, 27 Dec 2021 15:52:14 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pruning",
      "compression",
      "acceleration"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\npython cal_flops_params.py \\\n--arch resnet_56_convwise \\\n--compress_rate [0.1]+[0.60]*35+[0.0]*2+[0.6]*6+[0.4]*3+[0.1]+[0.4]+[0.1]+[0.4]+[0.1]+[0.4]+[0.1]+[0.4]\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}