{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.04805",
      "https://arxiv.org/abs/1810.04805"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use our reseach or code please cite the work,\n```\n@inproceedings{Sudhakar2019TransformingDR,\n  title={Transforming Delete, Retrieve, Generate Approach for Controlled Text Style Transfer},\n  author={Akhilesh Sudhakar and Bhargav Upadhyay and Arjun Maheswaran},\n  booktitle={EMNLP/IJCNLP},\n  year={2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Sudhakar2019TransformingDR,\n  title={Transforming Delete, Retrieve, Generate Approach for Controlled Text Style Transfer},\n  author={Akhilesh Sudhakar and Bhargav Upadhyay and Arjun Maheswaran},\n  booktitle={EMNLP/IJCNLP},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9222383658450612
      ],
      "excerpt": "regex >= 2019.2.21 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/agaralabs/transformer-drg-style-transfer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-23T06:50:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T03:16:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository has scripts and Jupyter-notebooks to perform all the different steps involved in [**Transforming Delete, Retrieve, Generate Approach for Controlled Text Style Transfer**](https://www.aclweb.org/anthology/D19-1322/)  \nThis mechanism is used for **_text style transfer_** when a **_parallel corpus_** for both the styles is not available. This mechanism works on the assumption that the text of any style is made of **two** parts: **1. Content** and **2. Attributes** . Below is a simpe example of a resturent review.\n```\nThe food was great and the service was excellent.\nContent: The food was and the service was\nAttributes: great, excellent\n```\nWe transfer the style of a given content in in two different ways. The first is referred to as the **Delete and Generate** approach (referred to as Blind Generative Style Transformer - B-GST in the paper) in which the model transfers the style of the text by choosing attributes automatically learnt during training. The second is referred to as the **Delete, Retrieve and Generate** (referred to as Guided Generative Style Transformer - G-GST in the paper) approach in which the model uses attributes retrieved from the target corpus to generate target sentences from the content. Below are a few examples.\n\n**Generative a negative sentiment sentence from content (neutral) with Delete and Generate**\n```\nContent: The food was and the service was\nOutput: The food tasteless and the service was horrible.\n```\n\n**Generative a negative sentiment sentence from content (neutral) with Delete, Retrieve and Generate**\n```\nContent: The food was and the service was\nAttributes: blend, slow\nOutput: The food was blend and the service was slow.\n```\nThe names **Delete and Generate** and **Delete, Retrieve and Generate** are based on the steps involved in preparing training and test(reference) data. \nIn **Delete and Generate**,  we prepare the training data by removing the attribute words from the text and during training teach the model to generate the sentence given content and target style. This is trained the same way a language model is trained. Below is an example.\n```\nThe food was great and the service was excellent.\nContent: The food was and the service was\nTraining input: <POS> <CON_START> The food was and the service was <START> The food was great and the service was excellent . <END>\n\nThe food was awful and the service was slow.\nContent: The food was and the service was\nTraining input: <NEG> <CON_START> The food was and the service was <START> The food was awful and the service was slow . <END>\n```\nCross entropy loss is calculated for all the tokens predicted after **_\\<START\\>_** token. For inference, we represent target style using the same tags as used in training, and provide the content as inputs to the model. For the case of sentiment style transfer, all the positive sentiment test data sentences will have **_\\<NEG\\>_** and all negative sentiment sentences will have **_\\<POS\\>_** token before the content. Below is an example.\n```\nNegative test data: <POS> <CON_START> the food was and the service was <START> \nPositive test data: <NEG> <CON_START> the food was and the service was <START> \n```\n\nIn **Delete, Retrieve and Generate**, we prepare the training data similar to the **Delete and Generate** but insted of target text style we specify the exact attributes to be used for generating the sentence from the content. Below is an example.\n```\nThe food was great and the service was excellent.\nContent: The food was and the service was\nTraining input: <ATTR_WORDS> great excellent <CON_START> The food was and the service was <START> The food was great and the service was excellent . <END>\n\nThe food was awful and the service was slow.\nContent: The food was and the service was\nTraining input: <ATTR_WORDS> awful slow <CON_START> The food was and the service was <START> The food was awful and the service was slow . <END>\n```\nOtherwise the training is same as the **Delete and Generate**. During inference, to perform style transfer we need to get the attributes of opposite text style, we get it by retrieving similar content from opposite train corpus and use the attribute associated with that. Below can be a good example.   \n\n```\nNegative test data: <ATTR_WORDS> great tasty  <CON_START> the food was and the service was <START> \nPositive test data: <ATTR_WORDS> blend disappointing <CON_START> the food was and the service was <START> \n```\n\n\n**The process of style transfer consists of multiple steps.** \n\n**_1. Prepare Training data_**\n  * Train a classifier which uses attention mechanism. Here we have used [BERT](https://arxiv.org/abs/1810.04805) classifier.\n  * Use attention scores to prepare data for **Delete and Generate** trainig and test.\n  * Use the training and testing data of **Delete and Generate** to prepare training and test data for **Delete, Retrieve and Generate** .  \n  \n**_2. Generator Training_**\n  * We have use modified version of [OpenAI GPT](https://github.com/huggingface/pytorch-pretrained-BERT/blob/master/examples/run_openai_gpt.py) \n  * Run training of **Delete and Generate** and **Delete, Retrieve and Generate** . \n \n**_3. Generate sentences_**\n  * Generate sentences from the test(reference) files.\n\nThe following section describes steps required from preparing the data to running inference. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8675512323543015,
        0.9380051972839417,
        0.8270464391175832
      ],
      "excerpt": "Important Note: We have used the BERT tokenizer which isn't the default. The default tokenizer is using spacy library. To replicate the exact results please run in the environment where spacy isn't installed. Having spacy installed will tokenize even the special tokens, and lead to different tokens than we have used, leading to unpredictable results. \nWe have used BERT for classification. This classification trainings helps to find the attributes from the sentence. We choose one particular head of BERT model, for which the tokens which have high attention weights are those that are stylistic attributes of the sentence.  \n  * Classifier Training Data Preparation: BERT_Classification_Training_data_preparation.ipynb notebook creates training, testing and dev data. Modify the the paths of the input and output files. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9241922574762625
      ],
      "excerpt": "We ran this with a single K80 Tesla GPU with 12 GB GPU Memory (AWS p2.xlarge instance). The batch size can be modified based on the max_seq_length. The code can be used with multiple GPUs and batch size can be increased proportanally. For p2.8xlarge, suggested train_batch_size = 256 and for p2.16xlarge, train_batch_size=512. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9523856321569336
      ],
      "excerpt": "This configuration is with 1 K80 Tesla GPU with 12 GB GPU Memory (AWS p2.xlarge instance). The batch size can be modified based on the max_seq_length. The code can be used with multiple GPUs and batch size can be increased proportionally. For p2.8xlarge, suggested train_batch_size = 256 and for p2.16xlarge, train_batch_size=512. All the sentences with number of tokens > max_seq_length will be removed from the training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9587361728148887
      ],
      "excerpt": "All the outputs on the test (reference) sets for each of the 5 datasets are present here. Each directory is named after a dataset and contains 2 csv files - one for each direction of style transfer. In each of the csv files, the column named BERT_DEL has outputs of our B-GST model and the column named BERT_RET_TFIDF has outputs of our G-GST model. These results can be used for replicability. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository have scripts and Jupyter-notebooks to perform all the different steps involved in Transforming Delete, Retrieve, Generate Approach for Controlled Text Style Transfer",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/agaralabs/transformer-drg-style-transfer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Thu, 23 Dec 2021 23:24:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/agaralabs/transformer-drg-style-transfer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "agaralabs/transformer-drg-style-transfer",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/BERT_DATA_PREPARATION.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/OpenAI_GPT_Pred.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/Delete_Retrieve_Generate_Data_Preparation.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/Head_selection.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/BERT_Classification_Training_data_preparation.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/tfidf_retrieve.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz_detail_gpt.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/evaluation_scripts/eval_yelp.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/evaluation_scripts/eval0.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/evaluation_scripts/eval_imagecaption.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/evaluation_scripts/eval_amazon.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/.ipynb_checkpoints/Head_selection-checkpoint.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/.ipynb_checkpoints/Delete_Retrieve_Generate_Data_Preparation-checkpoint.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/.ipynb_checkpoints/BERT_DATA_PREPARATION-checkpoint.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/.ipynb_checkpoints/bertviz_detail_gpt-checkpoint.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/.ipynb_checkpoints/BERT_Classification_Training_data_preparation-checkpoint.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/.ipynb_checkpoints/OpenAI_GPT_Pred-checkpoint.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/bertviz_map.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/bertviz_summary_gpt2.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/bertviz_summary.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/bertviz_detail_gpt2.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/bertviz_map_gpt2.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/bertviz_detail.ipynb",
      "https://raw.githubusercontent.com/agaralabs/transformer-drg-style-transfer/master/bertviz/.ipynb_checkpoints/bertviz_detail_gpt2-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  * Run **_BERT_DATA_PREPARATION.ipynb_** for preparing training and inference data for **Delete and Generate** . Use the best layer, Head combination from the previous step in **run_attn_examples()** function.\n  * Run **Delete_Retrieve_Generate_Data_Preparation.ipynb** to generate training data for **Delete, Retrieve and Generate** . It generates train, dev and test files. Use the files generated by **process_file_v1()** function as it shuffles the attributes and randomly samples only 70% of the attributes to train the generator model to generate smooth sentences instead of teaching it to just fill the blanks.\n  * Run **tfidf_retrieve.ipynb** to generate inference data by retrieving attributes of closest match from target style training corpus. \n  \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "python >=      3.7.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "  bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "  bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "  bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "  bash \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8220542238027089
      ],
      "excerpt": "numpy >=      1.15.4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910227897041919,
        0.8693305114212199
      ],
      "excerpt": "  * Classifier Training Data Preparation: BERT_Classification_Training_data_preparation.ipynb notebook creates training, testing and dev data. Modify the the paths of the input and output files. \n  * BERT Classifier Training: Run the below command to train BERT classifier. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8144900186309929
      ],
      "excerpt": "  export BERT_DATA_DIR=Path of the directory containing output previous step (train.csv, dev.csv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "  python run_classifier.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9085742582677562
      ],
      "excerpt": "Run openai_gpt_delete_and_generate.py for training Delete and Generate model. Below is the sample command. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "  python openai_gpt_delete_and_generate.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8450566376466349
      ],
      "excerpt": "Run __openai_gpt_delete_retrive_and_generate.py_ for training Delete, Retrieve and Generate model. Below is the sample command. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "  python openai_gpt_delete_retrive_and_generate.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/agaralabs/transformer-drg-style-transfer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "JavaScript"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Introduction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "transformer-drg-style-transfer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "agaralabs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/agaralabs/transformer-drg-style-transfer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 81,
      "date": "Thu, 23 Dec 2021 23:24:40 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "nlp",
      "deep-learning",
      "style-transfer",
      "text-style-transfer",
      "nlg",
      "text-generation"
    ],
    "technique": "GitHub API"
  }
}