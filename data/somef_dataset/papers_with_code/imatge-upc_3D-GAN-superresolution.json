{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.04802",
      "https://arxiv.org/abs/1609.05158"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/imatge-upc/3D-GAN-superresolution",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any general doubt about our work or code which may be of interest for other researchers, please use the public issues section on this github repo.\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-18T10:36:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-16T12:31:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9675066018222127
      ],
      "excerpt": "Here we present the implementation in TensorFlow of our work to generate high resolution MRI scans from low resolution images using Generative Adversarial Networks (GANs), accepted in the Medical Imaging with Deep Learning Conference \u2013 Amsterdam. 4 - 6th July 2018. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9945648694431938,
        0.9920778708842333,
        0.8802106265519906,
        0.9871355895077814
      ],
      "excerpt": "In this work we propose an architecture for MRI super-resolution that completely exploits the available volumetric information contained in MRI scans, using 3D convolutions to process the volumes and taking advantage of an adversarial framework, improving the realism of the generated volumes. \nThe model is based on the SRGAN network. The adversarial loss uses least squares to stabilize the training and the generator loss, in addition to the adversarial term contains a content term based on mean square error and image gradients in order to improve the quality of the generated images. We explore three different methods for the upsampling phase: an upsampling layer which uses nearest neighbors to replicate consecutive pixels followed by a convolutional layer to improve the approximation, sub-pixel convolution layers as proposed in Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network and a modification of this method Checkerboard artifact free sub-pixel convolution that alleviates checkbock artifacts produced by sub-pixel convolution layers (Check: Deconvolution and Checkerboard Artifacts for more information). \nComparison of the upsampling methods used \nWe used a set of normal control T1-weighted images from the Alzheimer\u2019s Disease Neuroimaging Initiative (ADNI) database (see www.adni-info.org for details). Skull stripping is performed in all volumes and part of the background is removed. Final volumes have dimensions 224x224x152. Due to memory constraints the training is patch-based; for each volume we extract patches of size 128x128x92, with a step of 112x112x76, so there are 8 patches per volume, with an overlap of 16x16x16. We have a total number of 589 volumes, 470 are used for training while 119 are used for testing. We use batches of two patches, thus for each volume we perform 4 iterations. This code is prepared to do experiments with the processing of images and dimensions explained. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421230500230114
      ],
      "excerpt": "+ -feature_size: Number of filters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185345945610325
      ],
      "excerpt": "To test the network the model.py script is also used. When calling the script you should specify the same arguments as before for the configuration of the model and the new paths used. Also, the argument evaluate should be True: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421230500230114
      ],
      "excerpt": "+ -feature_size: Number of filters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "3D super-resolution using Generative Adversarial Networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/imatge-upc/3D-GAN-superresolution/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 40,
      "date": "Sat, 25 Dec 2021 15:22:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/imatge-upc/3D-GAN-superresolution/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "imatge-upc/3D-GAN-superresolution",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8159652112871559
      ],
      "excerpt": "+ -path_prediction: Path to save training predictions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8304423725190596,
        0.9367351810954231
      ],
      "excerpt": "\u22c5\u22c5* -restore: Checkpoint path to restore training \npython model.py -path_prediction YOURPATH -checkpoint_dir YOURCHECKPOINTPATH -residual_blocks 8 -upsampling_factor 2 -subpixel_NN True -feature_size 64 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8295084175660039
      ],
      "excerpt": "+ -path_volumes: Path to save test volumes. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/imatge-upc/3D-GAN-superresolution/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "3D-GAN-superresolution",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "3D-GAN-superresolution",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "imatge-upc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/imatge-upc/3D-GAN-superresolution/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 116,
      "date": "Sat, 25 Dec 2021 15:22:28 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gan",
      "super-resolution",
      "mri",
      "brain"
    ],
    "technique": "GitHub API"
  }
}