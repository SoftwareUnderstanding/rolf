{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code is implemented on maskrcnn frameworks (https://github.com/matterport/Mask_RCNN). Thanks for their great work!\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06870"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9961766569917674
      ],
      "excerpt": "Chi Zhang \u2013 @LinkedIn \u2013 c.zhang@neu.edu \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangchi9/Airbus_Ship_Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-19T00:10:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-08T15:19:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.914087777187779
      ],
      "excerpt": "Distributed under the MIT license. See LICENSE for more information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Kaggle Airbus Ship Detection",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangchi9/Airbus_Ship_Detection/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[![NPM Version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Downloads Stats][npm-downloads]][npm-url]\n\nThis a computer vision object detection and segmentation problem on kaggle (https://www.kaggle.com/c/airbus-ship-detection#description). In this problem, I build a model that detects all ships in satellite images and generate a mask for each ship. There several deep learning models that works with image detection such as YOLO, R-CNN, Fast R-CNN, Faster R-CNN. For objection segmentation, Unet is a great tools. Recently there is a nice paper on object instance segmentation (https://arxiv.org/abs/1703.06870) called Mask R-CNN.\n\nIn this problem, most image (~80%) contains no ships. So my strategy is the following:\n\n1. I build a classifier to detect if a image has any ships.\n2. Feed the image that contains image detected by the classifier to Mask R-CNN.\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 10:38:01 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhangchi9/Airbus_Ship_Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhangchi9/Airbus_Ship_Detection",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Airbus_classifier_all.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Airbus_classifier_train.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/fastai_Unet_submission.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Airbus_Ships_detection_summary.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Airbus_segmentation_validation_and_predict_every_thing_included.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Air_ships_unet.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Airbus_segementation_train.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/Airbus_segmentation_data_visualization.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Airbus_segmentation_validation_and_predict_every_thing_included-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Airbus_segmentation_compare_unet_and_maskrcnn-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Airbus_segementation_train-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/fastai_Unet-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Airbus_classifier_train-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Airbus_classifier_all-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/fastai_Unet_keral-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/kenel_fastai-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/fastai_Unet_submission-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Keras_Unet-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/Airbus_segmentation_data_visualization-checkpoint.ipynb",
      "https://raw.githubusercontent.com/zhangchi9/Airbus_Ship_Detection/master/.ipynb_checkpoints/final_submission-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"seg_val0.png\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhangchi9/Airbus_Ship_Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Airbus Ships detection problem",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Airbus_Ship_Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhangchi9",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangchi9/Airbus_Ship_Detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Python 3.6\n\nJupyter Notebook\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 10:38:01 GMT"
    },
    "technique": "GitHub API"
  }
}