{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1906.00446\n\n<img src='https://user-images.githubusercontent.com/48815706/83919525-9dbe0900-a72f-11ea-8c71-0c6ad014cdf9.png'>\n\n<p>In the paper, the authors concatenate layers at multiple resolutions, similar to a U-net. The main difference is an explicit latent space. Here, they use the network as a VAE, by generating samples from in the latent space and upsampling.\n  </p>\n<p>The network itself can be repurposed for many image processing tasks: for example image restoration or image segmentation - or any task that starts with an input image and outputs some target image.</p>\n<h2>Usage</h2>\n<h5>File Structure</h5>\n<p>Place original images in path data/originals</p>\n<p>Place target images in path data/targets</p>\n<p>originals and targets must have the same name for the train file to know matching pairs.</p>\n<h5>Train</h5>\n```\npython vq_train.py\n```\n<h5>Viewing Results</h5>\n<img src='https://user-images.githubusercontent.com/48815706/83919539-a57dad80-a72f-11ea-9ee9-c771d94362bf.png'>\n```\npython test_results.py --operation=view_samples --plot_type=grid\n```\nor\n```\npython test_results.py --operation=view_samples --plot_type=single\n```\n<h5>Creating Images from Test Set</h5>\n```\npython test_results.py --operation=reconstruct_test\n```\n<p>Notes: for image segmentation, consider changes the loss function to an IoU calculation, the network's final activation. You may also need data processing if there are multiple segmentation classes.</p>"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9912556242864674
      ],
      "excerpt": "See https://arxiv.org/abs/1906.00446 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/eric-yim/image_reconstruction",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-05T18:57:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-21T09:00:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9693672358600367
      ],
      "excerpt": "<p>In the paper, the authors concatenate layers at multiple resolutions, similar to a U-net. The main difference is an explicit latent space. Here, they use the network as a VAE, by generating samples from in the latent space and upsampling. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043107397490912
      ],
      "excerpt": "<p>The network itself can be repurposed for many image processing tasks: for example image restoration or image segmentation - or any task that starts with an input image and outputs some target image.</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "TF 2.0 Implementation of VQVAE",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/eric-yim/image_reconstruction/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 13:41:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/eric-yim/image_reconstruction/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "eric-yim/image_reconstruction",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8318570526030742,
        0.807239497130141
      ],
      "excerpt": "<h5>File Structure</h5> \n<p>Place original images in path data/originals</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8588968315727076,
        0.9246227682586091
      ],
      "excerpt": "<p>originals and targets must have the same name for the train file to know matching pairs.</p> \npython vq_train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9039776560858485
      ],
      "excerpt": "python test_results.py --operation=view_samples --plot_type=grid \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8036073003247601
      ],
      "excerpt": "python test_results.py --operation=reconstruct_test \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/eric-yim/image_reconstruction/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TF 2.0 Implementation of VQVAE",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "image_reconstruction",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "eric-yim",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/eric-yim/image_reconstruction/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sun, 26 Dec 2021 13:41:27 GMT"
    },
    "technique": "GitHub API"
  }
}