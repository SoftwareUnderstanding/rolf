{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.04381 .\n\nTo run the pipeline run main.py with two arguments \"input folder\" and \"output folder\".\n\nThe first 12 sorted images given by the pipeline:\n\n<p float=\"left\">\n  <img src=\"sorted_images/image_0.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_1.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_2.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_3.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_4.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_5.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_6.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_7.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_8.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_9.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_10.jpg\" width=\"250\" />\n  <img src=\"sorted_images/image_11.jpg\" width=\"250\" />\n</p>\n"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cpn/ShuffledVideoSorter",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-26T17:00:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-06T20:06:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9435355420516485,
        0.834968325911307
      ],
      "excerpt": "This project attempts to reorder a set of images from a shuffled video using deep learning. \nThe flow of the project is quite simple: read the images, apply background substraction, apply an already trained CNN to obtain the feature map, select the first image and find the next one using the L2 distance (or cosine) with respect to the feature map, do the same until you run out of images. This way you end up with two parts of the video, possible in reverse, which can be reordered manually. The feature map was obtained using the pre-trained MobileNetV2 architecture: https://arxiv.org/abs/1801.04381 . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Given a folder of shuffled images from a video this project attempts to reorder them using deep learning.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cpn/ShuffledVideoSorter/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 21:59:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cpn/ShuffledVideoSorter/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cpn/ShuffledVideoSorter",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9346849013521976
      ],
      "excerpt": "To run the pipeline run main.py with two arguments \"input folder\" and \"output folder\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932,
        0.9197735714648932
      ],
      "excerpt": "  <img src=\"sorted_images/image_0.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_1.jpg\" width=\"250\" />  \n  <img src=\"sorted_images/image_2.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_3.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_4.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_5.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_6.jpg\" width=\"250\" />  \n  <img src=\"sorted_images/image_7.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_8.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_9.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_10.jpg\" width=\"250\" /> \n  <img src=\"sorted_images/image_11.jpg\" width=\"250\" /> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cpn/ShuffledVideoSorter/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShuffledVideoSorter",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShuffledVideoSorter",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cpn",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cpn/ShuffledVideoSorter/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 21:59:06 GMT"
    },
    "technique": "GitHub API"
  }
}