{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.03400\n\n\n\n# Ominiglot\n\n## Howto\nchange `dataset = 'omniglot' ` in `main.py` and just run `python main.py`, the program will download omniglot dataset automatically.\nmodify the value of `meta_batchsz` to fit your GPU memory size.\n\n## benchmark\n| Model                               \t| Fine Tune \t| 5-way Acc.    \t|               \t| 20-way Acc   \t|               \t|\n|-------------------------------------\t|-----------\t|---------------\t|---------------\t|--------------\t|---------------\t|\n|                                     \t|           \t| 1-shot        \t| 5-shot        \t| 1-shot       \t| 5-shot        \t|\n| MANN                                \t| N         \t| 82.8%         \t| 94.9%         \t| -            \t| -             \t|\n| Matching Nets                       \t| N         \t| 98.1%         \t| 98.9%         \t| 93.8%        \t| 98.5%         \t|\n| Matching Nets                       \t| Y         \t| 97.9%         \t| 98.7%         \t| 93.5%        \t| 98.7%         \t|\n| MAML                                \t| Y         \t| 98.7+-0.4%    \t| 99.9+-0.1%    \t| 95.8+-0.3%   \t| 98.9+-0.2%    \t|\n| **Ours**                             \t| Y         \t| 98.62%     \t\t| 99.52%        \t| 96.09%   \t\t| 98.24%    \t\t\t\t|\n\n\n>5way 1shot episode: 11580\\*512 \tfinetune acc:0.990234 \t\ttest acc:0.986250\n\n>5way 5shot episode: 27180\\*128 \tfinetune acc:0.995625 \t\ttest acc:0.995219\n\n>20way 1shot episode: 23160\\*128 \tfinetune acc:0.960937 \t\ttest acc:0.960898\n\n>20way 5shot episode: 11580\\*32 \tfinetune acc:0.985938 \t\ttest acc:0.982437\n\n\n## training curve\n![test acc](res/test-acc.png"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8049584332428769
      ],
      "excerpt": "Reptile: A Scalable Meta-Learning Algorithm: https://blog.openai.com/reptile/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "| Matching Nets                         | N             | 98.1%             | 98.9%             | 93.8%         | 98.5%             | \n| Matching Nets                         | Y             | 97.9%             | 98.7%             | 93.5%         | 98.7%             | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dragen1860/Reptile-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-05-28T06:07:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T05:45:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8985320961252093
      ],
      "excerpt": "PyTorch implementation of the supervised learning experiments from the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8479318637393796
      ],
      "excerpt": ", which is based on Model-Agnostic Meta-Learning (MAML): https://arxiv.org/abs/1703.03400 \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dragen1860/Reptile-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Fri, 24 Dec 2021 01:04:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dragen1860/Reptile-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dragen1860/Reptile-Pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8406036117559837
      ],
      "excerpt": "train mini-imagenet is extremely slow, since the code train task one by one squentially. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9364938638057148
      ],
      "excerpt": "change dataset = 'omniglot' in main.py and just run python main.py, the program will download omniglot dataset automatically. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664,
        0.8714905477766968,
        0.8714905477766968
      ],
      "excerpt": "5way 1shot episode: 11580*512     finetune acc:0.990234       test acc:0.986250 \n5way 5shot episode: 27180*128     finetune acc:0.995625       test acc:0.995219 \n20way 1shot episode: 23160*128    finetune acc:0.960937       test acc:0.960898 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "    \u251c\u2500\u2500 n0210891500001298.jpg \n    \u251c\u2500\u2500 n0287152500001298.jpg  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8916366759154853
      ],
      "excerpt": "\u251c\u2500\u2500 test.csv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8897107595245954
      ],
      "excerpt": "\u2514\u2500\u2500 train.csv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004,
        0.9110025000578481
      ],
      "excerpt": "\u251c\u2500\u2500 main.py \n\u251c\u2500\u2500 meta.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9156889963450981
      ],
      "excerpt": "change dataset = 'mini-imagenet' in main.py and just run python main.py. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dragen1860/Reptile-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Reptile-Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Reptile-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dragen1860",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dragen1860/Reptile-Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 113,
      "date": "Fri, 24 Dec 2021 01:04:19 GMT"
    },
    "technique": "GitHub API"
  }
}