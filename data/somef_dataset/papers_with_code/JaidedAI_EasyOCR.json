{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project is based on research and code from several papers and open-source repositories.\n\nAll deep learning execution is based on [Pytorch](https://pytorch.org). :heart:\n\nDetection execution uses the CRAFT algorithm from this [official repository](https://github.com/clovaai/CRAFT-pytorch) and their [paper](https://arxiv.org/abs/1904.01941) (Thanks @YoungminBaek from @clovaai). We also use their pretrained model.\n\nThe recognition model is a CRNN ([paper](https://arxiv.org/abs/1507.05717)). It is composed of 3 main components: feature extraction (we are currently using [Resnet](https://arxiv.org/abs/1512.03385)) and VGG, sequence labeling ([LSTM](https://www.bioinf.jku.at/publications/older/2604.pdf)) and decoding ([CTC](https://www.cs.toronto.edu/~graves/icml_2006.pdf)). The training pipeline for recognition execution is a modified version of the [deep-text-recognition-benchmark](https://github.com/clovaai/deep-text-recognition-benchmark) framework. (Thanks @ku21fan from @clovaai) This repository is a gem that deserves more recognition.\n\nBeam search code is based on this [repository](https://github.com/githubharald/CTCDecoder) and his [blog](https://towardsdatascience.com/beam-search-decoding-in-ctc-trained-neural-networks-5a889a3d85a7). (Thanks @githubharald)\n\nData synthesis is based on [TextRecognitionDataGenerator](https://github.com/Belval/TextRecognitionDataGenerator). (Thanks @Belval)\n\nAnd a good read about CTC from distill.pub [here](https://distill.pub/2017/ctc/).\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.01941",
      "https://arxiv.org/abs/1507.05717",
      "https://arxiv.org/abs/1512.03385"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project is based on research and code from several papers and open-source repositories.\n\nAll deep learning execution is based on [Pytorch](https://pytorch.org). :heart:\n\nDetection execution uses the CRAFT algorithm from this [official repository](https://github.com/clovaai/CRAFT-pytorch) and their [paper](https://arxiv.org/abs/1904.01941) (Thanks @YoungminBaek from @clovaai). We also use their pretrained model.\n\nThe recognition model is a CRNN ([paper](https://arxiv.org/abs/1507.05717)). It is composed of 3 main components: feature extraction (we are currently using [Resnet](https://arxiv.org/abs/1512.03385)) and VGG, sequence labeling ([LSTM](https://www.bioinf.jku.at/publications/older/2604.pdf)) and decoding ([CTC](https://www.cs.toronto.edu/~graves/icml_2006.pdf)). The training pipeline for recognition execution is a modified version of the [deep-text-recognition-benchmark](https://github.com/clovaai/deep-text-recognition-benchmark) framework. (Thanks @ku21fan from @clovaai) This repository is a gem that deserves more recognition.\n\nBeam search code is based on this [repository](https://github.com/githubharald/CTCDecoder) and his [blog](https://towardsdatascience.com/beam-search-decoding-in-ctc-trained-neural-networks-5a889a3d85a7). (Thanks @githubharald)\n\nData synthesis is based on [TextRecognitionDataGenerator](https://github.com/Belval/TextRecognitionDataGenerator). (Thanks @Belval)\n\nAnd a good read about CTC from distill.pub [here](https://distill.pub/2017/ctc/).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8786044417622563
      ],
      "excerpt": "29 June 2021 - Version 1.4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "30 May 2021 - Version 1.3.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9836179740804603
      ],
      "excerpt": "reader = easyocr.Reader(['en'], detection='DB', recognition = 'Transformer') \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JaidedAI/EasyOCR",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-14T11:46:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T15:15:33Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.931898211201513
      ],
      "excerpt": "Try Demo on our website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8830560485836302,
        0.8206264635786934
      ],
      "excerpt": "Add readtextlang method (thanks@arkya-art, see PR) \nExtend rotation_info argument to support all possible angles (thanksabde0103, see PR) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9217013905169812,
        0.9572827435899803
      ],
      "excerpt": "Batched image inference for GPUs (thanks @SamSamhuns, see PR) \nVertical text support (thanks @interactivetech). This is for rotated text, not to be confused with vertical Chinese or Japanese text. (see PR) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.841122135991965
      ],
      "excerpt": "Fix bug when a text box's aspect ratio is disproportional (thanks iQuartic for bug report) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8122020982384734,
        0.8023393633641621
      ],
      "excerpt": "Add support for PIL image (thanks @prays) \nAdd Tajik language (tjk) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9656090508282994
      ],
      "excerpt": "List of all models: Model hub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872772721232621,
        0.8234328763563306,
        0.9693233393948762,
        0.8836584017304054,
        0.8828245977723591
      ],
      "excerpt": "The idea is to be able to plug-in any state-of-the-art model into EasyOCR. There are a lot of geniuses trying to make better detection/recognition models, but we are not trying to be geniuses here. We just want to make their works quickly accessible to the public ... for free. (well, we believe most geniuses want their work to create a positive impact as fast/big as possible) The pipeline should be something like the below diagram. Grey slots are placeholders for changeable light blue modules. \nLet's advance humanity together by making AI available to everyone! \n3 ways to contribute: \nCoder: Please send a PR for small bugs/improvements. For bigger ones, discuss with us by opening an issue first. There is a list of possible bug/improvement issues tagged with 'PR WELCOME'. \nUser: Tell us how EasyOCR benefits you/your organization to encourage further development. Also post failure cases in Issue  Section to help improve future models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9067795335300368
      ],
      "excerpt": "To request a new language, we need you to send a PR with the 2 following files: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.81707144019928
      ],
      "excerpt": "we need 'yourlanguagecode_char.txt' that contains list of all characters. Please see format examples from other files in that folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JaidedAI/EasyOCR/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1761,
      "date": "Thu, 23 Dec 2021 16:25:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JaidedAI/EasyOCR/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JaidedAI/EasyOCR",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JaidedAI/EasyOCR/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JaidedAI/EasyOCR/master/trainer/trainer.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install using `pip`\n\nFor the latest stable release:\n\n``` bash\npip install easyocr\n```\n\nFor the latest development release:\n\n``` bash\npip install git+git://github.com/jaidedai/easyocr.git\n```\n\nNote 1: For Windows, please install torch and torchvision first by following the official instructions here https://pytorch.org. On the pytorch website, be sure to select the right CUDA version you have. If you intend to run on CPU mode only, select `CUDA = None`.\n\nNote 2: We also provide a Dockerfile [here](https://github.com/JaidedAI/EasyOCR/blob/master/Dockerfile).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9552573316562084
      ],
      "excerpt": "11 September 2021 - Version 1.4.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8014075607198466
      ],
      "excerpt": "29 June 2021 - Version 1.4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9138041846131764
      ],
      "excerpt": "30 May 2021 - Version 1.3.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9473898066245818
      ],
      "excerpt": "20 April 2021 - Version 1.3.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8068837141967585
      ],
      "excerpt": "21 March 2021 - Version 1.3 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9123685864324909
      ],
      "excerpt": "Example dataset for model training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8018065913190802
      ],
      "excerpt": "Update argument setting for command line \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8611017727444862
      ],
      "excerpt": "Read here \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JaidedAI/EasyOCR/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Ruby",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EasyOCR",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "EasyOCR",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JaidedAI",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JaidedAI/EasyOCR/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 11 September 2021 - Version 1.4.1\r\n    - Add trainer folder\r\n    - Add `readtextlang` method (thanks[@arkya-art](https://github.com/arkya-art), see [PR](https://github.com/JaidedAI/EasyOCR/pull/525))\r\n    - Extend `rotation_info` argument to support all possible angle (thanks[abde0103](https://github.com/abde0103), see [PR](https://github.com/JaidedAI/EasyOCR/pull/515))",
        "dateCreated": "2021-09-11T09:26:30Z",
        "datePublished": "2021-09-11T09:36:28Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.4.1",
        "name": "v1.4.1",
        "tag_name": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.4.1",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/49386798",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.4.1"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 29 June 2021 - Version 1.4\r\n    - [Instruction](https://github.com/JaidedAI/EasyOCR/blob/master/custom_model.md) on training/using custom recognition model\r\n    - [Example dataset](https://www.jaided.ai/easyocr/modelhub)\r\n    - Batched image inference for GPU (thanks [@SamSamhuns](https://github.com/SamSamhuns), see [PR](https://github.com/JaidedAI/EasyOCR/pull/458))\r\n    - Vertical text support (thanks [@interactivetech](https://github.com/interactivetech)). This is for rotated text, not to be confused with vertical Chinese or Japanese text. (see [PR](https://github.com/JaidedAI/EasyOCR/pull/450))\r\n    - Output in dictionary format (thanks [@A2va](https://github.com/A2va), see [PR](https://github.com/JaidedAI/EasyOCR/pull/441))",
        "dateCreated": "2021-06-29T09:43:06Z",
        "datePublished": "2021-06-29T09:44:35Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.4",
        "name": "v1.4",
        "tag_name": "v1.4",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.4",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/45410625",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.4"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 30 May 2021 - Version 1.3.2\r\n    - Faster greedy decoder (thanks [@samayala22](https://github.com/samayala22)) \r\n    - Fix bug when text box's aspect ratio is disproportional (thanks [iQuartic](https://iquartic.com/) for bug report)",
        "dateCreated": "2021-05-30T08:52:30Z",
        "datePublished": "2021-05-30T08:55:25Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.3.2",
        "name": "v1.3.2",
        "tag_name": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.3.2",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/43815940",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.3.2"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 24 April 2021 - Version 1.3.1\r\n    - Add support for PIL image (thanks [@prays](https://github.com/prays))\r\n    - Add Tajik language (tjk)\r\n    - Update argument setting for command line\r\n    - Add `x_ths` and `y_ths` to control merging behavior when `paragraph=True`",
        "dateCreated": "2021-04-21T20:51:16Z",
        "datePublished": "2021-04-24T01:05:19Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.3.1",
        "name": "v1.3.1",
        "tag_name": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.3.1",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/41932146",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.3.1"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 21 March 2021 - Version 1.3\r\n    - Second-generation models: multiple times smaller size, multiple times faster inference, additional characters, comparable accuracy to the first generation models.\r\n    EasyOCR will choose the latest model by default but you can also specify which model to use by passing `recog_network` argument when creating `Reader` instance.\r\n    For example, `reader = easyocr.Reader(['en','fr'], recog_network = 'latin_g1')` will use the 1st generation Latin model.\r\n    - List of all models: [Model hub](https://www.jaided.ai/easyocr/modelhub)",
        "dateCreated": "2021-03-21T09:41:09Z",
        "datePublished": "2021-03-21T09:44:54Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.3",
        "name": "v1.3",
        "tag_name": "v1.3",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.3",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/40117788",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.3"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 22 February 2021 - Version 1.2.5\r\n    - Add dynamic quantization for faster CPU inference (it is enabled by default for CPU mode)\r\n    - More sensible confident score",
        "dateCreated": "2021-02-22T13:19:51Z",
        "datePublished": "2021-02-23T00:29:20Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.2.5",
        "name": "v1.2.5",
        "tag_name": "v1.2.5",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.2.5",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/38457971",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.2.5"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 7 February 2021 - Version 1.2.4\r\n    - Faster CPU inference speed by using dynamic input shape (recognition rate increases by around 100% for images with a lot of text)",
        "dateCreated": "2021-02-07T11:35:54Z",
        "datePublished": "2021-02-07T11:38:16Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.2.4",
        "name": "v1.2.4",
        "tag_name": "v1.2.4",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.2.4",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/37635951",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.2.4"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 1 February 2021 - Version 1.2.3\r\n    - Add `setLanguageList` method to `Reader` class. This is a convenient api for changing languages (within the same model) after creating class instance.\r\n    - Small change on text box merging. (thanks [z-pc](https://github.com/z-pc), see [PR](https://github.com/JaidedAI/EasyOCR/pull/338))\r\n    - [Basic Demo on website](https://www.jaided.ai/easyocr)",
        "dateCreated": "2021-02-01T02:25:01Z",
        "datePublished": "2021-02-01T02:26:39Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/1.2.3",
        "name": "1.2.3",
        "tag_name": "1.2.3",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/1.2.3",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/37154278",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/1.2.3"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 5 January 2021 - Version 1.2.2\r\n    - Add `optimal_num_chars` to `detect` method. If specified, bounding boxes with estimated number of characters near this value are returned first. (thanks [@adamfrees](https://github.com/adamfrees))\r\n    - Add `rotation_info` to `readtext` method. Allow EasyOCR to rotate each text box and return the one with the best confident score. Eligible values are 90, 180 and 270. For example, try [90, 180 ,270] for all possible text orientations. (thanks [@mijoo308](https://github.com/mijoo308))\r\n    - Update [documentation](https://www.jaided.ai/easyocr/documentation).",
        "dateCreated": "2021-01-05T13:45:05Z",
        "datePublished": "2021-01-05T13:48:55Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/1.2.2",
        "name": "1.2.2",
        "tag_name": "1.2.2",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/1.2.2",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/35996832",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/1.2.2"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "New language supports for Telugu and Kannada. These are experimental lite recognition models. Their file sizes are only around 7% of other models and they are ~6x faster at inference with CPU.\r\n\r\nThis release is also a preparation for user-created models/architectures in the future.\r\n",
        "dateCreated": "2020-11-17T05:09:44Z",
        "datePublished": "2020-11-17T05:17:50Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.2",
        "name": "v1.2",
        "tag_name": "v1.2",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.2",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/34038828",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.2"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 12 October 2020 - Version 1.1.10\r\n    - Faster `beamsearch` decoder (thanks @amitbcp)\r\n    - Better code structure (thanks @susmith98)\r\n    - New language supports for Haryanvi(bgc), Sanskrit(sa) (Devanagari Script) and Manipuri(mni) (Bengari Script)\r\n- 31 August 2020 - Version 1.1.9\r\n    - Add `detect` and `recognize` method for performing text detection and recognition separately",
        "dateCreated": "2020-10-12T12:30:38Z",
        "datePublished": "2020-10-14T06:14:54Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/1.1.10",
        "name": "1.1.10",
        "tag_name": "1.1.10",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/1.1.10",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/32545542",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/1.1.10"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- 23 August 2020 - Version 1.1.8\r\n    - 20 new language supports for Bengali, Assamese, Abaza, Adyghe, Kabardian, Avar,\r\n    Dargwa, Ingush, Chechen, Lak, Lezgian, Tabassaran, Bihari, Maithili, Angika,\r\n    Bhojpuri, Magahi, Nagpuri, Newari, Goan Konkani\r\n    - Support RGBA input format\r\n    - Add `min_size` argument for `readtext`: for filtering out small text box",
        "dateCreated": "2020-08-23T04:40:26Z",
        "datePublished": "2020-08-23T04:44:29Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.1.8",
        "name": "v1.1.8",
        "tag_name": "v1.1.8",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.1.8",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/30021127",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.1.8"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "- New language support for Tamil\r\n- Temporary fix for memory leakage on CPU mode\r\n",
        "dateCreated": "2020-08-10T09:59:27Z",
        "datePublished": "2020-08-10T10:05:38Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.1.7",
        "name": "v1.1.7",
        "tag_name": "v1.1.7",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.1.7",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/29504979",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.1.7"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "Pretrained model files",
        "dateCreated": "2020-08-03T10:08:02Z",
        "datePublished": "2020-08-04T02:42:32Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/pre-v1.1.6",
        "name": "Model files",
        "tag_name": "pre-v1.1.6",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/pre-v1.1.6",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/29252783",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/pre-v1.1.6"
      },
      {
        "authorType": "User",
        "author_name": "rkcosmos",
        "body": "Stable version with added simplified Chinese support",
        "dateCreated": "2020-06-21T10:32:28Z",
        "datePublished": "2020-06-29T08:35:51Z",
        "html_url": "https://github.com/JaidedAI/EasyOCR/releases/tag/v1.1",
        "name": "Version 1.1",
        "tag_name": "v1.1",
        "tarball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/tarball/v1.1",
        "url": "https://api.github.com/repos/JaidedAI/EasyOCR/releases/28015498",
        "zipball_url": "https://api.github.com/repos/JaidedAI/EasyOCR/zipball/v1.1"
      }
    ],
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\n$ easyocr -l ch_sim en -f chinese.jpg --detail=1 --gpu=True\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13419,
      "date": "Thu, 23 Dec 2021 16:25:43 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "ocr",
      "deep-learning",
      "crnn",
      "pytorch",
      "lstm",
      "machine-learning",
      "scene-text",
      "scene-text-recognition",
      "optical-character-recognition",
      "cnn",
      "data-mining",
      "image-processing",
      "python",
      "easyocr",
      "information-retrieval"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![example](examples/example.png)\n\n![example2](examples/example2.png)\n\n![example3](examples/example3.png)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "``` python\nimport easyocr\nreader = easyocr.Reader(['ch_sim','en']) #: this needs to run only once to load the model into memory\nresult = reader.readtext('chinese.jpg')\n```\n\nThe output will be in a list format, each item represents a bounding box, the text detected and confident level, respectively.\n\n``` bash\n[([[189, 75], [469, 75], [469, 165], [189, 165]], '\u611a\u56ed\u8def', 0.3754989504814148),\n ([[86, 80], [134, 80], [134, 128], [86, 128]], '\u897f', 0.40452659130096436),\n ([[517, 81], [565, 81], [565, 123], [517, 123]], '\u4e1c', 0.9989598989486694),\n ([[78, 126], [136, 126], [136, 156], [78, 156]], '315', 0.8125889301300049),\n ([[514, 126], [574, 126], [574, 156], [514, 156]], '309', 0.4971577227115631),\n ([[226, 170], [414, 170], [414, 220], [226, 220]], 'Yuyuan Rd.', 0.8261902332305908),\n ([[79, 173], [125, 173], [125, 213], [79, 213]], 'W', 0.9848111271858215),\n ([[529, 173], [569, 173], [569, 213], [529, 213]], 'E', 0.8405593633651733)]\n```\nNote 1: `['ch_sim','en']` is the list of languages you want to read. You can pass\nseveral languages at once but not all languages can be used together.\nEnglish is compatible with every language and languages that share common characters are usually compatible with each other.\n\nNote 2: Instead of the filepath `chinese.jpg`, you can also pass an OpenCV image object (numpy array) or an image file as bytes. A URL to a raw image is also acceptable.\n\nNote 3: The line `reader = easyocr.Reader(['ch_sim','en'])` is for loading a model into memory. It takes some time but it needs to be run only once.\n\nYou can also set `detail=0` for simpler output.\n\n``` python\nreader.readtext('chinese.jpg', detail = 0)\n```\nResult:\n``` bash\n['\u611a\u56ed\u8def', '\u897f', '\u4e1c', '315', '309', 'Yuyuan Rd.', 'W', 'E']\n```\n\nModel weights for the chosen language will be automatically downloaded or you can\ndownload them manually from the [model hub](https://www.jaided.ai/easyocr/modelhub) and put them in the '~/.EasyOCR/model' folder\n\nIn case you do not have a GPU, or your GPU has low memory, you can run the model in CPU-only mode by adding `gpu=False`.\n\n``` python\nreader = easyocr.Reader(['ch_sim','en'], gpu=False)\n```\n\nFor more information, read the [tutorial](https://www.jaided.ai/easyocr/tutorial) and [API Documentation](https://www.jaided.ai/easyocr/documentation).\n\n",
      "technique": "Header extraction"
    }
  ]
}