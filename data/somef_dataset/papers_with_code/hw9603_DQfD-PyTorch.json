{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hw9603/DQfD-PyTorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-24T02:49:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-25T12:33:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9255886140560222
      ],
      "excerpt": "PyTorch implementations of Deep Reinforcement Algorithms \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9732430609368133,
        0.9718413250930193
      ],
      "excerpt": "NoisyNets add randomness to the parameters of the network. \nWith the presence of noisy layers, network is able to learn a domain-specific exploration strategy, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8682358646357661
      ],
      "excerpt": "and is very sensitive to parameters's initial value. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9708374404916406,
        0.9071136531099707
      ],
      "excerpt": "In the original paper, auothrs suggest that the summation of \"sigma\" can be viewed as the stochasticity of the layer. \nThis have been implemented in \"randomness\" method of \"NoisyLinear\" class with one modification: each \"sigma\" is normalized by \"mu\" before the summation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.862701105880073,
        0.9855704418107974
      ],
      "excerpt": "If there are some expert's demonstrations produced by human or another well-trained agent, one may expect these data could speed up the training process by saving time from random exploration in a large state/action space.  \nDQfD proivds a method to leverage demonstration data by pre-training the model on the demonstartion data solely before it starts to interact with the environment. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hw9603/DQfD-PyTorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 17:17:01 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hw9603/DQfD-PyTorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "hw9603/DQfD-PyTorch",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hw9603/DQfD-PyTorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DRL-using-PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DQfD-PyTorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "hw9603",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hw9603/DQfD-PyTorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Mon, 27 Dec 2021 17:17:01 GMT"
    },
    "technique": "GitHub API"
  }
}