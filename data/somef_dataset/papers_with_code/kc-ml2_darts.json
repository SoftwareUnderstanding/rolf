{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1806.09055\n\n\n- official git https://github.com/quark0/darts\n\n\n- codes  \n    - https://github.com/MandyMo/DARTS\n    - https://github.com/khanrc/pt.darts\n    - https://github.com/galvinw/darts\n\n\n- web\n    - http://openresearch.ai/t/darts-differentiable-architecture-search/355\n    "
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "10.\u2502 \u251c\u2500 alpha optimizing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977994744046882,
        0.8111036989382164
      ],
      "excerpt": "DARTS paper https://arxiv.org/abs/1806.09055 \nofficial git https://github.com/quark0/darts \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kc-ml2/darts",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-22T04:49:17Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-07T09:58:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "12.\u2502 \u2514\u2500 model fitting() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "7. \u2502 \u2514\u2500 model fitting() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8975922463955894
      ],
      "excerpt": "codes   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "pytorch implementation of DARTS",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kc-ml2/darts/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 00:46:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kc-ml2/darts/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kc-ml2/darts",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kc-ml2/darts/master/tools/.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  1. Get some arguments in shell\n  2. Set training environment such as using GPU\n  3. Define model(Network) and optimizers\n  4. Make Dataset(dataloader) -- cifar10\n  5. and Define arch (only search process)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9431210945663379
      ],
      "excerpt": " Requirements <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8735582744462191
      ],
      "excerpt": "|mode|runtime(avg)|train acc|val acc|environment|GPU(single)|params| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174102118253237
      ],
      "excerpt": "7. \u2502 \u2502 \u251c\u2500 run virtual step &amp; get gradients \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8556547511077708
      ],
      "excerpt": "official git https://github.com/quark0/darts \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9596285383856988
      ],
      "excerpt": " ex) python run.py --name DARTS_test1 --dataset cifar10 --data_path ../data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9062682977910081
      ],
      "excerpt": "ex) python run_from.py --name DARTS_test1 --dataset cifar10 --data_path ../data --genotype Genotype(normal=[[('sep_conv_3x3', 0), ('sep_conv_3x3', 1)], [('skip_connect', 0), ('sep_conv_3x3', 1)], [('skip_connect', 0), ('sep_conv_3x3', 1)], [('sep_conv_3x3', 0), ('sep_conv_3x3', 1)]], normal_concat=range(2, 6), reduce=[[('max_pool_3x3', 0), ('max_pool_3x3', 1)], [('max_pool_3x3', 1), ('skip_connect', 2)], [('skip_connect', 2), ('max_pool_3x3', 1)], [('dil_conv_5x5', 4), ('dil_conv_5x5', 2)]], reduce_concat=range(2, 6)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8662924116393176
      ],
      "excerpt": "If you need customize some parameters, check python run.py -h or python run_from.py -h \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8001555951444919,
        0.8611560384298468,
        0.881096164879472
      ],
      "excerpt": "| Search       | 29hr | 99.9% | 91.3% | py3.6 // cuda10 // torch 1.0 | Titan V | epoch=100, dataset=cifar10, workers=12, batch_size=64 | \n| Train/Test   | 8hr  | 98.6% | 96.7% | py3.6 // cuda10 // torch 1.0 | Titan V | epoch=300, dataset=cifar10, workers=16, batch_size=96 | \n| Train/Test   | 24hr  | 99.0% | 97.2% | py3.6 // cuda10 // torch 1.0 | Titan V | epoch=600, dataset=cifar10, workers=16, batch_size=96 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8170058388633726
      ],
      "excerpt": "4. \u251c\u2500\u25cb training loop (batch streaming) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "4. \u251c\u2500\u25cb training loop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8483819940059046
      ],
      "excerpt": "6. \u2502 \u251c\u2500 model training \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kc-ml2/darts/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DARTS:Differentiable Architecture Search \ud83c\udfaf - playground \ud83e\uddd7\u200d",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "darts",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kc-ml2",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kc-ml2/darts/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 27 Dec 2021 00:46:23 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  1. Get some arguments in shell\n  2. Set training environment such as using GPU\n  3. Define model(Network) and optimizers\n  4. Make Dataset(dataloader) -- cifar10\n  5. and Define arch (only search process)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}