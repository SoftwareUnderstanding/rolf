{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1807.05027",
      "https://arxiv.org/abs/1709.01846",
      "https://arxiv.org/abs/1807.05027 (2018).\n\n## Models implemented:\n\n| acronym | name | paper |\n|---------|------|-------|\n| AE | Autoencoder | Vincent, Pascal, et al. \"Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion.\" Journal of Machine Learning Research 11.Dec (2010): 3371-3408. [link](http://www.jmlr.org/papers/volume11/vincent10a/vincent10a.pdf)|\n| VAE | Variational Autoencoder | Kingma, Diederik P., and Max Welling. \"Auto-encoding variational bayes.\" arXiv preprint https://arxiv.org/abs/1312.6114 (2013). [link](arxiv.org/abs/1312.6114) |\n| sVAE | symetric Variational Autoencoder | Pu, Yunchen, et al. \"Symmetric variational autoencoder and connections to adversarial learning.\" arXiv preprint https://arxiv.org/abs/1709.01846 (2017). [link](https://arxiv.org/abs/1709.01846) |\n| GAN | Generative Adversarial Network | Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in neural information processing systems. 2014. [link](http://papers.nips.cc/paper/5423-generative-adversarial-nets)|\n| fmGAN | GAN with feature-matching loss | Salimans, Tim, et al. \"Improved techniques for training gans.\" Advances in Neural Information Processing Systems. 2016. [link](http://papers.nips.cc/paper/6124-improved-techniques-for-training-gans) |\n\n## Experiments:\n\nExperiments are executed on the Loda (Lightweight on-line detector of anomalies) datasets that are in the experiments directory. The sampling method is based on [this paper](http://web.engr.oregonstate.edu/~tgd/publications/emmott-das-dietterich-fern-wong-systematic-construction-of-anomaly-detection-benchmarks-from-real-data-odd13.pdf). After downloading the datasets, you can create your own using the experiments/prepare_data.jl function. For experimental evaluation, you need the EvalCurves package:\n\n`>> Pkg.clone(\"https://github.com/vitskvara/EvalCurves.jl.git\")",
      "https://arxiv.org/abs/1312.6114 (2013). [link](arxiv.org/abs/1312.6114) |\n| sVAE | symetric Variational Autoencoder | Pu, Yunchen, et al. \"Symmetric variational autoencoder and connections to adversarial learning.\" arXiv preprint https://arxiv.org/abs/1709.01846 (2017). [link](https://arxiv.org/abs/1709.01846) |\n| GAN | Generative Adversarial Network | Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in neural information processing systems. 2014. [link](http://papers.nips.cc/paper/5423-generative-adversarial-nets)|\n| fmGAN | GAN with feature-matching loss | Salimans, Tim, et al. \"Improved techniques for training gans.\" Advances in Neural Information Processing Systems. 2016. [link](http://papers.nips.cc/paper/6124-improved-techniques-for-training-gans) |\n\n## Experiments:\n\nExperiments are executed on the Loda (Lightweight on-line detector of anomalies) datasets that are in the experiments directory. The sampling method is based on [this paper](http://web.engr.oregonstate.edu/~tgd/publications/emmott-das-dietterich-fern-wong-systematic-construction-of-anomaly-detection-benchmarks-from-real-data-odd13.pdf). After downloading the datasets, you can create your own using the experiments/prepare_data.jl function. For experimental evaluation, you need the EvalCurves package:\n\n`>> Pkg.clone(\"https://github.com/vitskvara/EvalCurves.jl.git\")",
      "https://arxiv.org/abs/1709.01846 (2017). [link](https://arxiv.org/abs/1709.01846) |\n| GAN | Generative Adversarial Network | Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in neural information processing systems. 2014. [link](http://papers.nips.cc/paper/5423-generative-adversarial-nets)|\n| fmGAN | GAN with feature-matching loss | Salimans, Tim, et al. \"Improved techniques for training gans.\" Advances in Neural Information Processing Systems. 2016. [link](http://papers.nips.cc/paper/6124-improved-techniques-for-training-gans) |\n\n## Experiments:\n\nExperiments are executed on the Loda (Lightweight on-line detector of anomalies) datasets that are in the experiments directory. The sampling method is based on [this paper](http://web.engr.oregonstate.edu/~tgd/publications/emmott-das-dietterich-fern-wong-systematic-construction-of-anomaly-detection-benchmarks-from-real-data-odd13.pdf). After downloading the datasets, you can create your own using the experiments/prepare_data.jl function. For experimental evaluation, you need the EvalCurves package:\n\n`>> Pkg.clone(\"https://github.com/vitskvara/EvalCurves.jl.git\")"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.99803109373711
      ],
      "excerpt": "\u0160kv\u00e1ra, V\u00edt, Tom\u00e1\u0161 Pevn\u00fd, and V\u00e1clav \u0160m\u00eddl. Are generative deep models for novelty detection truly better? arXiv preprint arXiv:1807.05027 (2018). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9997499059255763,
        0.9997138666641957,
        0.9999926974797302,
        0.9993855516146183,
        0.9917024758629419
      ],
      "excerpt": "| AE | Autoencoder | Vincent, Pascal, et al. \"Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion.\" Journal of Machine Learning Research 11.Dec (2010): 3371-3408. link| \n| VAE | Variational Autoencoder | Kingma, Diederik P., and Max Welling. \"Auto-encoding variational bayes.\" arXiv preprint arXiv:1312.6114 (2013). link | \n| sVAE | symetric Variational Autoencoder | Pu, Yunchen, et al. \"Symmetric variational autoencoder and connections to adversarial learning.\" arXiv preprint arXiv:1709.01846 (2017). link | \n| GAN | Generative Adversarial Network | Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in neural information processing systems. 2014. link| \n| fmGAN | GAN with feature-matching loss | Salimans, Tim, et al. \"Improved techniques for training gans.\" Advances in Neural Information Processing Systems. 2016. link | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/smidl/AnomalyDetection.jl",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-01-10T21:22:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-21T04:45:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9663908909383698
      ],
      "excerpt": "Implementation of various generative neural network models for anomaly detection in Julia, using the Flux framework. Serves as a codebase for the comparative study presented in the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.872807175479457
      ],
      "excerpt": "| AE | Autoencoder | Vincent, Pascal, et al. \"Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion.\" Journal of Machine Learning Research 11.Dec (2010): 3371-3408. link| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513925186434429
      ],
      "excerpt": "Experiments are executed on the Loda (Lightweight on-line detector of anomalies) datasets that are in the experiments directory. The sampling method is based on this paper. After downloading the datasets, you can create your own using the experiments/prepare_data.jl function. For experimental evaluation, you need the EvalCurves package: \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/smidl/AnomalyDetection.jl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Thu, 23 Dec 2021 10:05:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/smidl/AnomalyDetection.jl/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "smidl/AnomalyDetection.jl",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/sVAE_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/ensembles_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/fmGAN_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/makeset_test.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/VAE_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/GAN_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/AE_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/kNN_anomaly_detection.ipynb",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/examples/ISOforest_anomaly_detection.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/experiments/benchmarks/run_serial_full.sh",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/experiments/benchmarks/run_selected.sh",
      "https://raw.githubusercontent.com/smidl/AnomalyDetection.jl/master/experiments/benchmarks/run_full.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/smidl/AnomalyDetection.jl/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Julia",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Anomaly Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "AnomalyDetection.jl",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "smidl",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/smidl/AnomalyDetection.jl/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Thu, 23 Dec 2021 10:05:03 GMT"
    },
    "technique": "GitHub API"
  }
}