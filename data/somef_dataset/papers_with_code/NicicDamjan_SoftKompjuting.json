{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- GANs, original paper by Ian J. Goodfellow: https://arxiv.org/abs/1406.2661\n- DCGAN , paper by Alec Radford & Luke Metz: https://arxiv.org/abs/1511.06434\n- HDCGAN, paper by Joachim D. Curto, Irene C. Zarza, Fernando De La Torre, Irwin King, and Michael R. Lyu: https://arxiv.org/pdf/1711.06491\n- GANs: Overview, paper by Antonia Creswell, Tom White, Vincent Dumoulin, Kai Arulkumaran, Biswa Sengupta and Anil A Bharath : https://arxiv.org/pdf/1710.07035\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661\n- DCGAN , paper by Alec Radford & Luke Metz: https://arxiv.org/abs/1511.06434\n- HDCGAN, paper by Joachim D. Curto, Irene C. Zarza, Fernando De La Torre, Irwin King, and Michael R. Lyu: https://arxiv.org/pdf/1711.06491\n- GANs: Overview, paper by Antonia Creswell, Tom White, Vincent Dumoulin, Kai Arulkumaran, Biswa Sengupta and Anil A Bharath : https://arxiv.org/pdf/1710.07035",
      "https://arxiv.org/abs/1511.06434\n- HDCGAN, paper by Joachim D. Curto, Irene C. Zarza, Fernando De La Torre, Irwin King, and Michael R. Lyu: https://arxiv.org/pdf/1711.06491\n- GANs: Overview, paper by Antonia Creswell, Tom White, Vincent Dumoulin, Kai Arulkumaran, Biswa Sengupta and Anil A Bharath : https://arxiv.org/pdf/1710.07035"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NicicDamjan/SoftKompjuting",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-01-10T21:41:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-06T19:57:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9747251138931368,
        0.9173290122445044
      ],
      "excerpt": "In this project we've used Deep Convolution Generative Adverserial Network, or DCGAN for short, and a custom dataset, in order to generate new Faces. \nResults are not as satisfying as we were expecting. We are still experimenting. Currently we are trying to figure out why does SELU activation function give poor results even though we've followed the specified architecture implementation from the \"High-Resolution Deep Convolutional Generative Adverserial Networks\" paper. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NicicDamjan/SoftKompjuting/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 22:15:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/NicicDamjan/SoftKompjuting/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "NicicDamjan/SoftKompjuting",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/NicicDamjan/SoftKompjuting/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Generating fake faces with using Deep Convolutional Generative Adverserial Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SoftKompjuting",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "NicicDamjan",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NicicDamjan/SoftKompjuting/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Before trying to run any of these programs you will need to install a couple of things in the following order:\n1. Anaconda ( latest version ) \n  - Link : https://www.anaconda.com/download/\n2. Python Lybraries such as : PyTorch, NumPy, Matplotlib, etc.\n  - After installing Anaconda you will be able to use their open source package and system managment system, also\n  known as \"conda\". Here is a link on how to download Pytorch using \"conda\" package managment system : https://anaconda.org/conda-forge/pyroch\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "After you've completed steps specified above, you will be able to run the program on your machine. I suggest you use Spider programming enviroment . To open Spyder and run the program you have to:\n - Open Anaconda Navigator\n - Launch your Spyder3 Enviroment.\n - Position yourself on directory where you've downloaded the project using file explorer tab located in the top right corner of the enviroment. \n - Run main.py\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 22:15:49 GMT"
    },
    "technique": "GitHub API"
  }
}