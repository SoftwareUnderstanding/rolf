{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1707.06347\n\nAfter 3 days of training, this Reinforcement Learning Pong Agent was able to beat the hardcoded Artificial Intelligence Pong Agent "
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tuanpnm99/RLPongAgent",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-11T16:36:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-03T02:14:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.996631883702079,
        0.9735660887687195
      ],
      "excerpt": "This project is created to train RL Agent to learn how to play Atari Pong Game using Policy Gradient methods from only raw input game pixels. First, I initialize the policy for the RL agent to play Pong. It is more or less random. Then, I gather the data with respect to the current policy by playing the game. I process the screen input and used CNN (Convolutional Neural Network) to extract meaningful information about the game state. Using this game state information with the current policy, I get the next action. The agent plays for a while until it stops and improves its current policy using the Policy Gradient method with the collected data. \nSpecifically, the Policy Gradient method I used for this agent is Proximal Policy Optimization  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tuanpnm99/RLPongAgent/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 09:59:55 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tuanpnm99/RLPongAgent/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tuanpnm99/RLPongAgent",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tuanpnm99/RLPongAgent/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Reinformence Learning Pong Agent",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "RLPongAgent",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tuanpnm99",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tuanpnm99/RLPongAgent/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 09:59:55 GMT"
    },
    "technique": "GitHub API"
  }
}