{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1603.09246"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bbrattoli/JigsawPuzzlePytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-09-14T13:20:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T06:20:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9744358662886838
      ],
      "excerpt": "Pytorch implementation of the paper \"Unsupervised Learning of Visual Representations by Solving Jigsaw Puzzles\" by Mehdi Noroozi GitHub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9208622752257414,
        0.9594070050315565
      ],
      "excerpt": "The input of the network should be 64x64, but I need to resize to 75x75, \n  otherwise the output of conv5 is 2x2 instead of 3x3 like the official architecture \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch implementation of the method from the paper \"Unsupervised Learning of Visual Representations by Solving Jigsaw Puzzles\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bbrattoli/JigsawPuzzlePytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 31,
      "date": "Fri, 24 Dec 2021 18:01:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bbrattoli/JigsawPuzzlePytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bbrattoli/JigsawPuzzlePytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/bbrattoli/JigsawPuzzlePytorch/master/run_jigsaw_training.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Two DataLoader are provided:\n- ImageLoader: per each iteration it loads data in image format (jpg,png ,...)\n    - *Dataset/JigsawImageLoader.py* uses PyTorch DataLoader and iterator\n    - *Dataset/ImageDataLoader.py* custom implementation.\n\nThe default loader is *JigsawImageLoader.py*. *ImageDataLoader.py* is slightly faster when using single core.\n\nThe images can be preprocessed using *_produce_small_data.py_* which resize the image to 256, keeping the aspect ratio, and crops a patch of size 255x255 in the center.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8646299267589348
      ],
      "excerpt": "The LRN layer crushes with a PyTorch version older than 0.3 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bbrattoli/JigsawPuzzlePytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "JigsawPuzzlePytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "JigsawPuzzlePytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bbrattoli",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bbrattoli/JigsawPuzzlePytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Tested with Python 2.7\n- [Pytorch](http://pytorch.org/) v0.3\n- [Tensorflow](https://www.tensorflow.org/) is used for logging. \n  Remove the Logger all scripts if tensorflow is missing\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Fill the path information in *run_jigsaw_training.sh*. \nIMAGENET_FOLD needs to point to the folder containing *ILSVRC2012_img_train*.\n\n```\n./run_jigsaw_training.sh [GPU_ID]\n```\nor call the python script\n```\npython JigsawTrain.py [*path_to_imagenet*] --checkpoint [*path_checkpoints_and_logs*] --gpu [*GPU_ID*] --batch [*batch_size*]\n```\nBy default the network uses 1000 permutations with maximum hamming distance selected using *select_permutations.py*.\n\nTo change the file name loaded for the permutations, open the file *JigsawLoader.py* and change the permutation file in the method *retrive_permutations*\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 121,
      "date": "Fri, 24 Dec 2021 18:01:27 GMT"
    },
    "technique": "GitHub API"
  }
}