{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.06146"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] Li, J.; Xu, L.; Tang, L.; Wang, S.; Li, L. Big data in tourism research: A literature review. Tour. Manag. 2018, 68, 301\u2013323.\n\n[2] Qin Li 1,2, Shaobo Li 3,4,* , Sen Zhang 1,2, Jie Hu 5 and Jianjun Hu 3,A Review of Text Corpus-Based Tourism Big Data Mining\n\n\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alantancr/Hotel-Recommender",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-09T12:25:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-19T03:15:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In a very general way, recommender systems are algorithms aimed at suggesting relevant items to users (items being movies to watch, text to read, products to buy or anything else depending on industries).\n\n**There are two main data selection methods:**\n\nCollaborative-filtering: In collaborative-filtering items are recommended, for example hotels, based on how similar your user profile is to other users\u2019, finds the users that are most similar to you and then recommends items that they have shown a preference for. This method suffers from the so-called cold-start problem: If there is a new hotel, no-one else would\u2019ve yet liked or watched it, so you\u2019re not going to have this in your list of recommended hotels, even if you\u2019d love it.\n\nContent-based filtering: This method uses attributes of the content to recommend similar content. It doesn\u2019t have a cold-start problem because it works through attributes or tags of the content, such as views, Wi-Fi or room types, so that new hotels can be recommended right away.\n\nThe point of content-based is that we have to know the content of both user and item. Usually you construct user-profile and item-profile using the content of shared attribute space. For example, for a movie, you represent it with the movie stars in it and the genres (using a binary coding for example).\n\n**There are a number of popular encoding schemes but the main ones are:** \n\n- One-hot encoding\n- Term frequency\u2013inverse document frequency (TF-IDF) encoding\n- Word embeddings\n\nIn this project, we will be discussing content-based filtering of recommender engine, turning implicit attributes into explicit features for hotel recommender engine.\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9936914763474418,
        0.9938660673369487
      ],
      "excerpt": "Text is an effective and widely existing form of opinion expression and evaluation by users, as shown by the large number of online review comments over tourism sites, hotels, and services. As a direct expression of users\u2019 needs and emotions, text-based tourism data mining has the potential to transform the tourism industry. \nContent-based filtering is a common approach in recommendation system. The features of the items previously rated by users and the best-matching ones are recommended. In our case, we will be transforming implicit information of hotel attributes as featuers for this recommendation engine. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.889629751581314,
        0.9692066985136578
      ],
      "excerpt": "The dataset contains 515738 reviews for 1492 luxury hotels in Europe. \nData files are not included this repository because of the large size. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9159850700596901
      ],
      "excerpt": "Based on reviews \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "Conclusion and Recommendation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9752299124038281
      ],
      "excerpt": "Secondly, based on the features, I have created a sparse matrix which entails the presence of the attributes based on the hotels.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.95230902660768
      ],
      "excerpt": "Lastly, I have computed a matrix based on cosine-similarity rule and ranked the hotel in terms of its similarity. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9979017587730156
      ],
      "excerpt": "As part of the project, I have performed using Flask on Heroku. I have learnt on the steps to take when performing an end-to-end project. This includes re-factoring of codes into functions and classes so as to easier compliation when compiling of the code for Flask. In order to deploy a model, you will need to understand what you want to achieve and re-look at the code on how you could recode to achieve that. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8026408976825805,
        0.9958139116322096
      ],
      "excerpt": "In this project, I have refactored the attributes based on my own research. It will be more effective if domain knowledge are provided, this would allow me to understand what are the key attributes that would be of importance and weightage should be given. \nIn view of gauging performance of the content-based recommender, we could potentially roll this model out for A/B testing to evaluate the performance of the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Content based Recommender",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alantancr/Hotel-Recommender/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In this project, the objective is to transform implicit information provided by users into explicit features for hotel recommendation system engine. There are two parts to this recommender engine using hotel attributes and reviews by users respectively to build two separate recommendation engine.\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 09:32:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alantancr/Hotel-Recommender/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "alantancr/Hotel-Recommender",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/alantancr/Hotel-Recommender/master/code/2_Model_HotelTags-final.ipynb",
      "https://raw.githubusercontent.com/alantancr/Hotel-Recommender/master/code/1_EDA.ipynb",
      "https://raw.githubusercontent.com/alantancr/Hotel-Recommender/master/code/2b_Model_Reviews.ipynb",
      "https://raw.githubusercontent.com/alantancr/Hotel-Recommender/master/code/.ipynb_checkpoints/2b_Model_Reviews-checkpoint.ipynb",
      "https://raw.githubusercontent.com/alantancr/Hotel-Recommender/master/code/.ipynb_checkpoints/2_Model_HotelTags-final-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9454405076777038
      ],
      "excerpt": "One hot encoding has the following limitations: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alantancr/Hotel-Recommender/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "HTML"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Content Based Recommender",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Hotel-Recommender",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "alantancr",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alantancr/Hotel-Recommender/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 09:32:37 GMT"
    },
    "technique": "GitHub API"
  }
}