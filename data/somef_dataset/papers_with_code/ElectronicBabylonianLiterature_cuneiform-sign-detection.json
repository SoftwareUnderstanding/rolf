{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- FCENET [https://arxiv.org/abs/2104.10442](https://arxiv.org/abs/2104.10442)\n- Using [https://github.com/open-mmlab/mmocr/blob/main/configs/textdet/fcenet/README.md](https://github.com/open-mmlab/mmocr/blob/main/configs/textdet/fcenet/README.md) (CVPR'2021)\n- MMOCR [https://github.com/open-mmlab/mmocr](https://github.com/open-mmlab/mmocr)\n- Deep learning of cuneiform sign detection with weak supervision using transliteration alignment [https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0243039](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0243039)\n- Synthetic Cuneiform Dataset (2000 Tablets) from [https://github.com/cdli-gh/Cuneiform-OCR](https://github.com/cdli-gh/Cuneiform-OCR)\n- Annotated Tablets (75 Tablets) [https://compvis.github.io/cuneiform-sign-detection-dataset/](https://compvis.github.io/cuneiform-sign-detection-dataset/)\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2104.10442](https://arxiv.org/abs/2104.10442",
      "https://arxiv.org/abs/2104.10442"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8048323069316636
      ],
      "excerpt": "Using FCENet (CVPR'2021) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElectronicBabylonianLiterature/cuneiform-sign-detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-18T10:59:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-18T11:21:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.951237201184264
      ],
      "excerpt": "Checkpoint that's used in production (most up to date model + weights): Ebl-Ai-Api this gets regularily updated. Once there is enough data we plan to evaluate the performance hmean-iou on a representative test set. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9655023165310447,
        0.9504070257955032
      ],
      "excerpt": "We use FCENET without deconvolutions and with Resnet-18 as Backbone (specified in ./configs/fcenet_default/fcenet_no_dcvn.py) currently this performs better   than the default Resnet-50 backbone because of our small dataset. \nCheckpoint that's used in production: Ebl-Ai-Api this gets regularily updated. Once there is enough data we plan to evaluate the performance hmean-iou on a representative test set. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "data/imgs, data/annotations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9368600881288228
      ],
      "excerpt": "Using checkpoint for pretraining FCENet Checkpoint \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Deep Learning for generating Bounding Boxes for Cuneiform Fragments",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://mmocr.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Data and Checkpoints in repo and Google Drive [Data](https://drive.google.com/drive/folders/1wNkv_7h4KXX9QiWdd5gAB2mcv-t8QsIy?usp=sharing)\n  - Contains VAT-images from Heidelberg\n  - Heidelberg + LMU data\n  - Contours( obverse, reverse and annotations extracted)\n  - Total: Training is done on this dataset. Run `prepare_data_coco_format.py` you can specify size of the validation set as a number between 0 and 1)\n  - (P336009.jpg manually handcleaned)\n- Heidelberg Dataset [Heidelberg-Data](https://github.com/CompVis/cuneiform-sign-detection-dataset)\n  - Process Heidelberg Data via `preprocess_heidelberg.create_annotatations_txt.py`\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElectronicBabylonianLiterature/cuneiform-sign-detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 02:33:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ElectronicBabylonianLiterature/cuneiform-sign-detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ElectronicBabylonianLiterature/cuneiform-sign-detection",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements:\n\n* ```console\n  sudo apt-get install ffmpeg libsm6 libxext6  -y  \n  (may be needed for open-cv python)\n  ```\n\n\n* Python 3.9\n\n```console\npython3 -m venv ./.venv\n```\n\npyre-configuration specifies paths specifically to **.venv** directory\n```console\npip3 install -r requirements\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8797532639065789
      ],
      "excerpt": "Running the tests \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8824517234057829,
        0.8172044743916664
      ],
      "excerpt": "Annotations file name: \ntxt file named: gt_<image_id>.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "Excecute train.py.  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ElectronicBabylonianLiterature/cuneiform-sign-detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Electronic Babylonian Literature\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ebl-ai-api",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cuneiform-sign-detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ElectronicBabylonianLiterature",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElectronicBabylonianLiterature/cuneiform-sign-detection/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Use command `black ebl_ai_api` to format code.\n- Use command `flake8` to linting.\n- Use command `pytest` to run all tests.\n- Use command `pyre` for type-checking.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 02:33:15 GMT"
    },
    "technique": "GitHub API"
  }
}