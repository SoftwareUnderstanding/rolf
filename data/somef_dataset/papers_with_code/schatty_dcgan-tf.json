{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1406.2661"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] Alec Radford, Luke Metz, Soumith Chintala _Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks_ (https://arxiv.org/abs/1511.06434)\n\n[2] Ian J. Goodfellow _Generative Adversarial Networks_ (https://arxiv.org/abs/1406.2661)\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/schatty/dcgan-tf",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-20T13:38:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-23T08:50:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9300736696508611,
        0.9823623211345235,
        0.9260479613966645
      ],
      "excerpt": "Repository provides implementation of DCGAN model (https://arxiv.org/abs/1511.06434) in TensorFlow 2.0.  Model has been testen on MNIST, CelebA and flowers102 datasets. \nThe repository organized as follows. dcgan contains model itself with the data prerpocessings setups. data contains scripts for dataset downloading and serves as a default directory for datasets. scripts contain script for the configuration processing and launching of the training procedure. results folder accumulate results obtained during training i.e. TenorBoard data, text logs and in-between images produced by generator network. tests contains basic tests for presented datasets. \nSettings of the training routine gathered in configuration files. Default configs for datasets are mnist.conf, celeba.conf and flowers.conf. They can be used to reproduce results presented below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456263222114649
      ],
      "excerpt": "60,000 black and white handwritten digits of size 28x28 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Deep Convolutional GAN in TensorFlow 2.0",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/schatty/dcgan-tf/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 19:02:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/schatty/dcgan-tf/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "schatty/dcgan-tf",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/schatty/dcgan-tf/master/data/flowers.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Project has been tested on Ubuntu 18.04 with Python 3.6.8 and TensorFflow 2.0.0-alpha0\n* The dependencies are Pillow, tqdm and scipy libraries, all included in setup.py\n* Traning requires `dcgan` lib which can be installed via `python setup.py install` command\n* To download dataset with flowers images run `bash data/flowers.sh` from the repository's root\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9199422613574048
      ],
      "excerpt": "After training dcgan/utils/gifmaker.py can be used to produce gif image from samples from generator. Example of usage can be found in main section of the file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9476537955489743,
        0.9476537955489743,
        0.9476537955489743
      ],
      "excerpt": "* python -m unittest tests/test_mnist.py \n* python -m unittest tests/test_celeba.py \n* python -m unittest tests/test_flowers.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/schatty/dcgan-tf/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Igor Kuznetsov\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep Convolutional GAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dcgan-tf",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "schatty",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/schatty/dcgan-tf/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 19:02:20 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "dcgan",
      "dcgan-tensorflow",
      "tensorflow",
      "tensorflow-2",
      "celeba"
    ],
    "technique": "GitHub API"
  }
}