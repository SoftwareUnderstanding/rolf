{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.11946.\n\n\n## 1. About EfficientNet Models\n\nEfficientNets are a family of image classification models, which achieve state-of-the-art accuracy, yet being an order-of-magnitude smaller and faster than previous models.\n\nWe develop EfficientNets based on AutoML and Compound Scaling. In particular, we first use [AutoML Mobile framework](https://ai.googleblog.com/2018/08/mnasnet-towards-automating-design-of.html",
      "https://arxiv.org/abs/1811.06965",
      "https://arxiv.org/abs/1512.03385",
      "https://arxiv.org/abs/1512.03385"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8625425717964789,
        0.9998416198938155
      ],
      "excerpt": "[1] Mingxing Tan and Quoc V. Le.  EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. ICML 2019. \n   Arxiv link: https://arxiv.org/abs/1905.11946. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "$ wget https://upload.wikimedia.org/wikipedia/commons/f/fe/Giant_Panda_in_Beijing_Zoo_1.JPG -O panda.jpg \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pikkaay/efficientnet_gpu",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-20T13:43:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-23T05:54:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8228533102225415
      ],
      "excerpt": "[1] Mingxing Tan and Quoc V. Le.  EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. ICML 2019. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9796153583255878,
        0.8440461982986185
      ],
      "excerpt": "EfficientNets are a family of image classification models, which achieve state-of-the-art accuracy, yet being an order-of-magnitude smaller and faster than previous models. \nWe develop EfficientNets based on AutoML and Compound Scaling. In particular, we first use AutoML Mobile framework to develop a mobile-size baseline network, named as EfficientNet-B0; Then, we use the compound scaling method to scale up this baseline to obtain EfficientNet-B1 to B7. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.986383404716351,
        0.9726775843586937,
        0.9819980763163162,
        0.9791207993946961,
        0.8364431039171883
      ],
      "excerpt": "EfficientNets achieve state-of-the-art accuracy on ImageNet with an order of magnitude better efficiency: \nIn high-accuracy regime, our EfficientNet-B7 achieves state-of-the-art 84.4% top-1 / 97.1% top-5 accuracy on ImageNet with 66M parameters and 37B FLOPS, being 8.4x smaller and 6.1x faster on CPU inference than previous best Gpipe. \nIn middle-accuracy regime, our EfficientNet-B1 is 7.6x smaller and 5.7x faster on CPU inference than ResNet-152, with similar ImageNet accuracy. \nCompared with the widely used ResNet-50, our EfficientNet-B4 improves the top-1 accuracy from 76.3% of ResNet-50 to 82.6% (+6.3%), under similar FLOPS constraint. \nWe have provided a list of EfficientNet checkpoints for EfficientNet-B0, EfficientNet-B1, EfficientNet-B2,  EfficientNet-B3, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8560571245976261
      ],
      "excerpt": "EfficientNet-B5. Notably, here we use the standard ResNet preprocessing rather than  AutoAugment, but we have achieved similar ImageNet top-1 accuracy as the original paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "$ tar zxf ${MODEL}.tar.gz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9367828645138967
      ],
      "excerpt": "Please refer to the following colab for more instructions on how to obtain and use those checkpoints. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8555267069708148
      ],
      "excerpt": "A GCE VM instance with an associated Cloud TPU resource \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "transfer learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pikkaay/efficientnet_gpu/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 23:35:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pikkaay/efficientnet_gpu/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pikkaay/efficientnet_gpu",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pikkaay/efficientnet_gpu/master/main.ipynb",
      "https://raw.githubusercontent.com/pikkaay/efficientnet_gpu/master/create_tfrecord.ipynb",
      "https://raw.githubusercontent.com/pikkaay/efficientnet_gpu/master/transfer_learn.ipynb",
      "https://raw.githubusercontent.com/pikkaay/efficientnet_gpu/master/eval_ckpt_example.ipynb",
      "https://raw.githubusercontent.com/pikkaay/efficientnet_gpu/master/create_tfrecord-test.ipynb",
      "https://raw.githubusercontent.com/pikkaay/efficientnet_gpu/master/.ipynb_checkpoints/main-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.945831844666825
      ],
      "excerpt": "Install TensorFlow version >= 1.13 for both GCE VM and Cloud. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9303755601074072
      ],
      "excerpt": "    <img src=\"./g3doc/params.png\" width=\"100%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8941104397016074
      ],
      "excerpt": "    <img src=\"./g3doc/flops.png\", width=\"90%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9241524089515422
      ],
      "excerpt": "$ python eval_ckpt_main.py --model_name=$MODEL --ckpt_dir=$MODEL --example_img=panda.jpg --labels_map_file=labels_map.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8137309750015727
      ],
      "excerpt": "eval_ckpt_example.ipynb: A colab example to load \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674
      ],
      "excerpt": "import efficientnet_builder \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8125638471012283
      ],
      "excerpt": "A GCS bucket to store your training checkpoints (the \"model directory\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8667333958410304
      ],
      "excerpt": "Then train the model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206
      ],
      "excerpt": "$ python main.py --tpu=TPU_NAME --data_dir=DATA_DIR --model_dir=MODEL_DIR \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pikkaay/efficientnet_gpu/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientNets",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "efficientnet_gpu",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pikkaay",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pikkaay/efficientnet_gpu/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    ",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 23 Dec 2021 23:35:09 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    ",
      "technique": "Header extraction"
    }
  ]
}