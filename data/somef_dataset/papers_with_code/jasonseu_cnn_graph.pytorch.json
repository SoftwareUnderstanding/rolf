{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Thanks the official [CNN_Graph](https://github.com/mdeff/cnn_graph) implemented with TensorFlow and awesome PyTorch team.\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jasonseu/cnn_graph.pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-20T06:07:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-19T18:33:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9953217478995247,
        0.9127166820006354
      ],
      "excerpt": "This repository is an unofficial implement of the paper \"Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering\" in NIPS 2016 with PyTorch. It supports to train and evaluate the network on the 20news and mnist. \nWith following scripts, you can train and evaluate the graph-based CNN with corresponding network architectures on mnist dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8782601739491674
      ],
      "excerpt": "where gc_layers=1 corresponds to the network architecture GC32, and gc_layers=2 to GC32-P4-GC64-P4-FC512. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9566486933719321
      ],
      "excerpt": "Note that the codes under the folder lib are completely borrowed from original codebase CNN_Graph, where the redundant functions have been removed. This part is responsible for graph building and coarsening. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A PyTorch implementation of paper \"Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jasonseu/cnn_graph.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 12:05:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jasonseu/cnn_graph.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jasonseu/cnn_graph.pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9087182789525697
      ],
      "excerpt": "Then you can train the network with different negtwork architectures on 20news dataset. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8094902980392261,
        0.8094902980392261,
        0.8608890503726417,
        0.8608890503726417
      ],
      "excerpt": "python train.py --data mnist --filter fourier --gc_layers 1 \npython train.py --data mnist --filter fourier --gc_layers 2 \npython train.py --data mnist --filter chebyshev --gc_layers 1 \npython train.py --data mnist --filter chebyshev --gc_layers 2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8094902980392261,
        0.8608890503726417
      ],
      "excerpt": "python train.py --data 20news --filter fourier --gc_layers 1 \npython train.py --data 20news --filter chebyshev --gc_layers 1 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jasonseu/cnn_graph.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CNN_Graph.pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cnn_graph.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jasonseu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jasonseu/cnn_graph.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.6\n- PyTorch 1.1\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Wed, 29 Dec 2021 12:05:16 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gcn"
    ],
    "technique": "GitHub API"
  }
}