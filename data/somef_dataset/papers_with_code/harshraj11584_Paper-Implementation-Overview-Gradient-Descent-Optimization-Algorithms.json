{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.04747",
      "https://arxiv.org/abs/1212.5701",
      "https://arxiv.org/abs/1412.6980",
      "https://arxiv.org/abs/1609.04747  : [[1]](https://arxiv.org/abs/1609.04747), [[2]](https://arxiv.org/pdf/1609.04747.pdf)   \n\nLink to Blog with Paper Explanation : [[3]](http://ruder.io/optimizing-gradient-descent/index.html)  \n\nImplemented following Gradient Desent Optimization Algorithms from Scratch:  \n\n1. Vanilla Batch/Stochastic Gradient Descent [[4]](https://en.wikipedia.org/wiki/Stochastic_gradient_descent) : **batch_gradient_descent.py**   \n\n2. Momentum [[5]](https://www.cs.toronto.edu/~fritz/absps/momentum.pdf) : **momentum.py**  \n3. NAG : Nesterov Accelarated Gradient  [[6]](https://www2.cs.uic.edu/~zhangx/teaching/agm.pdf) : **nesterov_accelarated_gradient.py**\n4. AdaGrad : Adaptive Gradient Algorithm [[7]](http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf) : **adagrad.py**\n5. AdaDelta : Adaptive Learning Rate Method [[8]](https://arxiv.org/abs/1212.5701) : **adadelta.py**\n6. RMS Prop  [[9]](https://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf) : **rms_prop.py**   \n7. Adam : Adaptive Moment Estimation [[10]](https://arxiv.org/abs/1412.6980) [[11]](https://arxiv.org/pdf/1412.6980.pdf) : **adam.py**  \n8. AdaMax : Infinity Norm based Adaptive Moment Estimation [[12]](https://arxiv.org/pdf/1412.6980.pdf) : **adamax.py**  \n9. Nadam : Nesterov-accelarated Adaptive Moment Estimation [[13]](http://cs229.stanford.edu/proj2015/054_report.pdf) : **nadam.py**  \n10. AMSGrad [[14]](http://www.satyenkale.com/papers/amsgrad.pdf) : **amsgrad.py**   \n\n### Time and Error Analysis : \nMinimized dummy Cost Function f(x) = x^2 using default values as initial approximation = 1, error tolerance = 0.0001, learning rate = 0.1, gamma = 0.9, beta_1 = 0.9, beta_2 = 0.999  \n\n![alt text](https://github.com/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Algorithms/blob/master/error_chart.png)"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9991500281616118
      ],
      "excerpt": "Links to Original Paper published on arXiv.org>cs>arXiv:1609.04747  : [1], [2]    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8935828248868415
      ],
      "excerpt": "Adam : Adaptive Moment Estimation [10] [11] : adam.py   \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Sebastian-Ruder",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-23T19:34:07Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T15:49:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9714533483807948
      ],
      "excerpt": "Link to Blog with Paper Explanation : [3]   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[Python] [arXiv/cs] Paper \"An Overview of Gradient Descent Optimization Algorithms\" by Sebastian Ruder",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Algorithms/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Minimized dummy Cost Function f(x) = x^2 using default values as initial approximation = 1, error tolerance = 0.0001, learning rate = 0.1, gamma = 0.9, beta_1 = 0.9, beta_2 = 0.999  \n\n![alt text](https://github.com/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Algorithms/blob/master/error_chart.png)\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Wed, 29 Dec 2021 10:31:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Sebastian-Ruder/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Sebastian-Ruder",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "Momentum [5] : momentum.py   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "RMS Prop  [9] : rms_prop.py    \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Sebastian-Ruder/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Harsh Raj\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Paper-Implementation-Overview-Gradient-Descent-Optimization-Algorithms",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Paper-Implementation-Overview-Gradient-Descent-Optimization-Sebastian-Ruder",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "harshraj11584",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/harshraj11584/Paper-Implementation-Overview-Gradient-Descent-Optimization-Sebastian-Ruder/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Wed, 29 Dec 2021 10:31:11 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "adadelta",
      "adagrad",
      "adam-optimizer",
      "adam",
      "gradient-descent",
      "gradient-boosting",
      "gradient-descent-algorithm",
      "optimization-algorithms",
      "optimization-methods",
      "adamax",
      "amsgrad",
      "batch-gradient-descent",
      "stochastic-gradient-descent",
      "stochastic-optimization",
      "stochastic-optimizers",
      "momentum",
      "nadam",
      "nesterov-accelerated-sgd",
      "nesterov-momentum",
      "rmsprop"
    ],
    "technique": "GitHub API"
  }
}