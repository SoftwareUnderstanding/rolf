{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1603.06937\n\n## Datasets\nThe dataset used for this code comes from kaggle's \"Face Images with Marked Landmark Points\" dataset which can be found here:\nhttps://www.kaggle.com/drgilermo/face-images-with-marked-landmark-points\nThe dataset consists of images of faces with a corresponding csv file which contains the coordinates for the landmarks on each image. Only the left and right eye centers are used in this demonstration.\n\n## Algorithm description\n\n### Heat Map\nRather than reducing the resolution of an image through convolution and pooling operations and then feeding the results into a fully connected network, this method instead expands the resolution back to the original by the use of convolution transpose operations. As a result, the network will output an image with the same resolution as the original input image. \nIn order to make the labels the same shape as the network output tensor, a heatmap is generated for each image.  The heatmap is the same resolution as the original image, however, it has an extra axis for the left and right eyes. The shape of the heatmap is [batchSize,96,96,2].\n\nThe heat map is generated by a preprocessing function that will take the distance between a given pixel and a given landmark point.  The euclidian distance is then fed through a decaying exponential acitviation function.  As a result, pixels closest to the landmark will contain higher values in the heatmap and pixels furtherst from the landmark will contain values approaching zero.\n\n### Hour Glass\nThe network contains to halves - a \"downsample\" section and an \"upsample\" section.  At each layer of the downsample section, the resolution of the image is decreased by half as the number of convolutional filters is increased.  Lowering the resolution in this way makes the network more aware of features that are further away from each other.  At the same time, the heatmap's resolution is decreased so that a version of the heatmap at the same resolution as any given downsample layer is available. \n\nThe upsample section brings doubles the resolution at each layer while decreasing the number of filters. This gives the network more awareness of features that are next to each other. In each upsample layer, the sum of the previous layer and the corresponding downsampled layer is added together before the convolution is performed."
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Epsilon456/Face_LandMark_Recognition",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-16T22:43:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-21T02:58:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9965349586703437
      ],
      "excerpt": "This algorithm analyzes images of faces to identify landmark points corresponding to the center of each eye. The algorithm uses an an hour-glass structure based off the \"Stacked Hourglass Networks for Human Pose Estimation\" paper. The main advantage of this structure is that it allows the convolutional network to be aware of both local features and non-local features across the image.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9628269075789442,
        0.9223456582973814,
        0.966932415097046
      ],
      "excerpt": "The dataset consists of images of faces with a corresponding csv file which contains the coordinates for the landmarks on each image. Only the left and right eye centers are used in this demonstration. \nRather than reducing the resolution of an image through convolution and pooling operations and then feeding the results into a fully connected network, this method instead expands the resolution back to the original by the use of convolution transpose operations. As a result, the network will output an image with the same resolution as the original input image.  \nIn order to make the labels the same shape as the network output tensor, a heatmap is generated for each image.  The heatmap is the same resolution as the original image, however, it has an extra axis for the left and right eyes. The shape of the heatmap is [batchSize,96,96,2]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Uses an \"hourglass\" convolutional neural network structure to identify the placement of eyes in images of faces.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Epsilon456/Face_LandMark_Recognition/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 09:53:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Epsilon456/Face_LandMark_Recognition/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Epsilon456/Face_LandMark_Recognition",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Epsilon456/Face_LandMark_Recognition/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face_LandMark_Recognition",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face_LandMark_Recognition",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Epsilon456",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Epsilon456/Face_LandMark_Recognition/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 09:53:30 GMT"
    },
    "technique": "GitHub API"
  }
}