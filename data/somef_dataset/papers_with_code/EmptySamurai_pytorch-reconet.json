{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1807.01197",
      "https://arxiv.org/abs/1912.04958",
      "https://arxiv.org/abs/1911.09737"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8302556419090275
      ],
      "excerpt": "https://drive.google.com/open?id=1MUPb7qf3QWEixZ6daGGI4lVFGmQl0qna  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/EmptySamurai/pytorch-reconet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-12T17:44:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-23T08:13:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9895018757766195
      ],
      "excerpt": "This is PyTorch implementation of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.96325920587733
      ],
      "excerpt": "This model allows to perform style transfer on videos in real-time and preserve temporal consistency between frames. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9268536252290762
      ],
      "excerpt": "This may take about a day and you need to have >1TB of free space on disk. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177586502771113
      ],
      "excerpt": "There are two options for inference: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150461278995561
      ],
      "excerpt": "Training model as described in paper leads to bubble artifacts \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8579383832466683,
        0.9129998969672897
      ],
      "excerpt": "They discovered that artifacts appear because of Instance Normalization. \nThey also proposed a novel normalization method, but unfortunately it doesn't work good with ReCoNet architecture \u2014 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8660078421103123,
        0.879258606595528
      ],
      "excerpt": "Instead of that in this implementation a Filter Response Normalization with Thresholded Linear Unit can be used. \nIt acts similar to Instance Normalization but preserves mean values in some sense. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9172344583624477
      ],
      "excerpt": "Every script and class supports frn argument that enables Filter Response Normalization instead of Instance Normalization and also replaces ReLU by TLU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of \"ReCoNet: Real-time Coherent Video Style Transfer Network\" paper",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/EmptySamurai/pytorch-reconet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Wed, 22 Dec 2021 05:45:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/EmptySamurai/pytorch-reconet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "EmptySamurai/pytorch-reconet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9284560194455781,
        0.9996546801736715
      ],
      "excerpt": "You will also need aria2 installed \nInstall python dependencies via pip install -r requirements.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9717630855432912
      ],
      "excerpt": "Note that you will need ffmpeg to be installed on your machine to run this script \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8576591754281959,
        0.9483917733265983
      ],
      "excerpt": "To train a model: \nRun python ./data/download_data.py to download data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9474461754159018
      ],
      "excerpt": "Run python train.py style_image.jpg to train model with style from some style_image.jpg.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8135889024783156,
        0.8176202319110498
      ],
      "excerpt": "There is a style_video.py file to style videos. Run it as \npython style_video.py input.mp4 output.mp4 model.pth. It also supports some additional arguments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8046422911200218
      ],
      "excerpt": "Pre-trained on ./styles/mosaic_2.jpg model can be downloaded from here: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8034817404653097
      ],
      "excerpt": "Pre-trained on ./styles/mosaic_2.jpg model with FRN can be downloaded from here:   \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/EmptySamurai/pytorch-reconet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Nikita Gryaznov\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-reconet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-reconet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "EmptySamurai",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/EmptySamurai/pytorch-reconet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 24,
      "date": "Wed, 22 Dec 2021 05:45:14 GMT"
    },
    "technique": "GitHub API"
  }
}