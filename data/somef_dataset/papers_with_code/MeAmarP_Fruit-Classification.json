{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.04861>\n+ <https://keras.io/applications/#resnet>\n+ Deep Learning with Python, Fran\u00e7ois Chollet"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": " https://arxiv.org/abs/1704.04861 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MeAmarP/Fruit-Classification",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-17T14:12:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-20T12:26:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8029804145272148
      ],
      "excerpt": "Method/Code Snippet: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8301474340420437,
        0.9085211730010088,
        0.9682010810694629
      ],
      "excerpt": "Next I use these features and ran through a new classifier, which is trained from scratch. \nAs stated in my Favourite Book: Deep Learning with Python.  \nWe took convolutional base(conv_base) of MobileNetV2, ran new data through it and trained a new classifier on top of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9542847153135889,
        0.8268147603986533
      ],
      "excerpt": "whole network on input data with data augmentation.  \nWell!! this is computationally bit expensive, but meh!! I have enough processing power. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029804145272148
      ],
      "excerpt": "Method/Code Snippet: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.938681606976403
      ],
      "excerpt": ":Get list of All classes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "mobilenetv2_1.00_224 (Model) (None, 1280)              2257984    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875
      ],
      "excerpt": "dense_2 (Dense)              (None, 512)               655872     \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875
      ],
      "excerpt": "dense_3 (Dense)              (None, 95)                48735 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029804145272148
      ],
      "excerpt": "Method/Code Snippet: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029804145272148
      ],
      "excerpt": "Method/Code Snippet: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9494042647384336,
        0.9673110299889538
      ],
      "excerpt": "It is really hard for model to infer the type of fruit, this may be due to closer properties(shape,color etc) of the object. \nI mean, it is easier for model to recognise Banana compared to other fruit class. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8089827390842202
      ],
      "excerpt": "[ ] Add method to Evaluate prediction accuracy and loss on whole test dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Fruit Classification using TensorFlow-Keras on Fruits 360 dataset",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MeAmarP/Fruit-Classification/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Wed, 22 Dec 2021 04:29:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MeAmarP/Fruit-Classification/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MeAmarP/Fruit-Classification",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.84058345752665
      ],
      "excerpt": ":build path to train dir \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283817423524806
      ],
      "excerpt": "path_trained_model = os.path.abspath(trainedModel_filename) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8078544872415913
      ],
      "excerpt": ":build path to train dir \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8093431986083137
      ],
      "excerpt": ":build path to test dir \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863,
        0.8762323022666466,
        0.877203371568926,
        0.9071148011462644,
        0.9080424972907454
      ],
      "excerpt": "__Console Output:__console \nTotal Number of Classes in train DataSet:  95 \nTotal Number of Classes in test DataSet:  95 \nTotal Number of train samples:  48905 \nTotal Number of test samples: 16421 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863,
        0.8434276721040859
      ],
      "excerpt": "__Console Output:__console \nCLASS NAME          NUMBER OF IMAGES \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8092968183744895
      ],
      "excerpt": "the output. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172342705654815
      ],
      "excerpt": "num_of_classes = len(AllClassNames) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863,
        0.906614234580968
      ],
      "excerpt": "__Console Output:__console \nLayer (type)                 Output Shape              Param #:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934745846565956
      ],
      "excerpt": "Total params: 2,962,591 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9100254650921473
      ],
      "excerpt": ":Start training model on train dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9049488970270804
      ],
      "excerpt": ":Plot the training results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8833544044304692
      ],
      "excerpt": "ImagePath = 'test/Banana Red/99_100.jpg' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "__Console Output:__console \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8514333066431046
      ],
      "excerpt": "[ ] Test with ResNet, InveptionV3,Xception models \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MeAmarP/Fruit-Classification/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 AMAR POTDAR\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Fruit-Classification: Work-In-Progress\nFruit Classification/Identififcation using TensorFlow-Keras on Fruits 360 dataset\n\n## Understand Dataset:\n![Understanding Dataset][EDA_Img]\n\n[EDA_Img]: https://github.com/MeAmarP/Fruit-Classification/blob/master/results/EDA_images_v22.png\n\n### Step 1 - EDA:\n\n__Method/Code Snippet:__\n```python\n#get path to root dir\nbase_dir_path = os.getcwd()\n\n#build path to train dir\ntrain_dir_path = os.path.join(base_dir_path,'train')\n\n#build path to test dir\ntest_dir_path = os.path.join(base_dir_path,'test')\n\nreadData(base_dir_path)\n```\n__Console Output:__\n```console\nTotal Number of Classes in train DataSet:  95\nTotal Number of Classes in test DataSet:  95\nTotal Number of train samples:  48905\nTotal Number of test samples: 16421\n```\n__Method/Code Snippet:__\n```python\nunderstandData(base_dir_path,'train')\n```\n__Console Output:__\n```console\nCLASS NAME          NUMBER OF IMAGES\nApple Braeburn      492\nApple Golden 1      492\nApple Golden 2      492\nApple Golden 3      481\nApple Granny Smith  492\n.\n.\n.\n```\n\n## Build Model and Train Dataset:\n\n### Approch:\n+ I used MobileNetV2 architecutre, pre-trained on ImageNet dataset for feature extraction.\n+ Next I use these features and ran through a new classifier, which is trained from scratch.\n+ As stated in my Favourite Book: __Deep Learning with Python__. \nWe took convolutional base(conv_base) of MobileNetV2, ran new data through it and trained a new classifier on top of\nthe output.\n+ So basically, I extended the conv_base by adding Dense layer followed by DropOut layer, and running \nwhole network on input data with data augmentation. \n+ Well!! this is computationally bit expensive, but meh!! I have enough processing power.\n+ Important Thing, I freeze the convolutional base so as to avoid updating their weights.\n\n### Step 2 - Compiling Model:\n__Method/Code Snippet:__\n```python\n#Get list of All classes\nAllClassNames = getAllClassNames(train_dir_path)\nnum_of_classes = len(AllClassNames)\n\n#build dict of clas_id and classname\nDictOfClasses = {i : AllClassNames[i] for i in range(0, len(AllClassNames))}\n\n#Compile classification model\nclassifyModel=compileClassifyModel(num_of_classes)\n```\n__Console Output:__\n```console\nLayer (type)                 Output Shape              Param #",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Fruit-Classification",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MeAmarP",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MeAmarP/Fruit-Classification/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 04:29:44 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "image-classification",
      "keras-tensorflow",
      "fruit-recognition"
    ],
    "technique": "GitHub API"
  }
}