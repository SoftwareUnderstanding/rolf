{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "These libraries are used in the python version:\n\n*   [**python-chess**](https://python-chess.readthedocs.io/en/latest/index.html): A pure Python chess library\n*   [**MXNet**](https://mxnet.incubator.apache.org/): A flexible and efficient library for deep learning\n*   [**numpy**](http://www.numpy.org/): The fundamental package for scientific computing with Python\n*   [**Zarr**](https://zarr.readthedocs.io/en/stable/): An implementation of chunked, compressed, N-dimensional arrays\n\nThe following libraries are used to run the C++ version of _CrazyAra_:\n\n*   [**Multi Variant Stockfish**](https://github.com/ddugovic/Stockfish): Stockfish fork specialized to play chess and some chess variants\n    *   Used for move generation, board representation and syzgy parsing as a replacement for [python-chess](https://github.com/niklasf/python-chess).\n*   [**MXNet C++ Package**](https://github.com/apache/incubator-mxnet/tree/master/cpp-package): A flexible and efficient library for deep learning\n\t*   Used as the deep learning backend for loading and inference of the trained neural network\n*   [**TensorRT C++ Package**](https://github.com/apache/incubator-mxnet/tree/master/cpp-package): A C++ library for high performance inference on NVIDIA GPUs and deep learning accelerators\n\t*   Used as the deep learning backend for loading and inference of the trained neural network\n*   [**Blaze**](https://bitbucket.org/blaze-lib/blaze/src/master/): An open-source, high-performance C++ math library for dense and sparse arithmetic\n    *   Used for arithmetic, numerical vector operation within the MCTS search as a replacement for [NumPy](https://numpy.org/)\n*   [**Catch2**](https://github.com/catchorg/Catch2): A multi-paradigm test framework for C++\n\t*   Used as the testing framework as a replacement for [Python's unittest framework](https://docs.python.org/3/library/unittest.html)\n\nWhen _CrazyAra_ is also built with reinforcement learning functionality the following libraries are used:\n*   [**z5**](https://github.com/constantinpape/z5): Lighweight C++ and Python interface for datasets in zarr and N5 format \n\t*   Used for exporting generated self-play data in C++ in the **Zarr** data format\n*   [**xtensor**](https://github.com/xtensor-stack/xtensor): C++ tensors with broadcasting and lazy computing\n\t*   Used as the internal matrix format within **z5**\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2012.11045",
      "https://arxiv.org/abs/1908.06660",
      "https://arxiv.org/abs/1712.01815",
      "https://arxiv.org/abs/1908.06660"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "\u265e CrazyAra@lichess.org \n\u265e CrazyAraFish@lichess.org \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "lichess.org database. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266,
        0.8336157049739458
      ],
      "excerpt": "10. IM opperwezen \nPlease have a look at Supervised training or our paper for more detailed information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9965930754873492
      ],
      "excerpt": "           url={https://ojs.aaai.org/index.php/ICAPS/article/view/15952}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999102389225846,
        0.998240993323248,
        0.9664456561658856,
        0.8109194328925066,
        0.8944178096468923
      ],
      "excerpt": "           journal={Proceedings of the International Conference on Automated Planning and Scheduling}, \n           author={Czech, Johannes and Korus, Patrick and Kersting, Kristian}, \n           year={2021}, \n           month={May}, \n           pages={103-111} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998316857773059
      ],
      "excerpt": "     AUTHOR={Czech, Johannes and Willig, Moritz and Beyer, Alena and Kersting, Kristian and F\u00fcrnkranz, Johannes},    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9939126807273811
      ],
      "excerpt": "     JOURNAL={Frontiers in Artificial Intelligence},       \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.842790493796475,
        0.9664456561658856,
        0.9994758156667563,
        0.9950371986714769
      ],
      "excerpt": "     PAGES={24}, \n     YEAR={2020}, \n     URL={https://www.frontiersin.org/article/10.3389/frai.2020.00024},        \n     DOI={10.3389/frai.2020.00024},       \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9367528777788411,
        0.9927662050383874,
        0.9664456561658856
      ],
      "excerpt": "           title = { Assessing Popular Chess Variants Using Deep Reinforcement Learning }, \n           author = { Maximilian Alexander Gehrke }, \n               year = { 2021 }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9449187648369126,
        0.8944178096468923
      ],
      "excerpt": "           crossref = { https://github.com/QueensGambit/CrazyAra }, \n           school = { TU Darmstadt }, \n           pages = { 94 }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9769871973482154,
        0.9951658135209925,
        0.9960965048981569
      ],
      "excerpt": "           title = { Deep Reinforcement Learning for Crazyhouse }, \n           author = { Johannes Czech }, \n               year = { 2019 }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9449187648369126,
        0.8944178096468923
      ],
      "excerpt": "           crossref = { https://github.com/QueensGambit/CrazyAra }, \n           school = { TU Darmstadt }, \n           pages = { 54 }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9818894004866677,
        0.9664456561658856
      ],
      "excerpt": "           author = { Maximilian Langer }, \n               year = { 2021 }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9449187648369126
      ],
      "excerpt": "           crossref = { https://github.com/QueensGambit/CrazyAra }, \n           school = { TU Darmstadt }, \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/QueensGambit/CrazyAra",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-09T16:07:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T11:39:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[_CrazyAra_](https://crazyara.org/) is an open-source neural network chess variant engine, initially developed in pure python by [Johannes Czech](https://github.com/QueensGambit), [Moritz Willig](https://github.com/MoritzWillig) and Alena Beyer in 2018.\nIt started as a semester project at the [TU Darmstadt](https://www.tu-darmstadt.de/index.en.jsp) with the goal to train a neural network to play the chess variant [crazyhouse](https://en.wikipedia.org/wiki/Crazyhouse) via supervised learning on human data.\nThe project was part of the course [_\"Deep Learning: Architectures & Methods\"_](https://piazza.com/tu-darmstadt.de/summer2019/20001034iv/home) held by [Kristian Kersting](https://ml-research.github.io/people/kkersting/index.html), [Johannes F\u00fcrnkranz](http://www.ke.tu-darmstadt.de/staff/juffi) et al. in summer 2018.\n\nThe development was continued and the engine ported to C++ by [Johannes Czech](https://github.com/QueensGambit). In the course of a master thesis supervised by [Karl Stelzner](https://ml-research.github.io/people/kstelzner/) and [Kristian Kersting](https://ml-research.github.io/people/kkersting/index.html), the engine learned crazyhouse in a reinforcement learning setting and was trained on other chess variants including chess960, King of the Hill and Three-Check.\n\nThe project is mainly inspired by the techniques described in the [Alpha-(Go)-Zero papers](https://arxiv.org/abs/1712.01815) by [David Silver](https://arxiv.org/search/cs?searchtype=author&query=Silver%2C+D), [Thomas Hubert](https://arxiv.org/search/cs?searchtype=author&query=Hubert%2C+T), [Julian Schrittwieser](https://arxiv.org/search/cs?searchtype=author&query=Schrittwieser%2C+J), [Ioannis Antonoglou](https://arxiv.org/search/cs?searchtype=author&query=Antonoglou%2C+I), [Matthew Lai](https://arxiv.org/search/cs?searchtype=author&query=Lai%2C+M), [Arthur Guez](https://arxiv.org/search/cs?searchtype=author&query=Guez%2C+A), [Marc Lanctot](https://arxiv.org/search/cs?searchtype=author&query=Lanctot%2C+M), [Laurent Sifre](https://arxiv.org/search/cs?searchtype=author&query=Sifre%2C+L), [Dharshan Kumaran](https://arxiv.org/search/cs?searchtype=author&query=Kumaran%2C+D), [Thore Graepel](https://arxiv.org/search/cs?searchtype=author&query=Graepel%2C+T), [Timothy Lillicrap](https://arxiv.org/search/cs?searchtype=author&query=Lillicrap%2C+T), [Karen Simonyan](https://arxiv.org/search/cs?searchtype=author&query=Simonyan%2C+K), [Demis Hassabis](https://arxiv.org/search/cs?searchtype=author&query=Hassabis%2C+D).\n\nThe training scripts, preprocessing and neural network definition source files are written in python and located at [DeepCrazyhouse/src](https://github.com/QueensGambit/CrazyAra/tree/master/DeepCrazyhouse/src).\nThere are two version of the search engine available:\nThe initial version is written in python and located at [DeepCrazyhouse/src/domain/agent](https://github.com/QueensGambit/CrazyAra/tree/master/DeepCrazyhouse/src/domain/agent).\nThe newer version is written in C++ and located at [engine/src](https://github.com/QueensGambit/CrazyAra/tree/master/engine/src).\n\n_CrazyAra_ is an UCI chess engine and requires a GUI (e.g. [Cute Chess](https://github.com/cutechess/cutechess), [XBoard](https://www.gnu.org/software/xboard/), [WinBoard](http://hgm.nubati.net/)) for convinient usage.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9683632493530783
      ],
      "excerpt": ":earth_africa: Project website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9170041824430557,
        0.8313759602153762
      ],
      "excerpt": "We provide binary releases for the following plattforms: \nOperating System | Backend                                                                                                                                                               | Compatible with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9067672672185859,
        0.9063466607093876
      ],
      "excerpt": "More information about the different models can be found in the wiki. \nBinaries and models are available for the following chess variants: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9975705834271478
      ],
      "excerpt": "CrazyAra's knowledge in the game of crazhyouse for supervised neural networks is based on human played games of the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8354691111715343
      ],
      "excerpt": "Please have a look at Supervised training or our paper for more detailed information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8202862980004608
      ],
      "excerpt": "J. Czech, P. Korus, and K. Kersting: Improving AlphaZero Using Monte-Carlo Graph Search, link \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9921278170579417
      ],
      "excerpt": "J. Czech, M. Willig, A. Beyer, K. Kersting and J. F\u00fcrnkranz: Learning to play the Chess Variant Crazyhouse above World Champion Level with Deep Neural Networks and Human Data, link \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9201341977572514
      ],
      "excerpt": "     TITLE={Learning to Play the Chess Variant Crazyhouse Above World Champion Level With Deep Neural Networks and Human Data},       \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.89276507258761
      ],
      "excerpt": "M. Gehrke: Assessing Popular Chess Variants Using Deep Reinforcement Learning, pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153101767665874
      ],
      "excerpt": "J. Czech: Deep Reinforcement Learning for Crazyhouse, pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8118796081793422
      ],
      "excerpt": "M. Langer: Evaluation of Monte-Carlo Tree Search for Xiangqi, pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Deep Learning UCI-Chess Variant Engine written in C++ & Python :parrot:",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For more details about the initial python version visit the wiki pages:\n* [Introduction](https://github.com/QueensGambit/CrazyAra/wiki)\n* [Installation guide for python MCTS](https://github.com/QueensGambit/CrazyAra/wiki/Installation-Guide)\n* [Supervised-training](https://github.com/QueensGambit/CrazyAra/wiki/Supervised-training)\n* [Model architecture](https://github.com/QueensGambit/CrazyAra/wiki/Model-architecture)\n* [Input representation](https://github.com/QueensGambit/CrazyAra/wiki/Input-representation)\n* [Output representation](https://github.com/QueensGambit/CrazyAra/wiki/Output-representation)\n* [Network visualization](https://github.com/QueensGambit/CrazyAra/wiki/Network-visualization)\n* [Engine settings](https://github.com/QueensGambit/CrazyAra/wiki/Engine-settings)\n* [Programmer's guide](https://github.com/QueensGambit/CrazyAra/wiki/Programmer's-guide)\n* [FAQ](https://github.com/QueensGambit/CrazyAra/wiki/FAQ)\n* [Stockfish-10: Crazyhouse-Self-Play](https://github.com/QueensGambit/CrazyAra/wiki/Stockfish-10:-Crazyhouse-Self-Play)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zarr.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/QueensGambit/CrazyAra/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 29,
      "date": "Wed, 29 Dec 2021 21:49:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/QueensGambit/CrazyAra/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "QueensGambit/CrazyAra",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/engine/src/rl/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/engine/src/rl/inspect_rl_data.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/get_plane_statistics.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/create_rec_dataset.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/convert_pgn_to_planes.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/mat_to_board_demo.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/convert_csv_to_planes.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/analyze_train_data.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/training/train_xiangqi.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/training/train_cnn.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/tests/inspection.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/samples/MCTS_eval_demo.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/samples/game_variant_stats.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/samples/sample_prediction.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/samples/pgn_to_planes.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/tools/inference_time/performance_regression.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/tools/presentation_graphs/presentation_graphs.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/tools/presentation_graphs/CrazyAra01_vs_CrazyAra02/presentation_graphs.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/tools/visualization/visualize_CNN_Resnet_Alpha_Zero.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/etc/sf_self_play/lichess_opening_book_generator.ipynb",
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/etc/sf_self_play/merge_sf_dataset.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/QueensGambit/CrazyAra/master/DeepCrazyhouse/src/preprocessing/download_pgns/download_png_files.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.933375179910644,
        0.8130318076144074,
        0.9501085265107492,
        0.8593915570963722
      ],
      "excerpt": "Linux            | CUDA 11.3, cuDNN 8.2.1, TensorRT-8.0.1 | NVIDIA GPUs \nLinux            | MXNet 1.8.0, Intel oneAPI MKL 2021.2.0                                               | Intel CPUs \nWindows          | CUDA 11.3, cuDNN 8.2.1, TensorRT-8.0.1                              | NVIDIA GPUs \nWindows          | MXNet 1.8.0, Intel oneAPI MKL 2021.2.0                                                 | Intel CPUs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8567745582446537
      ],
      "excerpt": "Binaries and models are available for the following chess variants: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "           crossref = { https://github.com/QueensGambit/CrazyAra }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "           crossref = { https://github.com/QueensGambit/CrazyAra }, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "           crossref = { https://github.com/QueensGambit/CrazyAra }, \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8292508083977965
      ],
      "excerpt": "<img align=\"right\" src=\"etc/media/TU_logo.png\" width=\"128\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/QueensGambit/CrazyAra/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 1998-2019 Toni Ronkko\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Contents",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CrazyAra",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "QueensGambit",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/QueensGambit/CrazyAra/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This version has been submitted to the [TCEC FRC 4](https://wiki.chessdom.org/TCEC_FRC_4) event.\r\nThe option `UCI_Chess960` has been added in _ClassicAra 0.9.8_ by default.\r\n\r\nThe [**engine.json**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.8/engine.json) configuration file and [**update.sh**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.8/update.sh) shell script can be used to replicate the testing environment on a multi-GPU Linux operating system.\r\n\r\nDue to some difficulties in converting a newly trained network to ONNX, the same neural network model is used as in classical chess.\r\n",
        "dateCreated": "2021-12-19T15:47:14Z",
        "datePublished": "2021-12-19T17:00:49Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.8",
        "name": "ClassicAra 0.9.8",
        "tag_name": "0.9.8",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.8",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/55627102",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.8"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This version has been submitted to the [TCEC Swiss 2 event](https://wiki.chessdom.org/TCEC_Swiss_2).\r\n_ClassicAra 0.9.7_ has a higher GPU and CPU utilization thanks to a higher batch size and more threads (https://github.com/QueensGambit/CrazyAra/pull/160).\r\n\r\nThe [**engine.json**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.7.post0/engine.json) configuration file and [**update.sh**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.7.post0/update.sh) shell script can be used to replicate the testing environment on a multi-GPU Linux operating system.\r\n\r\n### Regression test\r\n* TC: 7s + 0.1s\r\n* Opening suite: Unbalanced_Human_Openings_V3/UHO_V3_+150_+159/UHO_V3_8mvs_big_+140_+169.epd\r\n\r\n```python\r\nScore of ClassicAra 0.9.7 (Threads 2, ChildThreads 4, BSize 64) vs ClassicAra 0.9.6 (Threads 2, BSize 16):\r\n 64 - 26 - 72 [0.617]\r\nElo difference: 83.0 +/- 40.2, LOS: 100.0 %, DrawRatio: 44.4 %\r\n\r\n162 of 1000 games finished.\r\n```\r\n\r\n* **0.9.7.post0**:  Deactivated `removed get_avg_depth()` implementation to avoid potential crash\r\n\r\n### Known issues\r\n\r\n*  TensorRT Memory Free Error (#161)",
        "dateCreated": "2021-11-01T23:01:02Z",
        "datePublished": "2021-11-01T23:15:55Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.7.post0",
        "name": "ClassicAra 0.9.7.post0",
        "tag_name": "0.9.7.post0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.7.post0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/52481394",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.7.post0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This version has been submitted to the **[TCEC Cup 9](https://wiki.chessdom.org/TCEC_Cup_9)** which starts on **17 October 2021, 17.00 UTC**.\r\n_ClassicAra 0.9.6_ uses the [_wdlp-rise3.3-input3.0_](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.5/ClassicAra-sl-model-wdlp-rise3.3-input3.0.zip) model which was trained on the Kingbase2019lite data set as for release 0.9.5.\r\n\r\nThe **[engine.json](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.6/engine.json)** configuration file and **[update.sh](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.6/update.sh)** shell script can be used to replicate the testing environment on a multi-GPU Linux operating system.\r\n\r\n### Notes\r\n* The changes mainly include support for the latest TensorRT version, TensorRT-8.2.0.6. In terms of strength, it is very similar to [release 0.9.5.post0](https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.5.post0).",
        "dateCreated": "2021-10-15T11:07:45Z",
        "datePublished": "2021-10-17T17:22:32Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.6",
        "name": "ClassicAra 0.9.6",
        "tag_name": "0.9.6",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.6",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/51498650",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.6"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This release provides binaries for _CrazyAra_, _ClassicAra_ and _MultiAra_ with the new [OpenVino](https://github.com/QueensGambit/CrazyAra/pull/153) CPU backend.\r\n\r\nThe OpenVino backend features a new UCI-option `Threads_NN_Inference` which defines how many threads to use for neural network inference. This no longer requires setting up an environment variable called `OMP_NUM_THREADS` (https://github.com/QueensGambit/CrazyAra/issues/35).\r\n\r\n## Current limitation for OpenVino backend\r\n\r\n* No Int8 inference support enabled yet.\r\n* Only tested on regular CPU and not with Intel GPUs or the [Intel Neural Compute Stick](https://software.intel.com/content/www/us/en/develop/hardware/neural-compute-stick.html).\r\n\r\n\r\n## Installation instructions\r\n\r\nThe binary packages include the required inference libraries for each platform.\r\nThe latest **_ClassicAra_ model** is **included** within each release package.\r\nHowever, the models for the _CrazyAra_ and _MultiAra_ should be downloaded separately and unzipped (see [release 0.9.5](https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.5)).\r\n* `CrazyAra-rl-model-os-96.zip`\r\n* `MultiAra-rl-models.zip`  (improved MultiAra models using reinforcement learning (rl) )\r\n* `MultiAra-sl-models.zip` (initial MultiAra models using supervised learning)\r\n\r\nNext, move the model files into the `model/<engine-name>/<variant>` folder.\r\n\r\n\r\n## Regression test\r\n\r\n### ClassicAra\r\n\r\nThe new OpenVino backend is about 100 - 150 nps faster on CPU and much easier to install than the MXNetMKL backend.\r\n\r\n```python\r\n[TimeControl \"7+0.1\"]\r\nScore of ClassicAra - 0.9.5.post0 OpenVino vs ClassicAra 0.9.5 - MXNetMKL: 82 - 17 - 55 [0.711]\r\nElo difference: 156.4 +/- 45.9, LOS: 100.0 %, DrawRatio: 35.7 %\r\n\r\n154 of 1000 games finished.\r\n```\r\n\r\n\r\n## Inference libraries\r\nThe following inference libraries are used in each package:\r\n\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5.post0_Linux_OpenVino.zip`\r\n   *   OpenVino 2021 4 LTS\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5.post0_Mac_OpenVino.zip`\r\n   *   OpenVino 2021 4 LTS\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5.post0_Win_OpenVino.zip`\r\n   *   OpenVino 2021 4 LTS   ",
        "dateCreated": "2021-09-04T14:47:48Z",
        "datePublished": "2021-09-04T15:26:37Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.5.post0",
        "name": "CrazyAra, ClassicAra, MultiAra 0.9.5.post0",
        "tag_name": "0.9.5.post0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.5.post0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/49012084",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.5.post0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "## MultiAra\r\n\r\nThis is the first release which features MultiAra, a version of Ara which supports all chess variants available on lichess.org.\r\n* antichess\r\n* atomic\r\n* chess960\r\n* crazyhouse\r\n* king-of-the-hill\r\n* horde\r\n* racing kings\r\n* three-check\r\n\r\nThe neural network models have been initialised by lichess.org game data from August 2013 until July 2020.\r\nAll variant (except chess960) have been improved using reinforcement learning.\r\nDetails can be found in the master thesis by Maximilian Alexander Gehrke which among others covers an ablation study between training from zero knowledge and supervised initialisation, as well as a preliminary strength comparison against Fairy-Stockfish:\r\n* Assessing Popular Chess Variants Using Deep Reinforcement Learning, [pdf](https://ml-research.github.io/papers/gehrke2021assessing.pdf)\r\n\r\n## ClassicAra\r\n\r\nThe model for ClassicAra uses a new input representation (#134) and a new WDLP value output head (#123).\r\nThe old model and input representation for chess is still supported as the input representation version is now inferred by the model name.\r\n\r\n\r\n## Installation instructions\r\n\r\nThe binary packages include the required inference libraries for each platform.\r\nHowever, the models should be downloaded separately and unzipped.\r\n* `CrazyAra-rl-model-os-96.zip`\r\n* `ClassicAra-sl-model-wdlp-rise3.3-input3.0.zip`\r\n* `MultiAra-rl-models.zip`  (improved MultiAra models using reinforcement learning (rl) )\r\n* `MultiAra-sl-models.zip` (initial MultiAra models using supervised learning)\r\n\r\nNext, move the model files into the `model/<engine-name>/<variant>` folder.\r\n\r\nFor the TensorRT releases, it is recommended to generate the trt-files for your GPU once from the command-line:\r\n* https://github.com/QueensGambit/CrazyAra/wiki/Command-Line-Usage\r\n\r\n\r\n## Bug Fixes\r\nIn 0.9.5, a critical time management bug has been fixed (#136) which resulted in occasional time losses in time controls with increments.\r\nPreviously it was assumed that the increment were applied to the time buffer before and not after the move.\r\nGreat thanks to AdminX and Werner Sch\u00fcle for reporting it:\r\n* http://talkchess.com/forum3/viewtopic.php?f=2&t=77020&p=895388&hilit=classicara#p895388\r\n\r\n## Summary\r\n\r\n* FEN, PGN and arena adjustments for Chess960 (#129)\r\n* RL Logging: Found tablebases and Configs (#130)\r\n* Revert \"RL Logging: Found tablebases and Configs\" (#131)\r\n* RL Logging: Found tablebases and Configs 2.0 (#132)\r\n* Speed Optimization: get_state_planes() (#133)\r\n* Chess input representation v3.0 (#134)\r\n* Time management refactoring & bugfix (#136)\r\n* Mirror policy (#137)\r\n* RL: Save intermediate model files and delete them after training (#138)\r\n* GitHub Actions / CI (#139)\r\n* Fix channel ordering for flip_board() == False (#140)\r\n* Version Backward Compability (#141)\r\n* 3rdParty Blaze Dependency (#142)\r\n* CI for Variants (#143)\r\n* Variant input changes (#145)\r\n* Add a Open_Spiel Stratego implementation as well adapting MCTSAgent by defining different types of it (#146)\r\n* TensorRT 8.0 Compability (#147)\r\n* Input Representation Version Parsing (#148)\r\n* Single Move Evaluation (#149)\r\n* Include binary name in Model_Directory and miscellaneous (#150)\r\n\r\n\r\n## Inference libraries\r\nThe following inference libraries are used in each package:\r\n\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5_Linux_TensorRT.zip`\r\n   *   CUDA 11.3\r\n   *   cuDNN 8.2.1\r\n   *   TensorRT-8.0.1\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5_Linux_MKL.zip`\r\n   *   MXNet 1.8.0\r\n   *   Intel oneAPI MKL 2021.2.0\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5_Win_TensorRT.zip`\r\n   *   CUDA 11.3\r\n   *   cuDNN 8.2.1\r\n   *   TensorRT-8.0.1\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5_Win_MKL.zip`\r\n   *   MXNet 1.8.0\r\n   *   Intel oneAPI MKL 2021.2.0\r\n\r\n## Known issues \u26a0\ufe0f \r\n* The first start-up time of the engine may take 1-15 minutes to generate the trt-engine files.\r\n* It is recommended to first start the engine from the command line and issue the `isready` command. More information can be found [here](https://github.com/QueensGambit/CrazyAra/wiki/Command-Line-Usage). All later loading times should be < 10s.\r\n* The process of generating trt-files is done twice, i.e. for batch.size 1 and batch-size 16.\r\n* The available batch sizes are limited to the provided onnx models. Current available batch-sizes are:\r\n   * 1\r\n   * 8\r\n   * 16\r\n   * 64\r\n* Using INT8 based inference is still not recommend both for GPU and CPU for chess. On [CEGT](http://www.cegt.net/40_40%20Rating%20List/40_40%20SingleVersion/rangliste.html)) it was reported, that _ClassicAra_ performed worse on Pascal Nvidia GPUs despite higher nodes per second.\r\n\r\n\r\n## Regression test\r\n\r\n### ClassicAra\r\n\r\n```python\r\ntc=0/1:0+0.25\r\n-openings file=\"UHO_V3_6mvs_+090_+099.pgn\"\r\nClassicAra-0.9.5-rise_3.3-input_3.0-wldp vs ClassicAra-0.9.4-rise_3.3-input_1.0:\r\n202 - 125 - 273 (WLD)\r\nElo difference: 44.83 +/-  20.54\r\n```\r\n\r\n### CrazyAra\r\n\r\n```python\r\ntc=0/1:0+0.25\r\n-openings file=\"crazyhouse_mix_cp_130.epd\"\r\nCrazyAra-0.9.5 vs CrazyAra-0.9.4\r\n119 - 112 - 369 (WLD)\r\nElo difference: 4.05 +/-  17.24\r\n```\r\n\r\n\r\n## Updates\r\n\r\n* fixed problem when loading new _ClassicAra_ model with MXNet API (https://github.com/QueensGambit/CrazyAra/commit/0f3d60f48fa914209664d74a9eba329c6fc4b54c).\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5.post0_Mac_MKL.zip`\r\n* `CrazyAra_ClassicAra_MultiAra_0.9.5.post0_Linux_MKL.zip`\r\n\r\n* 2021-11-01: Added bsizes 32, 64, 128 to **ClassicAra-sl-model-wdlp-rise3.3-input3.0.zip**",
        "dateCreated": "2021-08-22T17:26:25Z",
        "datePublished": "2021-08-26T11:41:22Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.5",
        "name": "CrazyAra, ClassicAra, MultiAra 0.9.5",
        "tag_name": "0.9.5",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.5",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/48493332",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.5"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This version was submitted to TCEC S21, League 2.\r\n\r\n* Shared pointer atomic operation (#124)\r\n    * Should fix crash as seen in  [TCEC S21, L3, game 37](https://tcec-chess.com/#div=l3&game=37&season=21).\r\n* Updated Timemanagement Constants (#126 )\r\n* Retrieve neural network indices in TensorrtAPI (#127)\r\n* WDLP value head (#123)\r\n* Chess input representation v2.8 (#125)\r\n   * However, _ClassicAra_ will still use the old network Rise 3.3 in TCEC S21, League 2.\r\n",
        "dateCreated": "2021-06-03T17:02:27Z",
        "datePublished": "2021-06-03T17:22:33Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.4",
        "name": "ClassicAra 0.9.4",
        "tag_name": "0.9.4",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.4",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/44059807",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.4"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "## Installation instruction\r\n\r\nThe binaries use the same libraries as in [release 0.9.0](https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.0).\r\nDownload the corresponding release from 0.9.0 and replace the binaries `CrazyAra` and `ClassicAra`. \r\nFor chess, it is recommended to delete all files in `model/chess` and to download the newer [Rise 3.3](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.0/risev3.3_kingbaselite2019.zip) model.\r\nThen move all from contents from Rise 3.3 into `model/chess` and in case of the TensorRT back-end to first generate the trt-files.\r\nThis can be done using the command-line and issuing `isready`.\r\n* https://github.com/QueensGambit/CrazyAra/wiki/Command-Line-Usage\r\n\r\n```python\r\nTC 3s + 0.1s\r\nScore of ClassicAra 0.9.1 - Risev3.3 vs ClassicAra 0.9.1 - Risev2: 81 - 15 - 64 [0.706]\r\nElo difference: 152.4 +/- 42.8, LOS: 100.0 %, DrawRatio: 40.0 %\r\n\r\n160 of 1000 games finished.\r\n```\r\n\r\n## Known limitations\r\n\r\n* The int8 weights for CPU are still only supported on Linux\r\n\r\n## Changelog compared to 0.9.2.post1\r\n\r\n* tablebase hits are now treated as terminal nodes until a tablebase position has been been reached (#108, #116)\r\n* refactored the shared pointer graph (#114)\r\n* reduced the number of terminal simulations during one mini-batch (#117)\r\n\r\n## Regression test\r\n\r\n```python\r\nTC 7s + 0.1s\r\nScore of CrazyAra 0.9.3 - Release vs CrazyAra 0.9.0 - Release: 99 - 97 - 28 [0.504]\r\nElo difference: 3.1 +/- 42.7, LOS: 55.7 %, DrawRatio: 12.5 %\r\n\r\n224 of 1000 games finished.\r\n```\r\n",
        "dateCreated": "2021-05-24T21:37:38Z",
        "datePublished": "2021-05-24T22:10:39Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.3",
        "name": "CrazyAra & ClassicAra 0.9.3",
        "tag_name": "0.9.3",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.3",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/43489146",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.3"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "## Notes\r\nThis version is the final submission for TCEC S21, Qualification League.\r\n\r\nSyzygy probe fix (https://github.com/QueensGambit/CrazyAra/pull/102)\r\nFix potential crash (#103)",
        "dateCreated": "2021-05-09T22:13:20Z",
        "datePublished": "2021-05-09T22:18:39Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.2.post1",
        "name": "ClassicAra 0.9.2.post1",
        "tag_name": "0.9.2.post1",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.2.post1",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/42673101",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.2.post1"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "## Notes\r\nThis version was submitted to TCEC S21, Qualification League testing.\r\n\r\n### UCI specific\r\n\r\n* Replaces fixed timeout constant `TIME_OUT_IS_READY_MS` by UCI-Option `Timeout_MS` (default: 13000, value for TCEC: 60000).\r\n",
        "dateCreated": "2021-05-06T13:20:46Z",
        "datePublished": "2021-05-06T13:30:50Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.2.post0",
        "name": "ClassicAra 0.9.2.post0",
        "tag_name": "0.9.2.post0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.2.post0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/42541285",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.2.post0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This version has been submitted to the _Top Chess Engine Championship_ [**(TCEC) Season 21**](https://wiki.chessdom.org/TCEC_Season_21_Engines), where _ClassicAra 0.9.2_ will start in the **Qualification League**.\r\n_ClassicAra 0.9.2_ uses a [**RISEv3.3**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.0/risev3.3_kingbaselite2019.zip) model which was trained on the [Kingbase2019lite](https://archive.org/details/KingBaseLite2019) dataset as for release [0.9.0](https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.0).\r\n**RISEv3.3** is an improvement of our proposed [**RISEv2**](https://github.com/QueensGambit/CrazyAra/wiki/Model-architecture) architecture.\r\n\r\nThe new _ClassicAra_ logo can be found [here](https://github.com/QueensGambit/CrazyAra/blob/master/etc/media/classicara_logo_small.png).\r\n\r\nThe [**engine.json**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.2/engine.json) configuration file and [**update.sh**](https://github.com/QueensGambit/CrazyAra/releases/download/0.9.2/update.sh) shell script can be used to replicate the testing environment on a multi-GPU Linux operating system.\r\n\r\nBinaries may be added later.\r\n\r\n## Notes\r\n\r\n### Bugfixes\r\n* fixed problem when reaching more than 16 million nodes. Thanks to @catask for reporting it (https://github.com/QueensGambit/CrazyAra/issues/39).\r\n* fixed problem where engine might lose on time. Thanks to @brianprichardson for reporting it (https://github.com/QueensGambit/CrazyAra/issues/74).\r\n* fixed problem that syzgy tablebases where not loaded. Thanks to Torsten for reporting it (https://github.com/QueensGambit/CrazyAra/issues/79).\r\n* the neural network can now be reloaded dynamcially if the value for `Model_Directory`, `Threads` or `UCI_Variant` was changed after the first `isready` command (https://github.com/QueensGambit/CrazyAra/pull/95).\r\n\r\n## UCI specific\r\n* added new UCI option `Centi_Q_Veto_Delta` which allows choosing a low visit move if its Q-Value exceeded a given threshold (https://github.com/QueensGambit/CrazyAra/pull/86).\r\n\r\n## Memory management\r\n* the memory management is now handled using shared pointers and is done fully in parallel to the search (https://github.com/QueensGambit/CrazyAra/pull/97).\r\n\r\n## Back-end\r\n* a Fairy-Stockfish back-end and supervised training for Xiangqi is now supported. Thanks to @xsr7qsr for the contribution (https://github.com/QueensGambit/CrazyAra/pull/93).\r\n\r\n## Refactoring & documentation\r\n* improved and refactored supervised learning setup. Thanks to @maxalexger for the contribution (https://github.com/QueensGambit/CrazyAra/pull/92, #63, #64).\r\n* refactored reinforcement learning loop and improved documentation. Thanks to @maxalexger for the contribution (#77, #91).\r\n\r\n## Miscellaneous\r\n* the log file is now working in append mode and also logs stderr information. Thanks to @brianprichardson for the suggestion (https://github.com/QueensGambit/CrazyAra/issues/78).\r\n* decativate virtual loss when showing evaluation (https://github.com/QueensGambit/CrazyAra/issues/82).\r\n* downscaled the value to centi-pawn conversion for classical chess (https://github.com/QueensGambit/CrazyAra/commit/b3da4a964a620172d4ce6769c459b307157a13f8).\r\n* added timer which replies `readyok` after 13s to avoid running into a time-out (https://github.com/QueensGambit/CrazyAra/pull/98).\r\n\r\n",
        "dateCreated": "2021-05-05T21:54:29Z",
        "datePublished": "2021-05-05T22:34:20Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.2",
        "name": "ClassicAra 0.9.2",
        "tag_name": "0.9.2",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.2",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/42507221",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.2"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "## Notes\r\n\r\nThis release replaces MCTS with MCGS as the new default and is the first release with standard chess support.\r\nThe provided model for chess has been trained supervised on the free [KingBase Lite 2019](https://archive.org/details/KingBaseLite2019) data set without reinforcement learning so far.\r\n\r\nThe displayed nps is now considereably lower, because now only the actual nodes in the tree are displayed.\r\nTerminal visits and transposition visits  do not count as nodes anymore.\r\nBy using MCGS, the required memory allocation has been reduced for a given movetime.\r\n\r\n### New Variant\r\n* Standard chess: A neural network and binary is provided for standard chess.\r\n    * The executable is called _ClassicAra_.\r\n\r\n### Environment Backend\r\n\r\nThe _CrazyAra_ project now supports a general back-end which allows a better integration to new environments.\r\nAn environment is used for move-generation and terminal condition checks.\r\n\r\nThe following environments have been integrated so far:\r\n* [Multi-Variant Stockfish](https://github.com/ddugovic/Stockfish)\r\n* [OpenSpiel](https://github.com/deepmind/open_spiel)\r\n* [Pommerman](https://github.com/tomatenbrei/pomcpp)\r\n\r\n### Bugfixes\r\n* fixed crash in release [0.8.4](https://github.com/QueensGambit/CrazyAra/tree/0.8.4) when too many transpositions occurred.\r\n* fixed bug that single moves were not done instantly if no tree was reused (https://github.com/QueensGambit/CrazyAra/issues/56).\r\n* fixed bug decreasing nodes after 16 million nodes (https://github.com/QueensGambit/CrazyAra/issues/39).\r\n* workaround for bug in XBoard / Winboard. UCI-Variant is now repeated if there is only a single variant available (https://github.com/QueensGambit/CrazyAra/issues/23).\r\n\r\n### UCI specific\r\n* MultiPV is now supported and can be used for analysis e.g. using [LiGround](https://github.com/ml-research/liground).\r\n* UCI options can now be changed, also after the isready command.\r\n    * Current limitation: Changing the loaded neural network dynamicly after a neural network has already been loaded is not (yet) possible.\r\n* UCI Options are now ordered in alphabetical order.\r\n* Updated, removed, or renamed certain UCI options (https://github.com/QueensGambit/CrazyAra/pull/71).\r\n\r\n### root command (debug)\r\n* For the Root Command: Moves are now displayed in SAN notation instead of UCI notation for better readibility.\r\n* UCI moves are now ordered by the current best move and not using the fixed policy ordering.\r\n\r\n## Miscellaneous \r\n* The loaded neural network input and output shapes are now always displayed when loading.\r\n* An input shape and output shape check is made for the loaded neural network architecture.\r\n\r\n### INT8 CPU Back-end\r\n* INT8 weights are now available for the MXNet MKL CPU back-end, resulting in a 1.5 - 3x speed-up.\r\n* \u26a0\ufe0f The INT8 weights give strange results for the Mac binaries. The Mac binaries use float32 weights by default.\r\n* \u26a0\ufe0f Unfortunately the MXNet CPP-Package is broken for Windows at the moment ([mxnet#20131](https://github.com/apache/incubator-mxnet/pull/20131)). Therefore, loading the int8 weights will result in a crash and float32 weights are used by default.\r\n\r\n## Known issues :warning: \r\n* The first start-up time of the engine may take 1-15 minutes to generate the trt-engine files.\r\n* It is recommended to first start the engine from the command line and issue the `isready` command. More information can be found [here](https://github.com/QueensGambit/CrazyAra/wiki/Command-Line-Usage). All later loading times should be < 10s.\r\n* The process of generating trt-files is done twice, i.e. for batch.size 1 and batch-size 16.\r\n* The available batch sizes are limited to the provided onnx models. Current available batch-sizes are:\r\n   * 1\r\n   * 8\r\n   * 16\r\n   * 64\r\n\r\n### Regression Test (Crazyhouse)\r\n\r\n**OS**: Ubuntu 18.04\r\n**GPU**: RTX 2070 OC\r\n**Model**: Model-OS-96\r\n**Opening suite**: [crazyhouse_mix_cp_130.epd](https://github.com/ianfab/books/blob/master/crazyhouse_mix_cp_130.epd)\r\n\r\n* TC: 10s + 0.1s\r\n```python\r\nScore of CrazyAra 0.9.0 - Release vs CrazyAra 0.8.0 - Release: 208 - 159 - 58 [0.558]\r\nElo difference: 40.2 +/- 30.9, LOS: 99.5 %, DrawRatio: 13.6 %\r\n\r\n425 of 1000 games finished.\r\n```\r\n\r\n* TC: 3min + 2s\r\n```python\r\nScore of CrazyAra 0.9.0 - Release vs CrazyAra 0.8.0 - Release: 29 - 19 - 14 [0.581]\r\nElo difference: 56.5 +/- 78.1, LOS: 92.6 %, DrawRatio: 22.6 %\r\n\r\n62 of 1000 games finished.\r\n```\r\n\r\n### Inference libraries\r\n\r\nThe following inference libraries are used in each package:\r\n* `CrazyAra_ClassicAra_0.9.0_Linux_TensorRT.zip`\r\n   *   CUDA 11.2\r\n   *   cuDNN 8.1.1.33\r\n   *   TensorRT-7.2.3.4\r\n* `CrazyAra_ClassicAra_0.9.0_Linux_MKL.zip`\r\n   *   MXNet 1.8.0\r\n   *   Intel oneAPI MKL 2021.2.0\r\n* `CrazyAra_ClassicAra_0.9.0_Win_TensorRT.zip`\r\n   *   CUDA 11.2\r\n   *   cuDNN 8.1.1.33\r\n   *   TensorRT-7.2.3.4\r\n* `CrazyAra_ClassicAra_0.9.0_Win_MKL.zip`\r\n   * MXNet-20190919\r\n   * Intel MKL 20190502\r\n* `CrazyAra_ClassicAra_0.9.0_Mac_MKL_post1.zip`\r\n   *   MXNet 1.8.0\r\n   *   Intel oneAPI MKL 2021.2.0\r\n\r\nThe release files include the required dll / so-files for convenience. If you already have them installed on your system, you can delete them.\r\nInformation on how to use multiple GPUs can be found in #33 and #76.\r\n\r\n\r\n### Updates\r\n\r\n* 2021-04-15: **CrazyAra_ClassicAra_0.9.0_Mac_MKL_post1.zip**\r\n   * added **libc++abi.1.dylib**\r\n   * added @executable_path/. to **libmxnet.so** to avoid post-installation actions \r\n* 2021-05-03: **risev2_kingbase2019.zip**\r\n   * added `risev2_kingbaselite2019.zip` which is the model trained on the kingbase2019lite data set as separate download\r\n* 2021-05-03: **preact_resnet_se_kingbaselite2019.zip.zip**\r\n   * added `preact_resnet_se_kingbaselite2019.zip` which is a model trained on the kingbase2019lite data set as separate download\r\n* 2021-05-06: **risev3.3_kingbaselite2019.zip**\r\n   * added `risev3.3_kingbaselite2019.zip` which is a model trained on the kingbase2019lite data set as separate download.",
        "dateCreated": "2021-04-05T00:04:07Z",
        "datePublished": "2021-04-05T04:55:38Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.9.0",
        "name": "CrazyAra & ClassicAra 0.9.0",
        "tag_name": "0.9.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.9.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/40928656",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.9.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "## Notes\r\n\r\nThis release is provided to allow convenient reproduce-ability of the evaluations presented in our paper **Improving AlphaZero Using Monte-Carlo Graph Search**, [preprint](https://arxiv.org/abs/2012.11045).\r\n\r\nIt is built using commit [CrazyAra#500da21e0bd9152657adbbc6118f3ebbc660e449](https://github.com/QueensGambit/CrazyAra/commit/500da21e0bd9152657adbbc6118f3ebbc660e449).\r\n\r\n\r\nMore details are described here:\r\n* https://github.com/QueensGambit/CrazyAra/wiki/v0.8.4\r\n\r\nThe binaries can use the same model and TensorRT library dependencies (Linux & Windows) as in release 0.9.0.\r\n\r\n:warning: The _ClassicAra_ binary is not crash free. It turned out that a variable overflow of [numberParentNodes](https://github.com/QueensGambit/CrazyAra/blob/500da21e0bd9152657adbbc6118f3ebbc660e449/engine/src/node.h#L92) and a wrong ply-counter check ([#83](https://github.com/QueensGambit/CrazyAra/issues/83)) was the cause of this. A fix is applied in release 0.9.0.\r\n\r\nThe _ClassicAra_ and _CrazyAra 0.8.4_ binaries expect the `Model_Directory` to be `model/` while release 0.9.0 expects it to be `model/chess` and `model/crazyhouse`  by default instead ([#75](https://github.com/QueensGambit/CrazyAra/issues/75)).\r\n\r\nThere are three ways to fix this problem.\r\n* 1. You manually set the  `Model_Directory` before calling `isready`\r\n```setoption name Model_Directory value model/chess```\r\n* 2. You move the files from `model/chess` into `model/`.\r\n* 3. If you have already generated the trt-files, you should be able to edit the UCI-Option `Model_Directory` via the GUI directly.\r\n\r\n## Updates\r\n\r\n**2021-04-10**: Added CrazyAra_pre_pull_47, ClassicAra_pre_pull_47, CrazyAra_pre_pull_47.exe, ClassicAra_pre_pull47.exe using commit [CrazyAra#82e821e8721aa635e1415e718027b2cbe19356a0](https://github.com/QueensGambit/CrazyAra/commit/82e821e8721aa635e1415e718027b2cbe19356a0). This commit is a state before adding integrating MCGS and uses transposition tables to copy neural network evaluations from pre-existing nodes.",
        "dateCreated": "2021-04-05T00:04:07Z",
        "datePublished": "2021-04-05T04:30:02Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.8.4",
        "name": "CrazyAra & ClassicAra 0.8.4",
        "tag_name": "0.8.4",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.8.4",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/40928541",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.8.4"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "\r\n\r\n## Notes\r\nThis release provides new features and addresses the main issues from release 0.7.0.\r\nIt is expected to be the last release which only supports crazyhouse. \r\nModel-OS-96, the final model after ~ 2.37 million self-play games from release 0.7.0, is included in all release packages.\r\n\r\n## TensorRT backend\r\n\r\n_CrazyAra's_ default GPU backend is now a native TensorRT backend without MXNet library dependency.\r\nThe networks are loaded in the ONNX format.\r\n\r\n\r\n## Multi-GPU support\r\n\r\n_CrazyAra_ now supports multiple GPUs for the same MCTS search.\r\nThe first GPU is defined by the GPU index `First_Device_ID` and the last GPU index by `Last_Device_ID`.\r\nThe `Threads` parameters defines the number of threads to use for each GPU.\r\n\r\n## Low precision inference\r\n\r\n_CrazyAra_ now allows **float16** and **int8** inference besides **float32**. The active precision can be set by the UCI-option `Precision`. **Float16** is the new default precision and greatly accelerates search for NVIDIA RTX cards (~2.2x speed increase).\r\n\r\n**Int8** precision is still experimental and increases speed for older GPUs by about 2.5x at the cost of losing precision. Before creating the TensorRT engine files, the network will be automatically calibrated.\r\nHigher nps is primarily beneficial for low time control, e.g. **TC:** 30s + 0.1s:\r\n\r\n```python\r\nScore of CrazyAra-0.8.0-INT8-GTX1080ti vs CrazyAra-0.8.0-FP16-GTX1080ti: 72 - 17 - 11 [0.775]\r\nElo difference: 214.8 +/- 77.1, LOS: 100.0 %, DrawRatio: 11.0 %\r\n\r\n100 of 100 games finished.\r\n```\r\n\r\n## Start-up time\r\n\r\nThe first start-up time of _CrazyAra_ can take several minutes to generate the trt hardware specific engine files.\r\nAll later start-ups should be fast e.g. < 3s. The TensorRT files are stored in the `Model_Directory`.\r\n\r\n\r\n## Memory consumption\r\n\r\nReduced memory consumption of the search tree by 90%.\r\n\r\nExample: Generation of 1.5 million nodes:\r\n\r\n**CrazyAra 0.7.0** memory consumption:\r\n* 12.8 GiB total memory:\r\n   * 1.5 GiB constant memory (MXNet GPU backend)\r\n   * 11.3 GiB tree memory\r\n\r\n**CrazyAra 0.8.0** memory consumption:\r\n* 2.7 GiB total memory:\r\n   * 1.1 GiB constant memory (TensorRT backend)\r\n   * 1.6 GiB tree memory\r\n\r\n## Time manager\r\n\r\nThe time management was improved to stop searches early if large parts of the tree were reused and is extended for positions with a falling evaluation.\r\n\r\n## MCTS solver\r\n\r\n_CrazyAra_ can now calculate forced mates and tries to choose the shortest line to mate or longest line for getting mated.\r\nThe algorithm is an extended version of:\r\n* \"Exact-Win Strategy for Overcoming AlphaZero\" by Chen et al.\r\nhttps://www.researchgate.net/publication/331216459_Exact-Win_Strategy_for_Overcoming_AlphaZero\r\n\r\n* \"Monte-Carlo Tree Search Solver\" by Winands et al.\r\nhttps://www.researchgate.net/publication/220962507_Monte-Carlo_Tree_Search_Solver\r\n\r\n## Improved UCI interface\r\n\r\n* The logging of the evaluation information is now performed asynchronously.\r\n\r\n* The commands `go infinite`, `stop` and `quit` are now supported.\r\n\r\n* Every second the current evaluation information is displayed which can be stopped at any point via `stop`.\r\n\r\n* The `root` command now displays the eval information in a more structured way.\r\n\r\n* `selDepth` information is now displayed to show the maximum reached depth in the current search.\r\n\r\n* Terminal node visits are now counted separately and not counted as nodes anymore.\r\n\r\n## Random root exploration\r\nA new UCI Option `Random_Playout` was added which explores randomly direct child nodes of the root for 5% of all visits (default: on). This technique helps to detect lines which may look unattractive at first sight.\r\n\r\n## Tablebase support\r\n\r\n_CrazyAra_ now supports Syzygy tablebases which may later be used for chess, anti-chess and atomic.\r\n\r\n## Asnychronous freeing of memory\r\n\r\nThe memory of the previous search tree is now asynchronously deallocated which can save up to 1-5s for long time control settings.\r\n\r\n\r\n## Full OS support\r\n\r\nThe C++ version of _CrazyAra_ now runs on all major operating systems: Linux (GPU+CPU), Windows (GPU+CPU) and Mac-OS (CPU only).\r\n\r\n## Known issues\r\n* The first start-up time of the engine may take some minutes to generate the trt-engine files.\r\n* The available batch sizes are limited to the provided onnx models. Current available batch-sizes are:\r\n   * 1\r\n   * 8\r\n   * 16\r\n   * 64\r\n\r\n## Regression test\r\n\r\n**Conductor**: [Matuiss2](https://github.com/Matuiss2)\r\n**TC**: 3min +2s\r\n**OS**: Windows\r\n**GPU**: GTX 1070ti\r\n**Model**: Model-OS-96\r\n**Opening suite**: [zh-equal-long-81.pgn](zh-equal-long-81.pgn) (with 3 openings removed)\r\n```python\r\nScore of CrazyAra 0.8.0 vs CrazyAra 0.7.0: 72 - 21 - 7 [0.245]\r\nElo difference: +195.51 +/- 77.45\r\n\r\n```\r\n\r\n### Inference libraries\r\n\r\nThe following inference libraries are used in each package:\r\n* `CrazyAra_0.8.0_Linux_TensorRT.zip`\r\n   *   CUDA 10.2\r\n   *   cuDNN 7.6.5\r\n   *   TensorRT-7.0.0.11\r\n* `CrazyAra_0.8.0_Linux_MKL.zip`\r\n   *   Intel MKL 20190502\r\n* `CrazyAra_0.8.0_Win_TensorRT.zip`\r\n   *   CUDA 10.2\r\n   *   cuDNN 7.6.5\r\n   *   TensorRT-7.0.0.11\r\n* `CrazyAra_0.8.0_Win_MKL.zip`\r\n   *   Intel MKL 20190502\r\n* `CrazyAra_0.8.0_Mac_CPU.zip`\r\n   *   Apple Accelerate\r\n",
        "dateCreated": "2020-05-16T19:42:13Z",
        "datePublished": "2020-05-16T21:19:36Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.8.0",
        "name": "CrazyAra 0.8.0",
        "tag_name": "0.8.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.8.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/26592341",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.8.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "### Notes\r\nThis is the first release after applying reinforcement learning to crazyhouse.\r\nThe release is mainly intended to be able to reproduce _CrazyAra's_ moves from the 100 games between _Multi-Variant-Stockfish (2019-12-03)_ and _CrazyAra 0.7.0_. All UCI-options for all binaries are set to the same defaults as in:\r\n* https://github.com/QueensGambit/CrazyAra/wiki/v0.7.0\r\n\r\nThe neural network (see **available models**) should be downloaded separately and be put in the `model` directory.\r\n\r\n### Speed improvements\r\n\r\n*   TensorRT support was added and is currently supported in the Linux release.\r\nTensorRT results in about 2x higher NPS for model RISEv2 compared to the default CUDA/cuDNN backend.\r\n\r\n### Known issues\r\n\r\n*   Long start-up times\r\n     *    Loading model RISEv2 results in a long (~15-20s) constant start-up time on GPU due to inference optimization (MXNet [#16173](https://github.com/apache/incubator-mxnet/issues/16173)). The start-up time increases for higher batch-sizes and when TensorRT is enabled. If the default maximum start-up time for external GUIs (e.g. cutechess) is not increased, it can happen that the GUI kills the _CrazyAra_ process because of not responding in time. \r\n\r\n*    High memory consumption\r\n     *    The memory consumption linearly increases over time and becomes relatively high (> 20 GB RAM) for more than 1 million nodes because the chess board position is currently stored in every node. As an intermediate solution, the UCI-Option `Nodes` can be used to define a maximum number of nodes for your system combined with `Allow_Early_Stopping=true`.\r\n\r\n### Miscellaneous\r\n\r\n*   Reinforcement learning functionality was disabled for all binaries but can be enabled using cmake with\r\n    `-DUSE_RL=1`. For convenient installation it is recommend to use the Dockerfile installation:\r\n    *   https://github.com/QueensGambit/CrazyAra/tree/master/engine/src/rl\r\n    **Note**: NVIDIA-docker only runs on Linux systems (nvidia-docker [#665](https://github.com/NVIDIA/nvidia-docker/issues/665)).\r\n*   `./` was added to the `LIBRARY_RUN_PATH` for all Linux binaries. Therefore the all shared object files should be detected automaticity and the `LD_LIBRARY_PATH` must not be changed.\r\n\r\n### Changes to MCTS search\r\n*   `Use_TensorRT`was added which is set to true by default if the binary supports TensorRT inference.\r\n*   `Centi_Node_Temperature` was added which controls the temperature on every node's policy distribution as an alternative to Dirichlet noise in tournament games. For low NPS system or short time controls it is recommend to reduce `Centi_Node_Temperature` to e.g. 130 or 150.\r\n*   `Allow_Early_Stopping` was added: if this option is false then `Nodes` acts as a fixed number of nodes to reach. If `Allow_Early_Stopping` is true then `Nodes` is treated at a maximum limit for nodes.\r\n*   U-Value exploration factor was temporarily removed.\r\n*   Enhancing checks and captures was temporarily removed.\r\n\r\n### Available models\r\n\r\nThis release includes the 45th model update index during reinforcement learning and ~1 million generated self-play games. The model `model-os-45-risev2.zip` was used during the 100 games with _Multi-Variant-Stockfish_:\r\n*   [model-os-45-risev2.zip](https://github.com/QueensGambit/CrazyAra/releases/download/0.7.0/model-os-45-risev2.zip)\r\n\r\nThe reinforcement learning loop was afterwards continued until ~ 2.5 million self-play games:\r\n*   [model-os-96-risev2.zip](https://github.com/QueensGambit/CrazyAra/releases/download/0.7.0/model-os-96-risev2.zip)\r\n\r\n### Elo progression during RL over 1 million games (800 Nodes / move)\r\n\r\n```java\r\nRank Name                          Elo     +/-   Games   Score   Draws\r\n   1 CrazyAra-0.7.0-Model-OS-45      98      31     500   63.7%    5.0%\r\n   2 CrazyAra-0.7.0-Model-OS-40      83      31     500   61.7%    3.8%\r\n   3 CrazyAra-0.7.0-Model-OS-50      78      30     500   61.0%    4.8%\r\n   4 CrazyAra-0.7.0-Model-OS-30      63      30     500   59.0%    4.8%\r\n   5 CrazyAra-0.7.0-Model-OS-35      39      30     500   55.6%    4.0%\r\n   6 CrazyAra-0.7.0-Model-OS-25      36      30     500   55.1%    4.2%\r\n   7 CrazyAra-0.7.0-Model-OS-19      10      30     500   51.5%    5.0%\r\n   8 CrazyAra-0.7.0-Model-OS-15     -15      30     500   47.9%    5.0%\r\n   9 CrazyAra-0.7.0-Model-OS-10     -43      30     500   43.8%    3.6%\r\n  10 CrazyAra-0.7.0-Model-OS-5     -121      32     500   33.3%    2.6%\r\n  11 CrazyAra-0.7.0-Model-OS-SL    -271      40     500   17.4%    0.8%\r\n\r\n2750 of 2750 games finished.\r\n```\r\n\r\nThe model was initialized by training on 569,537 lichess.org crazyhouse games and was included in release 0.6.0:\r\n*   [RISEv2-mobile / Model-OS-SL](https://github.com/QueensGambit/CrazyAra/releases/download/0.6.0/RISEv2-mobile.zip)\r\n\r\n### Strength comparison between `model-os-96-risev2` and `model-os-45-risev2`:\r\nTC: 800 nodes / move, Move Temp: 0.4, Move decay: 0.93, Opening suite: zh-equal-long-78.pgn\r\n```java\r\nScore of CrazyAra-0.7.0-Model-OS-96 vs CrazyAra-0.7.0-Model-OS-45: 287 - 191 - 22 [0.596]\r\nElo difference: +67.5 +/- 30.4, LOS: 0.0 %, DrawRatio: 4.4 %\r\n```\r\n\r\n### Inference libraries\r\n\r\nThe following inference libraries are used in each package (same as in [strength eval 0.7.0](https://github.com/QueensGambit/CrazyAra/wiki/v0.7.0) for reproduce-ability):\r\n* `CrazyAra_0.7.0_Linux_CUDA_TensorRT.zip`\r\n   *   CUDA 10.1\r\n   *   cuDNN 7.5.1.10\r\n   *   TensorRT-5.1.5.0\r\n* `CrazyAra_0.7.0_Linux_MKL.zip`\r\n   *   Intel MKL 20190502\r\n* `CrazyAra_0.7.0_Win_CUDA.zip`\r\n   *   CUDA 10.1\r\n   *   cuDNN 7.5.1.10\r\n* `CrazyAra_0.7.0_Win_MKL.zip`\r\n   *   Intel MKL 20190502\r\n\r\nThe dll files for Windows are the same as in release 0.6.0. You can use the same dlls when moving them into a custom directory and adding this directory to the `PATH` environment variable.",
        "dateCreated": "2020-01-05T21:30:48Z",
        "datePublished": "2020-01-06T02:05:43Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.7.0",
        "name": " CrazyAra 0.7.0",
        "tag_name": "0.7.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.7.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/22606857",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.7.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "__Note:__ This release has been imported from [CrazyAra-Engine/releases\r\n](https://github.com/QueensGambit/CrazyAra-Engine/releases).\r\n### Speed Improvements\r\n\r\nThis version marks the first C++ release of the CrazyAra engine.\r\nThe evaluated nodes per second increased by a factor of 4-10 compared to the last python version on GPU\r\nand a factor of 2 or more when running on CPUs.\r\n\r\n### Improvements for MCTS search\r\n\r\n* scaling of Q-value-thresh  with respect to number of nodes\r\n* reduction of U-divisor with respect to number of nodes\r\n* cleaner time management which is state dependent\r\n* check enhancement can be enabled for all nodes at regardless the search depth\r\n* RISEv2 model is working efficiently now for GPU usage\r\n\r\n### Available models\r\n\r\nThis release also includes all model weights mentioned in our paper.\r\nThe model directory should be move to the same directory as the CrazyAra binary.\r\nFor metric comparison of the differnet models visit the corresponding [wiki-page](https://github.com/QueensGambit/CrazyAra-Engine/wiki/Model-description).\r\n\r\n### Regression tests\r\n\r\n* Regression test on GPU using model _4-value-8-policy_:\r\n```python\r\n[TimeControl \"180+2\"]\r\nScore of CrazyAra-0.6.0 vs CrazyAra-0.5.1: 42 - 8 - 0 [0.840]\r\nElo difference: 288.06 +/- 151.10\r\n\r\n50 of 50 games finished.\r\n```\r\n\r\n* Regression test on bullet with CPU (IntelMKL) using RISEv2 with no opening suite but temperature of 0.05 as reported by [@Matuiss2](https://github.com/Matuiss2)\r\n```python\r\nScore of CrazyAra 0.6.0 vs CrazyAra 0.5.0: 152 - 23 - 2 [0.920]\r\nElo difference: 323 +/- \r\n\r\n177 of 177 games finished.\r\n```\r\n\r\n**2019-08-27**: Added additional shared object files to **CrazyAra_0.6.0_Linux_CUDA.zip**\r\n**2019-08-27**: Added additional shared object files to **CrazyAra_0.6.0_Linux_MKL.zip**\r\n",
        "dateCreated": "2019-10-08T04:16:25Z",
        "datePublished": "2019-10-08T05:03:45Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.6.0",
        "name": "CrazyAra 0.6.0",
        "tag_name": "0.6.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.6.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/20536123",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.6.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "#### Changes\r\n\r\n* Updated model **RiseV2_mobile** to be loadable in **MXNet 1.5.0** without errors\r\n* Softmax-activation is now consistently applied after model inference\r\n\r\n**Update 2019.11.05**: Updated UCI_Variant specification in `crazyara.py` and added shell script for XBoard integration on OSX and other unix based systems (https://github.com/QueensGambit/CrazyAra/issues/23)",
        "dateCreated": "2019-07-23T12:57:54Z",
        "datePublished": "2019-07-23T13:10:13Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.5.1",
        "name": "CrazyAra 0.5.1",
        "tag_name": "0.5.1",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.5.1",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/18803653",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.5.1"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "**Note** \r\nThis releases contains new improved network weights and architectures which can also be flexibly used for older client versions (except RiseV2_mobille needs version >= 0.4.1).  \r\n\r\nChoose one of the following networks depending on your needs:\r\n\r\n* `CrazyAra_0.5.0_4_value_8_policy.zip`\r\n   * only trained on [human games from lichess.org](https://github.com/QueensGambit/CrazyAra/wiki/Supervised-training)\r\n   * best suited for **GPU** usage\r\n  * performance on validation set\r\n         + move prediction accuracy: **60.0%**\r\n         + combined loss: **1.21119**\r\n\r\n* `CrazyAra_0.5.0_RiseV2_mobile.zip`\r\n  * only trained on [human games from lichess.org](https://github.com/QueensGambit/CrazyAra/wiki/Supervised-training)\r\n  * optimized for **CPU** usage\r\n  * performance on validation set\r\n         + move prediction accuracy: **60.3%**\r\n         + combined loss: **1.19246**\r\n\r\n* `CrazyAraFish_0.5.0_RiseV1.zip`\r\n  * trained on [human games from lichess.org](https://github.com/QueensGambit/CrazyAra/wiki/Supervised-training) and later fine-tuned on [Stockfish 10 self played games](https://github.com/QueensGambit/CrazyAra/wiki/Stockfish-10:-Crazyhouse-Self-Play)\r\n  * best suited for **GPU** usage\r\n  * overall strongest move prediction in terms of move quality\r\n  * can return strange results for first few opening moves because it was trained using an opening suite and Stockfish's playstyle is relatively deterministic with same number of nodes\r\n  * performance on Stockfish's validation set\r\n         + move prediction accuracy: **56.6%** (before finetuning: **46.29%**)\r\n         + combined loss: **1.32689**\r\n\r\n### Improvements for MCTS search\r\n* Updated usage of transposition table\r\n\r\n### Miscellaneous\r\n\r\n#### Improvements for hardware compatibility\r\n* automatic reduction for UCI option number of threads depending on number of CPU cores\r\n\r\n#### Improvements for UCI client (e.g. when used with [WinBoard](http://hgm.nubati.net/))\r\n* client doesn't crash when a position with no legal move is given (e.g. stalemates which are exceptionally in crazyhouse).\r\n* client handles switched order of `btime` before `wtime`\r\n\r\n\r\n### Results\r\n\r\n* Score of same network weights **4_value_8_policy** running on GeForce GTX 1080 Ti\r\n```python\r\nScore of CrazyAra-0.5.0 vs CrazyAra-0.4.1: 28 - 22 - 0 [0.560] [3 min / 40 moves]\r\nElo difference: 41.89 +/- 99.63, LOS: 80.19 %, DrawRatio: 0.0 %\r\n\r\n50 of 100 games finished.\r\n```\r\n\r\n**Update 2019.07.19**: Added missing `/` in relative config-file paths in release files.",
        "dateCreated": "2019-06-20T09:42:09Z",
        "datePublished": "2019-06-20T10:37:32Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.5.0",
        "name": "CrazyAra 0.5.0",
        "tag_name": "0.5.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.5.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/18115301",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.5.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "**Note** \r\n* Put a neural network architecture file `model-<validation-loss>-<validation-accuracy>-symbol.json` in the directory `CrazyAra_0.4.1/model/symbol/`.\r\n* Put a neural network parameter file `model-<validation-loss>-<validation-accuracy>-<k-number-steps>.params` in the directory `CrazyAra_0.4.1/model/params/`.\r\n\r\n_New neural network weights & architecture are available in Release 0.5.0_\r\n\r\n### Improvements for MCTS search\r\n\r\n* Fixed bug when reusing Q-values from the search tree\r\n* Disabled any pruning and properly reuse the previous search tree\r\n\r\n#### Updated UCI parameters\r\n* use_pruning (default: True -> False)\r\n\r\n#### Deleted UCI parameters\r\n* use_oscillating_cpuct\r\n* check_mate_in_one\r\n\r\n#### New UCI parameters\r\n* enhance_checks (default: False)\r\n* enhance_captures (default: False)\r\n* centi_u_init_divisor (default: 100)\r\n* use_transposition_table (default: True)\r\n\r\n### Miscellaneous\r\n#### Improvement for engine in analysis mode\r\n* fixed bug for analysing fen `position fen <fen_description>.fen` without any move information\r\n* `go depth X` command is now properly supported, where `depth` denotes the maximum depth reached during MCTS search\r\n* made the directory for the neural network a customizable UCI parameter `model_architecture_dir`, `model_weights_dir`. When set to \"default\" the configuration in `DeepCrazyhouse/configs/main.config`is used instead\r\n\r\n#### Compability updates\r\n* constant `chess.BB_VOID` was renamed to ` chess.BB_EMPTY` for python-chess version > 0.27.X.\r\nNow the value 0 is used instead to avoid any future complications in `input_representation.py`\r\n* NeuralNetAPI uses `os.path.split()` instead of relying on `/` when loading the neural network\r\n\r\n### Results\r\n\r\n* Score of same network weights with same NPS (~250) running on GeForce GTX 1080 Ti\r\n```python\r\nScore of CrazyAraFish-0.4.1 vs CrazyAraFish-0.4.0: 39 - 10 - 1 [0.790] [3 min / 40 moves]\r\nElo difference: 230.16 +/- 126.78\r\n\r\n50 of 50 games finished.\r\n```\r\n\r\n* Different network weights running on Intel\u00aeCore\u2122i5-8250U CPU @ 1.60GHz\u00d78\r\n```python\r\nScore of CrazyAra-0.4.1 (RiseV2-mobile, ~135 NPS) vs  CrazyAra-0.4.0 (RiseV1, ~70 NPS):  42 - 6 - 2  [0.86] [3 min / 40 moves]\r\n\r\nElo difference: 315.35 +/- 155.42\r\n\r\n50 of 50 games finished\r\n```\r\n\r\n\r\n",
        "dateCreated": "2019-06-20T08:37:50Z",
        "datePublished": "2019-06-20T09:21:31Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.4.1",
        "name": "CrazyAra 0.4.1",
        "tag_name": "0.4.1",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.4.1",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/18114226",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.4.1"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This version went live on 2019.02.13 on lichess.org: https://lichess.org/@/CrazyAra\r\n\r\nPlease put the file `model-1.25948-0.589-0246.params` from release CrazyAra 0.3.1 in the directory `CrazyAra_0.4.0/model/params/`.\r\n_The weight file of the neural network is uploaded separately to avoid additional upload cost when only changing source code._\r\n\r\n### Improvements for MCTS search\r\n\r\nAdded conservative, pessimistic check for q-values along search path by adding:\r\n```python\r\nq_future, indices = self.get_last_q_values()\r\n```\r\n\r\n```python\r\nScore of CrazyAraFish-0.4.0 vs CrazyAraFish-0.3.1: 21 - 9 - 0 [3 min/40 moves]\r\nElo difference: 147.19 +/- 147.79\r\n\r\n30 of 30 games finished.\r\n```\r\n\r\nAdditionally, major refactoring thanks to @Matuiss2.\r\n\r\n**2019.03.28**: Updated default MCTS search parameter to `\"context\": \"cpu\", \"threads\": 8, \"batch_size\": 8, \"neural_net_services\": 1` for better initial settings on most hardware.\r\n\r\n**2019.05.30**: `CrazyAra_0.4.0.zip`; `mcts_agent.py`: Removed unused import of library `gevent`. Updated version id.",
        "dateCreated": "2019-03-27T21:38:19Z",
        "datePublished": "2019-03-27T22:03:58Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.4.0",
        "name": "CrazyAra 0.4.0",
        "tag_name": "0.4.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.4.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/16395738",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.4.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "Please put the file `model-1.25948-0.589-0246.params` in the directory `CrazyAra_0.3.1/model/params/`. \r\n_The weight file of the neural network is uploaded separately to avoid additional upload cost when only changing source code._\r\n\r\n### Improvements for MCTS search\r\n\r\nHigher NPS: from 250 NPS to 300 NPS on GTX1080ti\r\n\r\nAdded Options:\r\n* enabled transposition table by connecting nodes which lead to the same position in the search tree\r\n* time management regime by spending less time on obvious moves\r\n* opening guarded moves to avoid exploration of moves < 5% for a given number of moves in the opening\r\n* increasing cpuct value as described by recent DeepMind publication\r\n\r\n### Strength evaluation:\r\nv0.3.1 [played JannLee](https://zhchess.blogspot.com/2018/12/crazyara-plays-jannlee-for-christmas.html) and other [crayzhouse engines](https://github.com/QueensGambit/CrazyAra/wiki/v0.3.1).\r\n\r\n",
        "dateCreated": "2018-12-27T23:03:47Z",
        "datePublished": "2018-12-27T23:23:04Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.3.1",
        "name": "CrazyAra 0.3.1",
        "tag_name": "0.3.1",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.3.1",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/14722689",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.3.1"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "### Improvements for MCTS search\r\n* Higher NPS: from 70 NPS to 250 NPS on GTX1080ti\r\n* Added Options: \r\n  - Q-Value factor for final move\r\n  - MCTS-Search Pruning\r\n  - New time-management system based on movetime\r\n  - Clipping of low visited nodes\r\n  - Oscillating CPUCT during search\r\n\r\n`Score of CrazyAra-0.3.0 vs CrazyAra-0.2.0: 10 - 0 - 0 [1.000]  (3 min/40 moves)`",
        "dateCreated": "2018-12-01T14:25:23Z",
        "datePublished": "2018-12-01T14:32:47Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.3.0",
        "name": "CrazyAra 0.3.0",
        "tag_name": "0.3.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.3.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/14296352",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.3.0"
      },
      {
        "authorType": "User",
        "author_name": "QueensGambit",
        "body": "This release contains all needed source files as well as the model-weights for running CrazyAra as an UCI engine.\r\nCrazyAra runs using a python environment. Please visit the installation instructions at:\r\n* https://github.com/QueensGambit/CrazyAra/wiki/Installation-Guide\r\nin order to setup the engine in a chess GUI.",
        "dateCreated": "2018-10-22T18:22:22Z",
        "datePublished": "2018-10-22T19:03:33Z",
        "html_url": "https://github.com/QueensGambit/CrazyAra/releases/tag/0.2.0",
        "name": "CrazyAra 0.2.0",
        "tag_name": "0.2.0",
        "tarball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/tarball/0.2.0",
        "url": "https://api.github.com/repos/QueensGambit/CrazyAra/releases/13588690",
        "zipball_url": "https://api.github.com/repos/QueensGambit/CrazyAra/zipball/0.2.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 162,
      "date": "Wed, 29 Dec 2021 21:49:08 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "python",
      "crazyhouse",
      "chess-engine",
      "deep-learning",
      "artificial-intelligence",
      "convolutional-neural-network",
      "mcts",
      "alphazero",
      "mxnet",
      "gluon",
      "open-source",
      "machine-learning",
      "lichess",
      "python-chess",
      "alphago",
      "mcgs"
    ],
    "technique": "GitHub API"
  }
}