{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.10509"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9912556242864674
      ],
      "excerpt": "Sparse MultiHead Attention (https://arxiv.org/abs/1904.10509) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ptillet/torch-blocksparse",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-05T18:03:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-05T09:17:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8894699916295515
      ],
      "excerpt": "The following features are supported: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8102050500598436,
        0.8102050500598436,
        0.8102050500598436
      ],
      "excerpt": "Batched Matrix Multiplication: SPARSE = op(DENSE) x op(DENSE) \nBatched Matrix Multiplication: DENSE = op(SPARSE) x op(DENSE) \nBatched Matrix Multiplication: DENSE = op(DENSE) x op(SPARSE) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Block-sparse primitives for PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ptillet/torch-blocksparse/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Sun, 26 Dec 2021 11:15:52 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ptillet/torch-blocksparse/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ptillet/torch-blocksparse",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ptillet/torch-blocksparse/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8405210537621255
      ],
      "excerpt": "Softmax: SPARSE = Softmax(SPARSE) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ptillet/torch-blocksparse/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'/ Copyright 2019-2020 Philippe Tillet\\n \\n Permission is hereby granted, free of charge, to any person obtaining \\n a copy of this software and associated documentation files \\n (the \"Software\"), to deal in the Software without restriction, \\n including without limitation the rights to use, copy, modify, merge, \\n publish, distribute, sublicense, and/or sell copies of the Software, \\n and to permit persons to whom the Software is furnished to do so, \\n subject to the following conditions:\\n \\n The above copyright notice and this permission notice shall be \\n included in all copies or substantial portions of the Software.\\n \\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n*/'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Torch-Blocksparse",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "torch-blocksparse",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ptillet",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ptillet/torch-blocksparse/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 99,
      "date": "Sun, 26 Dec 2021 11:15:52 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nimport torch\nimport torch_blocksparse\n\n#: Z: non-sparse batch dimension\n#: H: sparse batch dimension\n#: M: row dimension\n#: N: column dimension\nZ, H, M, N, K = 4, 2, 256, 512, 384\na = torch.rand((Z, H, M, K), dtype=torch.float32).cuda()\nb = torch.rand((Z, H, K, N), dtype=torch.float32).cuda()\n#: create sparsity layout\nblock = 16\nlayout = torch.randint(0, 2, (H, M//block, N//block))\n#: create object for Sparse = trans(Dense) x Dense (sdd)\n#: some overhead there as it pre-computes look-up tables \n#: internally needed by GPU kernels\ndot = torch_blocksparse.MatMul(layout, block, 'sdd', trans_a=True, trans_b=False)\nc = dot(a, b)\n#: create object for Sparse = softmax(Sparse)\nsoftmax = torch_blocksparse.Softmax(layout, block)\nd = softmax(c)\n```",
      "technique": "Header extraction"
    }
  ]
}