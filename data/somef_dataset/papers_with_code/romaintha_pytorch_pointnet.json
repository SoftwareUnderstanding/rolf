{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1612.00593"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8839401395062607
      ],
      "excerpt": "Reference: \"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation\", Qi et al \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/romaintha/pytorch_pointnet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-26T07:00:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-30T03:25:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9608186859408615,
        0.9129161084303803
      ],
      "excerpt": "A Pytorch implementation of the PointNet network. \nReference: \"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation\", Qi et al \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9188266734589491,
        0.8948836163044956,
        0.860059181823877
      ],
      "excerpt": "Only the classification task is avialable. \n  * Classification: with only 50 points per cloud, \n   Pretrained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9020139768548977
      ],
      "excerpt": "* dataset: is one of the available datasets (e.g. shapenet) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9572901186940459,
        0.9024098679033982,
        0.8928731568020443,
        0.8630344096383409,
        0.9745543387477635,
        0.9322374189845802
      ],
      "excerpt": "* number_of_points: is the amount of points per cloud \n* batch_size: is the batch size  \n* epochs: is the number of training epochs \n* learning_rate: is the optimizer learning rate \n* number_of_workers: is the number of workers used by the data loader \n* model_checkpoint: is the path to a checkpoint that is loaded  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9020139768548977,
        0.9322374189845802,
        0.844852520533508
      ],
      "excerpt": "* dataset: is one of the available datasets (e.g. shapenet) \n* model_checkpoint: is the path to a checkpoint that is loaded  \nbefore the inference begins. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Pytorch implementation of the PointNet netowrk",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/romaintha/pytorch_pointnet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Fri, 24 Dec 2021 11:20:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/romaintha/pytorch_pointnet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "romaintha/pytorch_pointnet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install the dependencies using Conda:\n```\nconda create --name pytorch_pointnet --file spec-file.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8388427373050786
      ],
      "excerpt": "shapenet: The dataset can be downloaded  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8786035917654317,
        0.8786035917654317,
        0.8296023860959566,
        0.9055841148575435,
        0.9055841148575435
      ],
      "excerpt": "<img src=\"assets/shapenet/classification/loss_plot.png\" width=\"320\" height=\"240\"> \n<img src=\"assets/shapenet/classification/accuracy_plot.png\"  width=\"320\" height=\"240\"> \n  * Segmentation: Pretrained model \n<img src=\"assets/shapenet/segmentation/loss_plot.png\" width=\"320\" height=\"240\"> \n<img src=\"assets/shapenet/segmentation/accuracy_plot.png\"  width=\"320\" height=\"240\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282633617843045,
        0.8786035917654317,
        0.8786035917654317
      ],
      "excerpt": "   Pretrained model \n<img src=\"assets/mnist/classification/loss_plot.png\" width=\"320\" height=\"240\"> \n<img src=\"assets/mnist/classification/accuracy_plot.png\"  width=\"320\" height=\"240\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9095442404934961
      ],
      "excerpt": "python train.py dataset dataset_folder task output_folder  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8898687800591971
      ],
      "excerpt": "python infer.py dataset model_checkpoint point_cloud_file task \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/romaintha/pytorch_pointnet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Romain Thalineau\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pytorch PointNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch_pointnet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "romaintha",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/romaintha/pytorch_pointnet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Fri, 24 Dec 2021 11:20:04 GMT"
    },
    "technique": "GitHub API"
  }
}