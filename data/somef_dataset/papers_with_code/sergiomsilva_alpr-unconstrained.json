{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sergiomsilva/alpr-unconstrained",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-16T18:50:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T13:13:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository contains the author's implementation of ECCV 2018 paper \"License Plate Detection and Recognition in Unconstrained Scenarios\".\n\n* Paper webpage: http://sergiomsilva.com/pubs/alpr-unconstrained/\n\nIf you use results produced by our code in any publication, please cite our paper:\n\n```\n@INPROCEEDINGS{silva2018a,\n  author={S. M. Silva and C. R. Jung}, \n  booktitle={2018 European Conference on Computer Vision (ECCV)}, \n  title={License Plate Detection and Recognition in Unconstrained Scenarios}, \n  year={2018}, \n  pages={580-596}, \n  doi={10.1007/978-3-030-01258-8_36}, \n  month={Sep},}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "License Plate Detection and Recognition in Unconstrained Scenarios",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "After building the Darknet framework, you must execute the \"get-networks.sh\" script. This will download all the trained models:\n\n```shellscript\n$ bash get-networks.sh\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sergiomsilva/alpr-unconstrained/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 557,
      "date": "Thu, 23 Dec 2021 00:44:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sergiomsilva/alpr-unconstrained/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sergiomsilva/alpr-unconstrained",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/get-networks.sh",
      "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/run.sh",
      "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/darknet/scripts/dice_label.sh",
      "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/darknet/scripts/gen_tactic.sh",
      "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/darknet/scripts/get_coco_dataset.sh",
      "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/darknet/scripts/imagenet_label.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8082897543982831
      ],
      "excerpt": "The following command can be used to train the network from scratch considering the data inside the train-detector folder: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8919958595477101
      ],
      "excerpt": "$ mkdir models \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8345649929256214
      ],
      "excerpt": "To train the LP detector network from scratch, or fine-tuning it for new samples, you can use the train-detector.py script. In folder samples/train-detector there are 3 annotated samples which are used just for demonstration purposes. To correctly reproduce our experiments, this folder must be filled with all the annotations provided in the training set, and their respective images transferred from the original datasets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9380642967121573
      ],
      "excerpt": "$ python train-detector.py --model models/eccv-model-scracth --name my-trained-model --train-dir samples/train-detector --output-dir models/my-trained-model/ -op Adam -lr .001 -its 300000 -bs 64 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sergiomsilva/alpr-unconstrained/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C",
      "Cuda",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/sergiomsilva/alpr-unconstrained/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                  YOLO LICENSE\\n                             Version 2, July 29 2016\\n\\nTHIS SOFTWARE LICENSE IS PROVIDED \"ALL CAPS\" SO THAT YOU KNOW IT IS SUPER\\nSERIOUS AND YOU DON\\'T MESS AROUND WITH COPYRIGHT LAW BECAUSE YOU WILL GET IN\\nTROUBLE HERE ARE SOME OTHER BUZZWORDS COMMONLY IN THESE THINGS WARRANTIES\\nLIABILITY CONTRACT TORT LIABLE CLAIMS RESTRICTION MERCHANTABILITY. NOW HERE\\'S\\nTHE REAL LICENSE:\\n\\n0. Darknet is public domain.\\n1. Do whatever you want with it.\\n2. Stop emailing me about it!\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ALPR in Unscontrained Scenarios",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "alpr-unconstrained",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sergiomsilva",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sergiomsilva/alpr-unconstrained/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In order to easily run the code, you must have installed the Keras framework with TensorFlow backend. The Darknet framework is self-contained in the \"darknet\" folder and must be compiled before running the tests. To build Darknet just type \"make\" in \"darknet\" folder:\n\n```shellscript\n$ cd darknet && make\n```\n\n**The current version was tested in an Ubuntu 16.04 machine, with Keras 2.2.4, TensorFlow 1.5.0, OpenCV 2.4.9, NumPy 1.14 and Python 2.7.**\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Use the script \"run.sh\" to run our ALPR approach. It requires 3 arguments:\n* __Input directory (-i):__ should contain at least 1 image in JPG or PNG format;\n* __Output directory (-o):__ during the recognition process, many temporary files will be generated inside this directory and erased in the end. The remaining files will be related to the automatic annotated image;\n* __CSV file (-c):__ specify an output CSV file.\n\n```shellscript\n$ bash get-networks.sh && bash run.sh -i samples/test -o /tmp/output -c /tmp/output/results.csv\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1464,
      "date": "Thu, 23 Dec 2021 00:44:42 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "license-plate-recognition",
      "plate-detection",
      "tensorflow",
      "darknet",
      "python",
      "alpr"
    ],
    "technique": "GitHub API"
  }
}