{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{higherordercrf_ECCV2016,\n    author = {Anurag Arnab and Sadeep Jayasumana and Shuai Zheng and Philip H. S. Torr},\n    title  = {Higher Order Conditional Random Fields in Deep Neural Networks},\n    booktitle = {European Conference on Computer Vision (ECCV)},\n    year   = {2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{crfasrnn_ICCV2015,\n    author = {Shuai Zheng and Sadeep Jayasumana and Bernardino Romera-Paredes and Vibhav Vineet and\n    Zhizhong Su and Dalong Du and Chang Huang and Philip H. S. Torr},\n    title  = {Conditional Random Fields as Recurrent Neural Networks},\n    booktitle = {International Conference on Computer Vision (ICCV)},\n    year   = {2015}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9011231954491661
      ],
      "excerpt": "<b>Live demo:</b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; http://crfasrnn.torr.vision <br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9625923568277878
      ],
      "excerpt": "Shuai Zheng, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9990760574253486,
        0.999790414089633,
        0.9635464551225227,
        0.9999994106744441,
        0.9954488832581693
      ],
      "excerpt": "If you use this code/model for your research, please cite the following papers: \n    author = {Anurag Arnab and Sadeep Jayasumana and Shuai Zheng and Philip H. S. Torr}, \n    title  = {Higher Order Conditional Random Fields in Deep Neural Networks}, \n    booktitle = {European Conference on Computer Vision (ECCV)}, \n    year   = {2016} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/torrvision/crfasrnn",
    "technique": "GitHub API"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributors\nCRF-RNN specific code in this repository was written by:\n\nSadeep Jayasumana (sadeep.jay@gmail.com)<br/>\nBernardino Romera-Paredes (bernardino.romeraparedes@eng.ox.ac.uk)<br/>\nShuai Zheng (kylezheng04@gmail.com)<br/>\nZhizhong Su (suzhizhong@baidu.com)\n\nOur code uses the Permutohedral lattice library, and the Caffe future version.\nWe also used parts of the Dense CRF code while implementing this.\nPermutohedral lattice library (BSD license) is from Andrew Adams, Jongmin Baek, Abe Davis. Fast High-Dimensional Filtering Using the \nPermutohedral Lattice. Eurographics 2010.\nDenseCRF library is from from Philipp Krahenbuhl and Vladlen Koltun. Efficient Inference in Fully Connected CRFs with Gaussian Edge Potentials. \nNIPS 2011.\nOur software is built on top of the Caffe software library. Below is a copy of its CONTRIBUTORS.md file.\nPlease note that, due to technical difficulties, we could not keep the history of the original contributors to Caffe code in our git repository.\nPlease refer to the original Caffe git repository for this purpose.\n\nCaffe is developed by a core set of BVLC members and the open-source community.\nWe thank all of our contributors!\nFor the detailed history of contributions of a given file, try\ngit blame file\n\nto see line-by-line credits and\ngit log --follow file\n\nto see the change log even across renames and rewrites.\nPlease refer to the acknowledgements on the Caffe site for further details.\nCopyright is held by the original contributor according to the versioning history; see LICENSE.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2015-09-30T19:47:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T01:57:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9925565849653756
      ],
      "excerpt": "This package contains code for the \"CRF-RNN\" semantic image segmentation method, published in the ICCV 2015 paper Conditional Random Fields as Recurrent Neural Networks. This paper was initially described in an arXiv tech report. The online demonstration based on this code won the Best Demo Prize at ICCV 2015. Our software is built on top of the Caffe deep learning library. The current version was developed by: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9809216255934685,
        0.9840768380430821,
        0.9524896291747743
      ],
      "excerpt": "Our work allows computers to recognize objects in images, what is distinctive about our work is that we also recover the 2D outline of objects. Currently we have trained this model to recognize 20 classes. This software allows you to test our algorithm on your own images \u2013 have a try and see if you can fool it, if you get some good examples you can send them to us. \nWhy are we doing this? This work is part of a project to build augmented reality glasses for the partially sighted. Please read about it here: smart-specs.  \nFor demo and more information about CRF-RNN please visit the project website: http://crfasrnn.torr.vision. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9438603547883516
      ],
      "excerpt": "That's it! Enjoy our software! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8601193931454826
      ],
      "excerpt": "You can also find a part of our model in MatConvNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8669681222157103
      ],
      "excerpt": "If you would like to train CRF-RNN on other datasets, please follow the piecewise training described in our paper. In short, you should first train a strong pixel-wise CNN model. After this, you could plug our CRF-RNN layer into it by adding the MultiStageMeanfieldLayer to the prototxt file. You should then be able to train the CNN and CRF-RNN parts jointly end-to-end. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8422806557697049
      ],
      "excerpt": "We would like to thank martinkersner and MasazI for providing Python training scripts for CRF-RNN.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8573976206346728
      ],
      "excerpt": "It is possible to integrate the CRF-RNN code into upstream Caffe. However, due to the change of the crop layer, the caffemodel we provided might require extra training to provide the same accuracy. mtourne kindly provided a version that merged the code with upstream caffe.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository contains the source code for the semantic image segmentation method described in the ICCV 2015 paper: Conditional Random Fields as Recurrent Neural Networks. http://crfasrnn.torr.vision/",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/torrvision/crfasrnn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 467,
      "date": "Fri, 24 Dec 2021 12:45:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/torrvision/crfasrnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "torrvision/crfasrnn",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/torrvision/crfasrnn/master/matlab-scripts/download_trained_model.sh",
      "https://raw.githubusercontent.com/torrvision/crfasrnn/master/python-scripts/download_trained_model.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First, clone the project by running:\n```\ngit clone --recursive https://github.com/torrvision/crfasrnn.git\n```\n\nYou need to compile the modified Caffe library in this repository. Instructions for Ubuntu 14.04 are included below. You can also consult the generic [Caffe installation guide](http://caffe.berkeleyvision.org/installation.html) for further help.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9734742215249252,
        0.9168854364873537
      ],
      "excerpt": "<b>PyTorch version:</b> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://github.com/sadeepj/crfasrnn_pytorch<br/> \n<b>Tensorflow/Keras version:</b> http://github.com/sadeepj/crfasrnn_keras<br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.939440460653573,
        0.97831795211171,
        0.9977999655647307,
        0.8912385325284884
      ],
      "excerpt": "Install a BLAS library such as ATLAS, OpenBLAS or MKL. To install BLAS: \nsudo apt-get install libatlas-base-dev \nInstall Anaconda Python distribution or install the default Python distribution with numpy, scipy, etc. \nSet the path correctly in the Makefile.config. You can rename the Makefile.config.example to Makefile.config, as most common parts are filled already. You may need to change it a bit according to your environment. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9035225211469803,
        0.9690892253761142,
        0.8474895321345809,
        0.9752325549487304
      ],
      "excerpt": "If there are no error messages, you can then compile and install the Python and Matlab wrappers: \nTo install the MATLAB wrapper (optional): \nmake matcaffe \nTo install the Python wrapper (optional): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864,
        0.814596520913759
      ],
      "excerpt": "sh download_trained_model.sh \nAlternatively, you can also get the model by directly clicking the link in python-scripts/README.md. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864,
        0.8212018311695325
      ],
      "excerpt": "sh download_trained_model.sh \nAlternatively, you can also get the model by directly clicking the link in matlab-scripts/README.md. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9625863390596938
      ],
      "excerpt": "mtourne upstream version with CRFRNN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.907319936543941
      ],
      "excerpt": "hyenal's GPU crf-rnn \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8234392633183911,
        0.9246227682586091
      ],
      "excerpt": "To run the demo, execute: \npython crfasrnn_demo.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8781816824985138
      ],
      "excerpt": "To use your own images, replace \"input.jpg\" in the crfasrnn_demo.py file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184405629429561
      ],
      "excerpt": "To use your own images, just replace \"input.jpg\" in the crfrnn_demo.m file. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/torrvision/crfasrnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/torrvision/crfasrnn/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2015, the University of Oxford\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\\nAppendix:\\nCRF-RNN feature in Caffe is implemented for the paper: Shuai Zheng, Sadeep Jayasumana, Bernardino Romera-Paredes, Vibhav Vineet, Zhizhong Su, Dalong Du, Chang Huang, Philip H. S. Torr. Conditional Random Fields as Recurrent Neural Networks. IEEE ICCV 2015.\\n\\nShuai Zheng, Sadeep Jayasumana, Bernardino Romera-Paredes, and Philip H. S. Torr are with University of Oxford. Vibhav Vineet did this work when he was with the University of Oxford, he is now with the Stanford University. Zhizhong Su, Dalong Du, Chang Huang are with the Baidu Institute of Deep Learning (IDL).\\n\\nCRF-RNN uses the Permutohedral lattice library, the DenseCRF library and the Caffe future version.\\n\\nPermutohedral lattice library (BSD license) is from Andrew Adams, Jongmin Baek, Abe Davis. Fast High-Dimensional Filtering Using the Permutohedral Lattice. Eurographics 2010. DenseCRF library from Philipp Krahenbuhl and Vladlen Koltun. Efficient Inference in Fully Connected CRFs with Gaussian Edge Potentials. NIPS 2011.\\n\\nFor more information about CRF-RNN please vist the project website http://crfasrnn.torr.vision. Contact: crfasrnn@gmail.com\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CRF-RNN for Semantic Image Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "crfasrnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "torrvision",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/torrvision/crfasrnn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "bittnt",
        "body": "This is the  beta (better) version of crf-rnn code based on caffe. Adding Jon Long's future version and its support.\n",
        "dateCreated": "2016-04-28T10:38:37Z",
        "datePublished": "2016-05-09T22:52:02Z",
        "html_url": "https://github.com/torrvision/crfasrnn/releases/tag/0.2",
        "name": "This is a beta (better) version of crf-rnn code based on caffe.",
        "tag_name": "0.2",
        "tarball_url": "https://api.github.com/repos/torrvision/crfasrnn/tarball/0.2",
        "url": "https://api.github.com/repos/torrvision/crfasrnn/releases/3189021",
        "zipball_url": "https://api.github.com/repos/torrvision/crfasrnn/zipball/0.2"
      },
      {
        "authorType": "User",
        "author_name": "bittnt",
        "body": "",
        "dateCreated": "2015-09-30T19:53:31Z",
        "datePublished": "2015-10-01T13:44:07Z",
        "html_url": "https://github.com/torrvision/crfasrnn/releases/tag/0.1",
        "name": "This is an initial version of crf-rnn code based on caffe.",
        "tag_name": "0.1",
        "tarball_url": "https://api.github.com/repos/torrvision/crfasrnn/tarball/0.1",
        "url": "https://api.github.com/repos/torrvision/crfasrnn/releases/1896534",
        "zipball_url": "https://api.github.com/repos/torrvision/crfasrnn/zipball/0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nsudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\nsudo apt-get install --no-install-recommends libboost-all-dev\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "MATLAB and Python scripts for running the demo are available in the ``matlab-scripts`` and ``python-scripts`` directories, respectively. Both of these scripts do the same thing - you can choose either.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1325,
      "date": "Fri, 24 Dec 2021 12:45:50 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "CRF-RNN has been developed as a custom Caffe layer named MultiStageMeanfieldLayer. Usage of this layer in the model definition prototxt file looks the following. Check the `matlab-scripts` or the `python-scripts` folder for more detailed examples.\n```\n#: This is part of FCN, coarse is a blob coming from FCN\nlayer { type: 'Crop' name: 'crop' bottom: 'bigscore' bottom: 'data' top: 'coarse' }\n\n#: This layer is used to split the output of FCN into two. This is required by CRF-RNN.\nlayer { type: 'Split' name: 'splitting'\n  bottom: 'coarse' top: 'unary' top: 'Q0'\n}\n\nlayer {\n  name: \"inference1\" #: Keep the name \"inference1\" to load the trained parameters from our caffemodel.\n  type: \"MultiStageMeanfield\" #: Type of this layer\n  bottom: \"unary\" #: Unary input from FCN\n  bottom: \"Q0\" #: A copy of the unary input from FCN\n  bottom: \"data\" #: Input image\n  top: \"pred\" #: Output of CRF-RNN\n  param {\n    lr_mult: 10000 #: learning rate for W_G\n  }\n  param {\n    lr_mult: 10000 #: learning rate for W_B\n  }\n  param {\n    lr_mult: 1000 #: learning rate for compatiblity transform matrix\n  }\n  multi_stage_meanfield_param {\n    num_iterations: 10 #: Number of iterations for CRF-RNN\n    compatibility_mode: POTTS #: Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.\n    threshold: 2\n    theta_alpha: 160\n    theta_beta: 3\n    theta_gamma: 3\n    spatial_filter_weight: 3\n    bilateral_filter_weight: 5\n  }\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Install the correct CUDA driver and its SDK. Download CUDA SDK from Nvidia website. \n\nYou might need to blacklist some modules so that they do not interfere with the driver installation. You also need to uninstall your default Nvidia Driver first.\n```\nsudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev\n``` \nopen `/etc/modprobe.d/blacklist.conf` and add:\n```\nblacklist amd76x_edac\nblacklist vga16fb\nblacklist nouveau\nblacklist rivafb\nblacklist nvidiafb\nblacklist rivatv\n```\n```\nsudo apt-get remove --purge nvidia*\n```\n\nWhen you restart your PC, before logging in, try \"Ctrl + Alt + F1\" to switch to a text-based login. Try:\n```\nsudo service lightdm stop\nchmod +x cuda*.run\nsudo ./cuda*.run\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Install MATLAB using a standard distribution.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "MATLAB and Python scripts for running the demo are available in the ``matlab-scripts`` and ``python-scripts`` directories, respectively. Both of these scripts do the same thing - you can choose either.\n\n",
      "technique": "Header extraction"
    }
  ]
}