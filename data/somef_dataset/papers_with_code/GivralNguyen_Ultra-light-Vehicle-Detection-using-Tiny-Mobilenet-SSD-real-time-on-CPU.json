{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1711.07767"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8323450812953155
      ],
      "excerpt": "The extractor is used: tiny Mobilenet-V2 + RFB(https://arxiv.org/abs/1711.07767) component \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8017608798623265
      ],
      "excerpt": "Multi-scale feature maps for detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768594116348547
      ],
      "excerpt": "Regression head (location) and  classification header (classification) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9572487334023723
      ],
      "excerpt": "Feature maps: 40-30, 20-15, 10-8, 5-4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "base_channel: Ver1(rfb_tiny_mb2_ssd_c64): 32, Ver2(rfb_tiny_mb2_ssd_c32): 64 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "Estimated Total Size (MB): 146.10 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GivralNguyen/Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-18T09:54:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T03:40:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8220438980816265
      ],
      "excerpt": "The tiny Mobilenet-V2 is customed Mobilenet-V2 (vertical, horizontal). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9573381513532172,
        0.9831623159757926,
        0.8971654089588602,
        0.9851215270969746
      ],
      "excerpt": "The SSD architecture uses multiple layers (multi-scale feature maps) to detect objects independently. As CNN reduces the spatial dimension gradually, the resolution of the feature maps also decrease. SSD uses lower resolution layers to detect larger scale objects and vice versa. For example, the 4\u00d7 4 feature maps are used for larger scale object. \nBecause the model vehicle detection is  used for surveillance camera (detect small, medium objects) so that the small feature maps do not contains lots of information. Thus, this model is eliminated 2 last feature maps \nTo the person dection use feature maps: 40-30, 20-15, 10-8, 5-4 (width-height). The resolution of feature map depending on the the input of network. \nNote that: The high resolution of input network is not synonymous with the good results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9393216658496709,
        0.8861562915181865,
        0.9690386225526358
      ],
      "excerpt": "The anchor boxes are defined in [] based on the COCO, VOC dataset with many objects as well as ratio, size... \nIn [], the author proposed formula to generate anchors boxes. However, this formula is designed for many object catagory , size... For instance, the proposed scale factor in [] are [0.2, 0.9] which can be suitable for COCO dataset. However, this factor does not give good results... As mentioned above, the objects in surveillance applivation distribute small, medium and rarely large. Therefor the scale should have distribution at smaller than 0.5 \nRatio: the ration between height/width of objects. statistics to get this factor. Code is available here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8680464525986882
      ],
      "excerpt": "Optimizer: SGD, with weight decay: 5e-4, batch size: 32, Number of echop: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "Data augmentation: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8923543359779256
      ],
      "excerpt": "|  STT  |         Model         | Confidence | DT_Box | AP(car) | MR(car) | AP(bus) | MR(bus) | AP(van) | MR(van) |  mAP   | mFPPI | Processing time | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Real time vehicle detection (30 FPS on intel i7-8700 CPU) using Tiny-Mobilenet V2, SSD and Receptor Field Block.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GivralNguyen/Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 06:03:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GivralNguyen/Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "GivralNguyen/Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8714366329182976
      ],
      "excerpt": "Anchor boxes: ./model/config/rfb_tiny_mb_ssd_config.py and ./model/rfb_tiny_mb_ssd.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8601854703596055
      ],
      "excerpt": "python train.py, type_network rfb_tiny_mb2_ssd, setting base_channel = 64 with ver-1 or base_channel = 32 with ver2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8164080908172191
      ],
      "excerpt": "Scale (box size): (10, 16, 24), (32, 48), (64, 96), (128, 192, 256) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934745846565956
      ],
      "excerpt": "Total params: 4,332,748 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8567817908747932
      ],
      "excerpt": "Total FLOPs: 1,426,865,400 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309981089340904
      ],
      "excerpt": "Estimated Total Size (MB): 146.10 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GivralNguyen/Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Ultra-light Vehicle Detection using Tiny-Mobilenet + SSD (real time on CPU)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "GivralNguyen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GivralNguyen/Ultra-light-Vehicle-Detection-using-Tiny-Mobilenet-SSD-real-time-on-CPU/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* anaconda\n* Python-3.6\n* Pytorch-1.2\n* Torchvision-0.4\n* opencv-python-\n* pandas\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Run test/detect_imgs.py. Change the corresponding argument . If ModuleNotFoundError: No module named 'model', change the path to sys.path.append() to current TinyMBSSD_Vehicle/ folder.\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Mon, 27 Dec 2021 06:03:30 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "vehicle-detection",
      "realtime",
      "mobilenetv2",
      "mobilenet-ssd",
      "pytorch",
      "edge-device"
    ],
    "technique": "GitHub API"
  }
}