{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2010.14819"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\r\n@inproceedings{ghostnet,\r\n  title={GhostNet: More Features from Cheap Operations},\r\n  author={Han, Kai and Wang, Yunhe and Tian, Qi and Guo, Jianyuan and Xu, Chunjing and Xu, Chang},\r\n  booktitle={CVPR},\r\n  year={2020}\r\n}\r\n@inproceedings{tinynet,\r\n  title={Model Rubik\u2019s Cube: Twisting Resolution, Depth and Width for TinyNets},\r\n  author={Han, Kai and Wang, Yunhe and Zhang, Qiulin and Zhang, Wei and Xu, Chunjing and Zhang, Tong},\r\n  booktitle={NeurIPS},\r\n  year={2020}\r\n}\r\n@inproceedings{tnt,\r\n  title={Transformer in transformer},\r\n  author={Han, Kai and Xiao, An and Wu, Enhua and Guo, Jianyuan and Xu, Chunjing and Wang, Yunhe},\r\n  booktitle={NeurIPS},\r\n  year={2021}\r\n}\r\n@inproceedings{legonet,\r\n    title={LegoNet: Efficient Convolutional Neural Networks with Lego Filters},\r\n    author={Yang, Zhaohui and Wang, Yunhe and Liu, Chuanjian and Chen, Hanting and Xu, Chunjing and Shi, Boxin and Xu, Chao and Xu, Chang},\r\n    booktitle={ICML},\r\n    year={2019}\r\n  }\r\n@inproceedings{wang2018learning,\r\n  title={Learning versatile filters for efficient convolutional neural networks},\r\n  author={Wang, Yunhe and Xu, Chang and Chunjing, XU and Xu, Chao and Tao, Dacheng},\r\n  booktitle={NeurIPS},\r\n  year={2018}\r\n}\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{legonet,\n    title={LegoNet: Efficient Convolutional Neural Networks with Lego Filters},\n    author={Yang, Zhaohui and Wang, Yunhe and Liu, Chuanjian and Chen, Hanting and Xu, Chunjing and Shi, Boxin and Xu, Chao and Xu, Chang},\n    booktitle={ICML},\n    year={2019}\n  }\n@inproceedings{wang2018learning,\n  title={Learning versatile filters for efficient convolutional neural networks},\n  author={Wang, Yunhe and Xu, Chang and Chunjing, XU and Xu, Chao and Tao, Dacheng},\n  booktitle={NeurIPS},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{tnt,\n  title={Transformer in transformer},\n  author={Han, Kai and Xiao, An and Wu, Enhua and Guo, Jianyuan and Xu, Chunjing and Wang, Yunhe},\n  booktitle={NeurIPS},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{tinynet,\n  title={Model Rubik\u2019s Cube: Twisting Resolution, Depth and Width for TinyNets},\n  author={Han, Kai and Wang, Yunhe and Zhang, Qiulin and Zhang, Wei and Xu, Chunjing and Zhang, Tong},\n  booktitle={NeurIPS},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{ghostnet,\n  title={GhostNet: More Features from Cheap Operations},\n  author={Han, Kai and Wang, Yunhe and Tian, Qi and Guo, Jianyuan and Xu, Chunjing and Xu, Chang},\n  booktitle={CVPR},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9104388306336967
      ],
      "excerpt": "- Citation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.984866405751252
      ],
      "excerpt": "2020/10/31 GhostNet+TinyNet achieves better performance. See details in our NeurIPS 2020 paper: arXiv. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9017485044739788
      ],
      "excerpt": "This repo provides the implementation of paper Learning Versatile Filters for Efficient Convolutional Neural Networks (NeurIPS 2018) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9600732982240069
      ],
      "excerpt": "Human pose estimation: code \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huawei-noah/CV-Backbones",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-16T14:21:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T05:47:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9328077692506023,
        0.9409979304752827
      ],
      "excerpt": "2021/09/28 The paper of TNT (Transformer in Transformer) is accepted by NeurIPS 2021. \n2021/09/18 The extended version of Versatile Filters is accepted by T-PAMI. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9730631990068896,
        0.8240378358497463
      ],
      "excerpt": "2021/08/26 The codes of LegoNet and Versatile Filters has been merged into this repo. \n2021/06/15 The code of TNT (Transformer in Transformer) has been released in this repo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9695908903498097,
        0.9411282167145283,
        0.9607932159372289,
        0.9698402946310271,
        0.810788235914357,
        0.9601954268483366,
        0.9607932159372289,
        0.9157560383874677,
        0.9775718641048874
      ],
      "excerpt": "This repo provides GhostNet pretrained models and inference code for TensorFlow and PyTorch: \n- Tensorflow: ./ghostnet_tensorflow with pretrained model. \n- PyTorch: ./ghostnet_pytorch with pretrained model. \n- We also opensource code on MindSpore Hub and MindSpore Model Zoo. \nFor training, please refer to tinynet or timm. \nThis repo provides TinyNet pretrained models and inference code for PyTorch: \n- PyTorch: ./tinynet_pytorch with pretrained model. \n- We also opensource training code on MindSpore Model Zoo. \nThis repo provides training code and pretrained models of TNT (Transformer in Transformer) for PyTorch: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9597401269067636,
        0.9594529385064554
      ],
      "excerpt": "- We also opensource code on MindSpore Model Zoo. \nThis repo provides the implementation of paper LegoNet: Efficient Convolutional Neural Networks with Lego Filters (ICML 2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8941776354732716
      ],
      "excerpt": "This repo provides the implementation of paper Learning Versatile Filters for Efficient Convolutional Neural Networks (NeurIPS 2018) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950017439150321,
        0.9501028407290499
      ],
      "excerpt": "This repo provides the TensorFlow/PyTorch code of GhostNet. Other versions and applications can be found in the following: \ntimm: code with pretrained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9204124209208573
      ],
      "excerpt": "YOLO with GhostNet backbone: code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "CV backbones including GhostNet, TinyNet and TNT, developed by Huawei Noah's Ark Lab.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huawei-noah/CV-backbones/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 360,
      "date": "Tue, 28 Dec 2021 23:04:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huawei-noah/CV-Backbones/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "huawei-noah/CV-Backbones",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "- PyTorch: ./tnt_pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "- PyTorch: ./legonet_pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "- PyTorch: ./versatile_filters. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8471745040947904
      ],
      "excerpt": "- Tensorflow: ./ghostnet_tensorflow with pretrained model. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huawei-noah/CV-Backbones/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CV Backbones",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CV-Backbones",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "huawei-noah",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huawei-noah/CV-Backbones/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "iamhankai",
        "body": "Put the checkpoints of TinyNet here.",
        "dateCreated": "2021-08-31T13:25:09Z",
        "datePublished": "2021-08-31T14:39:10Z",
        "html_url": "https://github.com/huawei-noah/CV-Backbones/releases/tag/v1.2.0",
        "name": "tinynet-pth",
        "tag_name": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/tarball/v1.2.0",
        "url": "https://api.github.com/repos/huawei-noah/CV-Backbones/releases/48746405",
        "zipball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/zipball/v1.2.0"
      },
      {
        "authorType": "User",
        "author_name": "iamhankai",
        "body": "",
        "dateCreated": "2021-04-07T13:34:10Z",
        "datePublished": "2021-04-11T12:19:58Z",
        "html_url": "https://github.com/huawei-noah/CV-Backbones/releases/tag/ghostnet_pth",
        "name": "ghostnet_pth",
        "tag_name": "ghostnet_pth",
        "tarball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/tarball/ghostnet_pth",
        "url": "https://api.github.com/repos/huawei-noah/CV-Backbones/releases/41239069",
        "zipball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/zipball/ghostnet_pth"
      },
      {
        "authorType": "User",
        "author_name": "iamhankai",
        "body": "This version contains GhostNet & TinyNet codes.",
        "dateCreated": "2021-03-22T09:01:57Z",
        "datePublished": "2021-04-02T01:58:56Z",
        "html_url": "https://github.com/huawei-noah/CV-Backbones/releases/tag/v1.1.0",
        "name": "GhostNet, TinyNet",
        "tag_name": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/tarball/v1.1.0",
        "url": "https://api.github.com/repos/huawei-noah/CV-Backbones/releases/40854955",
        "zipball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/zipball/v1.1.0"
      },
      {
        "authorType": "User",
        "author_name": "iamhankai",
        "body": "This version contains GhostNet-1.0x pretrained on ImageNet dataset. Both PyTorch and TensorFlow versions are included. For more details, pelase refer to the paper \"GhostNet: More Features from Cheap Operations. CVPR 2020\" on [arXiv](https://arxiv.org/abs/1911.11907).",
        "dateCreated": "2020-06-22T06:38:07Z",
        "datePublished": "2020-09-17T07:38:15Z",
        "html_url": "https://github.com/huawei-noah/CV-Backbones/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/tarball/v1.0.0",
        "url": "https://api.github.com/repos/huawei-noah/CV-Backbones/releases/31450013",
        "zipball_url": "https://api.github.com/repos/huawei-noah/CV-Backbones/zipball/v1.0.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1754,
      "date": "Tue, 28 Dec 2021 23:04:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "convolutional-neural-networks",
      "efficient-inference",
      "imagenet",
      "model-compression",
      "cvpr",
      "tensorflow",
      "pytorch",
      "ghostnet",
      "transformer",
      "pretrained-models",
      "vision-transformer"
    ],
    "technique": "GitHub API"
  }
}