{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repo is an adaptation from several other exisitng works.\n- https://github.com/akamaster/pytorch_resnet_cifar10\n- https://github.com/kuangliu/pytorch-cifar\n- https://github.com/facebookresearch/video-nonlocal-net\n- https://github.com/AlexHex7/Non-local_pytorch\n- https://github.com/kenshohara/3D-ResNets-PyTorch\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tea1528/Non-Local-NN-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-05T19:28:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T13:48:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9457679157441925,
        0.9726366022673996
      ],
      "excerpt": "This repository contains my implementation of Non-Local Neural Netowrks (CVPR 2018). \nTo understand more about the structure of this paper, you may refer to this slide and video which is in Korean. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8734315402179476,
        0.8928549983845875,
        0.9846038253613723
      ],
      "excerpt": "The original paper used ResNet-50 as its backbone structure for conducting experiment on video datasets such as Kinetics, Charades. \nAs an inital study, I adopted ResNet-56 strucutre for CIFAR-10 dataset which is a 2D classification. The architecture is implemented in models/resnet2D.py. \nOriginal baseline model from the paper called C2D uses ResNet-50 as its backbone and 1 non-local block after the 4th residual block. This structure is implemented in models/resnet3D.py. The detail of the architecture is shown in the below figure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9841142504654373
      ],
      "excerpt": "The four different pairwise functions discussed in the paper are implemented accordingly in models/non_local.py. You can simply pass one of the operation as an argument. The details of the non-local block is shown in the below figure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9290962813622454
      ],
      "excerpt": "Finally, the original experiment of activity recognition was similarly replicated in 3D_experiment folder. The necessary data preprocessing code was borrowed from https://github.com/kenshohara/3D-ResNets-PyTorch. The training is run without error but I didn't have enough time to compare the performance boost from the addition of non-local block. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955275916366386
      ],
      "excerpt": "The result showed that there wasn't a huge performance boost for image classification task on CIFAR-10. The below graph illustrates the loss curves for two different networks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.917123280995068,
        0.9164492180303994,
        0.9524013123131212
      ],
      "excerpt": "The Top-1 validation accuracy for ResNet-56 without non-local block was 93.97% while the one with non-local block had 93.98% validation accuracy. \nThis could be due to two reasons: 1) the proposed task was mainly for video classification 2) the input size of CIFAR-10 is too small so may not maintain spatial information after the second resnet block. \n[x] Compare the result of baseline model and that of non-local model for CIFAR-10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9822891240974487
      ],
      "excerpt": "[x] Modify the model code to adapt to spatiotemporal settings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of Non-Local Neural Networks (https://arxiv.org/pdf/1711.07971.pdf)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tea1528/Non-Local-NN-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 37,
      "date": "Sat, 25 Dec 2021 07:22:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tea1528/Non-Local-NN-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tea1528/Non-Local-NN-Pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/tea1528/Non-Local-NN-Pytorch/master/run.sh",
      "https://raw.githubusercontent.com/tea1528/Non-Local-NN-Pytorch/master/3D_experiment/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9351188426879874
      ],
      "excerpt": "2) To start training for HMDB51 dataset with C2D, you first need to prepare the HMDB51 dataset as instructed in the 3D_experiment folder. Then, execute run.sh. It seems like use of multiple GPU(s) may be need due to memory issues. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8886388380487679
      ],
      "excerpt": "<img src='figure/Table1.jpg' width=\"60%\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8886388380487679
      ],
      "excerpt": "<img src='figure/Figure2.jpg' width=\"60%\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8038810495856392
      ],
      "excerpt": "1) To start training for CIFAR-10 with ResNet-56, you can simply execute run.sh.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9011029444083546
      ],
      "excerpt": "<img src='figure/resnet56_cifar.jpg' width=\"80%\"></img> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tea1528/Non-Local-NN-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Kensho Hara\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch Implementation of Non-Local Neural Network",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Non-Local-NN-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tea1528",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tea1528/Non-Local-NN-Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 139,
      "date": "Sat, 25 Dec 2021 07:22:56 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "video-recognition"
    ],
    "technique": "GitHub API"
  }
}