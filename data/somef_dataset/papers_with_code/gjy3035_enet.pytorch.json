{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.02147"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gjy3035/enet.pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-01-02T07:18:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T12:50:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.977498729863625,
        0.959944042898511,
        0.9607077727803423
      ],
      "excerpt": "This repository is a PyTorch implementation of ENet: A Deep Neural Network Architecture for Real-Time Semantic Segmentation.  \nThe partial codes are based on  \n- The official Torch code by the authors of the paper; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189760647266562
      ],
      "excerpt": "- The unofficial PyTorch code by vietdoan; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9570171216889919
      ],
      "excerpt": "The best mean IoU of 56.04% on the val set is close to the 58.3% in the paper (58.3% is reported on the test set) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository is a PyTorch implementation of ENet.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gjy3035/enet.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 04:41:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gjy3035/enet.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gjy3035/enet.pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Downloading the [CityScapes dataset](https://www.cityscapes-dataset.com/).\n2. Unzip the ```leftImg8bit_trainvaltest.zip``` and the ```gtFine_trainvaltest.zip``` in a certain folder (```root path```).\n3. Preprocess the dataset: \n\t1). modify the ```root path``` and the ```processed the path``` in ```./script/preprocess.py```;\n\t2). run ```python ./script/preprocess.py```.\n4. Calculate the label weights: ``` python ./script/cal_label_weighting_Enet.py --trainDataPath=your_label_path --num_classes=19```, and repalce the ```__C.TRAIN.LABEL_WEIGHT``` in ```config.py```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8645429650525344
      ],
      "excerpt": "- The unofficial PyTorch code by vietdoan; \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.816710930065879
      ],
      "excerpt": "|   | mean IoU | Model Size| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8653274415061313
      ],
      "excerpt": "modify config.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.9503189345333785
      ],
      "excerpt": "    __C.TRAIN.PRETRAINED_ENCODER = '' #: \npython train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8653274415061313
      ],
      "excerpt": "modify config.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444991257259232,
        0.9503189345333785
      ],
      "excerpt": "    __C.TRAIN.PRETRAINED_ENCODER = './ckpt/encoder_ep_497_mIoU_0.5098.pth' #: Path of the pretrained encoder \npython train.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gjy3035/enet.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ENet.PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "enet.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gjy3035",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gjy3035/enet.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- PyTorch\n- TensorboardX\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Sat, 25 Dec 2021 04:41:02 GMT"
    },
    "technique": "GitHub API"
  }
}