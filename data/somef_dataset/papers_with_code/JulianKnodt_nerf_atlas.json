{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2011.13961",
      "https://arxiv.org/abs/2006.09661",
      "https://arxiv.org/abs/2103.13415",
      "https://arxiv.org/abs/2106.12052"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "                        If > 0, clip gradients (default: 0) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JulianKnodt/nerf_atlas",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-04T06:28:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T09:43:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9978040511622007
      ],
      "excerpt": "A repository which contains NeRF and a bunch of extensions to NeRF. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617528721687172,
        0.968654801247579,
        0.8071530923355255,
        0.8347955313905334,
        0.9175490918841114,
        0.9181401457465853,
        0.9686724287783782
      ],
      "excerpt": "Ne(ural) R(adiance) F(ield)s represent a surface by approximating how much light is blocked at \neach point in space, and the color of the surface that is blocking it. This approximation can be \nused with volumetric rendering to view a surface from new angles. \nThe original paper implements this idea, and demonstrates its capacity for reconstructing a \nsurface or scene from a set of views. It has insanely high quality of reconstruction, but takes \nforever to train, isn't modifiable at all, and takes a stupid amount of memory. In order to \nfix those issues, there are a bunch of different repos which implement single changes to the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9004907910176457,
        0.8597357475415016,
        0.8894900048367318,
        0.943242910754211,
        0.8222524607069335
      ],
      "excerpt": "no projects mix multiple different modifications. This repo is supposed to be a single \nunified interface to many different extensions.  I've implemented a number of other projects, \nbut there are more. Please feel free to contribute any you would like! \nNeRF is similar to projects like COLMAP in that it can perform \nsurface reconstruction from a series of images, but has not yet been shown to be able to scale \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9750205614588957,
        0.8986587275678701,
        0.9468645706782611
      ],
      "excerpt": "The original project is here, \nbut math to understand why it works is here. \nCurrently, this repository contains a few extensions on \"Plain\" NeRF. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9715631969525387,
        0.9353172028323906,
        0.9271083012464092
      ],
      "excerpt": "NeRFAE (NeRF Auto Encoder): Our extension, which encodes every point in space as a vector in a \n  latent material space, and derives density and RGB from this latent space. In theory this \n  should allow for similar points to be learned more effectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8084876581249196
      ],
      "excerpt": "  This is probably one of the most practical ways to do volume rendering, i.e. seems like the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920634432961506
      ],
      "excerpt": "D-NeRF for dynamic scenes, using an MLP to encode a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8566613459046102,
        0.9683367667470496
      ],
      "excerpt": "Convolutional Update Operator based off of RAFT's. \n    Interpolation is definitely not what it's design was intended for, but is more memory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111595501637874
      ],
      "excerpt": "[WIP]Pixel NeRF for single image NeRF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8686607197475091,
        0.8352312338702347,
        0.9108445229999386
      ],
      "excerpt": "Positional Encoding, as in the original paper. \nFourier Features. \nLearned Features based on Siren: Pass low dimensional \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8081979250731837
      ],
      "excerpt": "MipNeRF can be turned on with cylinder or conic volumes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8459898217981312
      ],
      "excerpt": "Train on cropped regions of the image for smaller GPUs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9244240171712069,
        0.9183176633874963
      ],
      "excerpt": "Note: NeRF is stupid slow. Writing out one of these extensions takes about half an hour, \ntraining it takes about a day, and my GPU is much smaller than any used in the papers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8688346159052645
      ],
      "excerpt": "New Collocated NeRF Synthetic (--data-kind nerv_point) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9771001832647497,
        0.9693532355601125,
        0.9780911359769736,
        0.8676363235365573
      ],
      "excerpt": "A new change to NeRF using NeRF with an auto-encoder at every point in space. Since we're \nmapping to a latent space at every point, it's possible to learn a transformation on that latent \nspace, for modifying density and visual appearance over time. One downside is that it is much \nslower to train because of the higher number of dimensions, and may overfit due to the higher \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8393397311087009,
        0.9735700883816323
      ],
      "excerpt": "The visualization is on the training set. On the test set it does not perform as well. I suspect \nit lacks some regularization for temporal consistency, but I'll continue to look for ways to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8670132821471855,
        0.9187007623324243,
        0.8773841959648542
      ],
      "excerpt": "Developed a model which allows for guaranteed smooth interpolation at infinite resolution as \ncompared to prior work, with no need for additional regularization. \nImplementation of VolSDF, which produces better quality \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9667946830683378
      ],
      "excerpt": "The full set of options for training as of #416d073ed91573f36450ada1439d681227d8045e are below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184338629037777
      ],
      "excerpt": "                        Kind of data to load (default: original) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414036442610686,
        0.9235105173605177,
        0.8142044540320644
      ],
      "excerpt": "  --feature-space FEATURE_SPACE \n                        when using neural upsampling, what is the feature \n                        space size (default: 32) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8402175859330216
      ],
      "excerpt": "                        What kind of background to use for NeRF (default: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8161148161010604,
        0.8009512079859675
      ],
      "excerpt": "                        Which parts of the model should be trained (default: \n                        ['all']) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372660912240434
      ],
      "excerpt": "                        Order for classical Spherical Harmonics & Fourier \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.883102721529922
      ],
      "excerpt": "                        What kind of reflectance model to use (default: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9489824360420879
      ],
      "excerpt": "                        How to include normals in reflectance model. Not all \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8479872208300152,
        0.9106064097636263,
        0.8064965155926116
      ],
      "excerpt": "  --space-kind {identity,surface,none} \n                        Space to encode texture: surface builds a map from 3D \n                        (identity) to 2D (default: identity) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8060362462217509
      ],
      "excerpt": "                        Whether to train the analytic or the learned model in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8703908135608219
      ],
      "excerpt": "  --refl-bidirectional  Allow normals to be flipped for the reflectance (just \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629551301037552
      ],
      "excerpt": "                        Occlusion method for shadows to use in integration \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8448134475021957
      ],
      "excerpt": "                        Intensity of light to use with loaded dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8051827439867294
      ],
      "excerpt": "                        Weight of SDF eikonal loss (default: 0) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9694581905413254
      ],
      "excerpt": "                        size of random uniform perturbation for smooth normals \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.814067553878358
      ],
      "excerpt": "  --smooth-eps-rng      smooth by a random amount instead of smoothing by a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9009503865013769
      ],
      "excerpt": "                        Order of vector to use when smoothing normals \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.834795641718339
      ],
      "excerpt": "                        the origin, < 0 is no sphere (default: -1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868296601227761
      ],
      "excerpt": "  --time-gamma          Apply a gamma based on time (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "  --with-canon WITH_CANON \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8400913872697638
      ],
      "excerpt": "  --save SAVE           Where to save the model (default: models/model.pt) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8469827455360747
      ],
      "excerpt": "                        #: of epochs between saves (default: 5000) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762,
        0.9807779863930364,
        0.8570715734923037
      ],
      "excerpt": "  --convert-analytic-to-alt \n                        Combine a model with an analytic BRDF with a learned \n                        BRDF for alternating optimization (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8272738339516167,
        0.8224759179498966
      ],
      "excerpt": "                        L2 regularize latent codes (default: 0) \n  --normalize-latent    L2 normalize latent space (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A collection of NeRF extensions for fun and experimentation.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JulianKnodt/nerf_atlas/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Thu, 23 Dec 2021 16:31:10 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JulianKnodt/nerf_atlas/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JulianKnodt/nerf_atlas",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/nerfactor.sh",
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/d_nerf.sh",
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/nerf_example.sh",
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/nerv.sh",
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/sfm_data.sh",
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/dtu.sh",
      "https://raw.githubusercontent.com/JulianKnodt/nerf_atlas/master/data/heider_animation.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8410603406239462
      ],
      "excerpt": "  --outdir OUTDIR       path to output directory (default: outputs/) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8730235485782747
      ],
      "excerpt": "                        Modules to replace on this run, if any. Take caution \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9550764108775667
      ],
      "excerpt": "usage: runner.py [-h] -d DATA \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8350335611018376
      ],
      "excerpt": "  -d DATA, --data DATA  path to data (default: None) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8581390369338854,
        0.8215519857426752
      ],
      "excerpt": "                        (default: True) \n  --outdir OUTDIR       path to output directory (default: outputs/) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806231503790735
      ],
      "excerpt": "  --batch-size BATCH_SIZE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8694974612929073
      ],
      "excerpt": "  --crop                train with cropping (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639550345814291
      ],
      "excerpt": "  --decay DECAY         Weight decay value (default: 0) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8615689235770106
      ],
      "excerpt": "  --serial-idxs         Train on images in serial (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8329888947954346
      ],
      "excerpt": "                        tracing model (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "  --alt-train {analytic,learned} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8239871258548824
      ],
      "excerpt": "                        Diffuse for now) (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8000318663973657
      ],
      "excerpt": "                        (default: 100) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432,
        0.8292859081577882
      ],
      "excerpt": "  --dnerf-tf-smooth-weight DNERF_TF_SMOOTH_WEIGHT \n                        L2 smooth dnerf tf (default: 0) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8902248201787835
      ],
      "excerpt": "  --name NAME           Display name for convenience in log file (default: ) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8621882743635256
      ],
      "excerpt": "  --param-file PARAM_FILE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8310409424899919,
        0.886739109750964,
        0.8411933820499388,
        0.8492156136558713
      ],
      "excerpt": "  --msssim-loss         Report ms-ssim loss during testing (default: False) \n  --depth-images        Whether to render depth images (default: False) \n  --normals-from-depth  Render extra normal images from depth (default: False) \n  --depth-query-normal  Render extra normal images from depth (default: False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.817189462106656,
        0.9105811373952811
      ],
      "excerpt": "  --train-imgs TRAIN_IMGS \n                        #: training examples (default: -1) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JulianKnodt/nerf_atlas/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "TeX",
      "Makefile",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "NeRF Atlas",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "nerf_atlas",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JulianKnodt",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JulianKnodt/nerf_atlas/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "PyTorch, NumPy, tqdm, matplotlib, imageio.\n\nInstall them how you want.\n\nNotes on dependency versions:\n\nThis library makes use of `tensordot(..., dims=0)`, which is [broken in PyTorch\n1.9](https://github.com/pytorch/pytorch/issues/61096). If you find this while using the library,\nplease downgrade to 1.8\n\n---\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 25,
      "date": "Thu, 23 Dec 2021 16:31:10 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "nerf",
      "graphics",
      "neural-radiance-fields"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```sh\npython3 runner.py -h\n<All the flags>\n```\n\nSee makefile for example usages. i.e.\n```sh\nmake dnerf\nmake dnerfae\nmake original\n```\n\nOne note for usage:\n- I've found that using large crop-size with small number of batches may lead to better\n  training.\n- DNeRF is great at reproducing images at training time, but I had trouble getting good test\n  results. I noticed that they have an [additional loss](https://github.com/albertpumarola/D-NeRF/issues/1) in their code,\n  which isn't mentioned in their paper, but it's not clear to me whether it was used.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "![Example Output Gif](examples/example.gif)\n\n- Collecting datasets for this is difficult. If you have a dataset that you'd like contributed,\n  add _a script to download it_ to the `data/` directory!\n\nThe outputs I've done are low-res because I'm working off a 3GB gpu and NeRF is memory intensive\nduring training. That's why I've explored a few different encodings and other tricks to speed it\nup.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "![Fencing](examples/fencing.gif)\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}