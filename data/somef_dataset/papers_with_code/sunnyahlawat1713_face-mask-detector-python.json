{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.04381\n\nI learnt a lot from Adrian Rosebrock's tutorial on this topic, the link to which has been provided in the dataset section"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9702325775999213
      ],
      "excerpt": "Link for MobileNetV2 research paper: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sunnyahlawat1713/face-mask-detector-python",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-24T11:13:31Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-30T07:27:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9101353853640051,
        0.9293706477247669,
        0.9704421448420019
      ],
      "excerpt": "In this project, I have built a program in python to detect people's faces in a static image/video stream and predict whether the person is wearing a mask or not. \nFor face detection, I have used OpenCV's readNet(cv2.dnn.readNet()) model which takes in two arguments, a binary file containing trained weights, and a text file containing network configuration. Both of these files can be found in the face_detector folder of this repository. \nFor mask prediction(on detected faces), I have used the MobileNetV2 model trained on ImageNet weights with the top of the model excluded and the weights of the remaining layers have been retained. The top(head) of the model has been re-defined to suit the specific classification problem at hand(mask-detection). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8519249496119483
      ],
      "excerpt": "The dataset can be accessed by navigating to the Downloads section of the page. This dataset mainly contains images with white masks, so I've also taken some images with black masks from the internet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9581660179710716,
        0.8637128882057872
      ],
      "excerpt": "The model should train with a plot for training loss and accuracy generated at the end along with a classification report with information such as precision and recall for both classes. My computer does not have a GPU so I've only trained it for 10 epochs but those with GPUs can train further (e.g. 20 epochs) . I achieved an accuracy of more than 95% on the validation set but that can be definitely increased by training for longer amounts of time. \nNow that our model has been trained, we can classify images to check whether the person in the image is wearing a mask. To do so, type the following command in the terminal:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Python script to detect whether a person is wearing a mask in a static image or a video stream.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sunnyahlawat1713/face-mask-detector-python/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 20:06:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sunnyahlawat1713/face-mask-detector-python/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sunnyahlawat1713/face-mask-detector-python",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9241780860593544
      ],
      "excerpt": "Open up a terminal (preferably a conda env prompt with all the dependencies installed) and then change the directory to wherever the master folder is situated. To train the model, type: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8614957378519356
      ],
      "excerpt": "To quit the stream, press \"Q\" on your keyboard.  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8850542785128428
      ],
      "excerpt": "python train_mask_detector.py --dataset dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477511778345236
      ],
      "excerpt": "python detect_mask_image.py --image path_to_image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python detect_mask_video.py  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sunnyahlawat1713/face-mask-detector-python/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "face-mask-detector-python",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "face-mask-detector-python",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sunnyahlawat1713",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sunnyahlawat1713/face-mask-detector-python/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 20:06:11 GMT"
    },
    "technique": "GitHub API"
  }
}