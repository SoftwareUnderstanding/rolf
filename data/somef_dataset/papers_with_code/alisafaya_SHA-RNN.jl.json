{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.11423v2\n\n\n![SHA-RNN Model](https://raw.githubusercontent.com/alisafaya/SHA-RNN.jl/master/SHA-RNN(2",
      "https://arxiv.org/abs/1911.11423_, 2019.\n\nhttps://arxiv.org/abs/1911.11423v2\n\n\n![SHA-RNN Model](https://raw.githubusercontent.com/alisafaya/SHA-RNN.jl/master/SHA-RNN(2).png)\n\n\nAfter downloading the data and preprocessing it using\n\n```bash\nsh getdata.sh\n```\n\nYou can train the main model of SHA-RNN paper by either:\n\n_running [sharnn-main.jl](examples/sharnn-main.jl) in shell_\n\n```bash\ncd examples\njulia sharnn-main.jl\n```\n\n_or using [SHA-RNN](notebooks/SHA-RNN.ipynb) notebook_.\n\nThis implementation is identical to the one of Smerity's original implementation [sha-rnn](https://github.com/Smerity/sha-rnn). \n\nBut it is slower, since it does not use the same performance tricks that the version of SHA-RNN that was implemented using pytorch uses.\n\n\n### Features to be added to get faster training :\n\n- Fused layer normalization (check if [Apex](https://github.com/NVIDIA/apex/) CUDA code can be used with Knet)\n- Using half precision floating point (Float16) for memory efficiency\n- Checkpoint feature similar to pytorch's [checkpoint](https://pytorch.org/docs/stable/checkpoint.html)."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9998758059714519
      ],
      "excerpt": "Stephan Merity. Single Headed Attention RNN: Stop Thinking With Your Head. arXiv preprint arXiv:1911.11423, 2019. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alisafaya/SHA-RNN.jl",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-12T16:32:12Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-11T14:44:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9771417924735696
      ],
      "excerpt": "Implementation of Single Headed Attention - Recurrent Neural Networks in Julia and Knet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9192643137655088
      ],
      "excerpt": "After downloading the data and preprocessing it using \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of Single Headed Attention - Recurrent Neural Networks in Julia and Knet",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alisafaya/SHA-RNN.jl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 03:32:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alisafaya/SHA-RNN.jl/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "alisafaya/SHA-RNN.jl",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/alisafaya/SHA-RNN.jl/master/notebooks/SHA-RNN.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/alisafaya/SHA-RNN.jl/master/getdata.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh getdata.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8795091316982344
      ],
      "excerpt": "cd examples \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.831335261117176
      ],
      "excerpt": "or using SHA-RNN notebook. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8385033361322454
      ],
      "excerpt": "running sharnn-main.jl in shell \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8280991473864786
      ],
      "excerpt": "cd examples \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alisafaya/SHA-RNN.jl/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Julia",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Ali Safaya\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHA-RNN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHA-RNN.jl",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "alisafaya",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alisafaya/SHA-RNN.jl/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Fri, 24 Dec 2021 03:32:06 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "language-model",
      "lstm",
      "attention"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Fused layer normalization (check if [Apex](https://github.com/NVIDIA/apex/) CUDA code can be used with Knet)\n- Using half precision floating point (Float16) for memory efficiency\n- Checkpoint feature similar to pytorch's [checkpoint](https://pytorch.org/docs/stable/checkpoint.html).\n",
      "technique": "Header extraction"
    }
  ]
}