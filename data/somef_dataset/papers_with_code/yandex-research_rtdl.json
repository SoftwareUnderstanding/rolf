{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2106.11959"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{gorishniy2021revisiting,\n    title={Revisiting Deep Learning Models for Tabular Data},\n    author={Yury Gorishniy and Ivan Rubachev and Valentin Khrulkov and Artem Babenko},\n    journal={arXiv},\n    volume={2106.11959},\n    year={2021},\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{gorishniy2021revisiting,\n    title={Revisiting Deep Learning Models for Tabular Data},\n    author={Yury Gorishniy and Ivan Rubachev and Valentin Khrulkov and Artem Babenko},\n    journal={arXiv},\n    volume={2106.11959},\n    year={2021},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8942856639420041
      ],
      "excerpt": "6. How to cite \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "- bin: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "- cudatoolkit=10.0 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yandex-research/rtdl",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-10T13:52:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T02:31:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9461332936585007,
        0.9951621681319994,
        0.8503829381739865,
        0.9885394989803991,
        0.9296700932552054,
        0.946415908102457,
        0.9878121122450533
      ],
      "excerpt": "This repository contains: \n- the official implementation of the paper \"Revisiting Deep Learning Models for Tabular Data\" (link) \n- rtdl (Revisiting Tabular Deep Learning): \n  - It is a PyTorch-based package that provides a user-friendly API for the main models (FT-Transformer, ResNet, MLP) used in the paper \n  - It can be used by practitioners looking for Deep Learning models for tabular data \n  - It can serve as a source of baselines for researchers (excluding FT-Transformer, see the warning below) \n  - See the website for more details \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8217009625966416
      ],
      "excerpt": "FT-Transformer model as a baseline in your paper, please, use the implementation that \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.996121604524461,
        0.964457331887406
      ],
      "excerpt": "The rest of this document is dedicated to the implementation of the paper. \nNote that the paper reports results based on thousands of experiments, so there can be rough edges in the implementation. Feel free to open issues and ask questions in discussions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8046906518904884
      ],
      "excerpt": "3.3. Data \n4. Tutorial (how to reproduce results) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.897758698388061,
        0.9973152531301601
      ],
      "excerpt": "4.6. What about other models and datasets? \n5. How to work with the repository \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553549982554667
      ],
      "excerpt": "The code is organized as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8852058663567228
      ],
      "excerpt": "  - training code for all the models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9928146447691166
      ],
      "excerpt": "  - code for the section \"When FT-Transformer is better than ResNet?\" of the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9273208111851009,
        0.8128891157613154
      ],
      "excerpt": "- lib contains common tools used by programs in bin \n- output contains configuration files (inputs for programs in bin) and results (metrics, tuned configurations, etc.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9139075593307604
      ],
      "excerpt": "The results are represented with numerous JSON files that are scatterd all over the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9026072833211188,
        0.885251588146682
      ],
      "excerpt": "This environment is needed only for experimenting with TabNet. For all other cases use the PyTorch environment. \nThe instructions are the same as for the PyTorch environment (including installation of PyTorch!), but: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8819490219491147
      ],
      "excerpt": "LICENSE: by downloading our dataset you accept licenses of all its components. We \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9867554915696749
      ],
      "excerpt": "of sources in the section \"References\" of our paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9801946182814704,
        0.9536929417790688
      ],
      "excerpt": "2. Move the archive to the root of the repository: mv rtdl_data.tar.gz $PROJECT_DIR \n3. Go to the root of the repository: cd $PROJECT_DIR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8563020677427948
      ],
      "excerpt": "Our config for tuning MLP on the California Housing dataset is located at output/california_housing/mlp/tuning/0.toml. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8257162200023023
      ],
      "excerpt": ": you can choose any other name instead of \"reproduced.toml\"; it is better to keep this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8078481990033217,
        0.9524304468889663
      ],
      "excerpt": "The result of your tuning will be located atoutput/california_housing/mlp/tuning/reproduced, you can compare it with ours:output/california_housing/mlp/tuning/0. The filebest.toml` contains the best configuration that we will evaluate in the next section. \nNow we have to evaluate the tuned configuration with 15 different random seeds. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809713393753328
      ],
      "excerpt": "Our directory with evaluation results is located right next to yours, namely, at output/california_housing/mlp/tuned. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9144463611523048
      ],
      "excerpt": "- find the cell \"All Neural Networks\"; the next cell contains many lines of this kind: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8734341145623814,
        0.9430663515664889
      ],
      "excerpt": "- in order to do the same for the ensembles, take inspiration from other cells, where ensembles are used \nSimilar steps can be performed for all models and datasets. The tuning process is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278191403600306
      ],
      "excerpt": "configurations and manually choose the best one based on the validation performance. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.915635098469284
      ],
      "excerpt": "For all scripts, stats.json is the most important part of output. The content varies \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9775992287812425
      ],
      "excerpt": "this repository for your needs. The tutorial also \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "The `rtdl` library + The official implementation of the paper \"Revisiting Deep Learning Models for Tabular Data\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yandex-research/rtdl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Fri, 24 Dec 2021 22:07:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yandex-research/rtdl/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yandex-research/rtdl",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/yandex-research/rtdl/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yandex-research/rtdl/main/bin/create_synthetic_data_plots.ipynb",
      "https://raw.githubusercontent.com/yandex-research/rtdl/main/bin/report.ipynb",
      "https://raw.githubusercontent.com/yandex-research/rtdl/main/examples/rtdl.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.983546516207076,
        0.9871887057853048,
        0.9215265709018451
      ],
      "excerpt": "3. Setup the environment \n3.1. PyTorch environment \n3.2. TensorFlow environment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9262108944154066
      ],
      "excerpt": "4.1. Check the environment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9995234057802402
      ],
      "excerpt": "Install conda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.954950449355536,
        0.9770335174395833,
        0.9820169249306753,
        0.9942490683593806,
        0.9979947896609701,
        0.9882811147490479,
        0.9601979515212014,
        0.9569276119585512,
        0.8703614337456238,
        0.8877825074410796
      ],
      "excerpt": "cd $REPO_DIR \nconda create -n rtdl python=3.8.8 \nconda activate rtdl \nconda install pytorch==1.7.1 torchvision==0.8.2 cudatoolkit=10.1.243 numpy=1.19.2 -c pytorch -y \nconda install cudnn=7.6.5 -c anaconda -y \npip install -r requirements.txt \nconda install -c conda-forge nodejs -y \njupyter labextension install @jupyter-widgets/jupyterlab-manager \n: if the following commands do not succeed, update conda \nconda env config vars set PYTHONPATH=${PYTHONPATH}:${REPO_DIR} \nconda env config vars set PROJECT_DIR=${REPO_DIR} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8877825074410796,
        0.8877825074410796,
        0.871527752452272,
        0.9770335174395833
      ],
      "excerpt": "conda env config vars set CUDA_HOME=${CONDA_PREFIX} \nconda env config vars set CUDA_ROOT=${CONDA_PREFIX} \nconda deactivate \nconda activate rtdl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322004960352722,
        0.9549879591282052
      ],
      "excerpt": "This environment is needed only for experimenting with TabNet. For all other cases use the PyTorch environment. \nThe instructions are the same as for the PyTorch environment (including installation of PyTorch!), but: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9913230039358392,
        0.9961428138875512
      ],
      "excerpt": "- right before pip install -r requirements.txt do the following: \n  - pip install tensorflow-gpu==1.14 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8849565934320363
      ],
      "excerpt": "1. Download the data: wget https://www.dropbox.com/s/o53umyg6mn3zhxy/rtdl_data.tar.gz?dl=1 -O rtdl_data.tar.gz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8408635707170898,
        0.969392040220732,
        0.9536964341053866,
        0.8902627162932362
      ],
      "excerpt": "4. Unpack the archive: tar -xvf rtdl_data.tar.gz \nBefore we start, let's check that the environment is configured successfully. The following \ncommands should train one MLP on the California Housing dataset: \nmkdir draft \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029547191690817
      ],
      "excerpt": ": you can choose any other name instead of \"reproduced.toml\"; it is better to keep this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "python -c \" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414690675263378
      ],
      "excerpt": "p = Path('output/california_housing/mlp/tuning/reproduced.toml') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9033702617748925
      ],
      "excerpt": "mkdir -p output/california_housing/mlp/tuned_reproduced \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "python -c \" \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8088083000763366
      ],
      "excerpt": "1. The main results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8350302290812638,
        0.9144810508102184
      ],
      "excerpt": "  - ensemble.py performs ensembling \n  - tune.py tunes models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8315992019471108
      ],
      "excerpt": "    - analysis_gbdt_vs_nn.py runs the experiments \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8168552602523578
      ],
      "excerpt": "output directory. Check bin/report.ipynb to see how the results can be summarized. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8056110792256479
      ],
      "excerpt": "- python=3.7.10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8968045850405657
      ],
      "excerpt": "python bin/mlp.py draft/check_environment.toml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8034682060893713
      ],
      "excerpt": ": name while completing the tutorial \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550650925410873
      ],
      "excerpt": "from pathlib import Path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024431791514845
      ],
      "excerpt": "python bin/tune.py output/california_housing/mlp/tuning/reproduced.toml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049956740738274
      ],
      "excerpt": "mkdir -p output/california_housing/mlp/tuned_reproduced \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9005213786665638
      ],
      "excerpt": "    open(f'output/california_housing/mlp/tuned_reproduced/{seed}.toml', 'w').write( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454785570126213
      ],
      "excerpt": ": train MLP with all 15 configs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9283556847747862
      ],
      "excerpt": "    python bin/mlp.py output/california_housing/mlp/tuned_reproduced/${seed}.toml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9283556847747862
      ],
      "excerpt": "python bin/ensemble.py mlp output/california_housing/mlp/tuned_reproduced \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8273513264021901
      ],
      "excerpt": "For example, see output/epsilon/ft_transformer. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yandex-research/rtdl/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2021 Yandex LLC\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Revisiting Tabular Deep Learning<!-- omit in toc -->",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "rtdl",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yandex-research",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yandex-research/rtdl/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "This is a hot-fix release after the big 0.0.8 release (see the [release notes](https://github.com/yandex-research/rtdl/releases/tag/v0.0.8) for 0.0.8):\r\n- revert the breaking change in NumericalFeatureTokenizer accidentally introduced in 0.0.8\r\n- minor documentation refinements",
        "dateCreated": "2021-11-07T14:56:21Z",
        "datePublished": "2021-11-07T15:04:02Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.9",
        "name": "v0.0.9",
        "tag_name": "v0.0.9",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.9",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/52870525",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.9"
      },
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "This release focuses on improving the documentation.\r\n\r\n### Documentation\r\n- The following models and classes are now documented:\r\n    - `MLP`\r\n    - `ResNet`\r\n    - `FTTransformer`\r\n    - `MultiheadAttention`\r\n    - `NumericalFeatureTokenizer`\r\n    - `CategoricalFeatureTokenizer`\r\n    - `FeatureTokenizer`\r\n    - `CLSToken`\r\n- Usability have been greatly improved:\r\n    - signatures are now highlighted\r\n    - added the \"copy\" button to code blocks\r\n    - permalink buttons (signature anchors) are now visible\r\n\r\n### Bug fixes\r\n- `MultiheadAttention`: fix the crash when `bias=False`\r\n\r\n### Dependencies\r\n- numpy >= 1.18\r\n- torch >= 1.7\r\n\r\n### Project\r\n- added spell checking for documentation\r\n- sphinx was updated to 4.2.0\r\n- flit was updated to 3.4.0",
        "dateCreated": "2021-11-06T22:21:35Z",
        "datePublished": "2021-11-06T22:47:37Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.8",
        "name": "v0.0.8",
        "tag_name": "v0.0.8",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.8",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/52855613",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.8"
      },
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "### API changes\r\n- remove `FlatEmbedding`\r\n\r\n### Project\r\n- remove `bin`, `lib` and `output` from the PyPI package",
        "dateCreated": "2021-10-10T11:28:05Z",
        "datePublished": "2021-10-10T11:31:10Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.7",
        "name": "v0.0.7",
        "tag_name": "v0.0.7",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.7",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/51097257",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.7"
      },
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "# v0.0.6\r\n\r\n### New features\r\n- `CLSToken` (old name: \"AppendCLSToken\"): add `expand` method for easy construction of batches of [CLS]-tokens\r\n\r\n### Bug fixes\r\n- `FTTransformer`: the `make_baseline` method now properly constructs an instance\r\n\r\n### API changes\r\n- `FTTransformer`: the `ffn_d_intermidiate` argument was renamed to a more conventional `ffn_d_hidden`\r\n- `FTTransformer`: the `normalization` argument was split into three arguments: `attention_normalization`, `ffn_normalization`, `head_normalization`\r\n- `ResNet`: the `d_intermidiate` argument was renamed to a more conventional `d_hidden`\r\n- `AppendCLSToken`: renamed to `CLSToken`\r\n\r\n### Documentation improvements\r\n- `CLSToken`\r\n- `MLP.make_baseline`\r\n\r\n### Project\r\n- add tests with CUDA\r\n- remove the `.vscode` directory from the repository",
        "dateCreated": "2021-08-26T16:41:41Z",
        "datePublished": "2021-08-26T17:07:52Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.6",
        "name": "v0.0.6",
        "tag_name": "v0.0.6",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.6",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/48517531",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.6"
      },
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "API Changes:\r\n- `MLP.make_baseline` is now more user-friendly and accepts a single `d_layers` argument instead of four (`d_first`, `d_intermidiate`, `d_last`, `n_blocks`)",
        "dateCreated": "2021-07-20T21:23:52Z",
        "datePublished": "2021-07-20T21:27:45Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.5",
        "name": "v0.0.5",
        "tag_name": "v0.0.5",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.5",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/46502092",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.5"
      },
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "### Fixes\r\n- make `CategoricalFeatureTokenizer` compatible with `.to(device)`",
        "dateCreated": "2021-07-11T23:18:08Z",
        "datePublished": "2021-07-11T23:43:04Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.4",
        "name": "v0.0.4",
        "tag_name": "v0.0.4",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.4",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/46028684",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.4"
      },
      {
        "authorType": "User",
        "author_name": "Yura52",
        "body": "### API Changes\r\n- `ResNet` & `ResNet.Block`: the `d` parameter was renamed to `d_main`\r\n\r\n### Fixes\r\n- minor fix in the comments in `examples/rtdl.ipynb`\r\n\r\n### Project\r\n- add [tests](https://github.com/yandex-research/rtdl/blob/main/rtdl/tests/test_vs_paper.py) that validate that the models in `rtdl` are literally the same as in the implementation of the paper",
        "dateCreated": "2021-07-02T14:04:00Z",
        "datePublished": "2021-07-02T14:20:52Z",
        "html_url": "https://github.com/yandex-research/rtdl/releases/tag/v0.0.3",
        "name": "v0.0.3",
        "tag_name": "v0.0.3",
        "tarball_url": "https://api.github.com/repos/yandex-research/rtdl/tarball/v0.0.3",
        "url": "https://api.github.com/repos/yandex-research/rtdl/releases/45627020",
        "zipball_url": "https://api.github.com/repos/yandex-research/rtdl/zipball/v0.0.3"
      }
    ],
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You should run Python scripts from the root of the repository. Most programs expect a\nconfiguration file as the only argument. The output will be a directory with the same\nname as the config, but without the extention. Configs are written in\n[TOML](https://toml.io). The lists of possible arguments for the programs are not\nprovided and should be inferred from scripts (usually, the config is represented with\nthe `args` variable in scripts). If you want to use CUDA, you must explicitly set the\n`CUDA_VISIBLE_DEVICES` environment variable. For example:\n```bash\n#: The result will be at \"path/to/my_experiment\"\nCUDA_VISIBLE_DEVICES=0 python bin/mlp.py path/to/my_experiment.toml\n\n#: The following example will run WITHOUT CUDA\npython bin/mlp.py path/to/my_experiment.toml\n```\nIf you are going to use CUDA all the time, you can save the environment variable in the\nConda environment:\n```bash\nconda env config vars set CUDA_VISIBLE_DEVICES=\"0\"\n```\nThe `-f` (`--force`) option will remove the existing results and run the script from scratch:\n```bash\npython bin/whatever.py path/to/config.toml -f  #: rewrites path/to/config\n```\n`bin/tune.py` supports continuation:\n```bash\npython bin/tune.py path/to/config.toml --continue\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 235,
      "date": "Fri, 24 Dec 2021 22:07:20 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "python",
      "machine-learning",
      "deep-learning",
      "pytorch",
      "research",
      "paper",
      "ai",
      "artificial-intelligence",
      "neural-networks"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "*This section only provides specific commands with few comments. After completing the tutorial, we recommend checking the next section for better understanding of how to work with the repository. It will also help to better understand the tutorial.*\n\nIn this tutorial, we will reproduce the results for MLP on the California Housing dataset. We will cover:\n- tuning\n- evaluation\n- ensembling\n- comparing models with each other\n\nNote that the chances to get **exactly** the same results are rather low, however, they should not differ much from ours. Before running anything, go to the root of the repository and explicitly set `CUDA_VISIBLE_DEVICES` (if you plan to use GPU):\n```bash\ncd $PROJECT_DIR\nexport CUDA_VISIBLE_DEVICES=0\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}