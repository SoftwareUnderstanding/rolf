{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- The original DCGAN research paper https://arxiv.org/abs/1511.06434\n- Tip for label smoothing https://towardsdatascience.com/gan-ways-to-improve-gan-performance-acf37f9f59b\n- Google Developers tutorial on generative adversarial networks https://developers.google.com/machine-learning/gan\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434\n- Tip for label smoothing https://towardsdatascience.com/gan-ways-to-improve-gan-performance-acf37f9f59b\n- Google Developers tutorial on generative adversarial networks https://developers.google.com/machine-learning/gan\n\n# Libraries used\n- [NumPy](https://numpy.org/"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yashyenugu/Anime-Face-GAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-16T17:34:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-08T17:39:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8266543679525458
      ],
      "excerpt": "The dataset is taken from Kaggle over here. The data was obtained from www.getchu.com and processed using a face \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9962228418709952
      ],
      "excerpt": "The objective of the project is to generate images of Anime faces using a Deep Convolutional GAN. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9627524941387147,
        0.9158443476729075
      ],
      "excerpt": "The generator takes in a random vector which then uses transposed convolutions to generate an image out of it.   \nThe discriminator is a Convolutional network which then classifies whether an image is real or fake. It takes in samples of images from the dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9620994782245053,
        0.8932443920924394
      ],
      "excerpt": "It is then followed by a Dense layer of 4x4x1024 units and reshaped to (4,4,1024). \nThen a few transposed convolutional layers are followed which then results in an image of size (64,64,3) with pixel values of the range [-1,1] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9922260123579004
      ],
      "excerpt": "The discriminator is similar to a image classification CNN which takes in an image and outputs the probability of it being real. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An effort to generate new anime faces using a DCGAN ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yashyenugu/Anime-Face-GAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 23 Dec 2021 00:47:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yashyenugu/Anime-Face-GAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yashyenugu/Anime-Face-GAN",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yashyenugu/Anime-Face-GAN/main/DCGAN.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9191442818390987
      ],
      "excerpt": "detector based on the repo https://github.com/nagadomi/lbpcascade_animeface. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9628450123837479,
        0.8358484931955027
      ],
      "excerpt": "Note: for running on a GPU instance you will require to download the respective CUDA and cuDNN (if the GPU present is CUDA compatible) versions to work with tensorflow. \nCUDA compatibility can be checked here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8770830696061972
      ],
      "excerpt": "Download the dataset from here into the same directory as the cloned repo (only required if training from scratch) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9734123817015686,
        0.9819181018608213,
        0.9925205826782645,
        0.9275147387071279,
        0.8627670300380597,
        0.8394879483701987
      ],
      "excerpt": "Run conda env create -f environment.yml  \nRun conda activate DCGAN \nRun python -m ipykernel install --user --name=DCGAN to list it in the jupyter notebook's kernels. (Run conda install -c anaconda ipykernel in case ipykernel not installed) \nRun jupyter notebook and make sure you are using the kernel 'DCGAN' \nRun the notebook DCGAN.ipynb \nNote: It is advised to train the model on a GPU. Training on a CPU can be time consuming. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.896499302277345
      ],
      "excerpt": "<img src=\"assets/generated-images.jpg\" height=50% width=50%> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.882743057286204
      ],
      "excerpt": "<img src=\"assets/generator-model.png\" width=40%> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8737129613629188,
        0.9043151942477935
      ],
      "excerpt": "<img src=\"assets/discriminator-model.png\" width=40%> \n<img src=\"assets/training-progress.gif\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8409624242538751
      ],
      "excerpt": "Download the trained weights from here for testing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009227257818361
      ],
      "excerpt": "Run the notebook DCGAN.ipynb \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yashyenugu/Anime-Face-GAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Anime-Face-GAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Anime-Face-GAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yashyenugu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yashyenugu/Anime-Face-GAN/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- ",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Thu, 23 Dec 2021 00:47:29 GMT"
    },
    "technique": "GitHub API"
  }
}