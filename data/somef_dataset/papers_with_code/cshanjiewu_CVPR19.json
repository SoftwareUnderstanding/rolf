{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1511.06434 (2015).(https://arxiv.org/abs/1511.06434) "
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cshanjiewu/CVPR19",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing guidelines\nHow to contribute to MatConvNet\nFor a description of how the library is structured, take a look at the\nDevelopers notes on\nthe MatConvNet website.\nIssues\nWe are grateful for any reported issues which help to remove bugs and\nimprove the overall quality of the library. In particular, you can use\nthe issue tracker to:\n\nreport bugs and unexpected crashes\ndiscuss library design decisions\nrequest new features\n\nWhen reporting bugs, it really helps if you can provide the following:\n\nWhich steps are needed to reproduce the issue\nMATLAB, compiler and CUDA version (where appropriate)\n\nBefore opening an issue to report a bug, please make sure that the bug\nis reproducible on the latest version of the master branch.\nThe most difficult bugs to remove are those which cause crashes of the\ncore functions (e.g. CUDA errors etc.). In those cases, it is really\nuseful to create a minimal example which is able to reproduce the\nissue. We know that this may mean a bit of work, but it helps us to\nremove the bug more quickly.\nPull requests\nPlease make any Pull Requests against the devel branch rather than\nthe master branch which is maintained as the latest stable release\nof the library.\nAs a general rule, it is much easier to accept small Pull Requests\nthat make a single improvement to the library than complex code\nchanges that affect multiple parts of the library. When submitting\nsubstantial changes, it is useful if unit tests are provided with the\ncode.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-10-17T05:54:53Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-19T22:55:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8265263080739447
      ],
      "excerpt": "*Note: Any MCN version is compatible \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8258717791330783
      ],
      "excerpt": "*Note: All hyper parameters for training the network (e.g., learning rate) are identically set to [1] \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cshanjiewu/CVPR19/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 07:43:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cshanjiewu/CVPR19/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cshanjiewu/CVPR19",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/cshanjiewu/CVPR19/tree/master/matconvnet-1.0-beta24/doc/site/docs",
      "https://github.com/cshanjiewu/CVPR19/tree/master/matconvnet-1.0-beta25/doc/site/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/import-fcn.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/import-ref-models.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/import-googlenet.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/import-fast-rcnn.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/preprocess-imagenet.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/get-file.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/import-resnet.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/utils/proto/get-protos.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/matlab/src/config/mex_CUDA_glnxa64.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta24/matlab/src/config/mex_CUDA_maci64.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/import-fcn.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/import-ref-models.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/import-googlenet.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/import-fast-rcnn.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/preprocess-imagenet.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/get-file.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/import-resnet.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/utils/proto/get-protos.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/matlab/src/config/mex_CUDA_glnxa64.sh",
      "https://raw.githubusercontent.com/cshanjiewu/CVPR19/master/matconvnet-1.0-beta25/matlab/src/config/mex_CUDA_maci64.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8372719838399232
      ],
      "excerpt": "*Note: Any MCN version is compatible \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9031169043718186
      ],
      "excerpt": "If you use GPU, set opts.idx_gpus = 1' in line 7 and opts.install.cuda_path = 'your cuda folder' in line 11) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "Run main_start_dcgan.m  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cshanjiewu/CVPR19/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB",
      "Cuda",
      "C++",
      "TeX",
      "Python",
      "Shell",
      "C",
      "Makefile",
      "HTML",
      "CSS",
      "Mathematica",
      "M",
      "JavaScript"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Samuel Albanie\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN implementation on MatConvNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CVPR19",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cshanjiewu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cshanjiewu/CVPR19/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Download CelebA database at: https://drive.google.com/file/d/0B7EVK8r0v71pZjFTYXZWM3FlRnM/view?usp=sharing\n    \n       Unzip and store it to '/data' folder such that 'data/img_align_celeba/00001.bmp..'\n    \n2. Download Pretrained DCGAN at: https://www.dropbox.com/s/dmyqd6yfga9wsm6/net_dcgan.mat?dl=0\n    \n       Place it in '/net' folder such that 'net/net_dcgan.mat'\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 07:43:40 GMT"
    },
    "technique": "GitHub API"
  }
}