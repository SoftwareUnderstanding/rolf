{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Download the trained model pickels from the following link => <a href=\"https://drive.google.com/drive/folders/0B0eNSOFz7zL7Q2JqN0E5R2NZNXM?usp=sharing\">Trained Models</a>\n* Want to train your own Inception model? Check out this link : <a href=\"https://github.com/tensorflow/models/tree/master/inception\">Training Inception!</a>\n* We used two datasets for training our models.\n  * We used the [ISIC](https://isic-archive.com/) dataset for skin lesion classification task. It is a set of 5 different datasets out of which we used only 4 and skipped the one names \"ISIC_SONIC-1\". We still had a very skewed data proportions (around 1500 images for benign category and only 600 images for malignant). So we went ahead and wrote a python script to flip all the images in the malignant folder to double the size and add new features.\n    > We recieved a 79% accuracy on this model.\n  * The second dataset that we used was from this [Kaggle competition](https://www.kaggle.com/c/diabetic-retinopathy-detection). We used only 6000 images from this due to time constraints.\n    > This model gave us an accuracy of 68%.\n* Paper that inspired this project:\n  * [Rethinking the Inception Model](https://arxiv.org/pdf/1512.00567.pdf)\n  \n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/da9ish/DeepDiagnosis",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nHow to contribute ?\n\nFork the repo on GitHub.\nClone the project to your own machine.\nCommit changes to development branch.\nPush your work back up to your fork.\nSubmit a Pull request so that i can review your changes\n\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a \n   build.\nUpdate the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. \nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\n  address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\n  professional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at shah.danish.1996@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-03-25T04:38:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-09T18:31:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9955584885856601
      ],
      "excerpt": "This is a research oriented project where we have tried to use machine learning models for classification tasks using images as an input. We've used CNN model for the task of image analysis and classification. The architecture of our model is a standard architecture used by many in the industry. The architecture is called Inception model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8640860480998003
      ],
      "excerpt": "We've trained the model on respective datasets and pickled them for easy use. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8180767363891143
      ],
      "excerpt": "How to get it working \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9910335665261828
      ],
      "excerpt": "The core part of the project is simply a program that loads in the trained model and passes an image through it for classification.<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9407869306829907,
        0.9551999492132185
      ],
      "excerpt": ": method for classifying skin lesions \n: prints a string stating whether the lesion is melignant(Cancerous) or benign(non-cancerous) with a percent confidence \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.981985269793523,
        0.9407869306829907,
        0.908477078095652
      ],
      "excerpt": "* Or we could classify the severity of retinopathy using a clinical image of patient's retina python \n: method for classifying diabetic retinopathy \n: prints a string stating whether the image has a chance of diabetic ratinopathy (Normal, Moderate, Severe) with a percent confidence. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436053465030273
      ],
      "excerpt": "Running the web app is even simpler. Just place the trained_nets folder that we've downloaded in the above section and place it in the directory \"Web/Backend/\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9603365629283135,
        0.9541349048809998
      ],
      "excerpt": "We've integrated the trained model with a web app that we explored in the last section and an Android Applicaion. \nThe screens of the Android app is given below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Skin Lesion Classification using Deep Learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DanishShah/DeepDiagnosis/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 14,
      "date": "Thu, 23 Dec 2021 05:59:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/da9ish/DeepDiagnosis/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "da9ish/DeepDiagnosis",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8812028745801673
      ],
      "excerpt": "Now we simply fire up a Python shell or write the following python program. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "``` python \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9640392035778003
      ],
      "excerpt": "import predict.py as pred \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9135361255967233
      ],
      "excerpt": "6. The images should be in the same folder as the \"predict.py\". Their file name should be passed as an argument to the function. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206
      ],
      "excerpt": "python main.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/da9ish/DeepDiagnosis/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "JavaScript",
      "CSS",
      "HTML",
      "Java",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep Diagnosis",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepDiagnosis",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "da9ish",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/da9ish/DeepDiagnosis/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.X.X\n* Flask\n* TensorFlow\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 26,
      "date": "Thu, 23 Dec 2021 05:59:05 GMT"
    },
    "technique": "GitHub API"
  }
}