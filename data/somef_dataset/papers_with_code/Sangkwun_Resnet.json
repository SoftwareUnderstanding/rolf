{
  "citation": [
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "Blue: Without short connection \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sangkwun/Resnet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-15T03:44:02Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-29T04:12:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9887713859480657,
        0.8774552054525587
      ],
      "excerpt": "This project is about building Resnet with Keras \nDeep network degradation is occured so Resnet adopted residual block. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9086272876254552,
        0.961965229410739,
        0.9839519638112384,
        0.8936127907678685
      ],
      "excerpt": "cifar10 is quite small dataset for Resnet-50. \nBut it's focused on effect of residual network for address degradation of deep network. \nSo cifar10 is used for convinient. Actually small CNN network is proper to cifar10. \nBelow two images are accuracy of resnet-50 on cifar10. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "Orange: With short connection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8842798712961536
      ],
      "excerpt": "Two model has only difference of residual block existence. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sangkwun/Resnet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 07:40:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Sangkwun/Resnet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sangkwun/Resnet",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9347811347599669
      ],
      "excerpt": "resnet.py build network and train.py train the model then test it. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Sangkwun/Resnet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Resnet with Keras.",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Resnet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sangkwun",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sangkwun/Resnet/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project use only keras with tensorflow backend.\nSo you just install keras and tensorflow.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 07:40:15 GMT"
    },
    "technique": "GitHub API"
  }
}