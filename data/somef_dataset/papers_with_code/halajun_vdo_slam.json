{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2005.11052\" target=\"_blank\"><b>[ArXiv/PDF]</b></a>\n<a href=\"https://github.com/halajun/VDO_SLAM\" target=\"_blank\"><b>[Code]</b></a>\n<a href=\"https://drive.google.com/file/d/1PbL4KiJ3sUhxyJSQPZmRP6mgi9dIC0iu/view\" target=\"_blank\"><b>[Video]</b></a>\n<a href=\"https://halajun.github.io/files/zhang20vdoslam.txt\" target=\"_blank\"><b>[BibTex]</b></a>\n* <b>Robust Ego and Object 6-DoF Motion Estimation and Tracking</b> <br> \nJun Zhang, Mina Henein, Robert Mahony and Viorela Ila. \n<i>The IEEE/RSJ International Conference on Intelligent Robots and Systems</i>. <b>IROS 2020</b>.\n<a href=\"https://arxiv.org/abs/2007.13993\" target=\"_blank\"><b>[ArXiv/PDF]</b></a>\n<a href=\"https://halajun.github.io/files/zhang20iros.txt\" target=\"_blank\"><b>[BibTex]</b></a>\n* <b>Dynamic SLAM: The Need For Speed</b> <br> \nMina Henein, Jun Zhang, Robert Mahony and Viorela Ila. \n<i>The International Conference on Robotics and Automation</i>. <b>ICRA 2020</b>.\n<a href=\"https://arxiv.org/abs/2002.08584\" target=\"_blank\"><b>[ArXiv/PDF]</b></a>\n<a href=\"https://halajun.github.io/files/henein20icra.txt\" target=\"_blank\"><b>[BibTex]</b></a>\n\n\n# 2. Prerequisites\nWe have tested the library in **Mac OS X 10.14** and **Ubuntu 16.04**, but it should be easy to compile in other platforms. \n\n## c++11, gcc and clang\nWe use some functionalities of c++11, and the tested gcc version is 9.2.1 (ubuntu",
      "https://arxiv.org/abs/2007.13993\" target=\"_blank\"><b>[ArXiv/PDF]</b></a>\n<a href=\"https://halajun.github.io/files/zhang20iros.txt\" target=\"_blank\"><b>[BibTex]</b></a>\n* <b>Dynamic SLAM: The Need For Speed</b> <br> \nMina Henein, Jun Zhang, Robert Mahony and Viorela Ila. \n<i>The International Conference on Robotics and Automation</i>. <b>ICRA 2020</b>.\n<a href=\"https://arxiv.org/abs/2002.08584\" target=\"_blank\"><b>[ArXiv/PDF]</b></a>\n<a href=\"https://halajun.github.io/files/henein20icra.txt\" target=\"_blank\"><b>[BibTex]</b></a>\n\n\n# 2. Prerequisites\nWe have tested the library in **Mac OS X 10.14** and **Ubuntu 16.04**, but it should be easy to compile in other platforms. \n\n## c++11, gcc and clang\nWe use some functionalities of c++11, and the tested gcc version is 9.2.1 (ubuntu",
      "https://arxiv.org/abs/2002.08584\" target=\"_blank\"><b>[ArXiv/PDF]</b></a>\n<a href=\"https://halajun.github.io/files/henein20icra.txt\" target=\"_blank\"><b>[BibTex]</b></a>\n\n\n# 2. Prerequisites\nWe have tested the library in **Mac OS X 10.14** and **Ubuntu 16.04**, but it should be easy to compile in other platforms. \n\n## c++11, gcc and clang\nWe use some functionalities of c++11, and the tested gcc version is 9.2.1 (ubuntu"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9730097197343727
      ],
      "excerpt": "Authors: Jun Zhang*, Mina Henein*, Robert Mahony and Viorela Ila  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/halajun/VDO_SLAM",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-06T01:35:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T22:55:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8852079969834735
      ],
      "excerpt": "VDO-SLAM is a Visual Object-aware Dynamic SLAM library for RGB-D cameras that is able to track dynamic objects, estimate the camera poses along with the static and dynamic structure, the full SE(3) pose change of every rigid object in the scene, extract velocity information, and be demonstrable in real-world outdoor scenarios. We provide examples to run the SLAM system in the KITTI Tracking Dataset, and in the Oxford Multi-motion Dataset.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8284583912070714
      ],
      "excerpt": "We use some functionalities of c++11, and the tested gcc version is 9.2.1 (ubuntu), the tested clang version is 1000.11.45.5 (Mac). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9947984671757037,
        0.8966715395563151,
        0.977362175884231
      ],
      "excerpt": "The system also requires image pre-processing as input, which includes instance-level semantic segmentation and optical flow estimation. In our experiments, we used Mask R-CNN for instance segmentation (for KITTI only; we applied colour-based method to segment cuboids in OMD, check the matlab code in tools folder), and PWC-NET (PyTorch version) for optic-flow estimation. Other state-of-the-art methods can also be applied instead for better performance. \nFor evaluation purpose, ground truth data of camera pose and object pose are also needed as input. Details of input format are shown as follows, \nThe input of segmentation mask is saved as matrix, same size as image, in .txt file. Each element of the matrix is integer, with 0 stands for background, and 1,2,...,n stands for different instance label. Note that, to easily compare with ground truth object motion in KITTI dataset, we align the estimated mask label with the ground truth label. The .txt file generation (from .mask) and alignment code is in tools folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8763631307985745
      ],
      "excerpt": "The input of ground truth camera pose is saved as .txt file. Each row is organized as follows, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9589036161382288,
        0.8461028763802576
      ],
      "excerpt": "Here Rij are the coefficients of the camera rotation matrix R and ti are the coefficients of the camera translation vector t. \nThe input of ground truth object pose is also saved as .txt file. One example of such file (KITTI Tracking Dataset), which each row is organized as follows, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "VDO-SLAM: A Visual Dynamic Object-aware SLAM System",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/halajun/vdo_slam/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 75,
      "date": "Thu, 23 Dec 2021 12:11:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/halajun/VDO_SLAM/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "halajun/VDO_SLAM",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/halajun/vdo_slam/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/halajun/vdo_slam/master/build.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For Ubuntu users, a Dockerfile is added for automatically installing all dependencies for reproducible environment, built and tested with KITTI dataset. (Thanks @satyajitghana for the contributions \ud83d\udc4d )\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9265300733172991,
        0.9624995818838088,
        0.9880177545104813
      ],
      "excerpt": "We use some functionalities of c++11, and the tested gcc version is 9.2.1 (ubuntu), the tested clang version is 1000.11.45.5 (Mac). \nWe use OpenCV to manipulate images and features. Download and install instructions can be found at: http://opencv.org. Required at least 3.0. Tested with OpenCV 3.4. \nRequired by g2o (see below). Download and install instructions can be found at: http://eigen.tuxfamily.org. Required at least 3.1.0. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9893272198983933,
        0.9307182870976234,
        0.9394688421636309
      ],
      "excerpt": "git clone https://github.com/halajun/VDO_SLAM.git VDO-SLAM \nWe provide a script build.sh to build the dependencies libraries and VDO-SLAM.  \nPlease make sure you have installed all required dependencies (see section 2).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.9386568594778147
      ],
      "excerpt": "cd VDO-SLAM \nchmod +x build.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8523916350482126
      ],
      "excerpt": "libg2o.dylib (Mac) or libg2o.so (Ubuntu) at /dependencies/g2o/lib folder, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150450500017945
      ],
      "excerpt": "Execute the following command. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150450500017945
      ],
      "excerpt": "Execute the following command. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8875015945761546
      ],
      "excerpt": "./example/vdo_slam example/kitti-0000-0013.yaml PATH_TO_KITTI_SEQUENCE_DATA_FOLDER \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8977364495726857,
        0.8579962455305215
      ],
      "excerpt": "./example/vdo_slam example/omd.yaml PATH_TO_OMD_SEQUENCE_DATA_FOLDER \nYou will need to create a settings (yaml) file with the calibration of your camera. See the settings files provided in the example/ folder. RGB-D input must be synchronized and depth registered. A list of timestamps for the images is needed for input. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/halajun/VDO_SLAM/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "CMake",
      "MATLAB",
      "Dockerfile",
      "Shell",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "VDO-SLAM",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "VDO_SLAM",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "halajun",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/halajun/VDO_SLAM/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We have tested the library in **Mac OS X 10.14** and **Ubuntu 16.04**, but it should be easy to compile in other platforms. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We use modified versions of [g2o](https://github.com/RainerKuemmerle/g2o) library to perform non-linear optimizations. The modified libraries (which are BSD) are included in the *dependencies* folder.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 392,
      "date": "Thu, 23 Dec 2021 12:11:47 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For Ubuntu users, a Dockerfile is added for automatically installing all dependencies for reproducible environment, built and tested with KITTI dataset. (Thanks @satyajitghana for the contributions \ud83d\udc4d )\n\n\n",
      "technique": "Header extraction"
    }
  ]
}