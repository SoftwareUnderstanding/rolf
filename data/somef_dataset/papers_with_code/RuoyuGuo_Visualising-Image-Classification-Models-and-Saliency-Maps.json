{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1312.6034v2\n\nreference:\n* [0]https://arxiv.org/abs/1312.6034v2\n* [1]https://arxiv.org/abs/1409.1556\n* [2]https://machinelearningmastery.com/how-to-visualize-filters-and-feature-maps-in-convolutional-neural-networks/\n* [3]https://blog.keras.io/how-convolutional-neural-networks-see-the-world.html\n* [4]https://github.com/ivanmontero/visualize-saliency/blob/master/saliency.py\n* [5]https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a\n* [6]https://stackoverflow.com/questions/58544097/turning-off-softmax-in-tensorflow-models\n* [7]https://farm1.static.flickr.com/104/304394105_ee88b931d8.jpg\n* [8]https://3qeqpr26caki16dnhd19sv6by6v-wpengine.netdna-ssl.com/wp-content/uploads/2019/02/bird.jpg\n\nThis project try to implement this paper on **VGG16 model** using **keras** with **tensorflow backend**.\n \n1. visualise first Conv Layers' filters\n2. visualise activation map of a input image\n3. visualise image that can maximise one class score\n4. visualise saliency map of a input image\n\n1, 2 and 4 have been successfully implemented. However, I cannot achieve 3 very well.\n\nI use the formula(1",
      "https://arxiv.org/abs/1312.6034v2\n* [1]https://arxiv.org/abs/1409.1556\n* [2]https://machinelearningmastery.com/how-to-visualize-filters-and-feature-maps-in-convolutional-neural-networks/\n* [3]https://blog.keras.io/how-convolutional-neural-networks-see-the-world.html\n* [4]https://github.com/ivanmontero/visualize-saliency/blob/master/saliency.py\n* [5]https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a\n* [6]https://stackoverflow.com/questions/58544097/turning-off-softmax-in-tensorflow-models\n* [7]https://farm1.static.flickr.com/104/304394105_ee88b931d8.jpg\n* [8]https://3qeqpr26caki16dnhd19sv6by6v-wpengine.netdna-ssl.com/wp-content/uploads/2019/02/bird.jpg\n\nThis project try to implement this paper on **VGG16 model** using **keras** with **tensorflow backend**.\n \n1. visualise first Conv Layers' filters\n2. visualise activation map of a input image\n3. visualise image that can maximise one class score\n4. visualise saliency map of a input image\n\n1, 2 and 4 have been successfully implemented. However, I cannot achieve 3 very well.\n\nI use the formula(1",
      "https://arxiv.org/abs/1409.1556\n* [2]https://machinelearningmastery.com/how-to-visualize-filters-and-feature-maps-in-convolutional-neural-networks/\n* [3]https://blog.keras.io/how-convolutional-neural-networks-see-the-world.html\n* [4]https://github.com/ivanmontero/visualize-saliency/blob/master/saliency.py\n* [5]https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a\n* [6]https://stackoverflow.com/questions/58544097/turning-off-softmax-in-tensorflow-models\n* [7]https://farm1.static.flickr.com/104/304394105_ee88b931d8.jpg\n* [8]https://3qeqpr26caki16dnhd19sv6by6v-wpengine.netdna-ssl.com/wp-content/uploads/2019/02/bird.jpg\n\nThis project try to implement this paper on **VGG16 model** using **keras** with **tensorflow backend**.\n \n1. visualise first Conv Layers' filters\n2. visualise activation map of a input image\n3. visualise image that can maximise one class score\n4. visualise saliency map of a input image\n\n1, 2 and 4 have been successfully implemented. However, I cannot achieve 3 very well.\n\nI use the formula(1"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9944484218006108,
        0.9944484218006108
      ],
      "excerpt": "* [0]https://arxiv.org/abs/1312.6034v2 \n* [1]https://arxiv.org/abs/1409.1556 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "* [5]https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9660991539358709
      ],
      "excerpt": "* [8]https://3qeqpr26caki16dnhd19sv6by6v-wpengine.netdna-ssl.com/wp-content/uploads/2019/02/bird.jpg \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-28T11:45:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-24T19:20:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8376136797714581
      ],
      "excerpt": "* [2]https://machinelearningmastery.com/how-to-visualize-filters-and-feature-maps-in-convolutional-neural-networks/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9943063542972451
      ],
      "excerpt": "This project try to implement this paper on VGG16 model using keras with tensorflow backend. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.876931474941028
      ],
      "excerpt": "visualise activation map of a input image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.876931474941028
      ],
      "excerpt": "visualise saliency map of a input image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.932323683638239
      ],
      "excerpt": "I use the formula(1) given in the paper, and use zero image plus ImageNet weights as input. I also calculate result with and without image preprocessing as well as deprocessing using zero-centred method with ImageNet weights. Nevertheless, the generated image is also undiscriminatable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "implementation of Visualising Image Classification Models and Saliency Maps",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 00:03:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps/master/Visualising%20Image%20Classification%20Models%20and%20Saliency%20Maps.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8636253863183455
      ],
      "excerpt": "* [5]https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8892083778764766
      ],
      "excerpt": "visualise image that can maximise one class score \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Deep Inside Convolutional Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Visualising-Image-Classification-Models-and-Saliency-Maps",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "RuoyuGuo",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RuoyuGuo/Visualising-Image-Classification-Models-and-Saliency-Maps/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 00:03:04 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "saliency-maps",
      "cnn",
      "visualization"
    ],
    "technique": "GitHub API"
  }
}