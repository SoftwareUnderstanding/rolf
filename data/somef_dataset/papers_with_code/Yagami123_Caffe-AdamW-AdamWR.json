{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1711.05101"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yagami123/Caffe-AdamW-AdamWR",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "submitting issues or contacting with me (yagami.lin1120@gmail.com)\n\n`If this repo can help you, welcome to star and fork.`\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-16T09:03:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-31T08:13:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9903882884933645
      ],
      "excerpt": "// cosine decay, refers to paper of AdamWR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8125995371803314
      ],
      "excerpt": "add adamwr_solver.cpp and adamwr_solver.cu to src/caffe/solvers/.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8552550758966612
      ],
      "excerpt": "    // adding yita, yita * weight_decay * weight which is different from adam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of AdamW and AdamWR Algorithms in caffe.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yagami123/Caffe-AdamW-AdamWR/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 22:09:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yagami123/Caffe-AdamW-AdamWR/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yagami123/Caffe-AdamW-AdamWR",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8423766370239612
      ],
      "excerpt": "    // If true, adamw solver will restart per cosine decay scheduler \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816280380731402
      ],
      "excerpt": "    virtual inline const char *type() const { return \"AdamWR\"; } \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yagami123/Caffe-AdamW-AdamWR/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Cuda"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Yagami123\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# caffe.proto",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Caffe-AdamW-AdamWR",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yagami123",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yagami123/Caffe-AdamW-AdamWR/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Thu, 23 Dec 2021 22:09:56 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "caffe",
      "solver",
      "adamw",
      "adamwr"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "4.1 hyperparameters newed\n- with_restart\n- cosine_decay_steps \n- cosine_decay_mult\n\n4.2 proposal hyperparamters\n- lr_policy: \"poly\"\n- base_lr: 0.001\n- momentum: 0.9\n- momentum2: 0.999\n- weight_decay: 0.0005\n- with_restart: true (false will set yita = 1 fixedly)\n- cosine_decay_steps: 10000 (change it to observe results)\n- cosine_decay_mult: 2\n- type: \"AdamWR\"\n\n4.3 others to take note\n\nif you use lr_policy of step, you should take note hyperparameter of gamma, which may make loss value boomed if you use proposal value, 0.1. Perhaps, you can set gamma to 0.9 instead.\n\n",
      "technique": "Header extraction"
    }
  ]
}