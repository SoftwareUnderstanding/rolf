{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.10934\n* Infos zum Darknet framework: http://pjreddie.com/darknet/\n* Infos zu OpenCV findet Ihr hier: https://opencv.org/\n\n\n#### Videos zu diesem Projekt (und weitere"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "CUDA 10.2 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wiegehtki/zoneminder-jetson",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Thank you for your interest in this project! Please refer to the following\nsections on how to contribute code and bug reports.\nReporting bugs\nAt the moment, this project is run in the spare time of a single person\n(Wenzel Jakob) with very limited resources\nfor issue tracker tickets. Thus, before submitting a question or bug report,\nplease take a moment of your time and ensure that your issue isn't already\ndiscussed in the project documentation provided at\nhttp://pybind11.readthedocs.org/en/latest.\nAssuming that you have identified a previously unknown problem or an important\nquestion, it's essential that you submit a self-contained and minimal piece of\ncode that reproduces the problem. In other words: no external dependencies,\nisolate the function(s) that cause breakage, submit matched and complete C++\nand Python snippets that can be easily compiled and run on my end.\nPull requests\nContributions are submitted, reviewed, and accepted using Github pull requests.\nPlease refer to this\narticle for details and\nadhere to the following rules to make the process as smooth as possible:\n\nMake a new branch for every feature you're working on.\nMake small and clean pull requests that are easy to review but make sure they\n  do add value by themselves.\nAdd tests for any new functionality and run the test suite (make pytest)\n  to ensure that no existing features break.\nThis project has a strong focus on providing general solutions using a\n  minimal amount of code, thus small pull requests are greatly preferred.\n\nLicensing of contributions\npybind11 is provided under a BSD-style license that can be found in the\nLICENSE file. By using, distributing, or contributing to this project, you\nagree to the terms and conditions of this license.\nYou are under no obligation whatsoever to provide any bug fixes, patches, or\nupgrades to the features, functionality or performance of the source code\n(\"Enhancements\") to anyone; however, if you choose to make your Enhancements\navailable either publicly, or directly to the author of this software, without\nimposing a separate written license agreement for such Enhancements, then you\nhereby grant the following license: a non-exclusive, royalty-free perpetual\nlicense to install, use, modify, prepare derivative works, incorporate into\nother computer software, distribute, and sublicense such enhancements or\nderivative works thereof, in binary and source code form.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-12T12:42:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-26T09:25:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8088569793749713
      ],
      "excerpt": "secrets.ini:  Zun\u00e4chst einloggen, in das /root - Verzeichnis wechseln und die erste Datei mit dem Editor \u00f6ffnen. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8215704942325371,
        0.9394449182630016
      ],
      "excerpt": "Nur bei Bedarf Wenn Ihr ein anderes Framework/Model nutzen wollt,k\u00f6nnt Ihr den dazugeh\u00f6rigen Eintrag anpassen. Dazu einfach ein # vor die Zeile setzen, welche inaktviert werden soll bzw. entfernen, wenn Zeilen aktiviert werden sollen. Die Vorgabe von mir sieht wie folgt aus: \n#: FOR YoloV4.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Personen und Gesichtserkennung mit Zoneminder, OpenCV (GPU),  YOLO, cuDNN und CUDA",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": " \n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wiegehtki/zoneminder-jetson/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 00:41:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/wiegehtki/zoneminder-jetson/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "wiegehtki/zoneminder-jetson",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/wiegehtki/zoneminder-jetson/tree/main/dlib/docs",
      "https://github.com/wiegehtki/zoneminder-jetson/tree/main/dlib/docs/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/hilfe_testaufrufe.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/Install.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/training_gesichter.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/dlib/dlib/external/pybind11/tools/check-style.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/dlib/dlib/java/run_test.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/dlib/dlib/travis/get-old-cmakes.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/dlib/dlib/travis/build-and-test.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/zmeventnotification/EventServer.sh",
      "https://raw.githubusercontent.com/wiegehtki/zoneminder-jetson/main/defaults/opencv_compile.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Einloggen und dann die erste Stufe der Installation starten, der Rechner rebootet danach automatisch:\n```\n       sudo su\n       cd ~\n       git clone https://github.com/wiegehtki/zoneminder-jetson.git\n       mv ~/zoneminder-jetson ~/zoneminder\n       cp zoneminder/*sh .\n       sudo chmod +x *sh\n```\n\nDanach die Anpassungen vornehmen und die Installation starten:\n\n```\n       ./Install.sh      \n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Mit Zoneminder Eure IP-Kameras einbinden und mobil verf\u00fcgbar machen\n* Den Livestream mit OpenCV und YOLO auf Objekte untersuchen\n* Erkannte Objekte, z.B. Personen, zuverl\u00e4ssig melden lassen\n* Gesichter trainieren (Achtung: Datenschutzgesetz beachten!)\n* Dokument zu Yolo(v4): https://arxiv.org/abs/2004.10934\n* Infos zum Darknet framework: http://pjreddie.com/darknet/\n* Infos zu OpenCV findet Ihr hier: https://opencv.org/\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8677275935505847,
        0.8677275935505847
      ],
      "excerpt": "Einf\u00fchrung und Softwareinstallation: https://youtu.be/USUBtwMYVYg \nInbetriebnahme: https://youtu.be/oek1nLKK53E \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910625995540856,
        0.8464730353752904,
        0.9769420979004304
      ],
      "excerpt": "In diesem Projekt kommt eine NVIDIA\u00ae Grafikkarte zum Einsatz um den Prozessor von rechenintensiven Verarbeitungen zu befreien. Dazu setzen wir NVIDIA\u00ae's CUDA\u00ae und cuDNN\u00ae ein. CUDA\u00ae ist eine Technologie, die es erlaubt Programmteile durch den Grafikprozessor abarbeiten zu lassen w\u00e4hrend die NVIDIA\u00ae CUDA\u00ae Deep Neural Network Bibliothek (cuDNN) eine GPU-beschleunigte Bibliothek mit Primitiven f\u00fcr tiefe neuronale Netzwerke darstellt. Solche Primitive, typischerweise neuronale Netzwerkschichten genannt, sind die grundlegenden Bausteine tiefer Netzwerke. cuDNN\u00ae und CUDA\u00ae samt Treiber sind bereits in JP4.6 enthalten. \nDer Script geht davon aus, dass es sich um eine neu aufgesetzte Maschine handelt, falls nicht, m\u00fcsst Ihr entsprechende Anpassungen machen oder die Befehle per Hand ausf\u00fchren um sicher zu gehen, dass eine vorhandene Installation nicht beeintr\u00e4chtigt wird. Empfohlen wird daher, ein verf\u00fcgbares Testsystem zu nutzen welches neu aufgesetzt werden kann. \nOhne diese Anpassungen wird die Installation nicht funktionieren. Daher ist dieser Schritt besonders sorgf\u00e4ltig durchzuf\u00fchren. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "       cd ~ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8536809724362512
      ],
      "excerpt": "objectconfig.ini:  Diese Datei muss nur dann angepasst werden, wenn das vor-trainierte Model gewechselt werden soll. Ich habe hier yolov4 mit GPU-Unterst\u00fctzung vor- eingestellt. Sollte man KEINE GPU zur Unterst\u00fctzung zur Verf\u00fcgung haben, kann der entsprechende Eintrag notfalls auch auf CPU ge\u00e4ndert werden. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9748709027320682
      ],
      "excerpt": "       object_processor=gpu  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9769420979004304
      ],
      "excerpt": "Nach der Installation einen reboot ausf\u00fchren. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8514763608467749
      ],
      "excerpt": "Falls nicht, hier die Download-Links: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/wiegehtki/zoneminder-jetson/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "CMake",
      "Cuda",
      "XSLT",
      "Shell",
      "C",
      "HTML",
      "Java",
      "CSS",
      "Makefile",
      "JavaScript",
      "Batchfile",
      "Perl",
      "MATLAB"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v2.0",
      "url": "https://api.github.com/licenses/gpl-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2016 Wenzel Jakob &#119;&#101;&#110;&#122;&#101;&#108;&#46;&#106;&#97;&#107;&#111;&#98;&#64;&#101;&#112;&#102;&#108;&#46;&#99;&#104;, All rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its contributors\\n   may be used to endorse or promote products derived from this software\\n   without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nPlease also refer to the file CONTRIBUTING.md, which clarifies licensing of\\nexternal contributions to this project including patches, pull requests, etc.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Kamera\u00fcberwachung mit Objekt- und Gesichtserkennung mittels Zoneminder, YOLO und OpenCV auf NVIDIA\u00ae Jetson\u2122 Plattform mit CUDA\u00ae und cuDNN\u00ae",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "zoneminder-jetson",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "wiegehtki",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wiegehtki/zoneminder-jetson/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 00:41:29 GMT"
    },
    "technique": "GitHub API"
  }
}