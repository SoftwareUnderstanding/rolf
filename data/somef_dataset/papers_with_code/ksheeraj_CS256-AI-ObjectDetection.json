{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1906.06972",
      "https://arxiv.org/abs/1506.01497",
      "https://arxiv.org/abs/1906.06972"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```@misc{wu2019detectron2,\n  author =       {Yuxin Wu and Alexander Kirillov and Francisco Massa and\n                  Wan-Yen Lo and Ross Girshick},\n  title =        {Detectron2},\n  howpublished = {\\url{https://github.com/facebookresearch/detectron2}},\n  year =         {2019}\n}\n\n  @article{jiang2019enlightengan,\n  title={EnlightenGAN: Deep Light Enhancement without Paired Supervision},\n  author={Jiang, Yifan and Gong, Xinyu and Liu, Ding and Cheng, Yu and Fang, Chen and Shen, Xiaohui and Yang, Jianchao and Zhou, Pan and Wang, Zhangyang},\n  journal={arXiv preprint arXiv:1906.06972},\n  year={2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{jiang2019enlightengan,\n  title={EnlightenGAN: Deep Light Enhancement without Paired Supervision},\n  author={Jiang, Yifan and Gong, Xinyu and Liu, Ding and Cheng, Yu and Fang, Chen and Shen, Xiaohui and Yang, Jianchao and Zhou, Pan and Wang, Zhangyang},\n  journal={arXiv preprint arXiv:1906.06972},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{wu2019detectron2,\n  author =       {Yuxin Wu and Alexander Kirillov and Francisco Massa and\n                  Wan-Yen Lo and Ross Girshick},\n  title =        {Detectron2},\n  howpublished = {\\url{https://github.com/facebookresearch/detectron2}},\n  year =         {2019}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ksheeraj/CS256-AI-ObjectDetection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-02T00:53:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-10T20:17:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The primary objective of our project was to improve human and object detection on low-light/dark images. We've used [EnlightenGAN](https://arxiv.org/abs/1906.06972) and have also used EnlightenGAN with different combinations of image filters such as Contrast Limited Adaptive Histogram Equalization (CLAHE) and Unsharp Mask (USM) to enhance low-light/dark images. The model that we used for human and object detection on these enlightened images was [Faster R-CNN](https://arxiv.org/abs/1506.01497) and found significant improvement in the performance. For more details, please refer to the [project report](https://github.com/ksheeraj/CS256-AI-ObjectDetection/blob/master/CS256_ProjectReport.pdf) and [presentation slides](https://github.com/ksheeraj/CS256-AI-ObjectDetection/blob/master/Presentation_FinalMilestone.pdf).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9890290662049052,
        0.9789100768824263,
        0.9866011216608833,
        0.9252375651533143,
        0.9892347246347303,
        0.9178551264298292,
        0.923593418602037,
        0.9956132081856233,
        0.8470909039402883,
        0.9490952238726634
      ],
      "excerpt": "Based on this diagram, we are running inference on low-light/dark images, taken from the Exclusively Dark dataset, using the Faster R-CNN model from Detectron2. The intent of this experiment is to examine how Faster R-CNN performs on a low-light/dark image. \nBased on this diagram, we are feeding in a few low-light/dark images into EnlightenGAN and then feeding in the fake images generated by EnlightenGAN into the same Faster R-CNN model as the one used in Architecture Diagram 1. The intent of this experiment is to examine how Faster R-CNN performs on enlightened/enhanced images. \nBased on this diagram, we are feeding in a few low-light/dark images into an image filter, called CLAHE. This filter will compute several histograms, each corresponding to a distinct section of the image, and use them to redistribute the lightness values of the image. Then the image outputs of this filter will be fed into the same Faster R-CNN model that we have been using so far. The intent of this experiment is to examine how Faster R-CNN performs on low-light/dark images that have been fed through an image filter. \nAs showcased in this diagram, the first two steps are a subset of Architecture Diagram 3. For this experiment, we will be taking the output images produced by the CLAHE filter and feed it through EnlightenGAN. Since EnlightenGAN adds noise to its output images, we feed the output images from EnlightenGAN into the CLAHE filter to filter out the noise. Then the output images from the CLAHE filter are fed into the Faster R-CNN model that we have been working with so far. The intent of this experiment is to examine how Faster R-CNN performs on images that have been applied with an image filter before and after EnlightenGAN. \nAs showcased in this diagram, the last three steps are a subset of Architecture Diagram 4. For this experiment, we are feeding in a few low-light/dark images into an image filter, called USM. This filter will amplify the high-frequency components of an image and produce an output with better contrast and brightness. We will be taking the output images produced by the USM filter and feed it through EnlightenGAN and follow Architecture Diagram 4 thereafter. The intent of this experiment is to examine how Faster R-CNN performs on images that have been applied with a combination of image filters before and after EnlightenGAN. \nBased on this diagram, we are finetuning our pretrained FasterRCNN using enlightened COCO dataset images. We're first feeding 5000 images from the COCO validation dataset through the enlightenGAN. These output images are combined into a custom dataset which are then used to finetune our existing FasterRCNN model. The intent of this approach was to improve object detection on the output images produced by EnlightenGAN. As the enlightened images contain noise, we were hoping that the model would get better at detecting objects in this noise. This experiment turned out to work perfectly and the resulting fine-tuned FasterRCNN performed much better. \nSee EnlightenGAN_Setup.pdf, or the Colab Notebook. \nThis page(code, report and presentation) is the Group A submission for the final project of the course CS256: Topics in Artificial Intelligence, Section 2 at San Jose State University. Led by Instructor: Mashhour Solh, Ph.D. \nThe group members are: Anket Sah, Amala Chirayil, Ksheeraj Sai Vepuri, Kriti Gupta, Sanmesh Bhosale. \nThe code maybe used for educational and commercial use under no warranties. For questions on this project and code please reach out to: amalachirayil@gmail.com. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ksheeraj/CS256-AI-ObjectDetection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Tue, 28 Dec 2021 06:45:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ksheeraj/CS256-AI-ObjectDetection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ksheeraj/CS256-AI-ObjectDetection",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The list below provides instructions on how to implement the deep learning models and image filters we used.\n- **Faster R-CNN**\n  \n  *We implemented the Faster R-CNN model on both AWS and Google COLAB.*\n  \n  - See [Faster R-CNN_AWS_Instructions](https://github.com/ksheeraj/CS256-AI-ObjectDetection/blob/master/Faster%20R-CNN_AWS_Instructions.pdf)\n  - See [Google COLAB Instructions](https://colab.research.google.com/drive/1RaWxgclMB8RpITo8Kci1qTecfm8iT61z)\n- **EnlightenGAN**\n  - See [EnlightenGAN_Setup](https://github.com/ksheeraj/CS256-AI-ObjectDetection/blob/master/EnlightenGAN_AWS_Instructions.pdf)\n- **CLAHE & USM**\n  - See [CLAHE&UnsharpMask_Setup](https://github.com/ksheeraj/CS256-AI-ObjectDetection/blob/master/Filters/CLAHE%26UnsharpMask_Setup.pdf)\n- **Finetuned Faster R-CNN**\n  - See [Google COLAB Instructions](https://colab.research.google.com/drive/1RaWxgclMB8RpITo8Kci1qTecfm8iT61z)\n\n**Note:** The same COLAB file is used for Faster R-CNN and finetuned Faster R-CNN.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8099459332341322
      ],
      "excerpt": "Now that you have installed the required deep learning models and image filters, you can use them to run through each of the architecture diagrams below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.850046821105287
      ],
      "excerpt": "See EnlightenGAN_Setup.pdf, or the Colab Notebook. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ksheeraj/CS256-AI-ObjectDetection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS256-AI-Human and Object Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS256-AI-ObjectDetection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ksheeraj",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ksheeraj/CS256-AI-ObjectDetection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 28 Dec 2021 06:45:36 GMT"
    },
    "technique": "GitHub API"
  }
}