{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.05933",
      "https://arxiv.org/abs/1911.05722\">arXiv</a> | <a href=\"https://github.com/facebookresearch/moco/\">GitHub</a>",
      "https://arxiv.org/abs/1911.05722\">arXiv preprint arXiv:2003.04297</a> (2020",
      "https://arxiv.org/abs/2003.04297</a> (2020).\n</div>"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<div id=\"moco\">\n[1] He, Kaiming, Haoqi Fan, Yuxin Wu, Saining Xie, and Ross Girshick. \"Momentum contrast for unsupervised visual representation learning.\" In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 9729-9738. 2020. (<a href=\"https://arxiv.org/abs/1911.05722\">arXiv</a> | <a href=\"https://github.com/facebookresearch/moco/\">GitHub</a>) \n</div>\n<div id=\"mocov2\">\n[2] Chen, Xinlei, Haoqi Fan, Ross Girshick, and Kaiming He. \"Improved baselines with momentum contrastive learning.\" <a href=\"https://arxiv.org/abs/1911.05722\">arXiv preprint arXiv:2003.04297</a> (2020).\n</div>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{hassani2020discern,\n\ttitle        = {DISCERN: diversity-based selection of centroids for k-estimation and rapid non-stochastic clustering},\n\tauthor       = {Hassani, Ali and Iranmanesh, Amir and Eftekhari, Mahdi and Salemi, Abbas},\n\tyear         = 2020,\n\tjournal      = {International Journal of Machine Learning and Cybernetics},\n\tdoi          = {10.1007/s13042-020-01193-5}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{hassani2020discern,\n    title        = {DISCERN: diversity-based selection of centroids for k-estimation and rapid non-stochastic clustering},\n    author       = {Hassani, Ali and Iranmanesh, Amir and Eftekhari, Mahdi and Salemi, Abbas},\n    year         = 2020,\n    journal      = {International Journal of Machine Learning and Cybernetics},\n    doi          = {10.1007/s13042-020-01193-5}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alihassanijr/DISCERN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-27T05:22:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-18T17:13:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9681096571207666
      ],
      "excerpt": "This is just another implementation of DISCERN, except it is implemented in PyTorch instead of your average numpy. As a result, we can use all of the CUDA greatness to boost DISCERN beyond imagination. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9338855875353289
      ],
      "excerpt": "For those who've read the paper: the similarity precomputation and diversity-based selection are now a lot faster than on an average CPU. I'm also working on a torch-based K-Means to really push this over the edge. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9240238535817766,
        0.9370597813110034
      ],
      "excerpt": "Two Jupyter notebooks are also provided in this repository (see examples/). Multivariate applies DISCERN to two of the multivariate datasets in the paper. \nThe other (ImageNette) applies it to <a href=\"https://github.com/fastai/imagenette\">one of the image datasets in the paper, ImageNette</a>. However, unlike the paper, the notebook uses MoCo <a href=\"#moco\">[1]</a><a href=\"#mocov2\">[2]</a> instead of a labeled-imagenet pretrained ResNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "DISCERN: Diversity-based Selection of Centroids for k-Estimation and Rapid Non-stochastic Clustering",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ali-nsua/DISCERN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 17:38:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alihassanijr/DISCERN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "alihassanijr/DISCERN",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ali-nsua/DISCERN/master/examples/Multivariate.ipynb",
      "https://raw.githubusercontent.com/ali-nsua/DISCERN/master/examples/ImageNette.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from DISCERN import TorchDISCERN \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alihassanijr/DISCERN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DISCERN: Diversity-based Selection of Centroids for k-Estimation and Rapid Non-stochastic Clustering",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DISCERN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "alihassanijr",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alihassanijr/DISCERN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 17:38:09 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python3\nX = load_data() #: This is assumed to be a 2-dimensional numpy array, where rows represent data samples.\n```\nBasic DISCERN instance (numpy-based):\n```python3\nfrom DISCERN import DISCERN\n\ndi = DISCERN()\ndi.fit(X)\n\nclustering_labels = di.labels_\ncluster_centers = di.cluster_centers_\nsse_loss = di.inertia_\n```\nFix the number of clusters to a specific number (only use DISCERN to initialize K-Means)\n```python3\ndi = DISCERN(n_clusters=K)\n```\nUse Spherical K-Means\n```python3\ndi = DISCERN(metric='cosine')\n```\nSpecify an upper bound for the number of clusters\n```python3\ndi = DISCERN(max_n_clusters=1000)\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}