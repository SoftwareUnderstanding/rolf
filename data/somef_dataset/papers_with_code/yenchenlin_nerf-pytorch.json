{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Kudos to the authors for their amazing results:\n```\n@misc{mildenhall2020nerf,\n    title={NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis},\n    author={Ben Mildenhall and Pratul P. Srinivasan and Matthew Tancik and Jonathan T. Barron and Ravi Ramamoorthi and Ren Ng},\n    year={2020},\n    eprint={2003.08934},\n    archivePrefix={arXiv},\n    primaryClass={cs.CV}\n}\n```\n\nHowever, if you find this implementation or pre-trained models helpful, please consider to cite:\n```\n@misc{lin2020nerfpytorch,\n  title={NeRF-pytorch},\n  author={Yen-Chen, Lin},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished={\\url{https://github.com/yenchenlin/nerf-pytorch/}},\n  year={2020}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{lin2020nerfpytorch,\n  title={NeRF-pytorch},\n  author={Yen-Chen, Lin},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished={\\url{https://github.com/yenchenlin/nerf-pytorch/}},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{mildenhall2020nerf,\n    title={NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis},\n    author={Ben Mildenhall and Pratul P. Srinivasan and Matthew Tancik and Jonathan T. Barron and Ravi Ramamoorthi and Ren Ng},\n    year={2020},\n    eprint={2003.08934},\n    archivePrefix={arXiv},\n    primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yenchenlin/nerf-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-05T08:29:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T02:51:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9843872760804474,
        0.9898603917785477
      ],
      "excerpt": "NeRF (Neural Radiance Fields) is a method that achieves state-of-the-art results for synthesizing novel views of complex scenes. Here are some videos generated by this repository (pre-trained models are provided below): \nThis project is a faithful PyTorch implementation of NeRF that reproduces the results while running 1.3 times faster. The code is based on authors' Tensorflow implementation here, and has been tested to match it numerically. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u251c\u2500\u2500 data                                                                                                                                                                                                        \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9181437826363393
      ],
      "excerpt": "Tests that ensure the results of all functions and training loop match the official implentation are contained in a different branch reproduce. One can check it out and run the tests: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A PyTorch implementation of NeRF (Neural Radiance Fields) that reproduces the results.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yenchenlin/nerf-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 274,
      "date": "Thu, 23 Dec 2021 07:13:10 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yenchenlin/nerf-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yenchenlin/nerf-pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yenchenlin/nerf-pytorch/master/download_example_data.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ngit clone https://github.com/yenchenlin/nerf-pytorch.git\ncd nerf-pytorch\npip install -r requirements.txt\n```\n\n<details>\n  <summary> Dependencies (click to expand) </summary>\n  \n  ",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9214515508342348
      ],
      "excerpt": "You can download the pre-trained models here. Place the downloaded directory in ./logs in order to test it later. See the following directory structure for an example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9206633769338113
      ],
      "excerpt": "git checkout reproduce \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8874359222819289
      ],
      "excerpt": "python run_nerf.py --config configs/{DATASET}.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8874359222819289
      ],
      "excerpt": "python run_nerf.py --config configs/{DATASET}.txt --render_only \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.866423325450878
      ],
      "excerpt": "You can download the pre-trained models here. Place the downloaded directory in ./logs in order to test it later. See the following directory structure for an example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8785951642562688
      ],
      "excerpt": "<img src='imgs/pipeline.jpg'/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yenchenlin/nerf-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 bmild\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "NeRF-pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "nerf-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yenchenlin",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yenchenlin/nerf-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  - PyTorch 1.4\n  - matplotlib\n  - numpy\n  - imageio\n  - imageio-ffmpeg\n  - configargparse\n  \nThe LLFF data loader requires ImageMagick.\n\nYou will also need the [LLFF code](http://github.com/fyusion/llff) (and COLMAP) set up to compute poses if you want to run on your own real data.\n  \n</details>\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1539,
      "date": "Thu, 23 Dec 2021 07:13:10 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Download data for two example datasets: `lego` and `fern`\n```\nbash download_example_data.sh\n```\n\nTo train a low-res `lego` NeRF:\n```\npython run_nerf.py --config configs/lego.txt\n```\nAfter training for 100k iterations (~4 hours on a single 2080 Ti), you can find the following video at `logs/lego_test/lego_test_spiral_100000_rgb.mp4`.\n\n![](https://user-images.githubusercontent.com/7057863/78473103-9353b300-7770-11ea-98ed-6ba2d877b62c.gif)\n\n---\n\nTo train a low-res `fern` NeRF:\n```\npython run_nerf.py --config configs/fern.txt\n```\nAfter training for 200k iterations (~8 hours on a single 2080 Ti), you can find the following video at `logs/fern_test/fern_test_spiral_200000_rgb.mp4` and `logs/fern_test/fern_test_spiral_200000_disp.mp4`\n\n![](https://user-images.githubusercontent.com/7057863/78473081-58ea1600-7770-11ea-92ce-2bbf6a3f9add.gif)\n\n---\n\n",
      "technique": "Header extraction"
    }
  ]
}