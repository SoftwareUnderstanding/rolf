{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2103.14574",
      "https://arxiv.org/abs/1706.03762",
      "https://arxiv.org/abs/2010.11439",
      "https://arxiv.org/abs/2103.14574"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [ming024's FastSpeech2](https://github.com/ming024/FastSpeech2)\u00a0(Later than 2021.02.26 ver.)\n- [Parallel Tacotron: Non-Autoregressive and Controllable TTS](https://arxiv.org/abs/2010.11439)\n- [Parallel Tacotron 2: A Non-Autoregressive Neural TTS Model with Differentiable Duration Modeling](https://arxiv.org/abs/2103.14574)",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@misc{lee2021parallel_tacotron2,\n  author = {Lee, Keon},\n  title = {Parallel-Tacotron2},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/keonlee9420/Parallel-Tacotron2}}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{lee2021parallel_tacotron2,\n  author = {Lee, Keon},\n  title = {Parallel-Tacotron2},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/keonlee9420/Parallel-Tacotron2}}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/keonlee9420/Parallel-Tacotron2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-30T07:21:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T13:17:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9744221242312378
      ],
      "excerpt": "Pytorch Implementation of Google's Parallel Tacotron 2: A Non-Autoregressive Neural TTS Model with Differentiable Duration Modeling \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.920847813077487
      ],
      "excerpt": "- 2021.05.15: Implementation done. Sanity checks on training and inference. But still the model cannot converge. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8188460339559227
      ],
      "excerpt": "The supported datasets: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9243717878618372
      ],
      "excerpt": "Batch inference is also supported, try \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9910842505160441,
        0.9665160517487322,
        0.8733073815559831
      ],
      "excerpt": "Overall, normalization or activation, which is not suggested in the original paper, is adequately arranged to prevent NaN value (gradient) on forward and backward calculations. (NaN indicates that something is wrong in the network) \nUse the FFTBlock of FastSpeech2 for the transformer block of the text encoder. \nUse dropout 0.2 for the ConvBlock of the text encoder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9941537093117815
      ],
      "excerpt": "Regular sinusoidal positional embedding is used in frame-level instead of combinations of three positional embeddings in Parallel Tacotron. As the model depends entirely on unsupervised learning for the position, this choice can be a reason for the fails on model converge. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.914232112192511
      ],
      "excerpt": "When obtaining W and C, concatenation operation is applied among S, E, and V after frame-domain (T domain) broadcasting of V. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch Implementation of Google's Parallel Tacotron 2: A Non-Autoregressive Neural TTS Model with Differentiable Duration Modeling",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://fairseq.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/keonlee9420/Parallel-Tacotron2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 27,
      "date": "Tue, 28 Dec 2021 23:11:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/keonlee9420/Parallel-Tacotron2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "keonlee9420/Parallel-Tacotron2",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.824602167795988
      ],
      "excerpt": "Base on pytorch-softdtw-cuda (post) for the soft-DTW. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8673805446708356
      ],
      "excerpt": "    <img src=\"img/parallel_tacotron.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8481942365069672
      ],
      "excerpt": "    <img src=\"img/parallel_tacotron2.png\" width=\"40%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8673805446708356
      ],
      "excerpt": "    <img src=\"img/debugging.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8925035593013155
      ],
      "excerpt": "python3 prepare_data.py config/LJSpeech/preprocess.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8925035593013155,
        0.8287974015137436,
        0.8924227954990515
      ],
      "excerpt": "python3 preprocess.py config/LJSpeech/preprocess.yaml \nTrain your model with \npython3 train.py -p config/LJSpeech/preprocess.yaml -m config/LJSpeech/model.yaml -t config/LJSpeech/train.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9077393228626486
      ],
      "excerpt": "python3 synthesize.py --text \"YOUR_DESIRED_TEXT\" --restore_step 900000 --mode single -p config/LJSpeech/preprocess.yaml -m config/LJSpeech/model.yaml -t config/LJSpeech/train.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9008340221033896
      ],
      "excerpt": "python3 synthesize.py --source preprocessed_data/LJSpeech/val.txt --restore_step 900000 --mode batch -p config/LJSpeech/preprocess.yaml -m config/LJSpeech/model.yaml -t config/LJSpeech/train.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.825361263358686
      ],
      "excerpt": "tensorboard --logdir output/log/LJSpeech \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/keonlee9420/Parallel-Tacotron2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Jungil Kong\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Parallel Tacotron2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Parallel-Tacotron2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "keonlee9420",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/keonlee9420/Parallel-Tacotron2/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "keonlee9420",
        "body": "",
        "dateCreated": "2021-05-16T06:27:34Z",
        "datePublished": "2021-05-16T06:32:01Z",
        "html_url": "https://github.com/keonlee9420/Parallel-Tacotron2/releases/tag/v0.1.0",
        "name": "First Release",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/keonlee9420/Parallel-Tacotron2/tarball/v0.1.0",
        "url": "https://api.github.com/repos/keonlee9420/Parallel-Tacotron2/releases/43010429",
        "zipball_url": "https://api.github.com/repos/keonlee9420/Parallel-Tacotron2/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- You can install the Python dependencies with\n\n    ```bash\n    pip3 install -r requirements.txt\n    ```\n\n- Install fairseq ([official document](https://fairseq.readthedocs.io/en/latest/index.html), [github](https://github.com/pytorch/fairseq)) to utilize `LConvBlock`. Please check [#5](https://github.com/keonlee9420/Parallel-Tacotron2/issues/5) to resolve any issue on installing.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 121,
      "date": "Tue, 28 Dec 2021 23:11:08 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "neural-tts",
      "non-autoregressive",
      "vae",
      "self-attention",
      "duration",
      "parallel-tacotron",
      "parallel-tacotron2",
      "speech-synthesis",
      "pytorch",
      "tts",
      "text-to-speech",
      "english",
      "fastspeech"
    ],
    "technique": "GitHub API"
  }
}