{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.01561",
      "https://arxiv.org/abs/1903.01292"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{mirowski2019streetlearn,\n  title={The StreetLearn Environment and Dataset},\n  author={Mirowski, Piotr and Banki-Horvath, Andras and Anderson, Keith and Teplyashin, Denis and Hermann, Karl Moritz and Malinowski, Mateusz and Grimes, Matthew Koichi and Simonyan, Karen and Kavukcuoglu, Koray and Zisserman, Andrew and others},\n  journal={arXiv preprint arXiv:1903.01292},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{mirowski2018learning,\n  title={Learning to Navigate in Cities Without a Map},\n  author={Mirowski, Piotr and Grimes, Matthew Koichi and Malinowski, Mateusz and Hermann, Karl Moritz and Anderson, Keith and Teplyashin, Denis and Simonyan, Karen and Kavukcuoglu, Koray and Zisserman, Andrew and Hadsell, Raia},\n  booktitle={Neural Information Processing Systems (NeurIPS)},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9798572580010966
      ],
      "excerpt": "officially supported Google product. Please cite papers [1] and [4] if you use the code from this repository in your work. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.99997517082234
      ],
      "excerpt": "* 29k Manhattan panoramas used in [5] \"TOUCHDOWN: Natural Language Navigation and Spatial Reasoning in Visual Street Environments\" (Chen, Suhr, Misra et al, ICCV 2019), with accompanying code at https://github.com/lil-lab/touchdown: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/streetlearn",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing guidelines\nHow to become a contributor and submit your own code\nContributor License Agreements\nWe'd love to accept your patches! Before we can take them, we have to jump a\ncouple of legal hurdles.\nPlease fill out either the individual or corporate Contributor License Agreement\n(CLA).\n\nIf you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an individual\n    CLA.\nIf you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a corporate\n    CLA.\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\nNOTE: Only original source code from you and other people that have signed\nthe CLA can be accepted into the main repository.\nContributing code\nIf you have improvements to this library, send us your pull requests! For those\njust getting started, GitHub has a\nhowto.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-12T15:40:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-14T03:02:32Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9932136818160913,
        0.8370584847734049,
        0.8490932822085104
      ],
      "excerpt": "This repository contains an implementation of the \nStreetLearn C++ engine and Python environment for training navigation agents in real-world photographic street environments, as well as code for implementing the agents used in [1] \"Learning to Navigate in Cities Without a Map\" (NeurIPS 2018). This environment was also used in two follow-up papers: [2] \"Cross-View Policy Learning for Street Navigation\" (ICCV 2019) and [3] \"Learning to follow directions in Street View\" (AAAI 2020), as well as in technical report [4] \"The StreetLearn Environment and Dataset\". The StreetLearn environment relies on panorama images from \nGoogle Street View and provides an interface for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.989640793490401
      ],
      "excerpt": "Our papers [1], [2] and [3] also provide a detailed description of how to train and implement navigation agents in the StreetLearn environment by using a TensorFlow implementation of \"Importance Weighted Actor-Learner Architectures\", published in Espeholt, Soyer, Munos et al. (2018) \"IMPALA: Scalable Distributed Deep-RL with Importance Weighted Actor-Learner Architectures\"). The generic agent and trainer code have been published by Lasse Espeholt under an Apache license at: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8397523463896835
      ],
      "excerpt": "streetlearn/engine Our C++ StreetLearn engine for loading, caching and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8205167080150558,
        0.9283690319348978
      ],
      "excerpt": "    yaw, pitch and field of view, and for handling navigation (moving from one \n    panorama to another) depending on the city street graph and the current \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047
      ],
      "excerpt": "streetlearn/proto The message \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9728823973997709
      ],
      "excerpt": "    oracle_agent and instruction_following_oracle_agent for courier and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9668198316554731
      ],
      "excerpt": "    and instruction_following_oracle_agent are similar to the human agent \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8894769441932616
      ],
      "excerpt": "    they report oracle performance on these tasks. A batched version of th \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8657698499050358
      ],
      "excerpt": "Bazel is the official build system for StreetLearn. The \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8498364950131461
      ],
      "excerpt": "To build the human agent and the oracle agent in the StreetLearn environment, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9903091566611909,
        0.839653102148002,
        0.923431030079506
      ],
      "excerpt": "    of the agent). In the human_agent, press a or d. \nRotate up or down in the panorama, by a specified angle (change the pitch of \n    the agent). In the human_agent, press w or s. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9769390551321825,
        0.9735210591271218,
        0.921431803163013,
        0.8416544228369738
      ],
      "excerpt": "    bearing of the agent from A to B is within a tolerance angle of 30 degrees. \n    In the human_agent, press space. \nZoom in and out in the panorama. In the human_agent, press i or o. \nAdditional keys for the human_agent are escape and p (to print the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9013379407303519
      ],
      "excerpt": "instance, in our paper, we used 5 actions: (move forward, turn left by 22.5 deg, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9516905472252538,
        0.8505817692669628
      ],
      "excerpt": "Along the bottom of the view_image is the navigation bar which displays a \nsmall circle in any direction in which travel is possible: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9008557251646165
      ],
      "excerpt": "When they are out of this range, they will turn red meaning this is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8221606349800549
      ],
      "excerpt": "When more than one dots are within the centre range, all except the most \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9691147838061228,
        0.9396136282232725
      ],
      "excerpt": "in the middle of a street. Because we are trying to train agents to recognize \nstreets as navigable, and in order not to confuse the agents, red stop signs are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9438462220965324
      ],
      "excerpt": "You can request the StreetLearn dataset on the StreetLearn project website. The following datasets are currently distributed: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8170373310179553
      ],
      "excerpt": "* 58k Pittsburgh panoramas, used in [2], [3] and [4]: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762,
        0.9537992585360089
      ],
      "excerpt": " touchdown_manhattan_lowres (downsampled to 500 x 250) \nThe downsampled version of the panoramas can be used when the RGB inputs are small (e.g., 84 x 84), to save on panorama image loading and projection time. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9403478605369104,
        0.9732594970963544
      ],
      "excerpt": "* observation (tuple of observations requested at construction), \n* reward (a float with the current reward of the agent), \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8827740252196037,
        0.8347045694353802
      ],
      "excerpt": "* and info (a dictionary of environment state variables). \nAfter creating the environment, it is initialised by calling function reset(). If the flag auto_reset is set to True at construction, reset() will be called automatically every time that an episode ends. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9780820398881042,
        0.9279156480336077,
        0.9616200618381374
      ],
      "excerpt": "height: Height of the streetview image. \ngraph_width: Width of the map graph image. \ngraph_height: Height of the map graph image. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065820860419143
      ],
      "excerpt": "min_graph_depth: Min bound on BFS depth for panos. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911478160601604
      ],
      "excerpt": "    starts in the courier game. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911478160601604
      ],
      "excerpt": "    starts in the courier game. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853278912041405,
        0.805098033705066
      ],
      "excerpt": "    curriculum learning starts, used in the curriculum courier game. \nhours_curriculum_part_1: Number of hours for the first part of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.927335129277605
      ],
      "excerpt": "hours_curriculum_part_2: Number of hours for the second part of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309763131664301,
        0.9474889131966912,
        0.8309763131664301,
        0.9474889131966912,
        0.9426214536658817
      ],
      "excerpt": "min_goal_distance_curriculum: Distance in meters of the goal location at \n    the beginning of curriculum learning, used in the curriculum courier game. \nmax_goal_distance_curriculum: Distance in meters of the goal location at \n    the beginning of curriculum learning, used in the curriculum courier game. \ninstruction_curriculum_type: Type of curriculum learning, used in the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9017314226279121
      ],
      "excerpt": "    to the goal shall be shown on the graph. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9554787091198745,
        0.9760568143572398,
        0.8107082033087798
      ],
      "excerpt": "    oracle agents, visualisation and for imitation learning). \nneighbor_resolution: Used to calculate a binary occupancy vector of \n    neighbors to the current pano. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016,
        0.8101590018341801
      ],
      "excerpt": "reward_per_coin: Coin reward for coin game. \nreward_at_waypoint: Waypoint reward for the instruction-following games. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.998492883852106
      ],
      "excerpt": "proportion_of_panos_with_coins: The proportion of panos with coins. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865,
        0.9968029537584643
      ],
      "excerpt": "    'incremental_instruction_game' and 'step_by_step_instruction_game'. \naction_spec: Either of 'streetlearn_default', 'streetlearn_fast_rotate', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8899303780735288
      ],
      "excerpt": "    the max number of frames is achieved. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9633820015778128,
        0.9693233393948762,
        0.9633820015778128,
        0.9693233393948762,
        0.9604433678767972
      ],
      "excerpt": "yaw: Scalar value of the yaw angle of the agent, in degrees (zero \n    corresponds to North), \npitch: Scalar value of the pitch angle of the agent, in degrees (zero \n    corresponds to horizontal), \nmetadata: Message protocol buffer of type Pano with the metadata of the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9384315244478058,
        0.8601993875499395,
        0.9634365670943906
      ],
      "excerpt": "target_metadata: Message protocol buffer of type Pano with the metadata \n    of the target/goal panorama, \nlatlng: Tuple of lat/lng scalar values for the current position of the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8860978468711559
      ],
      "excerpt": "target_latlng: Tuple of lat/lng scalar values for the target/goal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9171254183013505
      ],
      "excerpt": "    using 1024 bins (32 bins for latitude and 32 bins for longitude), \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9171254183013505
      ],
      "excerpt": "    using 1024 bins (32 bins for latitude and 32 bins for longitude), \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8437040002215003,
        0.9765677710345986
      ],
      "excerpt": "    around the agent, with 16 bins for the directions around the agent and bin 0 \n    corresponding to the traversability straight ahead of the agent. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127,
        0.954566254865703
      ],
      "excerpt": "    with n instructions, \ninstructions: List of n string instructions for the agent at specific \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127,
        0.818676366853892,
        0.8064628349843022
      ],
      "excerpt": "    with n instructions, \nground_truth_direction: Scalar value of the relative ground truth \n    direction to be taken by the agent in order to follow a shortest path to the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630050140834701,
        0.9819240942900779
      ],
      "excerpt": "    reward of 1 for each. Once picked up, these rewards do not reappear until \n    the end of the episode. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8698699124833347,
        0.9825735203370582
      ],
      "excerpt": "    lat/long pairs. Once the goal is reached (with 100m tolerance), a new goal \n    is sampled, until the end of the episode. Rewards at a goal are proportional \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8871890793576189
      ],
      "excerpt": "    when it gets the new goal assignment to that goal position. Additional \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9487072038720685,
        0.8726188621217438
      ],
      "excerpt": "    of 200m of the goal. Additional coins can also be scattered throughout the \n    environment. The proportion of coins, the goal radius and the early reward \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8757361302303873
      ],
      "excerpt": "curriculum_courier_game: same as the courier game, but with a curriculum \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9575783814164102
      ],
      "excerpt": "    agent's position to the goal when it is assigned). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.861825735456761,
        0.8883091243351693
      ],
      "excerpt": "    navigation instructions to direct agents to a goal. Agents are provided with \n    a list of instructions as well as thumbnails that guide the agent from its \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9536994137009475,
        0.8878081745499992
      ],
      "excerpt": "    two thumbnails at a time, in the other game variants the whole list is \n    available throughout the whole game. Reward is granted upon reaching the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865,
        0.8024763180555077
      ],
      "excerpt": "    (incremental_instruction_game and step_by_step_instruction_game \n    only). During training various curriculum strategies are available to the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A C++/Python implementation of the StreetLearn environment based on images from Street View, as well as a TensorFlow implementation of goal-driven navigation agents solving the task published in \u201cLearning to Navigate in Cities Without a Map\u201d, NeurIPS 2018",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/streetlearn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 51,
      "date": "Sat, 25 Dec 2021 06:01:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmind/streetlearn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmind/streetlearn",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/deepmind/streetlearn/master/get_scalable_agent.sh",
      "https://raw.githubusercontent.com/deepmind/streetlearn/master/streetlearn/pip_package/build_pip_package.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[This page](https://bazel.build/) describes how to install the Bazel build and\ntest tool on your machine. We currently support Bazel versions up to 0.24.0,\nwhose installation instructions are listed on [this page](https://docs.bazel.build/versions/master/install-ubuntu.html) under section `Using the binary installer` (copy-pasted below):\n\n```shell\nwget https://github.com/bazelbuild/bazel/releases/download/0.24.0/bazel-0.24.0-installer-linux-x86_64.sh\nchmod +x bazel-0.24.0-installer-linux-x86_64.sh\n./bazel-0.24.0-installer-linux-x86_64.sh  --user\nexport PATH=\"$PATH:$HOME/bin\"\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\npip install six\npip install absl-py\npip install inflection\npip install wrapt\npip install numpy\npip install dm-sonnet\npip install tensorflow-gpu\npip install pygame\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\nwget https://github.com/opencv/opencv/archive/2.4.13.6.zip\nunzip 2.4.13.6.zip\ncd opencv-2.4.13.6\nmkdir build\ncd build\ncmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..\nmake -j7\nsudo make install\nsudo ldconfig\ncd ../..\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\ngit clone https://github.com/google/clif.git\ncd clif\n./INSTALL.sh\ncd ..\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "For detailed information see:\nhttps://github.com/protocolbuffers/protobuf/blob/master/src/README.md\n\n```shell\ngit clone https://github.com/protocolbuffers/protobuf.git\ncd protobuf\ngit submodule update --init --recursive\n./autogen.sh\n./configure\nmake -j7\nsudo make install\nsudo ldconfig\ncd python\npython setup.py build\nsudo python setup.py install\ncd ../..\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\nsudo apt-get install autoconf automake libtool curl make g++ unzip virtualenv python-virtualenv cmake subversion pkg-config libpython-dev libcairo2-dev libboost-all-dev python-pip libssl-dev\npip install setuptools\npip install pyparsing\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.872711272612475,
        0.8556096208768982
      ],
      "excerpt": "streetlearn/python/environment A Python-based interface for calling the \n    StreetLearn environment with custom action spaces. Within the Python \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9361855697405077
      ],
      "excerpt": "    Python using pygame and instantiate the StreetLearn environment on the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8869135913686993
      ],
      "excerpt": "    goal via waypoints, following instructions (instruction-following game) and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8925143270695213,
        0.8664427257085436
      ],
      "excerpt": "build has only been tested running on Ubuntu 18.04. \nClone this repository and install \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9893272198983933,
        0.9906248903846466,
        0.9023697225149864
      ],
      "excerpt": "git clone https://github.com/deepmind/streetlearn.git \ncd streetlearn \nsh get_scalable_agent.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096104964140866
      ],
      "excerpt": "bazel build streetlearn:streetlearn_engine_py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.854021590107631
      ],
      "excerpt": "with all the dependencies: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821013108898936
      ],
      "excerpt": "bazel build streetlearn/python/ui:all \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9220451905096577
      ],
      "excerpt": "    instruction following games. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8766493738115435
      ],
      "excerpt": "start_pano: The pano ID string to start from. The graph will be build \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.962323692361909
      ],
      "excerpt": "    requested from the environment: ['view_image', 'graph_image', 'yaw', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867231269720702
      ],
      "excerpt": "    'thumbnails', 'instructions', 'ground_truth_direction'] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8970940322430695
      ],
      "excerpt": "reward_at_waypoint: Waypoint reward for the instruction-following games. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.913177629970372
      ],
      "excerpt": "game_name: Game name, can be: 'coin_game', 'exploration_game', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260260735436256
      ],
      "excerpt": "    returned from the environment, that should be seen by the agent at specific \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8969133962444663
      ],
      "excerpt": "    with n instructions, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8969133962444663
      ],
      "excerpt": "    with n instructions, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9288832491611027
      ],
      "excerpt": "The following games are available in the StreetLearn environment: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8006015271174913
      ],
      "excerpt": "Default environment settings are stored in streetlearn/python/default_config.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8221280028877203
      ],
      "excerpt": "yaw_label: Integer discretized value of the agent yaw using 16 bins, \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmind/streetlearn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Starlark",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n   '",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "StreetLearn",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "streetlearn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmind",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/streetlearn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\nsudo apt-get install autoconf automake libtool curl make g++ unzip virtualenv python-virtualenv cmake subversion pkg-config libpython-dev libcairo2-dev libboost-all-dev python-pip libssl-dev\npip install setuptools\npip install pyparsing\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\npip install six\npip install absl-py\npip install inflection\npip install wrapt\npip install numpy\npip install dm-sonnet\npip install tensorflow-gpu\npip install pygame\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the human agent using one of the StreetLearn datasets downloaded and\nstored at **dataset_path** (note that **dataset_path** needs to be absolute, not relative):\n\n```shell\nbazel run streetlearn/python/ui:human_agent -- --dataset_path=<dataset_path>\n```\n\nFor help with the options of the human_agent:\n\n```shell\nbazel run streetlearn/python/ui:human_agent -- --help\n```\n\nSimilarly, to run the oracle agent on the courier game:\n\n```shell\nbazel run streetlearn/python/ui:oracle_agent -- --dataset_path=<dataset_path>\n```\n\nThe human agent and the oracle agent show a **view_image** (on top) and a\n**graph_image** (on bottom).\n\nNote: you need to add the following line to your `.bashrc` script to avoid specifying the CLIF path each time you open a new terminal:\n\n```shell\nexport CLIF_PATH=$HOME/opt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 232,
      "date": "Sat, 25 Dec 2021 06:01:44 GMT"
    },
    "technique": "GitHub API"
  }
}