{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.06650"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kilgore92/PyTorch-UNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-30T13:58:07Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-23T05:18:49Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8906215304809366
      ],
      "excerpt": "This project has been set up using PyScaffold 3.2.1. For details and usage \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of the UNet model -- https://arxiv.org/abs/1505.04597",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kilgore92/PyTorch-UNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Fri, 24 Dec 2021 03:38:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kilgore92/PyTorch-UNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kilgore92/PyTorch-UNet",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/kilgore92/PyTorch-UNet/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can install this package in your local python environment and import it as a module in your project.\n\n* Clone this repository in a folder of your choice.\n```\ncd <UNET_FOLDER>\ngit clone https://github.com/kilgore92/PyTorch-UNet.git\n\n```\n\n* Install package dependencies as follows:\n```\ncd <UNET_FOLDER>\n<PATH_TO_PYTHON_ENV>/bin/pip install -r requirements.txt\n```\n\n\n* Install this in your local python environment using the ```setup.py``` script.\n```\ncd <UNET_FOLDER>\nconda activate <ENV_NAME>\npython setup.py install\n```\nor\n\n```\n<PATH_TO_PYTHON_ENV>/bin/python setup.py install \n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kilgore92/PyTorch-UNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "U-Net - PyTorch Implementation\n============================== \n\nImplementation of the [U-Net](http://arxiv.org/abs/1505.04597) model, a popular image segmentation network.\nThis is quite stable and configurable, I've used it across multiple datasets and as a component in a couple of projects.\n\n* Update: Also supports segmentation of 3-D volumes based on the [3-D UNet architecture](https://arxiv.org/abs/1606.06650)\n\n* Update: All batch normalization operations have been replaced by instance normalization (to account for small batch sizes in medical images) and ReLU activation has been replaced by LeakyReLU due to its greater adoption in recent works. \n\n\n\nInstallation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch-UNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kilgore92",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kilgore92/PyTorch-UNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Fri, 24 Dec 2021 03:38:38 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "unet-pytorch",
      "image-segmentation",
      "pytorch",
      "medical-imaging",
      "3d-unet",
      "u-net"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom unet.model import UNet\n...\n\nmodel = UNet(n_channels=1,\n             num_classes=2,\n             use_bn=True,\n             mode='2D',\n             use_pooling=False\n             )\n```\n\nFor more information about various instantiation arguments:\n```python\nfrom unet.model import UNet\nprint(UNet.__doc__)\n     PyTorch class definition for the U-Net architecture for image segmentation\n\n     Parameters:\n         n_channels (int) : Number of image channels\n         base_filter_num (int) : Number of filters for the first convolution (doubled for every subsequent block)\n         num_blocks (int) : Number of encoder/decoder blocks\n         num_classes(int) : Number of classes that need to be segmented\n         mode (str): 2D or 3D input\n         use_pooling (bool): Set to 'True' to use MaxPool as downnsampling op.\n                             If 'False', strided convolution would be used to downsample feature maps (http://arxiv.org/abs/1908.02182)\n\n     Returns:\n         out (torch.Tensor) : Prediction of the segmentation map\n\n```\nThis package is exclusively tested on Python 3.7.3 and PyTorch 1.1.0 \n\n",
      "technique": "Header extraction"
    }
  ]
}