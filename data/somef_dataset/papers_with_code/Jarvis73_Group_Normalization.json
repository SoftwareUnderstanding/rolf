{
  "citation": [
    {
      "confidence": [
        0.9772144729505301
      ],
      "excerpt": "2018/12/1:  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Jarvis73/Group_Normalization",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-10T14:05:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-30T03:08:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9132883712032364,
        0.9144623238190074
      ],
      "excerpt": "For details, please reference the blog post. \nOther implementation in tensorflow contributions: Group Norm \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.876389752765487,
        0.9298786146421585,
        0.9291737825931872,
        0.8865783452485817
      ],
      "excerpt": "Here is a simple group normalization http://arxiv.org/abs/1803.08494 with tensorflow. \nIf you want to use the simplest implementation of group normalization, then just use the code given in the paper and remember to define the trainable variables gamma and beta. And these two variables should have the same shape of [N, G, 1, 1, 1] (tensorflow will broadcast it to [N, G, C//G, H, W]). \nBut maybe someone want to use a moving average version of group norm, just like batch norm implemented in tensorflow. So I write a simple wrapper function to use moving average. If you have read the paper of Wu and He, you should know that LN (Layer Norm) and IN (Instance Norm) are two extreme cases of GN. Inspired by this conclusion, actually we can implement group norm directly in tensorflow using tf.layers.batch_normalization. Actually, in the doc of tf.layers.BatchNormalization, parameter axis is explained detailedly.  \nFor an input tensor with shape [N, H, W, C]: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8865783452485817
      ],
      "excerpt": "For an input tensor with shape [N, C, C//G, H, W]: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A simple group normalization with batch norm in tensorflow (of cource with moving average).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Jarvis73/Group_Normalization/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 30 Dec 2021 00:05:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Jarvis73/Group_Normalization/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Jarvis73/Group_Normalization",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Jarvis73/Group_Normalization/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Jianwei ZHANG\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Group Normalization",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Group_Normalization",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Jarvis73",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Jarvis73/Group_Normalization/blob/master/Readme.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* tensorflow >= 1.5\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Thu, 30 Dec 2021 00:05:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "normalization",
      "tensorflow",
      "python"
    ],
    "technique": "GitHub API"
  }
}