{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385",
      "https://arxiv.org/abs/1512.03385\n\n[3] Fran\u00e7ois Chollet. Xception: Deep Learning with Depthwise Separable Convolutions[EB/OL]. https://arxiv.org/abs/1610.02357.\n\n[4] Karen Simonyan, Andrew Zisserman. Very Deep Convolutional Networks for Large-Scale Image Recognition[EB/OL]. https://arxiv.org/abs/1409.1556.\n\n[5] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, Zbigniew Wojna. Rethinking the Inception Architecture for Computer Vision[EB/OL]. https://arxiv.org/abs/1512.00567 .\n\n[6] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi. Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning[EB/OL]. https://arxiv.org/abs/1602.07261.\n\n[7] Alex Krizhevsky, Ilya Sutskever, Geoffrey E.Hinton. ImageNet Classification with Deep Convolutional Neural Networks[EB/OL]. https://www.nvidia.cn/content/tesla/pdf/machine-learning/imagenet-classification-with-deep-convolutional-nn.pdf.",
      "https://arxiv.org/abs/1610.02357.\n\n[4] Karen Simonyan, Andrew Zisserman. Very Deep Convolutional Networks for Large-Scale Image Recognition[EB/OL]. https://arxiv.org/abs/1409.1556.\n\n[5] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, Zbigniew Wojna. Rethinking the Inception Architecture for Computer Vision[EB/OL]. https://arxiv.org/abs/1512.00567 .\n\n[6] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi. Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning[EB/OL]. https://arxiv.org/abs/1602.07261.\n\n[7] Alex Krizhevsky, Ilya Sutskever, Geoffrey E.Hinton. ImageNet Classification with Deep Convolutional Neural Networks[EB/OL]. https://www.nvidia.cn/content/tesla/pdf/machine-learning/imagenet-classification-with-deep-convolutional-nn.pdf.",
      "https://arxiv.org/abs/1409.1556.\n\n[5] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, Zbigniew Wojna. Rethinking the Inception Architecture for Computer Vision[EB/OL]. https://arxiv.org/abs/1512.00567 .\n\n[6] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi. Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning[EB/OL]. https://arxiv.org/abs/1602.07261.\n\n[7] Alex Krizhevsky, Ilya Sutskever, Geoffrey E.Hinton. ImageNet Classification with Deep Convolutional Neural Networks[EB/OL]. https://www.nvidia.cn/content/tesla/pdf/machine-learning/imagenet-classification-with-deep-convolutional-nn.pdf.",
      "https://arxiv.org/abs/1512.00567 .\n\n[6] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi. Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning[EB/OL]. https://arxiv.org/abs/1602.07261.\n\n[7] Alex Krizhevsky, Ilya Sutskever, Geoffrey E.Hinton. ImageNet Classification with Deep Convolutional Neural Networks[EB/OL]. https://www.nvidia.cn/content/tesla/pdf/machine-learning/imagenet-classification-with-deep-convolutional-nn.pdf.",
      "https://arxiv.org/abs/1602.07261.\n\n[7] Alex Krizhevsky, Ilya Sutskever, Geoffrey E.Hinton. ImageNet Classification with Deep Convolutional Neural Networks[EB/OL]. https://www.nvidia.cn/content/tesla/pdf/machine-learning/imagenet-classification-with-deep-convolutional-nn.pdf."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8164327028374208
      ],
      "excerpt": "ResNet\u5f15\u5165\u4e86\u6b8b\u5dee\u7f51\u7edc\u7ed3\u6784\uff08Residual Network\uff09\uff0c\u901a\u8fc7\u6b8b\u5dee\u7f51\u7edc\uff0c\u968f\u7740\u7f51\u7edc\u7684\u52a0\u6df1\uff0c\u4e5f\u4e0d\u964d\u4f4e\u51c6\u786e\u7387\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if i &lt; m : \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if lambda_func: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "history = LossHistory() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "earlystop = EarlyStopping(monitor='val_acc',patience =10,verbose=1,mode = 'max') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999997762677816,
        0.9437269244158797,
        0.8998084869379566,
        0.9834886410222506,
        0.8081793511149808
      ],
      "excerpt": "[2] Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun. Deep Residual Learning for Image Recognition[EB/OL]. arXiv:1512.03385 \n[3] Fran\u00e7ois Chollet. Xception: Deep Learning with Depthwise Separable Convolutions[EB/OL]. arXiv:1610.02357. \n[4] Karen Simonyan, Andrew Zisserman. Very Deep Convolutional Networks for Large-Scale Image Recognition[EB/OL]. arXiv:1409.1556. \n[5] Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, Zbigniew Wojna. Rethinking the Inception Architecture for Computer Vision[EB/OL]. arXiv:1512.00567 . \n[6] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi. Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning[EB/OL]. arXiv:1602.07261. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JesonZhang822/Dogs-VS-Cats-Project",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-10T13:41:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-12T13:07:22Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "def gap_pred(MODEL, image_size, pool=None,lambda_func=None): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "valid = model.predict_generator(valid_gen) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    h.create_dataset(\"valid\",data=valid) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875,
        0.860059181823877
      ],
      "excerpt": "x = Dense(1, activation='sigmoid')(input_tensor) \nmodel = Model(input_tensor, x) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": ":Validation Data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606018550295674
      ],
      "excerpt": "model.fit(X_train, y_train, batch_size=128, epochs=50,validation_data=valid_data,callbacks = [history,earlystop]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "\u6709\u5173base_model\u6a21\u578b\uff0c\u91c7\u7528Xception\u6a21\u578b\uff08\u4e0d\u5305\u542bTop\u5c42\uff0c\u91c7\u7528GlobalAveragePooling2D\u6c60\u5316\u5c42\uff09,\u91cd\u6784Top Model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = Sequential() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029833481484189
      ],
      "excerpt": "[1] Francois Chollet.Building powerful image classification models using very little data[EB/OL].https://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html, 2016-06-05 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8319057821236635
      ],
      "excerpt": "[6] Christian Szegedy, Sergey Ioffe, Vincent Vanhoucke, Alex Alemi. Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning[EB/OL]. arXiv:1602.07261. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "The Capstone project for Udacity Machine Learning Engineer Nanodegree",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JesonZhang822/Dogs-VS-Cats-Project/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 07:22:17 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JesonZhang822/Dogs-VS-Cats-Project/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JesonZhang822/Dogs-VS-Cats-Project",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JesonZhang822/Dogs-VS-Cats-Project/master/pre_process.ipynb",
      "https://raw.githubusercontent.com/JesonZhang822/Dogs-VS-Cats-Project/master/model_train.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8953564650381242
      ],
      "excerpt": "    os.mkdir(data_path) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8217650256467208
      ],
      "excerpt": "    os.makedirs('{}/train/{}/'.format(data_path,name)) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "    \u251c\u2500\u2500 train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106699464306012
      ],
      "excerpt": "    |   |   \u2514\u2500\u2500 cat.xxx.jpg  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106699464306012
      ],
      "excerpt": "    |       \u2514\u2500\u2500 dog.xxx.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106699464306012
      ],
      "excerpt": "    |   |   \u2514\u2500\u2500 cat.xxx.jpg  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106699464306012,
        0.8633989807152664,
        0.8106699464306012
      ],
      "excerpt": "    |       \u2514\u2500\u2500 dog.xxx.jpg \n    \u2514\u2500\u2500 test \n        \u2514\u2500\u2500 xxx.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8293147603640854
      ],
      "excerpt": "        shutil.rmtree(data_path,True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899016392056632,
        0.8562989601388081
      ],
      "excerpt": "    os.makedirs('{}/train/{}/'.format(data_path,name)) \n    os.makedirs('{}/validation/{}/'.format(data_path,name)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8899238452212213,
        0.8899238452212213
      ],
      "excerpt": "        shutil.copyfile('{}/{}'.format(train_path,cat_files[i]),'{}/train/cats/{}'.format(data_path,cat_files[i])) \n        shutil.copyfile('{}/{}'.format(train_path,dog_files[i]),'{}/train/dogs/{}'.format(data_path,dog_files[i])) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8635981339738902,
        0.8635981339738902
      ],
      "excerpt": "        shutil.copyfile('{}/{}'.format(train_path,cat_files[i]),'{}/validation/cats/{}'.format(data_path,cat_files[i])) \n        shutil.copyfile('{}/{}'.format(train_path,dog_files[i]),'{}/validation/dogs/{}'.format(data_path,dog_files[i])) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8153465270088299
      ],
      "excerpt": "    input_tensor = Input((height, width, 3)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411237587740937
      ],
      "excerpt": "train_gen = image_gen.flow_from_directory(\"data_gen/train\", image_size, shuffle=False, batch_size=32) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8737873112808705
      ],
      "excerpt": "train = model.predict_generator(train_gen) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8764063352976937
      ],
      "excerpt": "test = model.predict_generator(test_gen) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8877860264778115
      ],
      "excerpt": "    h.create_dataset(\"train\", data=train) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8914020911799458
      ],
      "excerpt": "    h.create_dataset(\"test\", data=test) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9457175861910134
      ],
      "excerpt": "import numpy as np \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9077865538533734,
        0.9087193522155353,
        0.8361818051008403,
        0.9241022411340848,
        0.9241022411340848,
        0.8973933083440926,
        0.8973933083440926,
        0.8973933083440926
      ],
      "excerpt": "        X_train.append(np.array(h['train'])) \n        X_test.append(np.array(h['test'])) \n        X_valid.append(np.array(h['valid'])) \n        y_train = np.array(h['train_label']) \n        y_valid = np.array(h['valid_label']) \nX_train = np.concatenate(X_train, axis=1) \nX_valid = np.concatenate(X_valid,axis = 1) \nX_test = np.concatenate(X_test, axis=1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9040368155137037
      ],
      "excerpt": "from keras.models import Model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8144338362021298
      ],
      "excerpt": "input_tensor = Input(X_train.shape[1:]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8044146895679722
      ],
      "excerpt": "from PIL import Image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from keras.callbacks import Callback,EarlyStopping \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8575435024620189
      ],
      "excerpt": "filename = 'gap_pred_resnet50.h5' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9517605820969449
      ],
      "excerpt": "    X_test =np.array(h['test']) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9162151435837707
      ],
      "excerpt": "model = model_from_json(open(\"./models/model_string_ResNet50.json\",'r').read()) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8525645461651434
      ],
      "excerpt": "y_pred = model.predict(X_test, verbose=1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9040368155137037
      ],
      "excerpt": "from keras.models import Model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8144338362021298
      ],
      "excerpt": "input_tensor = Input(X_train.shape[1:]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from keras.optimizers import SGD \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JesonZhang822/Dogs-VS-Cats-Project/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "\u732b\u72d7\u5927\u6218",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Dogs-VS-Cats-Project",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JesonZhang822",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JesonZhang822/Dogs-VS-Cats-Project/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 07:22:17 GMT"
    },
    "technique": "GitHub API"
  }
}