{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.10615v1",
      "https://arxiv.org/abs/1803.10615v1](https://arxiv.org/abs/1803.10615v1)\n\nWe implement this work from [amirgholami/SqueezeNext](https://github.com/amirgholami/SqueezeNext).\n\n## Structure\nHere, we use a variation of the latter approach by using a two stage squeeze layer.  In each SqueezeNext block, we use two bottleneck modules each reducing the channel size by a factor of 2, which is followed by two separable convolutions. We also incorporate a final 1 \u00d7 1 expansion module, which further reduces the number of output channels for the separable convolutions.\n\n![Block](img/Block.png)\n\n![SqNxt](img/SqNxt23.png)\n\n## Requirements\n- jupyter notebook\n- Python3\n- PyTorch 0.4\n\n## Results\nWe just test four models in three datasets: Cifar10, Cifar100 and [Tiny ImageNet](https://tiny-imagenet.herokuapp.com/)\n\n### Cifar-10\n\nModels         | train(Top-1) | validation(Top-1) | width  | depth  |\n-------------  | ------------ | ----------------- | ------ | ------ |\nSqNxt_23_1x    | 98.7         | 91.9              | 1.0x   | 23     |\nSqNxt_23_2x    | 99.9         | 93.1              | 2.0x   | 23     |\nSqNxt_23_1x_v5 | 99.4         | 91.9              | 1.0x   | 23     |\nSqNxt_23_2x_v5 | 99.8         | 93.1              | 2.0x   | 23     |\n\n### Cifar-100\n\nModels         | train(Top-1) | validation(Top-1) | width  | depth  |\n-------------  | ------------ | ----------------- | ------ | ------ |\nSqNxt_23_1x    | 94.1         | 69.3              | 1.0x   | 23     |\nSqNxt_23_2x    | 99.7         | 73.1              | 2.0x   | 23     |\nSqNxt_23_1x_v5 | 94.7         | 70.1              | 1.0x   | 23     |\nSqNxt_23_2x_v5 | 99.8         | 73.2              | 2.0x   | 23     |\n\n### Tiny ImageNet\n\nModels         | train(Top-1) | validation(Top-1) | width  | depth  |\n-------------  | ------------ | ----------------- | ------ | ------ |\nSqNxt_23_1x    | 71.1         | 53.5              | 1.0x   | 23     |\nSqNxt_23_2x    | 77.2         | 56.7              | 2.0x   | 23     |\nSqNxt_23_1x_v5 | 70.9         | 52.7              | 1.0x   | 23     |\nSqNxt_23_2x_v5 | 72.4         | 56.7              | 2.0x   | 23     "
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/luuuyi/SqueezeNext.PyTorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-22T04:03:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-13T12:03:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The codes are [PyTorch](https://pytorch.org/) re-implement version for paper: SqueezeNext: Hardware-Aware Neural Network Design. (SqueezeNext)\n\n> Gholami A, Kwon K, Wu B, et al. SqueezeNext: Hardware-Aware Neural Network Design[J]. 2018. [arXiv:1803.10615v1](https://arxiv.org/abs/1803.10615v1)\n\nWe implement this work from [amirgholami/SqueezeNext](https://github.com/amirgholami/SqueezeNext).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9000139085686858
      ],
      "excerpt": "Here, we use a variation of the latter approach by using a two stage squeeze layer.  In each SqueezeNext block, we use two bottleneck modules each reducing the channel size by a factor of 2, which is followed by two separable convolutions. We also incorporate a final 1 \u00d7 1 expansion module, which further reduces the number of output channels for the separable convolutions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "re-implement for paper: SqueezeNext: Hardware-Aware Neural Network Design. (SqueezeNext)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/luuuyi/SqueezeNext.PyTorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sun, 26 Dec 2021 05:50:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/luuuyi/SqueezeNext.PyTorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "luuuyi/SqueezeNext.PyTorch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/luuuyi/SqueezeNext.PyTorch/master/SqueezeNext.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8589149979405878
      ],
      "excerpt": "Models         | train(Top-1) | validation(Top-1) | width  | depth  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589149979405878
      ],
      "excerpt": "Models         | train(Top-1) | validation(Top-1) | width  | depth  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589149979405878
      ],
      "excerpt": "Models         | train(Top-1) | validation(Top-1) | width  | depth  | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/luuuyi/SqueezeNext.PyTorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SqueezeNext: Hardware-Aware Neural Network Design",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SqueezeNext.PyTorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "luuuyi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/luuuyi/SqueezeNext.PyTorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- jupyter notebook\n- Python3\n- PyTorch 0.4\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 26,
      "date": "Sun, 26 Dec 2021 05:50:30 GMT"
    },
    "technique": "GitHub API"
  }
}