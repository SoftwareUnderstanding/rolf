{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project contains pieces of code from the following projects: [mmdetection](https://github.com/open-mmlab/mmdetection), [ssd.pytorch](https://github.com/amdegroot/ssd.pytorch), [rfbnet](https://github.com/ruinmessi/RFBNet) and [yolox](https://github.com/Megvii-BaseDetection/YOLOX).\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2101.03697",
      "https://arxiv.org/abs/2003.13678",
      "https://arxiv.org/abs/1807.11164",
      "https://arxiv.org/abs/2103.14030"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite our papers in your publications if they help your research:\n\n    @InProceedings{Zhang_2020_ACCV,\n        author    = {Zhang, Heng and Fromont, Elisa and Lefevre, Sebastien and Avignon, Bruno},\n        title     = {Localize to Classify and Classify to Localize: Mutual Guidance in Object Detection},\n        booktitle = {Proceedings of the Asian Conference on Computer Vision (ACCV)},\n        month     = {November},\n        year      = {2020}\n    }\n\n    @InProceedings{Zhang_2021_BMVC,\n        author    = {Zhang, Heng and Fromont, Elisa and Lefevre, Sebastien and Avignon, Bruno},\n        title     = {PDF-Distil: including Prediction Disagreements in Feature-based Distillation for object detection},\n        booktitle = {Proceedings of the British Machine Vision Conference (BMVC)},\n        month     = {November},\n        year      = {2021}\n    }\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Zhang_2021_BMVC,\n    author    = {Zhang, Heng and Fromont, Elisa and Lefevre, Sebastien and Avignon, Bruno},\n    title     = {PDF-Distil: including Prediction Disagreements in Feature-based Distillation for object detection},\n    booktitle = {Proceedings of the British Machine Vision Conference (BMVC)},\n    month     = {November},\n    year      = {2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Zhang_2020_ACCV,\n    author    = {Zhang, Heng and Fromont, Elisa and Lefevre, Sebastien and Avignon, Bruno},\n    title     = {Localize to Classify and Classify to Localize: Mutual Guidance in Object Detection},\n    booktitle = {Proceedings of the Asian Conference on Computer Vision (ACCV)},\n    month     = {November},\n    year      = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8654671031158477
      ],
      "excerpt": "Without knowledge distillation: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9243188970772274,
        0.8028046190715653
      ],
      "excerpt": "| ShuffleNet-1.0 | 320x320      | 30.5 | 47.5 | 31.9 | 12.5 | 34.2 | 46.0 | 8  | \n| ResNet-18      | 512x512      | 43.0 | 61.8 | 46.3 | 26.7 | 47.9 | 56.4 | 12 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "| ResNet-18      | 512x512      | 43.8 | 62.5 | 46.9 | 26.3 | 49.2 | 58.4 | 12 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZHANGHeng19931123/MutualGuide",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-16T22:54:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T14:03:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "MutualGuide is a compact object detector specially designed for embedded devices. Comparing to existing detectors, this repo contains two key features. \n\nFirstly, the Mutual Guidance mecanism assigns labels to the classification task based on the prediction on the localization task, and vice versa, alleviating the misalignment problem between both tasks; Secondly, the teacher-student prediction disagreements guides the knowledge transfer in a feature-based detection distillation framework, thereby reducing the performance gap between both models.\n\nFor more details, please refer to our [ACCV paper](https://openaccess.thecvf.com/content/ACCV2020/html/Zhang_Localize_to_Classify_and_Classify_to_Localize_Mutual_Guidance_in_ACCV_2020_paper.html) and [BMVC paper](https://www.bmvc2021.com/).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8929129794996931
      ],
      "excerpt": "[x] Add TensorRT transform code for inference acceleration. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9882544278598877,
        0.919003611556156,
        0.8637684114953469
      ],
      "excerpt": "The inference runtime is measured by Pytorch framework (without TensorRT acceleration) on a Tesla V100 GPU, and the post-processing time (e.g., NMS) is not included (i.e., we measure the model inference time). \nTo dowload from Google cloud, go to this link. \nTo dowload from Baidu cloud, go to this link (password: dvz7). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.855955817972894
      ],
      "excerpt": "For training on custom dataset, convert your annotations into XML format and use the parameter --dataset XML. An example is given in datasets/XML/; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8326436792247162
      ],
      "excerpt": "Add parameter --draw to draw detection results. They will be saved in draw/VOC/ or draw/COCO/ or draw/XML/; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "MutualGuide & PDF-Distil",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZHANGHeng19931123/MutualGuide/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Sun, 26 Dec 2021 17:25:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ZHANGHeng19931123/MutualGuide/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ZHANGHeng19931123/MutualGuide",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ZHANGHeng19931123/MutualGuide/master/data/scripts/VOC2007.sh",
      "https://raw.githubusercontent.com/ZHANGHeng19931123/MutualGuide/master/data/scripts/COCO2017.sh",
      "https://raw.githubusercontent.com/ZHANGHeng19931123/MutualGuide/master/data/scripts/VOC2012.sh",
      "https://raw.githubusercontent.com/ZHANGHeng19931123/MutualGuide/master/data/scripts/COCO2014.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8727487047449518
      ],
      "excerpt": "                          fpn            resnet34           COCO       512 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8727487047449518
      ],
      "excerpt": "                           fpn            resnet18           COCO       512 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8727487047449518
      ],
      "excerpt": "                         fpn            resnet18           COCO       512 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8452793842882926,
        0.8421378373444388
      ],
      "excerpt": "[x] Add draw function to plot detection results. \n[x] Add custom dataset training (annotations in XML format). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8383204726780407
      ],
      "excerpt": "| ResNet-34      | 512x512      | 45.0 | 63.7 | 48.3 | 28.5 | 50.1 | 59.7 | 16 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8947100956830323
      ],
      "excerpt": "For training on custom dataset, first modify the dataset path XMLroot and categories XML_CLASSES in data/xml_dataset.py. Then apply --dataset XML. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8230605757524772
      ],
      "excerpt": "$ python3 train.py --neck ssd --backbone vgg16    --dataset VOC --size 320 --multi_anchor --mutual_guide \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8042357232858823
      ],
      "excerpt": "$ python3 distil.py --neck ssd --backbone vgg11    --dataset VOC --size 320 --multi_anchor --mutual_guide --kd pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8214596089260704
      ],
      "excerpt": "The default folder to save trained model is weights/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8708429444671547
      ],
      "excerpt": "$ python3 test.py --neck ssd --backbone vgg11    --dataset VOC --size 320 --trained_model path_to_saved_weights --multi_anchor --draw \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8308834859398778
      ],
      "excerpt": "It will directly print the mAP, AP50 and AP50 results on VOC2007 Test or COCO2017 Val; \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ZHANGHeng19931123/MutualGuide/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 ZHANG Heng\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Introduction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MutualGuide",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ZHANGHeng19931123",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZHANGHeng19931123/MutualGuide/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 75,
      "date": "Sun, 26 Dec 2021 17:25:33 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "knowledge-distillation",
      "object-detection",
      "pytorch",
      "deep-learning",
      "tensorrt"
    ],
    "technique": "GitHub API"
  }
}