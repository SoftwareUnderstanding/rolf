{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.08955"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**ResNeSt: Split-Attention Networks** [[arXiv]](https://arxiv.org/abs/2004.08955)  \n  [Hang Zhang](http://hangzh.com/), Chongruo Wu, Zhongyue Zhang, Yi Zhu, Zhi Zhang, Haibin Lin, Yue Sun, Tong He, Jonas Muller, R. Manmatha, Mu Li and Alex Smola\n```\n@article{zhang2020resnest,\ntitle={ResNeSt: Split-Attention Networks},\nauthor={Zhang, Hang and Wu, Chongruo and Zhang, Zhongyue and Zhu, Yi and Zhang, Zhi and Lin, Haibin and Sun, Yue and He, Tong and Muller, Jonas and Manmatha, R. and Li, Mu and Smola, Alexander},\njournal={arXiv preprint},\nyear={2020}\n}\n```\n\n**Context Encoding for Semantic Segmentation** [[arXiv]](https://arxiv.org/pdf/1803.08904.pdf)  \n [Hang Zhang](http://hangzh.com/), [Kristin Dana](http://eceweb1.rutgers.edu/vision/dana.html), [Jianping Shi](http://shijianping.me/), [Zhongyue Zhang](http://zhongyuezhang.com/), [Xiaogang Wang](http://www.ee.cuhk.edu.hk/~xgwang/), [Ambrish Tyagi](https://scholar.google.com/citations?user=GaSWCoUAAAAJ&hl=en), [Amit Agrawal](http://www.amitkagrawal.com/)\n```\n@InProceedings{Zhang_2018_CVPR,\nauthor = {Zhang, Hang and Dana, Kristin and Shi, Jianping and Zhang, Zhongyue and Wang, Xiaogang and Tyagi, Ambrish and Agrawal, Amit},\ntitle = {Context Encoding for Semantic Segmentation},\nbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\nmonth = {June},\nyear = {2018}\n}\n```\n\n**Deep TEN: Texture Encoding Network** [[arXiv]](https://arxiv.org/pdf/1612.02844.pdf)  \n  [Hang Zhang](http://hangzh.com/), [Jia Xue](http://jiaxueweb.com/), [Kristin Dana](http://eceweb1.rutgers.edu/vision/dana.html)\n```\n@InProceedings{Zhang_2017_CVPR,\nauthor = {Zhang, Hang and Xue, Jia and Dana, Kristin},\ntitle = {Deep TEN: Texture Encoding Network},\nbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\nmonth = {July},\nyear = {2017}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Zhang_2017_CVPR,\nauthor = {Zhang, Hang and Xue, Jia and Dana, Kristin},\ntitle = {Deep TEN: Texture Encoding Network},\nbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\nmonth = {July},\nyear = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Zhang_2018_CVPR,\nauthor = {Zhang, Hang and Dana, Kristin and Shi, Jianping and Zhang, Zhongyue and Wang, Xiaogang and Tyagi, Ambrish and Agrawal, Amit},\ntitle = {Context Encoding for Semantic Segmentation},\nbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\nmonth = {June},\nyear = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{zhang2020resnest,\ntitle={ResNeSt: Split-Attention Networks},\nauthor={Zhang, Hang and Wu, Chongruo and Zhang, Zhongyue and Zhu, Yi and Zhang, Zhi and Lin, Haibin and Sun, Yue and He, Tong and Muller, Jonas and Manmatha, R. and Li, Mu and Smola, Alexander},\njournal={arXiv preprint},\nyear={2020}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhanghang1989/PyTorch-Encoding",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-05-12T18:04:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T16:02:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A CV toolkit for my papers.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhanghang1989/PyTorch-Encoding/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 432,
      "date": "Mon, 27 Dec 2021 11:31:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhanghang1989/PyTorch-Encoding",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zhanghang1989/PyTorch-Encoding/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/zhanghang1989/PyTorch-Encoding/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zhanghang1989/PyTorch-Encoding/master/scripts/build_docker.sh",
      "https://raw.githubusercontent.com/zhanghang1989/PyTorch-Encoding/master/scripts/run_docker.sh",
      "https://raw.githubusercontent.com/zhanghang1989/PyTorch-Encoding/master/experiments/recognition/resnet50_baseline.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "Shell",
      "Dockerfile",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017-     Hang Zhang. All rights reserved.\\nCopyright (c) 2018-     Amazon.com, Inc. or its affiliates. All rights reserved.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch-Encoding",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch-Encoding",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhanghang1989",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhanghang1989/PyTorch-Encoding/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "Change model zoo to wasabi to save model",
        "dateCreated": "2020-06-29T00:21:27Z",
        "datePublished": "2020-06-29T00:22:17Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/v1.2.1",
        "name": "Wasabi Url",
        "tag_name": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/v1.2.1",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/28006908",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/v1.2.1"
      },
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "# ResNeSt\r\nSplit-Attention Network, A New ResNet Variant. It significantly boosts the performance of downstream models such as Mask R-CNN, Cascade R-CNN and DeepLabV3.\r\n\r\n\r\n|             | crop size | PyTorch | Gluon |\r\n|-------------|-----------|---------|-------|\r\n| ResNeSt-50  | 224       | 81.03   | 81.04 |\r\n| ResNeSt-101 | 256       | 82.83   | 82.81 |\r\n| ResNeSt-200 | 320       | 83.84   | 83.88 |\r\n| ResNeSt-269 | 416       | 84.54   | 84.53 |\r\n\r\n### Semantic Segmentation\r\n\r\n- PyTorch models and training: Please visit [PyTorch Encoding Toolkit](https://hangzhang.org/PyTorch-Encoding/model_zoo/segmentation.html).\r\n- Training with Gluon: Please visit [GluonCV Toolkit](https://gluon-cv.mxnet.io/model_zoo/segmentation.html#ade20k-dataset).\r\n\r\n#### Results on ADE20K\r\n\r\n<table class=\"tg\">\r\n  <tr>\r\n    <th class=\"tg-cly1\">Method</th>\r\n    <th class=\"tg-cly1\">Backbone</th>\r\n    <th class=\"tg-cly1\">pixAcc%</th>\r\n    <th class=\"tg-cly1\">mIoU%</th>\r\n  </tr>\r\n  <tr>\r\n    <td rowspan=\"6\" class=\"tg-cly1\">Deeplab-V3<br></td>\r\n    <td class=\"tg-cly1\">ResNet-50</td>\r\n    <td class=\"tg-cly1\">80.39</td>\r\n    <td class=\"tg-cly1\">42.1</td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-cly1\">ResNet-101</td>\r\n    <td class=\"tg-cly1\">81.11</b></td>\r\n    <td class=\"tg-cly1\">44.14</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-cly1\">ResNeSt-50 (<span style=\"color:red\">ours</span>)</td>\r\n    <td class=\"tg-cly1\"><b>81.17</b></td>\r\n    <td class=\"tg-cly1\"><b>45.12</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-0lax\">ResNeSt-101 (<span style=\"color:red\">ours</span>)</td>\r\n    <td class=\"tg-0lax\"><b>82.07</td>\r\n    <td class=\"tg-0lax\"><b>46.91</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-0lax\">ResNeSt-200 (<span style=\"color:red\">ours</span>)</td>\r\n    <td class=\"tg-0lax\"><b>82.45</td>\r\n    <td class=\"tg-0lax\"><b>48.36</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td class=\"tg-0lax\">ResNeSt-269 (<span style=\"color:red\">ours</span>)</td>\r\n    <td class=\"tg-0lax\"><b>82.62</td>\r\n    <td class=\"tg-0lax\"><b>47.60</b></td>\r\n  </tr>\r\n</table>",
        "dateCreated": "2020-05-10T20:50:28Z",
        "datePublished": "2020-05-10T20:52:04Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/v1.2.0",
        "name": "PyTorch Encoding v1.2.0",
        "tag_name": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/v1.2.0",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/26359588",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/v1.2.0"
      },
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "1. Compatible with stable [PyTorch 14..0](https://pytorch.org).",
        "dateCreated": "2020-04-05T17:04:01Z",
        "datePublished": "2020-03-16T03:48:58Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/v1.0.1",
        "name": "PyTorch Encoding v1.0.1",
        "tag_name": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/v1.0.1",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/24545930",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/v1.0.1"
      },
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "1. Compatible with stable [PyTorch 1.0](https://pytorch.org).\r\n2. Inplace ABN with [SyncBN](https://hangzhang.org/PyTorch-Encoding/nn.html#syncbatchnorm).\r\n3. ImageNet training script",
        "dateCreated": "2018-12-17T22:19:19Z",
        "datePublished": "2018-12-17T22:25:18Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/v1.0.0",
        "name": "PyTorch Encoding v1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/v1.0.0",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/14580833",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/v1.0.0"
      },
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "1. Segmentation examples and pretrained models.\r\n2. Pypi install through ``pip install torch-encoding``",
        "dateCreated": "2018-06-15T20:36:48Z",
        "datePublished": "2018-06-15T21:19:48Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/v0.4.3",
        "name": "PyTorch Encoding 0.4.3",
        "tag_name": "v0.4.3",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/v0.4.3",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/11508629",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/v0.4.3"
      },
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "Make the compilation easier to the users.",
        "dateCreated": "2017-11-20T14:47:34Z",
        "datePublished": "2017-11-20T14:50:28Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/v0.1.0",
        "name": "Encoding Layer & Sync BN",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/v0.1.0",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/8587758",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/v0.1.0"
      },
      {
        "authorType": "User",
        "author_name": "zhanghang1989",
        "body": "Memory efficient implementation of Encoding Layer. ",
        "dateCreated": "2017-10-06T11:55:15Z",
        "datePublished": "2017-10-06T18:45:12Z",
        "html_url": "https://github.com/zhanghang1989/PyTorch-Encoding/releases/tag/0.0.1",
        "name": "Encoding Layer",
        "tag_name": "0.0.1",
        "tarball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/tarball/0.0.1",
        "url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/releases/8029204",
        "zipball_url": "https://api.github.com/repos/zhanghang1989/PyTorch-Encoding/zipball/0.0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1864,
      "date": "Mon, 27 Dec 2021 11:31:02 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "batchnorm",
      "synchronized-batchnorm",
      "encoding-layer"
    ],
    "technique": "GitHub API"
  }
}