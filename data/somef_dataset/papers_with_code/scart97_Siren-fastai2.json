{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2006.09661\n\nOfficial implementation: https://github.com/vsitzmann/siren\n\nOnly the image and audio fitting experiments from the paper were reproduced here.\nAdittionally, an extra experiment for image classification is also available (imagenette notebook"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9279628677675321
      ],
      "excerpt": "Video: https://www.youtube.com/watch?v=Q2fLWGBeaiI \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977994744046882,
        0.9105368110547479
      ],
      "excerpt": "Paper: https://arxiv.org/abs/2006.09661 \nOfficial implementation: https://github.com/vsitzmann/siren \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8504951649337602
      ],
      "excerpt": "Youtube video explaining the paper here \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/scart97/Siren-fastai2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-19T04:57:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-08T18:51:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9961507335562084
      ],
      "excerpt": "Unofficial implementation of 'Implicit Neural Representations with Periodic Activation Functions' using pure pytorch for the model and fastai2 for it's amazing features to load the data and training loop implementing best pratices. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477089396084108,
        0.9731591090745965,
        0.9218144029349569,
        0.9478072586947103,
        0.9221619471917223,
        0.8844681498893036,
        0.9815841474215026
      ],
      "excerpt": "Adittionally, an extra experiment for image classification is also available (imagenette notebook). \nThe model I used is smaller than the one used on the paper, they use 5 layers with a hidden layer size of 256, while I achieved similar results using 5 layers but with cascading sizes of [256, 128, 64, 32] \nThe optimizer is upgraded from Adam to Ranger, and so was the learning rate scheduling \nIn the original paper the factor W0 only multiplies the matrix W of the linear layer. I tested it both this way and multiplying the whole result of the linear layer, with no difference in results. \nSo, to make it easier to compose the activation with different layers I opted for refactoring so that a Siren activation computes: \nSiren(x) = sin(W0 * x), making the usage similar to other activations. \nSiren is the model, not the activation. Sorry about the nomeclature confusion here, I had no better idea how to call this scaled sine activation when starting the project. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9143408411537146
      ],
      "excerpt": "Reddit discussion about what makes a related paper work (nerf) that may give some intuition about how Siren works here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unofficial implementation of 'Implicit Neural Representations with Periodic Activation Functions'",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/scart97/Siren-fastai2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Sat, 25 Dec 2021 07:19:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/scart97/Siren-fastai2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "scart97/Siren-fastai2",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/scart97/Siren-fastai2/master/Siren_image.ipynb",
      "https://raw.githubusercontent.com/scart97/Siren-fastai2/master/Siren_superresolution.ipynb",
      "https://raw.githubusercontent.com/scart97/Siren-fastai2/master/Siren_gradient_supervision.ipynb",
      "https://raw.githubusercontent.com/scart97/Siren-fastai2/master/Siren_audio.ipynb",
      "https://raw.githubusercontent.com/scart97/Siren-fastai2/master/Siren_imagenette.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/scart97/Siren-fastai2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 scart97\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Siren - Sinusoidal Representation Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Siren-fastai2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "scart97",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/scart97/Siren-fastai2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you only want to use the activation or model, the code is present at the file `siren.py` and it's **pure pytorch**.\nFastai is used to load the data and training loop during the experiments.\n\nFirst install fastai2 according to the official instructions present on the repo: https://github.com/fastai/fastai2\n\nOptionally, to calculate and visualize the image gradients the amazing Kornia library is used, check it out: https://kornia.github.io/\n\nIf you want to run the audio example, fastai2_audio is also necessary. Instructions to install are present at: https://github.com/rbracco/fastai2_audio\n\nEach notebook represents one experiment.\n\nFiles used to train were the first ones that I could find on my machine. The audio is part of the LAPSBM dataset https://gitlab.com/fb-audio-corpora/lapsbm16k while the image is part of The Oxford-IIIT Pet Dataset https://www.robots.ox.ac.uk/~vgg/data/pets/\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 45,
      "date": "Sat, 25 Dec 2021 07:19:25 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "fastai2",
      "pytorch",
      "deep-learning",
      "activation-functions"
    ],
    "technique": "GitHub API"
  }
}