{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1301.3781 proposed two architectures for Word2Vec:\n- Skip-gram\n- CBOW\n\n<img src=\"./res/imgs/models.png\" alt=\"models\" width=\"400\"/>\n\n\nThe original code was written in C.\n\nThis repository contains the implementation of neural network for skip-gram from scratch in Python without using any machine learning or text processing libraries.\n\n<img src=\"./res/imgs/skipgram.png\" alt=\"skipgram\" width=\"400\"/>\n\n## How to run\n  To train the model, run the `train_minibatch.py` script on command line:\n  ```\n  python train_minibatch.py\n  ```\n\n  To predict similar words, run the `predict.py` script on command line:\n  ```\n  python predict.py\n  ```\n\n## How does it work?\n1. \"train_minibatch.py\" is the training file. It trains the neural network for any given dataset (`dataset.csv`"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9969292776318103
      ],
      "excerpt": "Mikolv et. al. in https://arxiv.org/abs/1301.3781 proposed two architectures for Word2Vec: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rajshrivastava/Skipgram",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-16T20:12:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-09T06:07:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9888960749360503
      ],
      "excerpt": "This repository contains the implementation of neural network for skip-gram from scratch in Python without using any machine learning or text processing libraries. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A feed-forward neural network to convert English words into N-dimensional vectors. Recognizes semantic closeness between different words. Developed from scratch in Python without using any machine learning library.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rajshrivastava/Skipgram/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 01:49:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rajshrivastava/Skipgram/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "rajshrivastava/Skipgram",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9100851760398057
      ],
      "excerpt": "<img src=\"./res/imgs/models.png\" alt=\"models\" width=\"400\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8998118325065148
      ],
      "excerpt": "<img src=\"./res/imgs/skipgram.png\" alt=\"skipgram\" width=\"400\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8431026781597385
      ],
      "excerpt": "predict.py uses the trained word vectors to: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rajshrivastava/Skipgram/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Skipgram",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Skipgram",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "rajshrivastava",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rajshrivastava/Skipgram/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  To train the model, run the `train_minibatch.py` script on command line:\n  ```\n  python train_minibatch.py\n  ```\n\n  To predict similar words, run the `predict.py` script on command line:\n  ```\n  python predict.py\n  ```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 01:49:15 GMT"
    },
    "technique": "GitHub API"
  }
}