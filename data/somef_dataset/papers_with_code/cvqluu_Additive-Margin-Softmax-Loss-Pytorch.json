{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.07698 [1]\n* SphereFace: https://arxiv.org/abs/1704.08063 [2]\n* CosFace/Additive Margin: https://arxiv.org/abs/1801.09414 [3] / https://arxiv.org/abs/1801.05599 [4]\n\n(Note: the SphereFace implementation is not exactly as described in their paper but instead uses the 'trick' presented in the ArcFace paper to use arccosine instead of the double angle formula",
      "https://arxiv.org/abs/1704.08063 [2]\n* CosFace/Additive Margin: https://arxiv.org/abs/1801.09414 [3] / https://arxiv.org/abs/1801.05599 [4]\n\n(Note: the SphereFace implementation is not exactly as described in their paper but instead uses the 'trick' presented in the ArcFace paper to use arccosine instead of the double angle formula",
      "https://arxiv.org/abs/1801.09414 [3] / https://arxiv.org/abs/1801.05599 [4]\n\n(Note: the SphereFace implementation is not exactly as described in their paper but instead uses the 'trick' presented in the ArcFace paper to use arccosine instead of the double angle formula",
      "https://arxiv.org/abs/1801.05599 [4]\n\n(Note: the SphereFace implementation is not exactly as described in their paper but instead uses the 'trick' presented in the ArcFace paper to use arccosine instead of the double angle formula",
      "https://arxiv.org/abs/1708.07747"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9944484218006108,
        0.9944484218006108,
        0.9999340814824812
      ],
      "excerpt": "ArcFace: https://arxiv.org/abs/1801.07698 [1] \nSphereFace: https://arxiv.org/abs/1704.08063 [2] \nCosFace/Additive Margin: https://arxiv.org/abs/1801.09414 [3] / https://arxiv.org/abs/1801.05599 [4] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8001118323515268
      ],
      "excerpt": "out_features = 10 #: Number of classes \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cvqluu/Angular-Penalty-Softmax-Losses-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-13T17:09:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T21:01:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9639195729947021
      ],
      "excerpt": "Concise Pytorch implementation of the Angular Penalty Softmax Losses presented in:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9729728058984403
      ],
      "excerpt": "(Note: the SphereFace implementation is not exactly as described in their paper but instead uses the 'trick' presented in the ArcFace paper to use arccosine instead of the double angle formula) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8520451283906751,
        0.8386024489057893
      ],
      "excerpt": ": Forward method works similarly to nn.CrossEntropyLoss \n: x of shape (batch_size, in_features), labels of shape (batch_size,) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9559696168358577
      ],
      "excerpt": "There are a simple set of experiments on Fashion-MNIST [2] included in train_fMNIST.py which compares the use of ordinary Softmax and Additive Margin Softmax loss functions by projecting embedding features onto a 3D sphere. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Angular penalty loss functions in Pytorch (ArcFace, SphereFace, Additive Margin, CosFace) ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cvqluu/Additive-Margin-Softmax-Loss-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 70,
      "date": "Tue, 28 Dec 2021 20:30:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cvqluu/Angular-Penalty-Softmax-Losses-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9036267459482124
      ],
      "excerpt": "The experiments can be run like so: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from loss_functions import AngularPenaltySMLoss \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cvqluu/Angular-Penalty-Softmax-Losses-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Chau Luu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Angular Penalty Softmax Losses Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Angular-Penalty-Softmax-Losses-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cvqluu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cvqluu/Angular-Penalty-Softmax-Losses-Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 325,
      "date": "Tue, 28 Dec 2021 20:30:39 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "metric-learning",
      "pytorch",
      "loss-functions",
      "loss-function",
      "embedding",
      "face-verification",
      "fashion-mnist",
      "fmnist-dataset",
      "face-recognition",
      "speaker-recognition",
      "sphereface",
      "arcface",
      "normface",
      "am-softmax"
    ],
    "technique": "GitHub API"
  }
}