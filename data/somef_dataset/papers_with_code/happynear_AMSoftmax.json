{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.05599",
      "https://arxiv.org/abs/1801.07698",
      "https://arxiv.org/abs/1801.05599",
      "https://arxiv.org/abs/1801.05599"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find **AM-Softmax** useful in your research, please consider to cite:\n\n\t@article{Wang_2018_amsoftmax,\n\t  title = {Additive Margin Softmax for Face Verification},\n\t  author = {Wang, Feng and Liu, Weiyang and Liu, Haijun and Cheng, Jian},\n\t  journal = {arXiv preprint arXiv:1801.05599},\n\t  year = {2018}\n\t}\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{Wang_2018_amsoftmax,\n  title = {Additive Margin Softmax for Face Verification},\n  author = {Wang, Feng and Liu, Weiyang and Liu, Haijun and Cheng, Jian},\n  journal = {arXiv preprint arXiv:1801.05599},\n  year = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9969426514818918
      ],
      "excerpt": "by Feng Wang, Weiyang Liu, Haijun Liu, Jian Cheng \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9513733337966637
      ],
      "excerpt": "Feature normalized, s=30, m=0.35: OneDrive, Baidu Yun . \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/happynear/AMSoftmax",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-12-30T06:56:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T14:11:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![FeatureVis](assets/FeatureVis.png)\n\nIn this work, we design a new loss function which merges the merits of both [NormFace](https://github.com/happynear/NormFace) and [SphereFace](https://github.com/wy1iu/sphereface). It is much easier to understand and train, and outperforms the previous state-of-the-art loss function (SphereFace) by 2-5% on MegaFace. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.810552891349942
      ],
      "excerpt": "The paper is available as a technical report at arXiv. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283368996085588,
        0.9627282183036346,
        0.9851460862353423
      ],
      "excerpt": "The prototxt file is in ./prototxt. The batch size is set to 256. If your GPU's memory is not sufficient enough, you may set iter_size: 2 in face_solver.prototxt and batch_size: 128 in face_train_test.prototxt. \nThe dataset used for training is CASIA-Webface. We removed 59 identities that are duplicated with LFW (17) and MegaFace Set 1 (42). This is why the final inner-product layer's output is 10516. The list of the duplicated identities can be found in https://github.com/happynear/FaceDatasets. \nAll other settings are the same with SphereFace. Please refer to the details in SphereFace's repository. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9642996173394526
      ],
      "excerpt": " layer in the experiment branch of my Caffe repository. LabelSpecificHardMarginForward() is the kernel function for cos(theta+m). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A simple yet effective loss function for face verification.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/happynear/AMSoftmax/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 128,
      "date": "Mon, 20 Dec 2021 15:26:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/happynear/AMSoftmax/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "happynear/AMSoftmax",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9855993567101635
      ],
      "excerpt": "Requirements: My Caffe version https://github.com/happynear/caffe-windows. This version can also be compiled in Linux. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/happynear/AMSoftmax/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Feng Wang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Additive Margin Softmax for Face Verification",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "AMSoftmax",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "happynear",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/happynear/AMSoftmax/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 456,
      "date": "Mon, 20 Dec 2021 15:26:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "face-recognition",
      "loss-functions",
      "metric-learning",
      "softmax"
    ],
    "technique": "GitHub API"
  }
}