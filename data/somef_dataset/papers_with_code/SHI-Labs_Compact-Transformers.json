{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2104.05704",
      "https://arxiv.org/abs/2010.11929",
      "https://arxiv.org/abs/2104.05704},\n\teprint       = {2104.05704},\n\tarchiveprefix = {arXiv},\n\tprimaryclass = {cs.CV}\n}\n```"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@article{hassani2021escaping,\n\ttitle        = {Escaping the Big Data Paradigm with Compact Transformers},\n\tauthor       = {Ali Hassani and Steven Walton and Nikhil Shah and Abulikemu Abuduweili and Jiachen Li and Humphrey Shi},\n\tyear         = 2021,\n\turl          = {https://arxiv.org/abs/2104.05704},\n\teprint       = {2104.05704},\n\tarchiveprefix = {arXiv},\n\tprimaryclass = {cs.CV}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{hassani2021escaping,\n    title        = {Escaping the Big Data Paradigm with Compact Transformers},\n    author       = {Ali Hassani and Steven Walton and Nikhil Shah and Abulikemu Abuduweili and Jiachen Li and Humphrey Shi},\n    year         = 2021,\n    url          = {https://arxiv.org/abs/2104.05704},\n    eprint       = {2104.05704},\n    archiveprefix = {arXiv},\n    primaryclass = {cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "            <td><b>CIFAR-10</b></td>  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260199942235306
      ],
      "excerpt": "        &lt;td rowspan=1&gt;&lt;a href=\"https://github.com/google-research/vision_transformer/\"&gt;ViT&lt;/a&gt;&lt;/td&gt; \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SHI-Labs/Compact-Transformers",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-05T18:36:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T18:35:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Compact Convolutional Transformers not only use the sequence pooling but also\nreplace the patch embedding with a convolutional embedding, allowing for better\ninductive bias and making positional embeddings optional. CCT achieves better\naccuracy than ViT-Lite and CVT and increases the flexibility of the input\nparameters.\n\n![Comparison](images/comparison.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Compact Vision Transformers better utilize information with Sequence Pooling post \nencoder, eliminating the need for the class token while achieving better\naccuracy.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\t\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/escaping-the-big-data-paradigm-with-compact/image-classification-on-flowers-102)](https://paperswithcode.com/sota/image-classification-on-flowers-102?p=escaping-the-big-data-paradigm-with-compact)\n\nPreprint Link: [Escaping the Big Data Paradigm with Compact Transformers\n](https://arxiv.org/abs/2104.05704)\n\nBy [Ali Hassani<sup>[1]</sup><span>&#42;</span>](https://alihassanijr.com/),\n[Steven Walton<sup>[1]</sup><span>&#42;</span>](https://stevenwalton.github.io/),\n[Nikhil Shah<sup>[1]</sup>](https://itsshnik.github.io/),\n[Abulikemu Abuduweili<sup>[1]</sup>](https://github.com/Walleclipse),\n[Jiachen Li<sup>[1,2]</sup>](https://chrisjuniorli.github.io/), \nand\n[Humphrey Shi<sup>[1,2,3]</sup>](https://www.humphreyshi.com/)\n\n\n<small><span>&#42;</span>Ali Hassani and Steven Walton contributed equal work</small>\n\nIn association with SHI Lab @ University of Oregon<sup>[1]</sup> and\nUIUC<sup>[2]</sup>, and Picsart AI Research (PAIR)<sup>[3]</sup>\n\n\n![model-sym](images/model_sym.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9946683531248619
      ],
      "excerpt": "[PyTorch blog]: check out our official blog post with PyTorch to learn more about our work and vision transformers in general. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9910410349686704
      ],
      "excerpt": "With the rise of Transformers as the standard for language processing,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9474251229997359,
        0.9789765739314158,
        0.9937601264407624,
        0.9391848934563581,
        0.9400113125889672,
        0.9927745881755473,
        0.9060273072616213,
        0.9830684770944303
      ],
      "excerpt": "and amounts of training data, many have come to believe that they are not suitable  \nfor small sets of data. This trend leads to great concerns, including but  \nnot limited to: limited availability of data in certain scientific domains and the  \nexclusion of those with limited resource from research in the field. In this paper,  \nwe dispel the myth that transformers are \u201cdata hungry\u201d and therefore can only be  \napplied to large sets of data. We show for the first time that with the right size and  \ntokenization, transformers can perform head-to-head with state-of-the-art CNNs on  \nsmall datasets, often with bet-ter accuracy and fewer parameters. Our model eliminates  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9756823149167709,
        0.8710853519402003
      ],
      "excerpt": "pooling strategy and the use of convolution/s. It is flexible in terms of model size,  \nand can have as little as 0.28M parameters while achieving good results. Our model can  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9444201335266001,
        0.8972943282469275,
        0.8604325074073781,
        0.9059365443261789,
        0.9825085304087887,
        0.9046093829530071,
        0.8942288501455266
      ],
      "excerpt": "improvement over previous Transformer based models. It also outperforms many modern CNN  \nbased approaches, such as ResNet, and even some recent NAS-based approaches,such as  \nProxyless-NAS. Our simple and compact design democratizes transformers by making them  \naccessible to those with limited computing resources and/or dealing with small datasets.  \nOur method also works on larger datasets, such as ImageNet (82.71% accuracy with 29% parameters  \nof ViT),and NLP tasks as well. \nDifferent from ViT we show that <i>an image  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9541455606861714
      ],
      "excerpt": "Transformers are not in fact ''data-hungry,'' as the authors proposed, and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8376592512971348
      ],
      "excerpt": "timm is recommended for image classification training  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8607559093251554
      ],
      "excerpt": "We've updated this repository and moved the previous training script and the checkpoints associated  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.962038883563152
      ],
      "excerpt": "the checkpoints associated with it in the next section, and the hyperparameters are all provided in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8990435661644808
      ],
      "excerpt": "layers, P is the patch/convolution size, and C (CCT only) is the number of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "            <td><b>Model</b></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "            <td><b>Model</b></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "            <td><b>Model</b></td>  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[Preprint] Escaping the Big Data Paradigm with Compact Transformers, 2021",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SHI-Labs/Compact-Transformers/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 33,
      "date": "Fri, 24 Dec 2021 07:52:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SHI-Labs/Compact-Transformers/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHI-Labs/Compact-Transformers",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SHI-Labs/Compact-Transformers/main/dist_train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Our base model is in pure PyTorch and Torchvision. No extra packages are required.\nPlease refer to [PyTorch's Getting Started](https://pytorch.org/get-started/locally/) page for detailed instructions.\n\nHere are some of the models that can be imported from `src` (full list available in [Variants.md](Variants.md)):\n\n<table style=\"width:100%\">\n    <thead>\n        <tr>\n            <td><b>Model</b></td>\n            <td><b>Resolution</b></td>\n            <td><b>PE</b></td>\n            <td><b>Name</b></td>\n            <td><b>Pretrained Weights</b></td>\n            <td><b>Config</b></td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td rowspan=4>CCT-7/3x1</td>\n            <td rowspan=4>32x32</td>\n            <td>Learnable</td>\n            <td><code>cct_7_3x1_32</code></td>\n            <td>CIFAR-10/300 Epochs</td>\n            <td><code>pretrained/cct_7-3x1_cifar10_300epochs.yml</code></td>\n        </tr>\n        <tr>\n            <td>Sinusoidal</td>\n            <td><code>cct_7_3x1_32_sine</code></td>\n            <td>CIFAR-10/5000 Epochs</td>\n            <td><code>pretrained/cct_7-3x1_cifar10_5000epochs.yml</code></td>\n        </tr>\n        <tr>\n            <td>Learnable</td>\n            <td><code>cct_7_3x1_32_c100</code></td>\n            <td>CIFAR-100/300 Epochs</td>\n            <td><code>pretrained/cct_7-3x1_cifar100_300epochs.yml</code></td>\n        </tr>\n        <tr>\n            <td>Sinusoidal</td>\n            <td><code>cct_7_3x1_32_sine_c100</code></td>\n            <td>CIFAR-100/5000 Epochs</td>\n            <td><code>pretrained/cct_7-3x1_cifar100_5000epochs.yml</code></td>\n        </tr>\n        <tr>\n            <td>CCT-7/7x2</td>\n            <td>224x224</td>\n            <td>Sinusoidal</td>\n            <td><code>cct_7_7x2_224_sine</code></td>\n            <td>Flowers-102/300 Epochs</td>\n            <td><code>pretrained/cct_7-7x2_flowers102.yml</code></td>\n        </tr>\n        <tr>\n            <td rowspan=3>CCT-14/7x2</td>\n            <td>224x224</td>\n            <td rowspan=3>Learnable</td>\n            <td><code>cct_14_7x2_224</code></td>\n            <td>ImageNet-1k/300 Epochs</td>\n            <td><code>pretrained/cct_14-7x2_imagenet.yml</code></td>\n        </tr>\n        <tr>\n            <td>384x384</td>\n            <td><code>cct_14_7x2_384</code></td>\n            <td>ImageNet-1k/Finetuned/30 Epochs</td>\n            <td><code>finetuned/cct_14-7x2_imagenet384.yml</code></td>\n        </tr>\n        <tr>\n            <td>384x384</td>\n            <td><code>cct_14_7x2_384_fl</code></td>\n            <td>Flowers102/Finetuned/300 Epochs</td>\n            <td><code>finetuned/cct_14-7x2_flowers102.yml</code></td>\n        </tr>\n    </tbody>\n</table>\n\nYou can simply import the names provided in the **Name** column:\n```python3\nfrom src import cct_14_7x2_384\nmodel = cct_14_7x2_384(pretrained=True, progress=True)\n```\nThe config files are provided both to specify the training settings and hyperparameters, \nand allow easier reproduction.\n\nPlease note that the models missing pretrained weights will be updated soon. They were previously \ntrained using our old training script, and we're working on training them again with the new script \nfor consistency.\n\nYou could even create your own models with different image resolutions, positional embeddings, and number of classes:\n```python3\nfrom src import cct_14_7x2_384, cct_7_7x2_224_sine\nmodel = cct_14_7x2_384(img_size=256)\nmodel = cct_7_7x2_224_sine(img_size=256, positional_embedding='sine')\n```\nChanging resolution and setting `pretrained=True` will interpolate the PE vector to support the new size, \njust like ViT.\n\nThese models are also based on experiments in the paper. You can create your own versions:\n```python3\nfrom src import cct_14\nmodel = cct_14(arch='custom', pretrained=False, progress=False, kernel_size=5, n_conv_layers=3)\n```\n\nYou can even go further and create your own custom variant by importing the class CCT.\n\nAll of these apply to CVT and ViT as well.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.977818727426719
      ],
      "excerpt": "[vit-pytorch]: CCT is also available through Phil Wang's vit-pytorch, simply use pip install vit-pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911866362668624
      ],
      "excerpt": "./dist_classification.sh $NUM_GPUS -c $CONFIG_FILE /path/to/dataset \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9030063780636088
      ],
      "excerpt": "python train.py -c configs/datasets/cifar10.yml --model cct_7_3x1_32 /path/to/cifar10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029221276680004
      ],
      "excerpt": "with it to examples/. The new training script here is just the timm training script. We've provided \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008719194176459
      ],
      "excerpt": "Type can be read in the format L/PxC where L is the number of transformer \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SHI-Labs/Compact-Transformers/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2021 SHI Lab\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Compact Transformers",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Compact-Transformers",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHI-Labs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SHI-Labs/Compact-Transformers/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 249,
      "date": "Fri, 24 Dec 2021 07:52:26 GMT"
    },
    "technique": "GitHub API"
  }
}