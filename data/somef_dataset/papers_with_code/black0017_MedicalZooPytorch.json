{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please advice the **LICENSE.md** file. For usage of third party libraries and repositories please advise the respective distributed terms. It would be nice to cite the **original models and datasets**. If you want, you can also **cite this work** as:\n\n```\n@MastersThesis{adaloglou2019MRIsegmentation,\nauthor = {Adaloglou Nikolaos},\ntitle={Deep learning in medical image analysis: a comparative analysis of\nmulti-modal brain-MRI segmentation with 3D deep neural networks},\nschool = {University of Patras},\nnote=\"\\url{https://github.com/black0017/MedicalZooPytorch}\",\nyear = {2019},\norganization={Nemertes}}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "In general, in the open source community recognizing third party utilities increases the credibility of your software. In deep learning, **academics tend to skip acknowledging third party repos for some reason**. In essence, we used whatever resource we needed to make this project self-complete, that was nicely written. However, **modifications were performed to match the project structure and requirements**. Here is the list of the **top-based works**: [HyperDenseNet](https://github.com/josedolz/HyperDenseNet_pytorch) model. Most of the segmentation losses from [here](https://github.com/wolny/pytorch-3dunet/blob/master/pytorch3dunet/unet3d/losses.py). 3D-SkipDenseNet model from [here](https://github.com/tbuikr/3D-SkipDenseSeg). 3D-ResNet base model from [here](https://github.com/kenshohara/3D-ResNets-PyTorch). Abstract model class from [MimiCry project](https://github.com/kwotsin/mimicry). Trainer and Writer class from PyTorch [template](https://github.com/victoresque/pytorch-template). Covid-19 implementation based on our previous work from [here](https://github.com/IliasPap/COVIDNet). MICCAI 2019 Gleason challenge data-loaders based on our previous work from [here](https://github.com/black0017/MICCAI-2019-Prostate-Cancer-segmentation-challenge). Basic 2D Unet implementation from [here](https://github.com/milesial/Pytorch-UNet).Vnet model from [here](https://github.com/mattmacy/vnet.pytorch)\n\n\n[contributors-shield]: https://img.shields.io/github/contributors/black0017/MedicalZooPytorch.svg?style=flat-square\n[contributors-url]: https://github.com/black0017/MedicalZooPytorch/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/black0017/MedicalZooPytorch.svg?style=flat-square\n[forks-url]: https://github.com/black0017/MedicalZooPytorch/network/members\n\n[stars-shield]: https://img.shields.io/github/stars/black0017/MedicalZooPytorch.svg?style=flat-square\n[stars-url]: https://github.com/black0017/MedicalZooPytorch/stargazers\n\n[issues-shield]: https://img.shields.io/github/issues/black0017/MedicalZooPytorch.svg?style=flat-square\n[issues-url]: https://github.com/black0017/MedicalZooPytorch/issues\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.06650",
      "https://arxiv.org/abs/1606.04797",
      "https://arxiv.org/abs/1505.04597 \"official paper\"",
      "https://arxiv.org/abs/1804.02967",
      "https://arxiv.org/abs/1804.02967",
      "https://arxiv.org/abs/1708.00573"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please advice the **LICENSE.md** file. For usage of third party libraries and repositories please advise the respective distributed terms. It would be nice to cite the **original models and datasets**. If you want, you can also **cite this work** as:\n\n```\n@MastersThesis{adaloglou2019MRIsegmentation,\nauthor = {Adaloglou Nikolaos},\ntitle={Deep learning in medical image analysis: a comparative analysis of\nmulti-modal brain-MRI segmentation with 3D deep neural networks},\nschool = {University of Patras},\nnote=\"\\url{https://github.com/black0017/MedicalZooPytorch}\",\nyear = {2019},\norganization={Nemertes}}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9677640385174676
      ],
      "excerpt": "[ ] StructSeg 2019 challenge dataloaders \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9982630005133125,
        0.9812192275671977
      ],
      "excerpt": "| Iseg 2017| T1, T2 | 10 / 10    |144x192x256|4| 0.72 | \n| Iseg 2019| T1, T2 | 10 / 13   |144x192x256|4| 0.75 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8562515826458484
      ],
      "excerpt": "| Mrbrains 2018 |FLAIR, T1w, T1gd,T2w |8 |240x240x48|9 or 4|0.5| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.905823482172422
      ],
      "excerpt": "|MICCAI Gleason 2019 Challenge| 2D pathology images | ~250 |5K x 5K|-|2.5| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266,
        0.9128352759651055
      ],
      "excerpt": "|  HyperDenseNet  |   10.4 M   |   5.8   | - | - | \nFor Iseg-2017 : \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8632348204016947
      ],
      "excerpt": "For MR brains 2018 (4 classes) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8632348204016947
      ],
      "excerpt": "For MR brains 2018 (8 classes) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.963649015166643
      ],
      "excerpt": "For MICCAI 2019 Gleason Challenge \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "Offline sub-volume generation  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9677640385174676
      ],
      "excerpt": "Fix mrbrains,Brats2018,Brats2019, Iseg2019, IXI,MICCAI 2019 gleason challenge dataloaders \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/black0017/MedicalZooPytorch/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/black0017/MedicalZooPytorch",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "<div align=\"center\">\n<img src=\"figures/med-zoo-logo.png\" width=662 height=250/>\n</div>\n\nMedical ZOO: Contribute\nHow to contribute\nWe are looking for more contributors in the project to handle more cool medical imaging problems. Send me an email if you are interested at black.adaloglou@gmail.com\nFeedback\nThe best way to send feedback is to submit an issue\nIf you are proposing a feature:\n\nExplain in detail how it would work.\nKeep it as narrow as possible.\n\nPull Requests\nBefore you submit a pull request, check that it meets these guidelines:\n\nThe pull request should include some testing functionality.\nIf the pull request adds functionality, the docs should be updated. Please put\n   your new functionality into manual or readme",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-23T11:00:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T08:51:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9995596616326959,
        0.9853736676192185,
        0.8343741277583583
      ],
      "excerpt": "We strongly believe in open and reproducible deep learning research. Our goal is to implement an open-source medical image segmentation library of state of the art 3D deep neural networks in PyTorch. We also implemented a bunch of data loaders of the most common medical image datasets.  This project started as an MSc Thesis and is currently under further development. Although this work was initially focused on 3D multi-modal brain MRI segmentation we are slowly adding more architectures and data-loaders. \n[Update] 21-07 We have just received a brand new GPU. The project developedment was postponed due to lack of computational resources. We will be back with more updates. Please Watch our Github repository for releases to be notified. We are always looking for passionate open-source contributos. Full credits will be given. \n[ ] Project restructure, API/CLI design ++ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853651126660091,
        0.8409982616001721
      ],
      "excerpt": "[ ] Overlapping and non-overlapping inference \n[ ] Finalize preprocessing on Brats datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105133474131716
      ],
      "excerpt": "[ ] More options for 2D architectures \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8339088826302595
      ],
      "excerpt": "[ ] New notebooks with google colab support \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "| Model | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8427685507515461
      ],
      "excerpt": "We provide some implementations around Covid-19 for humanitarian purposes. In detail: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A pytorch-based deep learning framework for multi-modal 2D/3D medical image segmentation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/black0017/MedicalZooPytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 183,
      "date": "Fri, 24 Dec 2021 02:21:17 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/black0017/MedicalZooPytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "black0017/MedicalZooPytorch",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/black0017/MedicalZooPytorch/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/black0017/MedicalZooPytorch/master/Quickstart_MedicalZoo.ipynb",
      "https://raw.githubusercontent.com/black0017/MedicalZooPytorch/master/notebooks/Quickstart_MedicalZoo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8074332730146293
      ],
      "excerpt": "[ ] Rewrite manual \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.906931657736595
      ],
      "excerpt": "The arguments that you can modify are extensively listed in the manual. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8475804480981863
      ],
      "excerpt": "[ ] Minimal test prediction example with pre-trained models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.856613585185837
      ],
      "excerpt": "|Task|Data Info/ Modalities| Train/Test | Volume size | Classes | Dataset size (GB)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627643558624205
      ],
      "excerpt": "<img src=\"figures/comparison.png\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563277988753164
      ],
      "excerpt": "python ./examples/train_iseg2017_new.py --args \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563277988753164
      ],
      "excerpt": "python ./examples/train_mrbrains_4_classes.py --args \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563277988753164
      ],
      "excerpt": "python ./examples/train_mrbrains_9_classes.py --args \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563277988753164
      ],
      "excerpt": "python ./examples/test_miccai_2019.py --args \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8780277474436161
      ],
      "excerpt": "python ./tests/inference.py --args \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/black0017/MedicalZooPytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 MedicalZooPytorch Nikolas Adaloglou (black0017) & Ilias Papastratis (IliasPap)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "A 3D multi-modal medical image segmentation library in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MedicalZooPytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "black0017",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/black0017/MedicalZooPytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 856,
      "date": "Fri, 24 Dec 2021 02:21:17 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you **really** like this repository and find it useful, please consider (\u2605) **starring** it, so that it can reach a broader audience of like-minded people. It would be highly appreciated :) !\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "segmentation",
      "deep-learning",
      "pytorch",
      "medical-imaging",
      "medical-image-processing",
      "medical-image-segmentation",
      "3d-convolutional-network",
      "brats2019",
      "brats2018",
      "densenet",
      "resnet",
      "iseg-challenge",
      "iseg",
      "mrbrains18",
      "unet",
      "unet-image-segmentation",
      "segmentation-models"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- If you want to quickly understand the fundamental concepts for deep learning in medical imaging, we strongly advice to check our [blog post](https://theaisummer.com/medical-image-deep-learning/ \"MedicalZooPytorch article\"). We provide a general high-level overview of all the aspects of medical image segmentation and deep learning. For a broader overview on MRI applications find my latest [review article](https://theaisummer.com/mri-beyond-segmentation/).\n\n- To grasp more fundamental medical imaging concepts, check out our [post](https://theaisummer.com/medical-image-coordinates/) on coordinate systems and DICOM images.\n\n- For a more holistic approach on Deep Learning in MRI you may advice my thesis [this](https://nemertes.lis.upatras.gr/jspui/handle/10889/12754 \"MSc thesis link\").\n\n- Alternatively, you can create a **virtual environment** and install the requirements. Check the installation folder for more instructions.\n\n- You can also take a quick glance at the [manual](./manual/README.md).\n\n- If you do not have a capable environment or device to run this projects then you could give Google Colab a try. It allows you to run the project using a GPU device, free of charge. You may try our Colab demo using this notebook:[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/black0017/MedicalZooPytorch/blob/master/Quickstart_MedicalZoo.ipynb)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}