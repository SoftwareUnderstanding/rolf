{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project has been supported by the Office of the Director of National Intelligence (ODNI), Intelligence Advanced Research Projects Activity (IARPA), via IARPA Contract No. 2019-19051600006 under the [Better Extraction from Text Towards Enhanced Retrieval (BETTER) Program](https://www.iarpa.gov/index.php/research-programs/better).\r\n\r\nWe use [XLM-Roberta](https://arxiv.org/abs/1911.02116) and [Adapters](https://arxiv.org/abs/2005.00247) as our shared multilingual encoder for different tasks and languages. The [AdapterHub](https://github.com/Adapter-Hub/adapter-transformers) is used to implement our plug-and-play mechanism with Adapters. To speed up the development process, the implementations for the MWT expander and the lemmatizer are adapted from [Stanza](https://github.com/stanfordnlp/stanza). To implement the language detection module, we leverage the [langid](https://github.com/saffsd/langid.py) library.\r\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.02116",
      "https://arxiv.org/abs/2005.00247"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{nguyen2021trankit,\n      title={Trankit: A Light-Weight Transformer-based Toolkit for Multilingual Natural Language Processing}, \n      author={Nguyen, Minh Van and Lai, Viet Dac and Veyseh, Amir Pouran Ben and Nguyen, Thien Huu},\n      booktitle=\"Proceedings of the 16th Conference of the European Chapter of the Association for Computational Linguistics: System Demonstrations\",\n      year={2021}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nlp-uoregon/trankit",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-08T20:39:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T05:15:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9465049534623207,
        0.9028334151063069
      ],
      "excerpt": "90 new pretrained transformer-based pipelines for 56 languages. The new pipelines are trained with XLM-Roberta large, which further boosts the performance significantly over 90 treebanks of the Universal Dependencies v2.5 corpus. Check out the new performance here. This page shows you how to use the new pipelines. \nAuto Mode for multilingual pipelines. In the Auto Mode, the language of the input will be automatically detected, enabling the multilingual pipelines to process the input without specifying its language. Check out how to turn on the Auto Mode here. Thank you loretoparisi for your suggestion on this. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046994457278057
      ],
      "excerpt": "Trankit is a light-weight Transformer-based Python Toolkit for multilingual Natural Language Processing (NLP). It provides a trainable pipeline for fundamental NLP tasks over 100 languages, and 90 downloadable pretrained pipelines for 56 languages. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9434298825363234,
        0.8427670517827064,
        0.9865889672167071,
        0.9624321081786675
      ],
      "excerpt": "Trankit outperforms the current state-of-the-art multilingual toolkit Stanza (StanfordNLP) in many tasks over 90 Universal Dependencies v2.5 treebanks of 56 different languages while still being efficient in memory usage and \nspeed, making it usable for general users. \nIn particular, for English, Trankit is significantly better than Stanza on sentence segmentation (+9.36%) and dependency parsing (+5.07% for UAS and +5.81% for LAS). For Arabic, our toolkit substantially improves sentence segmentation performance by 16.36% while Chinese observes 14.50% and 15.00% improvement of UAS and LAS for dependency parsing. Detailed comparison between Trankit, Stanza, and other popular NLP toolkits (i.e., spaCy, UDPipe) in other languages can be found here on our documentation page. \nWe also created a Demo Website for Trankit, which is hosted at: http://nlp.uoregon.edu/trankit \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8403661741765462
      ],
      "excerpt": ": perform all tasks on the input \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9616326739847701,
        0.9616326739847701,
        0.8403661741765462
      ],
      "excerpt": "untokenized_sent = '''This is Trankit.''' \npretokenized_sent = ['This', 'is', 'Trankit', '.'] \n: perform all tasks on the input \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8555359098347736,
        0.865956017963569,
        0.8724563648055395
      ],
      "excerpt": "Note that, although pretokenized inputs can always be processed, using pretokenized inputs for languages that require multi-word token expansion such as Arabic or French might not be the correct way. Please check out the columnRequires MWT expansion?` of this table to see if a particular language requires multi-word token expansion or not. \nFor more detailed examples, please check out our documentation page. \nTraining customized pipelines is easy with Trankit via the class TPipeline. Below we show how we can train a token and sentence splitter on customized data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8719434330475051,
        0.8533138372876672,
        0.828539031172196
      ],
      "excerpt": "In case you want to share your customized pipelines with other users. Please create an issue here and provide us the following information: \nTraining data that you used to train your models, e.g., data license, data source, and some data statistics (i.e., sizes of training, development, and test data). \nPerformance of your pipelines on your test data using the official evaluation script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Trankit is a Light-Weight Transformer-based Python Toolkit for Multilingual Natural Language Processing",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://trankit.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nlp-uoregon/trankit/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 70,
      "date": "Mon, 27 Dec 2021 06:01:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nlp-uoregon/trankit/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nlp-uoregon/trankit",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/nlp-uoregon/trankit/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nlp-uoregon/trankit/master/examples/colab/trankit_ner_GermEval14.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Previous versions of Trankit have encountered the [compatibility issue](https://github.com/nlp-uoregon/trankit/issues/5) when using recent versions of [transformers](https://github.com/huggingface/transformers). To fix this issue, please install the new version of Trankit as follows:\r\n```\r\npip install trankit==1.1.0\r\n```\r\nIf you encounter any other problem with the installation, please raise an issue [here](https://github.com/nlp-uoregon/trankit/issues/new) to let us know. Thanks.\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Trankit can be easily installed via one of the following methods:\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.999746712887969,
        0.8981495609590412,
        0.9786361665041823,
        0.9906248903846466,
        0.999746712887969
      ],
      "excerpt": "pip install trankit \nThe command would install Trankit and all dependent packages automatically. \ngit clone https://github.com/nlp-uoregon/trankit.git \ncd trankit \npip install -e . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.883963703975126
      ],
      "excerpt": "The following code shows how to initialize a pretrained pipeline for English; it is instructed to run on GPU, automatically download pretrained models, and store them to the specified cache directory. Trankit will not download pretrained models if they already exist. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8499649801772173
      ],
      "excerpt": "The following code shows how to initialize a pretrained pipeline for English; it is instructed to run on GPU, automatically download pretrained models, and store them to the specified cache directory. Trankit will not download pretrained models if they already exist. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984,
        0.8594142235991984
      ],
      "excerpt": "processed_sent1 = p(untokenized_sent, is_sent=True) \nprocessed_sent2 = p(pretokenized_sent, is_sent=True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from trankit import TPipeline \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454553703666403,
        0.8589534893990137
      ],
      "excerpt": "    'train_txt_fpath': './train.txt', \n    'train_conllu_fpath': './train.conllu', \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nlp-uoregon/trankit/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2021 NLP Group at the University of Oregon\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## :boom: :boom: :boom: Trankit v1.0.0 is out:",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "trankit",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nlp-uoregon",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nlp-uoregon/trankit/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "minhhdvn",
        "body": "* The issue #17 of loading customized pipelines has been fixed in this new release. Please check it out [here](https://trankit.readthedocs.io/en/latest/training.html#loading).\r\n* In this new release, `trankit` supports conversion of trankit outputs in json format to CoNLL-U format. The conversion is done via the new function `trankit2conllu`, which can be used as belows:\r\n```\r\nfrom trankit import Pipeline, trankit2conllu\r\n\r\np = Pipeline('english')\r\n\r\n# document level\r\njson_doc = p('''Hello! This is Trankit.''')\r\nconllu_doc = trankit2conllu(json_doc)\r\nprint(conllu_doc)\r\n#1       Hello   hello   INTJ    UH      _       0       root    _       _\r\n#2       !       !       PUNCT   .       _       1       punct   _       _\r\n#\r\n#1       This    this    PRON    DT      Number=Sing|PronType=Dem        3       nsubj   _       _\r\n#2       is      be      AUX     VBZ     Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin   3       cop     _       _\r\n#3       Trankit Trankit PROPN   NNP     Number=Sing     0       root    _       _\r\n#4       .       .       PUNCT   .       _       3       punct   _       _\r\n\r\n# sentence level\r\njson_sent = p('''This is Trankit.''', is_sent=True)\r\nconllu_sent = trankit2conllu(json_sent)\r\nprint(conllu_sent)\r\n#1       This    this    PRON    DT      Number=Sing|PronType=Dem        3       nsubj   _       _\r\n#2       is      be      AUX     VBZ     Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin   3       cop     _       _\r\n#3       Trankit Trankit PROPN   NNP     Number=Sing     0       root    _       _\r\n#4       .       .       PUNCT   .       _       3       punct   _       _\r\n\r\n```",
        "dateCreated": "2021-06-19T22:33:51Z",
        "datePublished": "2021-06-19T22:52:13Z",
        "html_url": "https://github.com/nlp-uoregon/trankit/releases/tag/v1.1.0",
        "name": "Fixed loading error for customized pipelines and added a function for converting trankit outputs to CoNLL-U format",
        "tag_name": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/nlp-uoregon/trankit/tarball/v1.1.0",
        "url": "https://api.github.com/repos/nlp-uoregon/trankit/releases/44910601",
        "zipball_url": "https://api.github.com/repos/nlp-uoregon/trankit/zipball/v1.1.0"
      },
      {
        "authorType": "User",
        "author_name": "minhhdvn",
        "body": "",
        "dateCreated": "2021-04-03T18:14:30Z",
        "datePublished": "2021-04-03T18:20:24Z",
        "html_url": "https://github.com/nlp-uoregon/trankit/releases/tag/v1.0.1",
        "name": "Fixed the compatibility issue of adapter-transformers",
        "tag_name": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/nlp-uoregon/trankit/tarball/v1.0.1",
        "url": "https://api.github.com/repos/nlp-uoregon/trankit/releases/40903081",
        "zipball_url": "https://api.github.com/repos/nlp-uoregon/trankit/zipball/v1.0.1"
      },
      {
        "authorType": "User",
        "author_name": "minhhdvn",
        "body": "### :boom: :boom: :boom: Trankit v1.0.0 is out:\r\n\r\n* **90 new pretrained transformer-based pipelines for 56 languages**. The new pipelines are trained with XLM-Roberta large, which further boosts the performance significantly over 90 treebanks of the Universal Dependencies v2.5 corpus. Check out the new performance [here](https://trankit.readthedocs.io/en/latest/performance.html). This [page](https://trankit.readthedocs.io/en/latest/news.html#trankit-large) shows you how to use the new pipelines.\r\n\r\n* **Auto Mode for multilingual pipelines**. In the Auto Mode, the language of the input will be automatically detected, enabling the multilingual pipelines to process the input without specifying its language. Check out how to turn on the Auto Mode [here](https://trankit.readthedocs.io/en/latest/news.html#auto-mode-for-multilingual-pipelines). Thank you [loretoparisi](https://github.com/loretoparisi) for your suggestion on this.\r\n\r\n* **Command-line interface** is now available to use. This helps users who are not familiar with Python programming language can use Trankit easily. Check out the tutorials on this [page](https://trankit.readthedocs.io/en/latest/commandline.html).",
        "dateCreated": "2021-03-31T18:44:49Z",
        "datePublished": "2021-03-31T18:57:59Z",
        "html_url": "https://github.com/nlp-uoregon/trankit/releases/tag/v1.0.0",
        "name": "Trankit v1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/nlp-uoregon/trankit/tarball/v1.0.0",
        "url": "https://api.github.com/repos/nlp-uoregon/trankit/releases/40779270",
        "zipball_url": "https://api.github.com/repos/nlp-uoregon/trankit/zipball/v1.0.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 558,
      "date": "Mon, 27 Dec 2021 06:01:38 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "nlp",
      "natural-language-processing",
      "pytorch",
      "language-model",
      "xlm-roberta",
      "machine-learning",
      "deeplearning",
      "artificial-intelligence",
      "universal-dependencies",
      "multilingual",
      "adapters",
      "sentence-segmentation",
      "tokenization",
      "part-of-speech-tagging",
      "morphological-tagging",
      "dependency-parsing",
      "lemmatization"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Trankit can process inputs which are untokenized (raw) or pretokenized strings, at\r\nboth sentence and document level. Currently, Trankit supports the following tasks:\r\n- Sentence segmentation.\r\n- Tokenization.\r\n- Multi-word token expansion.\r\n- Part-of-speech tagging.\r\n- Morphological feature tagging.\r\n- Dependency parsing.\r\n- Named entity recognition.\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Starting from version v1.0.0, Trankit supports a handy [Auto Mode](https://trankit.readthedocs.io/en/latest/news.html#auto-mode-for-multilingual-pipelines) in which users do not have to set a particular language active before processing the input. In the Auto Mode, Trankit will automatically detect the language of the input and use the corresponding language-specific models, thus avoiding switching back and forth between languages in a multilingual pipeline.\r\n\r\n```python\r\nfrom trankit import Pipeline\r\n\r\np = Pipeline('auto')\r\n\r\n#: Tokenizing an English input\r\nen_output = p.tokenize('''I figured I would put it out there anyways.''') \r\n\r\n#: POS, Morphological tagging and Dependency parsing a French input\r\nfr_output = p.posdep('''On pourra toujours parler \u00e0 propos d'Averro\u00e8s de \"d\u00e9centrement du Sujet\".''')\r\n\r\n#: NER tagging a Vietnamese input\r\nvi_output = p.ner('''Cu\u1ed9c ti\u00eam th\u1eed nghi\u1ec7m ti\u1ebfn h\u00e0nh t\u1ea1i H\u1ecdc vi\u1ec7n Qu\u00e2n y, H\u00e0 N\u1ed9i''')\r\n```\r\nIn this example, the code name `'auto'` is used to initialize a multilingual pipeline in the Auto Mode. For more information, please visit [this page](https://trankit.readthedocs.io/en/latest/news.html#auto-mode-for-multilingual-pipelines). Note that, besides the new Auto Mode, the [manual mode](https://trankit.readthedocs.io/en/latest/overview.html#multilingual-usage) can still be used as before.\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}