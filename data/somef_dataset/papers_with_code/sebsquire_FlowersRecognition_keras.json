{
  "citation": [
    {
      "confidence": [
        0.8131879615207732
      ],
      "excerpt": "Dataset available at: https://www.kaggle.com/alxmamaev/flowers-recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998838868777323
      ],
      "excerpt": "        - Deep Residual Learning for Image Recognition - https://arxiv.org/pdf/1512.03385.pdf \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sebsquire/FlowersRecognition_keras",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-02T17:56:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-16T18:20:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9571612357453746,
        0.8484536444367796
      ],
      "excerpt": " - Keras CNN implemented using keras.models.Sequential \n - Keras CNN incorporating a residual block/shortcut connection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9833646606184054
      ],
      "excerpt": " - Normalisation of image data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9796122626262491,
        0.9767627982167809,
        0.9825928484532632
      ],
      "excerpt": " - main_keras: Calls preprocessing.py to load and preprocess image data, sets model parameters, loads and normalises data, and trains, tests, and produces classification metrics for the convolutional neural network model on the validation set using a sequential model. \n - hyperparamsearch: Calls preprocessing.py to load and preprocess image data, sets model parameters, loads and normalises data, and trains, tests, and produces classification metrics for the convolutional neural network model on the validation set using a sequential model. Performs a grid search of hyperparameter options and records accuracy and epoch number of max accuracy in a separate csv. \n - res_hyperparamsearch: Calls preprocessing.py to load and preprocess image data, sets model parameters, loads and normalises data, and trains, tests, and produces classification metrics for the convolutional neural network model with residual block/shortcut connection on the validation set using a sequential model. Performs a grid search of hyperparameter options and records accuracy and epoch number of max accuracy in a separate csv. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Multi-class classification of flower types using CNN w/ shortcut connections",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sebsquire/FlowersRecognition_keras/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 03:12:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sebsquire/FlowersRecognition_keras/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sebsquire/FlowersRecognition_keras",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8179940224262374
      ],
      "excerpt": " - Hyperparameter tuning using grid search \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.856508429425719
      ],
      "excerpt": " - prepocessing: Function for creation of training and test data in .npy files. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sebsquire/FlowersRecognition_keras/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "FlowersRecognition_keras",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FlowersRecognition_keras",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sebsquire",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sebsquire/FlowersRecognition_keras/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 03:12:36 GMT"
    },
    "technique": "GitHub API"
  }
}