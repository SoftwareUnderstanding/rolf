{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.02325"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{marin19cvpr,\n  author    = {Mar\\'in-Jim\\'enez, Manuel J. and Kalogeiton, Vicky and Medina-Su\\'arez, Pablo and and Zisserman, Andrew},\n  title     = {{LAEO-Net}: revisiting people {Looking At Each Other} in videos},\n  booktitle = CVPR,\n  year      = {2019},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9999366851151332
      ],
      "excerpt": "If you find these models useful, please consider citing the following paper: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AVAuco/ssd_people",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-16T18:56:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-14T16:23:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9112929064167917
      ],
      "excerpt": "Clone ssd_people from GitHub using the method of your choice:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9820865441835451
      ],
      "excerpt": "We show some results of both the head (left) and upper-body detectors (right) on the UCO-LAEO dataset in the following videos. No temporal smoothing or other kind of post-processing has been applied to the output of the detectors. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9459278513573164
      ],
      "excerpt": "We thank the authors of the images used in the demo code, which are licensed under a CC BY 2.0 license: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "People detector based on SSD",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AVAuco/ssd_people/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Tue, 28 Dec 2021 20:21:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AVAuco/ssd_people/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AVAuco/ssd_people",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8198845646090557,
        0.999004679103593,
        0.9975580104869771,
        0.999004679103593,
        0.9975580104869771,
        0.8044223173245081,
        0.999004679103593,
        0.8328068080935811,
        0.9892214431915852,
        0.9798376452272237
      ],
      "excerpt": "In order to download the models provided in this repository installation of git and git-lfs is mandatory. To do so, run the following commands in command line interface: \nInstall git:      \n    sudo apt-get install git \nInstall git-lfs: \n    sudo apt-get install git-lfs \nSet up git-lfs: \n    git lfs install \nClone ssd_people from GitHub using the method of your choice:  \n    git clone https://github.com/AVAuco/ssd_people.git (HTTPS) \n    git clone git@github.com:AVAuco/ssd_people.git (SSH) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9402977999388606
      ],
      "excerpt": "Alternatively, you can use the following direct download link: download \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8804116327332518
      ],
      "excerpt": "        <img src=\"http://i3.ytimg.com/vi/tcAFehx7Am4/hqdefault.jpg\" height=\"276\" width=\"377\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804116327332518
      ],
      "excerpt": "        <img src=\"http://i3.ytimg.com/vi/wwYOu2oOg6g/hqdefault.jpg\" height=\"276\" width=\"377\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AVAuco/ssd_people/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## Cloning the repository",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ssd_people",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AVAuco",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AVAuco/ssd_people/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Demo code is provided in [ssd_people_demo.m](./ssd_people_demo.m). Running this script will perform detections over 3 sample images using the selected model, showing the results in screen.\r\n\r\nTo run this script, start MATLAB and setup MatConvNet with contrib modules:\r\n```matlab\r\n% Add MatConvNet to MATLAB's PATH:\r\naddpath /usr/local/matconvnet-25/matlab     % Adapt this path to your setup\r\nvl_setupnn\r\n\r\n% Setup mcnSSD and its dependencies\r\nvl_contrib('setup', 'mcnSSD')\r\n\r\n% Setup ssd_people\r\ncd <root_ssd_people>  \r\naddpath(genpath(pwd))   % Just in case\r\n\r\n% Run demo code on CPU\r\nssd_people_demo;    % Runs the upper-body detector\r\nssd_people_demo('model','head');    % Runs the head detector\r\n```\r\n\r\nSoftware requirements\r\n------\r\nMinimal requirements to run the models on the CPU:\r\n- MATLAB (tested on R2016b and R2017a).\r\n    - Demo code requires Parallel Computing, Computer Vision System and Image Processing toolboxes.\r\n- [MatConvNet](http://www.vlfeat.org/matconvnet/) (version >= 1.0-beta25 is recommended because of `vl_contrib`).\r\n- [mcnSSD](https://github.com/albanie/mcnSSD).\r\n    - [autoNN](https://github.com/vlfeat/autonn).\r\n    - [mcnExtraLayers](https://github.com/albanie/mcnExtraLayers).\r\n\r\nThe following code installs mcnSSD and its dependencies via `vl_contrib`:\r\n```matlab\r\nvl_contrib('install', 'mcnSSD');\r\nvl_contrib('compile', 'mcnSSD');\r\nvl_contrib('setup', 'mcnSSD');\r\n\r\nvl_contrib('install','autonn');\r\nvl_contrib('setup','autonn');\r\n\r\nvl_contrib('install','mcnExtraLayers');\r\nvl_contrib('setup','mcnExtraLayers');\r\n```\r\n\r\nAdditional, recommended requirements to run the detectors on the GPU:\r\n- NVIDIA CUDA Toolkit (tested on v8.0 GA2, v9.2 and v10.0).\r\n- **Optional:** a NVIDIA cuDNN version matching the NVIDIA CUDA Toolkit version installed.\r\n\r\nPerformance\r\n------\r\nBoth the upper-body and head detectors have a 512x512 input size, favoring precision over speed. Nonetheless, these models run at an average of 35 Hz on a NVIDIA GTX 1080, allowing real time detections.\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Tue, 28 Dec 2021 20:21:34 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "people",
      "detection",
      "ssd",
      "deep-learning",
      "upper-body",
      "head",
      "matlab",
      "matconvnet"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Demo code is provided in [ssd_people_demo.m](./ssd_people_demo.m). Running this script will perform detections over 3 sample images using the selected model, showing the results in screen.\r\n\r\nTo run this script, start MATLAB and setup MatConvNet with contrib modules:\r\n```matlab\r\n% Add MatConvNet to MATLAB's PATH:\r\naddpath /usr/local/matconvnet-25/matlab     % Adapt this path to your setup\r\nvl_setupnn\r\n\r\n% Setup mcnSSD and its dependencies\r\nvl_contrib('setup', 'mcnSSD')\r\n\r\n% Setup ssd_people\r\ncd <root_ssd_people>  \r\naddpath(genpath(pwd))   % Just in case\r\n\r\n% Run demo code on CPU\r\nssd_people_demo;    % Runs the upper-body detector\r\nssd_people_demo('model','head');    % Runs the head detector\r\n```\r\n\r\nSoftware requirements\r\n------\r\nMinimal requirements to run the models on the CPU:\r\n- MATLAB (tested on R2016b and R2017a).\r\n    - Demo code requires Parallel Computing, Computer Vision System and Image Processing toolboxes.\r\n- [MatConvNet](http://www.vlfeat.org/matconvnet/) (version >= 1.0-beta25 is recommended because of `vl_contrib`).\r\n- [mcnSSD](https://github.com/albanie/mcnSSD).\r\n    - [autoNN](https://github.com/vlfeat/autonn).\r\n    - [mcnExtraLayers](https://github.com/albanie/mcnExtraLayers).\r\n\r\nThe following code installs mcnSSD and its dependencies via `vl_contrib`:\r\n```matlab\r\nvl_contrib('install', 'mcnSSD');\r\nvl_contrib('compile', 'mcnSSD');\r\nvl_contrib('setup', 'mcnSSD');\r\n\r\nvl_contrib('install','autonn');\r\nvl_contrib('setup','autonn');\r\n\r\nvl_contrib('install','mcnExtraLayers');\r\nvl_contrib('setup','mcnExtraLayers');\r\n```\r\n\r\nAdditional, recommended requirements to run the detectors on the GPU:\r\n- NVIDIA CUDA Toolkit (tested on v8.0 GA2, v9.2 and v10.0).\r\n- **Optional:** a NVIDIA cuDNN version matching the NVIDIA CUDA Toolkit version installed.\r\n\r\nPerformance\r\n------\r\nBoth the upper-body and head detectors have a 512x512 input size, favoring precision over speed. Nonetheless, these models run at an average of 35 Hz on a NVIDIA GTX 1080, allowing real time detections.\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}