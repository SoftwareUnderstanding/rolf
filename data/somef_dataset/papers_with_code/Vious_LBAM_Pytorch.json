{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We benifit a lot from [NVIDIA-partialconv](https://github.com/NVIDIA/partialconv) and [naoto0804-pytorch-inpainting-with-partial-conv](https://github.com/naoto0804/pytorch-inpainting-with-partial-conv\n), thanks for their excellent work.\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Xie_2019_ICCV,\nauthor = {Xie, Chaohao and Liu, Shaohui and Li, Chao and Cheng, Ming-Ming and Zuo, Wangmeng and Liu, Xiao and Wen, Shilei and Ding, Errui},\ntitle = {Image Inpainting With Learnable Bidirectional Attention Maps},\nbooktitle = {The IEEE International Conference on Computer Vision (ICCV)},\nmonth = {October},\nyear = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "<table style='float:center'> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Vious/LBAM_Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-11T02:16:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T04:58:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is the pytorch implementation of Paper: Image Inpainting With Learnable Bidirectional Attention Maps (ICCV 2019) [paper](http://openaccess.thecvf.com/content_ICCV_2019/papers/Xie_Image_Inpainting_With_Learnable_Bidirectional_Attention_Maps_ICCV_2019_paper.pdf) [suppl](http://openaccess.thecvf.com/content_ICCV_2019/supplemental/Xie_Image_Inpainting_With_ICCV_2019_supplemental.pdf)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9096501273657228
      ],
      "excerpt": "We propose a Bidirectional Attention model based on the U-Net architecture. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.836537550966121
      ],
      "excerpt": "To test with random batch with random masks: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9135734059184165,
        0.9296651013464017,
        0.8510868700457015
      ],
      "excerpt": "We suggest that you train our model with a large batch size (>= 48 or so). We re-train our model with batch size 10, the results degrades a little bit, I guess it may be due to the batch-normalization opreation (I would try removing bn from LBAM and see how it affects). \nThe pretrained model can be found at google drive, or baidu cloud with extract code: mvzh. I made a slight change by setting the bn to false and modify the last tanh from absolute value to (tanh() + 1) / 2. \nHere are some inpainting results that we train with batch size of 10 on Paris StreetView dataset: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch re-implementation of Paper: Image Inpainting with Learnable Bidirectional Attention Maps (ICCV 2019)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Vious/LBAM_Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 17,
      "date": "Mon, 20 Dec 2021 19:05:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Vious/LBAM_Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vious/LBAM_Pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8378080875653302
      ],
      "excerpt": "--logPath path_to_save_tensorboard_log --pretrain(optional) pretrained_model_path \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8443391904502446
      ],
      "excerpt": "To train the LBAM model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358035977892055
      ],
      "excerpt": "python train.py --batchSize numOf_batch_size --dataRoot your_image_path \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8467708910668323
      ],
      "excerpt": "To test the model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.941852986181392
      ],
      "excerpt": "python test.py --input input_image --mask your_mask --output output_file_prefix --pretrain pretrained_model_path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9082487869897566
      ],
      "excerpt": "python test_random_batch.py --dataRoot your_image_path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8039674978563456
      ],
      "excerpt": "Here are some inpainting results that we train with batch size of 10 on Paris StreetView dataset: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014484392917336
      ],
      "excerpt": "     <img src=\"./figs/results/input/input_001.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884629887036417
      ],
      "excerpt": "     <img src=\"./figs/results/ours/ours_001.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176930369449651
      ],
      "excerpt": "     <img src=\"./figs/results/GT/GT_001.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014484392917336
      ],
      "excerpt": "     <img src=\"./figs/results/input/input_002.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884629887036417
      ],
      "excerpt": "     <img src=\"./figs/results/ours/ours_002.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176930369449651
      ],
      "excerpt": "     <img src=\"./figs/results/GT/GT_002.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014484392917336
      ],
      "excerpt": "     <img src=\"./figs/results/input/input_003.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884629887036417
      ],
      "excerpt": "     <img src=\"./figs/results/ours/ours_003.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176930369449651
      ],
      "excerpt": "     <img src=\"./figs/results/GT/GT_003.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014484392917336
      ],
      "excerpt": "     <img src=\"./figs/results/input/input_004.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884629887036417
      ],
      "excerpt": "     <img src=\"./figs/results/ours/ours_004.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176930369449651
      ],
      "excerpt": "     <img src=\"./figs/results/GT/GT_004.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014484392917336
      ],
      "excerpt": "     <img src=\"./figs/results/input/input_005.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884629887036417
      ],
      "excerpt": "     <img src=\"./figs/results/ours/ours_005.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176930369449651
      ],
      "excerpt": "     <img src=\"./figs/results/GT/GT_005.png\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Vious/LBAM_Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Vious\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "LBAM_inpainting",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "LBAM_Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vious",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Vious/LBAM_Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.6\n- Pytorch >= 1.0 (tested on pytorch version 1.0.0, 1.2.0, 1.3.0)\n- CPU or NVIDIA GPU + Cuda + Cudnn\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 103,
      "date": "Mon, 20 Dec 2021 19:05:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "image-inpainting",
      "iccv",
      "pytorch-implementation"
    ],
    "technique": "GitHub API"
  }
}