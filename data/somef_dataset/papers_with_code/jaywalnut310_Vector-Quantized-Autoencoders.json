{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1805.11063",
      "https://arxiv.org/abs/1711.00937"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8669112007448144
      ],
      "excerpt": "| Source        | Prediction    | Ground Truth  | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jaywalnut310/Vector-Quantized-Autoencoders",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-19T09:53:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-02T12:35:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9479169840955116
      ],
      "excerpt": "Tensorflow implementation of Theory and Experiments on Vector Quantized Autoencoders. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9479268910830327,
        0.9685906862662366,
        0.9232985959907349,
        0.8166470533704181
      ],
      "excerpt": "For more details, please refer to the paper or its precedent paper (Neural Discrete Representation Learning). \nMany codes of this repository are drawn from tensor2tensor library. \nAs tensor2tensor is too big to understand at a glance, I draw some of their codes as concise as possible. \nAll works are done in TensorFlow 1.12. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9556526064451192,
        0.959209502518078
      ],
      "excerpt": "In my experience, I figured more batch_size and number of gpus help to improve performance significantly. \nThus, there is a possiblility to get further improvements with 8 or more gpus training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016,
        0.8193619449153594
      ],
      "excerpt": "| Gutach: Increased safety for pedestrians | Guts: Mehr Sicherheit f\u00fcr Fu\u00dfg\u00e4nger | Gutach: Noch mehr Sicherheit f\u00fcr Fu\u00dfg\u00e4nger | \n| They are not even 100 metres apart: On Tuesday, the new B 33 pedestrian lights in Dorfparkplatz in Gutach became operational - within view of the existing Town Hall traffic lights. | Sie sind nicht nicht einmal 100 Meter voneinander entfernt: Am Dienstag wurden die neuen Fu\u00dfg\u00e4ngerzonen B 33 am Dorfparkplatz in Gutach im Hinblick auf die bestehende Ampel des Rathauses in Betrieb genommen. | Sie stehen keine 100 Meter voneinander entfernt: Am Dienstag ist in Gutach die neue B 33-Fu\u00dfg\u00e4ngerampel am Dorfparkplatz in Betrieb genommen worden - in Sichtweite der \u00e4lteren Rathausampel. | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow Implementation of \"Theory and Experiments on Vector Quantized Autoencoders\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jaywalnut310/Vector-Quantized-Autoencoders/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Wed, 29 Dec 2021 06:37:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jaywalnut310/Vector-Quantized-Autoencoders/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jaywalnut310/Vector-Quantized-Autoencoders",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "TK\n```sh\n#: You can change filepaths by modifying 'config.yml'\n#: or you can change filepaths using --c config as below.\n#: python generate_data.py --c \\\n#:   source_vocab_file=/path/to/your-data-dir/vocab_src \\\n#:   target_vocab_file=/path/to/your-data-dir/vocab_tgt \\\n#:   source_train_file=/path/to/your-data-dir/train_src \\\n#:   target_train_file=/path/to/your-data-dir/train_tgt \\\n#:   source_eval_file=/path/to/your-data-dir/valid_src \\\n#:   target_eval_file=/path/to/your-data-dir/valid_tgt \\\n#:   record_train_file=/path/to/your-data-dir/train.tfrecords \\\n#:   record_eval_file=/path/to/your-data-dir/valid.tfrecords\npython generate_data.py\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9099539712053882
      ],
      "excerpt": "By modifying configurations, you can use VQVAE instead of soft EM version VQA (modify bottleneck_kind to vq in config.yml) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8012018785349988
      ],
      "excerpt": "It took about 13 days to run 1M train steps. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8612329833776918,
        0.8603611923690484
      ],
      "excerpt": "mkdir /path/to/your-log-dir \n: 2. (Optional) Copy configs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "  sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8428839799524723
      ],
      "excerpt": "python avg_checkpoints.py --prefix=/path/to/your-log-dir --num_last_checkpoints=20 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8805765293742311
      ],
      "excerpt": "sh /path/to/OpenNMT-tf/scripts/wmt/get_ende_bleu.sh out.detok.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8725819630080391,
        0.9026097862967407
      ],
      "excerpt": ": 3. Run training \npython train.py -m /path/to/your-log-dir \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9026097862967407
      ],
      "excerpt": "  python train.py -m /path/to/your-log-dir --c hidden_size=512 num_heads=8 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.826292096187241
      ],
      "excerpt": "python avg_checkpoints.py --prefix=/path/to/your-log-dir --num_last_checkpoints=20 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python decode.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8128065679712183
      ],
      "excerpt": "  --predict_file /path/to/wmt14_ende_distill/test.en \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8389628715660864
      ],
      "excerpt": "The above samples are just the first 3 sentences in the test set. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jaywalnut310/Vector-Quantized-Autoencoders/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vector Quantized Autoencoders",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vector-Quantized-Autoencoders",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jaywalnut310",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jaywalnut310/Vector-Quantized-Autoencoders/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Wed, 29 Dec 2021 06:37:51 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "vqvae",
      "vae",
      "autoencoder",
      "transformer",
      "wmt",
      "tensorflow",
      "deep-learning"
    ],
    "technique": "GitHub API"
  }
}