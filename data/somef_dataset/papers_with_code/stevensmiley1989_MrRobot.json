{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.02325] <a class=\"anchor\" id=\"Ref_3\"></a>   \n\n4. TensorFlow.  Mart\u00edn Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S. Corrado, Andy Davis,Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Rafal Jozefowicz, Yangqing Jia,Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg, Dan Man\u00e9, Mike Schuster,Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Jonathon Shlens,Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker,Vincent Vanhoucke, Vijay Vasudevan, Fernanda Vi\u00e9gas,Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke,Yuan Yu, and Xiaoqiang Zheng.  TensorFlow: Large-scale machine learning on heterogeneous systems, 2015. Software available from tensorflow.org. <a class=\"anchor\" id=\"Ref_4\"></a>   \n\n5. LabelImg. [https://github.com/tzutalin/labelImg] <a class=\"anchor\" id=\"Ref_5\"></a>   \n\n6. Bradski, G., & Kaehler, A. (2008",
      "https://arxiv.org/abs/1801.04381]<a class=\"anchor\" id=\"Ref_20\"></a> \n\n21.  Cheng, Shuhong & Zhao, Kaopeng & Zhang, Dianfan. (2019",
      "https://arxiv.org/abs/1907.10121 <a class=\"anchor\" id=\"Ref_7\"></a>   \n\n8.  Python. a) Travis E. Oliphant. Python for Scientific Computing, Computing in Science & Engineering, 9, 10\u201320 (2007) b) K. Jarrod Millman and Michael Aivazis. Python for Scientists and Engineers, Computing in Science & Engineering, 13, 9\u201312 (2011) <a class=\"anchor\" id=\"Ref_8\"></a>   \n\n9.  NumPy. a) Travis E. Oliphant. A guide to NumPy, USA: Trelgol Publishing, (2006). b) St\u00e9fan van der Walt, S. Chris Colbert and Ga\u00ebl Varoquaux. The NumPy Array: A Structure for Efficient Numerical Computation, Computing in Science & Engineering, 13, 22\u201330 (2011) <a class=\"anchor\" id=\"Ref_9\"></a>   \n\n10.  IPython. a) Fernando P\u00e9rez and Brian E. Granger. IPython: A System for Interactive Scientific Computing, Computing in Science & Engineering, 9, 21\u201329 (2007) <a class=\"anchor\" id=\"Ref_10\"></a>   \n\n11.  Matplotlib. J. D. Hunter, \u201cMatplotlib: A 2D Graphics Environment\u201d, Computing in Science & Engineering, vol. 9, no. 3, pp. 90\u201395, 2007. <a class=\"anchor\" id=\"Ref_11\"></a>   \n\n12.  Pandas. Wes McKinney. Data Structures for Statistical Computing in Python, Proceedings of the 9th Python in Science Conference, 51\u201356 (2010) <a class=\"anchor\" id=\"Ref_12\"></a>   \n\n13. Scikit-Learn. Fabian Pedregosa, Ga\u00ebl Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, \u00c9douard Duchesnay. Scikit-learn: Machine Learning in Python, Journal of Machine Learning Research, 12, 2825\u20132830 (2011) <a class=\"anchor\" id=\"Ref_13\"></a>   \n\n14.  Scikit-Image. St\u00e9fan van der Walt, Johannes L. Sch\u00f6nberger, Juan Nunez-Iglesias, Fran\u00e7ois Boulogne, Joshua D. Warner, Neil Yager, Emmanuelle Gouillart, Tony Yu and the scikit-image contributors. scikit-image: Image processing in Python, PeerJ 2:e453 (2014) <a class=\"anchor\" id=\"Ref_14\"></a>   \n\n15.  Coral USB Accelerator. [https://coral.ai/products/accelerator/] <a class=\"anchor\" id=\"Ref_15\"></a>  \n\n16.  MrRobot GitHub Repo. [https://github.com/stevensmiley1989/MrRobot]<a class=\"anchor\" id=\"Ref_16\"></a> \n\n17.  Raspberry Pi Guide\u200a-\u200aMQTT Protocol. [https://www.raspberrypi.org/forums/viewtopic.php?t=196010]<a class=\"anchor\" id=\"Ref_17\"></a> \n\n18.  Rclone Guide. [https://rclone.org/drive/]<a class=\"anchor\" id=\"Ref_18\"></a> \n\n19.  How to Control the Speed and Stability of Training Neural Networks with Gradient Descent Batch Size. [https://machinelearningmastery.com/how-to-control-the-speed-and-stability-of-training-neural-networks-with-gradient-descent-batch-size/]<a class=\"anchor\" id=\"Ref_19\"></a> \n\n20.  Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, Liang-Chieh Chen, MobileNetV2: Inverted Residuals and Linear Bottlenecks.[https://arxiv.org/abs/1801.04381]<a class=\"anchor\" id=\"Ref_20\"></a> \n\n21.  Cheng, Shuhong & Zhao, Kaopeng & Zhang, Dianfan. (2019). Abnormal Water Quality Monitoring Based on Visual Sensing of Three-Dimensional Motion Behavior of Fish. Symmetry. 11. 1179. 10.3390/sym11091179.<a class=\"anchor\" id=\"Ref_21\"></a> \n\n## 8. Contact-Info<a class=\"anchor\" id=\"8\"></a>\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\n* Email: [stevensmiley1989@gmail.com](mailto:stevensmiley1989@gmail.com)\n* GitHub: [stevensmiley1989](https://github.com/stevensmiley1989)\n* LinkedIn: [stevensmiley1989](https://www.linkedin.com/in/stevensmiley1989)\n* Kaggle: [stevensmiley](https://www.kaggle.com/stevensmiley)\n\n### 9. License <a class=\"anchor\" id=\"9\"></a>\n\nThis repository contains a variety of content; some developed by Steven Smiley, and some from third-parties.  The third-party content is distributed under the license provided by those parties.\n\nThe content developed by Steven Smiley is distributed under the following license:\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer. \n\n   Copyright 2021 Steven Smiley\n   \n   Permission is hereby granted, free of charge, to any person obtaining a copy\n   of this software and associated documentation files (the \"Software\"), to deal\n   in the Software without restriction, including without limitation the rights\n   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   copies of the Software, and to permit persons to whom the Software is\n   furnished to do so, subject to the following conditions:\n\n   The above copyright notice and this permission notice shall be included in all\n   copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "8. Contact-Info \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999930940974906,
        0.9999871485155314,
        0.9105368110547479
      ],
      "excerpt": "Liu, Wei et al. \"SSD: Single Shot MultiBox Detector\" [https://arxiv.org/abs/1512.02325] <a class=\"anchor\" id=\"Ref_3\"></a>    \nTensorFlow.  Mart\u00edn Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S. Corrado, Andy Davis,Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Rafal Jozefowicz, Yangqing Jia,Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg, Dan Man\u00e9, Mike Schuster,Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Jonathon Shlens,Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker,Vincent Vanhoucke, Vijay Vasudevan, Fernanda Vi\u00e9gas,Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke,Yuan Yu, and Xiaoqiang Zheng.  TensorFlow: Large-scale machine learning on heterogeneous systems, 2015. Software available from tensorflow.org. <a class=\"anchor\" id=\"Ref_4\"></a>    \nLabelImg. [https://github.com/tzutalin/labelImg] <a class=\"anchor\" id=\"Ref_5\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999999793691929,
        0.985816658686046
      ],
      "excerpt": "SciPy. Pauli Virtanen, Ralf Gommers, Travis E. Oliphant, Matt Haberland, Tyler Reddy, David Cournapeau, Evgeni Burovski, Pearu Peterson, Warren Weckesser, Jonathan Bright, St\u00e9fan J. van der Walt, Matthew Brett, Joshua Wilson, K. Jarrod Millman, Nikolay Mayorov, Andrew R. J. Nelson, Eric Jones, Robert Kern, Eric Larson, CJ Carey, \u0130lhan Polat, Yu Feng, Eric W. Moore, Jake VanderPlas, Denis Laxalde, Josef Perktold, Robert Cimrman, Ian Henriksen, E.A. Quintero, Charles R Harris, Anne M. Archibald, Ant\u00f4nio H. Ribeiro, Fabian Pedregosa, Paul van Mulbregt, and SciPy 1.0 Contributors. (2019) SciPy 1.0\u2013Fundamental Algorithms for Scientific Computing in Python. preprint arXiv:1907.10121 <a class=\"anchor\" id=\"Ref_7\"></a>    \nPython. a) Travis E. Oliphant. Python for Scientific Computing, Computing in Science & Engineering, 9, 10\u201320 (2007) b) K. Jarrod Millman and Michael Aivazis. Python for Scientists and Engineers, Computing in Science & Engineering, 13, 9\u201312 (2011) <a class=\"anchor\" id=\"Ref_8\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8750083016919179
      ],
      "excerpt": "IPython. a) Fernando P\u00e9rez and Brian E. Granger. IPython: A System for Interactive Scientific Computing, Computing in Science & Engineering, 9, 21\u201329 (2007) <a class=\"anchor\" id=\"Ref_10\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9989853240713378,
        0.9999999994849986
      ],
      "excerpt": "Scikit-Learn. Fabian Pedregosa, Ga\u00ebl Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, \u00c9douard Duchesnay. Scikit-learn: Machine Learning in Python, Journal of Machine Learning Research, 12, 2825\u20132830 (2011) <a class=\"anchor\" id=\"Ref_13\"></a>    \nScikit-Image. St\u00e9fan van der Walt, Johannes L. Sch\u00f6nberger, Juan Nunez-Iglesias, Fran\u00e7ois Boulogne, Joshua D. Warner, Neil Yager, Emmanuelle Gouillart, Tony Yu and the scikit-image contributors. scikit-image: Image processing in Python, PeerJ 2:e453 (2014) <a class=\"anchor\" id=\"Ref_14\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.953227424668473,
        0.8374695145293155,
        0.8906174419333412
      ],
      "excerpt": "MrRobot GitHub Repo. [https://github.com/stevensmiley1989/MrRobot]<a class=\"anchor\" id=\"Ref_16\"></a>  \nRaspberry Pi Guide\u200a-\u200aMQTT Protocol. [https://www.raspberrypi.org/forums/viewtopic.php?t=196010]<a class=\"anchor\" id=\"Ref_17\"></a>  \nRclone Guide. [https://rclone.org/drive/]<a class=\"anchor\" id=\"Ref_18\"></a>  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999482418738423,
        0.9981720040956398
      ],
      "excerpt": "Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, Liang-Chieh Chen, MobileNetV2: Inverted Residuals and Linear Bottlenecks.[https://arxiv.org/abs/1801.04381]<a class=\"anchor\" id=\"Ref_20\"></a>  \nCheng, Shuhong & Zhao, Kaopeng & Zhang, Dianfan. (2019). Abnormal Water Quality Monitoring Based on Visual Sensing of Three-Dimensional Motion Behavior of Fish. Symmetry. 11. 1179. 10.3390/sym11091179.<a class=\"anchor\" id=\"Ref_21\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "GitHub: stevensmiley1989 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/stevensmiley1989/MrRobot",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-06T02:45:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-15T01:46:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8975922463955894
      ],
      "excerpt": "2. Adruino Codes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8815023027848323,
        0.8249004650764945
      ],
      "excerpt": "| Grab_from_Gdrive.ipynb | Pipeline Images from Gdrive to Local Machine for LabelImg to put Bounding Boxes and send back to Gdrive for training on Google Colab. | \n| augmented_ssd_MobileNet_v2_FPNLite_320x320_5_8_2021_reindeer.ipynb | Training notebook for Object Detector with SSD MobileNet V2 FPNLite 320x320 on Google Colab. | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.992699611660499,
        0.9870575957066462,
        0.9396022876945529
      ],
      "excerpt": "| MrRobot_Receiver_Master_Arduino_2_with_coil.ino | Arduino 2, Master.  This is Arduino controls the other slaves and is connected via Serial to the Raspberry Pi with USB.  | \n| MrRobot_Transmitter_Arduino_3.ino | Arduino 3, Transmitter.  This is for the glove that can control the robot using the MPU06050 and FlexSensor. | \n| MrRobot_Receiver_Slave_Arduino_4_with_coil.ino | Arduino 4, Receiver Slave.  This Arduino opens and closes the relays to the coil gun after receiving the signal from the Master for charging, stepping, or firing. | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8649294005665907
      ],
      "excerpt": "| Robot_Integrate_r0.py | This script controls the DC motors for the wheels and the Servo motors for the gripper and coil arms.  It is executed during the PI-app_r0.py execution.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8127053475422358,
        0.9430088080070674
      ],
      "excerpt": "| Serial_Connect_Stepper_r0.py | This script receives and transmits serial communication to the Arduinos.  It is executed during the PI-app_r0.py execution.  | \n| TF_object_detection_r0.py | This script runs inference with the tflite model using the Edge Coral TPU and is run in parallel with PI-app_r0.py for controlling the robot.  It is executed during the PI-app_r0.py execution.  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8429867658404167
      ],
      "excerpt": "Created in Xcode with Swift. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8586045006575564
      ],
      "excerpt": "Scikit-Learn. Fabian Pedregosa, Ga\u00ebl Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Cournapeau, Matthieu Brucher, Matthieu Perrot, \u00c9douard Duchesnay. Scikit-learn: Machine Learning in Python, Journal of Machine Learning Research, 12, 2825\u20132830 (2011) <a class=\"anchor\" id=\"Ref_13\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9303845833879738
      ],
      "excerpt": "How to Control the Speed and Stability of Training Neural Networks with Gradient Descent Batch Size. [https://machinelearningmastery.com/how-to-control-the-speed-and-stability-of-training-neural-networks-with-gradient-descent-batch-size/]<a class=\"anchor\" id=\"Ref_19\"></a>  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8648577354327289
      ],
      "excerpt": "Feel free to contact me to discuss any issues, questions, or comments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is a robot I designed in Fusion 360 and 3D printed with my FlashForge Creator Pro in PLA, Main Hardware: 1 x Raspberry Pi 3b, 3 x Arduinos with I2C, 5 x ultrasonic sensors, 4 x 60Kg Servos, 4 x 12V 200rpm DC motors, 1 x stepper motor for loading ammo into custom built coil gun. The coil gun uses 2 x 450V 1000uF Capacitors in parallel with a boost converter, yielding 380V maximum charge discharge from a 12V input, firing with a 1.2kV maximum peak non-repetitive surge current 1.1kA rated Thyristor SCR, Main Software: Uses TensorFlow and Python for Object Detection with some C++ for motor controls. The model used is a retrained Single Shot Detection MobileNet V2 algorithm trained on a toy reindeer. Signal processing allows proportional controller feedback to adjust movement of the robot for moving, aiming, and shooting. An application for IOS was written in Swift to control the robot as well, using Mosquito MQTT Broker for communication. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/stevensmiley1989/MrRobot/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 02:39:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/stevensmiley1989/MrRobot/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "stevensmiley1989/MrRobot",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/stevensmiley1989/MrRobot/main/Jupyter%20Notebooks/Grab_from_Gdrive.ipynb",
      "https://raw.githubusercontent.com/stevensmiley1989/MrRobot/main/Jupyter%20Notebooks/augmented_ssd_MobileNet_v2_FPNLite_320x320_5_8_2021_reindeer.ipynb",
      "https://raw.githubusercontent.com/stevensmiley1989/MrRobot/main/Jupyter%20Notebooks/Evaluate_Models.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/stevensmiley1989/MrRobot/main/iOS_Application/MyRobot/Pods/Target%20Support%20Files/Pods-MyRobot/Pods-MyRobot-frameworks.sh",
      "https://raw.githubusercontent.com/stevensmiley1989/MrRobot/main/Raspberry%20Pi%20Files/initpin.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8811701763036702
      ],
      "excerpt": "SSD MobilNet V2 FPNLite 320x320, [http://download.tensorflow.org/models/object_detection/tf2/20200711/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8.tar.gz] <a class=\"anchor\" id=\"Ref_2\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278141770282239
      ],
      "excerpt": "LabelImg. [https://github.com/tzutalin/labelImg] <a class=\"anchor\" id=\"Ref_5\"></a>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920512745980733
      ],
      "excerpt": "MrRobot GitHub Repo. [https://github.com/stevensmiley1989/MrRobot]<a class=\"anchor\" id=\"Ref_16\"></a>  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "0.2 Training Flowchart \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8621882743635256
      ],
      "excerpt": "4. Autodesk Fusion360 File \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8835710847759358
      ],
      "excerpt": "| PI-app_r0.py | Main script controlling the robot.  This is the file initiated to start the robot.  | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/stevensmiley1989/MrRobot/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "C++",
      "Swift",
      "Shell",
      "Ruby"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'This project is dual licensed under the Eclipse Public License 1.0 and the\\nEclipse Distribution License 1.0 as described in the epl-v10 and edl-v10 files.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MrRobot",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MrRobot",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "stevensmiley1989",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/stevensmiley1989/MrRobot/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 02:39:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "robotics",
      "machine-learning",
      "aritificial-intelligence",
      "coilgun"
    ],
    "technique": "GitHub API"
  }
}