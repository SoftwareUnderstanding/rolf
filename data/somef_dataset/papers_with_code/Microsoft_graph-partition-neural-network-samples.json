{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.06272",
      "https://arxiv.org/abs/1511.05493",
      "https://arxiv.org/abs/1803.06272"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite our paper if you use this code in your research work.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{liao2018graph,\n  title={Graph Partition Neural Networks for Semi-Supervised Classification},\n  author={Renjie Liao and Marc Brockschmidt and Daniel Tarlow and Alexander~L. Gaunt and Raquel Urtasun and Richard Zemel},\n  journal={arXiv preprint arXiv:1803.06272},\n  year={2018},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9748072240336229
      ],
      "excerpt": "Please submit a Github issue or contact rjliao@cs.toronto.edu if you have any questions or find any bugs. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/microsoft/graph-partition-neural-network-samples",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-15T09:43:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-01T14:37:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9913704689749928,
        0.868309584913705
      ],
      "excerpt": "This is the Tensorflow implementation of Graph Partition Neural Networks as described in the following paper: \nWe list some notable hyper-parameters here and you can refer to configuration files under the config folder for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8592249398219977
      ],
      "excerpt": "hidden_dim: dimension of state vector \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8200540238053492,
        0.81342710645831,
        0.8403744530094537,
        0.8403744530094537
      ],
      "excerpt": "update_MLP_dim: hidden dimension of update MLP \nupdate_MLP_act: activation function of update MLP, one of {\"relu\", \"tanh\", \"sigmoid\", null} \noutput_MLP_dim: similar to update_MLP_dim \noutput_MLP_act: similar to update_MLP_act \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9086874561760634,
        0.9721068510882059
      ],
      "excerpt": "* We also provide an easy-to-use implementation of LSTM in nn_cells.py which could potentially be used as update function. We will support this feature soon. \n* By setting num_cluster = 1 and update_type = \"GRU\", the resultant model is roughly the same as Gated Graph Neural Network except the input and output models are slightly different from the ones described in the original paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073737513954784,
        0.9783267603835809
      ],
      "excerpt": "This project has adopted the Microsoft Open Source Code of Conduct. \nFor more information see the Code of Conduct FAQ or \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Sample Code for Graph Partition Neural Networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Microsoft/graph-partition-neural-network-samples/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 41,
      "date": "Wed, 29 Dec 2021 00:14:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/microsoft/graph-partition-neural-network-samples/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "microsoft/graph-partition-neural-network-samples",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Microsoft/graph-partition-neural-network-samples/master/setup_diel.sh",
      "https://raw.githubusercontent.com/Microsoft/graph-partition-neural-network-samples/master/setup_nell.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To set up experiments of NELL/DIEL, please run the following scripts:\n```\n./setup_nell.sh\n./setup_diel.sh\n``` \nNote that since these two datasets are large, it may take a while to finish.\nYou may also need to switch to CPU mode before running demos by:\n```\nexport CUDA_VISIBLE_DEVICES=\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8181724726335056,
        0.8029749773277989
      ],
      "excerpt": "msg_type: message function type, one of {\"msg_embedding\", \"msg_mlp\"} \nupdate_type: update function type, one of {\"GRU\", \"MLP\"} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8572610794716284
      ],
      "excerpt": "* An example of specifying a 2 hidden layer output MLP with \"tanh\" as activation function: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/microsoft/graph-partition-neural-network-samples/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'    MIT License\\n\\n    Copyright (c) Microsoft Corporation. All rights reserved.\\n\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\n    of this software and associated documentation files (the \"Software\"), to deal\\n    in the Software without restriction, including without limitation the rights\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n    copies of the Software, and to permit persons to whom the Software is\\n    furnished to do so, subject to the following conditions:\\n\\n    The above copyright notice and this permission notice shall be included in all\\n    copies or substantial portions of the Software.\\n\\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n    SOFTWARE\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "GPNNs",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "graph-partition-neural-network-samples",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "microsoft",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/microsoft/graph-partition-neural-network-samples/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "tensorflow(>= 1.0), numpy, scipy, sklearn\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* To run experiments ```X``` where ```X``` is one of {citeseer, cora, pubmed, nell, diel}:\n\n   ```python run_exp.py -c config/gpnn_X.json```\n\n* For experiments on NELL, you can specify the label rate by changing ```label_rate```\tof ```config/gpnn_nell.json```\n* For experiments on DIEL, you can specify the split id by changing ```split_id```\tof ```config/gpnn_diel.json```\n\t\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 83,
      "date": "Wed, 29 Dec 2021 00:14:34 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* To run experiments ```X``` where ```X``` is one of {citeseer, cora, pubmed, nell, diel}:\n\n   ```python run_exp.py -c config/gpnn_X.json```\n\n* For experiments on NELL, you can specify the label rate by changing ```label_rate```\tof ```config/gpnn_nell.json```\n* For experiments on DIEL, you can specify the split id by changing ```split_id```\tof ```config/gpnn_diel.json```\n\t\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To use our code for your customized problem, you need to prepare the following (pickle) files:\n* ```your_dataset.graph```: graph, python dictionary, key = node id, value = list of neighbor ids, id ranges from 0 to N-1.\n* ```your_dataset.feature```: feature, N by D numpy array (D is the number of features per node).\n* ```your_dataset.label```: label, N numpy array (integer label within range(C), C is the number of classes).\n* ```your_dataset.split```: mask of split, N numpy array (0, 1, 2 stand for train/validation/test respectively).\n* Append the customized dataset information in ```config/dataset_info.json``` by setting ```label_size, feat_dim, num_nodes, num_valid, data_folder```.  \n\nPlease refer to ```gpnn/reader/gpnn_reader_custom.py``` for more information.\n\n\n",
      "technique": "Header extraction"
    }
  ]
}