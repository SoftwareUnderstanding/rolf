{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1603.01360",
      "https://arxiv.org/abs/1802.05365",
      "https://arxiv.org/abs/1603.01360 (2016).\n* Peters, Matthew E., et al. \"[Deep contextualized word representations.](https://arxiv.org/abs/1802.05365)\" arXiv preprint https://arxiv.org/abs/1802.05365 (2018).",
      "https://arxiv.org/abs/1802.05365 (2018)."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This library is based on the following papers:\n\n* Lample, Guillaume, et al. \"[Neural architectures for named entity recognition.](https://arxiv.org/abs/1603.01360)\" arXiv preprint arXiv:1603.01360 (2016).\n* Peters, Matthew E., et al. \"[Deep contextualized word representations.](https://arxiv.org/abs/1802.05365)\" arXiv preprint arXiv:1802.05365 (2018).\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Hironsan/anago",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-06-26T21:28:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T13:54:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8336842938946433,
        0.9246661847030783
      ],
      "excerpt": "anaGo is a Python library for sequence labeling(NER, PoS Tagging,...), implemented in Keras. \nanaGo can solve sequence labeling tasks such as named entity recognition (NER), part-of-speech tagging (POS tagging), semantic role labeling (SRL) and so on. Unlike traditional sequence labeling solver, anaGo don't need to define any language dependent features. Thus, we can easily use anaGo for any languages. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Bidirectional LSTM-CRF and ELMo for Named-Entity Recognition, Part-of-Speech Tagging and so on.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "(coming soon)\n\n<!--\nanaGo supports pre-trained word embeddings like [GloVe vectors](https://nlp.stanford.edu/projects/glove/).\n-->\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Hironsan/anago/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 373,
      "date": "Tue, 28 Dec 2021 00:51:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Hironsan/anago/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Hironsan/anago",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Hironsan/anago/tree/master/docs",
      "https://github.com/Hironsan/anago/tree/master/docs/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To install anaGo, simply use `pip`:\n\n```bash\n$ pip install anago\n```\n\nor install from the repository:\n\n```bash\n$ git clone https://github.com/Hironsan/anago.git\n$ cd anago\n$ python setup.py install\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.810094876824159
      ],
      "excerpt": "anaGo Demo \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Hironsan/anago/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Hiroki Nakayama\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "anaGo",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "anago",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Hironsan",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Hironsan/anago/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "Hironsan",
        "body": "## Improvements\r\n\r\n* some bug fixes\r\n* refactoring",
        "dateCreated": "2018-06-03T13:17:20Z",
        "datePublished": "2018-06-03T13:51:56Z",
        "html_url": "https://github.com/Hironsan/anago/releases/tag/1.0.0",
        "name": "anago 1.0.0",
        "tag_name": "1.0.0",
        "tarball_url": "https://api.github.com/repos/Hironsan/anago/tarball/1.0.0",
        "url": "https://api.github.com/repos/Hironsan/anago/releases/11297829",
        "zipball_url": "https://api.github.com/repos/Hironsan/anago/zipball/1.0.0"
      },
      {
        "authorType": "User",
        "author_name": "Hironsan",
        "body": "## Improvements\r\n* Bug fix(https://github.com/Hironsan/anago/pull/26)",
        "dateCreated": "2018-02-02T00:51:53Z",
        "datePublished": "2018-02-03T09:33:20Z",
        "html_url": "https://github.com/Hironsan/anago/releases/tag/0.0.5",
        "name": "anaGo 0.0.5",
        "tag_name": "0.0.5",
        "tarball_url": "https://api.github.com/repos/Hironsan/anago/tarball/0.0.5",
        "url": "https://api.github.com/repos/Hironsan/anago/releases/9519028",
        "zipball_url": "https://api.github.com/repos/Hironsan/anago/zipball/0.0.5"
      },
      {
        "authorType": "User",
        "author_name": "Hironsan",
        "body": "# Areas of improvement\r\n* Bug fix(Installation)",
        "dateCreated": "2017-12-04T21:29:47Z",
        "datePublished": "2017-12-04T23:01:57Z",
        "html_url": "https://github.com/Hironsan/anago/releases/tag/0.0.4",
        "name": "anaGo 0.0.4",
        "tag_name": "0.0.4",
        "tarball_url": "https://api.github.com/repos/Hironsan/anago/tarball/0.0.4",
        "url": "https://api.github.com/repos/Hironsan/anago/releases/8768802",
        "zipball_url": "https://api.github.com/repos/Hironsan/anago/zipball/0.0.4"
      },
      {
        "authorType": "User",
        "author_name": "Hironsan",
        "body": "# Improvements\r\n* Add wrapper class for easy to use\r\n* Add download function\r\n* Bug fix",
        "dateCreated": "2017-11-24T08:56:46Z",
        "datePublished": "2017-11-24T09:09:24Z",
        "html_url": "https://github.com/Hironsan/anago/releases/tag/0.0.3",
        "name": "anaGo 0.0.3",
        "tag_name": "0.0.3",
        "tarball_url": "https://api.github.com/repos/Hironsan/anago/tarball/0.0.3",
        "url": "https://api.github.com/repos/Hironsan/anago/releases/8643628",
        "zipball_url": "https://api.github.com/repos/Hironsan/anago/zipball/0.0.3"
      },
      {
        "authorType": "User",
        "author_name": "Hironsan",
        "body": "anaGo is a state-of-the-art library for sequence labeling using Keras.\r\n\r\nanaGo can performs named-entity recognition (NER), part-of-speech tagging (POS tagging), semantic role labeling (SRL) and so on.",
        "dateCreated": "2017-08-31T06:30:33Z",
        "datePublished": "2017-08-31T06:50:45Z",
        "html_url": "https://github.com/Hironsan/anago/releases/tag/0.0.1",
        "name": "anaGo 0.0.1",
        "tag_name": "0.0.1",
        "tarball_url": "https://api.github.com/repos/Hironsan/anago/tarball/0.0.1",
        "url": "https://api.github.com/repos/Hironsan/anago/releases/7585050",
        "zipball_url": "https://api.github.com/repos/Hironsan/anago/zipball/0.0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1425,
      "date": "Tue, 28 Dec 2021 00:51:29 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "anaGo supports following features:\n\n* Model Training\n* Model Evaluation\n* Tagging Text\n* Custom Model Support\n* Downloading pre-trained model\n* GPU Support\n* Character feature\n* CRF Support\n* Custom Callback Support\n* :collision:(new) ELMo\n\nanaGo officially supports Python 3.4\u20133.6.\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "natural-language-processing",
      "machine-learning",
      "deep-learning",
      "named-entity-recognition",
      "keras",
      "sequence-labeling"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In anaGo, the simplest type of model is the `Sequence` model. Sequence model includes essential methods like `fit`, `score`, `analyze` and `save`/`load`. For more complex features, you should use the anaGo modules such as `models`, `preprocessing` and so on.\n\nHere is the data loader:\n\n```python\n>>> from anago.utils import load_data_and_labels\n\n>>> x_train, y_train = load_data_and_labels('train.txt')\n>>> x_test, y_test = load_data_and_labels('test.txt')\n>>> x_train[0]\n['EU', 'rejects', 'German', 'call', 'to', 'boycott', 'British', 'lamb', '.']\n>>> y_train[0]\n['B-ORG', 'O', 'B-MISC', 'O', 'O', 'O', 'B-MISC', 'O', 'O']\n```\n\nYou can now iterate on your training data in batches:\n\n```python\n>>> import anago\n\n>>> model = anago.Sequence()\n>>> model.fit(x_train, y_train, epochs=15)\nEpoch 1/15\n541/541 [==============================] - 166s 307ms/step - loss: 12.9774\n...\n```\n\nEvaluate your performance in one line:\n\n```python\n>>> model.score(x_test, y_test)\n0.802  #: f1-micro score\n#: For more performance, you have to use pre-trained word embeddings.\n#: For now, anaGo's best score is 90.94 f1-micro score.\n```\n\nOr tagging text on new data:\n\n```python\n>>> text = 'President Obama is speaking at the White House.'\n>>> model.analyze(text)\n{\n    \"words\": [\n        \"President\",\n        \"Obama\",\n        \"is\",\n        \"speaking\",\n        \"at\",\n        \"the\",\n        \"White\",\n        \"House.\"\n    ],\n    \"entities\": [\n        {\n            \"beginOffset\": 1,\n            \"endOffset\": 2,\n            \"score\": 1,\n            \"text\": \"Obama\",\n            \"type\": \"PER\"\n        },\n        {\n            \"beginOffset\": 6,\n            \"endOffset\": 8,\n            \"score\": 1,\n            \"text\": \"White House.\",\n            \"type\": \"LOC\"\n        }\n    ]\n}\n```\n\nTo download a pre-trained model, call `download` function:\n\n```python\n>>> from anago.utils import download\n\n>>> url = 'https://s3-ap-northeast-1.amazonaws.com/dev.tech-sketch.jp/chakki/public/conll2003_en.zip'\n>>> weights, params, preprocessor = download(url)\n>>> model = anago.Sequence.load(weights, params, preprocessor)\n>>> model.score(x_test, y_test)\n0.909446369856927\n```\n\nIf you want to use ELMo for better performance(f1: 92.22), you can use [ELModel](https://github.com/Hironsan/anago/blob/master/anago/models.py#L125) and [ELMoTransformer](https://github.com/Hironsan/anago/blob/master/anago/preprocessing.py#L197):\n\n```python\n#: Transforming datasets.\np = ELMoTransformer()\np.fit(x_train, y_train)\n\n#: Building a model.\nmodel = ELModel(...)\nmodel, loss = model.build()\nmodel.compile(loss=loss, optimizer='adam')\n\n#: Training the model.\ntrainer = Trainer(model, preprocessor=p)\ntrainer.train(x_train, y_train, x_test, y_test)\n```\n\nFor futher details, see [anago/examples/elmo_example.py](https://github.com/Hironsan/anago/blob/master/examples/elmo_example.py).\n\n",
      "technique": "Header extraction"
    }
  ]
}