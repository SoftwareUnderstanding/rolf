{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2010.03409"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9726179450194514
      ],
      "excerpt": "Source repository: https://github.com/deepmind/deepmind-research/tree/master/meshgraphnets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977994744046882
      ],
      "excerpt": "Paper: arxiv.org/abs/2010.03409 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wwMark/meshgraphnets",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-14T14:29:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T15:41:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9930999129931565
      ],
      "excerpt": "The code in this repository is a PyTorch version of Learning Mesh-Based Simulation with Graph Networks. Currently, the code of cloth simulation can be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9301639736531341,
        0.9852079560132364
      ],
      "excerpt": "in requirements.txt, please install all dependencies before runnning. The result of this version of MGN network is not 100% conform to the original code, please tune it according to your need. Other GNN networks code will be added to this repository in the future to explore the GNN performance for physical simulation. \nThe novel ripple model, inspired by water ripple, is based on deepmind's meshgraphnets and utilizes ripples to enhance the information propagation. Further new features such as different aggregation methods, attention and stochastic message passing are also already added. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8030326456557391
      ],
      "excerpt": "paper. The following datasets are available: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Rewrite deepmind/meshgraphnets into pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wwMark/meshgraphnets/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 19:56:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/wwMark/meshgraphnets/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "wwMark/meshgraphnets",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/noripple_sum_attention.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/job.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/noripple_min_noattention.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/ripple_sum_noattention.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/ripple_sum_gradient_noattention.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/noripple_sum_noattention.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/download_dataset.sh",
      "https://raw.githubusercontent.com/wwMark/meshgraphnets/main/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install dependencies:\n\n    pip install -r requirements.txt\n\nDownload a dataset:\n\n    mkdir -p ${DATA}\n    bash meshgraphnets/download_dataset.sh flag_simple ${DATA}\n\nConfigure running goals by setting the variables and flags variables at the beginning of run_model.py, which includes\nrunning mode (training/evaluation), model, epochs, saving path and etc.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9820335500026114
      ],
      "excerpt": "run on both windows and linux. Development environment is PyCharm 2021.1.3. Package dependencies are defined \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8221616606003852
      ],
      "excerpt": "fields and their shape, and tfrecord datasets for train, valid and test splits. Dataset names match the naming in the \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/wwMark/meshgraphnets/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch version of Learning Mesh-Based Simulation with Graph Networks (ICLR 2021)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "meshgraphnets",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "wwMark",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/wwMark/meshgraphnets/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Run the code after configurating the code:\n\n    python run_model.py\n\nPlot a trajectory (rollout.pkl path can be defined inside plot_cloth.py):\n\n    python plot_cloth.py\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Sun, 26 Dec 2021 19:56:06 GMT"
    },
    "technique": "GitHub API"
  }
}