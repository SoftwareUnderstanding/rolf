{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.08435v1",
      "https://arxiv.org/abs/1802.08435v1",
      "https://arxiv.org/abs/1703.10135",
      "https://arxiv.org/abs/1712.05884"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [Efficient Neural Audio Synthesis](https://arxiv.org/abs/1802.08435v1)\n* [Tacotron: Towards End-to-End Speech Synthesis](https://arxiv.org/abs/1703.10135)\n* [Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions](https://arxiv.org/abs/1712.05884)\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fatchord/WaveRNN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-03-16T14:03:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-26T18:40:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8066076759959255
      ],
      "excerpt": "Pytorch implementation of Deepmind's WaveRNN model from Efficient Neural Audio Synthesis \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8716935914993076
      ],
      "excerpt": "And finally, you can always use --help on any of those scripts to see what options are available :) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8316996138859454
      ],
      "excerpt": "Currently there are two pretrained models available in the /pretrained/ folder': \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "WaveRNN Vocoder + TTS",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fatchord/WaveRNN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 580,
      "date": "Sun, 26 Dec 2021 21:26:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fatchord/WaveRNN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fatchord/WaveRNN",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fatchord/WaveRNN/master/notebooks/NB4b%20-%20Alternative%20Model%20%28Training%29.ipynb",
      "https://raw.githubusercontent.com/fatchord/WaveRNN/master/notebooks/NB4a%20-%20Alternative%20Model%20%28Preprocessing%29.ipynb",
      "https://raw.githubusercontent.com/fatchord/WaveRNN/master/notebooks/NB2%20-%20Fit%20a%20Short%20Sample.ipynb",
      "https://raw.githubusercontent.com/fatchord/WaveRNN/master/notebooks/NB3%20-%20Fit%20a%2030min%20Sample.ipynb",
      "https://raw.githubusercontent.com/fatchord/WaveRNN/master/notebooks/NB1%20-%20Fit%20a%20Sine%20Wave.ipynb",
      "https://raw.githubusercontent.com/fatchord/WaveRNN/master/notebooks/Pruning%20-%20Scratchpad.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Ensure you have:\n\n* Python >= 3.6\n* [Pytorch 1 with CUDA](https://pytorch.org/)\n\nThen install the rest with pip:\n\n> pip install -r requirements.txt\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8208992218424958
      ],
      "excerpt": "2 - You can leave that finish training or at any point you can use: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216992784356708
      ],
      "excerpt": "4 - Generate Sentences with both models using: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8309391638231081,
        0.9160038251717189,
        0.9246227682586091,
        0.8575097158511376
      ],
      "excerpt": "Download the LJSpeech Dataset. \nEdit hparams.py, point wav_path to your dataset and run: \npython preprocess.py \nor use preprocess.py --path to point directly to the dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278121020599903,
        0.9246227682586091
      ],
      "excerpt": "1 - Train Tacotron with: \npython train_tacotron.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python train_tacotron.py --force_gta \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278121020599903,
        0.9246227682586091
      ],
      "excerpt": "3 - Train WaveRNN with: \npython train_wavernn.py --gta \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python gen_tacotron.py wavernn \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fatchord/WaveRNN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2017 Keith Ito\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "WaveRNN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "WaveRNN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fatchord",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fatchord/WaveRNN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1641,
      "date": "Sun, 26 Dec 2021 21:26:44 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "wavernn",
      "pytorch",
      "neural-vocoder",
      "speech-synthesis",
      "tts",
      "tacotron",
      "text-to-speech"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you want to use TTS functionality immediately you can simply use:\n\n> python quick_start.py\n\nThis will generate everything in the default sentences.txt file and output to a new 'quick_start' folder where you can playback the wav files and take a look at the attention plots\n\nYou can also use that script to generate custom tts sentences and/or use '-u' to generate unbatched (better audio quality):\n\n> python quick_start.py -u --input_text \"What will happen if I run this command?\"\n\n\n",
      "technique": "Header extraction"
    }
  ]
}