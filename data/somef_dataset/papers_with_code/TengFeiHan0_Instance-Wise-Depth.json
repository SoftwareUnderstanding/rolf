{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2001.00309",
      "https://arxiv.org/abs/1912.04488"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TengFeiHan0/Instance-Wise-Depth",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-06T08:44:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-01T13:35:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9687188023169463
      ],
      "excerpt": "In this work,we are aiming at predicting instance-wise depth via self-supervised learning mechanism. The introduction of instance segmentation network is essential to dealing with dynamic objects, in turn a high precise depth map is also helpful for object detection/instance segmentation tasks.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9367164723927073
      ],
      "excerpt": "generally speaking, any instance seg networks could be inserted into our system, however, here is an open source toolbox including a series of instance segmentation algorithms. Up to now, These algorithms have achieved better performance than most SOTA methods on COCO dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9856192983657189
      ],
      "excerpt": "Initialy, I was planning to develop my own system based on the mentioned open-source framework. However, releasing their implementations may need a longer time than we expect. Therefore, I resort to CenterMask, which is also a one-stage instance sgementation network based on FCOS. The original implementation is based on maskrcnn-benchmark, but I reformulate their code, add some new features,  and will be opened at here. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TengFeiHan0/Instance-Wise-Depth/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 22:02:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TengFeiHan0/Instance-Wise-Depth/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "TengFeiHan0/Instance-Wise-Depth",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "It should be mentioned that AdelaiDet is extended from Detectron2, so please install Detectron2 following the official guide: [INSTALL.md](https://github.com/facebookresearch/detectron2/blob/master/INSTALL.md). Then build AdelaiDet with:\n```\ngit clone https://github.com/aim-uofa/adet.git\ncd adet\npython setup.py build develop\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8826220462631758
      ],
      "excerpt": "setup the corresponding datasets following \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9008116137719951
      ],
      "excerpt": "Pick a model and its config file, for example, fcos_R_50_1x.yaml. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421174927206765,
        0.9057698139330033
      ],
      "excerpt": "Run the demo with \npython demo/demo.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.881670876222929
      ],
      "excerpt": "    --input input1.jpg input2.jpg \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9366641523006497
      ],
      "excerpt": "To train a model with \"train_net.py\", first \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8117007451991057,
        0.810477497050042
      ],
      "excerpt": "then run: \npython tools/train_net.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TengFeiHan0/Instance-Wise-Depth/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/TengFeiHan0/Instance-Wise-Depth/pytorch/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright \\xc2\\xa9 Niantic, Inc. 2018. Patent Pending.\\n\\nAll rights reserved.\\n\\n\\n\\n================================================================================\\n\\n\\n\\nThis Software is licensed under the terms of the following Monodepth2 license\\nwhich allows for non-commercial use only. For any other use of the software not\\ncovered by the terms of this license, please contact partnerships@nianticlabs.com\\n\\n\\n\\n================================================================================\\n\\n\\n\\nMonodepth v2 License\\n\\n\\n    This Agreement is made by and between the Licensor and the Licensee as\\ndefined and identified below.\\n\\n\\n1.  Definitions.\\n\\n    In this Agreement (\\xe2\\x80\\x9cthe Agreement\\xe2\\x80\\x9d) the following words shall have the\\nfollowing meanings:\\n\\n    \"Authors\" shall mean C. Godard, O. Mac Aodha, M. Firman, G. Brostow\\n    \"Licensee\" Shall mean the person or organization agreeing to use the\\nSoftware in accordance with these terms and conditions.\\n    \"Licensor\" shall mean Niantic Inc., a company organized and existing under\\nthe laws of Delaware, whose principal place of business is at 1 Ferry Building,\\nSuite 200, San Francisco, 94111.\\n    \"Software\" shall mean the MonoDepth v2 Software uploaded by Licensor to the\\nGitHub repository at [URL] on [DATE] in source code or object code form and any\\naccompanying documentation as well as any modifications or additions uploaded\\nto the same GitHub repository by Licensor.\\n\\n\\n2.  License.\\n\\n    2.1 The Licensor has all necessary rights to grant a license under: (i)\\ncopyright and rights in the nature of copyright subsisting in the Software; and\\n(ii) certain patent rights resulting from a patent application filed by the\\nLicensor in the United States in connection with the Software. The Licensor\\ngrants the Licensee for the duration of this Agreement, a free of charge,\\nnon-sublicenseable, non-exclusive, non-transferable copyright and patent\\nlicense (in consequence of said patent application) to use the Software for\\nnon-commercial purpose only, including teaching and research at educational\\ninstitutions and research at not-for-profit research institutions in accordance\\nwith the provisions of this Agreement. Non-commercial use expressly excludes\\nany profit-making or commercial activities, including without limitation sale,\\nlicense, manufacture or development of commercial products, use in\\ncommercially-sponsored research, use at a laboratory or other facility owned or\\ncontrolled (whether in whole or in part) by a commercial entity, provision of\\nconsulting service, use for or on behalf of any commercial entity, and use in\\nresearch where a commercial party obtains rights to research results or any\\nother benefit. Any use of the Software for any purpose other than\\nnon-commercial research shall automatically terminate this License.\\n\\n\\n      2.2 The Licensee is permitted to make modifications to the Software\\nprovided that any distribution of such modifications is in accordance with\\nClause 3.\\n\\n      2.3 Except as expressly permitted by this Agreement and save to the\\nextent and in the circumstances expressly required to be permitted by law, the\\nLicensee is not permitted to rent, lease, sell, offer to sell, or loan the\\nSoftware or its associated documentation.\\n\\n\\n3.  Redistribution and modifications\\n\\n    3.1 The Licensee may reproduce and distribute copies of the Software, with\\nor without modifications, in source format only and only to this same GitHub\\nrepository , and provided that any and every distribution is accompanied by an\\nunmodified copy of this License and that the following copyright notice is\\nalways displayed in an obvious manner: Copyright \\xc2\\xa9 Niantic, Inc. 2018. All\\nrights reserved.\\n\\n\\n    3.2 In the case where the Software has been modified, any distribution must\\ninclude prominent notices indicating which files have been changed.\\n\\n    3.3 The Licensee shall cause any work that it distributes or publishes,\\nthat in whole or in part contains or is derived from the Software or any part\\nthereof (\\xe2\\x80\\x9cWork based on the Software\\xe2\\x80\\x9d), to be licensed as a whole at no charge\\nto all third parties entitled to a license to the Software under the terms of\\nthis License and on the same terms provided in this License.\\n\\n\\n4.  Duration.\\n\\n    This Agreement is effective until the Licensee terminates it by destroying\\nthe Software, any Work based on the Software, and its documentation together\\nwith all copies. It will also terminate automatically if the Licensee fails to\\nabide by its terms. Upon automatic termination the Licensee agrees to destroy\\nall copies of the Software, Work based on the Software, and its documentation.\\n\\n\\n5.  Disclaimer of Warranties.\\n\\n    The Software is provided as is. To the maximum extent permitted by law,\\nLicensor provides no warranties or conditions of any kind, either express or\\nimplied, including without limitation, any warranties or condition of title,\\nnon-infringement or fitness for a particular purpose.\\n\\n\\n6.  LIMITATION OF LIABILITY.\\n\\n    IN NO EVENT SHALL THE LICENSOR AND/OR AUTHORS BE LIABLE FOR ANY DIRECT,\\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING\\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n\\n7.  Indemnity.\\n\\n    The Licensee shall indemnify the Licensor and/or Authors against all third\\nparty claims that may be asserted against or suffered by the Licensor and/or\\nAuthors and which relate to use of the Software by the Licensee.\\n\\n\\n8.  Intellectual Property.\\n\\n    8.1 As between the Licensee and Licensor, copyright and all other\\nintellectual property rights subsisting in or in connection with the Software\\nand supporting information shall remain at all times the property of the\\nLicensor. The Licensee shall acquire no rights in any such material except as\\nexpressly provided in this Agreement.\\n\\n    8.2 No permission is granted to use the trademarks or product names of the\\nLicensor except as required for reasonable and customary use in describing the\\norigin of the Software and for the purposes of abiding by the terms of Clause\\n3.1.\\n\\n    8.3 The Licensee shall promptly notify the Licensor of any improvement or\\nnew use of the Software (\\xe2\\x80\\x9cImprovements\\xe2\\x80\\x9d) in sufficient detail for Licensor to\\nevaluate the Improvements. The Licensee hereby grants the Licensor and its\\naffiliates a non-exclusive, fully paid-up, royalty-free, irrevocable and\\nperpetual license to all Improvements for non-commercial academic research and\\nteaching purposes upon creation of such improvements.\\n\\n    8.4 The Licensee grants an exclusive first option to the Licensor to be\\nexercised by the Licensor within three (3) years of the date of notification of\\nan Improvement under Clause 8.3 to use any the Improvement for commercial\\npurposes on terms to be negotiated and agreed by Licensee and Licensor in good\\nfaith within a period of six (6) months from the date of exercise of the said\\noption (including without limitation any royalty share in net income from such\\ncommercialization payable to the Licensee, as the case may be).\\n\\n\\n9.  Acknowledgements.\\n\\n    The Licensee shall acknowledge the Authors and use of the Software in the\\npublication of any work that uses, or results that are achieved through, the\\nuse of the Software. The following citation shall be included in the\\nacknowledgement: \\xe2\\x80\\x9cDigging Into Self-Supervised Monocular Depth Estimation,\\nby C. Godard, O. Mac Aodha, M. Firman, G. Brostow, arXiv:1806.01260\\xe2\\x80\\x9d.\\n\\n\\n10. Governing Law.\\n\\n    This Agreement shall be governed by, construed and interpreted in\\naccordance with English law and the parties submit to the exclusive\\njurisdiction of the English courts.\\n\\n\\n11. Termination.\\n\\n    Upon termination of this Agreement, the licenses granted hereunder will\\nterminate and Sections 5, 6, 7, 8, 9, 10 and 11 shall survive any termination\\nof this Agreement.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Instance-wise Depth Estimation (under construction)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Instance-Wise-Depth",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "TengFeiHan0",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TengFeiHan0/Instance-Wise-Depth/blob/pytorch/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Wed, 29 Dec 2021 22:02:49 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "depth-estimation",
      "instance-segmentation"
    ],
    "technique": "GitHub API"
  }
}