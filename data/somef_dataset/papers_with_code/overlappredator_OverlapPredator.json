{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In this project we use (parts of) the official implementations of the followin works: \n\n- [FCGF](https://github.com/chrischoy/FCGF) (KITTI preprocessing)\n- [D3Feat](https://github.com/XuyangBai/D3Feat.pytorch) (KPConv backbone)\n- [3DSmoothNet](https://github.com/zgojcic/3DSmoothNet) (3DMatch preparation)\n- [MultiviewReg](https://github.com/zgojcic/3D_multiview_reg) (3DMatch benchmark)\n- [SuperGlue](https://github.com/magicleap/SuperGluePretrainedNetwork) (Transformer part)\n- [DGCNN](https://github.com/WangYueFt/dgcnn) (self-gnn)\n- [RPMNet](https://github.com/yewzijian/RPMNet) (ModelNet preprocessing and evaluation)\n\n We thank the respective authors for open sourcing their methods. We would also like to thank reviewers, especially reviewer 2 for his/her valuable inputs. \n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2011.13005",
      "https://arxiv.org/abs/2011.13005"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this code useful for your work or use it in your project, please consider citing:\n\n```shell\n@InProceedings{Huang_2021_CVPR,\n    author    = {Huang, Shengyu and Gojcic, Zan and Usvyatsov, Mikhail and Wieser, Andreas and Schindler, Konrad},\n    title     = {Predator: Registration of 3D Point Clouds With Low Overlap},\n    booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\n    month     = {June},\n    year      = {2021},\n    pages     = {4267-4276}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Huang_2021_CVPR,\n    author    = {Huang, Shengyu and Gojcic, Zan and Usvyatsov, Mikhail and Wieser, Andreas and Schindler, Konrad},\n    title     = {Predator: Registration of 3D Point Clouds With Low Overlap},\n    booktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\n    month     = {June},\n    year      = {2021},\n    pages     = {4267-4276}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9677640385174676
      ],
      "excerpt": "*Shengyu Huang, *Zan Gojcic, Mikhail Usvyatsov, Andreas Wieser, Konrad Schindler\\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9889908230528247
      ],
      "excerpt": "2020-11-30: Code and paper release \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/overlappredator/OverlapPredator",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any questions, please let us know: \n- Shengyu Huang {shengyu.huang@geod.baug.ethz.ch}\n- Zan Gojcic {zan.gojcic@geod.baug.ethz.ch}\n\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-24T15:34:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T09:02:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9690136089668382
      ],
      "excerpt": "This repository represents the official implementation of the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9409779624157292,
        0.9889483352876588,
        0.9266962303769793,
        0.9393357966978506,
        0.9675032823802986
      ],
      "excerpt": "For implementation using MinkowskiEngine backbone, please check this \nFor more information, please see the project website \n2021-08-09: We've updated arxiv version of our paper with improved performance! \n2021-06-02: Fix feature gathering bug in k-nn graph, please see improved performance in this issue. Stay tunned for updates on other experiments! \n2021-05-31: Check our video and poster on project page!  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8074857439279961
      ],
      "excerpt": "- raw dense 3DMatch datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.913185500725357
      ],
      "excerpt": "- pretrained models on 3DMatch, KITTI and Modelnet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8800266497589638
      ],
      "excerpt": "For 3DMatch, to reproduce Table 2 in our main paper, we first extract features and overlap/matachability scores by running:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9265500914031229
      ],
      "excerpt": "the features together with scores will be saved to snapshot/indoor/3DMatch. The estimation of the transformation parameters using RANSAC can then be carried out using: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "for N_POINTS in 250 500 1000 2500 5000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9054670780842422
      ],
      "excerpt": "The rotation and translation errors could be better/worse than the reported ones due to randomness in RANSAC. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[CVPR 2021, Oral] PREDATOR: Registration of 3D Point Clouds with Low Overlap. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/overlappredator/OverlapPredator/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 40,
      "date": "Mon, 27 Dec 2021 06:07:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/overlappredator/OverlapPredator/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "overlappredator/OverlapPredator",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/overlappredator/OverlapPredator/main/scripts/download_data_weight.sh",
      "https://raw.githubusercontent.com/overlappredator/OverlapPredator/main/cpp_wrappers/compile_wrappers.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9453486311473912
      ],
      "excerpt": "- Python 3.8.5, PyTorch 1.7.1, CUDA 11.2, gcc 9.3.0, GeForce RTX 3090/GeForce GTX 1080Ti \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9108067312815358
      ],
      "excerpt": "sh scripts/download_data_weight.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8249286862779538
      ],
      "excerpt": "We have a few tips for train/test on custom dataset \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8082022887640018
      ],
      "excerpt": "unzip 3dmatch.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9396515283481056
      ],
      "excerpt": "python main.py configs/train/indoor.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9402225263808011
      ],
      "excerpt": "python main.py configs/test/indoor.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9396515283481056
      ],
      "excerpt": "python main.py configs/train/modelnet.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9402225263808011
      ],
      "excerpt": "python main.py configs/test/modelnet.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9402225263808011
      ],
      "excerpt": "python main.py configs/test/kitti.yaml \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/overlappredator/OverlapPredator/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Shell",
      "Batchfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Shengyu Huang, Zan Gojcic\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# PREDATOR: Registration of 3D Point Clouds with Low Overlap (CVPR 2021, Oral)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "OverlapPredator",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "overlappredator",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/overlappredator/OverlapPredator/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To create a virtual environment and install the required dependences please run:\n```shell\ngit clone https://github.com/overlappredator/OverlapPredator.git\nvirtualenv predator; source predator/bin/activate\ncd OverlapPredator; pip install -r requirements.txt\ncd cpp_wrappers; sh compile_wrappers.sh; cd ..\n```\nin your working folder.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 243,
      "date": "Mon, 27 Dec 2021 06:07:33 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "point-cloud",
      "registration",
      "3dvision",
      "transformer",
      "attention-mechanism"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We prepared a small demo, which demonstrates the whole Predator pipeline using two random fragments from the 3DMatch dataset. To carry out the demo, please run:\n```shell\npython scripts/demo.py configs/test/indoor.yaml\n```\n\nThe demo script will visualize input point clouds, inferred overlap regions, and point cloud aligned with the estimated transformation parameters:\n\n<img src=\"assets/demo.png\" alt=\"demo\" width=\"750\"/>\n\n",
      "technique": "Header extraction"
    }
  ]
}