{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This work is mainly based on the [insightface](https://github.com/deepinsight/insightface) project and [retinaface](https://arxiv.org/pdf/1905.00641.pdf) paper; and it is heavily inspired from the re-implementation of [retinaface-tf2](https://github.com/StanislasBertrand/RetinaFace-tf2) by [Stanislas Bertrand](https://github.com/StanislasBertrand). Finally, Bertrand's [implemenation](https://github.com/StanislasBertrand/RetinaFace-tf2/blob/master/rcnn/cython/cpu_nms.pyx) uses [Fast R-CNN](https://arxiv.org/abs/1504.08083) written by [Ross Girshick](https://github.com/rbgirshick/fast-rcnn) in the background. All of those reference studies are licensed under MIT license.\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1504.08083",
      "https://arxiv.org/abs/1905.00641"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you are using RetinaFace in your research, please consider to cite its [original research paper](https://arxiv.org/abs/1905.00641). Besides, if you are using this re-implementation of retinaface, please consider to cite the following research paper as well. Here is an example of BibTeX entry:\n\n```BibTeX\n@inproceedings{serengil2021lightface,\n  title        = {HyperExtended LightFace: A Facial Attribute Analysis Framework},\n  author       = {Serengil, Sefik Ilkin and Ozpinar, Alper},\n  booktitle    = {2021 International Conference on Engineering and Emerging Technologies (ICEET)},\n  year         = {2021},\n  organization = {IEEE}\n}\n```\n\nFinally, if you use this RetinaFace re-implementation in your GitHub projects, please add retina-face dependency in the requirements.txt.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{serengil2021lightface,\n  title        = {HyperExtended LightFace: A Facial Attribute Analysis Framework},\n  author       = {Serengil, Sefik Ilkin and Ozpinar, Alper},\n  booktitle    = {2021 International Conference on Engineering and Emerging Technologies (ICEET)},\n  year         = {2021},\n  organization = {IEEE}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/serengil/retinaface",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-25T20:34:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T17:12:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9730223325030387,
        0.9891516832552437
      ],
      "excerpt": "RetinaFace is a deep learning based cutting-edge facial detector for Python coming with facial landmarks. \nRetinaFace is the face detection module of insightface project. The original implementation is mainly based on mxnet. Then, its tensorflow based re-implementation is published by Stanislas Bertrand. So, this repo is heavily inspired from the study of Stanislas Bertrand. Its source code is simplified and it is transformed to pip compatible but the main structure of the reference model and its pre-trained weights are same. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "RetinaFace: Deep Face Detection Library in TensorFlow for Python",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/serengil/retinaface/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 31,
      "date": "Mon, 27 Dec 2021 22:04:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/serengil/retinaface/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "serengil/retinaface",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The easiest way to install retinaface is to download it from [pypi](https://pypi.org/project/retina-face/).\n\n```\npip install retina-face\n```\n\n**Face Detection** - [`Demo`](https://youtu.be/Wm1DucuQk70)\n\nRetinaFace offers a face detection function. It expects an exact path of an image as input.\n\n```python\nfrom retinaface import RetinaFace\nresp = RetinaFace.detect_faces(\"img1.jpg\")\n```\n\nThen it returns the facial area coordinates and some landmarks (eyes, nose and mouth) with a confidence score.\n\n```json\n{\n    \"face_1\": {\n        \"score\": 0.9993440508842468,\n        \"facial_area\": [155, 81, 434, 443],\n        \"landmarks\": {\n          \"right_eye\": [257.82974, 209.64787],\n          \"left_eye\": [374.93427, 251.78687],\n          \"nose\": [303.4773, 299.91144],\n          \"mouth_right\": [228.37329, 338.73193],\n          \"mouth_left\": [320.21982, 374.58798]\n        }\n  }\n}\n```\n\n**Alignment** - [`Tutorial`](https://sefiks.com/2020/02/23/face-alignment-for-face-recognition-in-python-within-opencv/), [`Demo`](https://youtu.be/WA9i68g4meI)\n\nA modern face recognition [pipeline](https://sefiks.com/2020/05/01/a-gentle-introduction-to-face-recognition-in-deep-learning/) consists of 4 common stages: detect, [align](https://sefiks.com/2020/02/23/face-alignment-for-face-recognition-in-python-within-opencv/), [represent](https://sefiks.com/2020/12/14/deep-face-recognition-with-arcface-in-keras-and-python/) and [verify](https://sefiks.com/2020/05/22/fine-tuning-the-threshold-in-face-recognition/). Experiments show that alignment increases the face recognition accuracy almost 1%. Here, retinaface can find the facial landmarks including eye coordinates. In this way, it can apply alignment to detected faces with its extracting faces function.\n\n```python\nimport matplotlib.pyplot as plt\nfaces = RetinaFace.extract_faces(img_path = \"img.jpg\", align = True)\nfor face in faces:\n  plt.imshow(face)\n  plt.show()\n```\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/retinaface/master/tests/outputs/alignment-procedure.png\" width=\"80%\" height=\"80%\"></p>\n\n**Face Recognition** - [`Demo`](https://youtu.be/WnUVYQP4h44)\n\nNotice that face recognition module of insightface project is [ArcFace](https://sefiks.com/2020/12/14/deep-face-recognition-with-arcface-in-keras-and-python/), and face detection module is RetinaFace. ArcFace and RetinaFace pair is wrapped in [deepface](https://github.com/serengil/deepface) framework. Consider to use deepface if you need an end-to-end face recognition pipeline.\n\n```python\n#:!pip install deepface\nfrom deepface import DeepFace\nobj = DeepFace.verify(\"img1.jpg\", \"img2.jpg\"\n          , model_name = 'ArcFace', detector_backend = 'retinaface')\nprint(obj[\"verified\"])\n```\n\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/serengil/retinaface/master/tests/outputs/retinaface-arcface.png\" width=\"100%\" height=\"100%\"></p>\n\nNotice that ArcFace got 99.40% accuracy on LFW data set whereas human beings just got 97.53%.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/serengil/retinaface/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Sefik Ilkin Serengil\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "RetinaFace",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "retinaface",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "serengil",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/serengil/retinaface/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 169,
      "date": "Mon, 27 Dec 2021 22:04:27 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "There are many ways to support a project. Starring\u2b50\ufe0f the repo is just one\ud83d\ude4f\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "face-detection",
      "retinaface",
      "retinaface-detector",
      "python",
      "tensorflow",
      "face-recognition",
      "face-alignment",
      "insightface"
    ],
    "technique": "GitHub API"
  }
}