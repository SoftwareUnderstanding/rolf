{
  "citation": [
    {
      "confidence": [
        0.9273965883643926
      ],
      "excerpt": " accordding to <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=D1C7D701BD39935473808DA5A93426C5?doi=10.1.1.160.8494&rep=rep1&type=pdf\">Best Practices for Convolutional Neural Networks Applied to Visual Document Analysis</a>. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8942240701662576
      ],
      "excerpt": "View-> Property Pages-> Configuration Properties-> CUDA C/C++ -> Device-> Code Generation-> compute_20,sm_20    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9818894004866677,
        0.9061005469315193
      ],
      "excerpt": "Author :zhxfl   \nMail   :zhxfl@mail.ustc.edu.cn   \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhxfl/CUDA-CNN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2014-12-01T04:47:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-07T07:44:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9450137596444844
      ],
      "excerpt": "Translate the data set of mnist, including scale, rotate, distortion, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851751623167231
      ],
      "excerpt": "Support <a href=\"http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks\">local connection layers</a>.    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9451702657796771
      ],
      "excerpt": "Support branchLayer and combineLayer, which is designed accordding to <a href=\"http://arxiv.org/abs/1409.4842\">goolenet</a>, the network structure is no logger an linear structure but Directed acycline graph. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8163997363334902
      ],
      "excerpt": "CMake for Linux \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "CNN accelerated by cuda. Test on mnist and finilly get 99.76%",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhxfl/CUDA-CNN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 86,
      "date": "Fri, 24 Dec 2021 06:33:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhxfl/CUDA-CNN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhxfl/CUDA-CNN",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zhxfl/CUDA-CNN/master/total_code.sh",
      "https://raw.githubusercontent.com/zhxfl/CUDA-CNN/master/repalce.sh",
      "https://raw.githubusercontent.com/zhxfl/CUDA-CNN/master/cifar-10/get_cifar10.sh",
      "https://raw.githubusercontent.com/zhxfl/CUDA-CNN/master/mnist/get_mnist.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9624353938579665
      ],
      "excerpt": "3.  The sub-version use cudnn is <a href=\"https://github.com/TanDongXu/CUDA-MCDNN\">tdx</a>   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9898320353659441
      ],
      "excerpt": "You can compile the code on windows or linux.    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868602859641587
      ],
      "excerpt": "windows: X:/Program Files (x86) /NVIDIA Corporation/CUDA Samples/v6.5/common/inc (For include file \"helper_cuda\"); X:/Program Files/opencv/vs2010/install/include (Depend on situation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9508538425604179
      ],
      "excerpt": "windows: X:/Program Files/opencv/vs2010/install/x86/cv10/lib (Depend on situation)   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8546704872823353
      ],
      "excerpt": "GPU compute \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8308685165330847,
        0.9895320664878248,
        0.9620406150340135,
        0.9944375700570437
      ],
      "excerpt": "CMake for Linux \nsudo apt-get install cmake libopencv-dev  \nmkdir build   \ncd build   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474895321345809,
        0.9906248903846466,
        0.9023697225149864
      ],
      "excerpt": "make -j16   \ncd ../mnist/   \nsh get_mnist.sh   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864,
        0.9906248903846466,
        0.8335393852688884,
        0.999833231880651,
        0.8678682881124826,
        0.9651520430870826
      ],
      "excerpt": "sh get_cifar10.sh   \ncd ../   \n./build/CUDA-CNN 1 1    \nInstall vs2010. \nDownload and install <a href=\"http://sourceforge.net/projects/opencvlibrary/files/opencv-win/3.0.0-beta/\"> opencv-2.4</a> or other higher versions \nDownload and install <a href=\"https://developer.nvidia.com/cuda-downloads\"> cuda-5.0</a> or other higher versions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9759139964642443,
        0.926871543349544
      ],
      "excerpt": "Install opencv and cuda \nStart the nsight from cuda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553730107396388
      ],
      "excerpt": "Project->Proerties for add-> Build-> Settings->CUDA->Device linker mode: separate compilation    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9165531677706468,
        0.8364415448290946
      ],
      "excerpt": "Project->Proerties for add-> Build-> Settings->CUDA->Generate GPU code 2.0 \nProject->Proerties for add-> Build-> Settings->Tool Settings->NVCC Compiler->includes: +/usr/local/cuda/samples/common/inc/; + opencv sdk include path ;    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8420599132019576,
        0.8741808333066198
      ],
      "excerpt": "1. <a href=\"https://github.com/zhxfl/CUDA-CNN/blob/master/Config/Cifar10Config.txt\">CIFAR10</a>  \n2. <a href=\"https://github.com/zhxfl/CUDA-CNN/blob/master/Config/MnistConfig.txt\">MNIST</a>    \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8339356710757385
      ],
      "excerpt": "The log will be saved in the file \"Result/log.txt\".   \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhxfl/CUDA-CNN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Cuda",
      "C++",
      "CMake",
      "C",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "##SDK include path(-I)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CUDA-CNN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhxfl",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhxfl/CUDA-CNN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 155,
      "date": "Fri, 24 Dec 2021 06:33:37 GMT"
    },
    "technique": "GitHub API"
  }
}