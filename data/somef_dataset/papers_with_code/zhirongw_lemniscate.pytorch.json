{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{wu2018unsupervised,\n  title={Unsupervised Feature Learning via Non-Parametric Instance Discrimination},\n  author={Wu, Zhirong and Xiong, Yuanjun and Stella, X Yu and Lin, Dahua},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2018}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{wu2018unsupervised,\n  title={Unsupervised Feature Learning via Non-Parametric Instance Discrimination},\n  author={Wu, Zhirong and Xiong, Yuanjun and Stella, X Yu and Lin, Dahua},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.908615252899309
      ],
      "excerpt": "Please follow this link for a list of nearest neighbors on ImageNet. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhirongw/lemniscate.pytorch",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For any questions, please feel free to reach \n```\nZhirong Wu: xavibrowu@gmail.com\n```\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-05-04T08:59:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T07:00:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.962136641004097,
        0.9602707571889941
      ],
      "excerpt": "An updated instance discrimination model with memory bank implementation and with nce-k=65536 negatives is provided. \nThe updated model is trained with Softmax-CE loss as in CPC/MoCo instead of the original NCE loss. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9454089507885516,
        0.8219564158714664
      ],
      "excerpt": "Oldies: original releases of ResNet18 and ResNet50 trained with 4096 negatives and the NCE loss. \nEach tar ball contains the feature representation of all ImageNet training images (600 mb) and model weights (100-200mb). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116964725104105
      ],
      "excerpt": "We formulate unsupervised learning from a completely different non-parametric perspective. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8824288414554322,
        0.8197239617135492,
        0.9240500613254132,
        0.9748783601342196
      ],
      "excerpt": "Enjoys the benefit of advanced architectures and techniques from supervised learning. \nRuns seamlessly with nearest neighbor classifiers. \nPlease follow this link for a list of nearest neighbors on ImageNet. \nResults are visualized from our ResNet50 model, compared with raw image features and supervised features. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unsupervised Feature Learning via Non-parametric Instance Discrimination",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhirongw/lemniscate.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 114,
      "date": "Tue, 21 Dec 2021 02:35:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhirongw/lemniscate.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhirongw/lemniscate.pytorch",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhirongw/lemniscate.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Unsupervised Feature Learning via Non-parameteric Instance Discrimination",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "lemniscate.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhirongw",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhirongw/lemniscate.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 606,
      "date": "Tue, 21 Dec 2021 02:35:36 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "computer-vision",
      "deep-learning",
      "unsupervised-learning",
      "imagenet",
      "pytorch",
      "nce",
      "cvpr2018",
      "representation-learning",
      "self-supervised-learning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repo constains the pytorch implementation for the CVPR2018 unsupervised learning paper [(arxiv)](https://arxiv.org/pdf/1805.01978.pdf).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Our code extends the pytorch implementation of imagenet classification in [official pytorch release](https://github.com/pytorch/examples/tree/master/imagenet). \nPlease refer to the official repo for details of data preparation and hardware configurations.\n\n- supports python27 and [pytorch=0.4](http://pytorch.org)\n\n- if you are looking for pytorch 0.3, please switch to tag v0.3\n\n- clone this repo: `git clone https://github.com/zhirongw/lemniscate.pytorch`\n\n- Training on ImageNet:\n\n  `python main.py DATAPATH --arch resnet18 -j 32 --nce-k 4096 --nce-t 0.07  --lr 0.03 --nce-m 0.5 --low-dim 128 -b 256 `\n\n  - parameter nce-k controls the number of negative samples. If nce-k sets to 0, the code also supports full softmax learning.\n  - nce-t controls temperature of the distribution. 0.07-0.1 works well in practice.\n  - nce-m stabilizes the learning process. A value of 0.5 works well in practice.\n  - learning rate is initialized to 0.03, a bit smaller than standard supervised learning.\n  - the embedding size is controlled by the parameter low-dim.\n\n- During training, we monitor the supervised validation accuracy by K nearest neighbor with K=1, as it's faster, and gives a good estimation of the feature quality.\n\n- Testing on ImageNet:\n\n  `python main.py DATAPATH --arch resnet18 --resume input_model.pth.tar -e` runs testing with default K=200 neighbors.\n\n- Training on CIFAR10:\n\n  `python cifar.py --nce-k 0 --nce-t 0.1 --lr 0.03`\n\n\n",
      "technique": "Header extraction"
    }
  ]
}