{
  "citation": [
    {
      "confidence": [
        0.9157494591749186,
        0.9157494591749186
      ],
      "excerpt": "- https://nbviewer.jupyter.org/github/sshish/NF/blob/master/RealNVP_test.ipynb \n- https://nbviewer.jupyter.org/github/sshish/NF/blob/master/B-NAF_test.ipynb \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sshish/NF",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-31T18:27:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-16T08:25:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9599133174532979,
        0.830537797032539
      ],
      "excerpt": "Normalizing flows for density estimation with built-in support for sampling. \nThis repo provides an interface for creating normalizing flows. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8588430540491666
      ],
      "excerpt": "The NF module provides a basic interface for normalizing flows, and defines some transformations like rotation, permutation, etc. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9267611510673331
      ],
      "excerpt": "The BAM module provides a basic interface for blockwise autoregressive monotonic transformations, and defines some of those (most notably the BAM.Linear, which is the basic building block for the B-NAF architecture from the paper \"Block Neural Autoregressive Flow\" (https://arxiv.org/pdf/1904.04676.pdf)). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.904755445740237,
        0.9143619847893348
      ],
      "excerpt": "- https://github.com/senya-ashukha/real-nvp-pytorch, which is a PyTorch implementation of RealNVP \n- https://github.com/nicola-decao/BNAF, which is the authors' original implementation of B-NAF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Normalizing flows for density estimation with built-in support for sampling.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sshish/NF/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 14:11:17 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sshish/NF/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sshish/NF",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sshish/NF/master/RealNVP_test.ipynb",
      "https://raw.githubusercontent.com/sshish/NF/master/B-NAF_test.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9181723523301152,
        0.9181723523301152
      ],
      "excerpt": "- https://nbviewer.jupyter.org/github/sshish/NF/blob/master/RealNVP_test.ipynb \n- https://nbviewer.jupyter.org/github/sshish/NF/blob/master/B-NAF_test.ipynb \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8178070743363652
      ],
      "excerpt": "- https://github.com/senya-ashukha/real-nvp-pytorch, which is a PyTorch implementation of RealNVP \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sshish/NF/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "NF",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "NF",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sshish",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sshish/NF/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To use `NF` and `BAM` modules:\n- PyTorch version 1.3.0 or above\n\nTo run the `RealNVP_test.ipynb` and `B-NAF_test.py` examples:\n- CUDA support\n- scikit-learn\n- matplotlib\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 14:11:17 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "normalizing-flows",
      "pytorch",
      "real-nvp",
      "density-estimation",
      "block-neural-autoregressive-flow"
    ],
    "technique": "GitHub API"
  }
}