{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.00561",
      "https://arxiv.org/abs/1511.00561v3](https://arxiv.org/abs/1511.00561)*\n\n\nWhat is SegNet-Basic?\n\n* *\"In order to analyse SegNet and compare its performance with FCN  (decoder  variants)  we  use  a  smaller  version  of  SegNet, termed SegNet-Basic ,  which  ha  4  encoders  and  4  decoders. All the encoders in SegNet-Basic perform max-pooling and subsampling and the corresponding decoders upsample its input using the  received  max-pooling  indices.\"*\n\nBasically it's a mini-segnet to experiment / test the architecure with convnets, such as FCN.\n\n\n -----\n\n### Steps To Run The Model:\n---\n\n1. Run `python model-basic.py` to create `segNet_basic_model` for keras to use.\n\t\n\t* `model-basic.py` contains the architecure.\n\n2. \n\n\n\n### Dataset:\n---\n\n1. In a different directory run this to download the [dataset from original Implementation](https://github.com/alexgkendall/SegNet-Tutorial).\n\t* `git clone git@github.com:alexgkendall/SegNet-Tutorial.git`\n\t* copy the `/CamVid` to here, or change the `DataPath` in `data_loader.py` to the above directory\n2. The run `python data_loader.py` to generate these two files:\n\t\n\t* `/data/train_data.npz/` and `/data/train_label.npz`\n\t* This will make it easy to process the model over and over, rather than waiting the data to be loaded into memory.\n\n\n\n----\n\n\n### To Do:\n----\n\n\t[x] SegNet-Basic\n\t[ ] SegNet\n\t[x] Test Accuracy\n\t[ ] Requirements\n\n\n### Segnet-Basic Road Scene Results:\n--------\n\n* Train / Test:\n\n```\n\tTrain on 367 samples, validate on 233 samples\n\tEpoch 101/102\n\t366/367 [============================>.] \n\t- ETA: 0s - loss: 0.3835 - acc: 0.8737Epoch 00000: val_acc improved from -inf to 0.76367, saving model to weights.best.hdf5\n\t367/367 [==============================] \n\t- 231s - loss: 0.3832 - acc: 0.8738 - val_loss: 0.7655 - val_acc: 0.7637\n\tEpoch 102/102\n\t366/367 [============================>.] \n\t- ETA: 0s - loss: 0.3589 - acc: 0.8809Epoch 00001: val_acc did not improve\n\t367/367 [==============================] \n\t- 231s - loss: 0.3586 - acc: 0.8810 - val_loss: 2.4447 - val_acc: 0.4478\n```\n\n\n* Evaluation:\n\n\n\t`acc: 85.47%`\n\n\n    ![img1](./imgs_results/segmented_road_scene.png)\n\n\n\t![img2](./imgs_results/real_road_scene.png)"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/0bserver07/Keras-SegNet-Basic",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-12-17T07:31:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-30T19:04:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8656499619292638
      ],
      "excerpt": "What is Segnet? \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9577046078309883,
        0.9004990468969947
      ],
      "excerpt": "\"In order to analyse SegNet and compare its performance with FCN  (decoder  variants)  we  use  a  smaller  version  of  SegNet, termed SegNet-Basic ,  which  ha  4  encoders  and  4  decoders. All the encoders in SegNet-Basic perform max-pooling and subsampling and the corresponding decoders upsample its input using the  received  max-pooling  indices.\" \nBasically it's a mini-segnet to experiment / test the architecure with convnets, such as FCN. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9487177253773428,
        0.9639407802985491
      ],
      "excerpt": "/data/train_data.npz/ and /data/train_label.npz \nThis will make it easy to process the model over and over, rather than waiting the data to be loaded into memory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "SegNet-Basic with Keras",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/0bserver07/Keras-SegNet-Basic/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 36,
      "date": "Fri, 24 Dec 2021 06:29:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/0bserver07/Keras-SegNet-Basic/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "0bserver07/Keras-SegNet-Basic",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/0bserver07/Keras-SegNet-Basic/master/Segnet-Evaluation-Visualization.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9667014937957162
      ],
      "excerpt": "git clone git@github.com:alexgkendall/SegNet-Tutorial.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9431210945663379
      ],
      "excerpt": "[ ] Requirements \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8263304828556776,
        0.8810929977434694
      ],
      "excerpt": "copy the /CamVid to here, or change the DataPath in data_loader.py to the above directory \nThe run python data_loader.py to generate these two files: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8107587636078171
      ],
      "excerpt": "[x] SegNet-Basic \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9213716497003656
      ],
      "excerpt": "Train / Test: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/0bserver07/Keras-SegNet-Basic/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) [2016] [Yad Faeq]\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## SegNet-Basic:",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Keras-SegNet-Basic",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "0bserver07",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/0bserver07/Keras-SegNet-Basic/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "---\n\n1. Run `python model-basic.py` to create `segNet_basic_model` for keras to use.\n\t\n\t* `model-basic.py` contains the architecure.\n\n2. \n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 81,
      "date": "Fri, 24 Dec 2021 06:29:47 GMT"
    },
    "technique": "GitHub API"
  }
}