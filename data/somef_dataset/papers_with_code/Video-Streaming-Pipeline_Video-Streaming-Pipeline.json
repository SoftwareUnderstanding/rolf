{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.04861<br>\n <a name=\"4\">4</a>. Andrey Ignatov, Radu Timofte, William Chou, Ke Wang, Max Wu, Tim Hartley, Luc Van Gool, _AI Benchmark: Running Deep Neural Networks\non Android Smartphones_ , https://arxiv.org/pdf/1810.01109.pdf"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": " <a name=\"1\">1</a>. Table 1. Inference performance results from Jetson Nano, Raspberry Pi 3, Intel Neural Compute Stick 2, and Google Edge TPU Coral Dev Board, https://developer.nvidia.com/embedded/jetson-nano-dl-inference-benchmarks<br>\n <a name=\"2\">2</a>. Image Classification on ImageNet, https://paperswithcode.com/sota/image-classification-on-imagenet<br>\n <a name=\"3\">3</a>. Andrew G. Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko, Weijun Wang, Tobias Weyand, Marco Andreetto, Hartwig Adam, _MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications_, https://arxiv.org/abs/1704.04861<br>\n <a name=\"4\">4</a>. Andrey Ignatov, Radu Timofte, William Chou, Ke Wang, Max Wu, Tim Hartley, Luc Van Gool, _AI Benchmark: Running Deep Neural Networks\non Android Smartphones_ , https://arxiv.org/pdf/1810.01109.pdf\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing guidelines\nAll guidelines for contributing to the OpenCV repository can be found at How to contribute guideline.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-13T06:34:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-03T06:23:50Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\uc2e4\uc2dc\uac04 \uc774\ubbf8\uc9c0 \ucc98\ub9ac \ubaa8\ub378\uc744 \uc704\ud55c \ubaa8\ubc14\uc77c, \ud074\ub77c\uc6b0\ub4dc \uc601\uc0c1 \uc804\uc1a1 \ud30c\uc774\ud504\ub77c\uc778 \uac1c\ubc1c",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 21 Dec 2021 16:07:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Video-Streaming-Pipeline/Video-Streaming-Pipeline/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Video-Streaming-Pipeline/Video-Streaming-Pipeline",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/videoio/misc/plugin_gstreamer/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/platforms/android/build-tests/test_gradle.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/samples/install/linux_quick_install_contrib.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/samples/install/linux_install_a.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/samples/install/linux_verify.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/samples/install/linux_quick_install.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/samples/install/linux_install_b.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/core/src/opencl/runtime/generator/generate.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/videoio/misc/build_plugins.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/videoio/misc/plugin_ffmpeg/build-standalone.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/videoio/misc/plugin_ffmpeg/build-ubuntu.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/videoio/misc/plugin_gstreamer/build.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/opencv/sources/modules/gapi/doc/slides/get_sty.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/raspi/Miniconda3-latest-Linux-armv7l.sh",
      "https://raw.githubusercontent.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/main/raspi/gstreamer-build.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Video-Streaming-Pipeline/Video-Streaming-Pipeline/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "C",
      "Python",
      "Java",
      "CMake",
      "Objective-C++",
      "HTML",
      "Cuda",
      "Swift",
      "JavaScript",
      "Rich Text Format",
      "Objective-C",
      "TeX",
      "C#",
      "Shell",
      "Perl",
      "Makefile",
      "PowerShell",
      "Batchfile",
      "Scala",
      "NASL",
      "CSS",
      "HLSL",
      "AIDL",
      "Clojure",
      "Prolog",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2006, Industrial Light & Magic, a division of Lucasfilm\\nEntertainment Company Ltd.  Portions contributed and copyright held by\\nothers as indicated.  All rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided with\\n      the distribution.\\n\\n    * Neither the name of Industrial Light & Magic nor the names of\\n      any other contributors to this software may be used to endorse or\\n      promote products derived from this software without specific prior\\n      written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Video-Streaming-Pipeline",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Video-Streaming-Pipeline",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Video-Streaming-Pipeline",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Video-Streaming-Pipeline/Video-Streaming-Pipeline/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 16:07:16 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "edge-computing",
      "deep-learning",
      "gstreamer",
      "pytorch",
      "torchvision"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython benchmark.py\n```\n- \ub85c\uceec\uc5d0\uc11c \uc5ec\ub7ec \ubaa8\ub378\uc744 \uc2e4\ud589\uc2dc \ud3c9\uade0 \ucd94\ub860\uc2dc\uac04\uc744 \uacc4\uc0b0 \ud560 \uc218 \uc788\ub2e4.\n- \uae30\ubcf8\uc801\uc73c\ub85c CPU\ub97c \uc0ac\uc6a9\ud558\uba70 GPU\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud658\uacbd\uc778 \uacbd\uc6b0 GPU\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5f0\uc0b0\ud55c\ub2e4.\n\n```\npython benchmark_with_streaming.py\n```\n- \uc2a4\ud2b8\ub9ac\ubc0d\uc744 \ud1b5\ud574 \uc785\ub825\ubc1b\uc740 \ubaa8\ub378\uc5d0\uc11c \uac1d\uccb4 \ud0d0\uc9c0\ub97c \uc218\ud589\ud55c\ub2e4. -> \uac1c\uc120\ub41c \ubaa8\ub378\ub85c \ucd94\uac00 \uc608\uc815\n- \uc2a4\ud2b8\ub9ac\ubc0d\uc2dc \ud504\ub808\uc784\ub2f9 \ucd94\ub860\uc2dc\uac04\uc744 \ucd9c\ub825\ud55c\ub2e4. (\ud3c9\uade0 \ucd94\ub860 \uc2dc\uac04\uc744 \uad6c\ud558\uace0 \uc2f6\ub2e4\uba74 benchmark.py\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud55c\ub2e4.)\n- \ud604\uc7ac \ub370\ubaa8 \uc601\uc0c1\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\uba70 \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\uc5d0\uc11c \uc218\uc2e0\ud558\uae30 \uc704\ud574\uc11c\ub294 VideoCapture\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \ubcc0\uacbd\ud574\uc57c\ud55c\ub2e4.\n\n\ud604\uc7ac\n```python\ncap = cv.VideoCapture('https://www.freedesktop.org/software/gstreamer-sdk/data/media/sintel_trailer-480p.webm')\n```\n\n\ubcc0\uacbd\n```python\ncap = cv.VideoCapture('udpsrc port=9777 ! application/x-rtp ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert ! appsink', cv.CAP_GSTREAMER)\n```\n- \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\uc640 \uc5f0\ub3d9\uc2dc \ub124\ud2b8\uc6cc\ud06c \uc5d0\ubbac\ub808\uc774\ud130\ub97c \ud1b5\ud574\uc11c 4G \ub610\ub294 5G\uc758 \ud658\uacbd\uc744 \uc870\uc131\ud574\uc11c \uc2e4\ud589\ud558\ub3c4\ub85d\ud55c\ub2e4.\n- \uc11c\ubc84\uc5d0\uc11c \ub2e4\uc2dc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\ub85c \uc601\uc0c1\uc744 \ubcf4\ub0b4\ub294 \uacbd\uc6b0\ub294 \uc544\uc9c1 \uad6c\ud604\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub2e4.\n\n\n",
      "technique": "Header extraction"
    }
  ]
}