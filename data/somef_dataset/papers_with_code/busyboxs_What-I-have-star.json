{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06870\n | \n- [ ] [Net_caffe](https://github.com/ZJUZQ/Net_caffe"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [ ] [tencent-ml-images](https://github.com/Tencent/tencent-ml-images): Largest multi-label image database; ResNet-101 model; 80.73% top-1 acc on ImageNet | \n- [ ] [ApolloScape_InstanceSeg](https://github.com/stevenwudi/ApolloScape_InstanceSeg): Apollo Scape Instsance Segmentation | \n- [ ] [apolloscape-loc](https://github.com/bexcite/apolloscape-loc): PoseNet localization task implementation on Apolloscape dataset with PyTorch. | [website](https://capsulesbot.com/blog/2018/08/24/apolloscape-posenet-pytorch.html)\n- [ ] [dataset-api](https://github.com/ApolloScapeAuto/dataset-api): ApolloScapeAuto: Api for visualize sample data, evaluation of different tasks | \n- [ ] [cityscapesScripts](https://github.com/mcordts/cityscapesScripts): README and scripts for the Cityscapes Dataset | \n- [ ] [bdd-data](https://github.com/ucbdrive/bdd-data): Toolkit to use BDD Dataset | \n- [ ] [chinese-poetry](https://github.com/chinese-poetry/chinese-poetry): \u6700\u5168\u4e2d\u534e\u53e4\u8bd7\u8bcd\u6570\u636e\u5e93, \u5510\u5b8b\u4e24\u671d\u8fd1\u4e00\u4e07\u56db\u5343\u53e4\u8bd7\u4eba, \u63a5\u8fd15.5\u4e07\u9996\u5510\u8bd7\u52a026\u4e07\u5b8b\u8bd7. \u4e24\u5b8b\u65f6\u671f1564\u4f4d\u8bcd\u4eba\uff0c21050\u9996\u8bcd\u3002 | [website](http://shici.store/)\n- [ ] [couplet-dataset](https://github.com/wb14123/couplet-dataset): Dataset for couplets. 70\u4e07\u6761\u5bf9\u8054\u6570\u636e\u5e93\u3002 | \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.989616384949861,
        0.8511535834563826
      ],
      "excerpt": "[ ] ijcai-2018: ijcai-2018 top1 solution |  \n[ ] ijcai-18-top2-single-mole-solution: \u590d\u8d5b\u7b2c\u4e8c\u540d\u5355\u6a21\u578b\u65b9\u6848\uff0c\u6ca1\u6709\u7279\u5f81\u9009\u62e9\u6ca1\u6709\u8c03\u53c2LGB\u5355\u6a21\u578b857\u4e2a\u7279\u5f81 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9848487648794519
      ],
      "excerpt": "[ ] machine-learning-for-software-engineers: A complete daily plan for studying to become a machine learning engineer. | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9820149021657938,
        0.9823790367047706
      ],
      "excerpt": "[ ] stanford-cs-229-machine-learning: VIP cheatsheets for Stanford's CS 229 Machine Learning | website \n[ ] awesome-machine-learning: A curated list of awesome Machine Learning frameworks, libraries and software. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9705150011826599
      ],
      "excerpt": "[ ] Machine-Learning-Tutorials: machine learning and deep learning tutorials, articles and other resources | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8640551011140825
      ],
      "excerpt": "[ ] Python-Machine-Learning-Blueprints: Code repository for Python Machine Learning Blueprints, published by Packt |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868371346575934
      ],
      "excerpt": "[ ] python-machine-learning-book: The \"Python Machine Learning (1st edition)\" book code repository and info resource |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9885427279391034
      ],
      "excerpt": "[ ] machine-learning: Content for Udacity's Machine Learning curriculum |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9959095798589531
      ],
      "excerpt": "[ ] 2017-persontyle: Applied Deep Learning Workshop London 2017 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9472977073259417
      ],
      "excerpt": "[ ] Fall2018-tutorials: Tutorials for Fall 2018 http://deeplearning.cs.cmu.edu/ |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146894306581498
      ],
      "excerpt": "[ ] Object-detection: ... |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9202973658182766
      ],
      "excerpt": "[ ] Face-Recognition-using-paddlepaddle: \u9996\u5c4a\u751f\u7269\u7279\u5f81\u8bc6\u522b\u5927\u8d5b\uff0c\u79d1\u8d5b\u7f51\u3002 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9798797907350296
      ],
      "excerpt": "[ ] AttentionMask: AttentionMask: Attentive, Efficient Object Proposal Generation Focusing on Small Objects (ACCV 2018, accepted as oral) |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.992461655633272,
        0.9507374082549614
      ],
      "excerpt": "[ ] mmcv: Open MMLab Computer Vision Foundation | website \n[ ] mmdetection: Open MMLab Detection Toolbox |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.823093396043115
      ],
      "excerpt": "[ ] SDC-Vehicle-Detection: Udacity Project - Vehicle Detection |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9795634831909081
      ],
      "excerpt": "[ ] softer-NMS: Softer-NMS: Rethinking Bounding Box Regression for Accurate Object Detection |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9525111494215531
      ],
      "excerpt": "[ ] scalabel: Quantify computer vision performance in human terms | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8835351290046797,
        0.9901047730398114
      ],
      "excerpt": "[ ] Detect-Track: Code release for \"Detect to Track and Track to Detect\", ICCV 2017 |  \n[ ] temporal-segment-networks: Code & Models for Temporal Segment Networks (TSN) in ECCV 2016 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9919355722253281
      ],
      "excerpt": "[ ] MLKP: CVPR18 Paper: Multi-scale Location-aware Kernel Representation for Object Detection |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302657745247774,
        0.9995926086217111
      ],
      "excerpt": "[ ] Facial-Recognition-Tensorflow: Tensorflow pipeline to recognize faces - Pycon Colombia 2018 |  \n[ ] RFBNet: Receptive Field Block Net for Accurate and Fast Object Detection, ECCV 2018 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9983992754860588
      ],
      "excerpt": "[ ] image-text-localization-recognition: A general list of resources to image text localization and recognition |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.998590854254194
      ],
      "excerpt": "[ ] RefineDet: Single-Shot Refinement Neural Network for Object Detection, CVPR, 2018 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9882957398281405
      ],
      "excerpt": "[ ] R-MTCNN: R-MTCNN\uff1aJoint Face detection and Alignment using Region-based Multi-task Convolution Networks | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8302367014306998
      ],
      "excerpt": "[ ] Logo-Classifier: Code for Logo Detection and Classification |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9786879348135294
      ],
      "excerpt": "[ ] OPAM_TIP2018: Source code of our TIP 2018 paper \"Object-Part Attention Model for Fine-grained Image Classification\" |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9982822581651162,
        0.9330453422554771
      ],
      "excerpt": "[ ] traffic-signs-recognition: Traffic Signs Detection and Recognition using Multi-Scale CNN |  \n[ ] Perception-for-Self-driving: Perception algorithms for Self-driving car; Lane Line Finding, Vehicle Detection, Traffic Sign Classification algorithm. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.997065130858692
      ],
      "excerpt": "[ ] DNN-Face-Recognition-Papers: awesome deep learning papers for face recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9375995069134333,
        0.902674934688009
      ],
      "excerpt": "[ ] Detectron: FAIR's research platform for object detection research, implementing popular algorithms like Mask R-CNN and RetinaNet. |  \n[ ] tesseract: Tesseract Open Source OCR Engine (main repository) |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111036989382164
      ],
      "excerpt": "[ ] affordance-net: AffordanceNet - Multiclass Instance Segmentation Framework - ICRA 2018 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9058226999341241
      ],
      "excerpt": "[ ] Mask-RCNN: Implementation of https://arxiv.org/abs/1703.06870 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146894306581498
      ],
      "excerpt": "[ ] soft-nms: Object Detection | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959546310417776,
        0.9922982529561025,
        0.8729393277090676
      ],
      "excerpt": "[ ] face-recognition: ... |  \n[ ] RON: RON: Reverse Connection with Objectness Prior Networks for Object Detection, CVPR 2017 |  \n[ ] sst: SST: Single-Stream Temporal Action Proposals (Official Repo) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9783670145069077
      ],
      "excerpt": "[ ] Video-Highlight-Detection: video highlight detection with deep networks | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "[ ] lectures: Oxford Deep NLP 2017 course |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.887167692142383
      ],
      "excerpt": "[ ] tensorflow_poems: \u4e2d\u6587\u53e4\u8bd7\u81ea\u52a8\u4f5c\u8bd7\u673a\u5668\u4eba\uff0c\u5c4c\u70b8\u5929\uff0c\u57fa\u4e8etensorflow1.10 api\uff0c\u6b63\u5728\u79ef\u6781\u7ef4\u62a4\u5347\u7ea7\u4e2d\uff0c\u5febstar\uff0c\u4fdd\u6301\u66f4\u65b0\uff01 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "[ ] awesome-algorithm: LeetCode, HackRank, \u5251\u6307offer, classic algorithm implementation |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9937298945011871
      ],
      "excerpt": "[ ] Algorithm_Interview_Notes-Chinese: 2018/2019/\u6821\u62db/\u6625\u62db/\u79cb\u62db/\u7b97\u6cd5/\u673a\u5668\u5b66\u4e60(Machine Learning)/\u6df1\u5ea6\u5b66\u4e60(Deep Learning)/\u81ea\u7136\u8bed\u8a00\u5904\u7406(NLP)/C/C++/Python/\u9762\u8bd5\u7b14\u8bb0 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/busyboxs/What-I-have-star",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-22T02:15:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-22T08:09:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9861340511726565,
        0.8514668163948185
      ],
      "excerpt": "[ ] programmers-introduction-to-mathematics: Code for A Programmer's Introduction to Mathematics | website \n[ ] notes-linear-algebra: \u7ebf\u6027\u4ee3\u6570\u7b14\u8bb0 | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821808137021164
      ],
      "excerpt": "[ ] Data-Competition-TopSolution: Data competition Top Solution \u6570\u636e\u7ade\u8d5btop\u89e3\u51b3\u65b9\u6848\u5f00\u6e90\u6574\u7406 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9796760215015621,
        0.9568087806811382
      ],
      "excerpt": "[ ] awesome-datascience: An awesome Data Science repository to learn and apply for real world problems. \n[ ] machine-learning-for-software-engineers: A complete daily plan for studying to become a machine learning engineer. | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8486727759456852
      ],
      "excerpt": "[ ] 100-Days-Of-ML-Code: 100 Days of ML Coding |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8574510276075353,
        0.8939073817491917
      ],
      "excerpt": "[ ] stanford-cs-229-machine-learning: VIP cheatsheets for Stanford's CS 229 Machine Learning | website \n[ ] awesome-machine-learning: A curated list of awesome Machine Learning frameworks, libraries and software. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9203566042176755
      ],
      "excerpt": "[ ] Machine-Learning-Tutorials: machine learning and deep learning tutorials, articles and other resources | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908793208368755
      ],
      "excerpt": "[ ] tensorflow-DeepFM: Tensorflow implementation of DeepFM for CTR prediction. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768401492637173
      ],
      "excerpt": "[ ] Data-Science-Lab-Final-Project: ... |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.964546736098832
      ],
      "excerpt": "[ ] dive-into-machine-learning: Dive into Machine Learning with Python Jupyter notebook and scikit-learn!  | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8900258214655333,
        0.8689578475009175,
        0.9603160651590046,
        0.9369126909928067,
        0.9444433765552996,
        0.8119541910778083,
        0.9443115446875231,
        0.9712114710264886,
        0.948011537068227
      ],
      "excerpt": "[ ] machine-learning-mindmap: A mindmap summarising Machine Learning concepts, from Data Analysis to Deep Learning. | \n[ ] deep-learning-ocean:  All You Need to Know About Deep Learning - A kick-starter |  \n[ ] mit-deep-learning: Tutorials, assignments, and competitions for MIT Deep Learning related courses. | website \n[ ] Grokking-Deep-Learning: this repository accompanies my forthcoming book \"Grokking Deep Learning\" |  \n[ ] nndl: Another Chinese Translation of Neural Networks and Deep Learning |  \n[ ] d2l-zh: \u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b\uff0c\u82f1\u6587\u7248\u5373\u4f2f\u514b\u5229\u6df1\u5ea6\u5b66\u4e60\uff08STAT 157\uff0c2019\u6625\uff09\u6559\u6750\u3002\u9762\u5411\u4e2d\u6587\u8bfb\u8005\u3001\u80fd\u8fd0\u884c\u3001\u53ef\u8ba8\u8bba\u3002 | website \n[ ] stanford-cs-230-deep-learning: VIP cheatsheets for Stanford's CS 230 Deep Learning | website \n[ ] handson-ml: A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow. |  \n[ ] awesome-deep-learning: A curated list of awesome Deep Learning tutorials, projects and communities. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9118586107750448,
        0.8798179447009123
      ],
      "excerpt": "[ ] nndl.github.io: \u300a\u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\u300b Neural Network and Deep Learning | website \n[ ] deeplearningbook-chinese: Deep Learning Book Chinese Translation  | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8119541910778083
      ],
      "excerpt": "[ ] transferlearning-tutorial: \u300a\u8fc1\u79fb\u5b66\u4e60\u7b80\u660e\u624b\u518c\u300bLaTex\u6e90\u7801 | website  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9213650056053388
      ],
      "excerpt": "[ ] deepLearningBook-Notes: Notes on the Deep Learning book from Ian Goodfellow, Yoshua Bengio and Aaron Courville (2016) | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184312234337441
      ],
      "excerpt": "[ ] FaceBoxes.PyTorch: A PyTorch Implementation of FaceBoxes |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184312234337441,
        0.9148323012597526
      ],
      "excerpt": "[ ] yolov3-pytorch: A pytorch implementation of yolov3 |  \n[ ] CSRNet-keras: Implementation of the CSRNet paper (CVPR 18) in keras-tensorflow |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9234820519358257
      ],
      "excerpt": "[ ] [pytorch-fcn]https://github.com/wkentaro/pytorch-fcn(): PyTorch Implementation of Fully Convolutional Networks. (Training code to reproduce the original result is available.) |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8059345974564267,
        0.9063652192307777
      ],
      "excerpt": "[ ] CSRNet-pytorch: CSRNet: Dilated Convolutional Neural Networks for Understanding the Highly Congested Scenes |  \n[ ] faster-rcnn.pytorch: A faster pytorch implementation of faster r-cnn |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9710630392247456,
        0.9614176937097565
      ],
      "excerpt": "[ ] zaidalyafeai.github.io: Implementation of web friendly ML models using TensorFlow.js |  \n[ ] PytorchSSD: pytorch version of SSD and it's enhanced methods such as RFBSSD,FSSD and RefineDet |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312252823155218,
        0.9658775611989071,
        0.9824789769101412
      ],
      "excerpt": "[ ] pytorch-ssd: MobileNetV1, MobileNetV2, VGG based SSD/SSD-lite implementation in Pytorch 1.0 / Pytorch 0.4. Out-of-box support for retraining on Open Images dataset. ONNX and Caffe2 support. Experiment Ideas like CoordConv.  | website \n[ ] pytorch-ssd: reproduced the proposed results of SSD300 and SSD512 |  \n[ ] ShelfNet: implementation of a CNN model for real-time semantic segmentation |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9335618921165417
      ],
      "excerpt": "[ ] QuickDraw: Implementation of Quickdraw - an online game developed by Google |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9612122466858013
      ],
      "excerpt": "[ ] Real-Time-Facial-Expression-Recognition: A Deep Learning Case Study to detect one of the Seven Human Facial Expressions in Still Images and in Real Time. This model is also trained enough to Detect Facial Expressions of Animated Images. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8542203581939523
      ],
      "excerpt": "[ ] pytorch-semseg: Semantic Segmentation Architectures Implemented in PyTorch | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9315291554180731
      ],
      "excerpt": "[ ] lsi-faster-rcnn: LSI-Faster R-CNN: An enhanced version of Faster R-CNN for joint object detection and viewpoint estimation |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9760479288976728
      ],
      "excerpt": "[ ] face_classification: Real-time face detection and emotion/gender classification using fer2013/imdb datasets with a keras CNN model and openCV. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966716005938733,
        0.8291567098396785
      ],
      "excerpt": "[ ] pix2pix: Image-to-image translation with conditional adversarial nets | website \n[ ] Detectron-Cascade-RCNN: Cascade R-CNN in Detectron |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053720542426183,
        0.8761610261647487
      ],
      "excerpt": "[ ] DataAugmentationForObjectDetection: Data Augmentation For Object Detection | website \n[ ] PreciseRoIPooling: Precise RoI Pooling with coordinate gradient support, proposed in the paper \"Acquisition of Localization Confidence for Accurate Object Detection\"  |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9547698158394093
      ],
      "excerpt": "[ ] ml4a-guides: practical guides, tutorials, and code samples for ml4a | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8236006211439444
      ],
      "excerpt": "[ ] ImageForensics: Learning Manipulation-Invariant Image Similarity for Detecting Re-Use of Images in Scientific Publications  | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9233428248588965
      ],
      "excerpt": "[ ] LSTM-Human-Activity-Recognition: Human Activity Recognition example using TensorFlow on smartphone sensors dataset and an LSTM RNN (Deep Learning algo). Classifying the type of movement amongst six activity categories - Guillaume Chevalier | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934000923117237
      ],
      "excerpt": "[ ] Mask_RCNN: Mask R-CNN for object detection and instance segmentation on Keras and TensorFlow |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8258316739677629
      ],
      "excerpt": "[ ] light_head_rcnn: Light-Head R-CNN | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.930029485455305
      ],
      "excerpt": "[ ] Faster_RCNN_for_DOTA: Code used for training Faster R-CNN on DOTA |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8310367990873082
      ],
      "excerpt": "[ ] Saliency-guided-Faster-R-CNN_ACMMM2017: Source code of our ACM MM 2017 paper \"Fine-grained Discriminative Localization via Saliency-guided Faster R-CNN\" |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8866404465832791
      ],
      "excerpt": "[ ] OPAM_TIP2018: Source code of our TIP 2018 paper \"Object-Part Attention Model for Fine-grained Image Classification\" |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8492445031179555,
        0.8467420228118556
      ],
      "excerpt": "[ ] Augmentor: Image augmentation library in Python for machine learning. | website \n[ ] Low-Rank-Bilinear-Pooling: Fine-grained classification via second order statistics in a compact end-to-end trainable model |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014486455791187
      ],
      "excerpt": "[ ] face-magnet: Code of Face-MagNet that was published in WACV18 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9801612516425701
      ],
      "excerpt": "[ ] ssd_tensorflow_traffic_sign_detection: Implementation of Single Shot MultiBox Detector in TensorFlow, to detect and classify traffic signs |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.871654959490852,
        0.8624254550673268
      ],
      "excerpt": "[ ] caffe-face: This branch is developed for deep face recognition |  \n[ ] FaceDetection: C++ project to implement MTCNN, a perfect face detect algorithm, on different DL frameworks. The most popular frameworks: caffe/mxnet/tensorflow, are all suppported now |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.937469648828448,
        0.9664146538364277,
        0.8246051258189779,
        0.9194623650679128
      ],
      "excerpt": "[ ] CNNFaceRecognition: Using caffe framework (machine learning) to recognize faces in a picture |  \n[ ] RememberYou: face recognize by convolution neural network(CNN), deep learning, which bases on Caffe |  \n[ ] AutonomousDrivingCookbook: Scenarios, tutorials and demos for Autonomous Driving |  \n[ ] awesome-autonomous-vehicles: Curated List of Self-Driving Cars and Autonomous Vehicles Resources | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9151661497576025,
        0.8768434351429926
      ],
      "excerpt": "[ ] st-gcn: Spatial Temporal Graph Convolutional Networks (ST-GCN) for Skeleton-Based Action Recognition in PyTorch |  \n[ ] Detectron: FAIR's research platform for object detection research, implementing popular algorithms like Mask R-CNN and RetinaNet. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358325125308748
      ],
      "excerpt": "[ ] ssd.pytorch: A PyTorch Implementation of Single Shot MultiBox Detector |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83566732108996,
        0.9813938757656067
      ],
      "excerpt": "[ ] caffe-model: Caffe models (including classification, detection and segmentation) and deploy files for famouse networks |  \n[ ] R-FCN-PSROIAlign: A Caffe implementation of PSROI-Align |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070626208025994,
        0.9102484700103655
      ],
      "excerpt": "[ ] ohem: OHEM support for Fast R-CNN |  \n[ ] ohem-end2end: online hard examples mining support for Faster R-CNN end to end. |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8312581684982956
      ],
      "excerpt": "[ ] mscnn: Caffe implementation of our multi-scale object detection framework |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9497438035092107
      ],
      "excerpt": "[ ] NLP-progress: Repository to track the progress in Natural Language Processing (NLP), including the datasets and the current state-of-the-art for the most common NLP tasks. | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8051229226247484
      ],
      "excerpt": "[ ] DeepSpeech: A TensorFlow implementation of Baidu's DeepSpeech architecture | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9745892496503494
      ],
      "excerpt": "Play couplet with seq2seq model. \u7528\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u8054\u3002 | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9518233219633772,
        0.9662235761037933
      ],
      "excerpt": "[ ] OpenLearning4DeepRecsys: Some deep learning based recsys for open learning. |  \n[ ] Deep-Learning-for-Recommendation-Systems: This repository contains Deep Learning based articles , paper and repositories for Recommender Systems | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9092878636042191,
        0.9288796993728831,
        0.9686741586683133,
        0.9311763491689988
      ],
      "excerpt": "[ ] pytorchviz: A small package to create visualizations of PyTorch execution graphs |  \n[ ] ranking: Learning to Rank in TensorFlow |  \n[ ] fastai: The fastai deep learning library, plus lessons and and tutorials | website \n[ ] VisualDL: A platform to visualize the deep learning process and result. | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8413015804840486
      ],
      "excerpt": "[ ] Feature-Selection: Features selection algorithm based on the self selected-algorithm, loss function and validation method |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8375903574894943,
        0.9428254793135364
      ],
      "excerpt": "[ ] al-go-rithms: Algorithms written in different programming languages | website \n[ ] LeetCodeAnimation: Demonstrate all the questions on LeetCode in the form of animation.\uff08\u7528\u52a8\u753b\u7684\u5f62\u5f0f\u5448\u73b0\u89e3LeetCode\u9898\u76ee\u7684\u601d\u8def\uff09 |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8119541910778083,
        0.8739731248881328
      ],
      "excerpt": "[ ] CS-Notes: \u9762\u8bd5\u5fc5\u5907\u57fa\u7840\u77e5\u8bc6  | website \n[ ] algorithm-visualizer: Interactive Online Platform that Visualizes Algorithms from Code | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184528524584543,
        0.8119541910778083,
        0.8623398979875644,
        0.8322770412568619,
        0.8899687044394834,
        0.9096162790478934
      ],
      "excerpt": "[ ] 2048.cpp: Fully featured terminal version of the game \"2048\" written in C++ |  \n[ ] interview: C/C++\u9762\u8bd5\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3 | website \n[ ] awesome-modern-cpp: A collection of resources on modern C++ | website \n[ ] modern-cpp-tutorial: C++11/14/17 On the Fly | website \n[ ] wtfpython: A collection of surprising Python snippets and lesser-known features. |  \n[ ] learnGitBranching: An interactive git visualization to challenge and educate!  | website \n",
      "technique": "Supervised classification"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://tensorboardx.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "http://augmentor.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://mmcv.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/busyboxs/What-I-have-star/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 18:34:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/busyboxs/What-I-have-star/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "busyboxs/What-I-have-star",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "[ ] 2018BaiduStar_pytorch: 2018\u767e\u5ea6\u4e4b\u661f\u5f00\u53d1\u8005\u5927\u8d5b\uff1a\u4eba\u6d41\u91cf\u5bc6\u5ea6\u4f30\u8ba1\u6e90\u4ee3\u7801(pytorch) |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9708119013170028
      ],
      "excerpt": "[ ] SSD_Text_Detection: SSD,python,pytorch |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "[ ] FPN-Pytorch: ... | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8391594173814588
      ],
      "excerpt": "[ ] Pytorch_C3D_Feature_Extractor: Pytorch C3D feature extractor |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043929270298233
      ],
      "excerpt": "[ ] nltk: NLTK Source | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8734088272601407
      ],
      "excerpt": "[ ] tensorboardX: tensorboard for pytorch (and chainer, mxnet, numpy, ...) | website \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8731205217686321
      ],
      "excerpt": "[ ] tensorflow-build: TensorFlow binaries supporting AVX, FMA, SSE |  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8263636155650136
      ],
      "excerpt": "[ ] tf-face-recognizer: ... |  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/busyboxs/What-I-have-star/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "What-I-have-star",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "What-I-have-star",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "busyboxs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/busyboxs/What-I-have-star/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 18:34:22 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [ ] [TensorFlow-Examples](https://github.com/aymericdamien/TensorFlow-Examples): TensorFlow Tutorial and Examples for Beginners with Latest APIs | \n- [ ] [practicalAI](https://github.com/GokuMohandas/practicalAI): A practical approach to learning and using machine learning. | \n- [ ] [Articles](https://github.com/TannerGilbert/Articles): Code for my articles | [website](https://medium.com/@gilberttanner)\n- [ ] [tensorflow-internals](https://github.com/horance-liu/tensorflow-internals): It is open source ebook about TensorFlow kernel and implementation mechanism. | \n- [ ] [pytorch-book](https://github.com/chenyuntc/pytorch-book): PyTorch tutorials and fun projects including neural talk, neural style, poem writing, anime generation | \n- [ ] [pytorch-tutorial](https://github.com/yunjey/pytorch-tutorial): PyTorch Tutorial for Deep Learning Researchers | \n- [ ] [tensorflow-docs](https://github.com/ziiai/tensorflow-docs): \u6700\u65b0 TensorFlow \u4e2d\u6587\u6587\u6863\uff08\u6301\u7eed\u66f4\u65b0\u4e2d\uff09 | [website](https://www.ziiai.com/docs/tensorflow)\n- [ ] [udacity_pytorch-scholarship-challenge](https://github.com/gokriznastic/udacity_pytorch-scholarship-challenge): A collection of notebooks and projects done as a part of Udacity's Pytorch Scholarship Challenge. | \n- [ ] [deep_learning_tutorials](https://github.com/isikdogan/deep_learning_tutorials): deep learning: theory + practice | \n- [ ] [PyTorch-Project-Template](https://github.com/L1aoXingyu/PyTorch-Project-Template): A best practice for pytorch project template architecture. | \n- [ ] [examples](https://github.com/pytorch/examples): A set of examples around pytorch in Vision, Text, Reinforcement Learning, etc. | \n- [ ] [TensorFlow-Course](https://github.com/osforscience/TensorFlow-Course): Simple and ready-to-use tutorials for TensorFlow | \n- [ ] [code-of-learn-deep-learning-with-pytorch](https://github.com/L1aoXingyu/code-of-learn-deep-learning-with-pytorch): This is code of book \"Learn Deep Learning with PyTorch\" | \n- [ ] [tensorflow_cookbook](https://github.com/nfmcclure/tensorflow_cookbook): Code for Tensorflow Machine Learning Cookbook  | [website](https://www.packtpub.com/big-data-and-business-intelligence/tensorflow-machine-learning-cookbook-second-edition)\n- [ ] [Awesome-pytorch-list](https://github.com/bharathgs/Awesome-pytorch-list): A comprehensive list of pytorch related content on github,such as different models,implementations,helper libraries,tutorials etc. | \n- [ ] [Hands-On-Transfer-Learning-with-Python](https://github.com/PacktPublishing/Hands-On-Transfer-Learning-with-Python): Hands On Transfer Learning with Python, published by Packt | \n- [ ] [easy-tensorflow](https://github.com/easy-tensorflow/easy-tensorflow): Simple and comprehensive tutorials in TensorFlow | [website](http://www.easy-tensorflow.com/)\n- [ ] [awesome-tensorflow](https://github.com/jtoy/awesome-tensorflow): TensorFlow - A curated list of dedicated resources | \n- [ ] [tensorflow_tutorials](https://github.com/pkmital/tensorflow_tutorials): From the basics to slightly more interesting applications of Tensorflow | \n- [ ] [tensorflow-tutorial](https://github.com/caicloud/tensorflow-tutorial): Example TensorFlow codes and Caicloud TensorFlow as a Service dev environment. | \n- [ ] [tf-estimator-tutorials](https://github.com/GoogleCloudPlatform/tf-estimator-tutorials): This repository includes tutorials on how to use the TensorFlow estimator APIs to perform various ML tasks, in a systematic and standardised way | [website](https://www.tensorflow.org/programmers_guide/estimators)\n- [ ] [Tensorflow-101](https://github.com/sjchoi86/Tensorflow-101): TensorFlow Tutorials  | \n- [ ] [tensorflow-docs](https://github.com/xitu/tensorflow-docs): TensorFlow \u6700\u65b0\u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248 V1.10  | [website](https://tensorflow.juejin.im/)\n- [ ] [TensorFlow-World](https://github.com/astorfi/TensorFlow-World): Simple and ready-to-use tutorials for TensorFlow | \n- [ ] [TensorFlow-Book](https://github.com/BinRoot/TensorFlow-Book): Accompanying source code for Machine Learning with TensorFlow. Refer to the book for step-by-step explanations. | [website](http://www.tensorflowbook.com/)\n- [ ] [TensorFlow-Tutorials](https://github.com/Hvass-Labs/TensorFlow-Tutorials): TensorFlow Tutorials with YouTube Videos | \n- [ ] [stanford-tensorflow-tutorials](https://github.com/chiphuyen/stanford-tensorflow-tutorials): This repository contains code examples for the Stanford's course: TensorFlow for Deep Learning Research. | [website](http://cs20.stanford.edu/) \n- [ ] [EffectiveTensorflow](https://github.com/vahidk/EffectiveTensorflow): TensorFlow tutorials and best practices. | [website](https://twitter.com/VahidK) \n\n",
      "technique": "Header extraction"
    }
  ]
}