{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/matlab-deep-learning/pix2pix",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-30T08:59:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-18T02:45:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9732253045050636
      ],
      "excerpt": "This repository contains MATLAB code to implement the pix2pix image to image translation method described in the paper by Isola et al. Image-to-Image Translation with Conditional Adversarial Nets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.934457985504843
      ],
      "excerpt": "To train a model you need many pairs of images of \"before\" and \"after\". The classic example is the facades dataset which contains label images of the fronts of buildings, and the corresponding original photo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620904993031422
      ],
      "excerpt": "To train the model we need to provide the locations of the A and B images, as well as any training options. The model will then try and learn to convert A images into B images! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8226350750887768,
        0.8498478368457086
      ],
      "excerpt": "Note that with the default options training the model will take several hours on a GPU and requires around 6GB of memory. \nOnce the model is trained we can use the generator to make generate a new image. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8308205670201683
      ],
      "excerpt": "We can then use the p2p.translate function to convert the input image using trained model. (Note that the generator we have used expects an input image with pixel dimensions divisible by 256) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Image to Image Translation Using Generative Adversarial Networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/matlab-deep-learning/pix2pix/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any trouble using this code, report any bugs, or want to request a feature please use the [GitHub issues](https://github.com/matlab-deep-learning/pix2pix/issues).\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Sat, 25 Dec 2021 11:24:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/matlab-deep-learning/pix2pix/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "matlab-deep-learning/pix2pix",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/matlab-deep-learning/pix2pix/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First off [clone](https://github.com/matlab-deep-learning/pix2pix.git) or [download](https://github.com/matlab-deep-learning/pix2pix/archive/master.zip) the repository to get a copy of the code. Then run the function `install.m` to ensure that all required files are added to the MATLAB path.\n\n```matlab\ninstall();\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8483819940059046
      ],
      "excerpt": "Training a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808822427434402,
        0.8138809336397215
      ],
      "excerpt": "Use the helper function p2p.util.downloadFacades to download and prepare the dataset for model training. Once that's ready you will have two folders 'A' the input labels, and 'B' the desired output images.  \nTo train the model we need to provide the locations of the A and B images, as well as any training options. The model will then try and learn to convert A images into B images! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8779731492716857
      ],
      "excerpt": "p2pModel = p2p.train(labelFolder, targetFolder, options); \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/matlab-deep-learning/pix2pix/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "MATLAB"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/matlab-deep-learning/pix2pix/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2020, The MathWorks, Inc.\\nAll rights reserved.\\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\n3. In all cases, the software is, and all modifications and derivatives of the software shall be, licensed to you solely for use in conjunction with MathWorks products and service offerings. \\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pix2pix - Image to Image Translation Using Generative Adversarial Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pix2pix",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "matlab-deep-learning",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/matlab-deep-learning/pix2pix/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Sat, 25 Dec 2021 11:24:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gan",
      "deep-learning",
      "matlab",
      "generative-adversarial-network",
      "pix2pix",
      "gans",
      "computer-vision",
      "image-generation",
      "neural-network"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you have the minimum following requirements:\n\n- MATLAB R2019b or greater\n- Deep Learning Toolbox\n\n\n",
      "technique": "Header extraction"
    }
  ]
}