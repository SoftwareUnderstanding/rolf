{
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "YOLO\u5c06\u539f\u56fe\u5316\u5206\u8f667\u00d77\u768449\u4e2a\u5355\u5143\u683c\uff0c\u4e3b\u5e72\u7f51\u7edc\u4f9d\u7136\u91c7\u7528\u4e86\u5206\u7c7b\u7f51\u7edc\uff0c\u4f46\u6700\u540e\u4e24\u5c42\u4f7f\u7528\u4e86\u5168\u5377\u79ef\u5c42\uff0c\u6700\u7ec8\u8f93\u51fa\u4e00\u4e2a 7\u00d77\u00d730 \u7684\u7279\u5f81\u5c42\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7279\u5f81\u70b9\u5305\u542b\u7684\u7279\u5f81\u5411\u91cf\u4ee3\u8868\u4e86\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u7279\u5f81\u3002\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u57df\u7684\u7279\u5f81\u5411\u91cf\uff0cYOLO\u5206\u522b\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u8f93\u51fa\u9884\u6d4b\uff0c\u76f8\u5e94\u7684\u9884\u6d4b\u503c\u5305\u62ec\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9593299683604384
      ],
      "excerpt": "\u4f5c\u8005\u5728\u8bad\u7ec3\u65f6\u91c7\u7528\u4e86 32 \u500d\u6570\u7684\u8f93\u5165\u5927\u5c0f\u4e3a\uff0c\u5206\u522b\u4e3a\uff1a320,352,...,608\uff0c\u6bcf 10 \u4e2a epoch \u91cd\u65b0\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u8f93\u5165\u5927\u5c0f\uff1b \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9626356225854676
      ],
      "excerpt": "\u8fd9\u91cc\u6211\u5199\u4e86\u4e00\u4e2a\u8c03\u7528 PaddleDetection \u8f66\u8f86\u68c0\u6d4b\u6a21\u578b\u7684\u7a0b\u5e8f\uff0c\u6e90\u7801\u5730\u5740\uff1ahttps://github.com/Sharpiless/yolov3-vehicle-detection-paddle \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "X2Paddle \u6e90\u7801\u5730\u5740\uff1ahttps://github.com/PaddlePaddle/X2Paddle \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654671031158477
      ],
      "excerpt": "color_attrs = ['Black', 'Blue', 'Brown', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "              'shopTruck', 'suv', 'trailer', 'truck', 'van', 'waggon']  #: \u8f66\u8f86\u7c7b\u578b \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "place = fluid.CUDAPlace(0) if use_gpu else fluid.CPUPlace() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "img = putText(img, label, x=1, y=10, color=(0, 215, 255)) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sharpiless/yolov3-vehicle-detection-paddle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-28T11:09:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T01:20:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8215704942325371
      ],
      "excerpt": "x2paddle --framework=onnx --model=classifier.onnx --save_dir=pd_model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187855898164498
      ],
      "excerpt": "    for i, out in enumerate(outputs): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8785028381603522
      ],
      "excerpt": "            for out_part in out: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "with fluid.program_guard(adv_program): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "#: model definition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "vehicle-detection based on yolov3\uff08\u57fa\u4e8epaddle\u7684YOLOv3\u8f66\u8f86\u68c0\u6d4b\u548c\u7c7b\u578b\u8bc6\u522b\uff09",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://paddledetection.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sharpiless/yolov3-vehicle-detection-paddle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 22,
      "date": "Sun, 26 Dec 2021 10:42:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Sharpiless/yolov3-vehicle-detection-paddle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sharpiless/yolov3-vehicle-detection-paddle",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8837680365796365,
        0.954950449355536
      ],
      "excerpt": "\u521b\u5efa python \u73af\u5883\uff1a \nconda create -n paddle_env python=3.6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9770335174395833,
        0.9741831278855733
      ],
      "excerpt": "conda activate paddle_env \npip install -i https://pypi.tuna.tsinghua.edu.cn/simple -U \u5e93\u540d --default-time=1000 --user \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998156212750886
      ],
      "excerpt": "python -m pip install paddlepaddle-gpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "\u8fdb\u5165 python \u73af\u5883\u5e76\u6d4b\u8bd5\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9893272198983933
      ],
      "excerpt": "git clone https://github.com/PaddlePaddle/PaddleDetection.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9979947896609701,
        0.8837680365796365
      ],
      "excerpt": "pip install -r requirements.txt \n\u6307\u5b9a\u5f53\u524d Python \u8def\u5f84\u7136\u540e\u6d4b\u8bd5\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9900824311878013
      ],
      "excerpt": "pip install git+https://github.com/philferriere/cocoapi.git#:subdirectory=PythonAPI \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "X2Paddle \u6e90\u7801\u5730\u5740\uff1ahttps://github.com/PaddlePaddle/X2Paddle \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_128 = fluid.layers.relu(x2paddle_127, name='x2paddle_128') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_132 = fluid.layers.relu(x2paddle_131, name='x2paddle_132') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_135 = fluid.layers.elementwise_add(x=x2paddle_134, y=x2paddle_129, name='x2paddle_135') \n    x2paddle_136 = fluid.layers.relu(x2paddle_135, name='x2paddle_136') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_139 = fluid.layers.relu(x2paddle_138, name='x2paddle_139') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_142 = fluid.layers.elementwise_add(x=x2paddle_141, y=x2paddle_136, name='x2paddle_142') \n    x2paddle_143 = fluid.layers.relu(x2paddle_142, name='x2paddle_143') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_146 = fluid.layers.relu(x2paddle_145, name='x2paddle_146') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_151 = fluid.layers.elementwise_add(x=x2paddle_148, y=x2paddle_150, name='x2paddle_151') \n    x2paddle_152 = fluid.layers.relu(x2paddle_151, name='x2paddle_152') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_155 = fluid.layers.relu(x2paddle_154, name='x2paddle_155') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_158 = fluid.layers.elementwise_add(x=x2paddle_157, y=x2paddle_152, name='x2paddle_158') \n    x2paddle_159 = fluid.layers.relu(x2paddle_158, name='x2paddle_159') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_162 = fluid.layers.relu(x2paddle_161, name='x2paddle_162') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_167 = fluid.layers.elementwise_add(x=x2paddle_164, y=x2paddle_166, name='x2paddle_167') \n    x2paddle_168 = fluid.layers.relu(x2paddle_167, name='x2paddle_168') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_171 = fluid.layers.relu(x2paddle_170, name='x2paddle_171') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_174 = fluid.layers.elementwise_add(x=x2paddle_173, y=x2paddle_168, name='x2paddle_174') \n    x2paddle_175 = fluid.layers.relu(x2paddle_174, name='x2paddle_175') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_178 = fluid.layers.relu(x2paddle_177, name='x2paddle_178') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_183 = fluid.layers.elementwise_add(x=x2paddle_180, y=x2paddle_182, name='x2paddle_183') \n    x2paddle_184 = fluid.layers.relu(x2paddle_183, name='x2paddle_184') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_187 = fluid.layers.relu(x2paddle_186, name='x2paddle_187') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_190 = fluid.layers.elementwise_add(x=x2paddle_189, y=x2paddle_184, name='x2paddle_190') \n    x2paddle_191 = fluid.layers.relu(x2paddle_190, name='x2paddle_191') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_200 = fluid.layers.transpose(x2paddle_199, perm=[0, 2, 1], name='x2paddle_200') \n    x2paddle_201 = fluid.layers.matmul(x=x2paddle_199, y=x2paddle_200, name='x2paddle_201') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_208 = fluid.layers.elementwise_add(x=x2paddle_206, y=x2paddle_207, name='x2paddle_208') \n    x2paddle_209 = fluid.layers.sqrt(x2paddle_208, name='x2paddle_209') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    x2paddle_210 = fluid.layers.elementwise_add(x=x2paddle_210_mm, y=x2paddle_fc_bias, name='x2paddle_210') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109912879028929
      ],
      "excerpt": "output = exe.run(eval_program, \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.871448378734942
      ],
      "excerpt": "python ppdet/modeling/tests/test_architectures.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009621161166962
      ],
      "excerpt": "python -u tools/infer.py -c contrib/VehicleDetection/vehicle_yolov3_darknet.yml \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810094876824159
      ],
      "excerpt": "                         --infer_dir contrib/VehicleDetection/demo \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8830059115956725,
        0.810094876824159
      ],
      "excerpt": "                         --output_dir contrib/VehicleDetection/demo/output \n\u68c0\u6d4b\u7ed3\u679c\u4fdd\u5b58\u5728 contrib\\VehicleDetection\\demo \u76ee\u5f55\u4e0b\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u8fd0\u884c demo_img.py\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9151270764930737
      ],
      "excerpt": "\u4e0b\u8f7d\u6743\u91cd\u6587\u4ef6\uff0c\u653e\u5230 src \u6587\u4ef6\u5939\u4e0b\u9762\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9180112712321942
      ],
      "excerpt": "\u9996\u5148\u8fd0\u884c torch2onnx.py\uff0c\u5c06 pth \u6a21\u578b\u8f6c\u6362\u4e3a onnx \u4e2d\u95f4\u6a21\u578b\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.91892912920148
      ],
      "excerpt": "\u6b64\u65f6\u5c06 model.py \u66ff\u6362\u4e3a\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8133946065358566,
        0.8218017731780631
      ],
      "excerpt": "from paddle.fluid.initializer import Constant \nfrom paddle.fluid.param_attr import ParamAttr \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8557517560727701,
        0.8557517560727701,
        0.8557517560727701,
        0.8557517560727701,
        0.8557517560727701,
        0.8920232437331838
      ],
      "excerpt": "    x2paddle_124 = fluid.layers.fill_constant(shape=[1], dtype='int32', value=0) \n    x2paddle_193 = fluid.layers.fill_constant(shape=[1], dtype='int32', value=512) \n    x2paddle_194 = fluid.layers.fill_constant(shape=[1], dtype='int32', value=1) \n    x2paddle_202 = fluid.layers.fill_constant(shape=[1], dtype='int32', value=262144) \n    x2paddle_207 = fluid.layers.fill_constant(shape=[1], dtype='float32', value=9.999999747378752e-06) \n    #: x2paddle_input_1 = fluid.layers.data(dtype='float32', shape=[1, 3, 224, 224], name='x2paddle_input_1', append_batch_size=False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8366610572856441,
        0.8366610572856441
      ],
      "excerpt": "    x2paddle_fc_bias = fluid.layers.create_parameter(dtype='float32', shape=[19], name='x2paddle_fc_bias', attr='x2paddle_fc_bias', default_initializer=Constant(0.0)) \n    x2paddle_fc_weight = fluid.layers.create_parameter(dtype='float32', shape=[19, 262144], name='x2paddle_fc_weight', attr='x2paddle_fc_weight', default_initializer=Constant(0.0)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_127 = fluid.layers.batch_norm(x2paddle_126, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_1_weight', bias_attr='x2paddle_features_1_bias', moving_mean_name='x2paddle_features_1_running_mean', moving_variance_name='x2paddle_features_1_running_var', use_global_stats=False, name='x2paddle_127') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8302710621671605
      ],
      "excerpt": "    x2paddle_129 = fluid.layers.pool2d(x2paddle_128, pool_size=[3, 3], pool_type='max', pool_stride=[2, 2], pool_padding=[1, 1], ceil_mode=False, name='x2paddle_129', exclusive=False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_131 = fluid.layers.batch_norm(x2paddle_130, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_4_0_bn1_weight', bias_attr='x2paddle_features_4_0_bn1_bias', moving_mean_name='x2paddle_features_4_0_bn1_running_mean', moving_variance_name='x2paddle_features_4_0_bn1_running_var', use_global_stats=False, name='x2paddle_131') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_134 = fluid.layers.batch_norm(x2paddle_133, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_4_0_bn2_weight', bias_attr='x2paddle_features_4_0_bn2_bias', moving_mean_name='x2paddle_features_4_0_bn2_running_mean', moving_variance_name='x2paddle_features_4_0_bn2_running_var', use_global_stats=False, name='x2paddle_134') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_138 = fluid.layers.batch_norm(x2paddle_137, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_4_1_bn1_weight', bias_attr='x2paddle_features_4_1_bn1_bias', moving_mean_name='x2paddle_features_4_1_bn1_running_mean', moving_variance_name='x2paddle_features_4_1_bn1_running_var', use_global_stats=False, name='x2paddle_138') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_141 = fluid.layers.batch_norm(x2paddle_140, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_4_1_bn2_weight', bias_attr='x2paddle_features_4_1_bn2_bias', moving_mean_name='x2paddle_features_4_1_bn2_running_mean', moving_variance_name='x2paddle_features_4_1_bn2_running_var', use_global_stats=False, name='x2paddle_141') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8186543683837219,
        0.8186543683837219,
        0.8876439852133265,
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_144 = fluid.layers.conv2d(x2paddle_143, num_filters=128, filter_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, param_attr='x2paddle_features_5_0_conv1_weight', name='x2paddle_144', bias_attr=False) \n    x2paddle_149 = fluid.layers.conv2d(x2paddle_143, num_filters=128, filter_size=[1, 1], stride=[2, 2], padding=[0, 0], dilation=[1, 1], groups=1, param_attr='x2paddle_features_5_0_downsample_0_weight', name='x2paddle_149', bias_attr=False) \n    x2paddle_145 = fluid.layers.batch_norm(x2paddle_144, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_5_0_bn1_weight', bias_attr='x2paddle_features_5_0_bn1_bias', moving_mean_name='x2paddle_features_5_0_bn1_running_mean', moving_variance_name='x2paddle_features_5_0_bn1_running_var', use_global_stats=False, name='x2paddle_145') \n    x2paddle_150 = fluid.layers.batch_norm(x2paddle_149, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_5_0_downsample_1_weight', bias_attr='x2paddle_features_5_0_downsample_1_bias', moving_mean_name='x2paddle_features_5_0_downsample_1_running_mean', moving_variance_name='x2paddle_features_5_0_downsample_1_running_var', use_global_stats=False, name='x2paddle_150') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8186543683837219,
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_147 = fluid.layers.conv2d(x2paddle_146, num_filters=128, filter_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, param_attr='x2paddle_features_5_0_conv2_weight', name='x2paddle_147', bias_attr=False) \n    x2paddle_148 = fluid.layers.batch_norm(x2paddle_147, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_5_0_bn2_weight', bias_attr='x2paddle_features_5_0_bn2_bias', moving_mean_name='x2paddle_features_5_0_bn2_running_mean', moving_variance_name='x2paddle_features_5_0_bn2_running_var', use_global_stats=False, name='x2paddle_148') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8186543683837219,
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_153 = fluid.layers.conv2d(x2paddle_152, num_filters=128, filter_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, param_attr='x2paddle_features_5_1_conv1_weight', name='x2paddle_153', bias_attr=False) \n    x2paddle_154 = fluid.layers.batch_norm(x2paddle_153, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_5_1_bn1_weight', bias_attr='x2paddle_features_5_1_bn1_bias', moving_mean_name='x2paddle_features_5_1_bn1_running_mean', moving_variance_name='x2paddle_features_5_1_bn1_running_var', use_global_stats=False, name='x2paddle_154') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8186543683837219,
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_156 = fluid.layers.conv2d(x2paddle_155, num_filters=128, filter_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, param_attr='x2paddle_features_5_1_conv2_weight', name='x2paddle_156', bias_attr=False) \n    x2paddle_157 = fluid.layers.batch_norm(x2paddle_156, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_5_1_bn2_weight', bias_attr='x2paddle_features_5_1_bn2_bias', moving_mean_name='x2paddle_features_5_1_bn2_running_mean', moving_variance_name='x2paddle_features_5_1_bn2_running_var', use_global_stats=False, name='x2paddle_157') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265,
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_161 = fluid.layers.batch_norm(x2paddle_160, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_6_0_bn1_weight', bias_attr='x2paddle_features_6_0_bn1_bias', moving_mean_name='x2paddle_features_6_0_bn1_running_mean', moving_variance_name='x2paddle_features_6_0_bn1_running_var', use_global_stats=False, name='x2paddle_161') \n    x2paddle_166 = fluid.layers.batch_norm(x2paddle_165, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_6_0_downsample_1_weight', bias_attr='x2paddle_features_6_0_downsample_1_bias', moving_mean_name='x2paddle_features_6_0_downsample_1_running_mean', moving_variance_name='x2paddle_features_6_0_downsample_1_running_var', use_global_stats=False, name='x2paddle_166') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_164 = fluid.layers.batch_norm(x2paddle_163, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_6_0_bn2_weight', bias_attr='x2paddle_features_6_0_bn2_bias', moving_mean_name='x2paddle_features_6_0_bn2_running_mean', moving_variance_name='x2paddle_features_6_0_bn2_running_var', use_global_stats=False, name='x2paddle_164') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_170 = fluid.layers.batch_norm(x2paddle_169, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_6_1_bn1_weight', bias_attr='x2paddle_features_6_1_bn1_bias', moving_mean_name='x2paddle_features_6_1_bn1_running_mean', moving_variance_name='x2paddle_features_6_1_bn1_running_var', use_global_stats=False, name='x2paddle_170') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_173 = fluid.layers.batch_norm(x2paddle_172, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_6_1_bn2_weight', bias_attr='x2paddle_features_6_1_bn2_bias', moving_mean_name='x2paddle_features_6_1_bn2_running_mean', moving_variance_name='x2paddle_features_6_1_bn2_running_var', use_global_stats=False, name='x2paddle_173') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265,
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_177 = fluid.layers.batch_norm(x2paddle_176, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_7_0_bn1_weight', bias_attr='x2paddle_features_7_0_bn1_bias', moving_mean_name='x2paddle_features_7_0_bn1_running_mean', moving_variance_name='x2paddle_features_7_0_bn1_running_var', use_global_stats=False, name='x2paddle_177') \n    x2paddle_182 = fluid.layers.batch_norm(x2paddle_181, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_7_0_downsample_1_weight', bias_attr='x2paddle_features_7_0_downsample_1_bias', moving_mean_name='x2paddle_features_7_0_downsample_1_running_mean', moving_variance_name='x2paddle_features_7_0_downsample_1_running_var', use_global_stats=False, name='x2paddle_182') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_180 = fluid.layers.batch_norm(x2paddle_179, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_7_0_bn2_weight', bias_attr='x2paddle_features_7_0_bn2_bias', moving_mean_name='x2paddle_features_7_0_bn2_running_mean', moving_variance_name='x2paddle_features_7_0_bn2_running_var', use_global_stats=False, name='x2paddle_180') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_186 = fluid.layers.batch_norm(x2paddle_185, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_7_1_bn1_weight', bias_attr='x2paddle_features_7_1_bn1_bias', moving_mean_name='x2paddle_features_7_1_bn1_running_mean', moving_variance_name='x2paddle_features_7_1_bn1_running_var', use_global_stats=False, name='x2paddle_186') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876439852133265
      ],
      "excerpt": "    x2paddle_189 = fluid.layers.batch_norm(x2paddle_188, momentum=0.8999999761581421, epsilon=9.999999747378752e-06, data_layout='NCHW', is_test=True, param_attr='x2paddle_features_7_1_bn2_weight', bias_attr='x2paddle_features_7_1_bn2_bias', moving_mean_name='x2paddle_features_7_1_bn2_running_mean', moving_variance_name='x2paddle_features_7_1_bn2_running_var', use_global_stats=False, name='x2paddle_189') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8618158706699035
      ],
      "excerpt": "    x2paddle_192 = fluid.layers.pool2d(x2paddle_191, pool_type='avg', global_pooling=True, name='x2paddle_192') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8279506493509988
      ],
      "excerpt": "    x2paddle_199 = fluid.layers.reshape(x2paddle_192, name='x2paddle_199', actual_shape=x2paddle_198_cast, shape=[1, 512, 1]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8279506493509988
      ],
      "excerpt": "    x2paddle_206 = fluid.layers.reshape(x2paddle_201, name='x2paddle_206', actual_shape=x2paddle_205_cast, shape=[1, 262144]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474154573479677
      ],
      "excerpt": "    x2paddle_210_mm = fluid.layers.matmul(x=x2paddle_209, y=x2paddle_fc_weight, transpose_x=False, transpose_y=True, alpha=1.0, name='x2paddle_210_mm') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8401558704798054
      ],
      "excerpt": "    import os \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8022502357620968
      ],
      "excerpt": "    b = os.path.exists(os.path.join(param_dir, var.name)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u7136\u540e\u521b\u5efa\u8c03\u7528 Paddle \u6a21\u578b\u7684 test_img.py\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674,
        0.8934477375241742,
        0.9133368656218674,
        0.9133368656218674,
        0.9457175861910134
      ],
      "excerpt": "import cv2 \nfrom pd_model.model_with_code.model import x2paddle_net \nimport argparse \nimport functools \nimport numpy as np \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8044146895679722
      ],
      "excerpt": "from PIL import ImageFont, ImageDraw, Image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8380395427262153
      ],
      "excerpt": "def putText(img, text, x, y, color=(0, 0, 255)): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8547161554445972,
        0.8993078154783467
      ],
      "excerpt": "draw.text((x, y), text, font=font, fill=(b, g, r, a)) \nimg = np.array(img_pil) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9002731814502585,
        0.8944701086462882
      ],
      "excerpt": "img_mean = np.array(mean).reshape((3, 1, 1)) \nimg_std = np.array(std).reshape((3, 1, 1)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8319657668353034
      ],
      "excerpt": "img = np.expand_dims(img, axis=0) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8215302448842597,
        0.8825049231451977
      ],
      "excerpt": "    fetch_list = [out.name] \noutput = exe.run(eval_program, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9446591968001764
      ],
      "excerpt": "color_idx, direction_idx, type_idx = get_predict(np.array(output)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8588295558101173,
        0.8289669050403863
      ],
      "excerpt": "    output = np.squeeze(output) \n    pred_color = output[:9] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "use_gpu = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8316543008734136
      ],
      "excerpt": "        name='image', shape=[3, 224, 224], dtype='float32') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579
      ],
      "excerpt": ": im_pt = './a.jpg' \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Sharpiless/yolov3-vehicle-detection-paddle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "yolov3-vehicle-detection-paddle",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "yolov3-vehicle-detection-paddle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sharpiless",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sharpiless/yolov3-vehicle-detection-paddle/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 86,
      "date": "Sun, 26 Dec 2021 10:42:44 GMT"
    },
    "technique": "GitHub API"
  }
}