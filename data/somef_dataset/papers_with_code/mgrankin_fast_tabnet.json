{
  "citation": [
    {
      "confidence": [
        0.9507374082549614
      ],
      "excerpt": "def plot_explain(masks, lbls, figsize=(12,12)): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "| \u001b[0m 10      \u001b[0m | \u001b[0m 0.7983  \u001b[0m | \u001b[0m 5.203   \u001b[0m | \u001b[0m 7.719   \u001b[0m | \u001b[0m 3.407   \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| \u001b[0m 12      \u001b[0m | \u001b[0m 0.8161  \u001b[0m | \u001b[0m 7.083   \u001b[0m | \u001b[0m 1.385   \u001b[0m | \u001b[0m 2.806   \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:30</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:30</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| \u001b[0m 30      \u001b[0m | \u001b[0m 0.8262  \u001b[0m | \u001b[0m 1.217   \u001b[0m | \u001b[0m 5.622   \u001b[0m | \u001b[0m 0.0     \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654671031158477
      ],
      "excerpt": "| \u001b[0m 37      \u001b[0m | \u001b[0m 0.821   \u001b[0m | \u001b[0m 5.093   \u001b[0m | \u001b[0m 0.172   \u001b[0m | \u001b[0m 1.64    \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "      <td>00:12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "      <td>00:10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "{key: 2**int(value) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mgrankin/fast_tabnet",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to contribute\nHow to get started\nBefore anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\nnbdev_install_git_hooks\nDid you find a bug?\n\nEnsure the bug was not already reported by searching on GitHub under Issues.\nIf you're unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\nBe sure to add the complete error messages.\n\nDid you write a patch that fixes a bug?\n\nOpen a new GitHub pull request with the patch.\nEnsure that your PR includes a test that fails without your patch, and pass with it.\nEnsure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n\nPR submission guidelines\n\nKeep each PR focused. While it's more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\nDo not mix style changes/fixes with \"functional\" changes. It's very difficult to review such PRs and it most likely get rejected.\nDo not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\nDo not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\nIf, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won't need to review the whole PR again. In the exception case where you realize it'll take many many commits to complete the requests, then it's probably best to close the PR, do the work and then submit it again. Use common sense where you'd choose one way over another.\n\nDo you want to contribute to the documentation?\n\nDocs are automatically created from the notebooks in the nbs folder.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-30T08:49:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-23T06:46:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9612511913949554
      ],
      "excerpt": "This is an adaptation of TabNet (Attention-based network for tabular data) for fastai (>=2.0) library. The original paper https://arxiv.org/pdf/1908.07442.pdf. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.914497777801024
      ],
      "excerpt": "feature_importances = tabnet_feature_importances(learn.model, dl) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.914497777801024
      ],
      "excerpt": "res_explain, res_masks = tabnet_explain(learn.model, dl) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9707693691410405,
        0.8602961202726529
      ],
      "excerpt": "    model = TabNetModel(emb_szs, len(to.cont_names), dls.c, n_d=n_d, n_a=n_a, n_steps=n_steps, gamma=1.5) \n    learn = Learner(dls, model, CrossEntropyLossFlat(), opt_func=opt_func, lr=3e-2, metrics=[accuracy]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9660236578441325
      ],
      "excerpt": "This implementation of Bayesian Optimization doesn't work naturally with descreet values. That's why we use wrapper with lru_cache. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9609905209567614
      ],
      "excerpt": ": Bounded region of parameter space \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "to = TabularPandas(df_small, procs, cat_names, cont_names, y_names=\"salary\", y_block = CategoryBlock(),  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.940969666387596
      ],
      "excerpt": "to_valid = to.new(df_valid) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.940969666387596
      ],
      "excerpt": "        to_new = to.new(df_small) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762,
        0.9693233393948762,
        0.9707693691410405
      ],
      "excerpt": "dls = to.dataloaders() \nemb_szs = get_emb_sz(to) \nmodel = TabNetModel(emb_szs, len(to.cont_names), dls.c, n_d=8, n_a=32, n_steps=1); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8602961202726529
      ],
      "excerpt": "learn = Learner(dls, model, CrossEntropyLossFlat(), opt_func=opt_func, lr=3e-2, metrics=[accuracy]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "TabNet for fastai ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mgrankin/fast_tabnet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Mon, 27 Dec 2021 10:11:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mgrankin/fast_tabnet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mgrankin/fast_tabnet",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/mgrankin/fast_tabnet/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/mgrankin/fast_tabnet/master/index.ipynb",
      "https://raw.githubusercontent.com/mgrankin/fast_tabnet/master/00_core.ipynb",
      "https://raw.githubusercontent.com/mgrankin/fast_tabnet/master/01_examples.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`pip install fast_tabnet`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9962806677453239
      ],
      "excerpt": "You may need to install the optimizer pip install bayesian-optimization \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8424760504462719
      ],
      "excerpt": ": per sample interpretation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.909053704457146
      ],
      "excerpt": "plt.bar(dl.x_names, feature_importances, color='g') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8808185061092532,
        0.9117942243384688,
        0.9005646269537304,
        0.9005646269537304,
        0.871332349089517,
        0.890223350808474
      ],
      "excerpt": "    fig = plt.figure(figsize=figsize) \n    ax = fig.add_axes([0.1, 0.1, 0.8, 0.8]) \n    plt.yticks(np.arange(0, len(masks), 1.0)) \n    plt.xticks(np.arange(0, len(masks[0]), 1.0)) \n    ax.set_xticklabels(lbls, rotation=90) \n    plt.ylabel('Sample Number') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from functools import lru_cache \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8376577941597105
      ],
      "excerpt": "    model = TabNetModel(emb_szs, len(to.cont_names), dls.c, n_d=n_d, n_a=n_a, n_steps=n_steps, gamma=1.5) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from bayes_opt import BayesianOptimization \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811854372964597
      ],
      "excerpt": "    init_points=15, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811854372964597
      ],
      "excerpt": "| \u001b[0m 15      \u001b[0m | \u001b[0m 0.8215  \u001b[0m | \u001b[0m 6.464   \u001b[0m | \u001b[0m 7.954   \u001b[0m | \u001b[0m 2.647   \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824072383475012
      ],
      "excerpt": "      <td>00:45</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8702815774991463
      ],
      "excerpt": "| \u001b[0m 45      \u001b[0m | \u001b[0m 0.8262  \u001b[0m | \u001b[0m 0.0     \u001b[0m | \u001b[0m 7.071   \u001b[0m | \u001b[0m 2.071   \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8377621879540922
      ],
      "excerpt": "| \u001b[0m 84      \u001b[0m | \u001b[0m 0.8253  \u001b[0m | \u001b[0m 0.1961  \u001b[0m | \u001b[0m 4.123   \u001b[0m | \u001b[0m 0.02039 \u001b[0m | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8061231085331676,
        0.8588335306753289
      ],
      "excerpt": "{key: 2**int(value) \n  for key, value in optimizer.max['params'].items()} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8236722510142804
      ],
      "excerpt": "    return df_main.sample(dataset_size).copy() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8390764544314498
      ],
      "excerpt": "                   splits=None, do_setup=True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "val_dl = TabDataLoader(to_valid.train) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "        trn_dl = TabDataLoader(to_new.train) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361349576714179
      ],
      "excerpt": "      <td>00:01</td> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mgrankin/fast_tabnet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'/ This license pertains to the docs template, except for the Navgoco jQuery component. /\\n\\nThe MIT License (MIT)\\n\\nOriginal theme: Copyright (c) 2016 Tom Johnson\\nModifications: Copyright (c) 2017 onwards fast.ai, Inc\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TabNet for fastai",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "fast_tabnet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mgrankin",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mgrankin/fast_tabnet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 109,
      "date": "Mon, 27 Dec 2021 10:11:43 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`model = TabNetModel(emb_szs, n_cont, out_sz, embed_p=0., y_range=None, \n                     n_d=8, n_a=8,\n                     n_steps=3, gamma=1.5, \n                     n_independent=2, n_shared=2, epsilon=1e-15,\n                     virtual_batch_size=128, momentum=0.02)`\n\nParameters `emb_szs, n_cont, out_sz, embed_p, y_range` are the same as for fastai TabularModel.\n\n- n_d : int\n    Dimension of the prediction  layer (usually between 4 and 64)\n- n_a : int\n    Dimension of the attention  layer (usually between 4 and 64)\n- n_steps: int\n    Number of sucessive steps in the newtork (usually betwenn 3 and 10)\n- gamma : float\n    Float above 1, scaling factor for attention updates (usually betwenn 1.0 to 2.0)\n- momentum : float\n    Float value between 0 and 1 which will be used for momentum in all batch norm\n- n_independent : int\n    Number of independent GLU layer in each GLU block (default 2)\n- n_shared : int\n    Number of independent GLU layer in each GLU block (default 2)\n- epsilon: float\n    Avoid log(0), this should be kept very low\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Below is an example from fastai library, but the model in use is TabNet\n\n```python\nfrom fastai.basics import *\nfrom fastai.tabular.all import *\nfrom fast_tabnet.core import *\n```\n\n```python\npath = untar_data(URLs.ADULT_SAMPLE)\ndf = pd.read_csv(path/'adult.csv')\ndf_main,df_test = df.iloc[:-1000].copy(),df.iloc[-1000:].copy()\ndf_main.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>workclass</th>\n      <th>fnlwgt</th>\n      <th>education</th>\n      <th>education-num</th>\n      <th>marital-status</th>\n      <th>occupation</th>\n      <th>relationship</th>\n      <th>race</th>\n      <th>sex</th>\n      <th>capital-gain</th>\n      <th>capital-loss</th>\n      <th>hours-per-week</th>\n      <th>native-country</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>49</td>\n      <td>Private</td>\n      <td>101320</td>\n      <td>Assoc-acdm</td>\n      <td>12.0</td>\n      <td>Married-civ-spouse</td>\n      <td>NaN</td>\n      <td>Wife</td>\n      <td>White</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>1902</td>\n      <td>40</td>\n      <td>United-States</td>\n      <td>&gt;=50k</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>44</td>\n      <td>Private</td>\n      <td>236746</td>\n      <td>Masters</td>\n      <td>14.0</td>\n      <td>Divorced</td>\n      <td>Exec-managerial</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>Male</td>\n      <td>10520</td>\n      <td>0</td>\n      <td>45</td>\n      <td>United-States</td>\n      <td>&gt;=50k</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>38</td>\n      <td>Private</td>\n      <td>96185</td>\n      <td>HS-grad</td>\n      <td>NaN</td>\n      <td>Divorced</td>\n      <td>NaN</td>\n      <td>Unmarried</td>\n      <td>Black</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>0</td>\n      <td>32</td>\n      <td>United-States</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>38</td>\n      <td>Self-emp-inc</td>\n      <td>112847</td>\n      <td>Prof-school</td>\n      <td>15.0</td>\n      <td>Married-civ-spouse</td>\n      <td>Prof-specialty</td>\n      <td>Husband</td>\n      <td>Asian-Pac-Islander</td>\n      <td>Male</td>\n      <td>0</td>\n      <td>0</td>\n      <td>40</td>\n      <td>United-States</td>\n      <td>&gt;=50k</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>42</td>\n      <td>Self-emp-not-inc</td>\n      <td>82297</td>\n      <td>7th-8th</td>\n      <td>NaN</td>\n      <td>Married-civ-spouse</td>\n      <td>Other-service</td>\n      <td>Wife</td>\n      <td>Black</td>\n      <td>Female</td>\n      <td>0</td>\n      <td>0</td>\n      <td>50</td>\n      <td>United-States</td>\n      <td>&lt;50k</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```python\ncat_names = ['workclass', 'education', 'marital-status', 'occupation', \n             'relationship', 'race', 'native-country', 'sex']\ncont_names = ['age', 'fnlwgt', 'education-num']\nprocs = [Categorify, FillMissing, Normalize]\nsplits = RandomSplitter()(range_of(df_main))\n```\n\n```python\nto = TabularPandas(df_main, procs, cat_names, cont_names, y_names=\"salary\", \n                   y_block = CategoryBlock(), splits=splits)\n```\n\n```python\ndls = to.dataloaders(bs=32)\n```\n\n```python\ndls.valid.show_batch()\n```\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>workclass</th>\n      <th>education</th>\n      <th>marital-status</th>\n      <th>occupation</th>\n      <th>relationship</th>\n      <th>race</th>\n      <th>native-country</th>\n      <th>sex</th>\n      <th>education-num_na</th>\n      <th>age</th>\n      <th>fnlwgt</th>\n      <th>education-num</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Private</td>\n      <td>HS-grad</td>\n      <td>Married-civ-spouse</td>\n      <td>Other-service</td>\n      <td>Wife</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Female</td>\n      <td>False</td>\n      <td>39.000000</td>\n      <td>196673.000115</td>\n      <td>9.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Private</td>\n      <td>HS-grad</td>\n      <td>Married-civ-spouse</td>\n      <td>Craft-repair</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Male</td>\n      <td>False</td>\n      <td>32.000000</td>\n      <td>198067.999771</td>\n      <td>9.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>State-gov</td>\n      <td>HS-grad</td>\n      <td>Never-married</td>\n      <td>Adm-clerical</td>\n      <td>Own-child</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Female</td>\n      <td>False</td>\n      <td>18.999999</td>\n      <td>176633.999931</td>\n      <td>9.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Private</td>\n      <td>Some-college</td>\n      <td>Married-civ-spouse</td>\n      <td>Prof-specialty</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Male</td>\n      <td>False</td>\n      <td>67.999999</td>\n      <td>107626.998490</td>\n      <td>10.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Private</td>\n      <td>Masters</td>\n      <td>Never-married</td>\n      <td>Exec-managerial</td>\n      <td>Not-in-family</td>\n      <td>Black</td>\n      <td>United-States</td>\n      <td>Male</td>\n      <td>False</td>\n      <td>29.000000</td>\n      <td>214925.000260</td>\n      <td>14.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Private</td>\n      <td>HS-grad</td>\n      <td>Married-civ-spouse</td>\n      <td>Priv-house-serv</td>\n      <td>Wife</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Female</td>\n      <td>False</td>\n      <td>22.000000</td>\n      <td>200109.000126</td>\n      <td>9.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Private</td>\n      <td>Some-college</td>\n      <td>Never-married</td>\n      <td>Sales</td>\n      <td>Own-child</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Female</td>\n      <td>False</td>\n      <td>18.000000</td>\n      <td>60980.998429</td>\n      <td>10.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Private</td>\n      <td>Some-college</td>\n      <td>Separated</td>\n      <td>Adm-clerical</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Female</td>\n      <td>False</td>\n      <td>28.000000</td>\n      <td>334367.998199</td>\n      <td>10.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Private</td>\n      <td>11th</td>\n      <td>Married-civ-spouse</td>\n      <td>Transport-moving</td>\n      <td>Husband</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Male</td>\n      <td>False</td>\n      <td>49.000000</td>\n      <td>123584.001097</td>\n      <td>7.0</td>\n      <td>&lt;50k</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Private</td>\n      <td>Masters</td>\n      <td>Never-married</td>\n      <td>Prof-specialty</td>\n      <td>Not-in-family</td>\n      <td>White</td>\n      <td>United-States</td>\n      <td>Female</td>\n      <td>False</td>\n      <td>26.000000</td>\n      <td>397316.999922</td>\n      <td>14.0</td>\n      <td>&lt;50k</td>\n    </tr>\n  </tbody>\n</table>\n\n\n```python\nto_tst = to.new(df_test)\nto_tst.process()\nto_tst.all_cols.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>workclass</th>\n      <th>education</th>\n      <th>marital-status</th>\n      <th>occupation</th>\n      <th>relationship</th>\n      <th>race</th>\n      <th>native-country</th>\n      <th>sex</th>\n      <th>education-num_na</th>\n      <th>age</th>\n      <th>fnlwgt</th>\n      <th>education-num</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>31561</th>\n      <td>5</td>\n      <td>2</td>\n      <td>5</td>\n      <td>9</td>\n      <td>3</td>\n      <td>3</td>\n      <td>40</td>\n      <td>2</td>\n      <td>1</td>\n      <td>-1.505833</td>\n      <td>-0.559418</td>\n      <td>-1.202170</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>31562</th>\n      <td>2</td>\n      <td>12</td>\n      <td>5</td>\n      <td>2</td>\n      <td>5</td>\n      <td>3</td>\n      <td>40</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-1.432653</td>\n      <td>0.421241</td>\n      <td>-0.418032</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>31563</th>\n      <td>5</td>\n      <td>7</td>\n      <td>3</td>\n      <td>4</td>\n      <td>1</td>\n      <td>5</td>\n      <td>40</td>\n      <td>2</td>\n      <td>1</td>\n      <td>-0.115406</td>\n      <td>0.132868</td>\n      <td>-1.986307</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>31564</th>\n      <td>8</td>\n      <td>12</td>\n      <td>3</td>\n      <td>9</td>\n      <td>1</td>\n      <td>5</td>\n      <td>40</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1.494561</td>\n      <td>0.749805</td>\n      <td>-0.418032</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>31565</th>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3</td>\n      <td>40</td>\n      <td>2</td>\n      <td>1</td>\n      <td>-0.481308</td>\n      <td>7.529798</td>\n      <td>-0.418032</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```python\nemb_szs = get_emb_sz(to)\n```\n\nThat's the use of the model\n\n```python\nmodel = TabNetModel(emb_szs, len(to.cont_names), dls.c, n_d=8, n_a=8, n_steps=5, mask_type='entmax');\n```\n\n```python\nlearn = Learner(dls, model, CrossEntropyLossFlat(), opt_func=Adam, lr=3e-2, metrics=[accuracy])\n```\n\n```python\nlearn.lr_find()\n```\n\n\n\n\n\n\n\n\n    SuggestedLRs(lr_min=0.2754228591918945, lr_steep=1.9054607491852948e-06)\n\n\n\n\n![png](docs/images/output_19_2.png)\n\n\n```python\nlearn.fit_one_cycle(5)\n```\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: left;\">\n      <th>epoch</th>\n      <th>train_loss</th>\n      <th>valid_loss</th>\n      <th>accuracy</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>0.446274</td>\n      <td>0.414451</td>\n      <td>0.817015</td>\n      <td>00:30</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>0.380002</td>\n      <td>0.393030</td>\n      <td>0.818916</td>\n      <td>00:30</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>0.371149</td>\n      <td>0.359802</td>\n      <td>0.832066</td>\n      <td>00:30</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>0.349027</td>\n      <td>0.352255</td>\n      <td>0.835868</td>\n      <td>00:30</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>0.355339</td>\n      <td>0.349360</td>\n      <td>0.836819</td>\n      <td>00:30</td>\n    </tr>\n  </tbody>\n</table>\n\n\n",
      "technique": "Header extraction"
    }
  ]
}