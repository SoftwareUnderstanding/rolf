{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2005.07274"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    @InProceedings{badki2020Bi3D,\n    author = {Badki, Abhishek and Troccoli, Alejandro and Kim, Kihwan and Kautz, Jan and Sen, Pradeep and Gallo, Orazio},\n    title = {{Bi3D}: {S}tereo Depth Estimation via Binary Classifications},\n    booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\n    year = {2020}\n    }\n\nor the arXiv paper\n\n    @InProceedings{badki2020Bi3D,\n    author = {Badki, Abhishek and Troccoli, Alejandro and Kim, Kihwan and Kautz, Jan and Sen, Pradeep and Gallo, Orazio},\n    title = {{Bi3D}: {S}tereo Depth Estimation via Binary Classifications},\n    booktitle = {arXiv preprint arXiv:2005.07274},\n    year = {2020}\n    }\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{badki2020Bi3D,\nauthor = {Badki, Abhishek and Troccoli, Alejandro and Kim, Kihwan and Kautz, Jan and Sen, Pradeep and Gallo, Orazio},\ntitle = {{Bi3D}: {S}tereo Depth Estimation via Binary Classifications},\nbooktitle = {arXiv preprint arXiv:2005.07274},\nyear = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{badki2020Bi3D,\nauthor = {Badki, Abhishek and Troccoli, Alejandro and Kim, Kihwan and Kautz, Jan and Sen, Pradeep and Gallo, Orazio},\ntitle = {{Bi3D}: {S}tereo Depth Estimation via Binary Classifications},\nbooktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\nyear = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9730097197343727,
        0.9922876713345625
      ],
      "excerpt": "Abhishek Badki, Alejandro Troccoli, Kihwan Kim, Jan Kautz, Pradeep Sen, and Orazio Gallo<br> \nIEEE CVPR 2020<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NVlabs/Bi3D",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-30T21:45:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-16T11:46:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "Abhishek Badki, Alejandro Troccoli, Kihwan Kim, Jan Kautz, Pradeep Sen, and Orazio Gallo<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.992390445833743
      ],
      "excerpt": "Stereo-based depth estimation is a cornerstone of computer vision, with state-of-the-art methods delivering accurate results in real time. For several applications such as autonomous navigation, however, it may be useful to trade accuracy for lower latency. We present Bi3D, a method that estimates depth via a series of binary classifications. Rather than testing if objects are at a particular depth D, as existing stereo methods do, it classifies them as being closer or farther than D. This property offers a powerful mechanism to balance accuracy and latency. Given a strict time budget, Bi3D can detect objects closer than a given distance in as little as a few milliseconds, or estimate depth with arbitrarily coarse quantization, with complexity linear with the number of quantization levels. Bi3D can also use the allotted quantization levels to get continuous depth, but in a specific depth range. For standard stereo (i.e., continuous depth on the whole range), our method is close to or on par with state-of-the-art, finely tuned stereo methods. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NVlabs/Bi3D/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Fri, 24 Dec 2021 03:32:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/NVlabs/Bi3D/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "NVlabs/Bi3D",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/NVlabs/Bi3D/master/src/run_demo_kitti15.sh",
      "https://raw.githubusercontent.com/NVlabs/Bi3D/master/src/run_demo_sf.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We offer two ways of setting up your environemnt, through Docker or Conda.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8003335216651063,
        0.9272102707687195
      ],
      "excerpt": "For convenience, we provide a Dockerfile to build a container image to run the code. The image will contain the Python dependencies. \nSystem requirements: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285800125392535
      ],
      "excerpt": "NVIDIA GPU driver. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9625681084356913,
        0.8863490959651454,
        0.9678281008604597,
        0.9770335174395833
      ],
      "excerpt": "All dependencies will be installed automatically using the following: \nconda env create -f envs/bi3d_conda_env.yml \nYou can activate the environment by running: \nconda activate bi3d \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8005051905590538
      ],
      "excerpt": "docker run --rm -it --gpus=all -v $(pwd):/bi3d -w /bi3d --net=host --ipc=host bi3d:latest /bin/bash \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/NVlabs/Bi3D/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'# NVIDIA Source Code License for Bi3D\\n\\n## 1. Definitions\\n\\n\\xe2\\x80\\x9cLicensor\\xe2\\x80\\x9d means any person or entity that distributes its Work.\\n\\n\\xe2\\x80\\x9cSoftware\\xe2\\x80\\x9d means the original work of authorship made available under this License.\\n\\n\\xe2\\x80\\x9cWork\\xe2\\x80\\x9d means the Software and any additions to or derivative works of the Software that are made available under this License.\\n\\n\\xe2\\x80\\x9cNVIDIA Processors\\xe2\\x80\\x9d means any central processing unit (CPU), graphics processing unit (GPU), field-programmable gate array (FPGA), application-specific integrated circuit (ASIC) or any combination thereof designed, made, sold, or provided by NVIDIA or its affiliates.\\n\\nThe terms \\xe2\\x80\\x9creproduce,\\xe2\\x80\\x9d \\xe2\\x80\\x9creproduction,\\xe2\\x80\\x9d \\xe2\\x80\\x9cderivative works,\\xe2\\x80\\x9d and \\xe2\\x80\\x9cdistribution\\xe2\\x80\\x9d have the meaning as provided under U.S. copyright law; provided, however, that for the purposes of this License, derivative works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work.\\n\\nWorks, including the Software, are \\xe2\\x80\\x9cmade available\\xe2\\x80\\x9d under this License by including in or with the Work either (a) a copyright notice referencing the applicability of this License to the Work, or (b) a copy of this License.\\n\\n## 2. License Grant\\n\\n### 2.1 Copyright Grant.\\nSubject to the terms and conditions of this License, each Licensor grants to you a perpetual, worldwide, non-exclusive, royalty-free, copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense and distribute its Work and any resulting derivative works in any form.\\n\\n## 3. Limitations\\n\\n### 3.1 Redistribution.\\nYou may reproduce or distribute the Work only if (a) you do so under this License, (b) you include a complete copy of this License with your distribution, and (c) you retain without modification any copyright, patent, trademark, or attribution notices that are present in the Work.\\n\\n### 3.2 Derivative Works.\\nYou may specify that additional or different terms apply to the use, reproduction, and distribution of your derivative works of the Work (\\xe2\\x80\\x9cYour Terms\\xe2\\x80\\x9d) only if (a) Your Terms provide that the use limitation in Section 3.3 applies to your derivative works, and (b) you identify the specific derivative works that are subject to Your Terms. Notwithstanding Your Terms, this License (including the redistribution requirements in Section 3.1) will continue to apply to the Work itself.\\n\\n### 3.3 Use Limitation.\\nThe Work and any derivative works thereof only may be used or intended for use non-commercially and with NVIDIA Processors. Notwithstanding the foregoing, NVIDIA and its affiliates may use the Work and any derivative works commercially. As used herein, \\xe2\\x80\\x9cnon-commercially\\xe2\\x80\\x9d means for research or evaluation purposes only.\\n\\n### 3.4 Patent Claims.\\nIf you bring or threaten to bring a patent claim against any Licensor (including any claim, cross-claim or counterclaim in a lawsuit) to enforce any patents that you allege are infringed by any Work, then your rights under this License from such Licensor (including the grant in Section 2.1) will terminate immediately.\\n\\n### 3.5 Trademarks.\\nThis License does not grant any rights to use any Licensor\\xe2\\x80\\x99s or its affiliates\\xe2\\x80\\x99 names, logos, or trademarks, except as necessary to reproduce the notices described in this License.\\n\\n### 3.6 Termination.\\nIf you violate any term of this License, then your rights under this License (including the grant in Section 2.1) will terminate immediately.\\n\\n## 4. Disclaimer of Warranty.\\n\\nTHE WORK IS PROVIDED \\xe2\\x80\\x9cAS IS\\xe2\\x80\\x9d WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WARRANTIES OR CONDITIONS OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR NON-INFRINGEMENT. YOU BEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER THIS LICENSE.\\n\\n## 5. Limitation of Liability.\\n\\nEXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE SHALL ANY LICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATED TO THIS LICENSE, THE USE OR INABILITY TO USE THE WORK (INCLUDING BUT NOT LIMITED TO LOSS OF GOODWILL, BUSINESS INTERRUPTION, LOST PROFITS OR DATA, COMPUTER FAILURE OR MALFUNCTION, OR ANY OTHER COMMERCIAL DAMAGES OR LOSSES), EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Bi3D &mdash; Official PyTorch Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Bi3D",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "NVlabs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NVlabs/Bi3D/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ncd src\n#: RUN DEMO FOR SCENEFLOW DATASET \nsh run_demo_sf.sh\n#: RUN DEMO FOR KITTI15 DATASET\nsh run_demo_kitti15.sh\n```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 134,
      "date": "Fri, 24 Dec 2021 03:32:24 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ncd src\n#: RUN DEMO FOR SCENEFLOW DATASET \nsh run_demo_sf.sh\n#: RUN DEMO FOR KITTI15 DATASET\nsh run_demo_kitti15.sh\n```\n",
      "technique": "Header extraction"
    }
  ]
}