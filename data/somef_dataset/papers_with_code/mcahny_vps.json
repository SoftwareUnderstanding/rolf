{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project has used utility functions from other wonderful open-sourced libraries. We would especially thank the authors of:\n* [mmdetection](https://github.com/open-mmlab/mmdetection)\n* [UPSNet](https://gitub.com/uber-research/UPSNet)\n* [FlowNet2](https://NVIDIA/flownet2-pytorch)\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2006.11339"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this toolbox or benchmark in your research, please cite this project.\n\n```bibtex\n@inproceedings{kim2020vps,\n  title={Video Panoptic Segmentation},\n  author={Dahun Kim and Sanghyun Woo and Joon-Young Lee and In So Kweon},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2020}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{kim2020vps,\n  title={Video Panoptic Segmentation},\n  author={Dahun Kim and Sanghyun Woo and Joon-Young Lee and In So Kweon},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2020}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mcahny/vps",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any questions regarding the repo, please contact Dahun Kim (mcahny01@gmail.com) or create an issue.\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-21T21:38:58Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T14:48:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.923948005372906
      ],
      "excerpt": "\u251c\u2500\u2500 tools \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u251c\u2500\u2500 data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8125709194934024,
        0.8125709194934024
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 im_all_info_val_city_vps.json (for inference) \n\u2502   \u2502   \u251c\u2500\u2500 im_all_info_test_city_vps.json (for inference) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8521010501345996
      ],
      "excerpt": "Cityscapes-VPS test split currently only allows evaluation on the codalab server. Please upload submission.zip to <a href=\"https://competitions.codalab.org/competitions/26183\">Codalab server</a> to see actual performances. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official pytorch implementation for \"Video Panoptic Segmentation\" (CVPR 2020 Oral)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mcahny/vps/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 42,
      "date": "Sat, 25 Dec 2021 07:28:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mcahny/vps/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mcahny/vps",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/mcahny/vps/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/mcahny/vps/master/init_flownet.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/init_upsnet.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/download_weights.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/prepare_data/merge_datasets.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/prepare_data/create_panoptic_labels.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/tools/slurm_train.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/tools/slurm_test.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/tools/dist_test.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/tools/dist_train.sh",
      "https://raw.githubusercontent.com/mcahny/vps/master/mmdet/models/flow_modules/install.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "a. This repo is built based on [mmdetection](https://github.com/open-mmlab/mmdetection) commit hash `4357697`. Our modifications for VPSNet implementation are listed [here](mmdet/readme.txt). Please refer to [INSTALL.md](docs/INSTALL.md) to install the library.\nYou can use following commands to create conda env with related dependencies.\n```\nconda create -n vps python=3.7 -y\nconda activate vps\nconda install pytorch=1.4 torchvision cudatoolkit=10.0 -c pytorch -y\npip install -r requirements.txt\npip install \"git+https://github.com/cocodataset/cocoapi.git#:subdirectory=PythonAPI\"\npip install \"git+https://github.com/cocodataset/panopticapi.git\"\npip install -v -e . \n```\nb. You also need to install dependencies for [Flownet2](https://github.com/NVIDIA/flownet2-pytorch) and [UPSNet](https://github.com/uber-research/UPSNet) modules. \n```\nbash ./init_flownet.sh\nbash ./init_upsnet.sh\n```\n\nc. You may also need to download some pretrained weights.\n```\npip install gdown\nbash ./download_weights.sh\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8195587872140637
      ],
      "excerpt": "This repo is tested under Python 3.7, PyTorch 1.4, Cuda 10.0, and mmcv==0.2.14. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8642478986686338,
        0.8388139670941306
      ],
      "excerpt": "<img src=\"./image/landscape.png\" width=\"800\"> <br/> \n<img src=\"./image/panoptic_pair_240.gif\" width=\"800\"> <br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8852139531127589
      ],
      "excerpt": "<img src=\"./image/dataset.png\" width=\"1000\">  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8446481376929269
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 instances_train_city_vps_rle.json (for training) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 train  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "\u2502   \u2502   \u251c\u2500\u2500 test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8642478986686338
      ],
      "excerpt": "<img src=\"./image/vpq_measure.png\" width=\"1000\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8724819293071043
      ],
      "excerpt": "python tools/test_vpq.py configs/cityscapes/fusetrack.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8518704234306399
      ],
      "excerpt": "  --pan_im_json_file data/cityscapes_vps/panoptic_im_val_city_vps.json \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.828344218455681
      ],
      "excerpt": "python tools/eval_vpq.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8518704234306399
      ],
      "excerpt": "  --pan_gt_json_file data/cityscapes_vps/panoptic_gt_val_city_vps.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8724819293071043
      ],
      "excerpt": "python tools/test_vpq.py configs/cityscapes/fusetrack.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8074426899641222,
        0.8518704234306399,
        0.8306249989846666,
        0.8312268845412394
      ],
      "excerpt": "  --out work_dirs/cityscapes_vps/fusetrack_vpct/test.pkl \\ \n  --pan_im_json_file data/cityscapes_vps/panoptic_im_test_city_vps.json \\ \n  --n_video 50 --mode test \\ \nFiles containing the predicted results will be generated as pred.json and pan_pred/*.png at  work_dirs/cityscapes_vps/fusetrack_vpct/test_pans_unified/.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8017285540429218
      ],
      "excerpt": "\u251c\u2500\u2500 pan_pred.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9143852665671027
      ],
      "excerpt": "python ./tools/train.py configs/cityscapes/fusetrack.py --gpus ${GPU_NUM} \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mcahny/vps/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "Cython",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/mcahny/vps/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'VPSNet for Video Panoptic Segmentation (c) by Dahun Kim, Sanghyun Woo, Joon-Young Lee, and In So Kweon.\\n\\nVPSNet for Video Panoptic Segmentation is licensed under a\\nCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\\n\\nYou should have received a copy of the license along with this work. \\nIf not, see http://creativecommons.org/licenses/by-nc-sa/4.0/.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "VPSNet for Video Panoptic Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "vps",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mcahny",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mcahny/vps/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 234,
      "date": "Sat, 25 Dec 2021 07:28:32 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This software is for non-commercial use only.\nThe source code is released under the Attribution-NonCommercial-ShareAlike (CC BY-NC-SA) Licence\n(see [this](https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode) for details)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}