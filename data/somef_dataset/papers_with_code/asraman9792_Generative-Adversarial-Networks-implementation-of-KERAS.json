{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.10593\n\n\n<p align=\"center\">\n    <img src=\"http://eriklindernoren.se/images/cyclegan_gif.gif\" width=\"640\"\\>\n</p>"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9977994744046882
      ],
      "excerpt": "Paper: https://arxiv.org/abs/1703.10593 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-25T05:43:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-25T06:31:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9386110117500871,
        0.9386110117500871
      ],
      "excerpt": "Implementation of Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks.  \nImplementation of Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9990836580585055,
        0.8609433875418785,
        0.945271532365905,
        0.8125857985793947
      ],
      "excerpt": "The implementation of the Cycle GAN is for implementing the transformation of Apple to Orange and Orange to Apple. \nImage-to-image translation is a class of vision and \ngraphics problems where the goal is to learn the mapping \nbetween an input image and an output image using a training set of aligned image pairs. However, for many tasks, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8156849479578068,
        0.8724496447995925,
        0.9278898483932493,
        0.849219473877165,
        0.938345433958004,
        0.8554300486879688
      ],
      "excerpt": "approach for learning to translate an image from a source \ndomain X to a target domain Y in the absence of paired \nexamples. Our goal is to learn a mapping G : X \u2192 Y \nsuch that the distribution of images from G(X) is indistinguishable from the distribution Y using an adversarial loss. \nBecause this mapping is highly under-constrained, we couple it with an inverse mapping F : Y \u2192 X and introduce a \ncycle consistency loss to enforce F(G(X)) \u2248 X (and vice \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 16:27:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS/master/download_dataset.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9906248903846466,
        0.9465718491881494
      ],
      "excerpt": "$ cd cyclegan/ \n$ bash download_dataset.sh apple2orange \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "$ python3 cyclegan.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899814315839885
      ],
      "excerpt": "    <img src=\"http://eriklindernoren.se/images/cyclegan.png\" width=\"640\"\\> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8839326820036467
      ],
      "excerpt": "    <img src=\"http://eriklindernoren.se/images/cyclegan_gif.gif\" width=\"640\"\\> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Generative-Adversarial-Networks-implementation-of-KERAS",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Generative-Adversarial-Networks-implementation-of-KERAS",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "asraman9792",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/asraman9792/Generative-Adversarial-Networks-implementation-of-KERAS/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 16:27:14 GMT"
    },
    "technique": "GitHub API"
  }
}