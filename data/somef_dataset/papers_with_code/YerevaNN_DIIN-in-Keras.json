{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1709.04348",
      "https://arxiv.org/abs/1802.03198 <br/>\nDIIN paper in OpenReview: https://openreview.net/forum?id=r1dHXnH6-&noteId=r1dHXnH6-\n\n\n### Problem statement\nGiven a premise sentence and a hypothesis one needs to determine whether hypothesis is\nan entailment of the premise, a contradiction, or a neutral sentence. So given two sentences\nwe need to classify those between these 3 classes (`entailment`, `contradiction`, `neutral`",
      "https://arxiv.org/abs/1608.06993"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9436500626156452
      ],
      "excerpt": "DIIN paper in OpenReview: https://openreview.net/forum?id=r1dHXnH6-&noteId=r1dHXnH6- \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YerevaNN/DIIN-in-Keras",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-10-31T19:41:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-21T14:09:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9581936892225987,
        0.9244757021417664,
        0.968124874535763
      ],
      "excerpt": "This repository aims to reproduce the results obtained in \nNatural Language Inference over Interaction Space paper. <br/> \nWe've chosen this paper as a project for  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8440366470587304
      ],
      "excerpt": "Feature extractor (in our case DenseNet) can be found in feature_extractors/ package. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.933998970701274
      ],
      "excerpt": "Our code is compatible with both python3 and python2 so for all commands listed below python can be substituted \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.951232532257774
      ],
      "excerpt": "Preprocess the data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.81565986072103
      ],
      "excerpt": "Currently we managed to obtain 87.34% accuracy on SNLI test set, while the authors obtained 88.0% accuracy on the same dataset. <br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Reproducing Densely Interactive Inference Network in Keras",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YerevaNN/DIIN-in-Keras/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Given a premise sentence and a hypothesis one needs to determine whether hypothesis is\nan entailment of the premise, a contradiction, or a neutral sentence. So given two sentences\nwe need to classify those between these 3 classes (`entailment`, `contradiction`, `neutral`).\n\nSeveral samples from MultiNLI dataset are presented below which are copied from DIIN paper.\n\n`Premise`: The FCC has created two tiers of small business for this service with the approval of the SBA. <br/>\n`Hypothesis`: The SBA has given the go-ahead for the FCC to divide this service into two tiers of small business. <br/>\n`Label`: entailment.\n\n`Premise`: He was crying like his mother had just walloped him. <br/>\n`Hypothesis`: He was crying like his mother hit him with a spoon. <br/>\n`Label`: Neutral\n\n\n`Premise`: Later, Tom testified against John so as to avoid the electric chair. <br/>\n`Hypothesis`: Tom refused to turn on his friend, even though he was slated to be executed. <br/>\n`Label`: Contradiction\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 26,
      "date": "Sun, 26 Dec 2021 07:24:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/YerevaNN/DIIN-in-Keras/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "YerevaNN/DIIN-in-Keras",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9891067299475093
      ],
      "excerpt": "Install requirements (pip3 for python3) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9979947896609701
      ],
      "excerpt": "pip install -r requirements.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8269658294126768,
        0.8589658548129034
      ],
      "excerpt": "python preprocess.py --p 32 --h 32 --chars_per_word 16 --save_dir data/ --dataset snli --word_vec_save_path data/word-vectors.npy \nTrain the model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9188196078865327
      ],
      "excerpt": "python train.py --batch_size 70 --eval_interval 500 --train_word_embeddings --char_embed_size 8 --char_conv_filters 100 --char_conv_kernel 5 --dropout_initial_keep_rate 1. --dropout_decay_rate 0.977 --dropout_decay_interval 10000 --first_scale_down_ratio 0.3 --transition_scale_down_ratio 0.5 --growth_rate 20 --layers_per_dense_block 8 --dense_blocks 3 --labels 3 --load_dir ./data --models_dir ./models/ --logdir ./logs --word_vec_path ./data/word-vectors.npy \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/YerevaNN/DIIN-in-Keras/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Martin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Reproducing Densely Interactive Inference Network in Keras",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DIIN-in-Keras",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "YerevaNN",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YerevaNN/DIIN-in-Keras/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "MartinXPN",
        "body": "DIIN architecture implemented and tested on SNLI dataset.\r\nICLR reproducibility report submitted: https://arxiv.org/abs/1802.03198\r\nIn later experiments reached 87.34% on SNLI test set",
        "dateCreated": "2018-02-15T20:40:20Z",
        "datePublished": "2018-02-15T20:48:57Z",
        "html_url": "https://github.com/YerevaNN/DIIN-in-Keras/releases/tag/v1.0",
        "name": "First release",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/YerevaNN/DIIN-in-Keras/tarball/v1.0",
        "url": "https://api.github.com/repos/YerevaNN/DIIN-in-Keras/releases/9697457",
        "zipball_url": "https://api.github.com/repos/YerevaNN/DIIN-in-Keras/zipball/v1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 72,
      "date": "Sun, 26 Dec 2021 07:24:38 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "neural-network",
      "nlp",
      "convolutional-neural-networks",
      "keras",
      "tensorflow",
      "deep-learning",
      "neural-networks"
    ],
    "technique": "GitHub API"
  }
}