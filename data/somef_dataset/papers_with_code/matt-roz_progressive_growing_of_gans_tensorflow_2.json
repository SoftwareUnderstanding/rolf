{
  "citation": [
    {
      "confidence": [
        0.9792428879788975
      ],
      "excerpt": "Paper (arXiv) <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177918124334298
      ],
      "excerpt": "| XLA | bool | False | de-/activates XLA JIT compilation for train_step | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.891639056253184
      ],
      "excerpt": "| wgan_lambda | float | 10.0 | wasserstein lambda scalar for gradient_penalty | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.888647036213284,
        0.9031911419830267
      ],
      "excerpt": "| replica_batch_sizes | dict | {2: 128, 3: 128, 4: 128, 5: 64, 6: 32, 7: 16, 8: 8, 9: 6, 10: 4}  | per replica batch size at stage | \n| buffer_sizes | dict | {2: 5000, 3: 5000, 4: 2500, 5: 1250, 6: 500, 7: 400, 8: 300, 9: 250, 10: 200}   | buffer size at stage | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9031911419830267
      ],
      "excerpt": "| learning_rates | dict | {2: 1e-3, 3: 1e-3, 4: 1e-3, 5: 1e-3, 6: 1e-3, 7: 1e-3, 8: 1e-3, 9: 1e-3, 10: 1e-3} | learning_rate at stage | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/matt-roz/progressive_growing_of_gans_tensorflow_2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-10T08:08:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-16T22:21:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9554684899244558
      ],
      "excerpt": "This is a TensorFlow 2 implementation of Progressive Growing of GANs. The original implementation was provided by the authors \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9204092583740525
      ],
      "excerpt": "Please cite the original authors and their work (not this repository): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9897989523158507
      ],
      "excerpt": "The repository at hand was written to get myself more comfortable and familiar with TensorFlow 2. It aims to provide a maintainable and well-written implementation of Progressive GANs in TensorFlow 2. It follows the best practices for distributed computing with custom training loops and dynamic models according to TensorFlow's API. This repository aims to use the highest level API available in TensorFlow 2 for each building block (dataset, model, layer, etc.): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9458253841068968
      ],
      "excerpt": "tf.keras.Model: functional API implementations of models (for shape inference at model.build() time) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9172931791482707
      ],
      "excerpt": "subclassing Wrapper to realize the weight scaling trick for any tf.keras.layers.Layer as proposed in the original paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9880812491001018
      ],
      "excerpt": "The original TensorFlow 1 repository took roughly 2 weeks of traintime for a 1024x1024x3 network on a single V100. This repository takes 5 days, 11hrs for the same network on a Quadro RTX 6000. Here are three 256x256x3 interpolation results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9715445849636091,
        0.8884091245124051,
        0.9086913336755105
      ],
      "excerpt": "* The original contribution alpha smooths (linearly interpolates) all intermediate image outputs within its models. This repository only linearly interpolates the image of the last block of the current stage. \n* The original contribution provides a recursive network definition. This repository builds its models linearly.  \nI am certain there are more differences, but these are the major ones I could think of. Let me know if you spot any other major discrepancies. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8059448581941506
      ],
      "excerpt": "| train_eagerly | bool | False | de-/activates execution of train_step in graph mode | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9860095922169774,
        0.9754418561747499,
        0.9522228508405416
      ],
      "excerpt": "| checkpoint_freq | uint | 54 | epoch frequency to checkpoint models with (0 = disabled) | \n| eval_freq | uint | 1 | epoch frequency to evaluate models with (0 = disabled) | \n| log_freq | uint | 1 | epoch frequency to log with (0 = disabled) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.8169937548450142
      ],
      "excerpt": "| leaky_alpha | float | 0.2 | leakiness of LeakyReLU activations | \n| generator_ema | float | 0.999 | exponential moving average of final_generator | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8042034055608422
      ],
      "excerpt": "| epsilon | float | 1e-8 | small constant for numerical stability in model layers | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116770532504587
      ],
      "excerpt": "| use_alpha_smoothing | bool | True | de-/activates smoothing in an image from a previous block after increasing the model to a new stage | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "| drift_epsilon | float | 0.001 |  epsilon scalar for epsilon_drift_penalty | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8448082881827711,
        0.9189226014788329
      ],
      "excerpt": "| map_parallel_calls | int | tf.data.experimental.AUTOTUNE | number of parallel entries to apply 'process_functions' asynchronously | \n| prefetch_parallel_calls | int | tf.data.experimental.AUTOTUNE | number of parallel threads to prefetch entries with concurrently | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.895540933091228
      ],
      "excerpt": "| level | str | 'INFO' | log level of project logger | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358502938083855
      ],
      "excerpt": "The following features are planned for the near future. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8183513658481938
      ],
      "excerpt": "[x] support for NCHW (channel_first) data format \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8347353446805081
      ],
      "excerpt": "Located in Germany, passionate about ML and looking for opportunities world wide: matthiasrozanski[at]gmail[dot]com  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "TensorFlow 2 implementation of https://github.com/tkarras/progressive_growing_of_gans",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/matt-roz/progressive_growing_of_gans_tensorflow_2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 07:53:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/matt-roz/progressive_growing_of_gans_tensorflow_2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "matt-roz/progressive_growing_of_gans_tensorflow_2",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Personally I use virtualenv, but you can use conda, docker or any other type of virtualenv/containerization technique that floats your boat. Make sure the system requirements mentioned above are met.\n\nInstall required packages:\n\n    sudo apt-get install python3-pydot python3-pydotplus python3-venv\n    \nClone the repository:\n\n    git clone git@github.com:matt-roz/progressive_growing_of_gans_tensorflow_2.git\n    cd progressive_growing_of_gans_tensorflow_2\n    \nSetup your environment: \n    \n    python3 -m venv venv\n    source ven/bin/activate\n    pip install --upgrade pip setuptools\n    pip install -r requirements.txt\n\nAdapt the configuration for your system (specifically `data_dir`, `log_dir` and `out_dir` paths):\n\n    nano config.py\n\nTrain Progressive-GANs:\n\n    python main.py\n    \nYou'll see the project logfile and the TensorBoard logfile in `log_dir`; model checkpoints as well as eval images will be stored in `out_dir`. \n\n---\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9024047890231957
      ],
      "excerpt": "The following options are configurable via config.py. This config file is backed up for each run in its respective output directory. By default the configuration will train a 256x256x3 network for CelebA-HQ using a single GPU (index 0 GPU).  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8670507028756399
      ],
      "excerpt": "using tf.function as a function annotation where appropriate (e.g. losses.py) for static functions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.849842763608533
      ],
      "excerpt": "The following options are configurable via config.py. This config file is backed up for each run in its respective output directory. By default the configuration will train a 256x256x3 network for CelebA-HQ using a single GPU (index 0 GPU).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630093607901851
      ],
      "excerpt": "| out_dir | str, os.PathLike | '/media/storage/outs/' | directory for output files (images, models) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80219951149795
      ],
      "excerpt": "| data_dir | str, os.PathLike | '~/tensorflow_datasets' | directory to load tensorflow_datasets from | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474383131702288,
        0.8501699330524837,
        0.8869469681193406
      ],
      "excerpt": "| registered_name | str | 'celeb_a_hq' | name argument for tensorflow_datasets.load | \n| split | str  | 'train' | split argument for tensorflow_datasets.load | \n| num_examples | uint | 30000 | number of examples train dataset will contain according to loaded split | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8300143121857153
      ],
      "excerpt": "| cache_file | str, os.PathLike | '/tmp/{timestamp}-tf-dataset.cache' | location of temporary cache_file (\"\" = load entire dataset into system memory) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553892630581968,
        0.846886279983528
      ],
      "excerpt": "| replica_batch_sizes | dict | {2: 128, 3: 128, 4: 128, 5: 64, 6: 32, 7: 16, 8: 8, 9: 6, 10: 4}  | per replica batch size at stage | \n| buffer_sizes | dict | {2: 5000, 3: 5000, 4: 2500, 5: 1250, 6: 500, 7: 400, 8: 300, 9: 250, 10: 200}   | buffer size at stage | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9028115326846461,
        0.8350421052261198
      ],
      "excerpt": "| filename | str, os.PathLike | '{timestamp}-{host}-logfile.log'  | name of resulting log file | \n| format | str | '%(asctime)s - %(name)s - %(levelname)s - %(message)s' | log formatting for formatter | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8259317240701607
      ],
      "excerpt": "[ ] add mixed_precision (fp16) training \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/matt-roz/progressive_growing_of_gans_tensorflow_2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License\\n\\nCopyright (c) Matthias Rozanski\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Progressive Growing of GANs - TensorFlow 2 Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "progressive_growing_of_gans_tensorflow_2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "matt-roz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/matt-roz/progressive_growing_of_gans_tensorflow_2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Linux with 64-bit Python 3.6 and `python-pydot`, `python-pydotplus` installed (see installation)\n* 16GB system memory and one or more high-end NVIDIA Turing, Pascal or Volta GPUs with 16GB of DRAM. \n* NVIDIA driver 440.64.00 or newer, CUDA toolkit 10.1 or newer, cudNN 7.6.5 or newer\n   * Disclaimer: It's likely possible to run this repository on older software installations (specifically if you are willing to run pre tensorflow 2.1.0). If you are going down this road some manual adaptions are likely required :-/\n\n---\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 07:53:48 GMT"
    },
    "technique": "GitHub API"
  }
}