{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "-   Liu, Ziwei, Ping Luo, Xiaogang Wang, and Xiaoou Tang. \u201cDeep Learning Face Attributes in the Wild.\u201d ArXiv:1411.7766 [Cs], September 24, 2015. <http://arxiv.org/abs/1411.7766>. **[CelebA Dataset Source]**\n\n-   S\u00f8nderby, Casper Kaae, Jose Caballero, Lucas Theis, Wenzhe Shi, and Ferenc Husz\u00e1r. \u201cAmortised MAP Inference for Image Super-Resolution.\u201d ArXiv:1610.04490 [Cs, Stat], February 21, 2017. <http://arxiv.org/abs/1610.04490>. **[Adding noise to images used for training the GAN]**\n\n-   Radford, Alec, Luke Metz, and Soumith Chintala. \u201cUnsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks.\u201d ArXiv:1511.06434 [Cs], January 7, 2016. <http://arxiv.org/abs/1511.06434>. **[Use of DNNs in GAN, ADAM Optimizer for Generator and SGD for Discriminator]**\n\n-   Salimans, Tim, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen. \u201cImproved Techniques for Training GANs.\u201d ArXiv:1606.03498 [Cs], June 10, 2016. <http://arxiv.org/abs/1606.03498>. **[One sided label smoothing]**\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SamSamhuns/ml_gan_human_face_synthesis",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-25T05:17:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-17T01:46:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8735049174381555
      ],
      "excerpt": "Implementation of a GAN for face synthesis using a celebrity image dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9402510525435663
      ],
      "excerpt": "We the following transformations on image data so all images are cropped to size 64x64x3 and normalized: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8546414760156262
      ],
      "excerpt": "We use a batch size of 64, latent vector z size of 100 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9572711943804391,
        0.8972656763289915,
        0.9581635655287142,
        0.8765230537080207
      ],
      "excerpt": "In the improved model, based on other research work done on improving GANs, we change a few things in the Generator and Discriminator networks structures. \nFor the Discriminator, we add nn.Dropout() layers to add regularization and prevent overfitting. \nFor the Generator, we change the activation functions to LeakyReLU() instead of ReLU() to avoid sparse gradients. \nIn the Training itself, we add One side label smoothing to further regularize the Discriminator. i.e. Change the real labels from all ones to random values in the range 0.7 - 1.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312743828921562
      ],
      "excerpt": "On each iteration, the model is trained with a batch of 64 images: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of a GAN for face synthesis using a celebrity image dataset",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**Warning: Data size exceeds 70 GB**\n\n`$ python download.py`\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SamSamhuns/ml_gan_human_face_synthesis/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 13:13:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SamSamhuns/ml_gan_human_face_synthesis/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SamSamhuns/ml_gan_human_face_synthesis",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SamSamhuns/ml_gan_human_face_synthesis/master/notebooks/improved_gan_face_synthesis.ipynb",
      "https://raw.githubusercontent.com/SamSamhuns/ml_gan_human_face_synthesis/master/notebooks/gan_face_synthesis.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SamSamhuns/ml_gan_human_face_synthesis/master/clean_improved_weights_imgs.sh",
      "https://raw.githubusercontent.com/SamSamhuns/ml_gan_human_face_synthesis/master/clean_base_weights_imgs.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Note: `Anaconda` can also be used for the venv\n\n```shell\n$ python -m venv venv\n$ source venv/bin/activate\n$ pip install -r requirements.txt\n```\n\nTo start a new Jupyter Notebook kernel based on the current virtual environment:\n\n```shell\n$ python -m ipykernel install --user --name ENV_NAME --display-name \"ENV_DISPLAY_NAME\"\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SamSamhuns/ml_gan_human_face_synthesis/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Sam_S\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Generative Adversarial Networks: Face Synthesis",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ml_gan_human_face_synthesis",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SamSamhuns",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SamSamhuns/ml_gan_human_face_synthesis/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We trained our GAN model on the mini_data which contains images enough for only a single batch of 64 images for 100 epochs:\n\nAs expected, we can observe the general instability with training our GAN as the loss curves were not promising for training with such a small dataset:\n\n|              GAN loss mini_data run 1             |              GAN loss mini_data run 2             |\n| :-----------------------------------------------: | :-----------------------------------------------: |\n| ![](readme_img/img/base_gan_loss_mini_data_1.png) | ![](readme_img/img/base_gan_loss_mini_data_2.png) |\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 13:13:43 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "generative-adversarial-network",
      "celebrity-faces",
      "image-generation",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}