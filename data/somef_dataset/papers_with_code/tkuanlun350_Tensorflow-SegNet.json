{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tkuanlun350/Tensorflow-SegNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-09-20T09:22:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T07:06:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9079177113573028
      ],
      "excerpt": "Implement slightly different (see below for detail) SegNet in tensorflow, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8171838565645423,
        0.8272945088467796
      ],
      "excerpt": "Due to indice unravel still unavailable in tensorflow, the original upsampling \nmethod is temporarily replaced simply by deconv( or conv-transpose) layer (without pooling indices). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8807944276403178
      ],
      "excerpt": "(The current workaround for unpooling layer is a bit slow because it lacks of GPU support.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8129231947843663,
        0.8163950871350298
      ],
      "excerpt": "Update to tf 1.0 \nFinally get some time to refactor a bit, removing some un-used function and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8926428294695546,
        0.8818436039512914,
        0.8014401143120626
      ],
      "excerpt": "I planned to add more feature such as dilation, multi-resolution, sequential learning..etc. \nMaking it more like a \"basic\" segmentation toolbox and support more dataset as well. \nTherefore the model and documentation will be changed accordingly in the future. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9335495649579204,
        0.800656633687266
      ],
      "excerpt": "Any feature request is also welcomed. \nThis Implement default to use CamVid dataset as described in the original SegNet paper, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implement slightly different caffe-segnet in tensorflow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tkuanlun350/Tensorflow-SegNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 169,
      "date": "Thu, 30 Dec 2021 09:27:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tkuanlun350/Tensorflow-SegNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tkuanlun350/Tensorflow-SegNet",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/tkuanlun350/Tensorflow-SegNet/master/example.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9450204562220248
      ],
      "excerpt": "You can follow the issue here: https://github.com/tensorflow/tensorflow/issues/2169 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8482203356911359
      ],
      "excerpt": "successfully trained segnet-basic in CamVid dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028746858925215
      ],
      "excerpt": "The parameters can be found in main.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928687976165558
      ],
      "excerpt": "example format: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tkuanlun350/Tensorflow-SegNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Tseng Kuan Lun\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tensorflow-SegNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tensorflow-SegNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tkuanlun350",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tkuanlun350/Tensorflow-SegNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "tensorflow 1.0\nPillow (optional, for write label image)\nscikit-image\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 364,
      "date": "Thu, 30 Dec 2021 09:27:12 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "see also example.sh\ntraining:\n\n  python main.py --log_dir=path_to_your_log --image_dir=path_to_CamVid_train.txt --val_dir=path_to_CamVid_val.txt --batch_size=5\n\nfinetune:\n\n  python main.py --finetune=path_to_saved_ckpt --log_dir=path_to_your_log --image_dir=path_to_CamVid_train.txt --val_dir=path_to_CamVid_val.txt --batch_size=5\n\ntesting:\n\n  python main.py --testing=path_to_saved_ckpt --log_dir=path_to_your_log --test_dir=path_to_CamVid_train.txt --batch_size=5 --save_image=True\n\nYou can set default path and parameters in main.py line 6~18.\nnote: in --testing you can specify whether to save predicted images, currently only save one image\nfor manually checking, will be configured to be more flexible.\n\n",
      "technique": "Header extraction"
    }
  ]
}