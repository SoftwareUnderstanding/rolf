{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.00826"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Keyulu Xu, Weihua Hu, Jure Leskovec, Stefanie Jegelka. How Powerful are Graph Neural Networks?, ICLR 2019. [arXiv](https://arxiv.org/abs/1810.00826)\n2. PACE-challenge/Treewidth: List of Treewidth solvers, instances, and tools, [https://github.com/PACE-challenge/Treewidth](https://github.com/PACE-challenge/Treewidth)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8317558301605189
      ],
      "excerpt": "If you want more information about this code, please read my article \"Graph Neural Network \u3092\u7528\u3044\u305f\u30b0\u30e9\u30d5\u306e\u6728\u5e45\u4e88\u6e2c\" (sorry, written in Japanese) on Preferred Networks Research Blog. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pfnet-research/treewidth-prediction",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-10T01:08:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-04T01:11:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9041134474422676
      ],
      "excerpt": "This code predicts the treewidth by using graph neural network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9500186513698131,
        0.9766378489533554,
        0.939273171416666,
        0.9602477753296509
      ],
      "excerpt": "This code also implements a general framework of GNN described in [1]. \nIn detail, this code implements max, average and sum aggregations and readouts described the paper and is compatible with GPU. \nWe also provide the trained model and random graph datasets. \nThis software is developed as part of PFN summer internship 2019 and the main developer is Yuta Nakano. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9421963033972147
      ],
      "excerpt": "2. Predicting the treewidth of a given graph by using trained GNN model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Prediction of Treewidth using Graph Neural Network, developed as part of PFN summer internship 2019.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pfnet-research/treewidth-prediction/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Tue, 21 Dec 2021 13:28:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pfnet-research/treewidth-prediction/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pfnet-research/treewidth-prediction",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pfnet-research/treewidth-prediction/master/result/Task1/Task1_analysis.ipynb",
      "https://raw.githubusercontent.com/pfnet-research/treewidth-prediction/master/result/twGNN/twGNN_analysis.ipynb",
      "https://raw.githubusercontent.com/pfnet-research/treewidth-prediction/master/result/Regression/Regression_analysis.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pfnet-research/treewidth-prediction/master/unpack.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8151339222849947
      ],
      "excerpt": "Run the below script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151339222849947
      ],
      "excerpt": "Run the below script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151339222849947
      ],
      "excerpt": "Run the below script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151339222849947
      ],
      "excerpt": "Run the below script. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8785416131315863
      ],
      "excerpt": "First, unzip the dataset file by running the below script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python GNN.py --task_type Task1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8971823465573899
      ],
      "excerpt": "python GNN.py --help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206
      ],
      "excerpt": "python main.py --task_type approach1 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pfnet-research/treewidth-prediction/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Preferred Networks, Inc.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Prediction of Treewidth using Graph Neural Network",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "treewidth-prediction",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pfnet-research",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pfnet-research/treewidth-prediction/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code has been tested over Chainer 6.3.0 and python 3.7.4.\nIf you haven't installed chainer, please install chainer following the instructions on the [official website](https://docs.chainer.org/en/stable/install.html).\nIf you want to run on GPU, please install CuPy following the instructions on the [official website](https://docs-cupy.chainer.org/en/stable/install.html#install-cupy).\n\nHere is other dependencies.\n- matplotlib\n- networkx\n- numpy\n- scikit-learn\n- scipy\n- seaborn\n- timeout-decorator\n\nYou can install these dependencies by requirements.txt. Please run the below script.\n```\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Tue, 21 Dec 2021 13:28:03 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "chainer",
      "deep-learning",
      "graph-algorithms",
      "graph-convolutional-networks",
      "graph-neural-networks"
    ],
    "technique": "GitHub API"
  }
}