{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1603.05027\n- *VGG*: K. Simonyan, A. Zisserman. Very Deep Convolutional Networks for Large-Scale Image Recognition. 2014, https://arxiv.org/abs/1409.155",
      "https://arxiv.org/abs/1409.155"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "While researching for this piece, I've stumbled across (in no particular order) these documents:\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/school-of-ai-angers/ceci-nest-pas-un-chat",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-09T18:55:37Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-19T16:20:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9491397409542107
      ],
      "excerpt": "Train some CNN models to detect cats and dogs with Keras. Then destroy them with some adversarial examples for the fun of it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8270226589296563
      ],
      "excerpt": "Full presentation as PDF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.905279412409555
      ],
      "excerpt": "An Overview of ResNet and its Variants \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Train some CNN models to detect cats and dogs with Keras. Then destroy them with some adversarial examples for the fun of it.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sitegui/ceci-nest-pas-un-chat/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 30 Dec 2021 00:08:00 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/school-of-ai-angers/ceci-nest-pas-un-chat/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "school-of-ai-angers/ceci-nest-pas-un-chat",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sitegui/ceci-nest-pas-un-chat/master/Find%20adversarial%20image.ipynb",
      "https://raw.githubusercontent.com/sitegui/ceci-nest-pas-un-chat/master/Train%20simple%20model.ipynb",
      "https://raw.githubusercontent.com/sitegui/ceci-nest-pas-un-chat/master/Train%20VGG16%20model.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/school-of-ai-angers/ceci-nest-pas-un-chat/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Guilherme Souza\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Ceci n'est pas un chat",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ceci-nest-pas-un-chat",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "school-of-ai-angers",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/school-of-ai-angers/ceci-nest-pas-un-chat/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements:\n\n1. If you didn't have yet, [install Conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/)\n2. Clone this repo\n3. Create you new conda environment by executing `conda env create` in a command line placed at the root of this repo (this may take some minutes to complete)\n4. Activate this new environment with `conda activate ceci-nest-pas-un-chat`\n5. Download [Dogs vs. Cats](https://www.kaggle.com/c/dogs-vs-cats/data) and save it as `data/dogs-vs-cats.zip`. You'll have to create an account Kaggle, sorry about that.\n6. Execute `python prepare_data.py`. It'll unzip and preprocess the images. At this point, you should have a folder structure like:\n    ```\n    ceci-nest-pas-un-chat\n        +-- data\n            +-- training\n                +-- cat\n                    +-- cat.1.jpg\n                    +-- (many other nice photos of cats)\n                +-- dog\n            +-- validation\n                +-- cat\n                +-- dog\n            +-- test\n                +-- cat\n                +-- dog\n    ```\n7. Execute `jupyter notebook` to open the Jupyter HomePage\n8. Open the notebooks files (those that end with `.ipynb`) and mess around :)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "You can run the notebooks from this repo in Google Colab instead:\n\n1. Open one of them, like: https://colab.research.google.com/github/sitegui/ceci-nest-pas-un-chat/blob/master/Train%20simple%20model.ipynb\n2. Use GPU if available: Runtime > Change runtime type > Hardware accelerator > GPU\n3. Add the following as a first cell and execute it. Replace `your-kaggle-user-name` and `your-kaggle-key` with your API credentials (you can get one for you using the button `Create New API Token` in [your profile page](https://www.kaggle.com/sitegui/account))\n\n    ```\n    !git clone https://github.com/sitegui/ceci-nest-pas-un-chat.git && \\\n    mv ceci-nest-pas-un-chat/* . && \\\n    pip install -r requirements-colab.txt && \\\n    KAGGLE_USERNAME=your-kaggle-user-name \\\n    KAGGLE_KEY=your-kaggle-key \\\n    kaggle competitions download dogs-vs-cats -p data -f train.zip && \\\n    python prepare_data.py\n    ```\n4. Restart you runtime in Runtime > Restart runtime...\n5. The Holoviews graphs may not show. When that's the case, you should add:\n\n    ```\n    %env HV_DOC_HTML=true\n    hv.extension('bokeh')\n    ```\n\nto the beggining of every cell that displays a Holoviews element (as per this [SO answer](https://stackoverflow.com/a/55507337))\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 30 Dec 2021 00:08:00 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Convolutional Neural Networks](https://www.tensorflow.org/beta/tutorials/images/intro_to_cnns)\n\n",
      "technique": "Header extraction"
    }
  ]
}