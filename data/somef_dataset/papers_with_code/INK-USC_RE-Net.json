{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.05530"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{jin2020Renet,\n    title={Recurrent Event Network: Autoregressive Structure Inference over Temporal Knowledge Graphs},\n    author={Jin, Woojeong and Qu, Meng and Jin, Xisen and Ren, Xiang},\n    booktitle={EMNLP},\n    year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9204470346418512
      ],
      "excerpt": "Paper: Recurrent Event Network: Autoregressive Structure Inference over Temporal Knowledge Graphs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9950328994327152
      ],
      "excerpt": "If you make use of this code or the RE-Net algorithm in your work, please cite the following paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9712438395444837,
        0.9969290445196726,
        0.9625184728059253,
        0.9944858271588628,
        0.9965033545716006,
        0.991724533578636,
        0.9944858271588628
      ],
      "excerpt": "| TransE (Bordes et al., 2013)      | Link | 100, 200       | 1024       | \n| DistMult (Yang et al., 2015)   | Link | 100, 200       | 1024       | \n| ComplEx (Trouillon et al., 2016)    | Link                                  | 50, 100, 200   | 100        | \n| RGCN (Schlichtkrull et al., 2018)      | Link     | 200            | Default    | \n| ConvE (Dettmers et al., 2018)      | Link                              | 200            | 128        | \n| Know-Evolve (Trivedi et al., 2017) | Link                             | Default        | Default    | \n| HyTE (Dasgupta et al., 2018)        | Link                               | 128            | Default    | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8984312557015187
      ],
      "excerpt": "| Method        | MRR   | Hits@1 | Hits@3 | Hits@10 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014,
        0.8356013927728488,
        0.9278824608274014
      ],
      "excerpt": "| ConvE         | 37.67 | 29.91  | 40.80  | 51.69   | \n| TA-DistMult   | 28.53 | 20.30  | 31.57  | 44.96 \n| RE-Net (mean) | 42.38 | 35.80  | 44.99  | 54.90   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537267708315463
      ],
      "excerpt": "| RE-Net (pool) | 41.35 | 34.53  | 44.05  | 54.35   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8984312557015187
      ],
      "excerpt": "| Method        | MRR   | Hits@1 | Hits@3 | Hits@10 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9086892148066392
      ],
      "excerpt": "| TransE        | 16.05 | 0.00   | 26.10  | 42.29   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9559715772848645,
        0.9507374082549614,
        0.9278824608274014,
        0.9946379808099154,
        0.9278824608274014
      ],
      "excerpt": "| TA-DistMult   | 29.35 | 22.11  | 31.56  | 41.39   | \n| RE-Net (mean) | 39.15 | 30.84  | 43.07  | 53.48   | \n| RE-Net (attn) | 38.07 | 29.44  | 42.26  | 52.93   | \n| RE-Net (pool) | 37.99 | 30.05  | 41.40  | 52.18   | \n| RE-Net (RGCN) | 40.21 | 32.54  | 43.53  | 53.83   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8984312557015187
      ],
      "excerpt": "| Method        | MRR   | Hits@1 | Hits@3 | Hits@10 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412,
        0.8592871015078071
      ],
      "excerpt": "| RE-Net (mean) | 48.30 | 45.86  | 49.36  | 53.03   | \n| RE-Net (attn) | 51.72 | 50.60  | 52.12  | 53.72   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8984312557015187
      ],
      "excerpt": "| Method        | MRR   | Hits@1 | Hits@3 | Hits@10 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066,
        0.8654671031158477,
        0.8356013927728488
      ],
      "excerpt": "| ConvE         | 64.32 | 63.79  | 65.97  | 67.60   | \n| TA-DistMult   | 62.72 | 59.30  | 64.94  | 68.19   | \n| RE-Net (mean) | 65.51 | 63.85  | 66.06  | 68.03   | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/INK-USC/RE-Net",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-08T08:07:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T03:13:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9226765429114824,
        0.9924525973729243
      ],
      "excerpt": "TL;DR: We propose an autoregressive model to infer graph structures at unobserved times on temporal knowledge graphs (extrapolation problem). \nThis repository contains the implementation of the RE-Net architectures described in the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968344733307983
      ],
      "excerpt": "Knowledge graph reasoning is a critical task in natural language processing. The task becomes more challenging on temporal knowledge graphs, where each fact is associated with a timestamp. Most existing methods focus on reasoning at past timestamps, which are not able to predict facts happening in the future. This paper proposes Recurrent Event Network (RE-Net), a novel autoregressive architecture for predicting future interactions. The occurrence of a fact (event) is modeled as a probability distribution conditioned on temporal sequences of past knowledge graphs. Speci\ufb01cally, our RE-Net employs a recurrent event encoder to encode past facts, and uses a neighborhood aggregator to model the connection of facts at the same timestamp. Future facts can then be inferred in a sequential manner based on the two modules. We evaluate our proposed method via link prediction at future times on \ufb01ve public datasets. Through extensive experiments we demonstrate the strength of RE-Net, especially on multi-step inference over future time stamps, and achieve state-of-the-art performance on all five datasets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879017953717132
      ],
      "excerpt": "Related Work \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.928140152822089
      ],
      "excerpt": "In this code, RE-Net with RGCN aggregator is included.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8134499808296713
      ],
      "excerpt": "<!-- For attentive, mean, pooling aggregators (model 0,1,2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.961978438366502
      ],
      "excerpt": "<!-- For an RGCN aggregator (model 3) --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9648097829772976,
        0.860059181823877
      ],
      "excerpt": "<!-- The user must specify a --model, the variants of which are described in detail in the paper: \n- Attentive aggregator: --model 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877,
        0.9725152441691798,
        0.8140412936696206,
        0.9248210439095674
      ],
      "excerpt": "- RGCN aggregator: --model 3 --> \nOur work is on an extrapolation problem. There are only a few work on the problem. \nMany studies on temporal knowledge graphs are focused on an intrapolation problem. \nWe organized the list of related work such as Temporal Knowledge Graph Reasoning, Dynamic Graph Embedding, Knowledge Graph Embedding, and Static Graph Embedding. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9883629186460239
      ],
      "excerpt": "- 'get_history_graph.py': This is for getting history and graph for the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890923640889357
      ],
      "excerpt": "- 'train.txt', 'valid.txt', 'test.txt': First column is subject entities, second column is relations, and third column is object entities. The fourth column is time. The fifth column is for know-evolve's data format. It is ignored in RE-Net. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8534586027279032
      ],
      "excerpt": "We use the following public codes for baselines and hyperparameters. We validated embedding sizes among presented values. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899337125976634
      ],
      "excerpt": "In the ICEWS18 dataset, the results with filtered metrics: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899337125976634
      ],
      "excerpt": "In the GDELT dataset, the results with filtered metrics: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899337125976634
      ],
      "excerpt": "In the WIKI dataset, the results with filtered metrics: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899337125976634
      ],
      "excerpt": "In the YAGO dataset, the results with filtered metrics: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Recurrent Event Network: Autoregressive Structure Inference over Temporal Knowledge Graphs (EMNLP 2020)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/INK-USC/RE-Net/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 69,
      "date": "Wed, 29 Dec 2021 07:41:45 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/INK-USC/RE-Net/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "INK-USC/RE-Net",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Run the following commands to create a conda environment (assume CUDA10.1):\n```bash\nconda create -n renet python=3.6 numpy\nconda activate renet\npip install torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html\nconda install -c dglteam \"dgl-cuda10.1\"\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "cd data/DATA_NAME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "cd data/DATA_NAME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8201445244596481,
        0.9906248903846466
      ],
      "excerpt": "We implemented TA-TransE, TA-DistMult, and TTransE. The user can run the baselines by the following command. \ncd ./baselines \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8408011420158433
      ],
      "excerpt": "<p align=\"center\"><img src=\"figs/renet.png\" width=\"500\"/></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.884444481280681
      ],
      "excerpt": "Train and Test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 get_history.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 get_history_graph.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8885107278882707,
        0.8667333958410304
      ],
      "excerpt": "python3 pretrain.py -d DATA_NAME --gpu 0 --dropout 0.5 --n-hidden 200 --lr 1e-3 --max-epochs 20 --batch-size 1024 \nThen, train the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9215756663326287
      ],
      "excerpt": "python3 train.py -d DATA_NAME --gpu 0 --dropout 0.5 --n-hidden 200 --lr 1e-3 --max-epochs 20 --batch-size 1024 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9296290176354381
      ],
      "excerpt": "python3 test.py -d DATA_NAME --gpu 0 --n-hidden 200 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8692386251127991
      ],
      "excerpt": "Each data folder has 'stat.txt', 'train.txt', 'valid.txt', 'test.txt',and 'get_history_graph.py'. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8473882484735651
      ],
      "excerpt": "- 'stat.txt': First value is the number of entities, and second value is the number of relations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8506178734422936
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python3 TA-TransE.py -f 1 -d ICEWS18 -L 1 -bs 1024 -n 1000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8326899555298568
      ],
      "excerpt": "| TransE        | 19.30 | 14.01  | 24.01  | 25.82   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8256086087047667
      ],
      "excerpt": "| TransE        | 34.78 | 20.27  | 47.23  | 53.35   | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/INK-USC/RE-Net/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# PyTorch implementation of Recurrent Event Network (RE-Net)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "RE-Net",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "INK-USC",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/INK-USC/RE-Net/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 303,
      "date": "Wed, 29 Dec 2021 07:41:45 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "knowledge-graph",
      "graph-neural-networks",
      "reasoning",
      "temporal-networks",
      "dynamic-networks"
    ],
    "technique": "GitHub API"
  }
}