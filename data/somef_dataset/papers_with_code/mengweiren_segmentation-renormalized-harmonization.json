{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.10593",
      "https://arxiv.org/abs/1807.04409"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this code, please consider citing our work:\n```\n@article{ren2021segmentation,\n  title={Segmentation-Renormalized Deep Feature Modulation for Unpaired Image Harmonization},\n  author={Ren, Mengwei and Dey, Neel and Fishbaugh, James and Gerig, Guido},\n  journal={IEEE Transactions on Medical Imaging},\n  year={2021},\n  publisher={IEEE}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{ren2021segmentation,\n  title={Segmentation-Renormalized Deep Feature Modulation for Unpaired Image Harmonization},\n  author={Ren, Mengwei and Dey, Neel and Fishbaugh, James and Gerig, Guido},\n  journal={IEEE Transactions on Medical Imaging},\n  year={2021},\n  publisher={IEEE}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9030859728368266,
        0.9030859728368266
      ],
      "excerpt": "      --lambda_A 10\\ \n      --lambda_B 10\\ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mengweiren/segmentation-renormalized-harmonization",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-14T17:03:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-03T13:31:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9339819007539543
      ],
      "excerpt": "Reference implementation of \"Segmentation-Renormalized Deep Feature Modulation for Unpaired Image Harmonization\" by M. Ren, et al. to appear in IEEE Transactions on Medical Imaging, 2021. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9630653586451272,
        0.8454170972923789,
        0.9300999234366898
      ],
      "excerpt": "This repository is built upon the original CycleGAN implementation available here. \nUse the script below to start training a translation model, where the naming convention of parameters follows the original CycleGAN implementation. See 'configs/' for parameters definition. \nOf note, \"--joint_seg | --srenorm | --sem_dropout\" are used to specify different models compared in the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "      --model 'cycle_gan_2d'\\ \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mengweiren/segmentation-renormalized-harmonization/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 11:32:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mengweiren/segmentation-renormalized-harmonization/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mengweiren/segmentation-renormalized-harmonization",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To speed up data loading for medical images which are typically 3D in Nifti/Nrrd/mhd format, h5 files are recommended for PyTorch dataloader. After train/test split, merge all 2D slices of subjects from each set to form a [N,w,h,1] array, where N is the number of total slices, (w,h) is the image size. Save arrays from source and target domains as a group 'src' (for source domain) and 'trg' (for target domain) in the h5 file. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8181060374670783
      ],
      "excerpt": "python mains/train.py --name 'seg_renorm_cyclegan'\\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9628507133691993
      ],
      "excerpt": "python mains/train.py --name 'seg_renorm_cyclegan'\\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mengweiren/segmentation-renormalized-harmonization/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Segmentation-Renormalized Unpaired Image Harmonization",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "segmentation-renormalized-harmonization",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mengweiren",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mengweiren/segmentation-renormalized-harmonization/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This implementation requires a Linux OS with all python dependencies available in `environment.yml`. To install all dependencies,\n\n```shell script\nconda env create -f environment.yml\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 28 Dec 2021 11:32:23 GMT"
    },
    "technique": "GitHub API"
  }
}