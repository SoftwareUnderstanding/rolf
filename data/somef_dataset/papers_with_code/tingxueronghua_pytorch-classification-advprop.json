{
  "citation": [
    {
      "confidence": [
        0.983982283320315
      ],
      "excerpt": "A PyTorch implementation of CVPR2020 paper Adversarial examples improve image recognition by Xie C, Tan M, Gong B, et al.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "* CUDA 10.0.130 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tingxueronghua/pytorch-classification-advprop",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-22T03:39:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-14T05:02:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9382145985410029
      ],
      "excerpt": "This project is developed and tested in the following environments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9029151000781871
      ],
      "excerpt": "For all the commonly used parameters: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9072135133805173,
        0.9141050958015604
      ],
      "excerpt": "* --attack-step-size: the step size of PGD attacker, which means the range of the noise during each iteration. \n* -a: architecture of the model, we can choose the model in torchvision.models.resnet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8394490855105674,
        0.9680009015388287,
        0.9156820981137676,
        0.883781709076077
      ],
      "excerpt": "More options could be seen in the code. \nThe figure below is the comparasion between ResNet-50 with standard training and advprop (using PGD-1). The red curve is the test accuracy with advprop and the orange curve is the accuracy with standard training. \nIt is obivous that the test accuracy under the advprop setting consistenly exceeds that under standard trainig. Another notable feature is that the accuracy using main batch normalization consistenly exceeds that using auxiliary batch normalization. \nThe settings are the same as in run.sh. Finally, the ResNet-50 top1 test accuracy using standard training is 76.67%, and that using advprop is 77.42%.  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tingxueronghua/pytorch-classification-advprop/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Tue, 28 Dec 2021 19:05:55 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tingxueronghua/pytorch-classification-advprop/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tingxueronghua/pytorch-classification-advprop",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/tingxueronghua/pytorch-classification-advprop/master/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8097904582270796
      ],
      "excerpt": "Multi-GPU support \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "* Python 3.8.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8336672129418898
      ],
      "excerpt": "* --gpu-id: ids for the GPUs you could use. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8953851514299261,
        0.8342124013105356
      ],
      "excerpt": "Training progress bar with rich info \nTraining log and training curve visualization code (see ./utils/logger.py) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924132026807194
      ],
      "excerpt": "python imagenet.py --attack-iter 1 --attack-epsilon 1 --attack-step-size 1 -a resnet50 --train-batch 256 --num_classes 1000 --data /path/of/ImageNet --epochs 105 --schedule 30 60 90 100 --gamma 0.1 -c checkpoints/imagenet/advresnet-resnet50-smoothing --gpu-id 0,1,2,3,4,5,6,7 --lr_schedule step --mixbn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8737541677677745
      ],
      "excerpt": "* --train-batch: total batches on all the GPUs. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tingxueronghua/pytorch-classification-advprop/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'# Copyright (c) 2012 Giorgos Verigakis &#118;&#101;&#114;&#105;&#103;&#97;&#107;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\\n#\\n# Permission to use, copy, modify, and distribute this software for any\\n# purpose with or without fee is hereby granted, provided that the above\\n# copyright notice and this permission notice appear in all copies.\\n#\\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-classification-advprop",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-classification-advprop",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tingxueronghua",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tingxueronghua/pytorch-classification-advprop/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Install [matplotlib]\n* Install [numpy]\n* Install [PyTorch]\n* Install [torchvision]\n* Install [tensorboardX]\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 74,
      "date": "Tue, 28 Dec 2021 19:05:55 GMT"
    },
    "technique": "GitHub API"
  }
}