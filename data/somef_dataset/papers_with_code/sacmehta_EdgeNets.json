{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Most of our object detection code is adapted from [SSD in pytorch](https://github.com/amdegroot/ssd.pytorch). We thank authors for such an amazing work.\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.06815",
      "https://arxiv.org/abs/1811.11431"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this repository helpful, please feel free to cite our work:\n```\n@article{mehta2019dicenet,\nAuthor = {Sachin Mehta and Hannaneh Hajishirzi and Mohammad Rastegari},\nTitle = {DiCENet: Dimension-wise Convolutions for Efficient Networks},\nYear = {2020},\njournal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},\n}\n\n@inproceedings{mehta2018espnetv2,\n  title={ESPNetv2: A Light-weight, Power Efficient, and General Purpose Convolutional Neural Network},\n  author={Mehta, Sachin and Rastegari, Mohammad and Shapiro, Linda and Hajishirzi, Hannaneh},\n  booktitle={Proceedings of the IEEE conference on computer vision and pattern recognition},\n  year={2019}\n}\n\n@inproceedings{mehta2018espnet,\n  title={Espnet: Efficient spatial pyramid of dilated convolutions for semantic segmentation},\n  author={Mehta, Sachin and Rastegari, Mohammad and Caspi, Anat and Shapiro, Linda and Hajishirzi, Hannaneh},\n  booktitle={Proceedings of the European Conference on Computer Vision (ECCV)},\n  pages={552--568},\n  year={2018}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{mehta2018espnet,\n  title={Espnet: Efficient spatial pyramid of dilated convolutions for semantic segmentation},\n  author={Mehta, Sachin and Rastegari, Mohammad and Caspi, Anat and Shapiro, Linda and Hajishirzi, Hannaneh},\n  booktitle={Proceedings of the European Conference on Computer Vision (ECCV)},\n  pages={552--568},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{mehta2018espnetv2,\n  title={ESPNetv2: A Light-weight, Power Efficient, and General Purpose Convolutional Neural Network},\n  author={Mehta, Sachin and Rastegari, Mohammad and Shapiro, Linda and Hajishirzi, Hannaneh},\n  booktitle={Proceedings of the IEEE conference on computer vision and pattern recognition},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{mehta2019dicenet,\nAuthor = {Sachin Mehta and Hannaneh Hajishirzi and Mohammad Rastegari},\nTitle = {DiCENet: Dimension-wise Convolutions for Efficient Networks},\nYear = {2020},\njournal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9952342900826835
      ],
      "excerpt": "This repo contains source code of our work on designing efficient networks for different computer vision tasks: <span style=\"color:blue\"> (1) Image classification, (2) Object detection, and (3) Semantic segmentation.</span> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": " 1. Key highlihgts \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9104388306336967
      ],
      "excerpt": " 8. Citation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": " 10. Acknowledgements \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.9093476878940522
      ],
      "excerpt": " 12. Notes \nObject classification on the ImageNet and MS-COCO (multi-label) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9625923568277878,
        0.8944178096468923,
        0.9490753289412834
      ],
      "excerpt": "ESPNet (ECCV'18) \nESPNetv2 (CVPR'19) \nDiCENet (arxiv) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        <td align=\"center\"> 35 </td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        <td colspan=3 align=\"center\"> <b>PASCAL VOC 2012</b> </td> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sacmehta/EdgeNets",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-07T19:29:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-24T02:00:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8541193449612933
      ],
      "excerpt": "This repo contains source code of our work on designing efficient networks for different computer vision tasks: <span style=\"color:blue\"> (1) Image classification, (2) Object detection, and (3) Semantic segmentation.</span> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "Table of contents \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778189061100441
      ],
      "excerpt": "Semantic Segmentation on the PASCAL VOC and the CityScapes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8832502489368869,
        0.8891077324311947,
        0.8106663443558098
      ],
      "excerpt": "Supports PyTorch 1.0 \nIntegrated with Tensorboard for easy visualization of training logs.  \nScripts for downloading different datasets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.823771867466359
      ],
      "excerpt": "This repo supports following networks: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.967416139145854,
        0.9841144121303348
      ],
      "excerpt": "Below figure compares the performance of DiCENet with other efficient networks on the ImageNet dataset. DiCENet outperforms all existing efficient networks, including MobileNetv2 and ShuffleNetv2. More details here \nBelow table compares the performance of our architecture with other detection networks on the MS-COCO dataset. Our network is fast and accurate. More details here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9869178012166765
      ],
      "excerpt": "Below figure compares the performance of ESPNet and ESPNetv2 on two different datasets. Note that ESPNets are one of the first efficient networks that delivers competitive performance to existing networks on the PASCAL VOC dataset, even with low resolution images say 256x256. See here for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8982395744497202
      ],
      "excerpt": "Details about performance of different models are provided here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8982395744497202
      ],
      "excerpt": "Details about performance of different models are provided here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository contains the source code of our work on designing efficient CNNs for computer vision",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sacmehta/EdgeNets/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 76,
      "date": "Thu, 23 Dec 2021 05:57:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sacmehta/EdgeNets/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sacmehta/EdgeNets",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sacmehta/EdgeNets/master/data_loader/segmentation/scripts/download_cityscapes.sh",
      "https://raw.githubusercontent.com/sacmehta/EdgeNets/master/data_loader/segmentation/scripts/download_voc.sh",
      "https://raw.githubusercontent.com/sacmehta/EdgeNets/master/data_loader/segmentation/scripts/download_coco.sh",
      "https://raw.githubusercontent.com/sacmehta/EdgeNets/master/data_loader/detection/scripts/download_voc.sh",
      "https://raw.githubusercontent.com/sacmehta/EdgeNets/master/data_loader/detection/scripts/download_coco.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8177562199204159
      ],
      "excerpt": "Supports PyTorch 1.0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8685131807499905
      ],
      "excerpt": "            <img src=\"images/espnetv2_detection_2.gif\" alt=\"Demo 1\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8685131807499905
      ],
      "excerpt": "            <img src=\"images/espnetv2_detection_1.gif\" alt=\"Demo 2\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8685131807499905
      ],
      "excerpt": "            <img src=\"images/espnetv2_detection_3.gif\" alt=\"Demo 3\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": " 6. Training receipe \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sacmehta/EdgeNets/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Sachin Mehta\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Efficient networks for Computer Vision",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "EdgeNets",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sacmehta",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sacmehta/EdgeNets/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 364,
      "date": "Thu, 23 Dec 2021 05:57:20 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Thanks for your interest in our work :).\n\nOpen tasks that are interesting:\n * Tensorflow implementation. I kind of wanna do this but not getting enough time. If you are interested, drop a message and we can talk about it.\n * Optimizing the EESP and the DiceNet block at CUDA-level.\n * Optimize and port pretrained models across multiple mobile platforms, including Android.\n * Other thoughts are also welcome :).\n \n ",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "cnn",
      "cnn-classification",
      "object-detection",
      "semantic-segmentation",
      "mscoco",
      "cityscapes",
      "pascal-voc",
      "imagenet-dataset",
      "imagenet-classifier",
      "shufflenetv2",
      "espnetv2",
      "dicenet",
      "pytorch"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the segmentation demo, just type:\n\n```\npython segmentation_demo.py\n```\n\nTo run the detection demo, run the following command:\n``` \npython detection_demo.py\n\nOR \n\npython detection_demo.py --live\n```\n\nFor other supported arguments, please see the corresponding files.\n\n\n",
      "technique": "Header extraction"
    }
  ]
}