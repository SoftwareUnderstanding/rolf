{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1903.07291",
      "https://arxiv.org/abs/1502.03167](https://arxiv.org/abs/1502.03167",
      "https://arxiv.org/abs/1502.03167",
      "https://arxiv.org/abs/1707.00683](https://arxiv.org/abs/1707.00683",
      "https://arxiv.org/abs/1707.00683",
      "https://arxiv.org/abs/1610.07629](https://arxiv.org/abs/1610.07629",
      "https://arxiv.org/abs/1610.07629"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KushajveerSingh/SPADE-PyTorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-23T20:16:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T21:38:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9019753558243374
      ],
      "excerpt": "My blog post can be found here, SPADE: State of the art in Image-to-Image Translation by Nvidia \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8366788604138351
      ],
      "excerpt": "All the code for the repo can be found in the src-folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9931328427073364
      ],
      "excerpt": "* Inmodelsfolder there are model definitions of all the models discussed in the paper. They are built so as to resemble the paper architectures. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9762677668569087
      ],
      "excerpt": "Comparison of original model and my model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956166106974571
      ],
      "excerpt": "I was limited by my hardware so I changed my motive to being able to reproduce images that show that the model works. (Note:- I did not train my model completely, below are results after every 20 epochs) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch unofficial implementation of Semantic Image Synthesis with Spatially-Adaptive Normalization paper by Nvidia Research",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KushajveerSingh/SPADE-PyTorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Tue, 28 Dec 2021 11:32:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/KushajveerSingh/SPADE-PyTorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "KushajveerSingh/SPADE-PyTorch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/KushajveerSingh/SPADE-PyTorch/master/src/notebooks/develpment.ipynb",
      "https://raw.githubusercontent.com/KushajveerSingh/SPADE-PyTorch/master/src/notebooks/train_model.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.9151270764930737
      ],
      "excerpt": "\u2514\u2500\u2500 src \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "    \u2502\u00a0\u00a0 \u251c\u2500\u2500 cityscapes.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.8070459692340582
      ],
      "excerpt": "    \u2502\u00a0\u00a0 \u251c\u2500\u2500 spade_resblk.py \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 generator.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "    \u2502\u00a0\u00a0 \u251c\u2500\u2500 ganloss.py \n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 weights_init.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9610948196003122,
        0.950563948951535
      ],
      "excerpt": "    \u251c\u2500\u2500 args.py \n    \u251c\u2500\u2500 plot.py \n    \u2514\u2500\u2500 train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8313400164912708
      ],
      "excerpt": "* Intrain.pyI provide the train script to train your model. (I recommend using train_model.ipynb notebook for training your model, as I present complete model training process there) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8648739356087143
      ],
      "excerpt": "<img src='benchmark.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884629887036417
      ],
      "excerpt": "<img src='results.png'> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/KushajveerSingh/SPADE-PyTorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Kushajveer Singh\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Implementation of Semantic Image Synthesis with Spatially-Adaptive Normalization (SPADE) in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SPADE-PyTorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "KushajveerSingh",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KushajveerSingh/SPADE-PyTorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.7+\n* PyTorch 1.1+\n* cv2\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 25,
      "date": "Tue, 28 Dec 2021 11:32:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "object-detection",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}