{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "MixNet\n\n```bazaar\n@misc{tan2019mixconv,\n      title={MixConv: Mixed Depthwise Convolutional Kernels},\n      author={Mingxing Tan and Quoc V. Le},\n      year={2019},\n      eprint={1907.09595},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\nBig Transfer\n\n```bazaar\n@misc{kolesnikov2020big,\n      title={Big Transfer (BiT): General Visual Representation Learning},\n      author={Alexander Kolesnikov and Lucas Beyer and Xiaohua Zhai and Joan Puigcerver and\n      Jessica Yung and Sylvain Gelly and Neil Houlsby},\n      year={2020},\n      eprint={1912.11370},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\nResNet\n\n```bazaar\n@misc{he2015deep,\n      title={Deep Residual Learning for Image Recognition},\n      author={Kaiming He and Xiangyu Zhang and Shaoqing Ren and Jian Sun},\n      year={2015},\n      eprint={1512.03385},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{he2015deep,\n      title={Deep Residual Learning for Image Recognition},\n      author={Kaiming He and Xiangyu Zhang and Shaoqing Ren and Jian Sun},\n      year={2015},\n      eprint={1512.03385},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{kolesnikov2020big,\n      title={Big Transfer (BiT): General Visual Representation Learning},\n      author={Alexander Kolesnikov and Lucas Beyer and Xiaohua Zhai and Joan Puigcerver and\n      Jessica Yung and Sylvain Gelly and Neil Houlsby},\n      year={2020},\n      eprint={1912.11370},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{tan2019mixconv,\n      title={MixConv: Mixed Depthwise Convolutional Kernels},\n      author={Mingxing Tan and Quoc V. Le},\n      year={2019},\n      eprint={1907.09595},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8016990851101775
      ],
      "excerpt": "in this Medium article. BoulderAreaDetector uses a decently \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pszemraj/BoulderAreaDetector",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-01T04:22:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T05:32:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9823537151553856,
        0.9901959002312366,
        0.9654042861060341,
        0.9083998971880335,
        0.9922327623314973,
        0.9371765403679712
      ],
      "excerpt": "Deploys a deep learning CNN classifying satellite imagery to streamlit for user testing. \nThe app is an MVP demo of BoulderSpot. The original idea for BoulderSpot originated in the June 2021 CASSINI Hackathon, that repo is here. \nBoulderSpot uses a similar model to the one included here to classify whether aerial images are potential boulder areas or not. The class results are then used as part of a graph-like framework to analyze aerial imagery all across Switzerland. You can find more details on the website! \nAn example of model predictions on a holdout set: \nA picture of some of the boulders the (full) model found after an in-person data validation trip: \nIn short, the predictor under-the-hood is: fastai library using a convolutional neural network \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513773548928362,
        0.827918387765912,
        0.825218922571223
      ],
      "excerpt": "Source image data for training is mostly arial (possibly some satellite) sampled from Switzerland. \nNote: the model deployed in the streamlit app has changed. the original model used in this app \nwas ResNet101 and the trained model file is ~170 MB. As GitHub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9711729908038352
      ],
      "excerpt": "to MixNet-XL, which exhibits similar performance but is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.98816083663599,
        0.9699845169987509
      ],
      "excerpt": "Also included in the repo is a zipped model file of a trained Big Transfer model that is more accurate than either of the \ntwo. As this model is > 100 mb and streamlit unzipping+predicting performance is yet to be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8179102638132943
      ],
      "excerpt": "not had any significant level of hyperparameter optimization yet beyond fast. ai basics. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8430008037426387
      ],
      "excerpt": "    *Note: the above links to timm source code as the MixNet paper is already linked above* \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8672487129399602
      ],
      "excerpt": "Loss:  FlattenedLoss of CrossEntropyLoss() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8162879628333198
      ],
      "excerpt": "More details can be found in /info \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8672487129399602
      ],
      "excerpt": "Loss:  FlattenedLoss of CrossEntropyLoss() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9007716629187501
      ],
      "excerpt": "More details: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An app that uses a CNN to classify whether a satellite image shows an area would be a good rock climbing spot or not. On streamlit.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pszemraj/BoulderAreaDetector/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 22:09:35 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pszemraj/BoulderAreaDetector/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pszemraj/BoulderAreaDetector",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The following images had the highest loss when evaluated as part of the test (not holdout) set\nduring training:\n\n![highest loss MixNet imgs](https://www.dropbox.com/s/7nlo210srtq9xwg/mixnet_xl%20%20-%20CK%2BA%20-%2020ephighest_loss_images.png?dl=1)\n\n* * *\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "`#TODO`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.882419419101279
      ],
      "excerpt": "    *Note: the above links to timm source code as the MixNet paper is already linked above* \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pszemraj/BoulderAreaDetector/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "BoulderAreaDetector",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "BoulderAreaDetector",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pszemraj",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pszemraj/BoulderAreaDetector/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 22:09:35 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "cnn-classification",
      "gis",
      "satellite-imagery",
      "geospatial-analysis",
      "streamlit",
      "fastai",
      "pytorch",
      "resnet",
      "computer-vision",
      "remote-sensing",
      "cnn",
      "rock-climbing",
      "bouldering",
      "convolutional-neural-networks",
      "deep-neural-networks",
      "image-classification"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`#TODO`\n\n",
      "technique": "Header extraction"
    }
  ]
}