{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yulangz/End-To-End-Memory-Networks-in-Paddle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-04T13:29:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-10T08:23:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can set the following parameters in `config.py`\n\n```\nconfig.edim = 150                       #: internal state dimension\nconfig.lindim = 75                      #: linear part of the state\nconfig.nhop = 7                         #: number of hops\nconfig.mem_size = 200                   #: memory size\nconfig.batch_size = 128                 #: batch size to use during training\nconfig.nepoch = 100                     #: number of epoch to use during training\nconfig.init_lr = 0.01                   #: initial learning rate\nconfig.init_hid = 0.1                   #: initial internal state value\nconfig.init_std = 0.05                  #: weight initialization std\nconfig.max_grad_norm = 50               #: clip gradients to this norm\nconfig.data_dir = \"data\"                #: data directory\nconfig.checkpoint_dir = \"checkpoints\"   #: checkpoint directory\nconfig.model_name = \"model\"             #: model name for test and recover train\nconfig.recover_train = False            #: if True, load model [model_name] before train\nconfig.data_name = \"ptb\"                #: data set name\nconfig.show = True                      #: print progress, need progress module\nconfig.srand = 17814                    #: initial random seed\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This project reproduces [End-To-End Memory Networks](https://arxiv.org/pdf/1503.08895v5.pdf)  based on paddlepaddle framework.\n\n![\u6a21\u578b\u7b80\u4ecb](image/model_introduction.png)\n\nPaper: [Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, Rob Fergus: \u201cEnd-To-End Memory Networks\u201d, 2015.](https://arxiv.org/pdf/1503.08895v5.pdf)\n\nReference repo: [https://github.com/facebookarchive/MemNN](https://github.com/facebookarchive/MemNN)\n\nThe link of AiStudio: [https://aistudio.baidu.com/aistudio/projectdetail/2381004](https://aistudio.baidu.com/aistudio/projectdetail/2381004)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8641623167642699
      ],
      "excerpt": "Note: Since this model is greatly affected by random factors, the results of each training are quite different. Even if random seeds are fixed, the training results cannot be completely consistent due to GPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9774697308838415,
        0.9602707011944589
      ],
      "excerpt": "Since the model is greatly affected by random factors, many times of training are needed to find the optimal model. In the original paper, 10 times of training are conducted on the ptb dataset, and the model with the best performance on the test set is retained. This replay provides a script to train multiple times to get a model with sufficient accuracy. \nThe following is the log of multiple trainings on the ptb dataset to achieve the target accuracy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u251c\u2500\u2500 data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\u7528paddle\u590d\u73b0\u8bba\u6587end to end memory networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yulangz/End-to-End-Memory-Networks-in-Paddle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 15:53:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yulangz/End-To-End-Memory-Networks-in-Paddle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yulangz/End-To-End-Memory-Networks-in-Paddle",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9235521872147875
      ],
      "excerpt": "Hardware: GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9033987252512259
      ],
      "excerpt": "\u251c\u2500\u2500 requirements.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8132360439522935
      ],
      "excerpt": "train\uff1aA total of 100M characters are divided into 93.3M/5.7M /1M characters for train/valid/test. Replace words that occur less than 10 times with <UNK>. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8868593903694467
      ],
      "excerpt": "The training parameters can be adjusted in the config.py file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8014831646189274,
        0.9503189345333785
      ],
      "excerpt": "cp config/config_ptb config.py \npython train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8014831646189274,
        0.9503189345333785,
        0.8689223115112397,
        0.8943096850060217
      ],
      "excerpt": "cp config/config_text8 config.py \npython train.py \nKeep the config.py file as it was during training \npython eval.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8014831646189274,
        0.8943096850060217
      ],
      "excerpt": "cp config/config_ptb_test config.py \npython eval.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8014831646189274,
        0.8943096850060217
      ],
      "excerpt": "cp config/config_text8_test config.py \npython eval.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477596219850383,
        0.8454553703666403
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 ptb.test.txt \n\u2502   \u251c\u2500\u2500 ptb.train.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477596219850383,
        0.8454553703666403
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 text8.test.txt \n\u2502   \u251c\u2500\u2500 text8.train.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yulangz/End-To-End-Memory-Networks-in-Paddle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "End-To-End-Memory-Networks-in-Paddle",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "End-To-End-Memory-Networks-in-Paddle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yulangz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yulangz/End-To-End-Memory-Networks-in-Paddle/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 15:53:13 GMT"
    },
    "technique": "GitHub API"
  }
}