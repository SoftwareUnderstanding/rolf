{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "D Berthelot, N Carlini, I Goodfellow, N Papernot, A Oliver, CA Raffel, MixMatch: A Holistic Approach to Semi-Supervised Learning, 2019 \nKihyuk Sohn, David Berthelot, Chun-Liang Li, Zizhao Zhang, FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence, 2020\n\n\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DonghwanKIM0101/CS492I_CV",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-16T14:58:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-13T12:46:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "It is project in KAIST CS492(I) course. With NSML of NAVER, implement shopping item object detection model. \n\n![Alt text](Image/0a5e810ae2cbbf0bdbce393ed8209498.jpg)\n![Alt text](Image/0a70b8806168e481d63f8331bbdf00f8.jpg)\n\nThese are the example of data.\nOur team's approach is to exploit [FixMatch](https://arxiv.org/pdf/2001.07685.pdf) to [MixMatch](https://arxiv.org/pdf/1905.02249.pdf).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9439638129973926
      ],
      "excerpt": "The model output of FixMixMatch and ThresholdMixMatch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8988203688140641,
        0.8988203688140641
      ],
      "excerpt": "FixMixMatch_np.pt and FixMixMatch_p.pt are each for FixMixMatch model in non-pretrained and pretrained option \nThresholdMixMatch_np.pt and ThresholdMixMatch_p.pt are each for ThresholdMixMatch model in non-pretrained and pretrained option \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "2.2 Data Augmentation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9426322899415721
      ],
      "excerpt": "Threshold is one of main concept of FixMatch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9832544030631444,
        0.967813916429276,
        0.8493137189232596
      ],
      "excerpt": "By using threshold while guessing pseudo label, the model only learn for confident unlabeled data. \nOriginal method use fixed threshold value, 0.95. Compared to original method, our team have to use non-pretrained model for this project. \nWe suggest new concept threshold scheduling. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9961736953795145,
        0.9853928230159966
      ],
      "excerpt": "In the graph, X-axis is current_epoch/total_epoch and Y-axis is the probability that unused unlabeled data. \nFor first epoch, the model learn the most confident 30% unlabeled data, and for last epoch, the model learn all of the unlabeled data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9277490416392911
      ],
      "excerpt": "For weak data augmentation, Crop, Horizontal Flip, and Vertical Flip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9781029426684275,
        0.9959641847094541,
        0.9984465928302156
      ],
      "excerpt": "To check our own model, compare MixMatch, ThresholdMixMatch, FixMixMatch. \nThresholdMixMatch is MixMatch with threshold scheduling, \nFixMixMatch is MixMatch with threshold scheduling, weak and strong data augmentation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9039364522794675
      ],
      "excerpt": "We wanted to exploit FixMatch to MixMatch; FixMixMatch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.991781575182238
      ],
      "excerpt": "We guessed that it is because the strong data augmentation does not work well in non-pretrained model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9694299580871009
      ],
      "excerpt": "The graph proves our guess. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9840754617601122
      ],
      "excerpt": "Compared to original threshold concept, our new concept focuses more on non-pretrained model. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DonghwanKIM0101/CS492I_CV/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 11:25:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DonghwanKIM0101/CS492I_CV/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "DonghwanKIM0101/CS492I_CV",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8379187043518296
      ],
      "excerpt": "<img src=\"Image/threshold.png\" width=\"450px\"></img><br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8300179370817079
      ],
      "excerpt": "<img src=\"Image/threshold_scheduling.png\" width=\"450px\"></img><br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8300179370817079
      ],
      "excerpt": "<img src=\"Image/data_augmentation.png\" width=\"450px\"></img><br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8300179370817079,
        0.8300179370817079
      ],
      "excerpt": "<img src=\"Image/avg_top1_np.png\" width=\"300px\"></img><br/> \n<img src=\"Image/avg_top5_np.png\" width=\"300px\"></img><br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8300179370817079,
        0.8300179370817079,
        0.8248131654925057
      ],
      "excerpt": "<img src=\"Image/avg_top1_p.png\" width=\"300px\"></img><br/> \n<img src=\"Image/avg_top5_p.png\" width=\"300px\"></img><br/> \nFor pretrained model, three models show similar result although FixMixMatch shows the worst result in average top1. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8300179370817079
      ],
      "excerpt": "<img src=\"Image/conclusion.png\" width=\"300px\"></img><br/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DonghwanKIM0101/CS492I_CV/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS492(I) CV Project",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS492I_CV",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "DonghwanKIM0101",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DonghwanKIM0101/CS492I_CV/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 11:25:24 GMT"
    },
    "technique": "GitHub API"
  }
}