{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.10593"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnab39/cycleGAN-PyTorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-15T20:55:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-03T07:56:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9973957539219785,
        0.992435795015522,
        0.8321497457749031,
        0.8577125862851269
      ],
      "excerpt": "CycleGAN is one of the most interesting works I have read. Although the idea behind cycleGAN looks quite intuitive after you read the paper: Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks, the official PyTorch implementation by junyanz is difficult to understand for beginners (The code is really well written but it's just that it has multiple things implemented together).  As I am writing a simpler version of the code for some other work, I thought of making my version of cycleGAN  public for those who are looking for an easier implementation of the paper.  \nAll the credit goes to the authors of the paper. \nThis code is inspired by the actual implementation by junyanz which can be found here. \nFor horse to zebra dataset. ( Real - Generated - Reconstructed) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A clean and lucid implementation of cycleGAN using PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnab39/cycleGAN-PyTorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 38,
      "date": "Tue, 28 Dec 2021 06:38:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/arnab39/cycleGAN-PyTorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "arnab39/cycleGAN-PyTorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/arnab39/cycleGAN-PyTorch/master/download_dataset.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8442652622209753,
        0.8442652622209753,
        0.8442652622209753
      ],
      "excerpt": "  <img src=\"https://github.com/arnab39/cycleGAN-PyTorch/blob/master/images/horse_real.png\" width=\"250\" /> \n  <img src=\"https://github.com/arnab39/cycleGAN-PyTorch/blob/master/images/zebra_generated.png\" width=\"250\" /> \n  <img src=\"https://github.com/arnab39/cycleGAN-PyTorch/blob/master/images/horse_reconstructed.png\" width=\"250\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8442652622209753,
        0.8442652622209753,
        0.8442652622209753
      ],
      "excerpt": "  <img src=\"https://github.com/arnab39/cycleGAN-PyTorch/blob/master/images/zebra_real.png\" width=\"250\" /> \n  <img src=\"https://github.com/arnab39/cycleGAN-PyTorch/blob/master/images/horse_generated.png\" width=\"250\" /> \n  <img src=\"https://github.com/arnab39/cycleGAN-PyTorch/blob/master/images/zebra_reconstructed.png\" width=\"250\" /> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/arnab39/cycleGAN-PyTorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Arnab Kumar Mondal\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CycleGAN using PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cycleGAN-PyTorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "arnab39",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/arnab39/cycleGAN-PyTorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- The code has been written in Python (3.5.2) and PyTorch (0.4.1)\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* To download datasets (eg. horse2zebra)\n```\n$ sh ./download_dataset.sh horse2zebra\n```\n* To run training\n```\n$ python main.py --training True\n```\n* To run testing\n```\n$ python main.py --testing True\n```\n* Try tweaking the arguments to get best performance according to the dataset.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 89,
      "date": "Tue, 28 Dec 2021 06:38:41 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch-implementation",
      "cyclegan",
      "cyclegan-pytorch",
      "image-translation",
      "deep-learning",
      "generative-adversarial-network",
      "computer-vision"
    ],
    "technique": "GitHub API"
  }
}