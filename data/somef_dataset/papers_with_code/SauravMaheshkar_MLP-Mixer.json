{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@misc{tolstikhin2021mlpmixer,\n    title   = {MLP-Mixer: An all-MLP Architecture for Vision},\n    author  = {Ilya Tolstikhin and Neil Houlsby and Alexander Kolesnikov and Lucas Beyer and Xiaohua Zhai and Thomas Unterthiner and Jessica Yung and Daniel Keysers and Jakob Uszkoreit and Mario Lucic and Alexey Dosovitskiy},\n    year    = {2021},\n    eprint  = {2105.01601},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{tolstikhin2021mlpmixer,\n    title   = {MLP-Mixer: An all-MLP Architecture for Vision},\n    author  = {Ilya Tolstikhin and Neil Houlsby and Alexander Kolesnikov and Lucas Beyer and Xiaohua Zhai and Thomas Unterthiner and Jessica Yung and Daniel Keysers and Jakob Uszkoreit and Mario Lucic and Alexey Dosovitskiy},\n    year    = {2021},\n    eprint  = {2105.01601},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SauravMaheshkar/MLP-Mixer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-30T06:46:27Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-23T02:42:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9995265786355186,
        0.9828454896590992
      ],
      "excerpt": "The strong performance of recent vision architectures is often attributed to Attention or Convolutions. But Multi Layer Perceptrons have always been better at capturing long-range dependencies and positional patterns, but admittedly fall behind when it comes to learning local features, which is where CNNs shine. An interesting new perspective of viewing convolutions as a \"sparse FC with shared parameters\" was proposed in Ding, et al. This perspective opens up a new way of looking at architectures. In this report we'll look at one such paper which explores the idea of using convolutions with an extremely small kernel size of (1,1) essentially turning convolutions into standard matrix multiplications applied independently to each spatial location.  This modification alone doesn't allow for the aggregation of spatial information. To compensate for this the authors proposed dense matrix multiplications that are applied to every feature across all spatial locations. \nThis repository includes a minimal implementation of MLP-Mixer written in Flax. Most of the codebase is ported from the original implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8659196428621749
      ],
      "excerpt": "Use the Remote Containers Extension in VSCode and attach to the running container. The code resides in the code/ dir. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Minimal Flax implementation of MLP-Mixer from \"MLP-Mixer: An all-MLP Architecture for Vision\" (https://arxiv.org/abs/2105.01601)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SauravMaheshkar/MLP-Mixer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 01:52:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SauravMaheshkar/MLP-Mixer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SauravMaheshkar/MLP-Mixer",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SauravMaheshkar/MLP-Mixer/main/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SauravMaheshkar/MLP-Mixer/main/examples/FineTuning_Example.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can install this package from PyPI:\n\n```sh\npip install mlpmixer-flax\n```\n\nOr directly from GitHub:\n\n```sh\npip install --upgrade git+https://github.com/SauravMaheshkar/MLP-Mixer.git\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9036586136466717,
        0.9434212888093526
      ],
      "excerpt": "conda env create --name &lt;env-name&gt; sauravmaheshkar/mlpmixer \nconda activate &lt;env-name&gt; \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SauravMaheshkar/MLP-Mixer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Saurav Maheshkar\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Flax implementation of MLP-Mixer from \"MLP-Mixer: An all-MLP Architecture for Vision\"",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MLP-Mixer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SauravMaheshkar",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SauravMaheshkar/MLP-Mixer/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "SauravMaheshkar",
        "body": "Initial Release for the associated [**Weights and Biases Report**](https://wandb.ai/sauravmaheshkar/MLP-Mixer/reports/MLPs-are-all-you-Need-Back-to-Square-One---Vmlldzo4MTUzMzQ). Includes Example Notebook and initial pypi release.",
        "dateCreated": "2021-07-03T08:16:27Z",
        "datePublished": "2021-07-03T08:19:31Z",
        "html_url": "https://github.com/SauravMaheshkar/MLP-Mixer/releases/tag/v0.0.1",
        "name": "Version 0.0.1",
        "tag_name": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/SauravMaheshkar/MLP-Mixer/tarball/v0.0.1",
        "url": "https://api.github.com/repos/SauravMaheshkar/MLP-Mixer/releases/45655156",
        "zipball_url": "https://api.github.com/repos/SauravMaheshkar/MLP-Mixer/zipball/v0.0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Thu, 23 Dec 2021 01:52:19 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "python",
      "deep-learning",
      "machine-learning",
      "pypi",
      "neural-networks",
      "flax",
      "jax",
      "pypi-package"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom mlpmixer_flax.config import mixer_b16_config\nfrom mlpmixer_flax.dataloader import get_dataset_info\nfrom mlpmixer_flax.models import MlpMixer\n\ndataset = \"cifar10\"\nnum_classes = get_dataset_info(dataset, \"train\")[\"num_classes\"]\nmodel = MlpMixer(num_classes=num_classes, **mixer_b16_config)\n```\n\nThe easiest way to get started would be to try out the [FineTuning Example Notebook](https://github.com/SauravMaheshkar/MLP-Mixer/blob/main/examples/FineTuning_Example.ipynb).\n\n",
      "technique": "Header extraction"
    }
  ]
}