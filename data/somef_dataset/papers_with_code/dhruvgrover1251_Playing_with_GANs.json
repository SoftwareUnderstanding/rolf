{
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "<h3> Generative Adversarial Nets(Summary) </h3> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "<h4>Mathematics behind above intuition</h4> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111036989382164
      ],
      "excerpt": "  ![alt text](https://github.com/dhruvgrover1251/Playing_with_GANs/blob/master/dcgan%20gif%20mnist.gif)<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111036989382164
      ],
      "excerpt": "   ![alt text](https://github.com/dhruvgrover1251/Playing_with_GANs/blob/master/celeba_DCGANs.gif)<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dhruvgrover1251/Playing_with_GANs",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-05T16:36:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-10T18:35:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9918224454430714
      ],
      "excerpt": "<p>This repository consist of implementation of DCGANs on 2 datasets (celeba and MNIST) for generating completely new looking images of faces and numbers respectively.</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906128909950556,
        0.8908252936894128,
        0.889458491140405
      ],
      "excerpt": "<h4> Introduction</h4> \n<p> GANs take a game-theoretical approach: learn to generate from 2 player games to come over the problem of the intractable density function. \nThis model doesn\u2019t assume explicit density function as in the case of VAEs.</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9293475998169284
      ],
      "excerpt": "<p> In this, we have two types of networks,</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9834659108684217
      ],
      "excerpt": "<p>To learn the generator\u2019s distribution p<sub>g</sub> over data x, we define a prior on input noise variables p<sub>g</sub>(z), then represent a mapping to data space as G(z; theta<sub>g</sub>), where G is a differentiable function represented by a multilayer perceptron with parameters g.</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8981783948966123
      ],
      "excerpt": "<p>It is a second multilayer perceptron D(x;theta<sub> d</sub>) that outputs a single scalar. D(x) represents the probability that x came from the data rather than p<sub>g.</sub></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9638195497124364,
        0.8956196004790089,
        0.9709214822767569,
        0.8129959520637197
      ],
      "excerpt": "1. <p> Discriminator(theta<sub>d</sub> ) try to maximize objective function such that D(x) is close to 1(real) and D(G(z)) is close to 0(fake).</p> \n<p>D is trained so that we get the maximum value of log(D<sub>theta d</sub>(x)) that is internally trying to label dataset images as real, also D is maximizing log(1-D<sub>theta d</sub>(G<sub>theta g</sub>(z)) this internally trying to label generated images as fake images. </p> \n<p>Generator (theta<sub>g</sub> ) try to minimize objective such that D(G(Z)) is close to 1.</p> \n<P>It is trying to minimize log(1-D<sub>theta d</sub>(G<sub> theta g </sub>(z)) thus setting g (through gradient descents) such that it can fool discriminator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8997237201583265
      ],
      "excerpt": "1.<p>There is no explicit representation of p<sub>g</sub> (x).</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8566562137132454,
        0.9007542886576564,
        0.8901721667467182
      ],
      "excerpt": "<p><b>Here paper summary of paper ends.</b></p> \n<p>The notebook you see here is implemented in form of convolutional architecture popularly known as <b>DCGANs</b>. \n<p> Here is basoc architecture of DCGANs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8952920290220556,
        0.9743707727217639
      ],
      "excerpt": "  <p>Here I implemented DCGANs on MNIST dataset and celeba(50000images due to lack of computational power)</p> \n  <h3> Results of applying DCGANs on MNIST</h3> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9743707727217639,
        0.8656640378227386
      ],
      "excerpt": "  <h3>Results of applying MNIST on celeba<h3> \n  <b>Note: Here the model is not getting good results as it as facing mode collapse, so I am still improving this.</b><br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository consist of implementation of DCGANs on 2 datasets (celeba and MNIST) for generating completely new looking images of faces and numbers respectively.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dhruvgrover1251/Playing_with_GANs/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 20:42:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dhruvgrover1251/Playing_with_GANs/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dhruvgrover1251/Playing_with_GANs",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/dhruvgrover1251/Playing_with_GANs/master/GANs_impl.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8867619762456532
      ],
      "excerpt": "  ![alt text](https://github.com/dhruvgrover1251/Playing_with_GANs/blob/master/dcgan%20gif%20mnist.gif)<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867619762456532
      ],
      "excerpt": "   ![alt text](https://github.com/dhruvgrover1251/Playing_with_GANs/blob/master/celeba_DCGANs.gif)<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.803933886665225
      ],
      "excerpt": "  MNIST result after 50th epoch<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8085539476836073
      ],
      "excerpt": "   celeba result after 100th epoch<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dhruvgrover1251/Playing_with_GANs/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Playing_with_GANs",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Playing_with_GANs",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dhruvgrover1251",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dhruvgrover1251/Playing_with_GANs/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 20:42:42 GMT"
    },
    "technique": "GitHub API"
  }
}