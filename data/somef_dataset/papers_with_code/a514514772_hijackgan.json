{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code is built upon [InterfaceGAN](https://github.com/genforce/interfacegan)\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2011.14107"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.854836641318266
      ],
      "excerpt": "[Paper (CVPR 2021)][Project Page] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/a514514772/hijackgan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-01T15:15:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T02:59:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9457989438933635,
        0.832032831011846
      ],
      "excerpt": "In this work, we propose a framework HijackGAN, which enables non-linear latent space traversal and gain high-level controls, e.g., attributes, head poses, and landmarks, over unconditional image generation GANs in a fully black-box setting. It opens up the possibility of reusing GANs while raising concerns about unintended usage. \n[Paper (CVPR 2021)][Project Page] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8975922463955894
      ],
      "excerpt": "    -i codes/pggan_cond/age.npy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150771532802734
      ],
      "excerpt": "    --method ours \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150771532802734
      ],
      "excerpt": "    --method ours \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150771532802734
      ],
      "excerpt": "    --method ours \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9063194623340443
      ],
      "excerpt": "This a templeate showing how we generated balanced data for attribute manipulation (16 attributes in our internal experiments). You can modify it to fit your task better. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[CVPR 2021] Pytorch implementation of Hijack-GAN: Unintended-Use of Pretrained, Black-Box GANs",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Download the CelebAHQ pretrained weights of ProgressiveGAN [[paper]](https://arxiv.org/pdf/1710.10196.pdf)[[code]](https://github.com/tkarras/progressive_growing_of_gans) and StyleGAN [[paper]](https://arxiv.org/pdf/1812.04948.pdf)[[code]](https://github.com/NVlabs/stylegan), and then put those weights in `./models/pretrain`. For example,\n```\npretrain/\n\u251c\u2500\u2500 Pretrained_Models_Should_Be_Placed_Here\n\u251c\u2500\u2500 karras2018iclr-celebahq-1024x1024.pkl\n\u251c\u2500\u2500 karras2019stylegan-celebahq-1024x1024.pkl\n\u251c\u2500\u2500 pggan_celebahq_z.pt\n\u251c\u2500\u2500 stylegan_celebahq_z.pt\n\u251c\u2500\u2500 stylegan_headpose_z_dp.pt\n\u2514\u2500\u2500 stylegan_landmark_z.pt\n```\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/a514514772/hijackgan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 19:31:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/a514514772/hijackgan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "a514514772/hijackgan",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/a514514772/hijackgan/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/a514514772/hijackgan/main/scripts/taylor_approximation.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/a514514772/hijackgan/main/generate_balanced_data.sh",
      "https://raw.githubusercontent.com/a514514772/hijackgan/main/scripts/train_svm.sh",
      "https://raw.githubusercontent.com/a514514772/hijackgan/main/scripts/eval_ppl.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install -r requirements.txt\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8609664299294902
      ],
      "excerpt": "[x] Prerequisites \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python edit.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python edit.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python edit.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828665034782968
      ],
      "excerpt": "    --step_size 0.01 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810094876824159,
        0.9246227682586091
      ],
      "excerpt": "    --demo \npython edit.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810094876824159,
        0.8006138501541956,
        0.8524457426084595
      ],
      "excerpt": "    --demo \nParameters for reference: (attr_index, step_size, steps) (4: 0.005 400) (5: 0.01 100), (6: 0.1 200), (8 0.1 200) \nCUDA_VISIBLE_DEVICES=0 python edit.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810094876824159
      ],
      "excerpt": "    --demo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8524457426084595
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python generate_balanced_data.py -m stylegan_celebahq \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.897176225947782
      ],
      "excerpt": "[x] Basic usage \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/a514514772/hijackgan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Hui-Po Wang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Hijack-GAN: Unintended-Use of Pretrained, Black-Box GANs",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "hijackgan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "a514514772",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/a514514772/hijackgan/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 32,
      "date": "Fri, 24 Dec 2021 19:31:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deeplearning",
      "pytorch",
      "hijackgan",
      "generative-adversarial-network",
      "computer-vision",
      "cybersecurity"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Specify number of images to edit, a model to generate images, some parameters for editting.\n```\nLATENT_CODE_NUM=1\npython edit.py \\\n    -m pggan_celebahq \\\n    -b boundaries/ \\\n    -n \"$LATENT_CODE_NUM\" \\\n    -o results/stylegan_celebahq_eyeglasses \\\n    --step_size 0.2 \\\n    --steps 40 \\\n    --attr_index 0 \\\n    --task attribute \\\n    --method ours\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "**Important:** For different given images (initial points), different step size and steps may be considered. In the following examples, we provide the parameters used in our paper. One could adjust them for better performance.\n\n",
      "technique": "Header extraction"
    }
  ]
}