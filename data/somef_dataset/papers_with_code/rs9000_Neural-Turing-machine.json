{
  "citation": [
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "https://arxiv.org/pdf/1410.5401.pdf <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rs9000/Neural-Turing-machine",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-29T14:20:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-06T13:49:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "NTM in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rs9000/Neural-Turing-machine/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 04:56:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rs9000/Neural-Turing-machine/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "rs9000/Neural-Turing-machine",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rs9000/Neural-Turing-machine/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Neural-Turing-machine",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Neural-Turing-machine",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "rs9000",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rs9000/Neural-Turing-machine/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 04:56:57 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "ntm",
      "neural-turing-machines",
      "pytorch",
      "deep-learning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nusage: train.py [-args]\n\noptional arguments:\n  -h, --help              show this help message and exit\n  --sequence_length       The length of the sequence to copy (default: 3)\n  --token_size            The size of the tokens making the sequence (default: 10)\n  --memory_capacity       Number of records that can be stored in memory (default: 64)\n  --memory_vector_size    Dimensionality of records stored in memory (default: 128)\n  --training_samples      Number of training samples (default: 999999)\n  --controller_output_dim Dimensionality of the feature vector produced by the controller (default: 256)\n  --controller_hidden_dim Dimensionality of the hidden layer of the controller (default: 512)\n  --learning_rate         Optimizer learning rate (default: 0.0001)\n  --min_grad              Minimum value of gradient clipping (default: -10.0)\n  --max_grad              Maximum value of gradient clipping (default: 10.0)\n  --logdir                The directory where to store logs (default: logs)\n  --loadmodel             The pre-trained model checkpoint (default: '')\n  --savemodel             Path/name to save model checkpoint (default: 'checkpoint.model')\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}