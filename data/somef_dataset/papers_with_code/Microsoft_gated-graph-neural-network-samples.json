{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.05493",
      "https://arxiv.org/abs/1704.01212",
      "https://arxiv.org/abs/1609.02907",
      "https://arxiv.org/abs/1703.06103"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9939721622285977
      ],
      "excerpt": "of Li et al. 2015 for learning properties of chemical molecules. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9062059168507246
      ],
      "excerpt": "python3 ./chem_tensorflow_dense.py --restore ./2018-02-01-11-30-05_16306_model_best.pickle \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/microsoft/gated-graph-neural-network-samples",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "CONTRIBUTING\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\nThis project has adopted the Microsoft Open Source Code of Conduct.\nFor more information see the Code of Conduct FAQ or\ncontact opencode@microsoft.com with any additional questions or comments.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-13T15:28:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-14T10:13:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9842140546485556,
        0.947634978314357
      ],
      "excerpt": "This repository contains two implementations of the Gated Graph Neural Networks \nof Li et al. 2015 for learning properties of chemical molecules. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8236260610331939,
        0.8449662495182944
      ],
      "excerpt": "This code was tested in Python 3.5 with TensorFlow 1.3. To run the code docopt is also necessary. \nThis code was maintained by the Deep Program Understanding project at Microsoft Research, Cambridge, UK. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073737513954784,
        0.9783267603835809
      ],
      "excerpt": "This project has adopted the Microsoft Open Source Code of Conduct. \nFor more information see the Code of Conduct FAQ or \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Sample Code for Gated Graph Neural Networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Microsoft/gated-graph-neural-network-samples/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 261,
      "date": "Sun, 26 Dec 2021 05:52:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/microsoft/gated-graph-neural-network-samples/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "microsoft/gated-graph-neural-network-samples",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.85032201688092,
        0.8839750855955709,
        0.9995234057802402
      ],
      "excerpt": "To download the related data run get_data.py. It requires the python package rdkit within the Python package \nenvironment. For example, this can be obtained by \nconda install -c rdkit rdkit \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8759955720239709
      ],
      "excerpt": "python3 ./chem_tensorflow_dense.py --config '{\"num_epochs\": 1}' \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/microsoft/gated-graph-neural-network-samples/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'    MIT License\\n\\n    Copyright (c) Microsoft Corporation. All rights reserved.\\n\\n    Permission is hereby granted, free of charge, to any person obtaining a copy\\n    of this software and associated documentation files (the \"Software\"), to deal\\n    in the Software without restriction, including without limitation the rights\\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n    copies of the Software, and to permit persons to whom the Software is\\n    furnished to do so, subject to the following conditions:\\n\\n    The above copyright notice and this permission notice shall be included in all\\n    copies or substantial portions of the Software.\\n\\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n    SOFTWARE\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Gated Graph Neural Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "gated-graph-neural-network-samples",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "microsoft",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/microsoft/gated-graph-neural-network-samples/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We provide four versions of Graph Neural Networks: Gated Graph Neural Networks (one implementation using dense\nadjacency matrices and a sparse variant), Asynchronous Gated Graph Neural Networks, and Graph Convolutional\nNetworks (sparse).\nThe dense version is faster for small or dense graphs, including the molecules dataset (though the difference is\nsmall for it). In contrast, the sparse version is faster for large and sparse graphs, especially in cases where\nrepresenting a dense representation of the adjacency matrix would result in prohibitively large memory usage.\nAsynchronous GNNs do not propagate information from all nodes to all neighbouring nodes at each timestep;\ninstead, they follow an update schedule such that messages are propagated in sequence. Their implementation\nis far more inefficient (due to the small number of updates at each step), but a single propagation round\n(i.e., performing each propagation step along a few edges once) can suffice to propagate messages across a\nlarge graph.\n\nTo run dense Gated Graph Neural Networks, use\n```\npython3 ./chem_tensorflow_dense.py\n```\n\nTo run sparse Gated Graph Neural Networks, use\n```\npython3 ./chem_tensorflow_sparse.py\n```\n\nTo run sparse Graph Convolutional Networks (as in [Kipf et al. 2016](https://arxiv.org/abs/1609.02907)), use\n```\npython3 ./chem_tensorflow_gcn.py\n```\n\nFinally, it turns out that the extension of GCN to different edge types is a variant of GGNN, and you can run\nGCN (as in [Schlichtkrull et al. 2017](https://arxiv.org/abs/1703.06103)) by calling\n```\npython3 ./chem_tensorflow_sparse.py --config '{\"use_edge_bias\": false, \"use_edge_msg_avg_aggregation\": true, \"residual_connections\": {}, \"layer_timesteps\": [1,1,1,1,1,1,1,1], \"graph_rnn_cell\": \"RNN\", \"graph_rnn_activation\": \"ReLU\"}'\n```\n\nTo run asynchronous Gated Graph Neural Networks, use\n```\npython3 ./chem_tensorflow_async.py\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 981,
      "date": "Sun, 26 Dec 2021 05:52:14 GMT"
    },
    "technique": "GitHub API"
  }
}