{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.10568"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite our paper if you use this code in your own work:\n\n```\n@inproceedings{chen2018stochastic,\n  title={Stochastic Training of Graph Convolutional Networks with Variance Reduction},\n  author={Chen, Jianfei and Zhu, Jun and Song, Le},\n  booktitle={International Conference on Machine Learning},\n  pages={941--949},\n  year={2018}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{chen2018stochastic,\n  title={Stochastic Training of Graph Convolutional Networks with Variance Reduction},\n  author={Chen, Jianfei and Zhu, Jun and Song, Le},\n  booktitle={International Conference on Machine Learning},\n  pages={941--949},\n  year={2018}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thu-ml/stochastic_gcn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-01-08T05:50:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-08T09:48:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9708901069017702
      ],
      "excerpt": "Code for the paper Stochastic Training for Graph Convolutional Networks. The implementation is based on Thomas Kipf's implementation for graph convolutional networks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "mv gcn/gcn/data/* . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Stochastic training of graph convolutional networks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thu-ml/stochastic_gcn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 17,
      "date": "Thu, 23 Dec 2021 04:35:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/thu-ml/stochastic_gcn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "thu-ml/stochastic_gcn",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/thu-ml/stochastic_gcn/master/gcn/build.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure that you have valid c++11 and cuda compiler.\n\n```bash\npip install --upgrade pip\npip install numpy scipy networkx==1.11 tensorflow-gpu scikit-learn\npython setup.py install\ncd gcn\n./build.sh\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8080002376980483,
        0.9798376452272237
      ],
      "excerpt": "cd data \ngit clone git@github.com:tkipf/gcn.git \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8082022887640018
      ],
      "excerpt": "unzip ppi.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8082022887640018
      ],
      "excerpt": "unzip reddit.zip \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/thu-ml/stochastic_gcn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Stochastic Training for Graph Convolutional Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "stochastic_gcn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "thu-ml",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thu-ml/stochastic_gcn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "cjf00000",
        "body": "NELL dataset we used.",
        "dateCreated": "2018-02-09T03:55:02Z",
        "datePublished": "2019-03-13T04:45:16Z",
        "html_url": "https://github.com/thu-ml/stochastic_gcn/releases/tag/0.1",
        "name": "NELL dataset",
        "tag_name": "0.1",
        "tarball_url": "https://api.github.com/repos/thu-ml/stochastic_gcn/tarball/0.1",
        "url": "https://api.github.com/repos/thu-ml/stochastic_gcn/releases/16077484",
        "zipball_url": "https://api.github.com/repos/thu-ml/stochastic_gcn/zipball/0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* tensorflow (>0.12)\n* networkx (<=1.11 for loading GraphSAGE datasets)\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We provide recipes for the Citeseer, Cora, PubMed, NELL, PPI, and Reddit dataset in the `config` folder. Please refer to our paper for the algorithms. Typically, CVD+PP has similar accuracy with Exact, but is faster.\n\n```bash\n#: Exact algorithm\nconfig/cora.config\n#: NS+PP algorithm\nconfig/cora.config --degree=1 --test_degree=1\n#: CV+PP algorithm\nconfig/cora.config --cv --test_cv --degree=1 --test_degree=1 \n#: CVD+PP algorithm\nconfig/cora.config --cv --cvd --test_cv --degree=1 --test_degree=1\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 74,
      "date": "Thu, 23 Dec 2021 04:35:40 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We provide recipes for the Citeseer, Cora, PubMed, NELL, PPI, and Reddit dataset in the `config` folder. Please refer to our paper for the algorithms. Typically, CVD+PP has similar accuracy with Exact, but is faster.\n\n```bash\n#: Exact algorithm\nconfig/cora.config\n#: NS+PP algorithm\nconfig/cora.config --degree=1 --test_degree=1\n#: CV+PP algorithm\nconfig/cora.config --cv --test_cv --degree=1 --test_degree=1 \n#: CVD+PP algorithm\nconfig/cora.config --cv --cvd --test_cv --degree=1 --test_degree=1\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}