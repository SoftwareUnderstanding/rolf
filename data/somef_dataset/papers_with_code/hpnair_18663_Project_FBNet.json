{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1906.07214\n\n## FBNet \n- Hardware-Aware Efficient ConvNet Design via Differentiable Neural Architecture Search\n**Implementation of [FBNet](https://arxiv.org/pdf/1812.03443.pdf"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9998123026656918
      ],
      "excerpt": "Arxiv paper explaining training - https://arxiv.org/abs/1906.07214 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hpnair/18663_Project_FBNet",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nIf you\u2019re looking for ways to contribute, please peruse open issues. The icebox is a good place to find ideas that are not currently in development. If you already have an idea, please check past issues to see whether your idea or a similar one was previously discussed.\nBefore submitting a pull request, consider implementing a live example first, say using bl.ocks.org. Real-world use cases go a long way to demonstrating the usefulness of a proposed feature. The more complex a feature\u2019s implementation, the more usefulness it should provide. Share your demo using the #d3js tag on Twitter or by sending it to the d3-js Google group.\nIf your proposed feature does not involve changing core functionality, consider submitting it instead as a D3 plugin. New core features should be for general use, whereas plugins are suitable for more specialized use cases. When in doubt, it\u2019s easier to start with a plugin before \u201cgraduating\u201d to core.\nTo contribute new documentation or add examples to the gallery, just edit the Wiki!\nHow to Submit a Pull Request\n\n\nClick the \u201cFork\u201d button to create your personal fork of the D3 repository.\n\n\nAfter cloning your fork of the D3 repository in the terminal, run npm install to install D3\u2019s dependencies.\n\n\nCreate a new branch for your new feature. For example: git checkout -b my-awesome-feature. A dedicated branch for your pull request means you can develop multiple features at the same time, and ensures that your pull request is stable even if you later decide to develop an unrelated feature.\n\n\nThe d3.js and d3.min.js files are built from source files in the src directory. Do not edit d3.js directly. Instead, edit the source files, and then run make to build the generated files.\n\n\nUse make test to run tests and verify your changes. If you are adding a new feature, you should add new tests! If you are changing existing functionality, make sure the existing tests run, or update them as appropriate.\n\n\nSign D3\u2019s Individual Contributor License Agreement. Unless you are submitting a trivial patch (such as fixing a typo), this form is needed to verify that you are able to contribute.\n\n\nSubmit your pull request, and good luck!",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-11T05:13:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-18T22:22:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9863341442887118
      ],
      "excerpt": "Implementation of FBNet with PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8978704336570779
      ],
      "excerpt": "Supports Tensorboard for accuracy, latency and energy visualization as the FbNet trains (logdir = arg provided to \"-tb-logs\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8105755666870592,
        0.8169815468012596
      ],
      "excerpt": "Results (on Raspberr Pi 3B): \n| Model  | Accuracy(%) | Latency(s) | Energy(J) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9408894403052601,
        0.9822679301915556,
        0.8110771413975073
      ],
      "excerpt": "The following implementation uses stride values that fit for CIFAR10. Feel free to change stride values for ImageNet as mentioned in the paper. We have used \nTo check our implementation, we have trained 30 different models for Raspberry Pi with varying values of alpha, beta, gamma and delta \nEach colour on the bubble chart represents a particular model and the size of the bubble represents accuracy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Class Project for 18663 - Implementation of FBNet (Hardware-Aware DNAS)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hpnair/18663_Project_FBNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Sat, 25 Dec 2021 17:36:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hpnair/18663_Project_FBNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "hpnair/18663_Project_FBNet",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hpnair/18663_Project_FBNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "CSS",
      "Python",
      "HTML",
      "JavaScript"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2013, Michael Bostock\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* The name Michael Bostock may not be used to endorse or promote products\\n  derived from this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Hardware Aware Neural Network Architecture Search using FBnets for Raspberry pi",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "18663_Project_FBNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "hpnair",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hpnair/18663_Project_FBNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 24,
      "date": "Sat, 25 Dec 2021 17:36:38 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![Tensorboard-log-visualization](https://github.com/hpnair/18663_Project_FBNet/blob/master/tensorboard_output_1.png)\n\n",
      "technique": "Header extraction"
    }
  ]
}