{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.10196"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Official tensorflow code](https://github.com/tkarras/progressive_growing_of_gans)\n- [Naveen Benny's Pytorch implementation](https://github.com/nvnbny/progressive_growing_of_gans)\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hukkelas/progan-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-07T11:02:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-31T07:48:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9826265240057344,
        0.8692360852719195,
        0.9220689016146785
      ],
      "excerpt": "A pytorch implementation of the popular paper \"Progressive growing of gans for improved quality, stability, and variation\" (Official tensorflow code). \nResults from a 256-filter model on 128x128: \nFully implemented progressive growing of GANs to reproduce the results on the CelebA-HQ dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8659302800097066,
        0.9600751357020988
      ],
      "excerpt": "Mixed precision support with Apex AMP. We recommend to use optimization level O1 \nLoading and saving of checkpoints to stop and resume training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8321926552297976
      ],
      "excerpt": "WGAN-GP loss + AC-GAN (as presented in the paper) for class conditional datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Progessive Growing of GANs in Pytorch 1.1",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hukkelas/progan-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Thu, 30 Dec 2021 00:03:59 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hukkelas/progan-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "hukkelas/progan-pytorch",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/hukkelas/progan-pytorch/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8076164973470507
      ],
      "excerpt": "DataParallel support to run on multi-gpu (single node) systems \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9378285435306838
      ],
      "excerpt": "Download and pre-process the celebA-HQ dataset. We recommend using the following code: https://github.com/nperraud/download-celebA-HQ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9505434578356234
      ],
      "excerpt": "python3 src/data_tools/generate_datasets.py --source_path data/celebA-HQ --target_path /path/to/extracted/celebA-HQ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8407651001510851
      ],
      "excerpt": "Start training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9536655646041268
      ],
      "excerpt": "python3 src/train.py models/default/config.yml \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hukkelas/progan-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Progressive Growing of GANs",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "progan-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "hukkelas",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hukkelas/progan-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Pytorch >= 1.0 \n- [Apex AMP](https://github.com/NVIDIA/apex.git)\n- packages in [requirements](requirements.txt)\n\nTo reproduce our results, we recommend you to use a docker environment defined in the [Dockerfile](docker/Dockerfile)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Thu, 30 Dec 2021 00:03:59 GMT"
    },
    "technique": "GitHub API"
  }
}