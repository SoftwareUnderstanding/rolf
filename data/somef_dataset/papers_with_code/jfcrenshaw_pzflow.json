{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1410.8516",
      "https://arxiv.org/abs/1605.08803",
      "https://arxiv.org/abs/1906.04032",
      "https://arxiv.org/abs/1410.8516_\n\n  > [Density estimation using Real NVP](https://arxiv.org/abs/1605.08803)\\\n  > Laurent Dinh, Jascha Sohl-Dickstein, Samy Bengio\\\n  > _https://arxiv.org/abs/1605.08803_\n\n  > [Neural Spline Flows](https://arxiv.org/abs/1906.04032)\\\n  > Conor Durkan, Artur Bekasov, Iain Murray, George Papamakarios\\\n  > _https://arxiv.org/abs/1906.04032_",
      "https://arxiv.org/abs/1605.08803_\n\n  > [Neural Spline Flows](https://arxiv.org/abs/1906.04032)\\\n  > Conor Durkan, Artur Bekasov, Iain Murray, George Papamakarios\\\n  > _https://arxiv.org/abs/1906.04032_",
      "https://arxiv.org/abs/1906.04032_"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We are preparing a paper on pzflow.\nIf you use this package in your research, please check back here for a citation before publication.\nIn the meantime, please cite the [Zenodo release](https://zenodo.org/badge/latestdoi/327498448).\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jfcrenshaw/pzflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-07T04:01:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T21:14:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9604067192272693,
        0.9024728633506042
      ],
      "excerpt": "Probabilistic modeling of tabular data with normalizing flows. \nIf your data consists of continuous variables that can be put into a Pandas DataFrame, pzflow can model the joint probability distribution of your data set. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9719774232948292
      ],
      "excerpt": "It also allows you to easily sample from the normalizing flow (e.g., for forward modeling or data augmentation), and calculate posteriors over any of your variables. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9710989249393934
      ],
      "excerpt": "1. Introduction of a basic flow with the two moons data set \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.988574501256106
      ],
      "excerpt": "5. Using a uniform dequantizer to model discrete data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.948989932303448
      ],
      "excerpt": "3. Building a more complicated latent distribution to model data with a compact domain and periodic topology \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9946088042441423,
        0.9858263190514002
      ],
      "excerpt": "It is important to note that there are two different conventions in the literature for the direction of the bijection in normalizing flows. \npzflow defines the bijection as the mapping from the data space to the latent space, and the inverse bijection as the mapping from the latent space to the data space. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9741550877354579
      ],
      "excerpt": "To work on pzflow, after forking and cloning the repo: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9870587719411228,
        0.883084683620953,
        0.9360482114956621,
        0.9934312887347799,
        0.8974783950540649
      ],
      "excerpt": "pzflow was originally designed for forward modeling of photometric redshifts as a part of the Creation Module of the DESC RAIL project. \nThe idea to use normalizing flows for photometric redshifts originated with Bryce Kalmbach. \nThe earliest version of the normalizing flow in RAIL was based on a notebook by Francois Lanusse and included contributions from Alex Malz. \nThe functional jax structure of the bijectors was originally based on jax-flows by Chris Waites. The implementation of the Neural Spline Coupling is largely based on the Tensorflow implementation, with some inspiration from nflows. \nNeural Spline Flows are based on the following papers: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Probabilistic modeling of tabular data with normalizing flows.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://jax.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jfcrenshaw/pzflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Fri, 24 Dec 2021 06:37:07 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jfcrenshaw/pzflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jfcrenshaw/pzflow",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/jfcrenshaw/pzflow/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/gaussian_errors.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/dequantization.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/intro.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/conditional_redshift_example.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/redshift_example.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/ensemble_demo.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/spherical_flow_example.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/marginalization.ipynb",
      "https://raw.githubusercontent.com/jfcrenshaw/pzflow/main/examples/nongaussian_errors.ipynb"
    ],
    "technique": "File Exploration"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/327498448",
      "technique": "Regular expression"
    }
  ],
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can install pzflow from PyPI with pip:\n```shell\npip install pzflow\n```\nIf you want to run pzflow on a GPU with CUDA, you need to follow the GPU-enabled installation instructions for jaxlib [here](https://github.com/google/jax).\nYou may also need to add the following to your `.bashrc`:\n```shell\n#: cuda setup\nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH\nexport PATH=$PATH:/usr/local/cuda/bin\n```\nIf you have the GPU enabled version of jax installed, but would like to run on a CPU, add the following to the top of your scripts/notebooks:\n```python\nimport jax\n#: Global flag to set a specific platform, must be used at startup.\njax.config.update('jax_platform_name', 'cpu')\n```\nNote that if you run jax on GPU in multiple Jupyter notebooks simultaneously, you may get `RuntimeError: cuSolver internal error`. Read more [here](https://github.com/google/jax/issues/4497) and [here](https://jax.readthedocs.io/en/latest/gpu_memory_allocation.html).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9611028342033234,
        0.956791182127988,
        0.9779906815418535,
        0.9770335174395833,
        0.8837885784501938,
        0.9802433842631507
      ],
      "excerpt": "1. Create a virtual environment with Python \nE.g., with conda conda create -n pzflow \n2. Activate the environment. \nE.g., conda activate pzflow \n3. Install pzflow in edit mode with the dev flag \nI.e., in the root directory, pip install -e .[dev] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8165077792435976
      ],
      "excerpt": "The idea to use normalizing flows for photometric redshifts originated with Bryce Kalmbach. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9075673012574594
      ],
      "excerpt": "Basic examples: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8190018029631952
      ],
      "excerpt": "Advanced examples: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jfcrenshaw/pzflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 John Franklin Crenshaw\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pzflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pzflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jfcrenshaw",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jfcrenshaw/pzflow/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Fixed error where marginalization yields NaNs when combined with error convolution.",
        "dateCreated": "2021-10-26T02:12:34Z",
        "datePublished": "2021-10-26T06:23:23Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v2.0.3",
        "name": "v2.0.3",
        "tag_name": "v2.0.3",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v2.0.3",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/52027353",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v2.0.3"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Fixed error where example files weren't included in release v2.0.1",
        "dateCreated": "2021-10-26T01:18:11Z",
        "datePublished": "2021-10-26T02:13:31Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v2.0.2",
        "name": "v2.0.2",
        "tag_name": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v2.0.2",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/52019380",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v2.0.2"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Improved the stability of checking for flags during posterior marginalization. Now robust checks for floats and np.nan",
        "dateCreated": "2021-10-26T00:00:01Z",
        "datePublished": "2021-10-26T00:06:39Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v2.0.1",
        "name": "v2.0.1",
        "tag_name": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v2.0.1",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/52015595",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v2.0.1"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Changes made:\r\n\r\n- no longer automatically adding .pkl file extension when saving flows and ensembles\r\n- fixed FlowEnsemble so that metadata (e.g. data_columns) is properly stored at the ensemble level\r\n- changed nsamples to err_samples for error convolution in order to increase clarity\r\n- added ability to convolve non-Gaussian errors\r\n- officially added support for modeling discrete variables via UniformDequantizer\r\n- added ShiftBounds bijector so I don't have to keep abusing StandardScaler\r\n- added flag so you can turn off the automatic standard scaling of conditions passed to a conditional flow\r\n- added get_ to the front of the example functions so that their use is more clear\r\n- added support for column marginalization in posterior calculation\r\n- expanded and reorganized the example notebooks\r\n",
        "dateCreated": "2021-09-22T00:36:04Z",
        "datePublished": "2021-09-22T01:17:06Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v2.0.0",
        "name": "v2.0.0",
        "tag_name": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v2.0.0",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/50024181",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v2.0.0"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Fixed a bug in sampling from a conditional FlowEnsemble",
        "dateCreated": "2021-07-23T22:43:42Z",
        "datePublished": "2021-07-23T22:48:52Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v1.7.1",
        "name": "v1.7.1",
        "tag_name": "v1.7.1",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v1.7.1",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/46704123",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v1.7.1"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Updates:\r\n- defaulted B=5 in splines\r\n- Sampling from error distribution for error convolution now available for training, log_prob, posterior\r\n- Improved the way flows are loaded from a file to make more backwards compatible\r\n- Added the centered beta distribution (CentBeta)\r\n- Conditions are now automatically standard scaled before being fed to the neural networks inside the normalizing flow. The appropriate means and stds are calculated and stored during training.\r\n- Added a FlowEnsemble class for easily training a deep ensemble of models\r\n- Added example notebooks for error convolution and FlowEnsemble\r\n",
        "dateCreated": "2021-07-08T22:31:34Z",
        "datePublished": "2021-07-08T22:33:23Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v1.7.0",
        "name": "v1.7.0",
        "tag_name": "v1.7.0",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v1.7.0",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/45936701",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v1.7.0"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Added an option for a random seed when initializing the flow. This allows you to create deep ensembles.",
        "dateCreated": "2021-04-12T01:20:53Z",
        "datePublished": "2021-04-12T01:28:51Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v.1.6.0",
        "name": "v1.6.0",
        "tag_name": "v.1.6.0",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v.1.6.0",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/41252250",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v.1.6.0"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Moved flow saving to recursive dill pickling, so that more complex objects can be stored with flows.",
        "dateCreated": "2021-03-23T19:34:12Z",
        "datePublished": "2021-03-23T19:37:14Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v1.5.2",
        "name": "v1.5.2",
        "tag_name": "v1.5.2",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v1.5.2",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/40246079",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v1.5.2"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "Fixed the analytic error convolution for Gaussian base distributions. ",
        "dateCreated": "2021-03-23T18:09:15Z",
        "datePublished": "2021-03-23T18:15:53Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v1.5.1",
        "name": "Fixed error convolution",
        "tag_name": "v1.5.1",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v1.5.1",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/40241795",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v1.5.1"
      },
      {
        "authorType": "User",
        "author_name": "jfcrenshaw",
        "body": "First official release on Github in order to get a zenodo DOI.",
        "dateCreated": "2021-03-17T21:18:02Z",
        "datePublished": "2021-03-18T19:31:05Z",
        "html_url": "https://github.com/jfcrenshaw/pzflow/releases/tag/v1.5.0",
        "name": "First release for Zenodo",
        "tag_name": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/tarball/v1.5.0",
        "url": "https://api.github.com/repos/jfcrenshaw/pzflow/releases/40027076",
        "zipball_url": "https://api.github.com/repos/jfcrenshaw/pzflow/zipball/v1.5.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Fri, 24 Dec 2021 06:37:07 GMT"
    },
    "technique": "GitHub API"
  }
}