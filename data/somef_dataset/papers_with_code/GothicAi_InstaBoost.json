{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Our detection and instance segmentation framework is based on [mmdetecion](https://github.com/open-mmlab/mmdetection), [detectron](https://github.com/roytseng-tw/Detectron.pytorch) and [yolact](https://github.com/dbolya/yolact).\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1908.07801. \n\n## Install InstaBoost\n\n### Easy install version\n***Note: If you cannot install instaboost successfully using conda, we provide a simpler instaboost that do not need matting. The final results is 0.1 mAP lower than the original one, but we highly recommend it.***\n```\npip install instaboostfast\n# in python\n>>> import instaboostfast as instaboost\n```\n\n### Original version\nTo install original InstaBoost, use this command.  *If you successfully install and import it in python, you are really lucky!*\n\n```\npip install instaboost\n```\nWe strongly recommend install it using conda\n\n```\nconda create -n instaboost python=3.6\nconda activate instaboost\nconda install -c salilab opencv-nopython        # opencv2\nconda install -c serge-sans-paille gcc_49       # you need to use conda's gcc instead of system's\nln -s ~/miniconda3/envs/instaboost/bin/g++-4.9 ~/miniconda3/envs/instaboost/bin/g++   #link to bin\nln -s ~/miniconda3/envs/instaboost/bin/gcc-4.9 ~/miniconda3/envs/instaboost/bin/gcc   #link to bin\npip install cython numpy\npip install opencv-mat\npip install instaboost\n```\n\nThe detail implementation can be found [`here`](https://github.com/GothicAi/InstaBoost-pypi"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this toolbox or benchmark in your research, please cite this project.\n\n```\n@inproceedings{fang2019instaboost,\n  title={Instaboost: Boosting instance segmentation via probability map guided copy-pasting},\n  author={Fang, Hao-Shu and Sun, Jianhua and Wang, Runzhong and Gou, Minghao and Li, Yong-Lu and Lu, Cewu},\n  booktitle={Proceedings of the IEEE International Conference on Computer Vision},\n  pages={682--691},\n  year={2019}\n}\n```\nPlease also cite [mmdetection](https://github.com/open-mmlab/mmdetection), [detectron](https://github.com/roytseng-tw/Detectron.pytorch) and [yolact](https://github.com/dbolya/yolact) if you use the corresponding codes.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{fang2019instaboost,\n  title={Instaboost: Boosting instance segmentation via probability map guided copy-pasting},\n  author={Fang, Hao-Shu and Sun, Jianhua and Wang, Runzhong and Gou, Minghao and Li, Yong-Lu and Lu, Cewu},\n  booktitle={Proceedings of the IEEE International Conference on Computer Vision},\n  pages={682--691},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.926763216166786
      ],
      "excerpt": "This repository is implementation of ICCV2019 paper \"InstaBoost: Boosting Instance Segmentation Via Probability Map Guided Copy-Pasting\". Our paper has been released on arXiv https://arxiv.org/abs/1908.07801. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9657910356791032,
        0.8340270533407866
      ],
      "excerpt": "ln -s ~/miniconda3/envs/instaboost/bin/g++-4.9 ~/miniconda3/envs/instaboost/bin/g++   #:link to bin \nln -s ~/miniconda3/envs/instaboost/bin/gcc-4.9 ~/miniconda3/envs/instaboost/bin/gcc   #:link to bin \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GothicAi/Instaboost",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-21T14:57:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T08:45:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code for ICCV2019 paper \"InstaBoost: Boosting Instance Segmentation Via Probability Map Guided Copy-Pasting\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GothicAi/InstaBoost/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 46,
      "date": "Tue, 21 Dec 2021 07:40:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GothicAi/Instaboost/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "GothicAi/Instaboost",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/mmdetection/compile.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/mmdetection/tools/single.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/mmdetection/tools/dist_train.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/yolact/run.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/yolact/scripts/eval.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/yolact/scripts/resume.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/yolact/data/scripts/COCO_test.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/yolact/data/scripts/COCO.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/train.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/cmd.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/lib/make.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/lib/modeling/roi_xfrom/roi_align/make.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/lib/model/roi_align/make.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/lib/model/nms/make.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/lib/model/roi_crop/make.sh",
      "https://raw.githubusercontent.com/GothicAi/InstaBoost/master/detectron/demo/convert_pdf2img.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To change InstaBoost Configurations, users can use function [`InstaBoostConfig`](https://github.com/GothicAi/InstaBoost-pypi#instaboostconfig).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "***Note: If you cannot install instaboost successfully using conda, we provide a simpler instaboost that do not need matting. The final results is 0.1 mAP lower than the original one, but we highly recommend it.***\n```\npip install instaboostfast\n#: in python\n>>> import instaboostfast as instaboost\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9531450575811315,
        0.999746712887969,
        0.9842586419355827,
        0.954950449355536,
        0.9770335174395833,
        0.9977358169401686,
        0.9922476731677616
      ],
      "excerpt": "To install original InstaBoost, use this command.  If you successfully install and import it in python, you are really lucky! \npip install instaboost \nWe strongly recommend install it using conda \nconda create -n instaboost python=3.6 \nconda activate instaboost \nconda install -c salilab opencv-nopython        #: opencv2 \nconda install -c serge-sans-paille gcc_49       #: you need to use conda's gcc instead of system's \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9967551126993145,
        0.9978759953145878,
        0.999746712887969
      ],
      "excerpt": "pip install cython numpy \npip install opencv-mat \npip install instaboost \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9395211555788521
      ],
      "excerpt": "Because InstaBoost depends on matting package here, we highly recommend users to use python3.5 or 3.6, OpenCV 2.4 to avoid some errors. Envrionment setting instructions can be found here. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GothicAi/Instaboost/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C",
      "C++",
      "JavaScript",
      "Shell",
      "MATLAB",
      "CSS",
      "HTML"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Roy Tseng\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "InstaBoost",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Instaboost",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "GothicAi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GothicAi/Instaboost/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 387,
      "date": "Tue, 21 Dec 2021 07:40:51 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "detectron",
      "augmentation",
      "segmentation"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Video demo for InstaBoost: https://www.youtube.com/watch?v=iFsmmHUGy0g\n\n* **News:** InstaBoost is now officially supported in [mmdetection](https://github.com/open-mmlab/mmdetection)!\n\nCurrently we have integrated InstaBoost into three open implementations: [mmdetection](https://github.com/open-mmlab/mmdetection), [detectron](https://github.com/roytseng-tw/Detectron.pytorch) and [yolact](https://github.com/dbolya/yolact).\n\n* **mmdetection:** Checkout [mmdetection](mmdetection).  \n\n* **detectron:** Checkout [detectron](detectron). \n\n* **yolact:** Checkout [yolact](yolact)\n\n*Since these frameworks may continue updating, codes in this repo may be a little different from their current repo.*\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "It is easy to integrate InstaBoost into your framework. You can refer to instructions of our implementations on [mmdetection](mmdetection#implementation), [detectron](detectron#implementation) and [yolact](yolact#implementation)\n\n",
      "technique": "Header extraction"
    }
  ]
}