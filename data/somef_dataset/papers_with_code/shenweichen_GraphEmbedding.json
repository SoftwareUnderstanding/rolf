{
  "citation": [
    {
      "confidence": [
        0.8019518914504621
      ],
      "excerpt": "| Node2Vec  | [KDD 2016]node2vec: Scalable Feature Learning for Networks | \u3010Graph Embedding\u3011Node2Vec\uff1a\u7b97\u6cd5\u539f\u7406\uff0c\u5b9e\u73b0\u548c\u5e94\u7528  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "                <a href=\"https://github.com/shenweichen/GraphEmbedding\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": " <a href=\"https://github.com/shenweichen/GraphEmbedding\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9992433570004348,
        0.9992433570004348,
        0.9992433570004348,
        0.9981128028710152
      ],
      "excerpt": "<li><a href=\"https://github.com/shenweichen/AlgoNotes\">AlgoNotes</a></li> \n<li><a href=\"https://github.com/shenweichen/DeepCTR\">DeepCTR</a></li> \n<li><a href=\"https://github.com/shenweichen/DeepMatch\">DeepMatch</a></li> \n<li><a href=\"https://github.com/shenweichen/DeepCTR-Torch\">DeepCTR-Torch</a></li> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shenweichen/GraphEmbedding",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-11T16:27:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T02:49:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9034681002449775
      ],
      "excerpt": "we use networkxto create graphs.The input of networkx graph is as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = SDNE(G,hidden_size=[256,128]) #:init model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation and experiments  of graph embedding algorithms.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shenweichen/GraphEmbedding/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 758,
      "date": "Wed, 22 Dec 2021 15:17:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/shenweichen/GraphEmbedding/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "shenweichen/GraphEmbedding",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.816795736761136
      ],
      "excerpt": "  <img align=\"center\" src=\"./pics/deepctrbot.png\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172959497885965
      ],
      "excerpt": "G = nx.read_edgelist('../data/wiki/Wiki_edgelist.txt',create_using=nx.DiGraph(),nodetype=None,data=[('weight',int)])#: Read graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8737873112808705
      ],
      "excerpt": "model.train(window_size=5,iter=3)#: train model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172959497885965,
        0.8543048995140122,
        0.8815598107964063
      ],
      "excerpt": "G = nx.read_edgelist('../data/wiki/Wiki_edgelist.txt',create_using=nx.DiGraph(),nodetype=None,data=[('weight',int)])#:read graph \nmodel = LINE(G,embedding_size=128,order='second') #:init model,order can be ['first','second','all'] \nmodel.train(batch_size=1024,epochs=50,verbose=2)#: train model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8169810609605592,
        0.8737873112808705
      ],
      "excerpt": "model = Node2Vec(G, walk_length = 10, num_walks = 80,p = 0.25, q = 4, workers = 1)#:init model \nmodel.train(window_size = 5, iter = 3)#: train model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172959497885965
      ],
      "excerpt": "G = nx.read_edgelist('../data/wiki/Wiki_edgelist.txt',create_using=nx.DiGraph(),nodetype=None,data=[('weight',int)])#:read graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8540580153770052
      ],
      "excerpt": "model.train(batch_size=3000,epochs=40,verbose=2)#: train model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8737873112808705
      ],
      "excerpt": "model.train(window_size = 5, iter = 3)#: train model \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/shenweichen/GraphEmbedding/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Weichen Shen\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "GraphEmbedding",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "GraphEmbedding",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "shenweichen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shenweichen/GraphEmbedding/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. clone the repo and make sure you have installed `tensorflow` or `tensorflow-gpu` on your local machine. \n2. run following commands\n```bash\npython setup.py install\ncd examples\npython deepwalk_wiki.py\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2470,
      "date": "Wed, 22 Dec 2021 15:17:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deepwalk",
      "node2vec",
      "line",
      "sdne",
      "struc2vec",
      "graph"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. clone the repo and make sure you have installed `tensorflow` or `tensorflow-gpu` on your local machine. \n2. run following commands\n```bash\npython setup.py install\ncd examples\npython deepwalk_wiki.py\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The design and implementation follows simple principles(**graph in,embedding out**) as much as possible.\n",
      "technique": "Header extraction"
    }
  ]
}