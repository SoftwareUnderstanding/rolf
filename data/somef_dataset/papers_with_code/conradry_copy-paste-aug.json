{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2012.07177v1"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/conradry/copy-paste-aug",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-19T20:15:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T12:43:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9499397333713349,
        0.9455318845946059
      ],
      "excerpt": "Unofficial implementation of the copy-paste augmentation from Simple Copy-Paste is a Strong Data Augmentation Method for Instance Segmentation. \nThe augmentation function is built to integrate easily with albumentations. An example for creating a compatible torchvision dataset is given for COCO. Core functionality for image, masks, and bounding boxes is finished; keypoints are not yet supported. In general, you can use the CopyPaste augmentation just as you would any other albumentations augmentation function. There are a few usage limitations of note. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8215195491699129
      ],
      "excerpt": "The idea is to have a standard torchvision dataset that's decorated for copy-paste functionality. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8079142711779487
      ],
      "excerpt": "The only difference from a regular torchvision dataset is the decorator and theload_examplemethod \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8626574553489256
      ],
      "excerpt": "To compose transforms with copy-paste augmentation: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9371402924844924
      ],
      "excerpt": "      A.RandomScale(scale_limit=(-0.9, 1), p=1), #:LargeScaleJitter from scale of 0.1 to 2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Copy-paste augmentation for segmentation and detection tasks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/conradry/copy-paste-aug/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 56,
      "date": "Sun, 26 Dec 2021 02:12:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/conradry/copy-paste-aug/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "conradry/copy-paste-aug",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/conradry/copy-paste-aug/main/example.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8190162582546389
      ],
      "excerpt": "The idea is to have a standard torchvision dataset that's decorated for copy-paste functionality. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8798028080721446
      ],
      "excerpt": "  <img src=\"./example.png\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516,
        0.9048636553113379
      ],
      "excerpt": "from copy_paste import copy_paste_class \nfrom torch.utils.data import Dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012248701992861
      ],
      "excerpt": "import albumentations as A \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from copy_paste import CopyPaste \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8156243272042059
      ],
      "excerpt": "      CopyPaste(blend=True, sigma=1, pct_objects_paste=0.5, p=1) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/conradry/copy-paste-aug/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Ryan Conrad\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Copy-Paste",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "copy-paste-aug",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "conradry",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/conradry/copy-paste-aug/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 341,
      "date": "Sun, 26 Dec 2021 02:12:40 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "instance-segmentation",
      "object-detection",
      "deep-learning",
      "data-augmentation",
      "copy-paste"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. BboxParams cannot have label_fields. To attach class labels to a bounding box, directly append it to the bounding box coordinates. (I.e. (x1, y1, x2, y2, class_id)).\n2. Bounding boxes passed to the CopyPaste augmentation must also include the index of the corresponding mask in the 'masks' list. (I.e. the bounding box looks like (x1, y1, x2, y2, class_id, mask_index)). An example is given for COCO.\n3. The CopyPaste augmentation expects 6 keyword arguments instead of three:\n\n```python\n#: typical albumentations transform\noutput = transforms(image=image, masks=masks, bboxes=bboxes)\n\n#: for the copy paste transform\noutput = transforms(\n    image=image, masks=masks, bboxes=bboxes,\n    paste_image=paste_image, paste_masks=paste_masks, paste_bboxes=paste_bboxes\n  )\n```\n\n4. After pasting objects, the original bounding boxes may be occluded. To make things easier,\nthe original bounding boxes are just extracted from the updated masks.\n\n",
      "technique": "Header extraction"
    }
  ]
}