{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{mur2017orb,\n  title={{ORB-SLAM2}: An open-source {SLAM} system for monocular, stereo, and {RGB-D} cameras},\n  author={Mur-Artal, Raul and Tard{\\'o}s, Juan D},\n  journal={IEEE Transactions on Robotics},\n  volume={33},\n  number={5},\n  pages={1255--1262},\n  year={2017},\n  publisher={IEEE}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{li2020dxslam,\n  title={{DXSLAM}: A Robust and Efficient Visual {SLAM} System with Deep Features},\n  author={Li, Dongjiang and Shi, Xuesong and Long, Qiwei and Liu, Shenghui and Yang, Wei and Wang, Fangshi and Wei, Qi and Qiao, Fei},\n  booktitle={2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},\n  pages={4958--4965},\n  year={2020},\n  month={Oct},\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cedrusx/dxslam_ros",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-05T14:55:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T07:51:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9159761828831735,
        0.9083580198342628,
        0.8905065473830387
      ],
      "excerpt": "This ROS package is a wrapper of DXSLAM and ORB-SLAM2. For either system, this project can build a ROS node which takes RGB-D images from ROS topics, feed them into the SLAM system, and publish the estimated camera pose. \nThe node also takes care of ROS tf. It publishes the transformation from the world frame to the robot/sensor frame. Both can be specified by the user. For example, \n1. when running on a robot with a fixed frame from base_link to camera, one can specify pub_tf_child_frame:=base_link to let the node publish tf from map to base_link; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9531125645442895
      ],
      "excerpt": "Note that the estimated pose from the SLAM system is the transform between the current camera optical frame and a fixed reference frame. The ROS node will check other information from the tf tree, including tf between pub_tf_parent_frame and the reference frame, and that between pub_tf_child_frame to the camera optical frame (as specified in the header of the RGB image). It then calculates the tf between pub_tf_parent_frame and pub_tf_child_frame based on above information and the esaimted pose. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ROS wrapper for DXSLAM and ORB_SLAM2 (getting RGBD from ROS topics, and publish estimated poses to ROS topic and tf)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cedrusx/dxslam_ros/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sat, 25 Dec 2021 19:50:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cedrusx/dxslam_ros/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cedrusx/dxslam_ros",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First, clone the codes into your catkin workspace. You can skip `dxslam` or `ORB_SLAM2` if only needing the other.\n```\ncd YOUR_CATKIN_WS/src/\ngit clone https://github.com/cedrusx/dxslam_ros\ngit clone https://github.com/cedrusx/deep_features\ngit clone https://github.com/ivipsourcecode/dxslam\ngit clone https://github.com/cedrusx/ORB_SLAM2  #: this is a fork of raulmur/ORB_SLAM2 with a few bug fixings\n```\n\nIf you already have the `dxslam` or `ORB_SLAM2` repo in your system and do not want to clone again, you can simply put them into the `dxslam_ros` folder, or alongside your catkin workspace. Then `dxslam_ros` would find it during compiling. See the `SLAM_SEARCH_PATH` in [`CMakeLists.txt`](https://github.com/cedrusx/dxslam_ros/blob/dxslam/CMakeLists.txt).\n\nThen, build `dxslam` and/or `ORB_SLAM2` as normal. Please check the README of these repos to set up the prerequisites.\n```\ncd dxslam\n./build.sh\ncd ..\n\ncd ORB_SLAM2\n./build.sh\ncd ..\n```\n\nIf you use `dxslam`, you'll also need to set up ROS+Python3 environment for `deep_features`. Check its [README](https://github.com/cedrusx/deep_features).\n\nFinally, build `dxslam_ros` with your favorate catkin tool:\n```\ncd YOUR_CATKIN_WS\n. /opt/ros/VERSION/setup.bash\ncatkin build    #: OR catkin_make\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cedrusx/dxslam_ros/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "CMake"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "dxslam_ros",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dxslam_ros",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cedrusx",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cedrusx/dxslam_ros/blob/dxslam/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Only for DXSLAM - Run `feature_extraction/feature_extraction_node.py` from [deep_features](https://github.com/cedrusx/deep_features) to extract and publish features for images on a given topic:\n```\ncd YOUR_CATKIN_WS\n. devel/setup.bash\nrosrun feature_extraction feature_extraction_node.py [PARAMS]\n```\n\nAnd launch dxslam_ros in another terminal, for example:\n```\ncd YOUR_CATKIN_WS\n. devel/setup.bash\nroslaunch dxslam_ros rgbd.launch slam:=dxslam camera:=d400 pub_tf_child_frame:=base_link\n#: OR\nroslaunch dxslam_ros rgbd.launch slam:=orbslam2 camera:=d400 pub_tf_child_frame:=base_link\n```\n\nThen play your ROS bag or launch `realsense_ros` to provide a live stream.\nThe arguments above are configurated for the [OpenLORIS-Scene](https://lifelong-robotic-vision.github.io/dataset/scene) datasets. You may need to change them if using other data.\n\nWhen succeeded, you should be able to see live tracking results in the ORB_SLAM2 GUI, and properly maintained ROS tf and pose topics with RViz or `rqt_tf_tree`.\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 14,
      "date": "Sat, 25 Dec 2021 19:50:14 GMT"
    },
    "technique": "GitHub API"
  }
}