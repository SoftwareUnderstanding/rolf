{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2010.01412",
      "https://arxiv.org/abs/2010.11929",
      "https://arxiv.org/abs/2105.01601",
      "https://arxiv.org/abs/2106.10270",
      "https://arxiv.org/abs/2106.01548",
      "https://arxiv.org/abs/2010.01412",
      "https://arxiv.org/abs/2010.01412",
      "https://arxiv.org/abs/2105.01601",
      "https://arxiv.org/abs/2106.10270",
      "https://arxiv.org/abs/2106.01548"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{chen2021outperform,\n  title={When Vision Transformers Outperform ResNets without Pretraining or Strong Data Augmentations}, \n  author={Chen, Xiangning and Hsieh, Cho-Jui and Gong, Boqing},\n  journal={arXiv preprint arXiv:2106.01548},\n  year={2021},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{steiner2021augreg,\n  title={How to train your ViT? Data, Augmentation, and Regularization in Vision Transformers},\n  author={Steiner, Andreas and Kolesnikov, Alexander and and Zhai, Xiaohua and Wightman, Ross and Uszkoreit, Jakob and Beyer, Lucas},\n  journal={arXiv preprint arXiv:2106.10270},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{tolstikhin2021mixer,\n  title={MLP-Mixer: An all-MLP Architecture for Vision},\n  author={Tolstikhin, Ilya and Houlsby, Neil and Kolesnikov, Alexander and Beyer, Lucas and Zhai, Xiaohua and Unterthiner, Thomas and Yung, Jessica and Steiner, Andreas and Keysers, Daniel and Uszkoreit, Jakob and Lucic, Mario and Dosovitskiy, Alexey},\n  journal={arXiv preprint arXiv:2105.01601},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{dosovitskiy2020vit,\n  title={An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale},\n  author={Dosovitskiy, Alexey and Beyer, Lucas and Kolesnikov, Alexander and Weissenborn, Dirk and Zhai, Xiaohua and Unterthiner, Thomas and  Dehghani, Mostafa and Minderer, Matthias and Heigold, Georg and Gelly, Sylvain and Uszkoreit, Jakob and Houlsby, Neil},\n  journal={ICLR},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8490817347094297,
        0.8422862053358879
      ],
      "excerpt": "ResNets...\" paper, and SAM  \n(Sharpness-Aware Minimization) optimized ViT and MLP-Mixer checkpoints. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9409703031998737
      ],
      "excerpt": "Vision Transformer and MLP-Mixer Architectures \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9056674988540252
      ],
      "excerpt": "Vision Transformer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8050785136640392
      ],
      "excerpt": "  depends on the accelerator configuration (both type and count). If you \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490817347094297
      ],
      "excerpt": "Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit and Neil Houlsby*\u2020. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8698756130524232
      ],
      "excerpt": "pre-trained on ImageNet-21k and fine-tuned on ImageNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609756692442972
      ],
      "excerpt": "and fine-tuned on ImageNet, Pets37, Kitti-distance, CIFAR-100, and Resisc45. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800629917501481
      ],
      "excerpt": "on ImageNet-21k and then fine-tuned on ImageNet at 224x224 resolution (instead \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8690140377415217,
        0.9618188552511033
      ],
      "excerpt": "| R50+ViT-B_16 | cifar10      | 98.72%, 3.9h (A100), tb.dev      | 98.94%, 10.1h (V100), tb.dev      | \n| R50+ViT-B_16 | cifar100     | 90.88%, 4.1h (A100), tb.dev     | 92.30%, 10.1h (V100), tb.dev     | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "Xiaohua Zhai, Thomas Unterthiner, Jessica Yung, Andreas Steiner, Daniel Keysers, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8100655823024339
      ],
      "excerpt": "SAM on ImageNet without strong  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": ": gcloud compute machine-types list \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9616019740304639
      ],
      "excerpt": "Open source release prepared by Andreas Steiner. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ttt496/VisionTransformer",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement (CLA). You (or your employer) retain the copyright to your\ncontribution; this simply gives us permission to use and redistribute your\ncontributions as part of the project. Head over to\nhttps://cla.developers.google.com/ to see your current agreements on file or\nto sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows\nGoogle's Open Source Community Guidelines.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-14T04:10:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-15T06:04:08Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8048239130784968,
        0.8840955818633064,
        0.9519339070017576,
        0.8392363505494985
      ],
      "excerpt": "Update (18.6.2021): This repository was rewritten to use Flax Linen API and \nml_collections.ConfigDict for configuration. \nIn this repository we release models from the papers \nAn Image is Worth 16x16 Words: Transformers for Image Recognition at Scale \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8895439026128125
      ],
      "excerpt": "ImageNet-21k datasets. We provide the code for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "Table of contents: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8258656090717994
      ],
      "excerpt": "Fine-tuning a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553193766937047
      ],
      "excerpt": "This Colab allows you to edit the files from the repository directly in the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8811767717014508
      ],
      "excerpt": "step, and lets you interact with the data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9468953071550339,
        0.9339494337730271,
        0.950553209880272
      ],
      "excerpt": "checkpoints that were used to generate the data of the third paper \"How to train \nyour ViT? ...\". The Colab includes code to explore and select checkpoints, and \nto do inference both using the JAX code from this repo, and also using the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8212730998573389,
        0.9848600587841441
      ],
      "excerpt": "Note: As for now (6/20/21) Google Colab only supports a single GPU (Nvidia \nTesla T4), and TPUs (currently TPUv2-8) are attached indirectly to the Colab VM \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9948766587994242
      ],
      "excerpt": "amount of data to fine-tune on. For details see the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9483966309050921
      ],
      "excerpt": "instruct the code to access the models directly from a GCS bucket instead of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176281487088014,
        0.9293786802690166
      ],
      "excerpt": "checkpoint by upstream validation accuracy (\"recommended\" checkpoint, see \nsection 4.5 of the paper) is chosen. To make up your mind which model you want \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.803219171960368
      ],
      "excerpt": "also need to update vit_jax/input_pipeline.py to specify some parameters about \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9486911997937647
      ],
      "excerpt": "Note that our code uses all available GPUs/TPUs for fine-tuning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8227563415695237
      ],
      "excerpt": "Different models require different amount of memory. Available memory also \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit and Neil Houlsby*\u2020. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799911942521022,
        0.9056258316525638
      ],
      "excerpt": "Overview of the model: we split an image into fixed-size patches, linearly embed \neach of them, add position embeddings, and feed the resulting sequence of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8382903754198482,
        0.8350230660579225
      ],
      "excerpt": "to the sequence. \nWe provide models pre-trained on ImageNet-21k for the following architectures: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8806717338596743,
        0.9514781911601549
      ],
      "excerpt": "ResNets of similar size and throughput without large-scale pre-training or  \nstrong data augmentations. They also possess more perceptive attention maps.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9061624107437449,
        0.8684762246086483,
        0.9779162026846646
      ],
      "excerpt": "Update (19.5.2021): With publication of the \"How to train your ViT? ...\" \npaper, we added more than 50k ViT and hybrid models pre-trained on ImageNet and \nImageNet-21k with various degrees of data augmentation and model regularization, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8446779330288666
      ],
      "excerpt": "Check out [vit_jax_augreg.ipynb] to navigate this treasure trove of models! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8519947745863855
      ],
      "excerpt": "pre-trained and fine-tuned checkpoints from the i21k_300 column of Table 3 in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9855989463770218,
        0.9568908369260689,
        0.9058159670511686
      ],
      "excerpt": "top of a Resnet-50 backbone). When pretrained on imagenet21k, this model \nachieves almost the performance of the L/16 model with less than half the \ncomputational finetuning cost. Note that \"R50\" is somewhat modified for the B/16 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9864527751984818
      ],
      "excerpt": "resolution of the image by a factor of two. In combination with the ResNet stem \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589565198571045
      ],
      "excerpt": "Update (9.11.2020): We have also added the ViT-L/16 model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8210588991958053
      ],
      "excerpt": "They are expected to achieve 81.2% and 82.7% top-1 accuracies respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9514181724959851,
        0.8981374750020458,
        0.9715141754171496
      ],
      "excerpt": "ViT paper), and with transformer.dropout_rate=0.0, which improves results \nsomewhat for models B=16, B/32, and L/32. The better setting was chosen for the \ndefault config of the models in this repository. Note also that all these models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8921174425645323
      ],
      "excerpt": "layer is dropped for fine-tuning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8834313148878451,
        0.9957416291206872
      ],
      "excerpt": "We also would like to emphasize that high-quality results can be achieved with \nshorter training schedules and encourage users of our code to play with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9345164294736286
      ],
      "excerpt": "much smoother, and we found that the activated neurons for the  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9004400752227416
      ],
      "excerpt": "indicating the potential redundency of image patches. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9493221801547125
      ],
      "excerpt": "ImageNet-21k datasets. Details can be found in Table 3 of the Mixer paper. All \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.980306870061926,
        0.883953349530856
      ],
      "excerpt": "We ran the fine-tuning code on Google Cloud machine with four V100 GPUs with the \ndefault adaption parameters from this repository. Here are the results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9774955656325566
      ],
      "excerpt": ": For a list of zones with GPUs refer to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9226121228134575
      ],
      "excerpt": "PROJECT=my-awesome-gcp-project  #: Project must have billing enabled. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9629962971611608
      ],
      "excerpt": "    --project=$PROJECT --zone=$ZONE \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8338131243378095
      ],
      "excerpt": "    --scopes=cloud-platform,storage-full --boot-disk-size=256GB \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9305576475938488,
        0.871781892976973,
        0.9305576475938488
      ],
      "excerpt": "gcloud compute ssh --project $PROJECT --zone $ZONE $VM_NAME \n: Stop the VM after use (only storage is billed for a stopped VM). \ngcloud compute instances stop --project $PROJECT --zone $ZONE $VM_NAME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9305576475938488
      ],
      "excerpt": "gcloud compute instances delete --project $PROJECT --zone $ZONE $VM_NAME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8234986374670908
      ],
      "excerpt": "with TPUs attached to them (below commands copied from the TPU tutorial): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9226121228134575
      ],
      "excerpt": "PROJECT=my-awesome-gcp-project  #: Project must have billing enabled. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9077270437979629
      ],
      "excerpt": ": Create a VM with TPUs directly attached to it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9629962971611608
      ],
      "excerpt": "    --project=$PROJECT --zone=$ZONE \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9117725465153438,
        0.871781892976973,
        0.9117725465153438
      ],
      "excerpt": "gcloud alpha compute tpus tpu-vm ssh --project $PROJECT --zone $ZONE $VM_NAME \n: Stop the VM after use (only storage is billed for a stopped VM). \ngcloud alpha compute tpus tpu-vm stop --project $PROJECT --zone $ZONE $VM_NAME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9117725465153438
      ],
      "excerpt": "gcloud alpha compute tpus tpu-vm delete --project $PROJECT --zone $ZONE $VM_NAME \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ttt496/VisionTransformer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 18:06:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ttt496/VisionTransformer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ttt496/VisionTransformer",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ttt496/VisionTransformer/main/vit_jax_augreg.ipynb",
      "https://raw.githubusercontent.com/ttt496/VisionTransformer/main/vit_jax.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "And then fetch the repository and the install dependencies (including `jaxlib`\nwith TPU support) as usual:\n\n```bash\ngit clone --depth=1 --branch=master https://github.com/google-research/vision_transformer\ncd vision_transformer\npip3 install virtualenv\npython3 -m virtualenv env\n. env/bin/activate\n```\n\nIf you're connected to a VM with GPUs attached, install JAX with the following\ncommand:\n\n```bash\npip3 install --upgrade jax jaxlib \\\n    -f https://storage.googleapis.com/jax-releases/jax_releases.html\n```\n\nIf you're connected to a VM with TPUs attached, install JAX with the following\ncommand:\n\n```bash\npip3 install --upgrade jax jaxlib\n```\n\nFor both GPUs and TPUs, then proceed to install the remaining dependencies and\ncheck that accelerators can indeed show up in JAX:\n\n```bash\npip install -r vit_jax/requirements.txt\n#: Check that JAX can connect to attached accelerators:\npython -c 'import jax; print(jax.devices())'\n```\n\nAnd finally execute one of the commands mentioned in the section\n[fine-tuning a model](#fine-tuning-a-model).\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you have `Python>=3.6` installed on your machine.\n\nFor installing [JAX](https://github.com/google/jax), follow the instructions\nprovided in the corresponding repository linked here. Note that installation\ninstructions for GPU differs slightly from the instructions for CPU.\n\nThen, install python dependencies by running:\n```\npip install -r vit_jax/requirements.txt\n```\n\nFor more details refer to the section [Running on cloud](#running-on-cloud)\nbelow.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9072934417257499
      ],
      "excerpt": "Setup VM \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8173777544255152
      ],
      "excerpt": "Note: As for now (6/20/21) Google Colab only supports a single GPU (Nvidia \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8730509027107118
      ],
      "excerpt": "You can find all these models in the following storage bucket: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8402888795266071,
        0.9652472391227556
      ],
      "excerpt": "For example, if you would like to download the ViT-B/16 pre-trained on \nimagenet21k run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950748607893466
      ],
      "excerpt": "For installation follow the same steps as above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8862890551925025
      ],
      "excerpt": "You can use the following commands to setup a VM with GPUs on Google Cloud: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8290389911034649
      ],
      "excerpt": ": Below settings have been tested with this repository. You can choose other \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8561480519627988
      ],
      "excerpt": "Alternatively, you can use the following similar commands to set up a Cloud VM \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.801741321210649
      ],
      "excerpt": "    --version v2-alpha \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8477676627637637,
        0.8479126971663336
      ],
      "excerpt": "python -m vit_jax.main --workdir=/tmp/vit-$(date +%s) \\ \n    --config=$(pwd)/vit_jax/configs/vit.py:b16,cifar10 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477676627637637,
        0.8249426511923957
      ],
      "excerpt": "python -m vit_jax.main --workdir=/tmp/vit-$(date +%s) \\ \n    --config=$(pwd)/vit_jax/configs/mixer_base16_cifar10.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.918196345340999
      ],
      "excerpt": "name (the config.name value from [configs/model.py]), then the best i21k \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477676627637637,
        0.8249426511923957
      ],
      "excerpt": "python -m vit_jax.main --workdir=/tmp/vit-$(date +%s) \\ \n    --config=$(pwd)/vit_jax/configs/augreg.py:R_Ti_16 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8651690786661557
      ],
      "excerpt": "    --config.base_lr=0.01 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8578203035386867
      ],
      "excerpt": "| L/16     | gs://vit_models/augreg/L_16-i21k-300ep-lr_0.001-aug_strong1-wd_0.1-do_0.0-sd_0.0.npz     | 1243 MiB | gs://vit_models/augreg/L_16-i21k-300ep-lr_0.001-aug_strong1-wd_0.1-do_0.0-sd_0.0--imagenet2012-steps_20k-lr_0.01-res_384.npz     |        384 |      50 |            85.59% | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80434838082658
      ],
      "excerpt": "| R50+L/32 | gs://vit_models/augreg/R50_L_32-i21k-300ep-lr_0.001-aug_medium1-wd_0.1-do_0.1-sd_0.1.npz | 1337 MiB | gs://vit_models/augreg/R50_L_32-i21k-300ep-lr_0.001-aug_medium1-wd_0.1-do_0.1-sd_0.1--imagenet2012-steps_20k-lr_0.01-res_384.npz |        384 |     327 |            85.99% | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80434838082658,
        0.80434838082658
      ],
      "excerpt": "| B/32     | gs://vit_models/augreg/B_32-i21k-300ep-lr_0.001-aug_light1-wd_0.1-do_0.0-sd_0.0.npz      |  398 MiB | gs://vit_models/augreg/B_32-i21k-300ep-lr_0.001-aug_light1-wd_0.1-do_0.0-sd_0.0--imagenet2012-steps_20k-lr_0.01-res_384.npz      |        384 |     955 |            83.59% | \n| S/32     | gs://vit_models/augreg/S_32-i21k-300ep-lr_0.001-aug_none-wd_0.1-do_0.0-sd_0.0.npz        |  118 MiB | gs://vit_models/augreg/S_32-i21k-300ep-lr_0.001-aug_none-wd_0.1-do_0.0-sd_0.0--imagenet2012-steps_20k-lr_0.01-res_384.npz        |        384 |    2154 |            79.58% | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8078145619394667
      ],
      "excerpt": "| model        | dataset      | dropout=0.0                                                                                                                                                         | dropout=0.1                                                                                                                                                          | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.822489901858862
      ],
      "excerpt": "ImageNet-21k | Mixer-L/16 | cifar10 | 98.34%   | 10.0h           | tensorboard.dev \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8010489055515357
      ],
      "excerpt": "    --image=c1-deeplearning-tf-2-5-cu110-v20210527-debian-10 \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ttt496/VisionTransformer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [2020] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vision Transformer and MLP-Mixer Architectures",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "VisionTransformer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ttt496",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ttt496/VisionTransformer/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "While above [colabs](#colab) are pretty useful to get started, you would usually\nwant to train on a larger machine with more powerful accelerators.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 18:06:04 GMT"
    },
    "technique": "GitHub API"
  }
}