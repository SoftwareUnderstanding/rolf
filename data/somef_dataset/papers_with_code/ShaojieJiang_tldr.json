{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2003.11963",
      "https://arxiv.org/abs/2003.11963",
      "https://arxiv.org/abs/1708.02002",
      "https://arxiv.org/abs/2003.11963",
      "https://arxiv.org/abs/2003.11963",
      "https://arxiv.org/abs/2003.11963",
      "https://arxiv.org/abs/1705.06476",
      "https://arxiv.org/abs/2003.11963",
      "https://arxiv.org/abs/{1705.06476"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use the features provided in this repo, please cite our [paper](https://arxiv.org/abs/2003.11963):\n```\n@article{jiang2020tldr,\n author = {Jiang, Shaojie and Wolf, Thomas and Monz, Christof and de Rijke, Maarten},\n journal = {arXiv preprint arXiv:2003.11963},\n title = {TLDR: Token Loss Dynamic Reweighting for Reducing Repetitive Utterance Generation},\n year = {2020}\n}\n```\nand the [ParlAI paper](https://arxiv.org/abs/1705.06476):\n\n```\n@article{miller2017parlai,\n  title={ParlAI: A Dialog Research Software Platform},\n  author={{Miller}, A.~H. and {Feng}, W. and {Fisch}, A. and {Lu}, J. and {Batra}, D. and {Bordes}, A. and {Parikh}, D. and {Weston}, J.},\n  journal={arXiv preprint arXiv:{1705.06476}},\n  year={2017}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{miller2017parlai,\n  title={ParlAI: A Dialog Research Software Platform},\n  author={{Miller}, A.~H. and {Feng}, W. and {Fisch}, A. and {Lu}, J. and {Batra}, D. and {Bordes}, A. and {Parikh}, D. and {Weston}, J.},\n  journal={arXiv preprint arXiv:{1705.06476}},\n  year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{jiang2020tldr,\n author = {Jiang, Shaojie and Wolf, Thomas and Monz, Christof and de Rijke, Maarten},\n journal = {arXiv preprint arXiv:2003.11963},\n title = {TLDR: Token Loss Dynamic Reweighting for Reducing Repetitive Utterance Generation},\n year = {2020}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShaojieJiang/tldr",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to ParlAI\nWhile we are seeding this project with an initial set of popular tasks and a few\nmodels and examples, ongoing contributions from the research community are\ndesired to increase the pool of tasks, models, and baselines.\nPull Requests\nWe actively welcome your pull requests.\n\nFork the repo and create your branch from master. Set up your environment\n   and run pre-commit install once.\nIf you've added code that should be tested, add tests.\nIf you've changed APIs, update the documentation.\nAutoformat and lint your code (bash autoformat.sh)\nEnsure the test suite passes. Run python setup.py test.\nIf you've added a new dataset, you should also run\n   python setup.py test -s tests.suites.datatests. Copy-paste the output into a\n   comment in your PR.\nIf you haven't already, complete the Contributor License Agreement (\"CLA\").\n\nOur continuous integration suite will run only fast tests before merging. We also\nhave a number of slow, more thorough tests which run nightly. You can additionally\nrun these by adding [long] into any of your commit messages. (A full list of\ntest triggers may be found in .circleci/triggers.py)\nContributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\nComplete your CLA here: https://code.facebook.com/cla\nIssues\nWe use GitHub issues for general feature discussion, Q&A and public bugs tracking.\nPlease ensure your description is clear and has sufficient instructions to be able to\nreproduce the issue or understand the problem.\nFacebook has a bounty program for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\nCoding Style\nWe try to follow the PEP style guidelines and encourage you to as well. You\nshould run the lint_changed.sh script before you submit.\nLicense\nBy contributing to ParlAI, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-15T08:25:21Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-10T05:42:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Source code repo for paper \"TLDR: Token Loss Dynamic Reweighting for Reducing Repetitive Utterance Generation\"",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please refer to the official [ParlAI website](https://parl.ai/) for a through documentation if you are unfamiliar with ParlAI.\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShaojieJiang/tldr/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 23:06:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShaojieJiang/tldr/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShaojieJiang/tldr",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/ShaojieJiang/tldr/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/projects/controllable_dialogue/Analysis_n_Graphs.ipynb",
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/projects/controllable_dialogue/inspect_wordstats.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/autoformat.sh",
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/projects/drqa/eval_full.sh",
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/projects/personachat/scripts/kvmemnn_train.sh",
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/projects/babi/memnn/memnn_bAbI_10k_task_parameter_sweep.sh",
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/projects/babi/memnn/memnn_bAbI_1k_task_parameter_sweep.sh",
      "https://raw.githubusercontent.com/ShaojieJiang/tldr/master/tests/test_quickstart.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\ngit clone https://github.com/ShaojieJiang/tldr.git ~/tldr\ncd ~/tldr; python setup.py develop\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShaojieJiang/tldr/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "JavaScript",
      "HTML",
      "CSS",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) Facebook, Inc. and its affiliates.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Requirements",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tldr",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShaojieJiang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShaojieJiang/tldr/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```angular2\nPython 3.7\nPyTorch 1.3.1\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Tue, 21 Dec 2021 23:06:32 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any questions or bug reports with regard to the features \nmentioned above, feel free to create a new issue on our\n[Issues page](https://github.com/ShaojieJiang/tldr/issues),\nor contact [Shaojie Jiang](https://shaojiejiang.github.io/) via the email address provided in our [paper](https://arxiv.org/abs/2003.11963).\n\nFor other questions related to the ParlAI framework, please refer to\nthe [original repository](https://github.com/facebookresearch/ParlAI).\n\n",
      "technique": "Header extraction"
    }
  ],
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The following command trains a transformer model with TLDR loss by default,\non the DailyDialog dataset:\n```bash\npython examples/train_model.py -m transformer/generator -t dailydialog\n```\n\nWith arguments `--weight-level sequence` and `--weight-func fl`, you can then\ntrain a model using sequence-level weighting and Focal Loss, respectively.\n\nFor using our proposed Seq2seq with pre attention, please specify\n`-m seq2seq` and add argument `--attention-time pre`.\n\n> :information_source: Our implementation of pre-attention is different than\n> that implemented in the original ParlAI framework.\n\n",
      "technique": "Header extraction"
    }
  ]
}