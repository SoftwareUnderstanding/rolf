{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2001.02254",
      "https://arxiv.org/abs/2001.02254",
      "https://arxiv.org/abs/2001.02254",
      "https://arxiv.org/abs/2001.02254"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this in your research please cite the following [whitepaper](https://arxiv.org/abs/2001.02254):\n\n```\n@misc{2001.02254,\n  author = {{Polzounov}, Kirill and {Sundar}, Ramitha and {Redden}, Lee},\n  title = \"{Blue River Controls: A toolkit for Reinforcement Learning Control Systems on Hardware}\",\n  year = {2019},\n  eprint = {arXiv:2001.02254},\n  howpublished = {Accepted at the Workshop on Deep Reinforcement Learning at the 33rd Conference on Neural Information Processing Systems (NeurIPS 2019), Vancouver, Canada.}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{2001.02254,\n  author = {{Polzounov}, Kirill and {Sundar}, Ramitha and {Redden}, Lee},\n  title = \"{Blue River Controls: A toolkit for Reinforcement Learning Control Systems on Hardware}\",\n  year = {2019},\n  eprint = {arXiv:2001.02254},\n  howpublished = {Accepted at the Workshop on Deep Reinforcement Learning at the 33rd Conference on Neural Information Processing Systems (NeurIPS 2019), Vancouver, Canada.}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BlueRiverTech/quanser-openai-driver",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-06T00:49:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-10T11:34:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8846453618209632
      ],
      "excerpt": "Has an OpenAI Gym wrapper for the Quanser Qube Servo 2 and Quanser Aero \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8148239105497337
      ],
      "excerpt": "Information about various environments can be found in docs/envs and our whitepaper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "OpenAI Gym wrapper for the Quanser Qube and Quanser Aero",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://pipenv.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BlueRiverTech/quanser-openai-driver/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Wed, 29 Dec 2021 14:37:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/BlueRiverTech/quanser-openai-driver/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "BlueRiverTech/quanser-openai-driver",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/BlueRiverTech/quanser-openai-driver/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/BlueRiverTech/quanser-openai-driver/main/tests/notebooks/Compare%20Qube%20Hardware%20to%20ODEint.ipynb",
      "https://raw.githubusercontent.com/BlueRiverTech/quanser-openai-driver/main/tests/notebooks/ODE%20vs%20Euler%20speedtest.ipynb",
      "https://raw.githubusercontent.com/BlueRiverTech/quanser-openai-driver/main/tests/notebooks/Compare%20ODEint%20to%20Eulers%20method.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We recommend that you use a virtual environment such as [conda (recommended)](https://conda.io/docs/user-guide/getting-started.html), [virtualenv](https://virtualenv.pypa.io/en/stable/), or [Pipenv](https://pipenv.readthedocs.io/en/latest/)\n\nYou can install the driver by cloning and pip-installing:\n```bash\n    git clone https://github.com/BlueRiverTech/quanser-openai-driver.git\n    cd quanser-openai-driver\n    pip3 install -e .\n```\n\nOnce you have that setup: Run the classical control baseline (ensure the Qube is connected to your computer)<br>\n```bash\npython tests/test.py --env QubeSwingupEnv --controller flip\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We have tested on Ubuntu 16.04 LTS and Ubuntu 18.04 LTS using Python 2.7 and Python 3.6.5<br>\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.897176225947782
      ],
      "excerpt": "Basic Usage \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/BlueRiverTech/quanser-openai-driver/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cython"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Blue River Technology\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Quanser OpenAI Driver",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "quanser-openai-driver",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "BlueRiverTech",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BlueRiverTech/quanser-openai-driver/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install the HIL SDK from Quanser.<br>\nA mirror is available at https://github.com/quanser/hil_sdk_linux_x86_64.<br>\n\nYou can install the driver by:\n```bash\n    git clone https://github.com/quanser/hil_sdk_linux_x86_64.git\n    sudo chmod a+x ./hil_sdk_linux_x86_64/setup_hil_sdk ./hil_sdk_linux_x86_64/uninstall_hil_sdk\n    sudo ./hil_sdk_linux_x86_64/setup_hil_sdk\n```\n\nYou also must have pip installed:\n```bash\n    sudo apt-get install python3-pip\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Wed, 29 Dec 2021 14:37:15 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "openai-gym",
      "machine-learning",
      "reinforcement-learning",
      "reinforcement-learning-playground",
      "deep-learning",
      "deeplearning",
      "openai-gym-environments",
      "openai-gym-environment",
      "openai-universe",
      "robotics",
      "robotics-control",
      "control-systems",
      "reinforcementlearning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Usage is very similar to most OpenAI gym environments but **requires** that you close the environment when finished.\nWithout safely closing the Env, bad things may happen. Usually you will not be able to reopen the board.\n\nThis can be done with a context manager using a `with` statement\n```python\nimport gym\nfrom gym_brt import QubeSwingupEnv\n\nnum_episodes = 10\nnum_steps = 250\n\nwith QubeSwingupEnv() as env:\n    for episode in range(num_episodes):\n        state = env.reset()\n        for step in range(num_steps):\n            action = env.action_space.sample()\n            state, reward, done, _ = env.step(action)\n```\n\nOr can be closed manually by using `env.close()`. You can see an [example here](docs/alternatives.md#usage).\n\n\n",
      "technique": "Header extraction"
    }
  ]
}