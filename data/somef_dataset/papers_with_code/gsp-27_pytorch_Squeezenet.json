{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1602.07360 on cifar-10 Data.\n\nThe definition of Squeezenet model is present **model.py**.\nThe training procedure resides in the file **main.py**\n\nCommand to train the Squeezenet model on CIFAR 10 data is:\n```bash\npython main.py --batch-size 32 --epoch 10\n```\nOther options which can be used are specified in **main.py**\nEg: if you want to use a pretrained_model\n```bash\npython main.py --batch-size 32 --epoch 10 --model_name \"pretrained model\"\n```\n\nI am currently using SGD for training : learning rate and weight decay are currently updated using a 55 epoch learning rule, this usually gives good performance, but if you want to use something of your own, you can specify it by passing **learning_rate** and **weight_decay** parameter like so\n\n```bash\npython main.py --batch-size 32 --epoch 10 --learning_rate 1e-3 --epoch_55\n```"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gsp-27/pytorch_Squeezenet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-01-23T11:28:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-26T08:43:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.861154012941043,
        0.9707768219552217
      ],
      "excerpt": "Pytorch implementation of Squeezenet model as described in https://arxiv.org/abs/1602.07360 on cifar-10 Data. \nThe definition of Squeezenet model is present model.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8860218302568196
      ],
      "excerpt": "I am currently using SGD for training : learning rate and weight decay are currently updated using a 55 epoch learning rule, this usually gives good performance, but if you want to use something of your own, you can specify it by passing learning_rate and weight_decay parameter like so \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of Squeezenet in pytorch, pretrained models on Cifar 10 data to come",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gsp-27/pytorch_Squeezenet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 22,
      "date": "Sun, 26 Dec 2021 15:41:01 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gsp-27/pytorch_Squeezenet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gsp-27/pytorch_Squeezenet",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9421505296774881,
        0.8418115697237305
      ],
      "excerpt": "The training procedure resides in the file main.py \nCommand to train the Squeezenet model on CIFAR 10 data is: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9268280360100947,
        0.8288566821827316
      ],
      "excerpt": "python main.py --batch-size 32 --epoch 10 \nOther options which can be used are specified in main.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9421394601352691
      ],
      "excerpt": "python main.py --batch-size 32 --epoch 10 --model_name \"pretrained model\" \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gsp-27/pytorch_Squeezenet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## Pytorch Squeeznet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch_Squeezenet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gsp-27",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gsp-27/pytorch_Squeezenet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 76,
      "date": "Sun, 26 Dec 2021 15:41:01 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "squeezenet"
    ],
    "technique": "GitHub API"
  }
}