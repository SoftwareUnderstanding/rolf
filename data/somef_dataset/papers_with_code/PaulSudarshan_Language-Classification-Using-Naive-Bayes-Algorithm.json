{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1508.07909 , using this technique of preprocessing the sample into various frequently occurring subwords, the accuracy of model was significantly improved.\n\n# Results\n### Let's Look at the interesting results we have obtained :\n\n![](images/english.png"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-24T16:43:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-17T14:09:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9971862552430278,
        0.986209362759467
      ],
      "excerpt": "The project on Language Classification using Naive-Bayes algorithm deals with classifying and identifying the language of the input string into its correct language category. In order to demonstrate the use-case the model has been trained to detect three different languages. The languages chosen for this model are Slovak (sk), Czec (cs) and English (en). The purpose for choosing slovak and czec is that both of these languages are very similar in the way they are spoken, so if the model is able to distinguish between these two given languages that will ensure the robustness of our model to classify between other dissimilar languages with a very good accuracy. \nIn order to understand the application of this project with a concrete example we can consider it as an initial step before performing Language Translation. If the user is not aware of the language he wants to translate using a Language Translator, we can perform a language classification of the input string and then apply appropriate Language Translator tool language conversion. For example Google Auto Detection. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9942302163978519
      ],
      "excerpt": "While classified in the hound group or scent hound group in the United States and Great Britain, the breed has its own group in the countries which belong to the F\u00e9d\u00e9ration Cynologique Internationale (World Canine Federation). Many dachshunds, especially the wire-haired subtype, may exhibit behavior and appearance that are similar to that of the terrier group of dogs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "joblib (for pipelining) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8514856397542442,
        0.8330145638562506,
        0.900317904496317,
        0.8658921867913782,
        0.9860386226277583
      ],
      "excerpt": "We import the specific language data from the above mentioned sources and store them in the form of a dictionary as key value pairs. The 'key' being the Language Name and 'value'being the sample of the respective language. \nWe derive some statistics from the data like the number of sentences present in a particular language sample, total number of words, number of unique words etc. \nAfter gaining some insights about the data we perform data cleaning and pre-processing by removing punctuations, digits, unnecessary symbols and store them back as key value pairs in refined form. \nAfter pre-processing we split the data into dependent (language name) and independent (language sample) variables as x_train and y_train. \nNext step is to perform the vectorisation of the x_train(independent variable) by using a library called CountVectorizer (from sklearn.feature_extraction.text import CountVectorizer), this converts our language sample into a sparse matrix of 0s and 1s. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "The project on Language Classification using Naive-Bayes algorithm deals with classifying as well as identifying the language of input string into its correct category. In order to demonstrate the use-case i have trained the model to detect three different languages with an adequate accuracy. The languages that i have chosen for this model are Slovak (sk), Czec (cs) and English (en). The purpose for choosing slovak and czec is that both of these languages are very similar in the way they are spoken, so if the model is able to distinguish between these two given languages that will ensure the robustness of our model to classify between other languages with a very good accuracy.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 13:39:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm/master/Language_Classifier.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8820234121644812
      ],
      "excerpt": "Jupyter Notebook \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Language-Classification-Using-Naive-Bayes-Algorithm",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Language-Classification-Using-Naive-Bayes-Algorithm",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "PaulSudarshan",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PaulSudarshan/Language-Classification-Using-Naive-Bayes-Algorithm/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 13:39:08 GMT"
    },
    "technique": "GitHub API"
  }
}