{
  "citation": [
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "Key | Description | Shape \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "[x] KITTI Tracking \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gau-nernst/centernet-lightning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-27T02:05:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T07:48:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9776552254334979
      ],
      "excerpt": "CenterNet is a strong single-stage, single-scale, and anchor-free object detector. This implementation is built with PyTorch Lightning, supports TorchScript and ONNX export, and has modular design to make customizing components simple. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9606799464655237
      ],
      "excerpt": "To read more about the architecture and code structure of this implementation, see implementation.md \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8757357797822178
      ],
      "excerpt": "model = ...     #: create a model as above \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9717976971702836
      ],
      "excerpt": "detections is a dictionary with the following keys: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8050478017973273
      ],
      "excerpt": "Results are np.ndarray, ready for post-processing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9234533459756803
      ],
      "excerpt": ": apply pre-processing: resize to 512x512 and normalize with ImageNet statistics \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = ...    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877,
        0.860059181823877
      ],
      "excerpt": "    encoded_outputs = model(img.unsqueeze(0)) \n    detections = model.gather_detection2d(encoded_outputs) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9459014474699041,
        0.8028049290094487
      ],
      "excerpt": "Note: Due to data augmentations during training, the model is robust enough to not need ImageNet normalization in inference. You can normalize input image to [0,1] and CenterNet should still work fine. \nCenterNet is export-friendly. You can directly export a trained model to ONNX or TorchScript (only tracing) using PyTorch Lightning API \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8161820923153358,
        0.9177371713651798
      ],
      "excerpt": "model.to_onnx(\"model.onnx\", torch.rand((1,3,512,512)))      #: export to ONNX \nmodel.to_torchscript(\"model.pt\", method=\"trace\")            #: export to TorchScript. scripting might not work \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of CenterNet and FairMOT with PyTorch Lightning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gau-nernst/CenterNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Thu, 30 Dec 2021 08:00:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gau-nernst/centernet-lightning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gau-nernst/centernet-lightning",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/gau-nernst/CenterNet/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone this repo and navigate to the repo directory\n\n```bash\ngit clone https://github.com/gau-nernst/centernet-lightning.git\ncd centernet-lightning\n```\n\nInstall using `environment.yml`\n\n```bash\nconda env create -f environment.yml\nconda activate centernet\n```\n\nFor more detailed instructions, see [install.md](docs/install.md)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8324675228401371
      ],
      "excerpt": "from albumentations.pytorch import ToTensorV2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8727487047449518
      ],
      "excerpt": "[x] COCO \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "TF CenterNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9329882368405222
      ],
      "excerpt": "Import build_centernet from models to build a CenterNet model from a YAML file. Sample config files are provided in the configs/ directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8900486270063179
      ],
      "excerpt": "from centernet_lightning.models import build_centernet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8900486270063179
      ],
      "excerpt": "from centernet_lightning.models import CenterNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8165414380864134
      ],
      "excerpt": "detections = model.inference_detection(img_dir, num_detections=100) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9457175861910134
      ],
      "excerpt": "import numpy as np \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674,
        0.9012248701992861
      ],
      "excerpt": "import cv2 \nimport albumentations as A \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8900486270063179
      ],
      "excerpt": "from centernet_lightning.models import CenterNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910587885492062
      ],
      "excerpt": "You can train CenterNet with the provided train script train.py and a config file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185617089492827,
        0.8196304353477226
      ],
      "excerpt": "python train.py --config \"configs/coco_resnet34.yaml\" \nSee sample config files at configs/. To customize training, see training.md \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gau-nernst/centernet-lightning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Thien Tran\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CenterNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "centernet-lightning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gau-nernst",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gau-nernst/centernet-lightning/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 40,
      "date": "Thu, 30 Dec 2021 08:00:31 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "object-detection",
      "pytorch-lightning",
      "centernet",
      "object-tracking"
    ],
    "technique": "GitHub API"
  }
}