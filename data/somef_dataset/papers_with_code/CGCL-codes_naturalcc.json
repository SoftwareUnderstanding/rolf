{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "NaturalCC is [MIT-licensed](https://github.com/CGCL-codes/naturalcc/blob/master/LICENSE.txt). The license applies to the\npre-trained models as well. This project is also highly inspired by [Fairseq](https://github.com/pytorch/fairseq)\nand [AllenNLP](https://allennlp.org).\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite as:\n\n```\nunder reviewing\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8715509475085587,
        0.8207940084462922
      ],
      "excerpt": "  <a href=\"https://xcodemind.github.io/\"> \n    <img src=\"https://img.shields.io/badge/NaturalCC-0.6.0-green\" alt=\"Version\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111036989382164,
        0.8715509475085587
      ],
      "excerpt": "  <a href=\"https://github.com/EdisonLeeeee/GraphGallery/blob/master/LICENSE\"> \n    <img src=\"https://img.shields.io/github/license/EdisonLeeeee/GraphGallery\" alt=\"license\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302785107180478,
        0.9302785107180478
      ],
      "excerpt": "CodeSearchNet (Husain et al.) \nCodeXGlue (Feng et al.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302785107180478,
        0.9553055233818778
      ],
      "excerpt": "OpenCL (Grewe et al.) \nJava (Hu et, al.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302785107180478,
        0.9302785107180478,
        0.9302785107180478
      ],
      "excerpt": "DeepCS (Gu et al.) \nAVATAR (Ahmad et al.) \nStackOverflow (Iyer et al.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537267708315463,
        0.8670498468297771
      ],
      "excerpt": "| Tree2Seq+Attn   | 23.35  | 12.59  | 36.49   | 0.48s/b | click here | \n| Transformer     | 30.64  | 17.65  | 44.59   | 0.26s/b | click here | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8491520732036035
      ],
      "excerpt": "| PLBART          | 32.71  | 18.13  | 46.05   | 0.80s/b | TBC | \nDataset: CodeSearchNet (Husain et al.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423,
        0.8444342525991423
      ],
      "excerpt": "| ConV1d   | 70.87 | 60.49 | 38.81 | 61.92 | 67.29  | 36.53 | 0.30s/b | click here | \n| BiRNN    | 65.80 | 48.60 | 23.23 | 51.36 | 48.28  | 19.35 | 0.74s/b | click here | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374695145293185,
        0.8968592401678853
      ],
      "excerpt": "| GTP-2     | 70.37 | 62.20 | 63.84  | 73.54 | 82.17  | 0.43s/b | click here | \n| TravTrans | 72.08 | 68.55 | 76.33  | 71.08 | 83.17  | 0.43s/b | click here | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9115465676107753,
        0.8491520732036035
      ],
      "excerpt": "| Transformer | 0.32              | 0.64              | 0.37              | 0.75              | 0.85s/b | TBC | \nDataset: OpenCL (Grewe et al.) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CGCL-codes/naturalcc",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-04T01:58:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T06:17:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9248343460702328
      ],
      "excerpt": "NaturalCC is a sequence modeling toolkit that allows researchers and developers to train custom models for many software \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9445654373072417
      ],
      "excerpt": "Our vision is to bridge the gap between programming language and natural language through machine learning techniques. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9831768689284919
      ],
      "excerpt": "A collection of code corpus with data preprocessing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8990000938473568
      ],
      "excerpt": "binary data formats \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8489500096428171
      ],
      "excerpt": "Currently, we have processed the following datasets: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8713701267335765
      ],
      "excerpt": "Select a task and a model from task list and follow the instructions in its README.md to start your learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "NaturalCC: An Open-Source Toolkit for Code Intelligence",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\n#: ref: dataset/python_wan/README.md\n#: download dataset\nbash dataset/python_wan/download.sh\n#: clean data\npython -m dataset.python_wan.clean\n#: cast data attributes into different files\npython -m dataset.python_wan.attributes_cast\n\n#: ref: dataset/python_wan/summarization/README.md\n#: save code tokens and docstirng tokens into MMAP format\npython -m dataset.python_wan.summarization.preprocess\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CGCL-codes/naturalcc/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please fell free to contact me if you have any troubles.\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Sun, 26 Dec 2021 02:04:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/CGCL-codes/naturalcc/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "CGCL-codes/naturalcc",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/CGCL-codes/naturalcc/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/opencl/explore/main.ipynb",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/examples/demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/third_party/programl/tasks/dataflow/overview.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/third_party/programl/tasks/dataflow/dataset/count_instances.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/third_party/programl/tasks/dataflow/dataset/create_labels.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/third_party/programl/tasks/dataflow/dataset/unpack_ir_text.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/third_party/programl/tasks/dataflow/dataset/count_labels.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/avatar/translation/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/py150/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/java_hu/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/codesearchnet/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/codesearchnet/codebert/traversal.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/python_wan/lazy_download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/python_wan/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/stackoverflow/lazy_download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/stackoverflow/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/codesearchnet_feng/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/codesearchnet_feng/binary_retrieval/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/raw_py150/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/opencl/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/codexglue/code_to_code/translation/preprocess.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/dataset/codexglue/code_to_text/download.sh",
      "https://raw.githubusercontent.com/CGCL-codes/naturalcc/master/docs/clean.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Since NCC is build via Cython, your GCC/G++ version should be greater than 4.9. If you have the root permission, update\nGCC/G++; otherwise, install GCC/G++ with conda.\n\n```shell\n#: install GCC/G++ with conda\nconda install -c anaconda gxx_linux-64\nconda install -c conda-forge gcc_linux-64\ncd ~/anaconda/envs/XXX/bin\nln -s x86_64-conda_cos6-linux-gnu-gcc gcc\nln -s x86_64-conda_cos6-linux-gnu-g++ g++\n#: check\nconda deactivate\nconda activate XXX\n>> type \"gcc/g++ -v\" in terminals\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Export your NaturalCC cache directory (data and models will be saved in this directory) to user\nvariables(```~/.bashrc``` or  ```~/.zshrc```).\n\n```shell\necho \"export NCC=/data/ncc_data\" >> ~/.bashrc\n```\n\n> Note: PyCharm cannot get environment variables and, therefore, we recommend you to register your NCC variable at ```ncc/__init__.py```.\n\nCompile Cython files to accelerate programs and register NaturalCC into your pip list\n\n```shell\n#: compile for debug\n#: python setup.py build_ext --inplace\n#: install \npip install --editable ./\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\ngit clone https://github.com/xcodemind/naturalcc && cd naturalcc\npip install -r requirements.txt\n```\n\nOnce you installed prerequisite libraries, you can check them via\n```python -m env_test```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9046842735015427
      ],
      "excerpt": "    <img src=\"https://img.shields.io/badge/NaturalCC-0.6.0-green\" alt=\"Version\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8276944017706751,
        0.8967738095316659
      ],
      "excerpt": "  <a href=\"https://www.python.org/downloads/release/python-360/\"> \n    <img src=\"https://img.shields.io/badge/Python->=3.6-3776AB?logo=python\" alt=\"Python\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9437182186390194,
        0.9409268991169935
      ],
      "excerpt": "  <a href=\"https://github.com/pytorch/pytorch\"> \n    <img src=\"https://img.shields.io/badge/PyTorch->=1.4-FF6F00?logo=pytorch\" alt=\"pytorch\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.927552345250473
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0,1,2,3 nohup python -m run.summarization.transformer.train -f config/python_wan/python > run/summarization/transformer/config/python_wan/python.log 2>&1 & \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8816257075249934
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python -m run.summarization.transformer.eval -f config/python_wan/python -o run/summarization/transformer/config/python_wan/python.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8698332815707979
      ],
      "excerpt": "Otherwise, use Automatic Mixed Precision (AMP). Available Now (set amp: 1 in yaml file, An example). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.874541487521747
      ],
      "excerpt": "| MRR       | Attr  | Num   | Name   | Param | Tokens | Cost    | Logs    | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8445505646309444
      ],
      "excerpt": "| LSTM      | 51.67 | 47.45 | 46.52  | 66.06 | 73.73  | 0.31s/b | click here | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8353513676659472
      ],
      "excerpt": "| DeepTune | 83.24    | 80.15    | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428,
        0.8589534893990137,
        0.8719202436106814
      ],
      "excerpt": ": ref: run/summarization/transformer/README.md \n: train \nCUDA_VISIBLE_DEVICES=0,1,2,3 nohup python -m run.summarization.transformer.train -f config/python_wan/python > run/summarization/transformer/config/python_wan/python.log 2>&1 & \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8565559489138258
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python -m run.summarization.transformer.eval -f config/python_wan/python -o run/summarization/transformer/config/python_wan/python.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810094876824159
      ],
      "excerpt": "NaturalCC-demo <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/CGCL-codes/naturalcc/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "JavaScript",
      "CSS",
      "Jupyter Notebook",
      "C++",
      "Cuda",
      "Cython",
      "Shell",
      "HTML"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2019 The Pybind Development Team. All rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its contributors\\n   may be used to endorse or promote products derived from this software\\n   without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nYou are under no obligation whatsoever to provide any bug fixes, patches, or\\nupgrades to the features, functionality or performance of the source code\\n(\"Enhancements\") to anyone; however, if you choose to make your Enhancements\\navailable either publicly, or directly to the author of this software, without\\nimposing a separate written license agreement for such Enhancements, then you\\nhereby grant the following license: a non-exclusive, royalty-free perpetual\\nlicense to install, use, modify, prepare derivative works, incorporate into\\nother computer software, distribute, and sublicense such enhancements or\\nderivative works thereof, in binary and source code form.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<center> NaturalCC",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "naturalcc",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "CGCL-codes",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CGCL-codes/naturalcc/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- PyTorch version >= 1.6.0\n- Python version >= 3.6\n- GCC/G++ > 5.0\n- For training new models, you'll also need an NVIDIA GPU and NCCL\n- (optional) For faster training, you need to install NVIDIA's apex library.\n\n[comment]: <> \"  with the --cuda_ext and --deprecated_fused_adam options\"\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\ngit clone https://github.com/xcodemind/naturalcc && cd naturalcc\npip install -r requirements.txt\n```\n\nOnce you installed prerequisite libraries, you can check them via\n```python -m env_test```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 45,
      "date": "Sun, 26 Dec 2021 02:04:11 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "natural-language-processing",
      "programming-language",
      "deep-learning",
      "toolkit"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "> All the running commands here should be executed in the root of project folder (the path of your `naturalcc`). For example, in my environment I will stay at `/data/wanyao/Dropbox/ghproj-v100/naturalcc`.\n> \n> We also have more detailed [READMEs](examples) to start your tutorial of NaturalCC.\n\n",
      "technique": "Header extraction"
    }
  ]
}