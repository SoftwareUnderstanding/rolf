{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. NAS codebase from [NAS-Bench-201](https://github.com/D-X-Y/AutoDL-Projects/blob/main/docs/NAS-Bench-201.md).\n2. NST codebase from [AdaIN](https://github.com/naoto0804/pytorch-AdaIN).\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2102.11382"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this work is useful to your research, please cite our paper:\n```bibtex\n@InProceedings{Gong_2022_WACV,\n  title={Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity},\n  author={Gong, Xinyu and Chen, Wuyang and Chen, Tianlong and Wang, Zhangyang},\n  journal={Winter Conference on Applications of Computer Vision (WACV)},\n  year={2022}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Gong_2022_WACV,\n  title={Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity},\n  author={Gong, Xinyu and Chen, Wuyang and Chen, Tianlong and Wang, Zhangyang},\n  journal={Winter Conference on Applications of Computer Vision (WACV)},\n  year={2022}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "| AutoGAN          |       8.43      |        10.51 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9593299683604384,
        0.8955886365383559,
        0.9030859728368266
      ],
      "excerpt": "| SNGAN            |       8.76      |        10.18 | \n| AutoGAN-SaBN (ours) |   8.72 (+0.29)  |  9.11 (\u22121.40) | \n| BigGAN-SaBN (ours) |   9.01 (+0.10)   | 8.03 (\u22120.54) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9743303397010512
      ],
      "excerpt": "Visual results on ImageNet (128*128 resolution): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "| PGD-10 (RA) | 41.57 |        43.05       |         44.93        | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VITA-Group/Sandwich-Batch-Normalization",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-16T02:39:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T13:42:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We present Sandwich Batch Normalization (SaBN), an extremely easy improvement of Batch Normalization (BN) with only a few lines of code changes.\n\n![method](imgs/architect.png)\n\nWe demonstrate the prevailing effectiveness of SaBN as a drop-in replacement in four tasks:\n1. **conditional image generation**,\n2. **neural architecture search**,\n3. **adversarial training**,\n4. **arbitrary neural style transfer**.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8691636594479178
      ],
      "excerpt": "We adopted DARTS as the baseline search algorithm. Results on NAS-Bench-201 are presented below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8600688508111435
      ],
      "excerpt": "The model equipped with the proposed SaAdaIN achieves lower style & content loss on both training and testing set. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[WACV 2022] \"Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity\" by Xinyu Gong, Wuyang Chen, Tianlong Chen and Zhangyang Wang",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VITA-Group/Sandwich-Batch-Normalization/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Wed, 29 Dec 2021 05:03:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/VITA-Group/Sandwich-Batch-Normalization/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "VITA-Group/Sandwich-Batch-Normalization",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/test_autogan_sabn_cifar10.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/train_sngan_ccbn_imagenet.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/train_sngan_sabn_imagenet.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/test_sngan_sabn_cifar10.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/train_autogan_sabn_cifar10.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/train_sngan_sabn_cifar10.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/train_sngan_ccbn_cifar10.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/test_sngan_sabn_imagenet.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/GAN/scripts/train_autogan_ccbn_cifar10.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/NST/scripts/saadain_net.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/NST/scripts/adain_net.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/Adv/scripts/test_saauxbn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/Adv/scripts/train_bn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/Adv/scripts/test_auxbn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/Adv/scripts/test_bn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/Adv/scripts/train_auxbn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/Adv/scripts/train_saauxbn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/NAS/scripts/DARTS-V1-sabn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/NAS/scripts/DARTS-V1-ccbn.sh",
      "https://raw.githubusercontent.com/VITA-Group/Sandwich-Batch-Normalization/main/NAS/scripts/DARTS-V1.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8044169036913436
      ],
      "excerpt": "| BigGAN-SaBN (ours) |   9.01 (+0.10)   | 8.03 (\u22120.54) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8702815774991463
      ],
      "excerpt": "| DARTS-SaBN (ours) | 71.56 \u00b1 1.39 | 45.85 \u00b1 0.72 | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/VITA-Group/Sandwich-Batch-Normalization/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 VITA\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sandwich Batch Normalization: A Drop-In Replacement for Feature Distribution Heterogeneity",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sandwich-Batch-Normalization",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "VITA-Group",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VITA-Group/Sandwich-Batch-Normalization/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 40,
      "date": "Wed, 29 Dec 2021 05:03:28 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "neural-architecture-search",
      "gan",
      "style-transfer",
      "adversarial-training",
      "batch-normalization",
      "normalization",
      "sandwich-batch-normalization",
      "sabn",
      "nas",
      "pytorch"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Check each of them for more information:\n1. [GAN](https://github.com/VITA-Group/Sandwich-Batch-Normalization/blob/main/GAN)\n2. [NAS](https://github.com/VITA-Group/Sandwich-Batch-Normalization/blob/main/NAS)\n3. [Adv](https://github.com/VITA-Group/Sandwich-Batch-Normalization/blob/main/Adv)\n4. [NST](https://github.com/VITA-Group/Sandwich-Batch-Normalization/blob/main/NST)\n\n",
      "technique": "Header extraction"
    }
  ]
}