{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1312.5602",
      "https://arxiv.org/abs/1312.5602, 2013.\n\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Our game was inspired by this project: https://github.com/ArztSamuel/Applying_EANNs\n- We also refered to this project: https://github.com/yenchenlin/DeepLearningFlappyBird\n- Mnih V, Kavukcuoglu K, Silver D, et al. Playing atari with deep reinforcement learning[J]. arXiv preprint arXiv:1312.5602, 2013.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "- Chen Kai \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "   - Jun Yuan \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/komejisatori/ReinforcementCar",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-18T08:26:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-21T13:05:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9902702839736124
      ],
      "excerpt": "A deep learning course project of using Deep Q leaning to play a racing game \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9071073931541702,
        0.9658145188656134,
        0.860059181823877,
        0.9248309305896165,
        0.966903550529302,
        0.8769501553565403,
        0.9834396676471764
      ],
      "excerpt": "Simple racing game with pygame. The vehicle accelerates gradually, the direction key \u2190 and \u2192 controls the direction left and right. \n The steering angular speed increases with the time of pressing the direction keys. \nRL model \nA simple Deep Q learning model with PyTorch, including training script and pretrained model file. Training and Inference can be done with CPU only. \nThe model takes the input of distances between car and obstacles in five directions to steer the car each game frame. \nModel Visualization \nShowing the inference state of the model in the game process. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Model sturcture \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503829381739865
      ],
      "excerpt": "Deep Q learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8922371481861112
      ],
      "excerpt": "Visualize the model wieghts \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A DL course reinforcement learning project",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/komejisatori/ReinforcementCar/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Sat, 25 Dec 2021 13:22:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/komejisatori/ReinforcementCar/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "komejisatori/ReinforcementCar",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8264283241194144
      ],
      "excerpt": "You can train your own RL model using: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9083768827497375
      ],
      "excerpt": "    python model/eval.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8170415146284662
      ],
      "excerpt": "Training your model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9506851822712116
      ],
      "excerpt": "  python model/train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8058442100629668
      ],
      "excerpt": "In the model training process, target model weights of each saving point are recorded in the log folder. You can visualize the change of each epoch by directly run: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/komejisatori/ReinforcementCar/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ReinforcementCar \ud83d\ude97",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ReinforcementCar",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "komejisatori",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/komejisatori/ReinforcementCar/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    \n   We use Python 3.6 with `PyTorch` and `pygame`. Quickly install all required packages by:\n   \n   ```\n   pip install -r requirements.txt\n   ```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sat, 25 Dec 2021 13:22:37 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "dl-course",
      "pytorch",
      "pygame"
    ],
    "technique": "GitHub API"
  }
}