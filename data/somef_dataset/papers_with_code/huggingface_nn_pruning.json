{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2005.07683",
      "https://arxiv.org/abs/2002.11794"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|#10                                                                                               |base     |struct       |-86%     |    85.52|-2.98    |3.64x    | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huggingface/nn_pruning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-22T13:53:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T14:12:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9262169840215404
      ],
      "excerpt": "An interactive version of this site is available here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.975363186883378
      ],
      "excerpt": "method to prune networks in a unstructured manner. High levels of sparsity can be reached with a minimal of accuracy loss. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9875344491947295,
        0.9487680522099001,
        0.9516321756000089,
        0.95977444862201,
        0.9106778050303251
      ],
      "excerpt": "saving a lot of permanent storage space on servers or devices, and bandwidth, an important advantage for edge devices. \nBut efficient inference with unstructured sparsity is hard. \nSome degree of structure is necessary to use the intrinsic parallel nature of today hardware. \nBlock Movement Pruning work extends the original method and explore semi-structured and structured variants* of Movement Pruning. \nYou can read more about block sparsity and why it matters for performance on these blog posts. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9780855396957407,
        0.9221451347510264
      ],
      "excerpt": "Here is a selection of the networks that are obtained through the different variant method variants. \nThe original \"large\" and \"base\" finedtuned models were added in the table for comparison. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9793544723370071,
        0.8588292254783347,
        0.8539309391488191
      ],
      "excerpt": "The parameter count column is relative to linear layers, which contain most of the model parameters (with the embeddings being most of the remaining parameters). \nF1 difference, speedups and parameters counts are all relative to BERT-base to ease practical comparison. \n|                                              Model                                               |  Type   |   method    | Params  |   F1    | F1 diff | Speedup | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8985082387423836,
        0.9136190764347252,
        0.9069191469196236
      ],
      "excerpt": "network #2: pruned from BERT-large, it's significantly more accurate than BERT-base, but have a similar size and speed. \nnetwork #3: pruned from BERT-large, it is finally 40% smaller but significantly better than a BERT-base, and still as fast. \nThat means that starting from a larger networks is beneficial on all metrics, even absolute size, something observed in the Train Large, Then Compress paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.827071234390155,
        0.9243531379918575
      ],
      "excerpt": "networks #N: we can select a tradeoff between speed and accuracy, depending on the final application. \nlast network: pruned using a slightly different \"structured pruning\" method that gives faster networks but with a significant drop in F1. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.921862372989334,
        0.907983023892354,
        0.9857456679947482,
        0.9600717345962079,
        0.9554014595452645,
        0.9327023604023412,
        0.9532120287691201,
        0.9804568338830121
      ],
      "excerpt": "- The parameter reduction of the BERT-large networks are actually higher compared to the original network: 40% smaller than BERT-base means actually 77% smaller than BERT-large. \nWe kept here the comparison with BERT-base numbers as it's what matters on a practical point of view. \n- The \"theoretical speedup\" is a speedup of linear layers (actual number of flops), something that seems to be equivalent to the measured speedup in some papers. \nThe speedup here is measured on a 3090 RTX, using the HuggingFace transformers library, using Pytorch cuda timing features, and so is 100% in line with real-world speedup. \nIf we plot the F1 of the full set of pruned networks against the speedup, we can see that we outperform fine-tuned TinyBERT and Distilbert by some margin. \nMobileBert seems significantly better, even with the \"no OPT\" version presented here, which does not contain the LayerNorm optimization used in the much faster version of MobileBERT. \nAn interesting future work will be to add those optimizations to the pruning tools. \nEven in terms of saved size, we get smaller networks for the same accuracy (except for MobileBERT, which is better on size too): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9836144743824451,
        0.8233323207258836
      ],
      "excerpt": "Here is a selection of networks, with the same rules as for the SQuAd table: \n|                         Model                          |  Type  |   method    |Params |Accuracy|Accuracy diff| Speedup | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Prune a model while finetuning or training.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The documentation is [here](docs/HOWTO.md).\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huggingface/nn_pruning/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Mon, 27 Dec 2021 23:05:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huggingface/nn_pruning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "huggingface/nn_pruning",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/huggingface/nn_pruning/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/notebooks/01-sparse-trainer.ipynb",
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/notebooks/Quantization.ipynb",
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/notebooks/00-using-pruned-transformers.ipynb",
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/nn_pruning/modules/AmpereRework.ipynb",
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/analysis/article/build_table.ipynb",
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/analysis/article/layers_pruning_images.ipynb",
      "https://raw.githubusercontent.com/huggingface/nn_pruning/main/analysis/article/pruning_by_layer_images.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To install the latest state of the source code, first clone the repository\n\n```\ngit clone https://github.com/huggingface/nn_pruning.git\n```\n\nand then install the required dependencies:\n\n```\ncd nn_pruning\npython -m pip install -e \".[dev]\"\n```\n\nAfter the installation is completed, you can launch the test suite from the root of the repository\n\n```\npytest nn_pruning\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9915598912875685,
        0.9996646107271211
      ],
      "excerpt": "You can install nn_pruning using pip as follows: \npython -m pip install -U nn_pruning \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huggingface/nn_pruning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "JavaScript",
      "Python",
      "HTML",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Neural Networks Block Movement Pruning",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "nn_pruning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "huggingface",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huggingface/nn_pruning/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 227,
      "date": "Mon, 27 Dec 2021 23:05:03 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Here are some visualizations of the pruned network [#7](https://huggingface.co/madlag/bert-base-uncased-squadv1-x2.44-f87.7-d26-hybrid-filled-v1).\nIt is using the \"Hybrid filled\" method:\n- Hybrid : prune using blocks for attention and rows/columns for the two large FFNs.\n- Filled : remove empty heads and empty rows/columns of the FFNs, then re-finetune the previous network, letting the zeros in non-empty attention heads evolve and so regain some accuracy while keeping the same network speed.\n\nYou can see that the results linear layers are all actually \"dense\" (hover on the graph to visualize them).\n\n![Hybrid Filled Density](docs/assets/media/squadv1/models/network_filled/density_info.png)\n\nYou can see here the pruned heads for each layer:\n\n![Hybrid Filled Head Pruning](docs/assets/media/squadv1/models/network_filled/pruning_info.png)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}