{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385",
      "https://arxiv.org/abs/1409.4842",
      "https://arxiv.org/abs/1608.06993"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9707925318074234
      ],
      "excerpt": "alt=\"Prunus\" title=\"DenseNet Figure 1\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9942810120060576
      ],
      "excerpt": "If you want more information, <br>you should check here (https://arxiv.org/abs/1608.06993) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yw0nam/DenseNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-03T21:19:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-05T02:47:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9563511602633623
      ],
      "excerpt": "It is very simple, and powerful cnn architecture. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9444414297966359,
        0.8273785645986595,
        0.908925214220865
      ],
      "excerpt": "Traditional CNN extract image feature from CNN layers, but it doens't use the CNN layer's features for classification. <br> \nIn contrast, After Resnet, many CNN Architecture using skip connection(Resnet)  \nand elementwise sum(Googlenet). <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.918542097887939
      ],
      "excerpt": "This paper is one of them, but the difference of this architecture doesn't excecute any Calculation, <br>just concatenate the previous layer to next layer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8871408820573442
      ],
      "excerpt": "That's all!<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yw0nam/DenseNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 22:03:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yw0nam/DenseNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yw0nam/DenseNet",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yw0nam/DenseNet/master/Model.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8127299408860256,
        0.9713670175376287,
        0.9967777177014457,
        0.9030021386203777,
        0.9990696733218749,
        0.8018086051575031,
        0.9989489477244536
      ],
      "excerpt": "You need Tensorlofw 2.x and numpy \nYou can install Tensorflow and numpy below code  \npip install tensorflow \nIf you want to use gpu, \npip install tensorflow-gpu \nAnd you also need numpy \npip install numpy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9879863063452118
      ],
      "excerpt": "git clone https://github.com/yw0nam/DenseNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd DenseNet \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9122208877734702
      ],
      "excerpt": "Finally run train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yw0nam/DenseNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DenseNet implement using TF 2.0",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DenseNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yw0nam",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yw0nam/DenseNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 22:03:48 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "densenet",
      "cnn-architecture",
      "cnn-layers",
      "tensorflow-2",
      "mnist"
    ],
    "technique": "GitHub API"
  }
}