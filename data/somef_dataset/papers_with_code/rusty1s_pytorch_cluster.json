{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.02901",
      "https://arxiv.org/abs/1706.02413",
      "https://arxiv.org/abs/1607.00653"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8348362997093185,
        0.8348362997093185,
        0.8326585122547221
      ],
      "excerpt": "[![Testing Status][testing-image]][testing-url] \n[![Linting Status][linting-image]][linting-url] \n[![Code Coverage][coverage-image]][coverage-url] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8783856307741899,
        0.9798006100522202
      ],
      "excerpt": "Graclus from Dhillon et al.: Weighted Graph Cuts without Eigenvectors: A Multilevel Approach (PAMI 2007) \nVoxel Grid Pooling from, e.g., Simonovsky and Komodakis: Dynamic Edge-Conditioned Filters in Convolutional Neural Networks on Graphs (CVPR 2017) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rusty1s/pytorch_cluster",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-01-12T20:56:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T16:56:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9451493800972037,
        0.8553365783243456
      ],
      "excerpt": "This package consists of a small extension library of highly optimized graph cluster algorithms for the use in PyTorch. \nThe package consists of the following clustering algorithms: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8173932485043466
      ],
      "excerpt": "Iterative Farthest Point Sampling from, e.g. Qi et al.: PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space (NIPS 2017) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9270924263772334
      ],
      "excerpt": "Clustering based on Nearest points \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9178353694747102
      ],
      "excerpt": "All included operations work on varying data types and are implemented both for CPU and GPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8094641855513587
      ],
      "excerpt": "Note: Binaries of older versions are also provided for PyTorch 1.4.0, PyTorch 1.5.0, PyTorch 1.6.0, PyTorch 1.7.0/1.7.1 and PyTorch 1.8.0/1.8.1 (following the same procedure). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.856047656897668
      ],
      "excerpt": "When running in a docker container without NVIDIA driver, PyTorch needs to evaluate the compute capabilities and may fail. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8634950124620474
      ],
      "excerpt": "A greedy clustering algorithm of picking an unmarked vertex and matching it with one its unmarked neighbors (that maximizes its edge weight). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9149169790032238
      ],
      "excerpt": "A clustering algorithm, which overlays a regular grid of user-defined size over a point cloud and clusters all points within a voxel. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.933888819357198
      ],
      "excerpt": "A sampling algorithm, which iteratively samples the most distant point with regard to the rest points. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.924904219724099
      ],
      "excerpt": "Computes graph edges to the nearest k points. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8417699761456031,
        0.8154104550603786,
        0.8404641638458166
      ],
      "excerpt": "x (Tensor): Node feature matrix of shape [N, F]. \nk (int): The number of neighbors. \nbatch (LongTensor, optional): Batch vector of shape [N], which assigns each node to a specific example. batch needs to be sorted. (default: None) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8198172620591904
      ],
      "excerpt": "flow (string, optional): The flow direction when using in combination with message passing (\"source_to_target\" or \"target_to_source\"). (default: \"source_to_target\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9018546391841509
      ],
      "excerpt": "num_workers (int): Number of workers to use for computation. Has no effect in case batch is not None, or the input lies on the GPU. (default: 1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8306883591356176
      ],
      "excerpt": "Computes graph edges to all points within a given distance. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8417699761456031,
        0.8490037945672047,
        0.8404641638458166
      ],
      "excerpt": "x (Tensor): Node feature matrix of shape [N, F]. \nr (float): The radius. \nbatch (LongTensor, optional): Batch vector of shape [N], which assigns each node to a specific example. batch needs to be sorted. (default: None) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.819918911155393,
        0.8198172620591904,
        0.9018546391841509
      ],
      "excerpt": "max_num_neighbors (int, optional): The maximum number of neighbors to return for each element. If the number of actual neighbors is greater than max_num_neighbors, returned neighbors are picked randomly. (default: 32) \nflow (string, optional): The flow direction when using in combination with message passing (\"source_to_target\" or \"target_to_source\"). (default: \"source_to_target\") \nnum_workers (int): Number of workers to use for computation. Has no effect in case batch is not None, or the input lies on the GPU. (default: 1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.921591581955448
      ],
      "excerpt": "Clusters points in x together which are nearest to a given query point in y. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9063259223902499
      ],
      "excerpt": "Samples random walks of length walk_length from all node indices in start in the graph given by (row, col). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8657542305698799
      ],
      "excerpt": "torch-cluster also offers a C++ API that contains C++ equivalent of python models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch Extension Library of Optimized Graph Cluster Algorithms",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rusty1s/pytorch_cluster/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 86,
      "date": "Wed, 29 Dec 2021 20:09:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rusty1s/pytorch_cluster/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "rusty1s/pytorch_cluster",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu111-Linux.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu111-Linux-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu101-Windows-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu102-Linux-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu101-Linux-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu113-Linux-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu101-Linux.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu111-Windows-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu113-Linux.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu113-Windows-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu113-Windows.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu101-Windows.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu102-Windows-env.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu111-Windows.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu102-Linux.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/.github/workflows/cuda/cu102-Windows.sh",
      "https://raw.githubusercontent.com/rusty1s/pytorch_cluster/master/conda/pytorch-cluster/build_conda.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9162648800574104
      ],
      "excerpt": "[![PyPI Version][pypi-image]][pypi-url] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9962629421108469,
        0.934616241434984,
        0.9994466678157792,
        0.9650831590317516,
        0.9774924437005043,
        0.8133367358507827,
        0.9665988650188269
      ],
      "excerpt": "Update: You can now install pytorch-cluster via Anaconda for all major OS/PyTorch/CUDA combinations \ud83e\udd17 \nGiven that you have pytorch &gt;= 1.8.0 installed, simply run \nconda install pytorch-cluster -c pyg \nWe alternatively provide pip wheels for all major OS/PyTorch/CUDA combinations, see here. \nTo install the binaries for PyTorch 1.10.0, simply run \npip install torch-cluster -f https://data.pyg.org/whl/torch-1.10.0+${CUDA}.html \nwhere ${CUDA} should be replaced by either cpu, cu102, or cu113 depending on your PyTorch installation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8506852711490298,
        0.9401400739544492,
        0.8184747637333865,
        0.9810906619337405,
        0.87952376266938,
        0.9665988650188269
      ],
      "excerpt": "| Linux   | \u2705    | \u2705      | \u2705      | \n| Windows | \u2705    | \u2705      | \u2705      | \n| macOS   | \u2705    |         |         | \nTo install the binaries for PyTorch 1.9.0 and 1.9.1, simply run \npip install torch-cluster -f https://data.pyg.org/whl/torch-1.9.0+${CUDA}.html \nwhere ${CUDA} should be replaced by either cpu, cu102, or cu111 depending on your PyTorch installation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8506852711490298,
        0.9401400739544492,
        0.8184747637333865,
        0.9538431364633188,
        0.8429180041890391
      ],
      "excerpt": "| Linux   | \u2705    | \u2705      | \u2705      | \n| Windows | \u2705    | \u2705      | \u2705      | \n| macOS   | \u2705    |         |         | \nNote: Binaries of older versions are also provided for PyTorch 1.4.0, PyTorch 1.5.0, PyTorch 1.6.0, PyTorch 1.7.0/1.7.1 and PyTorch 1.8.0/1.8.1 (following the same procedure). \nEnsure that at least PyTorch 1.4.0 is installed and verify that cuda/bin and cuda/include are in your $PATH and $CPATH respectively, e.g.: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9853723880054749
      ],
      "excerpt": "pip install torch-cluster \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9620406150340135,
        0.9944375700570437,
        0.8851009371765425
      ],
      "excerpt": "mkdir build \ncd build \n: Add -DWITH_CUDA=on support for the CUDA if needed \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9967888697644471
      ],
      "excerpt": "make install \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8117007451991057
      ],
      "excerpt": "Then run: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from torch_cluster import graclus_cluster \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from torch_cluster import grid_cluster \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8811518091990185
      ],
      "excerpt": "from torch_cluster import fps \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824780561983719
      ],
      "excerpt": "index = fps(x, batch, ratio=0.5, random_start=False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from torch_cluster import knn_graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from torch_cluster import radius_graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from torch_cluster import nearest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from torch_cluster import random_walk \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rusty1s/pytorch_cluster/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Cuda",
      "Shell",
      "CMake",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2020 Matthias Fey &#109;&#97;&#116;&#116;&#104;&#105;&#97;&#115;&#46;&#102;&#101;&#121;&#64;&#116;&#117;&#45;&#100;&#111;&#114;&#116;&#109;&#117;&#110;&#100;&#46;&#100;&#101;\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch Cluster",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch_cluster",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "rusty1s",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rusty1s/pytorch_cluster/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Reduced the size of shared library files\r\n* CUDA wheels can now also operate on CPU-only devices\r\n* Added parallelization strategies for CPU functionalities\r\n* `fps` can now take in different ratios across different batched point sets, *i.e.* `ratio` can now be a `torch.Tensor`\r\n* Fixed a bug in which `radius` computed slightly different results across CPU and CUDA versions",
        "dateCreated": "2021-03-01T13:58:03Z",
        "datePublished": "2021-03-01T13:58:47Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.9",
        "name": "1.5.9",
        "tag_name": "1.5.9",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.9",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/39055138",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.9"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* PyTorch 1.7 wheels\r\n* `random_walk` now supports `q != 1` and `p != 1` via rejection sampling",
        "dateCreated": "2020-10-31T11:26:53Z",
        "datePublished": "2020-10-31T12:11:22Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.8",
        "name": "1.5.8",
        "tag_name": "1.5.8",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.8",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/33303659",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.8"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* PyTorch 1.6.0 wheels\r\n* Fixed a bug in `radius` where the `max_num_neighbors` argument has been ignored",
        "dateCreated": "2020-08-05T05:50:47Z",
        "datePublished": "2020-08-05T07:35:36Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.7",
        "name": "1.5.7",
        "tag_name": "1.5.7",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.7",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/29350821",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.7"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "This release fixes some issues in the new `knn` and `radius` CPU implementations that have led to memory leaks. It is strongly recommended to update the package in case you are currently using `torch-cluster==1.5.5`.",
        "dateCreated": "2020-07-16T19:34:24Z",
        "datePublished": "2020-07-17T04:35:58Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.6",
        "name": "1.5.6",
        "tag_name": "1.5.6",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.6",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/28659976",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.6"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* `torch-cluster` is now fully-jittable thanks to new implementations for `knn` and `radius` based on `nanoflann` rather than `scipy`.",
        "dateCreated": "2020-06-22T20:30:39Z",
        "datePublished": "2020-06-22T20:33:29Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.5",
        "name": "1.5.5",
        "tag_name": "1.5.5",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.5",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/27802701",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.5"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "Fixed a bug in the CUDA version of `fps`.",
        "dateCreated": "2020-04-01T17:58:23Z",
        "datePublished": "2020-04-01T17:58:48Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.4",
        "name": "1.5.4",
        "tag_name": "1.5.4",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.4",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/25103756",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.4"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "Fixes regarding proper usage of `fps` and `radius`.",
        "dateCreated": "2020-03-24T08:25:41Z",
        "datePublished": "2020-03-24T11:01:58Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.3",
        "name": "1.5.3",
        "tag_name": "1.5.3",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.3",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/24805487",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.3"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "This release introduces traceable `torch-cluster` operators using `torch.jit.script`. As a result, PyTorch 1.4 is now required to install this package. We also provide Python wheels for common OS/CUDA combinations (see README).",
        "dateCreated": "2020-03-17T04:13:00Z",
        "datePublished": "2020-03-17T04:13:47Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.5.2",
        "name": "1.5.2",
        "tag_name": "1.5.2",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.5.2",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/24582257",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.5.2"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "This release brings PyTorch 1.3 support to `torch-cluster`.",
        "dateCreated": "2019-10-14T11:32:15Z",
        "datePublished": "2019-10-14T11:33:13Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.4.5",
        "name": "1.4.5",
        "tag_name": "1.4.5",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.4.5",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/20679296",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.4.5"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* PyTorch 1.2 update",
        "dateCreated": "2019-08-11T12:54:58Z",
        "datePublished": "2019-08-11T12:56:11Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.4.4",
        "name": "1.4.4",
        "tag_name": "1.4.4",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.4.4",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/19215062",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.4.4"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Random Walk Sampling API",
        "dateCreated": "2019-07-27T17:44:31Z",
        "datePublished": "2019-07-27T17:45:55Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.4.3",
        "name": "1.4.3",
        "tag_name": "1.4.3",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.4.3",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/18906937",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.4.3"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "Added `flow` argument to the `radius_graph` method.",
        "dateCreated": "2019-06-04T19:41:18Z",
        "datePublished": "2019-06-04T19:42:05Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.4.2",
        "name": "1.4.2",
        "tag_name": "1.4.2",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.4.2",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/17780430",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.4.2"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Added `flow` argument to the `knn_graph` method.",
        "dateCreated": "2019-06-04T18:34:52Z",
        "datePublished": "2019-06-04T18:37:32Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.4.1",
        "name": "1.4.1",
        "tag_name": "1.4.1",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.4.1",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/17778867",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.4.1"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Added NeighborSampler",
        "dateCreated": "2019-05-31T09:39:00Z",
        "datePublished": "2019-05-31T09:39:43Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.4.0",
        "name": "1.4.0",
        "tag_name": "1.4.0",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.4.0",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/17701254",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.4.0"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* PyTorch 1.1.0",
        "dateCreated": "2019-05-01T09:22:16Z",
        "datePublished": "2019-05-01T09:26:31Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.3.0",
        "name": "1.3.0",
        "tag_name": "1.3.0",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.3.0",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/17085371",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.3.0"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* multi-GPU support",
        "dateCreated": "2019-03-06T15:10:25Z",
        "datePublished": "2019-03-06T15:13:13Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.2.4",
        "name": "1.2.4",
        "tag_name": "1.2.4",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.2.4",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/15947825",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.2.4"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "",
        "dateCreated": "2019-01-24T13:26:48Z",
        "datePublished": "2019-01-24T13:28:35Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.2.3",
        "name": "1.2.3",
        "tag_name": "1.2.3",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.2.3",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/15158451",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.2.3"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Iterative Farthest Point Sampling\r\n* kNN and Radius Graph\r\n* Nearest",
        "dateCreated": "2018-12-18T07:00:46Z",
        "datePublished": "2018-12-18T07:01:34Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.2.2",
        "name": "1.2.2",
        "tag_name": "1.2.2",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.2.2",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/14585578",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.2.2"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Voxel Grid CUDA Bugfix",
        "dateCreated": "2018-08-31T14:39:53Z",
        "datePublished": "2018-08-31T14:40:48Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.1.5",
        "name": "1.1.5",
        "tag_name": "1.1.5",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.1.5",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/12676154",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.1.5"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* now uses new extension API",
        "dateCreated": "2018-08-23T11:12:46Z",
        "datePublished": "2018-08-23T11:23:22Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.1.4",
        "name": "1.1.4",
        "tag_name": "1.1.4",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.1.4",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/12539939",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.1.4"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "PyTorch 0.4.1 adjustments",
        "dateCreated": "2018-08-13T06:38:24Z",
        "datePublished": "2018-08-13T10:15:15Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.1.3",
        "name": "1.1.3",
        "tag_name": "1.1.3",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.1.3",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/12373850",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.1.3"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* Graclus GPU OOM Fixes",
        "dateCreated": "2018-05-17T15:25:15Z",
        "datePublished": "2018-05-17T15:26:01Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.1.2",
        "name": "1.1.2",
        "tag_name": "1.1.2",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.1.2",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/11050668",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.1.2"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "PyTorch 0.4.0",
        "dateCreated": "2018-04-30T06:15:39Z",
        "datePublished": "2018-04-30T06:19:48Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.1.1",
        "name": "1.1.1",
        "tag_name": "1.1.1",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.1.1",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/10777392",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.1.1"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "Graclus GPU Bugfixes:\r\n* self-loops are no longer a problem\r\n* edge weights of zero are handled correctly",
        "dateCreated": "2018-04-18T13:13:56Z",
        "datePublished": "2018-04-18T13:20:18Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.0.3",
        "name": "1.0.3",
        "tag_name": "1.0.3",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.0.3",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/10603776",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.0.3"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* huge rebuild\r\n* added graclus gpu and cpu implementation",
        "dateCreated": "2018-04-13T04:36:23Z",
        "datePublished": "2018-04-13T16:57:26Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/1.0.1",
        "name": "1.0.1",
        "tag_name": "1.0.1",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/1.0.1",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/10539041",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/1.0.1"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "* huge performance boost on GPU",
        "dateCreated": "2018-02-27T13:59:24Z",
        "datePublished": "2018-02-27T14:00:27Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/0.2.4",
        "name": "0.2.4",
        "tag_name": "0.2.4",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/0.2.4",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/9853928",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/0.2.4"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "Added `dense` grid cluster implementation",
        "dateCreated": "2018-02-26T10:07:30Z",
        "datePublished": "2018-02-26T10:08:28Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/0.2.3",
        "name": "0.2.3",
        "tag_name": "0.2.3",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/0.2.3",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/9831859",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/0.2.3"
      },
      {
        "authorType": "User",
        "author_name": "rusty1s",
        "body": "",
        "dateCreated": "2018-02-06T12:58:47Z",
        "datePublished": "2018-02-06T12:59:24Z",
        "html_url": "https://github.com/rusty1s/pytorch_cluster/releases/tag/0.1.1",
        "name": "0.1.1",
        "tag_name": "0.1.1",
        "tarball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/tarball/0.1.1",
        "url": "https://api.github.com/repos/rusty1s/pytorch_cluster/releases/9552641",
        "zipball_url": "https://api.github.com/repos/rusty1s/pytorch_cluster/zipball/0.1.1"
      }
    ],
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython setup.py test\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 456,
      "date": "Wed, 29 Dec 2021 20:09:37 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "geometric-deep-learning",
      "graph-neural-networks",
      "cluster-algorithms"
    ],
    "technique": "GitHub API"
  }
}