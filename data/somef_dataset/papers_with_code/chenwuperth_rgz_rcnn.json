{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The initial codebase was built on the awesome [Faster-RCNN_TF](https://github.com/smallcorgi/Faster-RCNN_TF) project.\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.02025"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you benefit from this code, please cite our [paper](https://academic.oup.com/mnras/article/482/1/1211/5142869):\n\n```\n@article{doi:10.1093/mnras/sty2646,\nauthor = {Wu, Chen and Wong, Oiwei Ivy and Rudnick, Lawrence and Shabala, Stanislav S and Alger, Matthew J and Banfield, Julie K and Ong, Cheng Soon and White, Sarah V and Garon, Avery F and Norris, Ray P and Andernach, Heinz and Tate, Jean and Lukic, Vesna and Tang, Hongming and Schawinski, Kevin and Diakogiannis, Foivos I},\ntitle = {Radio Galaxy Zoo: ClaRAN \u2013 a deep learning classifier for radio morphologies},\njournal = {Monthly Notices of the Royal Astronomical Society},\nvolume = {482},\nnumber = {1},\npages = {1211-1230},\nyear = {2019},\ndoi = {10.1093/mnras/sty2646},\nURL = {http://dx.doi.org/10.1093/mnras/sty2646}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{doi:10.1093/mnras/sty2646,\nauthor = {Wu, Chen and Wong, Oiwei Ivy and Rudnick, Lawrence and Shabala, Stanislav S and Alger, Matthew J and Banfield, Julie K and Ong, Cheng Soon and White, Sarah V and Garon, Avery F and Norris, Ray P and Andernach, Heinz and Tate, Jean and Lukic, Vesna and Tang, Hongming and Schawinski, Kevin and Diakogiannis, Foivos I},\ntitle = {Radio Galaxy Zoo: ClaRAN \u2013 a deep learning classifier for radio morphologies},\njournal = {Monthly Notices of the Royal Astronomical Society},\nvolume = {482},\nnumber = {1},\npages = {1211-1230},\nyear = {2019},\ndoi = {10.1093/mnras/sty2646},\nURL = {http://dx.doi.org/10.1093/mnras/sty2646}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chenwuperth/rgz_rcnn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-03-11T03:37:02Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-25T00:34:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9381335654943147,
        0.9941889381110888,
        0.9963404450821586
      ],
      "excerpt": "Radio Galaxy Zoo: ClaRAN - A Deep Learning Classifier for Radio Morphologies \nClaRAN - Classifying Radio sources Automatically with Neural networks - is a proof-of-concept radio source morphology classifier based upon the Faster Region-based Convolutional Neutral Network (Faster R-CNN). ClaRAN is the first publicly available radio source morphology classifier that is capable of associating discrete and extended components of radio sources in an automated fashion. ClaRAN demonstrates the feasibility of applying deep learning methods for cross-matching complex radio sources of multiple components with infrared maps. The promising results from ClaRAN have implications for the further development of efficient cross-wavelength source identification, matching, and morphology classifications for future radio surveys. \nClaRAN replaces the original RoI cropping layer with the Spatial Transformer Network (STN) pooling to support a fully end-to-end training pipeline. An unexpected benefit of this is that the code also runs on laptops that may not have GPUs (with a much longer latency  of course --- e.g. 6 seconds compared to 100s of milliseconds per image). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9478855545205929
      ],
      "excerpt": "Each detected box denotes an identified radio source, and its morphology is succinctly labelled as X C_Y P, where X and Y denotes the number of radio components and the number of radio peaks respectively. Each morphology label is also associated with a score between 0 and 1, indicating the probability of a morphology class being present. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ClaRAN: A deep learning classifier for radio morphologies",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chenwuperth/rgz_rcnn/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**Run:**\n\n`cd experiments/scripts`\n\n`sbatch example_train_slurm.sh` \n\nYou will need to change resources, paths, and module names based on the configuration of your own cluster.\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Tue, 28 Dec 2021 11:29:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chenwuperth/rgz_rcnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "chenwuperth/rgz_rcnn",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/example_test_slurm.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/example_test_cpu.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/example_train_slurm_pleiades.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/example_train_slurm.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_70k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_40k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_60k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_80k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_50k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_20k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_80k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_30k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/loss_pleiades.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_70k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_50k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_70k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_80k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_50k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_40k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_30k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_60k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_10k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_10k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_10k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D1_60k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_20k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D3_30k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_20k.sh",
      "https://raw.githubusercontent.com/chenwuperth/rgz_rcnn/master/experiments/scripts/plots/loss/slurm_script/D4_40k.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Clone this repository: \n\n  `git clone https://github.com/chenwuperth/rgz_rcnn.git`\n\n* Compile: \n\n  `cd lib`\n\n  `make`\n\nThis should compile a bunch of [Cython](https://cython.org/)/ C code (for bounding box calculation), and will produce the dynamic libraries under both CPUs and GPUs (if available).\n\n* Download RGZ Data: \n\n  `cd tools` \n\n  `python download_data.py` \n\nThis will download data and RGZ model for training, testing, and demo.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9223334315953018
      ],
      "excerpt": "cd tools \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.964610849308957,
        0.9465718491881494
      ],
      "excerpt": "cd experiments/scripts  \nbash example_test_cpu.sh   \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9434760814195924,
        0.8454329619363882,
        0.8890818307099057
      ],
      "excerpt": "python demo.py --radio ../data/rgzdemo/FIRSTJ011349.0+065025.fits --ir ../data/rgzdemo/FIRSTJ011349.0+065025_infrared.png  \nSome examples of demo output are shown below: \n<img src=\"demo_result.png\" width=\"800\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chenwuperth/rgz_rcnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Cuda",
      "C++",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Chen Wu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ClaRAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "rgz_rcnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "chenwuperth",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chenwuperth/rgz_rcnn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code requires [Tensorflow \u2265 1.0 but < 2.0](https://www.tensorflow.org/install/), python 2.7 as well as the following python libraries:\n\n* matplotlib\n* numpy\n* opencv-python\n* scipy\n* cython\n* easydict\n* astropy\n* Pillow\n* pyyaml\n\n**Install Modules:** \n\n`pip install -U pip`\n\n`pip install -r requirements.txt`\n\nIt is **highly recommended** to setup a standalone [python virtual environment](https://pypi.python.org/pypi/virtualenv) to install these modules and run the code.\n\nThe code requires at least 3 GB of disk space (to store images and pre-trained models) and 3GB of RAM during training.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 36,
      "date": "Tue, 28 Dec 2021 11:29:57 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "radio-sources",
      "radio-morphologies",
      "machine-learning",
      "morphology",
      "deep-learning",
      "computer-vision",
      "faster-rcnn"
    ],
    "technique": "GitHub API"
  }
}