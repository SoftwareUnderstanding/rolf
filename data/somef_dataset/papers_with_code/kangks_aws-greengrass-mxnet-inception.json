{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.00567\n\n## Prerequisite\n\n* Raspberry Pi 3 Model B+ set up and configured for use with AWS IoT Greengrass\n* Raspberry Pi Camera Module V2 - 8 Megapixel, 1080p\n\n(Details in https://docs.aws.amazon.com/greengrass/latest/developerguide/ml-console.html#ml-inference-prerequisites"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  * https://github.com/apache/incubator-mxnet/tree/master/example/image-classification",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412,
        0.9581122666042813
      ],
      "excerpt": "Goto https://console.aws.amazon.com/lambda/home \nChoose Author from scratch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283268420643993
      ],
      "excerpt": "Select Add machine learning resource \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "Goto https://console.aws.amazon.com/iot/home?#/greengrass/grouphub \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8636085892592171
      ],
      "excerpt": "If successfully updated, you should see the response \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8953967942217171,
        0.8776945011855519,
        0.9918524864713401
      ],
      "excerpt": "[2019-05-10T19:08:06.728-07:00][INFO]-lambda_runtime.py:114,Running [arn:aws:lambda:us-east-1:159000643575:function:greengrassImageClassification:3] \n[2019-05-10T19:08:06.73-07:00][INFO]-ipc_client.py:170,Getting work for function [arn:aws:lambda:us-east-1:159000643575:function:greengrassImageClassification:3] from http://localhost:8000/2016-11-01/functions/arn:aws:lambda:us-east-1:159000643575:function:greengrassImageClassification:3/work \n[2019-05-10T19:08:15.31-07:00][INFO]-[(0.1262314, 'n04372370 switch, electric switch, electrical switch'), (0.06892826, 'n03929660 pick, plectrum, plectron'), (0.05506966, 'n04254120 soap dispenser'), (0.044870526, 'n04153751 screw'), (0.033377603, 'n15075141 toilet tissue, toilet paper, bathroom tissue')] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kangks/aws-greengrass-mxnet-inception",
    "technique": "GitHub API"
  },
  "contributor": [
    {
      "confidence": [
        1
      ],
      "excerpt": "These steps is to demonstrate the offline capability of ML@Edge of the AWS GreenGrass. You can run the script in the local computer that is in the same network as the Raspberry Pi, to simulate a local device that connects to the GreenGrass core locally.\n\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-28T06:10:10Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-02T17:42:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is an example of running Lambda on GreenGrass with MXNet pretrained model Inception v3 for image classification\n\nDetails on Inception v3 can be found in https://arxiv.org/abs/1512.00567\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8252647744067382,
        0.9713986899999889
      ],
      "excerpt": "ML@Edge Image Classifications example using MXNet pretrained model with GreenGrass Core running on a Rasperry Pi \nCreate a plain text file wpa_supplicant.conf in the root of the sd card with contents \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8684508468350739
      ],
      "excerpt": "Select Create Group \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8243487758964327
      ],
      "excerpt": "Enter a Group Name, such as local_image-greengrass-group, and select Next \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9217083171780143
      ],
      "excerpt": "In the screen Run a scripted easy Group creation, select Create Group and Core \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8264685803632631
      ],
      "excerpt": "We will be installing the Greengrass Core software using Snap so we can skip that step and choose Finish \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617980554470226
      ],
      "excerpt": "Choose the relevant GreenGrass group  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.837407794368414
      ],
      "excerpt": "In the Add a Lambda to your Greengrass Group, choose Use existing Lambda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617980554470226
      ],
      "excerpt": "Choose the relevant GreenGrass group  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617980554470226
      ],
      "excerpt": "Choose the relevant GreenGrass group  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8859861150851422,
        0.8880981813424523
      ],
      "excerpt": "In the Local, select Add Local \nCreate a local resource with the following parameters: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.967719711619894
      ],
      "excerpt": "Group owner file access permission: Automatically add OS group permissions of the Linux group that owns the resource \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8562506258669682
      ],
      "excerpt": "Create another local resource with the following parameters: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.967719711619894
      ],
      "excerpt": "Group owner file access permission: Automatically add OS group permissions of the Linux group that owns the resource \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617980554470226
      ],
      "excerpt": "Choose the relevant GreenGrass group  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9161307638735845
      ],
      "excerpt": "In the Local, select Add Machine Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609654900616399
      ],
      "excerpt": "Create a machine learning resource with the following parameters: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8331991148393798
      ],
      "excerpt": "Model from S3: (Upload the  inception_bn.zip) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617980554470226
      ],
      "excerpt": "Choose the relevant GreenGrass group  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8690881603234852
      ],
      "excerpt": "In the Group role, choose Add role, choose an IAM role that allows principal greengrass.amazonaws.com to assume, such as Greengrass_ServiceRole \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8826072494080082
      ],
      "excerpt": "In Grant permission to access other services, choose Grant permission \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8648103117667298
      ],
      "excerpt": "Now that the alias mlRpi is pointing to the version, you can proceed to deploy the GreenGrass \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9501396307324186
      ],
      "excerpt": "For Option 2, a display manager is required for the VNC server. lxsession is one of the lightweight display manager. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956224310771108
      ],
      "excerpt": "However, PiCamera display the image in native renderer, therefore, direct capture mode of the RealVNC need to be enabled in order to view the image over VNC \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.819604726192159
      ],
      "excerpt": "From the top right of the VNC Connect windows, click on the expanded menu -> options \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9683536802447423
      ],
      "excerpt": "In this section, we will simulate a local GGAD (Greengrass Aware Devices) that subscribe to the prediction messages from the Lambda running on the GGC, and simulate the local inference when there is no internet connectivity. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9320138622942274
      ],
      "excerpt": "From the left hand side of menu, choose GreenGrass -> Groups, the correct GreenGrass Group, Devices->Add Device \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9810706751001248
      ],
      "excerpt": "Login to the Raspberry Pi \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9057384649677617
      ],
      "excerpt": "4. Check that the internet route is working as expected \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9031676000242514
      ],
      "excerpt": "PING aMaZoNaWs.com (207.171.166.22) 56(84) bytes of data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8997767738664617
      ],
      "excerpt": "connect: Network is unreachable \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ML@Edge Image Classifications example using MXNet pretrained model with GreenGrass Core running on a Rasperry Pi",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kangks/aws-greengrass-mxnet-inception/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 05:13:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kangks/aws-greengrass-mxnet-inception/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kangks/aws-greengrass-mxnet-inception",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kangks/aws-greengrass-mxnet-inception/master/cfn/GreengrassConfig.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. From your local computer, copy the resources downloaded in [Setting up Greengrass group and core](#Setting-up-Greengrass-group-and-core) to the Raspberry Pi, e.g. `$ scp <uid>-setup.tar.gz pi@<raspberry pi>:~/` and `$ scp AmazonRootCA1.pem pi@<raspberry pi>:~/`\n2. SSH into the Raspberry Pi, follow the steps in https://docs.aws.amazon.com/greengrass/latest/developerguide/module1.html#setup-filter.rpi to prepare the Raspberry Pi for GreenGrass\n3. Follow the steps in https://docs.aws.amazon.com/greengrass/latest/developerguide/what-is-gg.html#gg-downloads to install the GreenGrass core software\n12. Copy the certificates and config of the Greengrass core into the greengrass folder `$ sudo tar zxvf <uid>-setup.tar.gz -C /greengrass/ && sudo cp ~/AmazonRootCA1.pem /greengrass/certs/root.ca.pem`\n13. Making sure the resources are in the correct folders, e.g. `$ ls /greengrass/certs/` and you should see your cert, private key, public key and Amazon CA certs in the folder\n14. Starts the Greengrass software `$ sudo /greengrass/ggc/core/greengrassd start` \n15. If the configuration is in place, you should see the GreenGrass core running message, such as\n```\n$ sudo /greengrass/ggc/core/greengrassd start\nSetting up greengrass daemon\nValidating hardlink/softlink protection\nWaiting for up to 1m10s for Daemon to start\n\nGreengrass successfully started with PID: <PID>\n```\n16. You should also be able to see that the GreenGrass Core software successfully subscribed to the GreenGrass MQTT Topics\n```\n$ sudo tail /greengrass/ggc/var/log/system/runtime.log \n[2019-05-10T11:01:02.078-07:00][DEBUG]-Entering OnConnect.\t{\"clientId\": \"local_image-greengrass-group_Core\"}\n[2019-05-10T11:01:02.078-07:00][INFO]-MQTT connection connected. Start subscribing.\t{\"clientId\": \"local_image-greengrass-group_Core\"}\n[2019-05-10T11:01:02.078-07:00][INFO]-Deployment agent connected to cloud.\n[2019-05-10T11:01:02.078-07:00][DEBUG]-Subscribe retry configuration.\t{\"IntervalInSeconds\": 60}\n[2019-05-10T11:01:02.078-07:00][INFO]-Start subscribing.\t{\"numOfTopics\": 2, \"clientId\": \"local_image-greengrass-group_Core\"}\n[2019-05-10T11:01:02.079-07:00][INFO]-Trying to subscribe to topic $aws/things/local_image-greengrass-group_Core-gda/shadow/update/delta\n[2019-05-10T11:01:02.194-07:00][DEBUG]-Subscribed to topic.\t{\"topic\": \"$aws/things/local_image-greengrass-group_Core-gda/shadow/update/delta\"}\n[2019-05-10T11:01:02.194-07:00][INFO]-Trying to subscribe to topic $aws/things/local_image-greengrass-group_Core-gda/shadow/get/accepted\n[2019-05-10T11:01:02.309-07:00][DEBUG]-Subscribed to topic.\t{\"topic\": \"$aws/things/local_image-greengrass-group_Core-gda/shadow/get/accepted\"}\n[2019-05-10T11:01:02.417-07:00][INFO]-All topics subscribed.\t{\"clientId\": \"local_image-greengrass-group_Core\"}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8727240655736294
      ],
      "excerpt": "In the screen Connect your Core device, choose Download these resources as a tar.gz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8246922222467433,
        0.9892593118468246
      ],
      "excerpt": "We will be installing the Greengrass Core software using Snap so we can skip that step and choose Finish \nIn the Raspberry Pi, install the MXNet Dependencies following the steps in https://docs.aws.amazon.com/greengrass/latest/developerguide/ml-console.html#install-mxnet#install-mxnet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "Runtime: Python 2.7 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "Role name: greenGrassLambdaRole \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.870052294970168
      ],
      "excerpt": "From the Version: 1, choose 1 in the Versions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924935138000915
      ],
      "excerpt": "Enter a name for the version alias, such as mlRpi, and choose 1 in the Version \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "Resource name: videoCoreSharedMemory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "Resource name: videoCoreInterface \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "Resource name: Inception \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9497111962039007,
        0.8594085703879936
      ],
      "excerpt": "Should you need to deploy a new version of Lambda function, you need to update the alias to the version using command aws lambda update-alias --function-name greengrassImageClassification --name mlRpi --function-version 2 \nIf successfully updated, you should see the response \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "    \"Name\": \"mlRpi\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9374339130674797
      ],
      "excerpt": "Now that the alias mlRpi is pointing to the version, you can proceed to deploy the GreenGrass \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879122439911962
      ],
      "excerpt": "Option 2: Install a VNC server on the Raspberry Pi \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9874255094428409
      ],
      "excerpt": "1. sudo apt-get install realvnc-vnc-server realvnc-vnc-viewer lxsession \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8524185182473155
      ],
      "excerpt": "6. Your route table should now left with local routes \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.869462072025036
      ],
      "excerpt": "Function name: greengrassImageClassification \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "Role name: greenGrassLambdaRole \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8839908142046332
      ],
      "excerpt": "In the Function code, upload this repository as a zip file. You need these 2 files greengrass_main.py, load_model.py and the folder greengrasssdk/ in the zip file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.812330922679091
      ],
      "excerpt": "Timeout: 15 Seconds \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "Resource name: videoCoreSharedMemory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "Resource name: videoCoreInterface \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8005901018149209,
        0.8081731484326453
      ],
      "excerpt": "Download http://data.mxnet.io/models/imagenet/inception-bn/Inception-BN-0126.params and rename to Inception-BN-0000.params \nzip these 3 files as inception_bn.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8175121669365422
      ],
      "excerpt": "Model from S3: (Upload the  inception_bn.zip) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "    \"Name\": \"mlRpi\", \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kangks/aws-greengrass-mxnet-inception/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ML@Edge with AWS GreenGrass Core",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "aws-greengrass-mxnet-inception",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kangks",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kangks/aws-greengrass-mxnet-inception/blob/master/README.MD",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Raspberry Pi 3 Model B+ set up and configured for use with AWS IoT Greengrass\n* Raspberry Pi Camera Module V2 - 8 Megapixel, 1080p\n\n(Details in https://docs.aws.amazon.com/greengrass/latest/developerguide/ml-console.html#ml-inference-prerequisites)\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Git clone or download this repository to the Raspberry Pi\n2. Install the python 2.7 dependencies `sudo apt-get install -y python-dev python-setuptools python-pip python-picamera`\n3. We are still using python 2.7, so we have to install the opencv python library using `sudo apt-get install python-opencv`\n2. Runs the local main python file\n\n```\n$ python2.7 local_main.py\n```\n\nIf configuration is proper, a prediction should be shown, such as\n\n```\n[(0.18657419, 'n02676566 acoustic guitar'), (0.14744462, 'n03929660 pick, plectrum, plectron'), (0.1250492, 'n02787622 banjo'), (0.049499936, 'n03271574 electric fan, blower'), (0.038708802, 'n03476684 hair slide')]\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Create a virtualenv, `$ virtualenv local`\n2. Source the virtualenv, `$ source local/bin/activate`\n3. Pull in all the requirements, `$ pip install -r requirements.txt`\n4. Runs the Python file, `$ python2.7 subscriber.py`\n5. If it runs successfully, you should see the prediction messages\n\n```\n2019-05-05 11:19:46,792 - AWSIoTPythonSDK.core - INFO - connecting to <GreenGrass Core local IP>:8883\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - MqttCore initialized\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Client id: ggcLocalDevice\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Protocol version: MQTTv3.1.1\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Authentication type: TLSv1.2 certificate based Mutual Auth.\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core - INFO - Connecting with caPath: ./groupCerts/<GreenGrassn Group CA Cert>.crt, private: ./certs/private.key, certPath: ./certs/cert.pem\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Configuring certificates...\n2019-05-05 11:19:46,793 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Configuring endpoint...\n2019-05-05 11:19:46,794 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Performing sync connect...\n2019-05-05 11:19:46,794 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Performing async connect...\n2019-05-05 11:19:46,794 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Keep-alive: 600.000000 sec\n2019-05-05 11:19:47,017 - AWSIoTPythonSDK.core.protocol.mqtt_core - INFO - Performing sync subscribe...\n2019-05-05 11:19:47,035 - AWSIoTPythonSDK.core - INFO - Connected to host <GreenGrass Core local IP>:8883\nReceived a new message: \nNew Prediction: [(0.5641716, 'n04099969 rocking chair, rocker'), (0.20946382, 'n03065424 coil, spiral, volute, whorl, helix'), (0.052156523, 'n03271574 electric fan, blower'), (0.023835631, 'n03201208 dining table, board'), (0.017949697, 'n04009552 projector')]\nfrom topic: \nhello/world\n--------------\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 05:13:49 GMT"
    },
    "technique": "GitHub API"
  }
}