{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434\n[2] https://github.com/soumith/ganhacks\n\nCredit to Udacity for the notebook layout, cover photo, unit tests, and sketches of Discriminator and Generator networks."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] https://arxiv.org/abs/1511.06434\n[2] https://github.com/soumith/ganhacks\n\nCredit to Udacity for the notebook layout, cover photo, unit tests, and sketches of Discriminator and Generator networks.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8634844918850189
      ],
      "excerpt": "10,177 number of identities, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9034997711112147
      ],
      "excerpt": "The dataset can be employed as the training and test sets for the following computer vision tasks: face attribute recognition, face detection, landmark (or facial part) localization, and face editing & synthesis. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NadimKawwa/DCGAN_faces",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-04T21:10:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-05T04:26:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9094654140559632
      ],
      "excerpt": "In this repository we will attempt to generate realistic faces from the CelebA Dataset using deep convolutional generative adversarial networks (DCGANs) per Radford et al [1]. The code is implemtend in python 3.x \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9311230586112104
      ],
      "excerpt": "It is recommended to have GPU access to optimize training time. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9828612096733096
      ],
      "excerpt": "We then define the discriminator: this is a convolutional classifier, only without any maxpooling layers. To deal with this complex data, it's suggested to use a deep network with normalization such that: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9588094156530468,
        0.9508841988379655
      ],
      "excerpt": "The generator should upsample an input and generate a new image of the same size as our training data 32x32x3. This should be mostly transpose convolutional layers with normalization applied to the outputs. \n- The inputs to the generator are vectors of some length z_size \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9775287398297783
      ],
      "excerpt": "To help the models converge, we initialize the weights of the convolutional and linear layers in the model. We define a function such that: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9052638393158964
      ],
      "excerpt": "- Initialize the weights to a normal distribution, centered around 0, with a standard deviation of 0.02. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971080389747354
      ],
      "excerpt": "We also need to calculate the losses for both types of adversarial networks. For the discriminator, the total loss is the sum of the losses for real and fake images: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9289197593103548
      ],
      "excerpt": "The generator loss will look similar only with flipped labels. The generator's goal is to get the discriminator to think its generated images are real. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185695490848481
      ],
      "excerpt": "Our initial data was a dataset of real celebrity imges: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Define and train a DCGAN on a dataset of faces",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NadimKawwa/DCGAN_faces/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 23:33:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/NadimKawwa/DCGAN_faces/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "NadimKawwa/DCGAN_faces",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/NadimKawwa/DCGAN_faces/master/dlnd_face_generation.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/NadimKawwa/DCGAN_faces/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "HTML",
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Nadim Kawwa\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face Generation With Deep Convolutional Generative Adversarial Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN_faces",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "NadimKawwa",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NadimKawwa/DCGAN_faces/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 23:33:39 GMT"
    },
    "technique": "GitHub API"
  }
}