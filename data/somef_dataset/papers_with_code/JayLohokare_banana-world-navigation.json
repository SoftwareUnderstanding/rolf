{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[image1]: https://user-images.githubusercontent.com/10624937/42135619-d90f2f28-7d12-11e8-8823-82b970a54d7e.gif \"Trained Agent\"\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8656070203791273
      ],
      "excerpt": "Prioritized Experience Replay - https://github.com/rlcode/per <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9986251871901551
      ],
      "excerpt": "Rainbow paper (DQN paper methods comparison) - https://arxiv.org/pdf/1710.02298.pdf <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JayLohokare/banana-world-navigation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-13T14:55:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-16T17:53:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For this project, you will train an agent to navigate (and collect bananas!) in a large, square world.  \n\n![Trained Agent][image1]\n\nA reward of +1 is provided for collecting a yellow banana, and a reward of -1 is provided for collecting a blue banana.  Thus, the goal of your agent is to collect as many yellow bananas as possible while avoiding blue bananas.  \n\nThe state space has 37 dimensions and contains the agent's velocity, along with ray-based perception of objects around agent's forward direction.  Given this information, the agent has to learn how to best select actions.  Four discrete actions are available, corresponding to:\n- **`0`** - move forward.\n- **`1`** - move backward.\n- **`2`** - turn left.\n- **`3`** - turn right.\n\nThe task is episodic, and in order to solve the environment, your agent must get an average score of +13 over 100 consecutive episodes.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9010588327670369,
        0.930204065926412,
        0.9017215789296856
      ],
      "excerpt": "Follow the instructions in Navigation.ipynb to get started with training your own agent! \nAfter you have successfully completed the project, if you're looking for an additional challenge, you have come to the right place!  In the project, your agent learned from information such as its velocity, along with ray-based perception of objects around its forward direction.  A more challenging task would be to learn directly from pixels! \nTo solve this harder task, you'll need to download a new Unity environment.  This environment is almost identical to the project environment, where the only difference is that the state is an 84 x 84 RGB image, corresponding to the agent's first-person view. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8971585135476988
      ],
      "excerpt": "Then, place the file in the p1_navigation/ folder in the DRLND GitHub repository, and unzip (or decompress) the file.  Next, open Navigation_Pixels.ipynb and follow the instructions to learn how to use the Python API to control the agent. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481719708391673
      ],
      "excerpt": "The implementation uses Fixed Q values (2 Neural networks) and Replay buffer methods explained in Deep Q Learning paper.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283945204470141,
        0.8489217702290929,
        0.9833910711437046
      ],
      "excerpt": "- The model weights are saved in checkpoint.pth file (When average score is >14) \n- The training runs for 2000 epochs by default, with 1000 max number of steps per epoch \n- There is decaying epsilon to achieve gradually decreasing randomness in actions taken \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Deep reinforcement learning banana world navigation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JayLohokare/banana-world-navigation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 08:10:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JayLohokare/banana-world-navigation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JayLohokare/banana-world-navigation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JayLohokare/banana-world-navigation/master/Navigation.ipynb",
      "https://raw.githubusercontent.com/JayLohokare/banana-world-navigation/master/python/Basics.ipynb",
      "https://raw.githubusercontent.com/JayLohokare/banana-world-navigation/master/.ipynb_checkpoints/Navigation-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "ML-Agent - https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Installation-Windows.md\n\nAnaconda/TensorflowGPU - https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Installation-Windows.md\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9647323711731505
      ],
      "excerpt": "You need only select the environment that matches your operating system: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9542222847622334
      ],
      "excerpt": "(For AWS) If you'd like to train the agent on AWS, you must follow the instructions to set up X Server, and then download the environment for the Linux operating system above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "Prioritized Experience Replay - https://github.com/rlcode/per <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9213716497003656
      ],
      "excerpt": "1. Train-Test  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123966569018857,
        0.8831751246093544
      ],
      "excerpt": "The Train-test code is in the Navigation.ipynb notebook \nClass declarations are in model.py and dqn_agent.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8311828144954886
      ],
      "excerpt": "ReplayBuffer - Buffer to store State-Action-Reward-NextState tuples to sample training data from \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8329939611592913
      ],
      "excerpt": "- The test phase loads the latest model from file system and getting score for the tests performed. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JayLohokare/banana-world-navigation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "ASP",
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "(Image References)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "banana-world-navigation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JayLohokare",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JayLohokare/banana-world-navigation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 08:10:11 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "banana-world",
      "deep-reinforcement-learning",
      "deep-q-network"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Download the environment from one of the links below.  You need only select the environment that matches your operating system:\n    - Linux: [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Linux.zip)\n    - Mac OSX: [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana.app.zip)\n    - Windows (32-bit): [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Windows_x86.zip)\n    - Windows (64-bit): [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Windows_x86_64.zip)\n    \n    (_For Windows users_) Check out [this link](https://support.microsoft.com/en-us/help/827218/how-to-determine-whether-a-computer-is-running-a-32-bit-version-or-64) if you need help with determining if your computer is running a 32-bit version or 64-bit version of the Windows operating system.\n\n    (_For AWS_) If you'd like to train the agent on AWS (and have not [enabled a virtual screen](https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-on-Amazon-Web-Service.md)), then please use [this link](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Linux_NoVis.zip) to obtain the environment.\n\n2. Place the file in the DRLND GitHub repository, in the `p1_navigation/` folder, and unzip (or decompress) the file. \n\n",
      "technique": "Header extraction"
    }
  ]
}