{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1804.02815",
      "https://arxiv.org/abs/1610.07629",
      "https://arxiv.org/abs/1703.06868",
      "https://arxiv.org/abs/1705.06830",
      "https://arxiv.org/abs/1707.00683",
      "https://arxiv.org/abs/1707.03017",
      "https://arxiv.org/abs/1709.07871"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{wang2018sftgan,\n    author = {Wang, Xintao and Yu, Ke and Dong, Chao and Loy, Chen Change},\n    title = {Recovering realistic texture in image super-resolution by deep spatial feature transform},\n    booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\n    month = {June},\n    year = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9957587253572504
      ],
      "excerpt": "By Xintao Wang, Ke Yu, Chao Dong, Chen Change Loy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999912759937549,
        0.8178942197658744,
        0.9999999988383408,
        0.8955886365383559,
        0.9959021299438506
      ],
      "excerpt": "    author = {Wang, Xintao and Yu, Ke and Dong, Chao and Loy, Chen Change}, \n    title = {Recovering realistic texture in image super-resolution by deep spatial feature transform}, \n    booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)}, \n    month = {June}, \n    year = {2018} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9994062056769146,
        0.9999999997804423
      ],
      "excerpt": "Spatial feature modulation is motivated by Conditional Batch Normalization (e.g., image style transfer [[1](https://arxiv.org/abs/1610.07629), [2](https://arxiv.org/abs/1703.06868), [ \n3](https://arxiv.org/abs/1705.06830)] and visual reasoning [[1](https://arxiv.org/abs/1707.00683), [2](https://arxiv.org/abs/1707.03017)) ] and also feature modulation [[FiLM](https://arxiv.org/abs/1709.07871)]. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xinntao/SFTGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-10T02:07:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T08:41:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9193090415169312,
        0.9529821237880022
      ],
      "excerpt": "This repo only provides simple testing codes - original torch version used in the paper and a pytorch version. \nFor full training and testing codes, please refer to  BasicSR. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8250705164731039
      ],
      "excerpt": "Spatial Feature Modulation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9926027121800053
      ],
      "excerpt": "Note that the SFTGAN model is limited to some outdoor scenes. It is an unsatisfying limitation that we need to relax in future. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8658684515786758
      ],
      "excerpt": "Download pretrained models from Google Drive or Baidu Drive. Please see model list for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8730308012877174
      ],
      "excerpt": "The segmentation results are then in ./data with _segprob, _colorimg, _byteimg suffix. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9504168827039178,
        0.8246954376607962,
        0.9082511372565436,
        0.851964410895294
      ],
      "excerpt": "The results are in then in ./data with _result suffix. \nSFT - Spatial Feature Transform (Modulation). \nA Spatial Feature Transform (SFT) layer has been proposed to efficiently incorporate the categorical conditions into a CNN network. \nThere is a fantastic blog explaining the widely-used feature modulation operation distill - Feature-wise transformations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9003940269808276,
        0.9723723908792187
      ],
      "excerpt": "(The connection with dynamic filter / attention models / spatial transform network) \nOur SFT layer is motived by Conditional Normalization, which is used in ... \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513133644746997
      ],
      "excerpt": "We have explored the use of semantic segmentation maps as categorical prior for SR. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "CVPR18 - Recovering Realistic Texture in Image Super-resolution by Deep Spatial Feature Transform",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xinntao/SFTGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 93,
      "date": "Sat, 25 Dec 2021 15:54:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xinntao/SFTGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "xinntao/SFTGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8990090613956047
      ],
      "excerpt": "It provides Torch and PyTorch versions. Recommend the PyTorch version. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030868825229865,
        0.9879863063452118,
        0.9906248903846466
      ],
      "excerpt": "Clone this github repo.  \ngit clone https://github.com/xinntao/SFTGAN \ncd SFTGAN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd pytorch_test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd torch_test \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9117273529892762
      ],
      "excerpt": "Quick Test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8987332471507421
      ],
      "excerpt": "  <img src=\"figures/qualitative_cmp.jpg\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8732589383792716
      ],
      "excerpt": "There are two sample images in the ./data/samples folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9189800796872589
      ],
      "excerpt": "First run segmentation test. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python test_segmentation.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8984922607331682
      ],
      "excerpt": "Run sftgan test. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python test_sftgan.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8827415601783382
      ],
      "excerpt": "  <img height=\"280\" src=\"figures/network_structure.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9111102954876288
      ],
      "excerpt": "  <img height=\"230\" src=\"figures/semantic_category_prior.jpg\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627643558624205
      ],
      "excerpt": "  <img src=\"figures/different_priors.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8987332471507421
      ],
      "excerpt": "  <img src=\"figures/OST.jpg\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.861996375101818,
        0.8361328833141778
      ],
      "excerpt": "OST (Outdoor Scenes),OST Training,7 categories images with rich textures \nOST300  300 test images of outdoor scences \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xinntao/SFTGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Lua",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SFTGAN [[Paper]](https://arxiv.org/abs/1804.02815) [[BasicSR]](https://github.com/xinntao/BasicSR)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SFTGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "xinntao",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xinntao/SFTGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3\n- [PyTorch >= 0.4.0](https://pytorch.org/)\n- Python packages:  `pip install numpy opencv-python`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Torch](http://torch.ch/docs/getting-started.html)\n- Other torch dependencies, e.g. `nngraph`, `paths`, `image` (install them by `luarocks install xxx`)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 462,
      "date": "Sat, 25 Dec 2021 15:54:49 GMT"
    },
    "technique": "GitHub API"
  }
}