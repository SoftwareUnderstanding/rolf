{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1508.06576",
      "https://arxiv.org/abs/1607.08022"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cryu854/FastStyle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-04T07:27:02Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-17T15:24:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9558567788118646,
        0.9700500910400539
      ],
      "excerpt": "This is an implementation of Fast-Style-Transfer on Python 3 and Tensorflow 2.  \nThe neural network is a combination of Gatys' A Neural Algorithm of Artistic Style, Johnson's Perceptual Losses for Real-Time Style Transfer and Super-Resolution, and Ulyanov's Instance Normalization. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9792753859680928,
        0.986073900294082
      ],
      "excerpt": "The feed-forward network is roughly the same as described in Johnson, except that batch normalization is replaced with Ulyanov's instance normalization, and the scaling/offset of the output tanh layer is slightly different (for better convergence), also use Resize-convolution layer to replace the regular transposed convolution for better upsampling (to avoid checkerboard artifacts) \nThe loss network used in this implementation follows Logan Engstrom , which is similar to the one described in Gatys , using VGG19 instead of VGG16 and typically using \"shallower\" layers than in Johnson's implementation,  for larger scale style features in transformation (e.g. use relu1_1 rather than relu1_2). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8758193550176215
      ],
      "excerpt": "Training takes 5~6 hours on a GTX 1060 3GB (when batch size is 2). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Fast-Style-Transfer in TensorFlow 2  :art:",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cryu854/FastStyle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Sun, 26 Dec 2021 10:41:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cryu854/FastStyle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cryu854/FastStyle",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/cryu854/FastStyle/master/setup.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9830107913298975
      ],
      "excerpt": "Before you run this, you should run setup.sh to download the dataset.  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9086865456686715
      ],
      "excerpt": "<img src = 'images/content/chicago.jpg' height=\"200px\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8391353153995499,
        0.8916391515674433,
        0.9364664398600588,
        0.9247891506803764
      ],
      "excerpt": "<a href = 'images/style/wave.jpg'><img src = 'images/thumbs/wave.jpg' height = '200px'></a> \n<img src = 'images/results/wave.jpg' height = '200px'> \n<img src = 'images/results/africa.jpg' height = '200px'> \n<a href = 'images/style/africa.jpg'><img src = 'images/thumbs/africa.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9247891506803764,
        0.9364664398600588,
        0.9364664398600588,
        0.9247891506803764
      ],
      "excerpt": "<a href = 'images/style/aquarelle.jpg'><img src = 'images/thumbs/aquarelle.jpg' height = '200px'></a> \n<img src = 'images/results/aquarelle.jpg' height = '200px'> \n<img src = 'images/results/shipwreck.jpg' height = '200px'> \n<a href = 'images/style/the_shipwreck_of_the_minotaur.jpg'><img src = 'images/thumbs/the_shipwreck_of_the_minotaur.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9247891506803764,
        0.9364664398600588,
        0.9364664398600588,
        0.9247891506803764
      ],
      "excerpt": "<a href = 'images/style/starry_night.jpg'><img src = 'images/thumbs/starry_night.jpg' height = '200px'></a> \n<img src = 'images/results/starry_night.jpg' height = '200px'> \n<img src = 'images/results/hampson.jpg' height = '200px'> \n<a href = 'images/style/hampson.jpg'><img src = 'images/thumbs/hampson.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9247891506803764,
        0.9364664398600588,
        0.9364664398600588,
        0.9247891506803764
      ],
      "excerpt": "<a href = 'images/style/chinese_style.jpg'><img src = 'images/thumbs/chinese_style.jpg' height = '200px'></a> \n<img src = 'images/results/chinese_style.jpg' height = '200px'> \n<img src = 'images/results/udnie.jpg' height = '200px'> \n<a href = 'images/style/udnie.jpg'><img src = 'images/thumbs/udnie.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8058127828353248
      ],
      "excerpt": "All the models were trained on the same default settings. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925619830435868,
        0.956243229936475
      ],
      "excerpt": "Example usage: \npython main.py train    \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925619830435868,
        0.9086850825057033
      ],
      "excerpt": "Example usage: \npython main.py evaluate    \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.869026575716914
      ],
      "excerpt": "  --result ./path/to/save/results/image.jpg \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cryu854/FastStyle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 cryu854\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Fast Style Transfer in TensorFlow 2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FastStyle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cryu854",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cryu854/FastStyle/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You will need the following to run the above:\n- TensorFlow >= 2.0\n- Python 3.7.5, Pillow 7.0.0, Numpy 1.18, Opencv 4.1.2\n- If you want to train (and don't want to wait too long):\n  - A decent GPU\n  - All the required NVIDIA software to run TF on a GPU (cuda, etc)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 29,
      "date": "Sun, 26 Dec 2021 10:41:42 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "neural-networks",
      "style-transfer",
      "tensorflow2",
      "deep-learning",
      "keras",
      "tensorflow"
    ],
    "technique": "GitHub API"
  }
}