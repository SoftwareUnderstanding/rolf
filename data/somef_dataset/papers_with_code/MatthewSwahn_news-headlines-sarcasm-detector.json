{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.04805"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MatthewSwahn/news-headlines-sarcasm-detector",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-11T23:04:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-21T15:11:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9876023837044393
      ],
      "excerpt": "This project is a solution to a Kaggle problem from 2018 (https://www.kaggle.com/rmisra/news-headlines-dataset-for-sarcasm-detection). The data is a collection of news headlines, some from the \"Huffington Post\" and the rest from satirical newspaper \"The Onion\". The goal of the Kaggle problem is to build a classifier that predicts if a given headline is sincere (IE, more similar to The Huffington Post) or if a headline is satire (IE, more like The Onion). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.986968804527699,
        0.9298028851966783
      ],
      "excerpt": "Bert is a language representation model that came out in 2018. Upon it's release, BERT was topping the leader boards on a number of NLP tasks and can be used for a variety of purposes. One of its more popular uses is for sentence classification! I treated each headline like it was a sentence and then applied a pretrained BERT model to produce word embeddings. Once I had word embeddings for each headline, I ran the BERT embeddings through a recurrent neural network (more specifically a RNN with a Gated Recurrent Unit aka GRU) and finally ran the final RNN hidden state through a linear layer to predict either sarcasm or sincerity. \nSome resources I used which helped me a lot on this project: \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MatthewSwahn/news-headlines-sarcasm-detector/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 21:17:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MatthewSwahn/news-headlines-sarcasm-detector/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MatthewSwahn/news-headlines-sarcasm-detector",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/MatthewSwahn/news-headlines-sarcasm-detector/master/2%20-%20Model%20Performance%20on%20test%20set.ipynb",
      "https://raw.githubusercontent.com/MatthewSwahn/news-headlines-sarcasm-detector/master/1%20-%20Sarcastic%20News%20Headline%20Classification%20with%20BERT%20Training.ipynb",
      "https://raw.githubusercontent.com/MatthewSwahn/news-headlines-sarcasm-detector/master/class%20BERT%20Training.ipynb",
      "https://raw.githubusercontent.com/MatthewSwahn/news-headlines-sarcasm-detector/master/Sagemaker%20BERT%20Training.ipynb",
      "https://raw.githubusercontent.com/MatthewSwahn/news-headlines-sarcasm-detector/master/.ipynb_checkpoints/2%20-%20Model%20Performance%20on%20test%20set-checkpoint.ipynb",
      "https://raw.githubusercontent.com/MatthewSwahn/news-headlines-sarcasm-detector/master/.ipynb_checkpoints/1%20-%20Sarcastic%20News%20Headline%20Classification%20with%20BERT%20Training-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MatthewSwahn/news-headlines-sarcasm-detector/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Matthew Swahn\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "news-headlines-sarcasm-detector",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "news-headlines-sarcasm-detector",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MatthewSwahn",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MatthewSwahn/news-headlines-sarcasm-detector/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "All of this is done in Python with PyTorch, Huggingface's Transformers package, and TorchText.\\\n1) PyTorch installation is hardware specific, check their website to get the best instructions: https://pytorch.org/ \n2) Install Transformers via pip: `pip install transformers`\n3) Install TorchText via pip: `pip install torchtext`\n\n \n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 21:17:19 GMT"
    },
    "technique": "GitHub API"
  }
}