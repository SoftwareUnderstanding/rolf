{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.04861",
      "https://arxiv.org/abs/1804.02767"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mvxxx/mimuw-hats",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-03T07:52:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-31T23:41:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The project provides a web app which allows users to post found hats as well as report their finds. <br> <br> The system automatically matches images and/or textual descriptions, notifying the owners of the lost items. There is the option to register their hats to be automatically matched if they are found. There is an element of gamification by means of awarding productive users with experience points as well as a very simple feed for viewing, bumping and reacting to posts about lost and found items. The project can also be modified to suit current market demand, for example handling face masks in addition to hats.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9900298383181894,
        0.9363896856733349,
        0.9800194789699508
      ],
      "excerpt": "The project is composed of three major parts: a responsive web client interface written in React, a REST API backend utilizing Express.js and Node.js, and Machine Learning infrastructure built with Keras in Python. \nThe frontend is based on React.js version 16. It is responsive and function both on mobile and desktop. \nThe backend is entirely REST-based, including authentication. All HTML rendering is done client-side in React. A SQLite relational database coupled with TypeORM is used for persistence. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9719061159141378
      ],
      "excerpt": "Authentication is done with JWT. In order to limit the app\u2019s usage to MIMUW students, a MIMUW email address is connected to each account (Nodemailer). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9582751101620237,
        0.9506714283610662
      ],
      "excerpt": "Notification of users is primarily be done by email and push notification done with web-push library. \nWe use convolutional neural networks (CNNs) to solve the problem of detecting hats in pictures. To be more specific, our neural network (NN) is able to find bounding box of potential hat. Currently there is used MobileNet (https://arxiv.org/abs/1704.04861). If increased detail is needed, we move to another type of CNN, namely the YOLO v3 (https://arxiv.org/abs/1804.02767) model from the well-known scientific article.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503645537237603
      ],
      "excerpt": "The implementation is carried out in keras 2.3.1 (python3) in a version with tensorflow 2.0 backend. We don't have 100% certainty about NN correctness. If prediction fails, posts can be still verified by moderators. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8198615704773242
      ],
      "excerpt": "library is used. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411166645657774,
        0.8027988942359517
      ],
      "excerpt": "Facebook about missing things 2) scraping Google images using simple \nscripts (in JavaScript and Python). Dataset size is about n 10k <= \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9228039564229866
      ],
      "excerpt": "Due to the complexity of the problem, the training takes place on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8596856837136677,
        0.8792023310152455,
        0.9149999928508494,
        0.8992705040115746,
        0.8147394038045578,
        0.9211380417627564
      ],
      "excerpt": "T4, P100, and V100 GPUs (Google Colab assigns specific models \nwithout the possibility of choosing them by us). \nThe current deployment setup consists of two Heroku apps - the one visible to the user (frontend) is powered by a nginx \nserver which serves the React app through static files as well as acts as a (reverse) proxy to the actual backend, which is another \nHeroku app, not visible directly to the user. The backend is connected to a MongoDB cluster. Both frontend and backend run \nas Docker containers (on Heroku they are deployed through heroku.yml). Machine learning backend is easily configurable  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9165267898579761
      ],
      "excerpt": "To limit malicious usage, each account is linked to a MIMUW email \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9449743068046794
      ],
      "excerpt": "related to hats. Users designated as moderators have the ability to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971387942192541,
        0.9078444697253109
      ],
      "excerpt": "Since information is sent to users mostly by notification, speed of \nmatching items does not have to be very high. Notifying a user of their \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8079229954346447,
        0.9249836664367955,
        0.9411680843242684
      ],
      "excerpt": "fast as to provide a better user experience. \nUser participation is encouraged by awarding active players with \nexperience points. When accumulated, they allow users to gain \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Hats. Redefined. No more hat spam on your social media.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mvxxx/mimuw-hats/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 18:40:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mvxxx/mimuw-hats/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mvxxx/mimuw-hats",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/mvxxx/mimuw-hats/master/client/Dockerfile",
      "https://raw.githubusercontent.com/mvxxx/mimuw-hats/master/server/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/mvxxx/mimuw-hats/master/model/model/classifier.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mvxxx/mimuw-hats/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "TypeScript",
      "Jupyter Notebook",
      "Python",
      "JavaScript",
      "HTML",
      "Dockerfile",
      "CSS",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Chong Hon Fong\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<img src=\"client/public/android-chrome-384x384.png\" width=\"75\" height=\"75\" /> MIMUW-Hats",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mimuw-hats",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mvxxx",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mvxxx/mimuw-hats/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 18:40:39 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "transfer-learning",
      "tensorflow"
    ],
    "technique": "GitHub API"
  }
}