{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.09925"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9818894004866677
      ],
      "excerpt": "Author, Irwan Bello, Barret Zoph, Ashish Vaswani, Jonathon Shlens \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414616401702977
      ],
      "excerpt": "Github URL \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leaderj1001/Attention-Augmented-Conv2d",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-23T14:53:21Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-10T08:52:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9701045771723291
      ],
      "excerpt": "In the paper, it is implemented as Tensorflow. So I implemented it with Pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8163660556879805
      ],
      "excerpt": "I have added padding to the \"AugmentedConv\" part. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.903444136285764
      ],
      "excerpt": "assert stride in [1, 2], str(stride) + \" Up to 2 strides are allowed.\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8272149637285282
      ],
      "excerpt": "Quoc V.Le Google Brain \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8691661791673625,
        0.908925214220865
      ],
      "excerpt": "In the paper,  \n and  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8657855231094227,
        0.9677935491855774,
        0.8284517204896501
      ],
      "excerpt": "Experiments of parameters in paper<br><br> \nIn the paper, they said that We augment the Wide-ResNet-28-10 by augmenting the first convolution of all residual blocks with relative attention using Nh=8 heads and \u03ba=2, \u03c5=0.2 and a minimum of 20 dimensions per head for the keys. \n| Datasets | Model | Accuracy | Epoch | Training Time | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9304927589589654,
        0.9276980528628154,
        0.8240528533466539
      ],
      "excerpt": "I just want to see feasibility of this method(Attention-Augemnted Conv layer), I'll try about ResNet. \nThe above results show that there are many time differences. I will think about this part a bit more. \nI have seen the issue that the torch.einsum function is slow. Link \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementing Attention Augmented Convolutional Networks using Pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leaderj1001/Attention-Augmented-Conv2d/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 101,
      "date": "Sun, 26 Dec 2021 08:36:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/leaderj1001/Attention-Augmented-Conv2d/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "leaderj1001/Attention-Augmented-Conv2d",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8262812208127679
      ],
      "excerpt": "You can use it as you would with nn.conv2d. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9088063058459555
      ],
      "excerpt": "Thank you :) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503285044245461
      ],
      "excerpt": " are obtained using the following equations.<br><br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.891617694570879
      ],
      "excerpt": "using cuda<br><Br> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8484770557186408
      ],
      "excerpt": "Example, relative=True, stride=1, shape=32 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from attention_augmented_conv import AugmentedConv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8337864482636751
      ],
      "excerpt": "print(conv_out1.shape) #: (16, 20, 32, 32) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8663914081031229
      ],
      "excerpt": "    print('parameter name: ', name) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837943824461134
      ],
      "excerpt": "Example, relative=True, stride=2, shape=16 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from attention_augmented_conv import AugmentedConv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8353689419207967
      ],
      "excerpt": "augmented_conv1 = AugmentedConv(in_channels=3, out_channels=20, kernel_size=3, dk=40, dv=4, Nh=4, relative=True, stride=2, shape=16).to(device) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8552855027872233
      ],
      "excerpt": "print(conv_out1.shape) #: (16, 20, 16, 16) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8163634208428964
      ],
      "excerpt": "- This is important, when using the \"relative = True\" mode, the stride * shape should be the same as the input shape. For example, if input is (16, 3, 32, 32) and stride = 2, the shape should be 16. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8535637691700436
      ],
      "excerpt": "I will attach the example below as well.<br><br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from attention_augmented_conv import AugmentedConv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8856242478385988
      ],
      "excerpt": "print(conv_out.shape) #: (16, 20, 32, 32), (batch_size, out_channels, height, width) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from attention_augmented_conv import AugmentedConv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8972431057182524
      ],
      "excerpt": "print(conv_out.shape) #: (16, 20, 16, 16), (batch_size, out_channels, height, width) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.817567737993416
      ],
      "excerpt": "CIFAR-100 | Just 3-Conv layers(channels: 64, 128, 192) | 61.6% | 100 | 22m \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/leaderj1001/Attention-Augmented-Conv2d/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Myeongjun Kim\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Implementing Attention Augmented Convolutional Networks using Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Attention-Augmented-Conv2d",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "leaderj1001",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leaderj1001/Attention-Augmented-Conv2d/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- tqdm==4.31.1\n- torch==1.0.1\n- torchvision==0.2.2\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 571,
      "date": "Sun, 26 Dec 2021 08:36:58 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "attention-augmented-conv",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}