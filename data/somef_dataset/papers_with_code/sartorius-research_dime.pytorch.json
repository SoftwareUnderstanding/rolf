{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2108.10673",
      "https://arxiv.org/abs/2108.10673"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find DIME useful in your research, please cite the following paper:\n\n```\n@misc{sjogren2021outofdistribution,\n   title={Out-of-Distribution Example Detection in Deep Neural Networks using Distance to Modelled Embedding},\n   author={Rickard Sj\u00f6gren and Johan Trygg},\n   year={2021},\n   eprint={2108.10673},\n   archivePrefix={arXiv},\n   primaryClass={cs.LG}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{sjogren2021outofdistribution,\n   title={Out-of-Distribution Example Detection in Deep Neural Networks using Distance to Modelled Embedding},\n   author={Rickard Sj\u00f6gren and Johan Trygg},\n   year={2021},\n   eprint={2108.10673},\n   archivePrefix={arXiv},\n   primaryClass={cs.LG}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sartorius-research/dime.pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-24T08:22:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-05T22:35:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9972118188074236,
        0.9943471366054896,
        0.9673949840367898,
        0.8632303200501574
      ],
      "excerpt": "This repo contains an implementation of DIME, which is a method to detect out-of-distribution (OOD) observations in deep  \nlearning and is based on the work in this paper. DIME provides a flexible method to detect OOD-observations with minimal computational overhead and simply assumes \naccess to intermediate features from an ANN. DIME is summarized in the workflow below. \nDIME is summarized in four steps. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9125620085042564,
        0.9056918129169166
      ],
      "excerpt": "   aggregate to a 2D-matrix NxP-matrix (for instance by global average pooling in the context of  \n   NxCxHxW-representations from a CNN). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9141403881677296
      ],
      "excerpt": "In the embedding space, measure the distance to the hyperplane (modelled embedding) to determine whether  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9072126876624266
      ],
      "excerpt": "observing an observation with less than or equal distance to the observed distance. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9603816764172608,
        0.8578924595017741
      ],
      "excerpt": "To obtain probabilities of that the new observations have a distance \ncalibration set observations are equal or less than the new distance,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch-implementation of the DIME method to detect out-of-distribution observations in deep learning.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sartorius-research/dime.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 13:33:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sartorius-research/dime.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sartorius-research/dime.pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9412589129351374
      ],
      "excerpt": "you need to have calibrated the percentiles as shown above. Then you \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "modelled_embedding.distance_to_hyperplane(x_new, return_probabilites=True) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sartorius-research/dime.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2021 - Sartorius AG\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\\nassociated documentation files (the \"Software\"), to deal in the Software without restriction,\\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\\nand/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial\\nportions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Distance to Modelled Embedding (DIME)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dime.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sartorius-research",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sartorius-research/dime.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 13:33:13 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simply install from pip:\n```\npip install dime-pytorch\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Given a 2D-tensor, fit the hyperplane.\n\n    from dime import DIME\n\n    x = torch.tensor(...) ",
      "technique": "Header extraction"
    }
  ]
}