{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1701.07875 (2017).\n- Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, Aaron Courville. [Improved training of wasserstein gans.](https://arxiv.org/pdf/1704.00028.pdf) arXiv preprint https://arxiv.org/abs/1704.00028 (2017).\n\n### Test Runs:\n\n```\n(left) python main.py --dataset=mnist --model_type=GAN --batch_size=64 --input_height=28 --output_height=28 --max_iter=10000 --learning_rate=0.0002 --train\n(middle) python main.py --dataset=mnist --model_type=WGAN --batch_size=64 --input_height=28 --output_height=28 --d_iter=5 --max_iter=10000 --learning_rate=0.00005 --train\n(right) python main.py --dataset=mnist --model_type=WGAN_GP --batch_size=64 --input_height=28 --output_height=28 --d_iter=5 --max_iter=10000 --learning_rate=0.0001 --train\n```\n![](demos/mnist_GAN.gif \"GAN on mnist\")&nbsp;![](demos/mnist_WGAN.gif \"WGAN on mnist\")&nbsp;![](demos/mnist_WGAN_GP.gif \"WGAN with gradient penalty on mnist\")",
      "https://arxiv.org/abs/1704.00028 (2017).\n\n### Test Runs:\n\n```\n(left) python main.py --dataset=mnist --model_type=GAN --batch_size=64 --input_height=28 --output_height=28 --max_iter=10000 --learning_rate=0.0002 --train\n(middle) python main.py --dataset=mnist --model_type=WGAN --batch_size=64 --input_height=28 --output_height=28 --d_iter=5 --max_iter=10000 --learning_rate=0.00005 --train\n(right) python main.py --dataset=mnist --model_type=WGAN_GP --batch_size=64 --input_height=28 --output_height=28 --d_iter=5 --max_iter=10000 --learning_rate=0.0001 --train\n```\n![](demos/mnist_GAN.gif \"GAN on mnist\")&nbsp;![](demos/mnist_WGAN.gif \"WGAN on mnist\")&nbsp;![](demos/mnist_WGAN_GP.gif \"WGAN with gradient penalty on mnist\")"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lilianweng/unified-gan-tensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-09-03T05:27:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T09:07:05Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9539843343555114,
        0.9830867517979133,
        0.9533512541332072,
        0.9336155722527035,
        0.8825483296526169
      ],
      "excerpt": "(*) This repo is a modification of carpedm20/DCGAN-tensorflow. \n(*) The full credit of the model structure design goes to carpedm20/DCGAN-tensorflow.  \nI started with carpedm20/DCGAN-tensorflow because its DCGAN implementation is not fixed for one dataset, which is not a common setting. Most WGAN and WGAN-GP implementations only work on 'mnist' or one given dataset. \nA couple of modifications I've made that could be helpful to people who try to implement GAN on their own for the first time. \n1. Added model_type which could be one of 'GAN' (original), 'WGAN' (Wasserstein distance as loss), and 'WGAN_GP' (Wasserstein distance as loss function with gradient penalty), each corresponding to one variation of GAN model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8994671017249241
      ],
      "excerpt": "3. Some model methods were reconstructed so that the code is easier to read through. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Tensorflow implementation of GAN, WGAN and WGAN with gradient penalty.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lilianweng/unified-gan-tensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 36,
      "date": "Wed, 29 Dec 2021 07:37:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lilianweng/unified-gan-tensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lilianweng/unified-gan-tensorflow",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8589510005646274
      ],
      "excerpt": "The download.py file stays same as in carpedm20/DCGAN-tensorflow. I keep this file in the repo for the sake of easily fetching dataset for testing. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lilianweng/unified-gan-tensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Original, Wasserstein, and Wasserstein-Gradient-Penalty DCGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "unified-gan-tensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lilianweng",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lilianweng/unified-gan-tensorflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n(left) python main.py --dataset=mnist --model_type=GAN --batch_size=64 --input_height=28 --output_height=28 --max_iter=10000 --learning_rate=0.0002 --train\n(middle) python main.py --dataset=mnist --model_type=WGAN --batch_size=64 --input_height=28 --output_height=28 --d_iter=5 --max_iter=10000 --learning_rate=0.00005 --train\n(right) python main.py --dataset=mnist --model_type=WGAN_GP --batch_size=64 --input_height=28 --output_height=28 --d_iter=5 --max_iter=10000 --learning_rate=0.0001 --train\n```\n![](demos/mnist_GAN.gif \"GAN on mnist\")&nbsp;![](demos/mnist_WGAN.gif \"WGAN on mnist\")&nbsp;![](demos/mnist_WGAN_GP.gif \"WGAN with gradient penalty on mnist\")\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 98,
      "date": "Wed, 29 Dec 2021 07:37:24 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tensorflow",
      "dcgan-tensorflow",
      "gan",
      "wgan",
      "wgan-gp"
    ],
    "technique": "GitHub API"
  }
}