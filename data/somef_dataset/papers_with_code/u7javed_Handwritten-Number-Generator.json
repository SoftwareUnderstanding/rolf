{
  "citation": [
    {
      "confidence": [
        0.9869224966082298
      ],
      "excerpt": "Reference to DCGAN paper: https://arxiv.org/pdf/1511.06434.pdf \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/u7javed/Handwritten-Number-Generator",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-08T01:37:10Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-08T02:57:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9969109475525877,
        0.9821981761337836
      ],
      "excerpt": "This program is based off GANs, specifically the DCGAN with my own addition of a condition which I will explain below. The fundamental idea is that two deep neural network models play a minimax game. The Generator tries to trick the Discriminator into classifying the Generated data as real while the Discriminator tries to classify fake data as fake and real data as real. Hence the 'Adversarial' in GAN. The DCGAN uses deep convolutional layers while omitting all feed-forward layers. This specific variant of DCGAN uses condition as well as weight clipping as a quick way of enforcing lipchitz constraint (although gradient penatly is more effective. Refer to my WGAN repo for more info). \nThe Generator consists of a sequence of strided transposed convolutions (sometimes referred to as deconvolutions) which gradually expand the feature space until the final output where the feature space is downsized to the desired channel size (1 for mnist). Output function is tanh. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9842132978995884
      ],
      "excerpt": "The Discriminator takes an input as image and outputs a classification score using sigmoid. A series of strided convolutions are applied to the input image to downsize until it a 1 dimensional tensor which is used as the classifcation score. Strided convolutions are preferred over poolings due to the convolutions being learnable functions, shown to produce better images. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9829772836931899
      ],
      "excerpt": "    - Contains the model architectures described in the DCGAN paper with the addition of my own condition architecture change. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8765760136010888
      ],
      "excerpt": "--hyperparameters are a list of hyperparameters to call in order to properly execute train.py. Each hyperparamter is to be entered in this format: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9060156457824284
      ],
      "excerpt": "followed by a space to seperate each hyperparameter entered. Please refer to script_run.ipynb Jupyter Notebook file to see specific hyperparamters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9029669219463906
      ],
      "excerpt": "An executable file that takes in a few parameters (please refer to file for more info) and saves an image of the generated number to a specified file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A handwritten number generating program using Generative Adversarial Networks. Specifically a conditional variation of the DCGAN I developed to condition specific number generation and splicing images together to form a singular image. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/u7javed/Handwritten-Number-Generator/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 17:37:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/u7javed/Handwritten-Number-Generator/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "u7javed/Handwritten-Number-Generator",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/u7javed/Handwritten-Number-Generator/master/script_run.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9455750257707145
      ],
      "excerpt": "    Clone the Repo. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9144810508102184
      ],
      "excerpt": "  - models.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9099440223319041
      ],
      "excerpt": "python train.py --hyperparameters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8223260458697862
      ],
      "excerpt": "--image_directory data/images/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8447793154006386,
        0.9117168878313547
      ],
      "excerpt": "Here is an example of a run \npython generate_number.py --number 241256 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9087415371238506
      ],
      "excerpt": "    Run train.py with your own or default hyperparameters (for more info, refer to script_run.ipynb and train.py) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/u7javed/Handwritten-Number-Generator/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Umer Javed\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Handwritten-Number-Generator",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Handwritten-Number-Generator",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "u7javed",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/u7javed/Handwritten-Number-Generator/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 17:37:40 GMT"
    },
    "technique": "GitHub API"
  }
}