{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Further to come\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. 2014. Generative adversarial nets. In Proceedings of the 27th International Conference on Neural Information Processing Systems - Volume 2 (NIPS'14), Vol. 2. MIT Press, Cambridge, MA, USA, 2672-2680.\n\n[2] Martin Arjovsky, Soumith Chintala, L\u00e9on Bottou. 2017, Wasserstein Generative Adversarial Networks. Proceedings of the 34th International Conference on Machine Learning, PMLR 70:214-223, 2017. Paper available at http://proceedings.mlr.press/v70/arjovsky17a/arjovsky17a.pdf\n\n[3] Gulrajani, Ishaan & Ahmed, Faruk & Arjovsky, Martin & Dumoulin, Vincent & Courville, Aaron. (2017). Improved Training of Wasserstein GANs. Paper available at https://arxiv.org/pdf/1704.00028.pdf\n\n----------------------------\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dagrate/gan_network",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-26T11:57:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-02T13:37:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8944209918265263,
        0.8312372020733872
      ],
      "excerpt": "The gan_network library is a Python library that proposes Wasserstein Generative Adversarial Network (WGAN) for numerical simulations. Two types of WGAN are implemented:  \n- a standard WGAN as described in [1] and [2] \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dagrate/gan_network/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 07:46:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dagrate/gan_network/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dagrate/gan_network",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dagrate/gan_network/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "gan_network",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "gan_network",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dagrate",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dagrate/gan_network/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The library uses **Python 3** and the following modules:\n- numpy (pip install numpy)\n- keras (pip install numba)\n- pylab (pip install pylab)\n- functools (pip install pylab)\n- sklearn (pip install sklearn)\n\nIf running in Linux distribution, it is advised to install BLAS/LAPACK to increase the efficiency of the computations:  \nsudo apt-get install libblas-dev liblapack-dev gfortran\n\n----------------------------\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 07:46:04 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "neural-networks",
      "artificial-intelligence",
      "gans"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The standard WGAN is available in the file WGAN_std.py\n\nThe gradient penalty WGAN is available in the file WGAN_gradientpenalty.py\n\n```python\n```\n\n----------------------------\n\n",
      "technique": "Header extraction"
    }
  ]
}