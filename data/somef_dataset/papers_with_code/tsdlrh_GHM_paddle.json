{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1811.05181\n#### \u8bba\u6587\u4ee3\u7801 https://github.com/libuyu/GHM_Detection\n\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/1.JPG\" width=\"800px\">\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/2.JPG\" width=\"800px\">\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/3.JPG\" width=\"800px\">\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/4.JPG\" width=\"800px\">\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/5.JPG\" width=\"800px\">\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/6.JPG\" width=\"800px\">\n<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/7.JPG\" width=\"800px\">\n\n\n#### \u7b80\u4ecb\uff1a\n\n\u5355\u9636\u6bb5\u68c0\u6d4b\u5728\u8bad\u7ec3\u65f6\u5b58\u5728\u6b63\u8d1f\u6837\u672c\u7684\u5dee\u8ddd\uff0c\u9488\u5bf9easy\u548chard\u6837\u672c\u4e4b\u95f4\u7684\u4e0d\u540c\uff0c\u4ece\u68af\u5ea6\u7684\u65b9\u5411\u8003\u8651\u89e3\u51b3\u8fd9\u4e2a\u4e24\u4e2a\u95ee\u9898\u3002\u63d0\u51fa\u4e86\u68af\u5ea6\u534f\u8c03\u673a\u5236GHM,\u5c06GHM\u7684\u601d\u60f3\u5d4c\u5165\u5230\u5206\u7c7b\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u548c\u7528\u4e8e\u56de\u5f52\u7684Smooth-L1\u635f\u5931\u4e2d\uff0c\u5728COCO\u6570\u636e\u96c6\u4e0a\uff0cmAP\u8fbe\u5230\u4e8641.6\u7684\u4f18\u826f\u6548\u679c\u3002\n\n\n#### \u80cc\u666f\uff1a\n\n\u5355\u9636\u6bb5\u68c0\u6d4b\u5668\u5728\u8bad\u7ec3\u65f6\u9762\u4e34\u7684\u6700\u5927\u95ee\u9898\u5c31\u662feasy\u548chard\u6837\u672c\uff0c\u4ee5\u53capositive\u548cnegative\u6837\u672c\u4e4b\u95f4\u7684\u4e0d\u5e73\u8861\uff0ceasy\u6837\u672c\u7684\u6570\u91cf\u591a\u4ee5\u53ca\u80cc\u666f\u6837\u672c\u7684\u51fa\u73b0\uff0c\u5f71\u54cd\u4e86\u68c0\u6d4b\u5668\u7684\u8bad\u7ec3\uff0c\u8fd9\u79cd\u95ee\u9898\u5728\u4e8c\u9636\u6bb5\u68c0\u6d4b\u4e2d\u5e76\u4e0d\u5b58\u5728\u3002\u76f8\u5173\u7684\u7814\u7a76\u6280\u672f\u5305\u62ec\uff0cOHEM\u6837\u672c\u6316\u6398\u6280\u672f\u548cFocal Loss\u51fd\u6570\u3002\u5176\u4e2dOHEM\u6280\u672f\u4e22\u5f03\u4e86\u5927\u90e8\u5206\u6837\u672c\uff0c\u8bad\u7ec3\u4e5f\u4e0d\u662f\u5f88\u9ad8\u6548\uff0cFocal Loss\u51fd\u6570\u5f15\u5165\u4e86\u4e24\u4e2a\u8d85\u53c2\u6570\uff0c\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u5b9e\u9a8c\u8fdb\u884c\u8c03\u8bd5\uff0c\u540c\u65f6Focal Loss\u662f\u4e00\u79cd\u9759\u6001\u635f\u5931\uff0c\u5bf9\u6570\u636e\u96c6\u7684\u5206\u5e03\u5e76\u4e0d\u654f\u611f\u3002\u672c\u8bba\u6587\u4e2d\u6307\u51fa\uff0c\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898\u4e3b\u8981\u5f52\u7ed3\u4e8e\u96be\u5ea6\u4e0d\u5e73\u8861\u95ee\u9898\uff0c\u800c\u96be\u5ea6\u4e0d\u5e73\u8861\u95ee\u9898\u53ef\u4ee5\u5f52\u7ed3\u4e8e\u6b63\u5219\u5316\u68af\u5ea6\u5206\u5e03\uff08gradient norm\uff09\u7684\u4e0d\u5e73\u8861,\u5982\u679c\u4e00\u4e2a\u6b63\u6837\u672c\u5f88\u5bb9\u91cf\u88ab\u5206\u7c7b\uff0c\u5219\u6a21\u578b\u4ece\u8be5\u6837\u672c\u4e2d\u5f97\u5230\u7684\u4fe1\u606f\u91cf\u8f83\u5c11\uff0c\u6216\u8005\u8bf4\u4ea7\u751f\u7684\u68af\u5ea6\u4fe1\u606f\u5f88\u5c11\u3002\u4ece\u6574\u4f53\u4e0a\u770b\uff0c\u8d1f\u6837\u672c\u591a\u4e3aeasy\u6837\u672c\uff0c\u6b63\u6837\u672c\u591a\u4e3ahard\u6837\u672c\u3002\u56e0\u6b64\uff0c\u4e24\u79cd\u4e0d\u5e73\u8861\u53ef\u4ee5\u5f52\u7ed3\u4e8e\u5c5e\u6027\u4e0a\u7684\u4e0d\u5e73\u8861\u3002\u8bba\u6587\u7684\u4e3b\u8981\u8d21\u732e\uff1a\uff081\uff09\u63ed\u793a\u4e86\u5355\u9636\u6bb5\u68c0\u6d4b\u5668\u5728gradient norm\u5206\u5e03\u65b9\u9762\u5b58\u5728\u663e\u8457\u4e0d\u8db3\u7684\u57fa\u672c\u539f\u7406\uff0c\u5e76\u4e14\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u68af\u5ea6\u5e73\u8861\u673a\u5236(GHM"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9043791070098192
      ],
      "excerpt": "<img src=\"https://github.com/tsdlrh/Blog_image/blob/master/%E7%AE%A1%E7%90%86%E5%91%98%E7%99%BB%E5%BD%95/10.JPG\" width=\"400px\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if isinstance(m, nn.Conv2D): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "            bins=10, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if momentum > 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "    if paddle.to_tensor(pred).dim() != paddle.to_tensor(target).dim(): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955,
        0.8456806903995955
      ],
      "excerpt": "        if num_in_bin &gt; 0: \n            if mmt &gt; 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if n &gt; 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "            bins=10, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "        self.mu = mu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if momentum > 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "    mu = self.mu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9559715772848645
      ],
      "excerpt": "    loss = paddle.sqrt(paddle.to_tensor(diff * diff + mu * mu)) - mu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "    g = paddle.abs(paddle.to_tensor(diff) / paddle.sqrt(paddle.to_tensor(mu * mu + diff * diff))).detach() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "        if num_in_bin &gt; 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "            if mmt &gt; 0: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if n &gt; 0: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tsdlrh/GHM_paddle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-17T03:53:27Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-18T02:25:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.836509321240062
      ],
      "excerpt": "\u5355\u9636\u6bb5\u68c0\u6d4b\u5668\u5728\u8bad\u7ec3\u65f6\u9762\u4e34\u7684\u6700\u5927\u95ee\u9898\u5c31\u662feasy\u548chard\u6837\u672c\uff0c\u4ee5\u53capositive\u548cnegative\u6837\u672c\u4e4b\u95f4\u7684\u4e0d\u5e73\u8861\uff0ceasy\u6837\u672c\u7684\u6570\u91cf\u591a\u4ee5\u53ca\u80cc\u666f\u6837\u672c\u7684\u51fa\u73b0\uff0c\u5f71\u54cd\u4e86\u68c0\u6d4b\u5668\u7684\u8bad\u7ec3\uff0c\u8fd9\u79cd\u95ee\u9898\u5728\u4e8c\u9636\u6bb5\u68c0\u6d4b\u4e2d\u5e76\u4e0d\u5b58\u5728\u3002\u76f8\u5173\u7684\u7814\u7a76\u6280\u672f\u5305\u62ec\uff0cOHEM\u6837\u672c\u6316\u6398\u6280\u672f\u548cFocal Loss\u51fd\u6570\u3002\u5176\u4e2dOHEM\u6280\u672f\u4e22\u5f03\u4e86\u5927\u90e8\u5206\u6837\u672c\uff0c\u8bad\u7ec3\u4e5f\u4e0d\u662f\u5f88\u9ad8\u6548\uff0cFocal Loss\u51fd\u6570\u5f15\u5165\u4e86\u4e24\u4e2a\u8d85\u53c2\u6570\uff0c\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u5b9e\u9a8c\u8fdb\u884c\u8c03\u8bd5\uff0c\u540c\u65f6Focal Loss\u662f\u4e00\u79cd\u9759\u6001\u635f\u5931\uff0c\u5bf9\u6570\u636e\u96c6\u7684\u5206\u5e03\u5e76\u4e0d\u654f\u611f\u3002\u672c\u8bba\u6587\u4e2d\u6307\u51fa\uff0c\u7c7b\u522b\u4e0d\u5e73\u8861\u95ee\u9898\u4e3b\u8981\u5f52\u7ed3\u4e8e\u96be\u5ea6\u4e0d\u5e73\u8861\u95ee\u9898\uff0c\u800c\u96be\u5ea6\u4e0d\u5e73\u8861\u95ee\u9898\u53ef\u4ee5\u5f52\u7ed3\u4e8e\u6b63\u5219\u5316\u68af\u5ea6\u5206\u5e03\uff08gradient norm\uff09\u7684\u4e0d\u5e73\u8861,\u5982\u679c\u4e00\u4e2a\u6b63\u6837\u672c\u5f88\u5bb9\u91cf\u88ab\u5206\u7c7b\uff0c\u5219\u6a21\u578b\u4ece\u8be5\u6837\u672c\u4e2d\u5f97\u5230\u7684\u4fe1\u606f\u91cf\u8f83\u5c11\uff0c\u6216\u8005\u8bf4\u4ea7\u751f\u7684\u68af\u5ea6\u4fe1\u606f\u5f88\u5c11\u3002\u4ece\u6574\u4f53\u4e0a\u770b\uff0c\u8d1f\u6837\u672c\u591a\u4e3aeasy\u6837\u672c\uff0c\u6b63\u6837\u672c\u591a\u4e3ahard\u6837\u672c\u3002\u56e0\u6b64\uff0c\u4e24\u79cd\u4e0d\u5e73\u8861\u53ef\u4ee5\u5f52\u7ed3\u4e8e\u5c5e\u6027\u4e0a\u7684\u4e0d\u5e73\u8861\u3002\u8bba\u6587\u7684\u4e3b\u8981\u8d21\u732e\uff1a\uff081\uff09\u63ed\u793a\u4e86\u5355\u9636\u6bb5\u68c0\u6d4b\u5668\u5728gradient norm\u5206\u5e03\u65b9\u9762\u5b58\u5728\u663e\u8457\u4e0d\u8db3\u7684\u57fa\u672c\u539f\u7406\uff0c\u5e76\u4e14\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u68af\u5ea6\u5e73\u8861\u673a\u5236(GHM)\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\uff082\uff09\u63d0\u51fa\u4e86GHM-C\u4ee5\u53caGHM-R\uff0c\u5b83\u4eec\u7ea0\u6b63\u4e86\u4e0d\u540c\u6837\u672c\u7684\u68af\u5ea6\u5206\u5e03\uff0c\u5e76\u4e14\u5bf9\u8d85\u53c2\u6570\u5177\u6709\u9c81\u68d2\u6027\u3002\uff083\uff09\u901a\u8fc7\u4f7f\u7528GHM\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u8bad\u7ec3\u5355\u9636\u6bb5\u68c0\u6d4b\u5668\uff0c\u65e0\u9700\u4efb\u4f55\u6570\u636e\u91c7\u6837\u7b56\u7565\uff0c\u5e76\u4e14\u5728COCO\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u53d6\u5f97\u4e86state-of-the-art\u7684\u7ed3\u679c\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "|   \u251c\u2500\u2500 data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "            m.weight.data.normal_(0, math.sqrt(2. / n)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8979411005071259
      ],
      "excerpt": "            m.weight.data.fill_(1) \n            m.bias.data.zero_() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8954021494763957
      ],
      "excerpt": "    #: upsample C5 to get P5 from the FPN paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8720741895353464
      ],
      "excerpt": "    #: add P5 elementwise to C4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8720741895353464
      ],
      "excerpt": "    #: add P4 elementwise to C3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906695742772617
      ],
      "excerpt": "    #: \"P6 is obtained via a 3x3 stride-2 conv on C5\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654431348060603
      ],
      "excerpt": "    #: \"P7 is computed by applying ReLU followed by a 3x3 stride-2 conv on P6\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8849334818343856
      ],
      "excerpt": "        momentum (float): The parameter for moving average. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9207160742802687,
        0.8015207272199559,
        0.8592043348115852
      ],
      "excerpt": "        pred (float tensor of size [batch_num, class_num]): \n            The direct prediction of classification fc layer. \n        target (float tensor of size [batch_num, class_num]): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9207160742802687
      ],
      "excerpt": "        label_weight (float tensor of size [batch_num, class_num]): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.898298034292414
      ],
      "excerpt": "        mu (float): The parameter for the Authentic Smooth L1 loss. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8849334818343856
      ],
      "excerpt": "        momentum (float): The parameter for moving average. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9207160742802687
      ],
      "excerpt": "        pred (float tensor of size [batch_num, 4 (* class_num)]): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053027584615753,
        0.8592043348115852,
        0.8867713099212906,
        0.9207160742802687
      ],
      "excerpt": "            or 4 * class_num depending on whether it is class-agnostic. \n        target (float tensor of size [batch_num, 4 (* class_num)]): \n            The target regression values with the same size of pred. \n        label_weight (float tensor of size [batch_num, 4 (* class_num)]): \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tsdlrh/GHM_paddle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 09:10:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tsdlrh/GHM_paddle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tsdlrh/GHM_paddle",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8727487047449518
      ],
      "excerpt": "|   \u2502   \u251c\u2500\u2500 coco \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991,
        0.9166303514561411,
        0.9336801098518991,
        0.8445852666384341,
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "-anchors.py \u5b9e\u73b0anchor_head\u4ee3\u7801 \n-utils.py \u5b9e\u73b0BasicBlock,Bottleneck,BBoxTransform\u548cClipBox\u51fd\u6570\u529f\u80fd \n-retina_net.py \u6a21\u578b\u7ec4\u7f51\uff0c\u642d\u5efa\u4e86resnet50+fpn+retina_head\u7684\u6a21\u578b\u7ed3\u6784 \n-losses.py \u5b9e\u73b0Focal_loss\u51fd\u6570 \n-ghm_loss.py \u5b9e\u73b0GHM_C loss\u548cGHM_R loss\u51fd\u6570 \n-dataloader.py \u5b9e\u73b0COCO\u6570\u636e\u7684\u52a0\u8f7d \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828665034782968,
        0.8110087984910515,
        0.8242315120498447,
        0.8110087984910515,
        0.8110087984910515
      ],
      "excerpt": "    prior = 0.01 \n    self.classificationModel.output.weight.data.fill_(0) \n    self.classificationModel.output.bias.data.fill_(-math.log((1.0 - prior) / prior)) \n    self.regressionModel.output.weight.data.fill_(0) \n    self.regressionModel.output.bias.data.fill_(0) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "            use_sigmoid=True, \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tsdlrh/GHM_paddle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "GHM_paddle",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "GHM_paddle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tsdlrh",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tsdlrh/GHM_paddle/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 09:10:26 GMT"
    },
    "technique": "GitHub API"
  }
}