{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06870\n\n\n#### Week 2: Object detection\nThis week, you\u2019ll get an overview of some popular object detection models, such as regional-CNN and ResNet-50. You\u2019ll use object detection models that you\u2019ll retrieve from TensorFlow Hub, download your own models and configure them for training, and also build your own models for object detection. By using transfer learning, you will train a model to detect and localize rubber duckies using just five training examples. You\u2019ll also get to manually label your own rubber ducky images!\n\nLearning Objectives:\n\n- Get a conceptual overview of Regional CNN (R-CNN",
      "https://arxiv.org/abs/1311.2524\n\nFast- R-CNN:\nhttps://arxiv.org/abs/1504.08083\n\ntENSORFLOW Hub:\nhttps://www.tensorflow.org/hub\n\n#### Week 3: Image Segmentation\nThis week is all about image segmentation using variations of the fully convolutional neural network. With these networks, you can assign class labels to each pixel, and perform much more detailed identification of objects compared to bounding boxes. You\u2019ll build the fully convolutional neural network, U-Net, and Mask R-CNN this week to identify and detect numbers, pets, and even zombies!\n\nLearning Objectives:\n\n- Describe the conceptual design of fully convolutional neural networks and subsequent models based on it\n- Describe the decoder section of the fully convolutional neural network\n- Describe two methods of upsampling: simple scaling and transposed convolutions\n- Build the encoder and decoder sections of a fully convolutional neural network\n- Evaluate a segmentation model\u2019s performance using intersection-over-union and Dice score\n- Describe the conceptual design of the U-Net model\n- Build a U-Net model for image segmentation\n- Use the Mask R-CNN to perform instance segmentation\n\n\n#### Week 4: Visualization and Interpretability\nThis week, you\u2019ll learn about the importance of model interpretability, which is the understanding of how your model arrives at its decisions. You\u2019ll also implement class activation maps, saliency maps, and gradient-weighted class activation maps to identify which parts of an image are being used by your model to make its predictions. You\u2019ll also see an example of how visualizing a model\u2019s intermediate layer activations can help to improve the design of a famous network, AlexNet.\n\nLearning Objectives: \n\n- Explain why model interpretation is important\n- Calculate class activation maps to visualize the parts of the image that a model uses to make its predictions.\n- Calculate saliency maps to visualize the parts of the image that a model uses to make its predictions.\n- Implement Gradient-weighted Class Activation Mapping (GradCAM",
      "https://arxiv.org/abs/1504.08083\n\ntENSORFLOW Hub:\nhttps://www.tensorflow.org/hub\n\n#### Week 3: Image Segmentation\nThis week is all about image segmentation using variations of the fully convolutional neural network. With these networks, you can assign class labels to each pixel, and perform much more detailed identification of objects compared to bounding boxes. You\u2019ll build the fully convolutional neural network, U-Net, and Mask R-CNN this week to identify and detect numbers, pets, and even zombies!\n\nLearning Objectives:\n\n- Describe the conceptual design of fully convolutional neural networks and subsequent models based on it\n- Describe the decoder section of the fully convolutional neural network\n- Describe two methods of upsampling: simple scaling and transposed convolutions\n- Build the encoder and decoder sections of a fully convolutional neural network\n- Evaluate a segmentation model\u2019s performance using intersection-over-union and Dice score\n- Describe the conceptual design of the U-Net model\n- Build a U-Net model for image segmentation\n- Use the Mask R-CNN to perform instance segmentation\n\n\n#### Week 4: Visualization and Interpretability\nThis week, you\u2019ll learn about the importance of model interpretability, which is the understanding of how your model arrives at its decisions. You\u2019ll also implement class activation maps, saliency maps, and gradient-weighted class activation maps to identify which parts of an image are being used by your model to make its predictions. You\u2019ll also see an example of how visualizing a model\u2019s intermediate layer activations can help to improve the design of a famous network, AlexNet.\n\nLearning Objectives: \n\n- Explain why model interpretation is important\n- Calculate class activation maps to visualize the parts of the image that a model uses to make its predictions.\n- Calculate saliency maps to visualize the parts of the image that a model uses to make its predictions.\n- Implement Gradient-weighted Class Activation Mapping (GradCAM"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9944626794887552
      ],
      "excerpt": "Reference: CNN for visual recognition https://cs231n.github.io/neural-networks-3/#summary \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/polospeter/TensorFlow-Advanced-Techniques-Specialization",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-14T12:26:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-13T03:47:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Get a conceptual overview of image classification, object localization, object detection, and image segmentation. Also be able to describe multi-label classification, and distinguish between semantic segmentation and instance segmentation. In the rest of this course, you will apply TensorFlow to build object detection and image segmentation models.\n\nLearning Objectives:\n\n- Distinguish between object localization and object detection\n- Distinguish between object detection and image segmentation\n- Distinguish between semantic segmentation and instance segmentation\n- Explain what is transfer learning and why it's used\n- Describe design options when using transfer learning\n- Implement object localization with a CNN\n- Implement an image classifier with transfer learning\n\nPapers about Image segmentation models:\n\nFully Convolutional Networks for Semantic Segmentation https://people.eecs.berkeley.edu/~shelhamer/data/fcn.pdf\n\nU-Net: Convolutional Networks for Biomedical Image Segmentation https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/\n\nDeepLab: Semantic Image Segmentation with Deep Convolutional Nets, Atrous Convolution, and Fully Connected CRFs\nhttp://liangchiehchen.com/projects/DeepLab.html\n\nMask R-CNN:\nhttps://arxiv.org/abs/1703.06870\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8976667102534757
      ],
      "excerpt": "This repository will contain my solutions for the Tensorflow: Advanced Specialization course on Coursera. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8062689707866638
      ],
      "excerpt": "Papers about the Siamese network: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481581509779099
      ],
      "excerpt": "Loss functions help measure how well a model is doing, and are used to help a neural network learn from the training data. Learn how to build custom loss functions, including the contrastive loss function that is used in a Siamese network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481581509779099,
        0.8590502452950499
      ],
      "excerpt": "Loss functions help measure how well a model is doing, and are used to help a neural network learn from the training data. Learn how to build custom loss functions, including the contrastive loss function that is used in a Siamese network. \nThis week, you will get a detailed look at the fundamental building blocks of TensorFlow - tensor objects. For example, you will be able to describe the difference between eager mode and graph mode in TensorFlow, and explain why eager mode is very user friendly for you as a developer. You will also use TensorFlow tools to calculate gradients so that you don\u2019t have to look for your old calculus textbooks next time you need to get a gradient! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8766876569113551
      ],
      "excerpt": "Describe the difference between graph-based execution and eager execution in TensorFlow   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8585973417534756,
        0.9256513259617212
      ],
      "excerpt": "Implement a custom training loop with data from TensorFlow Datasets \nThis week, you\u2019ll learn about the benefits of generating code that runs in \u201cgraph mode\u201d. You\u2019ll take a peek at what graph code looks like, and you\u2019ll practice generating this more efficient code automatically with TensorFlow\u2019s tools, so that you don\u2019t have to write the graph code yourself! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9009481127748811,
        0.9246697539183396
      ],
      "excerpt": "Use decorators and tf.autograph to convert code into graph based code \nThis week, you will harness the power of distributed training to process more data and train larger models, faster. You\u2019ll get an overview of various distributed training strategies and then practice working with two strategies, one that trains on multiple GPU cores, and the other that trains on multiple TPU cores. Get your cape ready, because you\u2019re going to get some superpowers this week! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9801657177855022,
        0.9044252875490267
      ],
      "excerpt": "Get a conceptual overview of Regional CNN (R-CNN), Fast-RCNN, and Faster R-CNN. \nRetrieve the R-CNN model from TensorFlow hub and use it to perform object detection. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9755947475698675
      ],
      "excerpt": "Go beyond models in TensorFlow Hub: Load and configure a Resnet-50 model that isn\u2019t on TensorFlow Hub, restore pre-trained weights, and select the parts of the model to retrain. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8364650966008101
      ],
      "excerpt": "Fast- R-CNN: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9715621145813782
      ],
      "excerpt": "This week is all about image segmentation using variations of the fully convolutional neural network. With these networks, you can assign class labels to each pixel, and perform much more detailed identification of objects compared to bounding boxes. You\u2019ll build the fully convolutional neural network, U-Net, and Mask R-CNN this week to identify and detect numbers, pets, and even zombies! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9671074604758397,
        0.8200566617450984,
        0.8825076949379245
      ],
      "excerpt": "Describe the conceptual design of fully convolutional neural networks and subsequent models based on it \nDescribe the decoder section of the fully convolutional neural network \nDescribe two methods of upsampling: simple scaling and transposed convolutions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8701058513324235,
        0.9711762074636526
      ],
      "excerpt": "Evaluate a segmentation model\u2019s performance using intersection-over-union and Dice score \nDescribe the conceptual design of the U-Net model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9909677946044564
      ],
      "excerpt": "This week, you\u2019ll learn about the importance of model interpretability, which is the understanding of how your model arrives at its decisions. You\u2019ll also implement class activation maps, saliency maps, and gradient-weighted class activation maps to identify which parts of an image are being used by your model to make its predictions. You\u2019ll also see an example of how visualizing a model\u2019s intermediate layer activations can help to improve the design of a famous network, AlexNet. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Thu, 23 Dec 2021 00:52:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/polospeter/TensorFlow-Advanced-Techniques-Specialization/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "polospeter/TensorFlow-Advanced-Techniques-Specialization",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%203/C3_W3_Lab_2_OxfordPets_UNet.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%203/C3_W3_Lab_1_VGG16_FCN8_CamVid.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%203/C3_W3_Lab_3_Mask_RCNN_ImageSegmentation.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%201/C3_W1_Lab_3_Object_Localization.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%201/C3_W1_Lab_1_transfer_learning_cats_dogs.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%201/C3W1_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%201/C3_W1_Lab_2_Transfer_Learning_CIFAR_10.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%202/C3_W2_Lab_1_Simple_Object_Detection.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%202/Object_Detection_Inference_on_TF_2_and_TF_Hub.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%202/C3W2_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%203%20-%20Advanced%20computer%20vision%20with%20Tensorflow/Week%202/C3_W2_Lab_2_Object_Detection.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%204/C1_W4_Lab_1_basic-model.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%204/C1_W4_Lab_2_resnet-example.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%203/C1_W3_Lab_2_custom-dense-layer.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%203/C1_W3_Lab_1_lambda-layer.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%203/C1_W3_Lab_3_custom-layer-activation.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%203/C1W3_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%201/C1W1_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%201/C1_W1_Lab_2_multi-output.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%201/C1_W1_Lab_1_functional-practice.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%201/C1_W1_Lab_3_siamese-network.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%202/C1_W2_Lab_2_huber-object-loss.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%202/C1W2_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%201%20-%20Custom%20Models%2C%20Layers%20and%20Loss%20functions%20with%20Tensorflow/Week%202/C1_W2_Lab_1_huber-loss.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%204/C2W4_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%204/C2_W4_Lab_1_basic-mirrored-strategy.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%204/C2_W4_Lab_4_one-device-strategy.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%204/C2_W4_Lab_3_using-TPU-strategy.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%204/C2_W4_Lab_2_multi-GPU-mirrored-strategy.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%203/C2_W3_Lab_1_autograph-basics.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%203/C2W3_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%203/C2_W3_Lab_2-graphs-for-complex-code.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%201/C2W1_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%201/C2_W1_Lab_1_basic-tensors.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%201/C2_W1_Lab_2_gradient-tape-basics.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%202/C2W2_Assignment.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%202/C2_W2_Lab_1_training-basics.ipynb",
      "https://raw.githubusercontent.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/main/Course%202%20-%20Custom%20and%20Distributed%20training%20with%20Tensorflow/Week%202/C2_W2_Lab_2_training-categorical.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.852124933574085
      ],
      "excerpt": "Implement a custom training loop with data from TensorFlow Datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8703133670358302
      ],
      "excerpt": "Implement a custom training loop to fine-tune a model using just 5 training examples. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/polospeter/TensorFlow-Advanced-Techniques-Specialization/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TensorFlow-Advanced-Techniques-Specialization",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "TensorFlow-Advanced-Techniques-Specialization",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "polospeter",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/polospeter/TensorFlow-Advanced-Techniques-Specialization/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Thu, 23 Dec 2021 00:52:12 GMT"
    },
    "technique": "GitHub API"
  }
}