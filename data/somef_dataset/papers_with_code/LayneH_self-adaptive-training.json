{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2002.10319",
      "https://arxiv.org/abs/2101.08732",
      "https://arxiv.org/abs/1910.09338",
      "https://arxiv.org/abs/2002.10319",
      "https://arxiv.org/abs/2101.08732",
      "https://arxiv.org/abs/2101.08732"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For technical details, please check [the conference version](https://arxiv.org/abs/2002.10319) or [the journal version](https://arxiv.org/abs/2101.08732) of our paper.\r\n\r\n```\r\n@inproceedings{huang2020self,\r\n  title={Self-Adaptive Training: beyond Empirical Risk Minimization},\r\n  author={Huang, Lang and Zhang, Chao and Zhang, Hongyang},\r\n  booktitle={Advances in Neural Information Processing Systems},\r\n  volume={33},\r\n  year={2020}\r\n}\r\n\r\n@article{huang2021self,\r\n  title={Self-Adaptive Training: Bridging the Supervised and Self-Supervised Learning},\r\n  author={Huang, Lang and Zhang, Chao and Zhang, Hongyang},\r\n  journal={arXiv preprint arXiv:2101.08732},\r\n  year={2021}\r\n}\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{huang2021self,\n  title={Self-Adaptive Training: Bridging the Supervised and Self-Supervised Learning},\n  author={Huang, Lang and Zhang, Chao and Zhang, Hongyang},\n  journal={arXiv preprint arXiv:2101.08732},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{huang2020self,\n  title={Self-Adaptive Training: beyond Empirical Risk Minimization},\n  author={Huang, Lang and Zhang, Chao and Zhang, Hongyang},\n  booktitle={Advances in Neural Information Processing Systems},\n  volume={33},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.94562550681252,
        0.8806176510119977
      ],
      "excerpt": "- NeurIPS'2020 paper Self-Adaptive Training: beyond Empirical Risk Minimization\uff0c \n- Journal version Self-Adaptive Training: Bridging the Supervised and Self-Supervised Learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|WRN-28-10          |94.84  | 93.23 |89.42  |80.13  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.881848456479086
      ],
      "excerpt": "|WRN-28-10          |77.71  | 72.60 |64.87  |44.17  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.842790493796475,
        0.842790493796475
      ],
      "excerpt": "|None (initial entry)          |84.92 |83.48       | \n|PGD-20 (initial entry)        |56.68 |58.03       | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LayneH/self-adaptive-training",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any question about this code, feel free to open an issue or contact laynehuang@pku.edu.cn.\r\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-22T03:59:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-15T02:54:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.993431462513652
      ],
      "excerpt": "This is the PyTorch implementation of the  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9696966312875733
      ],
      "excerpt": "Self-adaptive training significantly improves the generalization of deep networks under noise and enhances the self-supervised representation learning. It also advances the state-of-the-art on learning with noisy label, adversarial training and the linear evaluation on the learned representation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9279023103519043
      ],
      "excerpt": "  The argument TRIAL_NAME is optional, it helps us to identify different trials of the same experiments without modifying the training script. The evaluation is automatically performed when training is finished. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8800523956731559
      ],
      "excerpt": "noise-rate: the percentage of data that being corrupted \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9308282970303037,
        0.8791020669396662,
        0.9426699680692527
      ],
      "excerpt": "sat-es: initial epochs of our approach \nsat-alpha: the momentum term $\\alpha$ of our approach \narch: the architecture of backbone model, e.g., resnet34/wrn34 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8322344214752327,
        0.9308282970303037,
        0.8791020669396662
      ],
      "excerpt": "beta: hyper-parameter $1/\\lambda$ in TRADES that controls the trade-off between natural accuracy and adversarial robustness \nsat-es: initial epochs of our approach \nsat-alpha: the momentum term $\\alpha$ of our approach \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9910805852800892,
        0.8201538031866321
      ],
      "excerpt": "We provide the checkpoint of our best performed model in Google Drive and compare its natural and robust accuracy with TRADES as below. \n|Attack (submitted by) \\ Method|TRADES|TRADES + SAT| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official implementation of the NeurIPS'2020 paper 'Self-Adaptive Training: beyond Empirical Risk Minimization'",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LayneH/self-adaptive-training/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Sat, 25 Dec 2021 10:07:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/LayneH/self-adaptive-training/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "LayneH/self-adaptive-training",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_sat_dd_parallel.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_sat.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_sat_validation_aug_off.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_ce_validation.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_ce_validation_aug_off.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_ce.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_ce_dd_parallel.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar100/run_sat_validation.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_sat_dd_parallel.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_sat.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_sat_validation_aug_off.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_trades.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_ce_validation.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_trades_sat.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_ce_validation_aug_off.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_ce.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_ce_dd_parallel.sh",
      "https://raw.githubusercontent.com/LayneH/self-adaptive-training/master/scripts/cifar10/run_sat_validation.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.833114516308531,
        0.883308246125201
      ],
      "excerpt": "  bash \n  $ bash scripts/cifar10/run_sat.sh [TRIAL_NAME] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531,
        0.883308246125201,
        0.883308246125201
      ],
      "excerpt": "  bash \n  $ bash scripts/cifar10/run_sat_dd_parallel.sh [TRIAL_NAME] \n  $ bash scripts/cifar10/run_ce_dd_parallel.sh [TRIAL_NAME] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531,
        0.883308246125201
      ],
      "excerpt": "  bash \n  $ bash scripts/cifar10/run_trades_sat.sh [TRIAL_NAME] \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8549661271585869
      ],
      "excerpt": "The main.py contains training and evaluation functions in standard training setting. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80441526998916
      ],
      "excerpt": "|ResNet-34          |75.77  |71.38  |62.69  |38.72  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.856302311064585
      ],
      "excerpt": "You can use the command as below to train the default model (i.e., ResNet-18) on CIFAR10 dataset with 16.67% uniform label noise injected (i.e., 15% label error rate): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9042534665813847
      ],
      "excerpt": "    <img src=\"images/model_dd.png\" width=\"450\"\\> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9042534665813847
      ],
      "excerpt": "    <img src=\"images/epoch_dd.png\" width=\"450\"\\> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8338911605790454
      ],
      "excerpt": "We provides our training scripts in directory scripts/cifar10. For a concrete example, we can use the command as below to train the default model (i.e., WRN34-10) on CIFAR10 dataset with PGD-10 attack ($\\epsilon$=0.031) to generate adversarial examples: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421632792482776
      ],
      "excerpt": "Evaluate robust WRN-34-10 models on CIFAR10 under PGD-20 attack: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639508289684766
      ],
      "excerpt": "  $ python pgd_attack.py --model-dir \"/path/to/checkpoints\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9042534665813847
      ],
      "excerpt": "    <img src=\"images/robust_acc.png\" width=\"450\"\\> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/LayneH/self-adaptive-training/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Layne\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Self-Adaptive Training",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "self-adaptive-training",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "LayneH",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LayneH/self-adaptive-training/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n- Python >= 3.6\r\n- PyTorch >= 1.0\r\n- CUDA\r\n- Numpy\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 110,
      "date": "Sat, 25 Dec 2021 10:07:19 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "computer-vision",
      "generalization",
      "overfitting",
      "label-noise",
      "adversarial-robustness"
    ],
    "technique": "GitHub API"
  }
}