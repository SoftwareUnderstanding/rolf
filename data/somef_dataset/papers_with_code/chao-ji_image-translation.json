{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.10593",
      "https://arxiv.org/abs/1703.10593"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* CycleGAN, [arxiv1703.10593](https://arxiv.org/abs/1703.10593)\n* [Official implementation of CycleGAN](https://junyanz.github.io/CycleGAN/)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9999069888778862
      ],
      "excerpt": "  CycleGAN architecture: Figure 3 of Zhu et al. 2017(https://arxiv.org/abs/1703.10593) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chao-ji/image-translation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-22T10:03:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-24T07:17:50Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8746871755153641
      ],
      "excerpt": "This repo documents my tensorflow implementation of CycleGAN for performing unpaired image-to-image translation (e.g. object transfiguration, style transfer). As shown in the diagram, it involves two pairs of Discriminator ($D_X$ and $D_Y$) and Generator ($G$ and $F$), where $D_X$ tries to distinguish real images in domain X from fake images in domain X, which are generated from source images in domain Y using $F$ (i.e. $F: Y->X$); likewise, $D_Y$ tries to distinguish real images in domain Y from fake images in domain Y, which are generated from source images in domain X using $G$ (i.e. $G: X->Y$). The goal is that  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9601573058927446
      ],
      "excerpt": "where N is number of image pairs to be fed to the model in one epoch (typically you can set it to the size of domain X or domain Y). \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chao-ji/image-translation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 14:53:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chao-ji/image-translation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "chao-ji/image-translation",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.947647272715347
      ],
      "excerpt": "git clone git@github.com:chao-ji/image-translation.git \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8852304805819528,
        0.8852304805819528,
        0.8895456601305671,
        0.8895456601305671
      ],
      "excerpt": "  <img src='g3doc/images/horse_zebra/horse.gif'> \n  <img src='g3doc/images/horse_zebra/horse2zebra.gif'> \n  <img src='g3doc/images/horse_zebra/zebra.gif', width=372> \n  <img src='g3doc/images/horse_zebra/zebra2horse.gif', width=372> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8042805663685296
      ],
      "excerpt": "  Translating an animated gif file of a running horse(zebra) into a running zebra(horse) using CycleGAN. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9001373101481486
      ],
      "excerpt": "  <img src='g3doc/images/cyclegan_arch.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python create_dataset.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8862230309887746,
        0.9246227682586091
      ],
      "excerpt": "To train the model, run \npython run_trainer.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824538996665318
      ],
      "excerpt": "The learning rate stays constant in first half of training epochs, and linearly decays to zero in the second half. Run python run_trainer.py --help for more info. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python run_inferencer.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274,
        0.936365702102274
      ],
      "excerpt": "  <img src='g3doc/images/horse_zebra/n02381460_1160.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02381460_4240.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02381460_4640.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02381460_5090.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02381460_8900.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02391049_1430.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02391049_3010.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02391049_400.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02391049_7860.jpg.png'> \n  <img src='g3doc/images/horse_zebra/n02391049_9680.jpg.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8437201915338118
      ],
      "excerpt": "The translated images as training progresses: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8852304805819528,
        0.8852304805819528
      ],
      "excerpt": "  <img src='g3doc/images/horse_zebra/horse2zebra_progress.gif'> \n  <img src='g3doc/images/horse_zebra/zebra2horse_progress.gif'> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chao-ji/image-translation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Unpaired Image to Image translation using CycleGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "image-translation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "chao-ji",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chao-ji/image-translation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 14:53:20 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gan",
      "generative-adversarial-network",
      "cyclegan",
      "image-translation",
      "object-transfiguration"
    ],
    "technique": "GitHub API"
  }
}