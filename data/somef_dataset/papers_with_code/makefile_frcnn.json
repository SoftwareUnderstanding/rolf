{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.06409",
      "https://arxiv.org/abs/1711.07264",
      "https://arxiv.org/abs/1712.00726",
      "https://arxiv.org/abs/1612.03144",
      "https://arxiv.org/abs/1703.06211",
      "https://arxiv.org/abs/1704.04503",
      "https://arxiv.org/abs/1703.06870",
      "https://arxiv.org/abs/1708.02002",
      "https://arxiv.org/abs/1710.05941",
      "https://arxiv.org/abs/1506.01497",
      "https://arxiv.org/abs/1408.5093",
      "https://arxiv.org/abs/1605.06409",
      "https://arxiv.org/abs/1703.06211",
      "https://arxiv.org/abs/1711.07264"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Caffe is released under the [BSD 2-Clause license](https://github.com/BVLC/caffe/blob/master/LICENSE).\nThe BAIR/BVLC reference models are released for unrestricted use.\n\nPlease cite the following papers in your publications if it helps your research:\n\n    @article{jia2014caffe,\n      Author = {Jia, Yangqing and Shelhamer, Evan and Donahue, Jeff and Karayev, Sergey and Long, Jonathan and Girshick, Ross and Guadarrama, Sergio and Darrell, Trevor},\n      Journal = {arXiv preprint arXiv:1408.5093},\n      Title = {Caffe: Convolutional Architecture for Fast Feature Embedding},\n      Year = {2014}\n    }\n    @inproceedings{girshick2015fast,\n      title={Fast R-CNN},\n      author={Girshick, Ross},\n      booktitle={International Conference on Computer Vision},\n      pages={1440--1448},\n      year={2015}\n    }\n    @inproceedings{ren2015faster,\n      title={Faster {R-CNN}: Towards real-time object detection with region proposal networks},\n      author={Ren, Shaoqing and He, Kaiming and Girshick, Ross and Sun, Jian},\n      booktitle={Neural Information Processing Systems},\n      pages={91--99},\n      year={2015}\n    }\n    @article{ren2017faster,\n      title={Faster {R-CNN}: Towards real-time object detection with region proposal networks},\n      author={Ren, Shaoqing and He, Kaiming and Girshick, Ross and Sun, Jian},\n      journal={IEEE Transactions on Pattern Analysis and Machine Intelligence},\n      volume={39},\n      number={6},\n      pages={1137--1149},\n      year={2017},\n      publisher={IEEE}\n    }\n    @article{dai16rfcn,\n        Author = {Jifeng Dai, Yi Li, Kaiming He, Jian Sun},\n        Title = {{R-FCN}: Object Detection via Region-based Fully Convolutional Networks},\n        Journal = {arXiv preprint arXiv:1605.06409},\n        Year = {2016}\n    }\n    @article{dai17dcn,\n        Author = {Jifeng Dai, Haozhi Qi, Yuwen Xiong, Yi Li, Guodong Zhang, Han Hu, Yichen Wei},\n        Title = {Deformable Convolutional Networks},\n        Journal = {arXiv preprint arXiv:1703.06211},\n        Year = {2017}\n    }\n    @article{\n        Author = {Navaneeth Bodla and Bharat Singh and Rama Chellappa and Larry S. Davis},\n        Title = {Soft-NMS -- Improving Object Detection With One Line of Code},\n        Booktitle = {Proceedings of the IEEE International Conference on Computer Vision},\n        Year = {2017}\n    }\n    @article{li2017light,\n      title={Light-Head R-CNN: In Defense of Two-Stage Object Detector},\n      author={Li, Zeming and Peng, Chao and Yu, Gang and Zhang, Xiangyu and Deng, Yangdong and Sun, Jian},\n      journal={arXiv preprint arXiv:1711.07264},\n      year={2017}\n    }\n    @inproceedings{cai18cascadercnn,\n      author = {Zhaowei Cai and Nuno Vasconcelos},\n      Title = {Cascade R-CNN: Delving into High Quality Object Detection},\n      booktitle = {CVPR},\n      Year  = {2018}\n    }\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cai18cascadercnn,\n  author = {Zhaowei Cai and Nuno Vasconcelos},\n  Title = {Cascade R-CNN: Delving into High Quality Object Detection},\n  booktitle = {CVPR},\n  Year  = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{li2017light,\n  title={Light-Head R-CNN: In Defense of Two-Stage Object Detector},\n  author={Li, Zeming and Peng, Chao and Yu, Gang and Zhang, Xiangyu and Deng, Yangdong and Sun, Jian},\n  journal={arXiv preprint arXiv:1711.07264},\n  year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{\n    Author = {Navaneeth Bodla and Bharat Singh and Rama Chellappa and Larry S. Davis},\n    Title = {Soft-NMS -- Improving Object Detection With One Line of Code},\n    Booktitle = {Proceedings of the IEEE International Conference on Computer Vision},\n    Year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{dai17dcn,\n    Author = {Jifeng Dai, Haozhi Qi, Yuwen Xiong, Yi Li, Guodong Zhang, Han Hu, Yichen Wei},\n    Title = {Deformable Convolutional Networks},\n    Journal = {arXiv preprint arXiv:1703.06211},\n    Year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{dai16rfcn,\n    Author = {Jifeng Dai, Yi Li, Kaiming He, Jian Sun},\n    Title = {{R-FCN}: Object Detection via Region-based Fully Convolutional Networks},\n    Journal = {arXiv preprint arXiv:1605.06409},\n    Year = {2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{ren2017faster,\n  title={Faster {R-CNN}: Towards real-time object detection with region proposal networks},\n  author={Ren, Shaoqing and He, Kaiming and Girshick, Ross and Sun, Jian},\n  journal={IEEE Transactions on Pattern Analysis and Machine Intelligence},\n  volume={39},\n  number={6},\n  pages={1137--1149},\n  year={2017},\n  publisher={IEEE}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{ren2015faster,\n  title={Faster {R-CNN}: Towards real-time object detection with region proposal networks},\n  author={Ren, Shaoqing and He, Kaiming and Girshick, Ross and Sun, Jian},\n  booktitle={Neural Information Processing Systems},\n  pages={91--99},\n  year={2015}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{girshick2015fast,\n  title={Fast R-CNN},\n  author={Girshick, Ross},\n  booktitle={International Conference on Computer Vision},\n  pages={1440--1448},\n  year={2015}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{jia2014caffe,\n  Author = {Jia, Yangqing and Shelhamer, Evan and Donahue, Jeff and Karayev, Sergey and Long, Jonathan and Girshick, Ross and Guadarrama, Sergio and Darrell, Trevor},\n  Journal = {arXiv preprint arXiv:1408.5093},\n  Title = {Caffe: Convolutional Architecture for Fast Feature Embedding},\n  Year = {2014}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9820318150322092
      ],
      "excerpt": "caffe/ACTION_REC Two-Stream Convolutional Networks for Action Recognition in Video \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/makefile/frcnn",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nIssues\nSpecific Caffe design and development issues, bugs, and feature requests are maintained by GitHub Issues.\nPlease do not post usage, installation, or modeling questions, or other requests for help to Issues.\nUse the caffe-users list instead. This helps developers maintain a clear, uncluttered, and efficient view of the state of Caffe.\nWhen reporting a bug, it's most helpful to provide the following information, where applicable:\n\nWhat steps reproduce the bug?\nCan you reproduce the bug using the latest master, compiled with the DEBUG make option?\nWhat hardware and operating system/distribution are you running?\nIf the bug is a crash, provide the backtrace (usually printed by Caffe; always obtainable with gdb).\n\nTry to give your issue a title that is succinct and specific. The devs will rename issues as needed to keep track of them.\nPull Requests\nCaffe welcomes all contributions.\nSee the contributing guide for details.\nBriefly: read commit by commit, a PR should tell a clean, compelling story of one improvement to Caffe. In particular:\n\nA PR should do one clear thing that obviously improves Caffe, and nothing more. Making many smaller PRs is better than making one large PR; review effort is superlinear in the amount of code involved.\nSimilarly, each commit should be a small, atomic change representing one step in development. PRs should be made of many commits where appropriate.\nPlease do rewrite PR history to be clean rather than chronological. Within-PR bugfixes, style cleanups, reversions, etc. should be squashed and should not appear in merged PR history.\nAnything nonobvious from the code should be explained in comments, commit messages, or the PR description, as appropriate.",
    "technique": "File Exploration"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributors\nCaffe is developed by a core set of BVLC members and the open-source community.\nWe thank all of our contributors!\nFor the detailed history of contributions of a given file, try\ngit blame file\n\nto see line-by-line credits and\ngit log --follow file\n\nto see the change log even across renames and rewrites.\nPlease refer to the acknowledgements on the Caffe site for further details.\nCopyright is held by the original contributor according to the versioning history; see LICENSE.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-29T03:34:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-26T11:47:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9929687135076979,
        0.9840848974886673,
        0.8439548054934712
      ],
      "excerpt": "The official Faster R-CNN code of NIPS 2015 paper (written in MATLAB) is available here. It is worth noticing that: \nThis repository contains a C++ reimplementation of the Python code(py-faster-rcnn), which is built on caffe. \nThis repository used code from caffe-faster-rcnn commit 8ba1d26 as base framework. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8909397255251736
      ],
      "excerpt": "because the regression value is normalized during training and we should recover it to obtain the final model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9653927638983482
      ],
      "excerpt": "Second Step of This Shell : Compare the results with the ground truth file and calculate the mAP. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9610048297931124
      ],
      "excerpt": "im_size_align: set to stride of last conv layer of FPN to avoid Deconv shape problem, such as 64, set to 0 to disable \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8196143603233533,
        0.8044589586410094
      ],
      "excerpt": "Scripts and prototxts for different models are listed in the examples/FRCNN \nMore details about the code in include and src directory: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.989026419372029,
        0.9548882007404716,
        0.9394449182630016,
        0.9394449182630016
      ],
      "excerpt": "caffe/FRCNN contains codes related to Faster R-CNN \ncaffe/RFCN for R-FCN \ncaffe/DeformConv for Deformable Conv \ncaffe/SSD for SSD \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.980154380750583
      ],
      "excerpt": "logger dir relates to logger tools \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9654447335302889
      ],
      "excerpt": "For synchronous with official caffe \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8040237224927606
      ],
      "excerpt": "Rebase the dev branch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Faster R-CNN / R-FCN :bulb: C++ version based on Caffe",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/makefile/frcnn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 77,
      "date": "Sun, 26 Dec 2021 18:34:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/makefile/frcnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "makefile/frcnn",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/02-fine-tuning.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/pascal-multilabel-with-datalayer.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/net_surgery.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/detection.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/01-learning-lenet.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/brewing-logreg.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/00-classification.ipynb",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/siamese/mnist_siamese.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/deploy_docs.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/build_docs.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/download_model_from_gist.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/upload_model_to_gist.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/gather_examples.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/install-python-deps.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/test.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/defaults.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/setup-venv.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/configure-make.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/configure.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/build.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/install-deps.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/scripts/travis/configure-cmake.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/python/ConvertData/convert.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/cifar100/create_cifar100.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/imagenet/create_imagenet.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/imagenet/resume_training.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/imagenet/train_caffenet.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/imagenet/make_imagenet_mean.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/YOLO/demo_yolov3.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/cifar10/create_cifar10.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/cifar10/train_quick.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/cifar10/train_full_sigmoid.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/cifar10/train_full_sigmoid_bn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/cifar10/train_full.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/convert_model.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/convert_frcnn_model.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/demo_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/fetch_imagenet_models.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/test_rpn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/merge_resnet.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/train_rpn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/rfcn-res50/test.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/rfcn-res50/train.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/fpn-res50/test.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/fpn-res50/train.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/res50/merge1.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/res50/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/res50/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/res50/restore_train.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/res101/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/res101/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/vgg16/restore.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/vgg16/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/vgg16/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/light-rfcn-res50/test.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/light-rfcn-res50/train.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/zf/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/FRCNN/zf/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_lenet_adam.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_lenet_consolidated.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_lenet_docker.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_mnist_autoencoder_adagrad.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_lenet_rmsprop.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/create_mnist.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_mnist_autoencoder_nesterov.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_lenet.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_mnist_autoencoder.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/mnist/train_mnist_autoencoder_adadelta.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/siamese/create_mnist_siamese.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/examples/siamese/train_mnist_siamese.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/tools/extra/parse_log.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/tools/extra/launch_resize_and_crop_images.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/Cifar10/GetCifar10Mat.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/python/eval.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/res152_merge_other/vgg19_pure_rois/loc_merge.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/res152_S2_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/res101_S1_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/googlenet_S2_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/vgg19_S1_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/res101_S2_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/googlenet_S1_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/res152_S1_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/convert_final_model.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/shell/vgg19_S2_test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/res152/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/res152/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/res101/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/res101/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/googlenet_v1/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/googlenet_v1/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/vgg19/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/two/vgg19/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/res152/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/res152/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/res101/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/res101/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/googlenet_v1/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/googlenet_v1/test_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/vgg19/train_frcnn.sh",
      "https://raw.githubusercontent.com/makefile/frcnn/master/matlab/FRCNN/For_LOC/eight/vgg19/test_frcnn.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- The list of training data is `examples/FRCNN/dataset/voc2007.trainval`.\n- The list of testing data is `examples/FRCNN/dataset/voc2007.trainval`.\n- Create symlinks for the PASCAL VOC dataset `ln -s $YOUR_VOCdevkit_Path $CAFFE_ROOT/VOCdevkit`.\n\nAs shown in VGG example `models/FRCNN/vgg16/train_val.proto`, the original pictures should appear at `$CAFFE_ROOT/VOCdevkit/VOC2007/JPEGImages/`. (Check window\\_data\\_param in FrcnnRoiData)\n\nIf you want to train Faster R-CNN on your own dataset, you may prepare custom dataset list.\nThe format is as below\n```\n#: image-id\nimage-name\nnumber of boxes\nlabel x1 y1 x2 y2 difficulty\n...\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository uses C++11 features, so make sure to use compiler that is compatible of C++11.\n\nTested on CUDA 8.0/9.2, CuDNN 7.0, NCCLv1[#286916a](https://github.com/NVIDIA/nccl/tree/286916a1a37ca1fe8cd43e280f5c42ec29569fc5).\n\nGCC v5.4.0/7.3.1, note that versions lower than v5 are not supported. \nPython 2.7 for python scripts.\n\n```shell\ncd $CAFFE_ROOT\ncp Makefile.config.example Makefile.config\n#: modify the content in Makefile.config to adapt your system\n#: if you like to use VisualDL to log losses, set USE_VISUALDL to 1,\n#: and cd src/logger && make\nmake -j7\n#: extra: 'py' for python interface of Caffe.\n#: extra: 'pyfrcnn' python wrapper of C++ api. You can use this for demo.\nmake pyfrcnn py\n```\n\nAll following steps, you should do these in the `$CAFFE_ROOT` path.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9131908589912703,
        0.8438228191149157,
        0.925194063462346,
        0.8725072114572151
      ],
      "excerpt": "git remote add caffe https://github.com/BVLC/caffe.git \ngit fetch caffe \ngit checkout master \ngit rebase caffe/master \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9132396647081804,
        0.9117941562816807,
        0.8587319953999646,
        0.906205107792291,
        0.8496825378134425
      ],
      "excerpt": "- git checkout dev \n- git rebase master  \n- git push -f origin dev \nCUB not found, when compile for GPU version, frcnn_proposal_layer.cu requires a head file &lt;cub/cub.cuh&gt;. CUB is library contained in the official Cuda Toolkit, usually can be found in /usr/local/cuda/include/thrust/system/cuda/detail/. You should add this path in your Makefile.config (try locate cub.cuh to find cub on your system) \nWhen Get error: RPC failed; result=22, HTTP code = 0, use git config http.postBuffer 524288000, increases git buffer to 500mb \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8544232864722802
      ],
      "excerpt": "sh examples/FRCNN/zf/train_frcnn.sh will start training process of voc2007 data using ZF model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8204172928363527,
        0.8402913709202968
      ],
      "excerpt": "- ZF pretrain model should be put into models/FRCNN/ as ZF.v2.caffemodel \nexamples/FRCNN/convert_model.py transform the parameters of bbox_pred layer by mean and stds values, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8334701324604721,
        0.9258542903414504
      ],
      "excerpt": "sh examples/FRCNN/zf/test_frcnn.sh the will evaluate the performance of voc2007 test data using the trained ZF model. \nFirst Step of This Shell : Test all voc-2007-test images and output results in a text file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8265863253471645
      ],
      "excerpt": "The program use config file named like config.json to set params. Special params need to be cared about: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8498192559076099
      ],
      "excerpt": "examples/YOLO for YOLOv3 inference, includes converter script and demo. pay attention to the Upsample layer usage. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/makefile/frcnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Cuda",
      "CMake",
      "MATLAB",
      "Shell",
      "Makefile",
      "C",
      "Objective-C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/makefile/frcnn/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2016 Wenzel Jakob &#119;&#101;&#110;&#122;&#101;&#108;&#46;&#106;&#97;&#107;&#111;&#98;&#64;&#101;&#112;&#102;&#108;&#46;&#99;&#104;, All rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its contributors\\n   may be used to endorse or promote products derived from this software\\n   without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nYou are under no obligation whatsoever to provide any bug fixes, patches, or\\nupgrades to the features, functionality or performance of the source code\\n(\"Enhancements\") to anyone; however, if you choose to make your Enhancements\\navailable either publicly, or directly to the author of this software, without\\nimposing a separate written license agreement for such Enhancements, then you\\nhereby grant the following license: a non-exclusive, royalty-free perpetual\\nlicense to install, use, modify, prepare derivative works, incorporate into\\nother computer software, distribute, and sublicense such enhancements or\\nderivative works thereof, in binary and source code form.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "5294](https://github.com/BVLC/caffe/pull/5294)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "frcnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "makefile",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/makefile/frcnn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 188,
      "date": "Sun, 26 Dec 2021 18:34:37 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "faster-rcnn-built-on-caffe",
      "fpn",
      "object-detection",
      "r-fcn",
      "deformable-convnets",
      "yolov3"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Using `sh example/FRCNN/demo_frcnn.sh`, the will process five pictures in the `examples/FRCNN/images`, and put results into `examples/FRCNN/results`.\n\nNote: You should prepare the trained caffemodel into `models/FRCNN`, such as `ZF_faster_rcnn_final.caffemodel` for ZF model.\n\n",
      "technique": "Header extraction"
    }
  ]
}