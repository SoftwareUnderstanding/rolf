{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1603.08511",
      "https://arxiv.org/abs/2011.06294",
      "https://arxiv.org/abs/1809.00219",
      "https://arxiv.org/abs/2011.06294"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{wang2018esrgan,\n    author = {Wang, Xintao and Yu, Ke and Wu, Shixiang and Gu, Jinjin and Liu, Yihao and Dong, Chao and Qiao, Yu and Loy, Chen Change},\n    title = {ESRGAN: Enhanced super-resolution generative adversarial networks},\n    booktitle = {The European Conference on Computer Vision Workshops (ECCVW)},\n    month = {September},\n    year = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{huang2020rife,\n  title={RIFE: Real-Time Intermediate Flow Estimation \n               for Video Frame Interpolation},\n  author={Huang, Zhewei and Zhang, Tianyuan and Heng, \n          Wen and Shi, Boxin and Zhou, Shuchang},\n  journal={arXiv preprint arXiv:2011.06294},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{zhang2017real,\n  title={Real-Time User-Guided Image Colorization with Learned Deep Priors},\n  author={Zhang, Richard and Zhu, Jun-Yan and Isola, \n          Phillip and Geng, Xinyang and Lin, Angela S and Yu, \n          Tianhe and Efros, Alexei A},\n  journal={ACM Transactions on Graphics (TOG)},\n  volume={9},\n  number={4},\n  year={2017},\n  publisher={ACM}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{zhang2016colorful,\n  title={Colorful Image Colorization},\n  author={Zhang, Richard and Isola, Phillip and Efros, Alexei A},\n  booktitle={ECCV},\n  year={2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8182366095634694
      ],
      "excerpt": "MediaVision contains a number of modules for visual media processing and reconstruction. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.871394297027077
      ],
      "excerpt": "Performs Video Frame Interpolation (VFI) to increase a video's FPS by generating intermediate \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/amogh7joshi/media-vision",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-07T20:21:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-05T00:43:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.961621383063927,
        0.8485923130512658,
        0.9478574876086063,
        0.9846120656967228
      ],
      "excerpt": "colorizing, upscaling, interpolating, and more. This project makes use of entirely open-source papers and  \ncode implementations, which are re-implemented, and the neural networks have pre-trained weights loaded in  \n(the toolbox is implemented almost exclusively in PyTorch). \nNote: While the goal of MediaVision is to try to reconstruct media, all features that are added to images \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9438050593609613
      ],
      "excerpt": "MediaVision contains a number of modules for visual media processing and reconstruction. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9614921180274166,
        0.8848690803099633,
        0.8673719362489787,
        0.8230025430744727,
        0.9931393002247663,
        0.8059080250741449
      ],
      "excerpt": "Creates a colorized version of a grayscale image, trying to emulate traditional colors and  \nemphasize vibrancy and realism. In essence, the input image will be colorized based on the neural network's \nunderstanding of modern and historical colors. \nCurrently, the existing module makes use of the Colorful Image Colorization  \napproach, with a direct feed-forward CNN (which contains some branches), and the code is sourced from the  \nofficial implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8405305597351931,
        0.8837976677875913,
        0.9316328459267443,
        0.8059080250741449
      ],
      "excerpt": "frames in between the existing ones to increase fluidity and smoothness. \nCurrently, the existing module makes use of the RIFE approach, with \nintermediate flow estimation and three semi-sequential models, and the code is sourced from the  \nofficial implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9700397131664796,
        0.8739523319116725
      ],
      "excerpt": "using Residual-in-Residual Dense Blocks and using features before activation, and the code is sourced from \nthe official implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\ud83c\udfa5 Visual media restoration using deep-learning-based colorization, upscaling, interpolation, and more.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/amogh7joshi/media-vision/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 12:59:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/amogh7joshi/media-vision/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "amogh7joshi/media-vision",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Currently, MediaVision is only available as a toolkit downloadable from source (though both a Colab implementation\nand a pip package are in development). To install, it, first clone the repository:\n\n```shell\ngit clone https://github.com/amogh7joshi/media-vision.git\n```\n\nThen, you will need to download the trained weights files for certain modules which have their \nnetworks with pretrained weights in Google Drive. Download them from the following list:\n\n1. **Interpolation** (RIFE): Follow the instructions at [https://github.com/hzwer/arXiv2020-RIFE](https://github.com/hzwer/arXiv2020-RIFE).\n2. **Upscaling** (ESRGAN): Follow the instructions at [https://github.com/xinntao/ESRGAN](https://github.com/xinntao/ESRGAN).\n\nAll of the pretrained weights should be placed in the `mediavision.models` directory. After you have \ndone this, enter the top-level directory and execute the following: \n\n```shell\nmake build\n```\n \nThe provided Makefile will configure the `models` directory as well as the `mediavision.weights` module\nfor easy usage, in addition to installing all system requirements.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/amogh7joshi/media-vision/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MediaVision",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "media-vision",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "amogh7joshi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/amogh7joshi/media-vision/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 12:59:31 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "colorization",
      "interpolation",
      "upscaling",
      "super-resolution",
      "computer-vision",
      "neural-networks",
      "deep-learning",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}