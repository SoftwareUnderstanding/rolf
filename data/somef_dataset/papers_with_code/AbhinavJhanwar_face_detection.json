{
  "citation": [
    {
      "confidence": [
        0.9977994744046882,
        0.8656070203791273,
        0.9896889332668685
      ],
      "excerpt": "Paper- https://arxiv.org/pdf/1804.02767.pdf \nRepo- https://github.com/sthanhng/yoloface \nReferences- https://towardsdatascience.com/review-yolov3-you-only-look-once-object-detection-eab75d7a1ba6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9557878302959689
      ],
      "excerpt": "Repo- https://github.com/LZQthePlane/Face-detection-base-on-ResnetSSD \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AbhinavJhanwar/face_detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-26T05:47:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-22T10:16:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9397077163566282,
        0.9028813843167942
      ],
      "excerpt": "Methodology/framework- It basically uses darket-53 pretrained on imagenet dataset as feature extractor and then another 53 layers for detection/classification. Detections are performed on 3 different scales like SSD to capture all the objects of various sizes. Here object classification is basically done through logistic regression and not softmax so that objects like person/boy are both detected \nOutput- Shape of the detection kernel is 1 x 1 x (B x (5 + C) ). Here B is the number of bounding boxes a cell on the feature map can predict, \"5\" is for the 4 bounding box attributes and one object confidence, and C is the number of classes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Various techniques to understand face detection",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AbhinavJhanwar/face_detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 04:56:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AbhinavJhanwar/face_detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AbhinavJhanwar/face_detection",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.932451947899597
      ],
      "excerpt": "Repo- https://github.com/sthanhng/yoloface \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8239221079513989
      ],
      "excerpt": "Repo- https://github.com/LZQthePlane/Face-detection-base-on-ResnetSSD \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AbhinavJhanwar/face_detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "1. YOLO V3",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "face_detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AbhinavJhanwar",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AbhinavJhanwar/face_detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 04:56:24 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1) Download weights from the link in the following repository and save in folder yolo - https://github.com/sthanhng/yoloface\n2) modify config.conf file as following-\n* **model**- yolov3\n* **source_type**- webcam or video or image\n* **source_path**- camera id if using 'webcam' or video/image path otherwise\n* **output_dir**- directory to save detected video/image\n3) run python face_detection.py\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1) Download weights from the following repository and save in folder resnet - https://github.com/LZQthePlane/Face-detection-base-on-ResnetSSD\n2) modify config.conf file as following-\n* **model**- resnet\n* **source_type**- webcam or video or image\n* **source_path**- camera id if using 'webcam' or video/image path otherwise\n* **output_dir**- directory to save detected video/image\n3) run python face_detection.py\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1) Install the required libraries-<br>\n\n**for ubuntu-**\n```\npip install face_recogntion\npip install -r requirements.txt\n```\n**for windows-**\n```\npip install dlib>19.7\npip install face_recognition\npip install -r requirements.txt\n```\n2) modify config.conf file as following-\n* **model**- dlib_hog or dlib_cnn\n* **source_type**- webcam or video or image\n* **source_path**- camera id if using 'webcam' or video/image path otherwise\n* **output_dir**- directory to save detected video/image\n3) run python face_detection.py\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1) install the required libraries-\n```\npip install -r requirements.txt\n```\n2) modify config.conf file as following-\n* **model**- opencv\n* **source_type**- webcam or video or image\n* **source_path**- camera id if using 'webcam' or video/image path otherwise\n* **output_dir**- directory to save detected video/image\n3) run python face_detection.py\n\n**Some interesting findings-**<br>\ncheck the prediction on Abhinav2.png with resnet and yolo. it will definitely surprise you.\n",
      "technique": "Header extraction"
    }
  ]
}