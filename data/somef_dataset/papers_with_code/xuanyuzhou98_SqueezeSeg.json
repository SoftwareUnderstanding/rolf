{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.07368. If you find this work useful for your research, please consider citing:\n\n    @article{wu2017squeezeseg,\n        title={Squeezeseg: Convolutional neural nets with recurrent crf for real-time road-object segmentation from 3d lidar point cloud},\n        author={Wu, Bichen and Wan, Alvin and Yue, Xiangyu and Keutzer, Kurt},\n        journal={arXiv preprint arXiv:1710.07368},\n        year={2017}\n    }\n\n## License\n**SqueezeSeg** is released under the BSD license (See [LICENSE](https://github.com/BichenWuUCB/SqueezeSeg/blob/master/LICENSE",
      "https://arxiv.org/abs/1710.07368"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{wu2017squeezeseg,\n    title={Squeezeseg: Convolutional neural nets with recurrent crf for real-time road-object segmentation from 3d lidar point cloud},\n    author={Wu, Bichen and Wan, Alvin and Yue, Xiangyu and Keutzer, Kurt},\n    journal={arXiv preprint arXiv:1710.07368},\n    year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8182871566850202
      ],
      "excerpt": "By Bichen Wu, Alvin Wan, Xiangyu Yue, Kurt Keutzer (UC Berkeley) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999999858250989
      ],
      "excerpt": "Please refer to our video for a high level introduction of this work: https://youtu.be/Xyn5Zd3lm6s. For more details, please refer to our paper: https://arxiv.org/abs/1710.07368. If you find this work useful for your research, please consider citing: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9995453681250587,
        0.9999537354568557,
        0.9960965048981569
      ],
      "excerpt": "    author={Wu, Bichen and Wan, Alvin and Yue, Xiangyu and Keutzer, Kurt}, \n    journal={arXiv preprint arXiv:1710.07368}, \n    year={2017} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xuanyuzhou98/SqueezeSeg",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-07T03:46:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-07T03:46:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9791267433825853
      ],
      "excerpt": "This repository contains a tensorflow implementation of SqueezeSeg, a convolutional neural network model for LiDAR segmentation. A demonstration of SqueezeSeg can be found below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8149978178668508
      ],
      "excerpt": "Please refer to our video for a high level introduction of this work: https://youtu.be/Xyn5Zd3lm6s. For more details, please refer to our paper: https://arxiv.org/abs/1710.07368. If you find this work useful for your research, please consider citing: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.958394099370605
      ],
      "excerpt": "First, download training and validation data (3.9 GB) from this link. This dataset contains LiDAR point-cloud projected to a 2D spherical surface. Refer to our paper for details of the data conversion procedure. This dataset is converted from KITTI raw dataset and is distrubited under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of SqueezeSeg, convolutional neural networks for LiDAR point clout segmentation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xuanyuzhou98/SqueezeSeg/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 07:35:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xuanyuzhou98/SqueezeSeg/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "xuanyuzhou98/SqueezeSeg",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/xuanyuzhou98/SqueezeSeg/master/scripts/train.sh",
      "https://raw.githubusercontent.com/xuanyuzhou98/SqueezeSeg/master/scripts/eval.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The instructions are tested on Ubuntu 16.04 with python 2.7 and tensorflow 1.0 with GPU support. \n- Clone the SqueezeSeg repository:\n    ```Shell\n    git clone https://github.com/BichenWuUCB/SqueezeSeg.git\n    ```\n    We name the root directory as `$SQSG_ROOT`.\n\n- Setup virtual environment:\n    1. By default we use Python2.7. Create the virtual environment\n        ```Shell\n        virtualenv env\n        ```\n\n    2. Activate the virtual environment\n        ```Shell\n        source env/bin/activate\n        ```\n\n- Use pip to install required Python packages:\n    ```Shell\n    pip install -r requirements.txt\n    ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8251085960358794
      ],
      "excerpt": "    <img src=\"https://github.com/BichenWuUCB/SqueezeSeg/raw/master/readme/pr_0005.gif\" width=\"600\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "    cd $SQSG_ROOT/data/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.9617895419859244
      ],
      "excerpt": "    cd $SQSG_ROOT/ \n    ./scripts/train.sh -gpu 0 -image_set train -log_dir ./log/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.8407244419504538
      ],
      "excerpt": "    cd $SQSG_ROOT/ \n    ./scripts/eval.sh -gpu 1 -image_set val -log_dir ./log/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8205133998699372,
        0.8276077736867256
      ],
      "excerpt": "    ./scripts/train.sh -gpu 0 -image_set train -log_dir ./log/ \n   Training logs and model checkpoints will be saved in the log directory. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xuanyuzhou98/SqueezeSeg/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 2-Clause \"Simplified\" License",
      "url": "https://api.github.com/licenses/bsd-2-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 2-Clause License\\n\\nCopyright (c) 2017, Bichen Wu\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# _SqueezeSeg_: Convolutional Neural Nets with Recurrent CRF for Real-Time Road-Object Segmentation from 3D LiDAR Point Cloud",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SqueezeSeg",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "xuanyuzhou98",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xuanyuzhou98/SqueezeSeg/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 07:35:48 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- To run the demo script:\n  ```Shell\n  cd $SQSG_ROOT/\n  python ./src/demo.py\n  ```\n  If the installation is correct, the detector should write the detection results as well as 2D label maps to `$SQSG_ROOT/data/samples_out`. Here are examples of the output label map overlaped with the projected LiDAR signal. Green masks indicate clusters corresponding to cars and blue masks indicate cyclists.\n  <p align=\"center\">\n    <img src=\"https://github.com/BichenWuUCB/SqueezeSeg/raw/master/readme/0001.gif\" width=\"600\" />\n  </p>\n\n\n",
      "technique": "Header extraction"
    }
  ]
}