{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.00332",
      "https://arxiv.org/abs/1812.00332",
      "https://arxiv.org/abs/1908.09791"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{\n  cai2018proxylessnas,\n  title={Proxyless{NAS}: Direct Neural Architecture Search on Target Task and Hardware},\n  author={Han Cai and Ligeng Zhu and Song Han},\n  booktitle={International Conference on Learning Representations},\n  year={2019},\n  url={https://arxiv.org/pdf/1812.00332.pdf},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9628888907377067,
        0.9914232422701312
      ],
      "excerpt": "First place in the Visual Wake Words Challenge, TF-lite track, @CVPR 2019 \nThird place in the Low Power Image Recognition Challenge (LPIRC), classification track, @CVPR 2019 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8423287514720121,
        0.9313675897188715
      ],
      "excerpt": "AMC: AutoML for Model Compression and Acceleration on Mobile Devices (ECCV\u201918) \nHAQ: Hardware-Aware Automated Quantization  (CVPR\u201919, oral) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mit-han-lab/proxylessnas",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-01T23:09:31Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T13:46:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9166100267757464,
        0.8201583557600293
      ],
      "excerpt": "Without any proxy, directly and efficiently search neural network architectures on your target task and hardware!  \nNow, proxylessnas is on PyTorch Hub. You can load it with only two lines! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8353497205335925
      ],
      "excerpt": "target_platform = \"proxyless_cpu\" #: proxyless_gpu, proxyless_mobile, proxyless_mobile14 are also avaliable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9571345502582065
      ],
      "excerpt": "| MNasNet(our impl)    | 74.0     | 91.8     | 6.1ms   |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8780630277585008
      ],
      "excerpt": "    <th> ProxylessNAS(GPU) is 3.1% better than MobilenetV2 with 20% faster. </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799732885111695,
        0.9920417135636139
      ],
      "excerpt": "People used to deploy one model to all platforms, but this is not good. To fully exploit the efficiency, we should specialize architectures for each platform. \nWe provide a visualization of search process. Please refer to our paper for more results. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8380524480843431,
        0.8790917361899032
      ],
      "excerpt": "proxyless_nas_tensorflow: pretrained models for tensorflow. \nproxyless_nas: pretrained models for PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312700527700516
      ],
      "excerpt": "AMC: AutoML for Model Compression and Acceleration on Mobile Devices (ECCV\u201918) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[ICLR 2019] ProxylessNAS: Direct Neural Architecture Search on Target Task and Hardware",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mit-han-lab/ProxylessNAS/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 267,
      "date": "Thu, 23 Dec 2021 19:26:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mit-han-lab/proxylessnas/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mit-han-lab/proxylessnas",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9748709027320682
      ],
      "excerpt": "| ProxylessNAS (GPU)   | 75.1     | 92.5     | 5.1ms   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.829261375771228
      ],
      "excerpt": "`python eval_tf.py --path 'Your path to imagent' --arch proxyless_cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8961293510234201
      ],
      "excerpt": "proxyless_nas: pretrained models for PyTorch. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8457769550803803
      ],
      "excerpt": "    <img src=\"https://file.lzhu.me/projects/proxylessNAS/figures/proxyless_bar.png\" width=\"80%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553090291343061
      ],
      "excerpt": "    <img src=\"https://file.lzhu.me/projects/proxylessNAS/figures/proxyless_vs_mobilenet.png\" width=\"100%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8293359713396141
      ],
      "excerpt": "    <img src=\"https://file.lzhu.me/projects/proxylessNAS/figures/proxyless_vs_mobilenet.png\" width=\"50%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8975416731536126,
        0.8090133227429291
      ],
      "excerpt": "`python eval.py -d cifar10 \n`python eval_tf.py --path 'Your path to imagent' --arch proxyless_cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309766673400978
      ],
      "excerpt": "proxyless_nas_tensorflow: pretrained models for tensorflow. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mit-han-lab/proxylessnas/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Han Cai\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ProxylessNAS: Direct Neural Architecture Search on Target Task and Hardware [[arXiv]](https://arxiv.org/abs/1812.00332) [[Poster]](https://file.lzhu.me/projects/proxylessNAS/figures/ProxylessNAS_iclr_poster_final.pdf)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "proxylessnas",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mit-han-lab",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mit-han-lab/proxylessnas/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1289,
      "date": "Thu, 23 Dec 2021 19:26:18 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "automl",
      "specialization",
      "hardware-aware",
      "acceleration",
      "on-device-ai",
      "efficient-model"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Use\n    ```python\n    #: pytorch \n    from proxyless_nas import proxyless_cpu, proxyless_gpu, proxyless_mobile, proxyless_mobile_14, proxyless_cifar\n    net = proxyless_cpu(pretrained=True) #: Yes, we provide pre-trained models!\n    ```\n    ```python\n    #: tensorflow\n    from proxyless_nas_tensorflow import proxyless_cpu, proxyless_gpu, proxyless_mobile, proxyless_mobile_14\n    tf_net = proxyless_cpu(pretrained=True)\n    ```\n\n    If the above scripts failed to download, you download it manually from [Google Drive](https://drive.google.com/drive/folders/1qIaDsT95dKgrgaJk-KOMu6v9NLROv2tz?usp=sharing) and put them under  `$HOME/.torch/proxyless_nas/`.\n\n* Evaluate\n\n    `python eval.py --path 'Your path to imagent' --arch proxyless_cpu  ",
      "technique": "Header extraction"
    }
  ]
}