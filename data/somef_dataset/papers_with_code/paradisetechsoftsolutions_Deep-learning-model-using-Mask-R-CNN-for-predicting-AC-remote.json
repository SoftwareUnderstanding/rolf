{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* https://github.com/matterport/Mask_RCNN\n* https://arxiv.org/pdf/1703.06870.pdf  \n* https://github.com/aleju/imgaug\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "\u2502\u00a0\u00a0     \u251c\u2500\u2500 10.webp \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paradisetechsoftsolutions/Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-25T11:57:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-29T09:47:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9780230897085437,
        0.9685328321529815,
        0.8641691982789668
      ],
      "excerpt": "Mask R-CNN is a simple, flexible, and general framework for object instance segmentation. Mask R-CNN, extends Faster R-CNN by adding a branch for predicting an object mask in parallel with the existing branch for bounding box recognition. It is capable of separating different objects in a image or a video. Research paper for Mask R-CNN can be found    here \nFaster RCNN was not designed for pixel-to-pixel alignment between network inputs and outputs. Faster R-CNN is advanced by learning the attention mechanism with a Region Proposal Network (RPN). Faster R-CNN produce two outputs for each candidate object that is a class label and a bounding-box offset whereas Mask R-CNN outputs object mask along with two. The additional mask output is distinct from the class and box outputs, requiring extraction of much finer spatial layout of an object. \nA sample image of masked object from our dataset is shown below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9587982976021062
      ],
      "excerpt": "Feature extraction - Feature extraction is done by fast rcnn part of the faster rcnn using RoI. These features are used for the faster rcnn. In the developed model coco weights are used and model is trained head layer with the custom class A.C Remote  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9304308671894282
      ],
      "excerpt": "Mask prediction - FCN which is placed after Faster RCNN is used for mask prediction    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8542530940520421
      ],
      "excerpt": "Dataset - AC Remote dataset is used for creating the customized model.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Deep learning model using Mask R-CNN for predicting AC remote",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paradisetechsoftsolutions/Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 03:46:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/paradisetechsoftsolutions/Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "paradisetechsoftsolutions/Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8096422022825122
      ],
      "excerpt": "\u251c\u2500\u2500 download.webp \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9256825497351546
      ],
      "excerpt": "Step1: Download dataset of ac remote. One can use Download All Images (Google Chrome extension). One can add it using the link   \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 custom_training.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u2502\u00a0  \u2502\u2500\u2500 7.jpg \n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 8.jpg \n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 9.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579
      ],
      "excerpt": "\u2502\u00a0\u00a0     \u251c\u2500\u2500 1.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810870454768102
      ],
      "excerpt": "\u251c\u2500\u2500 download.webp \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 maskrcnn_predict_for_images.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8759955720239709
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.91892912920148,
        0.9336801098518991,
        0.9586232994076559
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.py \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 parallel_model.py \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 utils.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 prediction_for_video.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u2514\u2500\u2500 video_mask.py   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8786475459718622
      ],
      "excerpt": "Training - Training of the images is done using GPU RTX and config used for training are given in the custom_training.py file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8023285612696673,
        0.8082422529389462
      ],
      "excerpt": "Step3: On Success for the Step2, one will get the json files for both training and validation dataset. Keep them in their respective folder.   \nStep4: Now it is the time for the training the model. Trained model will be saved in the log directory which is created in the root directory. Log directory will get automatically created.   \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/paradisetechsoftsolutions/Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "paradisetechsoftsolutions",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paradisetechsoftsolutions/Deep-learning-model-using-Mask-R-CNN-for-predicting-AC-remote/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 03:46:23 GMT"
    },
    "technique": "GitHub API"
  }
}