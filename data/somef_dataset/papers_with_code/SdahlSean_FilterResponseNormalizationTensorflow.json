{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.09737 a normalization method for convolutional neural networks is presented (feature response normalization (FRN",
      "https://arxiv.org/abs/1911.09737 (FRN paper"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "https://arxiv.org/abs/1911.09737 (FRN paper)\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SdahlSean/FilterResponseNormalizationTensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-15T15:03:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-29T19:47:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8980787081701885
      ],
      "excerpt": "For using the class created for fitting a <code>tf.keras</code> model there are two options: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8984338407699076
      ],
      "excerpt": "For that the file module.py should be inserted into the project folder in which the executed file lies and imported at the top of the executed file:<br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9701037701337296,
        0.8477678735851494,
        0.8656386890433482,
        0.9347317428755382,
        0.8656386890433482,
        0.9259987793200162
      ],
      "excerpt": "#: creating and defining the tf.keras model \n  model = k.models.Sequential() \n  [...] #: using the model.add([...]) function new layers can be added to the model \n  model.add(FRN(...))  #: adding an FRN layer (only parameter that can be fed in is eps) \n  [...] #: using the model.add([...]) function new layers can be added to the model \n[...] #: more elements such as loading data and fitting the model should lekely be included \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository implements a normalization method useful for CNNs as described in the paper https://arxiv.org/abs/1911.09737. This normalization method is especially successful for low batch size training, enabling models to be trained faster, without losing accuracy. The here implemented class can be used as a layer for any tf.keras model.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SdahlSean/FilterResponseNormalizationTensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 15:48:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SdahlSean/FilterResponseNormalizationTensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SdahlSean/FilterResponseNormalizationTensorflow",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The python files were created for python version 3.7, although it might also work for past or future versions.\nTo use this class, some python modules need to be installed first. Using <code>pip</code> the packages can be installed by either typing \n<code>pip install -r requirements.txt</code>\nin terminal, if the requirements.txt file exists in the current working directory or by typing\n<code>pip install tensorflow==2.0.0</code>\ninto the terminal (!python and pip need to be installed first, the recommended version for pip is at least 19.3.1). The versions of the modules listed above were used at the time of the creation of these files but future versions of these modules might alos work. Another way to install these packages is by using <code>conda</code>.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8575331308539821,
        0.8830585264798311
      ],
      "excerpt": "In the following python code the following elements should be included:<br/> \n  #: load the required modules \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9010195194286076
      ],
      "excerpt": "  import tensorflow.keras as k \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065306467441384
      ],
      "excerpt": "model.save('path/to/model/name.h5') #: save the model (optional but useful) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SdahlSean/FilterResponseNormalizationTensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "FilterResponseNormalizationTensorflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FilterResponseNormalizationTensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SdahlSean",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SdahlSean/FilterResponseNormalizationTensorflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 15:48:02 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In the paper https://arxiv.org/abs/1911.09737 a normalization method for convolutional neural networks is presented (feature response normalization (FRN)). This repository implements this method for the tensorflow deep learning framework. According to the results in the above mentioned paper this normalization method is successful independent of batch size, outperforming other normaization mehods for layers in convolutional neural networks such as batch normalization.\n",
      "technique": "Header extraction"
    }
  ]
}