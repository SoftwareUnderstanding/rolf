{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2002.05709\n\nhttps://sthalles.github.io/simple-self-supervised-learning/"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ushmabhatt/Contrastive-Learning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-12T18:12:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-30T18:11:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9973324284203648,
        0.9557046469120407,
        0.8979411005071259,
        0.908925214220865
      ],
      "excerpt": "Here, we test the concept of contrastive learning using SimCLR on CIFAR-10 dataset. All of the data available is not labelled and it is very expensive to annotate data. SimCLR which is an unsupervised machine learning technique learns the representations by identifying the similarities and differentiating between the dissimilarities in the batch of images. At an elementary level using contrastive learning SimCLR maximizes agreement among two representations of images.  \nKeras and Tensorflow libraries in python formed the skeleton for implementation of the SimCLR algorithm. The various steps to implement the SimCLR algorithm are as follows:  \n1.  Data Augmentation \ni.  Random Crop and Resize  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9905509690557348
      ],
      "excerpt": "Note: Since, we apply 2 different functions of augmentations on the same image, we take a sample of 10 images, we get the output as 2*10 augmented images in a batch. In this way we form pairs of images and to maximize the number of positive-negative matching, we pair each image with another class image. Unfortunately, while implementing the setup we were a hit by an error related to eager execution of the program. In order to sample and batch, tensorflow has inbuilt functions repeat, shuffle and batch but they are available only when the program has a graph for the flow of control which is not possible in eager execution. For future work there has to be a method to control the switching between the normal tensor implementation and eager execution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.834510351086611,
        0.9579864886440298
      ],
      "excerpt": "We find distance/similarity between the pair of images using cosine similarity. In this way, we will reduce the distance in positive pair and increase the distance in negative pair. Finally, we have the neural network. \nNeural Network Encoder:  We used TensorFlow\u2019s inbuilt method of defining ResNet50 as a base encoder. The augmented CIFAR dataset is passed on to ResNet50 as an input.  The output is a high dimensional vector which we then apply a projection head on a Multilayer perceptron with 2 dense layers. The layers have same number of dimensions and a hidden layer has a non-linear activation function - ReLU.  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ushmabhatt/Contrastive-Learning/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sun, 26 Dec 2021 15:40:35 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ushmabhatt/Contrastive-Learning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ushmabhatt/Contrastive-Learning",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ushmabhatt/Contrastive-Learning/master/finalsimclr_resnet.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ushmabhatt/Contrastive-Learning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contrastive-Learning",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contrastive-Learning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ushmabhatt",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ushmabhatt/Contrastive-Learning/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 15:40:35 GMT"
    },
    "technique": "GitHub API"
  }
}