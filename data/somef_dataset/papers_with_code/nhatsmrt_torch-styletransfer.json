{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06868\n\n2. Art images are from WikiArt.org. All images are protected by copyright and utilize the images only for the purposes of data mining, which constitutes a form of fair use.\nData can be download from: https://www.kaggle.com/c/painter-by-numbers/data\n\n3. COCO dataset: http://cocodataset.org/#download\nLicensed under a Creative Commons Attribution 4.0 License.\n\n4. All test images are either from the COCO dataset, except for the cat photos, which are from:\n\nhttps://www.pexels.com/photo/cat-whiskers-kitty-tabby-20787\n<br />\nhttps://pxhere.com/en/photo/997773\n\n5. Other AdaIN implementations that are very helpful for my own attempt:\n\nhttps://github.com/naoto0804/pytorch-AdaIN\n<br />\nhttps://github.com/xunhuang1995/AdaIN-style\n\n6. The fastai library and lessons have been really useful (I adapted some of the elements of fastai library in my nn-toolbox repository and here"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nhatsmrt/torch-styletransfer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-09T21:31:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T03:06:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Implementation of a neural network that can transfer the style of an arbitrary image to another photo.\n<br />\nMuch of the code (e.g the layers) is implemented in my [neural network toolbox](https://github.com/nhatsmrt/nn-toolbox/tree/experimental). The training procedure can be found [here](https://github.com/nhatsmrt/nn-toolbox/blob/experimental/nntoolbox/vision/learner/style.py). This repository contains only the testing code. To replicate my work, please also clone the experimental branch of my nntoolbox repository.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.969369737880661,
        0.8104976140391562
      ],
      "excerpt": "It seems to work pretty well on resized COCO data (even on untrained/unseen photos), but does not generalize that well too random photos. I suspect the problems lie in resolution discrepancy. Or maybe I just haven't trained for long enough (although in my experiment the quality of the images seem to degrade as I trained more and more). \nI decided to download the entire wikiart dataset, and use the same preprocessing for both image in the pair (i.e resize to 512 for the smaller side then random crop a square patch of size 256). I also increased the style weight to 10.0, reduced the learning rate to 1e-4 and used a multiplicative learning rate decay. Here are some results after training for 15598 iterations: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8646505462895978
      ],
      "excerpt": "Art images are from WikiArt.org. All images are protected by copyright and utilize the images only for the purposes of data mining, which constitutes a form of fair use. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9007253678643359
      ],
      "excerpt": "Other AdaIN implementations that are very helpful for my own attempt: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementing style transfer using pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nhatsmrt/torch-styletransfer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 18:13:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nhatsmrt/torch-styletransfer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nhatsmrt/torch-styletransfer",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8265439560603007
      ],
      "excerpt": "COCO dataset: http://cocodataset.org/#download \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9085480371338103
      ],
      "excerpt": "<img src=\"demo/PixelShuffle/content_3.png\" alt=\"content\" width=\"175\" /> <img src=\"demo/PixelShuffle/style_3.png\" alt=\"style\" width=\"175\" /> <img src=\"demo/PixelShuffle/styled_3.png\" alt=\"styled\" width=\"175\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9085480371338103
      ],
      "excerpt": "<img src=\"demo/PixelShuffle/content_1.png\" alt=\"content\" width=\"175\" /> <img src=\"demo/PixelShuffle/style_1.png\" alt=\"style\" width=\"175\" /> <img src=\"demo/PixelShuffle/styled_1.png\" alt=\"styled\" width=\"175\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168328163758641
      ],
      "excerpt": "<img src=\"demo/PixelShuffle/less_successful.png\" alt=\"styled\" width=\"750\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168328163758641,
        0.9168328163758641,
        0.9168328163758641,
        0.9168328163758641
      ],
      "excerpt": "<img src=\"demo/version_2/1.png\" alt=\"styled\" width=\"750\" /> \n<img src=\"demo/version_2/2.png\" alt=\"styled\" width=\"750\" /> \n<img src=\"demo/version_2/3.png\" alt=\"styled\" width=\"750\" /> \n<img src=\"demo/version_2/4.png\" alt=\"styled\" width=\"750\" /> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nhatsmrt/torch-styletransfer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Neural Style Transfer with Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "torch-styletransfer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nhatsmrt",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nhatsmrt/torch-styletransfer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 18:13:43 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "pytorch",
      "computer-vision",
      "style-transfer"
    ],
    "technique": "GitHub API"
  }
}