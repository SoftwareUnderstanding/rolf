{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "A large part of the code is borrowed from [ifzhang/FairMOT](https://github.com/ifzhang/FairMOT) and [koehlp/wda_tracker](https://github.com/koehlp/wda_tracker). The dataset used is [schuar-iosb/mta-dataset](https://github.com/schuar-iosb/mta-dataset)\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "            <th colspan=5>Multi-Camera</th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "            <td>37.3</td> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nolanzzz/mtmct",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to mmdetection\nAll kinds of contributions are welcome, including but not limited to the following.\n\nFixes (typo, bugs)\nNew features and components\n\nWorkflow\n\nfork and pull the latest mmdetection\ncheckout a new branch (do not use master branch for PRs)\ncommit your changes\ncreate a PR\n\nNote\n- If you plan to add some new features that involve large changes, it is encouraged to open an issue for discussion first.\n- If you are the author of some papers and would like to include your method to mmdetection,\nplease contact Kai Chen (chenkaidev[at]gmail[dot]com). We will much appreciate your contribution.\nCode style\nPython\nWe adopt PEP8 as the preferred code style.\nWe use the following tools for linting and formatting:\n- flake8: linter\n- yapf: formatter\n- isort: sort imports\nStyle configurations of yapf and isort can be found in .style.yapf and .isort.cfg.\nWe use pre-commit hook that checks and formats for flake8, yapf, isort, trailing whitespaces,\n fixes end-of-files, sorts requirments.txt automatically on every commit.\nThe config for a pre-commit hook is stored in .pre-commit-config.\nAfter you clone the repository, you will need to install initialize pre-commit hook.\npip install -U pre-commit\nFrom the repository folder\npre-commit install\nAfter this on every commit check code linters and formatter will be enforced.\n\nBefore you create a PR, make sure that your code lints and is formatted by yapf.\n\nC++ and CUDA\nWe follow the Google C++ Style Guide.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-21T19:02:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T01:25:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8561700547193566,
        0.9353394959204232
      ],
      "excerpt": "This is an implementation of a Multi-Target Multi-Camera Tracking (MTMCT) solution. \nPipeline of our solution: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150771532802734
      ],
      "excerpt": "            <th rowspan=2>Method</th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9286942530703622
      ],
      "excerpt": "Modify config files under tracker_configs and clustering_configs for customization. Create a work_dirs and see more instructions at ifzhang/FairMOT and koehlp/wda_tracker. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Multi-Target Multi-Camera Tracking",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Go to [https://github.com/schuar-iosb/mta-dataset](https://github.com/schuar-iosb/mta-dataset) to download the MTA data. Or use other datasets that match the same format.\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nolanzzz/MTMCT/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 16:38:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nolanzzz/mtmct/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nolanzzz/mtmct",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/detectors/mmdetection/docker/Dockerfile",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/build/Dockerfile",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/evaluation/py_motmetrics/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/nolanzzz/MTMCT/tree/main/detectors/mmdetection/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/detectors/mmdetection/demo/inference_demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/run_single_cam_tests.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/run_multi_cam_tests.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/commands.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/util_track.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/start.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/detectors/mmdetection/tools/slurm_train.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/detectors/mmdetection/tools/slurm_test.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/detectors/mmdetection/tools/dist_test.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/detectors/mmdetection/tools/dist_train.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-without_center-feat_after_bn-cos-gta_track_images-rzr.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-reranking-all_tricks-tri_center-feat_after_bn-cos-duke.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-tri_center-duke.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-without_center-gta_track_images_iosb.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-seresnext50-all_tricks-tri_center-market.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-without_center-feat_after_bn-cos-gta2207-rzr.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-without_center-feat_after_bn-cos-duke.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-without_center-feat_after_bn-cos-market.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-without_center-gta_track_images.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-tri_center-market.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-without_center-gta-clean.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-without_center-feat_after_bn-cos-duke-downloaded_model.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-tri_center-feat_after_bn-cos-duke.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-without_center-gta.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-tri_center-feat_after_bn-cos-market.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-all_tricks-without_center-duke.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-all_tricks-without_center-feat_after_bn-cos-gta2207.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Test-reranking-all_tricks-tri_center-feat_after_bn-cos-market.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/feature_extractors/reid_strong_baseline/Experiment-pretrain_choice-all_tricks-tri_center-market.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/DCNv2/make.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/crowdhuman_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mot17_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mot17_half_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_mot17_half_res50.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_mot17_half_res34fpn.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_mot17_half_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mta_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mot15_ft_mix_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_ft_ch_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_mot17_half_res34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mot20_ft_mix_dla34.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/experiments/mix_mot17_half_hrnet18.sh",
      "https://raw.githubusercontent.com/nolanzzz/MTMCT/main/trackers/fair/utils/coords.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\nconda create -n mtmct python=3.7.7 -y\nconda activate mtmct\npip install -r requirements.txt\n```\nInstall dependencies for FairMOT:\n```shell\ncd trackers/fair\nconda install pytorch==1.7.0 torchvision==0.8.0 cudatoolkit=10.2 -c pytorch\npip install cython\npip install -r requirements.txt\ncd DCNv2\n./make.sh\nconda install -c conda-forge ffmpeg\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9354409600538711
      ],
      "excerpt": "sh start.sh fair_high_30e \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8090914492016772
      ],
      "excerpt": "<img src=\"readme_files/pipeline_white.png\" style=\"zoom:35%;\" /> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nolanzzz/mtmct/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Cuda",
      "C++",
      "Shell",
      "C",
      "Cython",
      "Dockerfile",
      "MATLAB",
      "Batchfile",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Christoph Heindl\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MTMCT",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mtmct",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nolanzzz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nolanzzz/mtmct/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 16:38:53 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<img src=\"readme_files/cam_0.gif\" width=\"400\"/> <img src=\"readme_files/cam_1.gif\" width=\"400\"/> <img src=\"readme_files/cam_2.gif\" width=\"400\"/> <img src=\"readme_files/cam_3.gif\" width=\"400\"/> <img src=\"readme_files/cam_4.gif\" width=\"400\"/> <img src=\"readme_files/cam_5.gif\" width=\"400\"/>\n\n",
      "technique": "Header extraction"
    }
  ]
}