{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/njh/redstore",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2010-07-03T10:09:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-10T18:50:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.855524626298278
      ],
      "excerpt": "For the latest version of RedStore, please see: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9673686529834025
      ],
      "excerpt": "RedStore is a lightweight RDF triplestore written in C using the [Redland] library. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.843625956919178
      ],
      "excerpt": "Built-in HTTP server \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8962421084531198,
        0.9676258705598594
      ],
      "excerpt": "Supports a wide range of RDF formats \nOnly runtime dependancy is [Redland]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8113317205221228
      ],
      "excerpt": "You can use any of the [Redland Storage Modules] that supports contexts: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "RedStore is a lightweight RDF triplestore written in C using the Redland library.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/njh/redstore/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Mon, 20 Dec 2021 11:35:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/njh/redstore/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "njh/redstore",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/njh/redstore/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/njh/redstore/main/load-store.sh",
      "https://raw.githubusercontent.com/njh/redstore/main/autogen.sh",
      "https://raw.githubusercontent.com/njh/redstore/main/load-test-data.sh",
      "https://raw.githubusercontent.com/njh/redstore/main/build-scripts/coverage.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "RedStore uses a standard automake build process:\n\n    ./configure\n    make\n    make install\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.885618601469348
      ],
      "excerpt": "You can use any of the [Redland Storage Modules] that supports contexts: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8010446526816102
      ],
      "excerpt": "Nicholas J. Humfrey &#110;&#106;&#104;&#64;&#97;&#101;&#108;&#105;&#117;&#115;&#46;&#99;&#111;&#109; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.859599278018483
      ],
      "excerpt": "Unit and integration test suite. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/njh/redstore/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C",
      "Perl",
      "Shell",
      "Objective-C",
      "Makefile",
      "M4"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "RedStore",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "redstore",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "njh",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/njh/redstore/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The minimum required versions of the [Redland] RDF Libraries are:\n\n- [raptor2-2.0.4]\n- [rasqal-0.9.27]\n- [redland-1.0.14]\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 54,
      "date": "Mon, 20 Dec 2021 11:35:30 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    redstore [options] [<name>]\n       -p <port>       Port number to run HTTP server on (default 8080)\n       -b <address>    Bind to specific address (default all)\n       -s <type>       Set the graph storage type (default hashes)\n       -t <options>    Storage options\n       -n              Create a new store / replace old (default no)\n       -f <filename>   Input file to load at startup\n       -F <format>     Format of the input file (default guess)\n       -v              Enable verbose mode\n       -q              Enable quiet mode\n  \nStart RedStore on port 8080, bound to localhost, using a new sqlite store:\n\n    redstore -p 8080 -b localhost -n -s sqlite\n\nLoad a URI into the triplestore:\n\n    curl --data uri=http://example.com/file.rdf http://localhost:8080/load\n\nAdd a file to the triplestore:\n\n    curl -T foaf.rdf 'http://localhost:8080/data/foaf.rdf'\n\nAdd a file to the triplestore with full URI specified:\n\n    curl -T foaf.rdf 'http://localhost:8080/data/?graph=http://example.com/foaf.rdf'\n\nAdd a file to the triplestore with type specified:\n\n    curl -T foaf.ttl -H 'Content-Type: application/x-turtle' 'http://localhost:8080/data/foaf.rdf'\n \nYou can delete graphs with in the same manner, using the DELETE HTTP verb:\n\n    curl -X DELETE 'http://localhost:8080/data/foaf.rdf'\n\nQuery using the [SPARQL Query Tool]:\n\n    sparql-query http://localhost:8080/sparql 'SELECT * WHERE { ?s ?p ?o } LIMIT 10'\n\n\n",
      "technique": "Header extraction"
    }
  ]
}