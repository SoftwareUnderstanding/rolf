{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Robsteranium/csvwr",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-22T12:21:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-10T13:18:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9881891544507363
      ],
      "excerpt": "The csvw model for tabular data describes how to annotate a group of csv tables to ensure they are interpreted correctly. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872742004646216
      ],
      "excerpt": "The aim is to reduce the amount of manual work needed to parse and prepare data before it can be used in analysis. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8178004524248299
      ],
      "excerpt": ": Serialise the metadata to JSON \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8699746991044058
      ],
      "excerpt": "For a complete introduction to the library please see the vignette(\"read-write-csvw\"). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8755439293512264
      ],
      "excerpt": "support for validating a table according to a metadata document (a little implemented) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950732090828869
      ],
      "excerpt": "tools for writing csvw metadata, given an R data frame (partly implemented) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9834973557707147
      ],
      "excerpt": "It's not an urgent objective for the library to perform csv2rdf or csv2json translation although some support for csv2json is provided as this is used to test that the parsing is done correctly. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9494392852407766,
        0.9203238721074687,
        0.872364719664362
      ],
      "excerpt": "datatypes (most of simple datatypes and some complex ones are supported, but there are more types and constraints too) \nvalidations (there are a lot of these \ud83d\ude0a) \npropagation of inherited properties \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906878613219992
      ],
      "excerpt": "referential integrity (a foundation for this is in place) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9097392991605694
      ],
      "excerpt": "The project currently incorporates two main parts of the csvw test suite: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8985342499448158
      ],
      "excerpt": "In each case, we're running only that subset of test entries that can be expected to pass given that part of the standard that has thus far been implemented. Some entries will be skipped (either permanently or) while other priorities are implemented. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890518244720451
      ],
      "excerpt": "There are also some more in-depth unit tests written for this library. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9485223239891413,
        0.8329910558355664
      ],
      "excerpt": "There's another R implementation of csvw in the package rcsvw. \nIf you're interested in csvw more generally, then the RDF::Tabular ruby gem provides one of the more robust and comprehensive implementations, supporting both translation and validation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Read and write CSV on the Web (csvw) tables and metadata in R",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Robsteranium/csvwr/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 20 Dec 2021 17:53:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Robsteranium/csvwr/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Robsteranium/csvwr",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You'll need to use devtools to install this package from github:\n\n```r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"Robsteranium/csvwr\")\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9045724812633968
      ],
      "excerpt": "In order to check the vignettes, you need to do devtools::install(build_vignettes=T). Then you can open e.g. vignette(\"read-write-csvw\"). \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.827252856894863
      ],
      "excerpt": "You can use csvwr to read a csv table with json annotations into a data frame: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8604678121949245
      ],
      "excerpt": "csvw <- read_csvw(\"data.csv\", \"metadata.json\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8604678121949245
      ],
      "excerpt": "read_csvw_dataframe(\"data.csv\", \"metadata.json\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8833835133085972
      ],
      "excerpt": "write.csv(d, \"table.csv\", row.names=FALSE) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9065684084131462,
        0.8407245088514075
      ],
      "excerpt": ": Write the json to a file \ncat(j, file=\"metadata.json\") \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Robsteranium/csvwr/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "HTML",
      "R",
      "Haml",
      "Ruby"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CSV on the Web R Package (csvwr) <img src=\"man/figures/logo.png\" align=\"right\" height=\"139\" />",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "csvwr",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Robsteranium",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Robsteranium/csvwr/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Mon, 20 Dec 2021 17:53:44 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "csvw"
    ],
    "technique": "GitHub API"
  }
}