{
  "citation": [
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "  cv:style eg:exp1-style ; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "  cv:valueProperty http://bsbm.org/avgQet ; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9902718422396762,
        0.9902718422396762
      ],
      "excerpt": "        &lt;http://www.w3.org/ns/prov#:startedAtTime&gt;  \"2016-12-20T02:57:07.608Z\"^^&lt;http://www.w3.org/2001/XMLSchema#:dateTime&gt; ; \n        &lt;http://www.w3.org/ns/prov#:endAtTime&gt;  \"2016-12-20T02:57:07.672Z\"^^&lt;http://www.w3.org/2001/XMLSchema#:dateTime&gt; ; \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SmartDataAnalytics/Beast",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-12-19T09:42:31Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-06T12:25:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9414982792804398
      ],
      "excerpt": "Beast is a lightweight framework that makes it easy to build RDF-in/RDF-out workflows using Java8 streams and Jena. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9605511774578874,
        0.8072165035635543
      ],
      "excerpt": "any measurements directly in  RDF using the vocabulary of your choice (such as DataCube). \nThe chart vocabulary enables embedding information about which charts to render from a dataset directly in RDF. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9472582717699582,
        0.8511820758707017,
        0.9804374635999665,
        0.8210270498202702,
        0.9399935748787832,
        0.9567061445371656
      ],
      "excerpt": "Construction of Resource-centric Java streams. Hence, plain RDF properties can be attached to resources as part of the stream execution. \nExtension to Jena which enhances Resources with support for attaching and retrieving Java objects by class. This means you can e.g. attach a parsed Jena Query object to a resource that represents a SPARQL query string. \nLooping with the loops state getting attached to the resource. \nNo need to know the URI for resources in advance. You can painlessly give them a proper name at the end of the workflow based on its properties. \nWhile technically Beast essentially provides utilities for chaining functions and streams, a great share of Beast's contribution lies in its the conceptual considerations. \nJena Extension: Attach Java objects to Jena resources by casting them to the enhanced resource ResourceEnh. Requires the Model to be created with ModelFactoryEnh: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Model m = ModelFactoryEnh.createModel(); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8292093518229852
      ],
      "excerpt": "    // Short-hand of above version \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9700741174376282,
        0.9200542317795041
      ],
      "excerpt": "RdfStream API: Enables construction of RDF Resource based workflows using the usual streaming methods, such as map, flatMap, peek, and additional ones such as repeat. \nAnalysis: Compute new resources representing observations of aggregated values such as averages and standard deviations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8895862058638417
      ],
      "excerpt": "        // Copy the query object attached to the workload resource over to this observation resource \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.93419084052567
      ],
      "excerpt": "        // Add some properties to the observation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Benchmarking, Evaluation, and Analysis Stack - A powerful yet lightweight Java8/Jena-based RDF processing stack.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SmartDataAnalytics/Beast/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 01:16:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SmartDataAnalytics/Beast/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SmartDataAnalytics/Beast",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/SmartDataAnalytics/Beast/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8774276184320331,
        0.91346887708524
      ],
      "excerpt": "Installing the beast debian package gives you the convenient ldcharts command, which invokes the main class for rendering charts. \ncd beast-core/src/test/resources \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.842398277299301
      ],
      "excerpt": "The full dataset example is here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984,
        0.8594142235991984,
        0.8702815774991463
      ],
      "excerpt": "  cv:yAxisLogarithmic true ; \n  cv:yAxisTicksVisible true ; \n  cv:xAxisLabelRotation 45 ; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043692862327018
      ],
      "excerpt": "cd beast-core/src/test/resources \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9263341858778938
      ],
      "excerpt": "Usage [Options] file(s) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8146221602412933,
        0.8511753600569425,
        0.9147587103998324
      ],
      "excerpt": "--png                  Output charts in png format (Default if no other format is given) \n--svg                  Output charts in svg format \n--jgp                  Output charts in jpg format \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8772339916211919
      ],
      "excerpt": "-o, --output <String>  Output folder \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8218986595518886
      ],
      "excerpt": "        .addTrait(QueryFactory.create(workloadRes.getProperty(LSQ.text).getString()))) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SmartDataAnalytics/Beast/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java",
      "Shell",
      "Groovy"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "BEAST - Benchmarking, Evaluation, and Analysis Stack",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Beast",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SmartDataAnalytics",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SmartDataAnalytics/Beast/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Beast only aggregates features from other (lower-level) projects, among them:\n\nCore:\n* jena\n* guava\n\nVisualization (Optional):\n* JFreeChart\n* XChart (probably in the future)\n\n\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 01:16:20 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [Performance Measurement](beast-examples/src/main/java/org/aksw/beast/examples/MainQueryPerformance.java) - [Test Data (queries.ttl)](beast-examples/src/main/resources/queries.ttl)\n* [KFoldCrossValidation](beast-examples/src/main/java/org/aksw/beast/examples/MainKFoldCrossValidation.java) - [Test Data (folds.ttl)](beast-examples/src/main/resources/folds.ttl)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}