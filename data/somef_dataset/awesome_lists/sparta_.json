{
  "citation": [
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": ".. _rdflib: http://rdflib.net/ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mnot/sparta",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2009-09-27T07:55:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-09T22:29:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9721326984066451
      ],
      "excerpt": "Sparts is a simple, resource-centric API for RDF graphs, built on top of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821864062152096
      ],
      "excerpt": "For more information, see sparta.py and http://github.com/mnot/sparta/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9654232838570703
      ],
      "excerpt": "The easiest way to get started is to play with it; take a look at the example  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012490008544207
      ],
      "excerpt": "Sparta is a wrapper around an rdflib_ Graph. To use it,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9200338845125483,
        0.9859209411451976,
        0.960033147114557
      ],
      "excerpt": "URI) method on the rdflib graph. You can also bind a complete URI to a \nstring with the addAlias(alias, URI)  method on the ThingFactory \n(this accommodates URIs that are awkward or impossible to map using \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8694108073193433,
        0.946838884052973
      ],
      "excerpt": "Graph (or store) that is to be used. Optionally, you can also give a \nschema_store argument, which points to a separate store that contains the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184398326908924
      ],
      "excerpt": "This is a common idiom for setting up Sparta:: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8725234796809391
      ],
      "excerpt": "you're ready to work with RDF data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8826731260761195,
        0.9306446210369704
      ],
      "excerpt": "with its identity; there are three ways to do this. \nThing(\"prefix_localname\") - Refers to the URI indicated using the  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9637680887969974
      ],
      "excerpt": "Accessing and Manipulating Data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151761438972335
      ],
      "excerpt": "using the prefix mapping as explained above. For example:: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8573167054627837
      ],
      "excerpt": "There are two ways to access a property's values, depending on what Sparta \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9395017778203258,
        0.9966639288044387
      ],
      "excerpt": "owl:FunctionalProperty_, or if the subject is subclassed to restrict that \nproperty with either a owl:maxCardinality_ or a owl:cardinality_ of \"1\", the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9741603732033571
      ],
      "excerpt": "accessed as explained above, assigned with the '=' operator, deleted with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.813735560687332
      ],
      "excerpt": "Otherwise, the property's value is assumed to have a cardinality greater \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8204234306114252
      ],
      "excerpt": "example, you can add to the set with the add method, like this:: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9494114181226783
      ],
      "excerpt": "test for membership with the in operator, and so forth. See the PropertySet  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.890519633820173
      ],
      "excerpt": "An RDF predicate with one of the following as its  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "a Simple API for RDF",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mnot/sparta/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Mon, 20 Dec 2021 17:52:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mnot/sparta/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mnot/sparta",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9974702744044224,
        0.9820226428242687,
        0.897466546713941,
        0.9650542621655412
      ],
      "excerpt": "To install:: \npython setup.py install \nFor installation help:: \npython setup.py install --help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503520635993069
      ],
      "excerpt": "files above. You can also take a look through the preliminary documentation below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9170281318897731
      ],
      "excerpt": "you must first instantiate one or more Graphs, make any necessary prefix mappings,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8943683292003456
      ],
      "excerpt": "with the name \"foo_bar\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9275323936824666
      ],
      "excerpt": "To be instantiated, a ThingFactory requires one argument; the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8264650558436107
      ],
      "excerpt": "correspond to RDF arcs. To start working with a node, you must instantiate it \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8127498784266941
      ],
      "excerpt": "using the prefix mapping as explained above. For example:: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "Python datatypes: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8503355517939035,
        0.8951880705445567,
        0.8724407418531911,
        0.9566749240450703
      ],
      "excerpt": "In examples/:: \nexample.py: Example of use \n  example-out.txt: ouput of example script \n  rss.py: example RSS 1.0 feed parser \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8199367266657792
      ],
      "excerpt": "then the URI \"http://www.example.com/foo#bar\" can be referred to in Sparta \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9232761519734112,
        0.8478700093347585
      ],
      "excerpt": "print foo.rdf_type \nwill print the 'rdf_type' property of the 'foo' node. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mnot/sparta/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "\" is mapped to the prefix \"foo\",",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "sparta",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mnot",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mnot/sparta/blob/master/README.rst",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 29,
      "date": "Mon, 20 Dec 2021 17:52:06 GMT"
    },
    "technique": "GitHub API"
  }
}