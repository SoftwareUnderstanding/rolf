{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{bonte2017massif,\n  title={The MASSIF platform: a modular and semantic platform for the development of flexible IoT services},\n  author={Bonte, Pieter and Ongenae, Femke and De Backere, Femke and Schaballie, Jeroen and Arndt, D{\\\"o}rthe and Verstichel, Stijn and Mannens, Erik and Van de Walle, Rik and De Turck, Filip},\n  journal={Knowledge and Information Systems},\n  volume={51},\n  number={1},\n  pages={89--126},\n  year={2017},\n  publisher={Springer}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{bonte2018streaming,\n  title={Streaming MASSIF: Cascading Reasoning for Efficient Processing of IoT Data Streams},\n  author={Bonte, Pieter and Tommasini, Riccardo and Della Valle, Emanuele and De Turck, Filip and Ongenae, Femke},\n  journal={Sensors},\n  volume={18},\n  number={11},\n  pages={3832},\n  year={2018},\n  publisher={Multidisciplinary Digital Publishing Institute}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8942856639420041,
        0.8942856639420041
      ],
      "excerpt": "How to cite Streaming MASSIF: \nHow to cite MASSIF: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999984635553582,
        0.9921939885106049
      ],
      "excerpt": "  author={Bonte, Pieter and Ongenae, Femke and De Backere, Femke and Schaballie, Jeroen and Arndt, D{\\\"o}rthe and Verstichel, Stijn and Mannens, Erik and Van de Walle, Rik and De Turck, Filip}, \n  journal={Knowledge and Information Systems}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8944178096468923,
        0.9960965048981569,
        0.9278824608274014
      ],
      "excerpt": "  pages={89--126}, \n  year={2017}, \n  publisher={Springer} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IBCNServices/StreamingMASSIF",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-17T12:22:02Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-10T07:13:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9908057683447052,
        0.8740526215227656,
        0.9477320387421488
      ],
      "excerpt": "This is the implementation of the StreamingMASSIF platform, a streaming extension of the MASSIF platform. \nStreamingMASSIF allows to perform cascading reasoning by combining various components. In its standard configuration it allows to filter meaningful events from a datastream through RDF Stream Processing, abstract the selection through DL reasoning and perform Complex Event Processing ontop of these abstraction. \nCheck the wikipage for a more in depth explanation on how to use Streaming MASSIF! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9556200918489175
      ],
      "excerpt": "To build the MASSIF classes (e.g. for usage in higher level apps), call mvn to compile and install the project in the local repository, then add the package to the higher level app dependencies (see pom.xml snippet below): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8861875299342387
      ],
      "excerpt": "The MASSIF allow for direct management through GET/POST calls. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Cascading Stream Reasoning with Streaming MASSIF",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IBCNServices/StreamingMASSIF/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 20 Dec 2021 11:38:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/IBCNServices/StreamingMASSIF/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "IBCNServices/StreamingMASSIF",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8200040201855953
      ],
      "excerpt": "mvn install -Dmaven.test.skip=true \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/IBCNServices/StreamingMASSIF/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java",
      "HTML",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "StreamingMASSIF",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "StreamingMASSIF",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "IBCNServices",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IBCNServices/StreamingMASSIF/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run MASSIF, call the compiled `.jar` from the command line as follows:\n```shell\njava -jar -Dlog4j.configurationFile=webfiles/log4j2.xml massif-jar-with-dependencies.jar\n```\nCalling this command will return something like this on the CLI:\n```shell\n21:27:32.313 [main] INFO  idlab.massif.run.Run - MASSIF STARTING\n21:27:32.403 [main] INFO  idlab.massif.run.Run - MASSIF Listening on port 9000\n21:27:32.403 [main] INFO  idlab.massif.run.Run - Access the MASSIF GUI on  localhost:9000 or register a configuration on localhost:9000/register\n21:27:32.414 [main] INFO  idlab.massif.run.Run - MASSIF is ONLINE\n```\nRun options:\n* `-p` : TCP port on which massif listens, default: `9000`\n\nGUI:\n* The MASSIF GUI is available on http://localhost:9000\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 20 Dec 2021 11:38:34 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "streamreasoning",
      "reasoning",
      "stream-processing"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "List of active configs:\n```\ncurl -X GET --verbose \\\n  --url \"http://127.0.0.1:9000/configs\"\n```\n* Note: returns `{}` if there are no active config.\n\nStop a config (pre-requisite:  config ID, see previous command):\n```\ncurl -X POST --verbose \\\n  -H \"Content-Type: application/json\" \\\n  -d '19' \\\n  --url \"http://127.0.0.1:9000/stop\"\n```\n* Note: returns `ok`\n\nSend a config:\n```\ncurl -X POST --verbose \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"configuration\":{\"0\":[1],\"1\":[]},\"components\":{\"0\":{\"type\":\"Source\",\"impl\":\"kafkaSource\",\"kafkaServer\":\"127.0.0.1:9092\",\"kafkaTopic\":\"backblaze_smart\"},\"1\":{\"type\":\"Sink\",\"impl\":\"httpGetSinkCombined\",\"path\":\"1\",\"config\":\"\"}}}' \\\n  --url \"http://127.0.0.1:9000/register\"\n```\n* Note: returns the config ID\n\nGet a component running metrics (pre-requisite: component ID, see previous commands):\n```\ncurl -X GET --verbose \\\n  --url \"http://127.0.0.1:9000/monitor/1\"\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}