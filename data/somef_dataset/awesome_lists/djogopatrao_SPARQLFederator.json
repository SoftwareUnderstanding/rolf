{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/djogopatrao/SPARQLFederator",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2013-08-30T01:10:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-30T07:10:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8871792241182637,
        0.8528495154284236
      ],
      "excerpt": "Expand SPARQL queries to perform inference on multiple endpoints. \nIt is mandatory to specify at least the domain ontology file, the federation ontology file, and one or more classes for querying. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "-stats                       Display statistics for queries \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Expand SPARQL queries to perform inference on multiple endpoints and relational databases.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Find more information on our wiki page:\n\nhttps://github.com/djogopatrao/SPARQLFederator/wiki\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/djogopatrao/SPARQLFederator/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 20 Dec 2021 11:39:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/djogopatrao/SPARQLFederator/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "djogopatrao/SPARQLFederator",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/djogopatrao/SPARQLFederator/master/examples/live_example_property/expand_query.sh",
      "https://raw.githubusercontent.com/djogopatrao/SPARQLFederator/master/examples/live_example/expand_query.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8833013677071059
      ],
      "excerpt": "usage: SPARQLFederator [options] <DOMAIN_CLASS> [...] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8299739053936211
      ],
      "excerpt": "-federation_ontology <arg>   The federation ontology file \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/djogopatrao/SPARQLFederator/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SPARQLFederator",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SPARQLFederator",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "djogopatrao",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/djogopatrao/SPARQLFederator/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "mvn clean package \n\nmvn exec:java -Dexec.mainClass=\"br.org.accamargo.cipe.gqe.SPARQLFederatorRun\" -Dexec.args=\"-federation_ontology federation_ontology.owl -domain_ontology domain_ontology.owl  -domain_ns domainNamespace# class1 [,classn]\"\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Mon, 20 Dec 2021 11:39:19 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "java -jar target/SPARQLFederator-1.1-SNAPSHOT-jar-with-dependencies.jar -domain_ontology examples/domain.owl -federation_ontology examples/federation.owl  -exec print -query 'http://www.cipe.accamargo.org.br/ontologias/domain.owl#A'\n\n\"-exec print\" will print the expanded query; \"-exec run\" would execute it and yield results (that is, if there are working endpoints as defined on example/federation.owl)\n\n\"http://www.cipe.accamargo.org.br/ontologias/domain.owl#A\" is the full IRI of the class you're querying for (see -domain_ns for saving space); try it with other classes (like B, or C). Add axioms and your own classes to domain.owl, but keep in mind SPARQLFederator implemented semantics (see the wiki).\n\n\n",
      "technique": "Header extraction"
    }
  ]
}