{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "        \nThe design and part of the code has been inspired from LARQ, see:\n\n * [http://openjena.org/ARQ/lucene-arq.html](http://openjena.org/ARQ/lucene-arq.html)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/castagna/EARQ",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2010-10-08T11:04:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-05-22T04:11:05Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9865542832286252
      ],
      "excerpt": "EARQ is a combination of ARQ and ElasticSearch. It gives ARQ the ability to  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8805836966741698,
        0.884527297743563,
        0.9202410962363607
      ],
      "excerpt": "indexes are additional information for accessing the RDF graph, not storage  \nfor the graph itself. \nThis is experimental (and unsupported). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "EARQ = ElasticSearch + ARQ  (Free Text Indexing for SPARQL (via ARQ property functions) using a ElasticSearch (and Lucene))",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/castagna/EARQ/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 20 Dec 2021 20:21:52 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/castagna/EARQ/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "castagna/EARQ",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/castagna/EARQ/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EARQ = ElasticSearch + ARQ",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "EARQ",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "castagna",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/castagna/EARQ/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Mon, 20 Dec 2021 20:21:52 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is how you build an index from a Jena Model:\n\n    ModelIndexerString indexer = new ModelIndexerString(\"earq_index\");\n    indexer.indexStatements(model.listStatements());\n    indexer.close();\n\nThis is how you configure ARQ to use ElasticSearch:\n        \n    IndexSearcher searcher = IndexSearcherFactory.create(Type.ELASTICSEARCH, \"earq_index\") ;\n    EARQ.setDefaultIndex(searcher) ;\n\nThis is an example of a SPARQL query using the sarq:search property function: \n\n    PREFIX earq: <http://openjena.org/EARQ/property#>\n    SELECT * WHERE {\n        ?doc ?p ?lit .\n        (?lit ?score ) earq:search \"+text\" .\n    }\n\n\n",
      "technique": "Header extraction"
    }
  ]
}