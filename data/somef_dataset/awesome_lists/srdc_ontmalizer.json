{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/srdc/ontmalizer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2013-05-22T06:49:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-07T12:13:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9715512027479625,
        0.9055357726488348
      ],
      "excerpt": "XSD2OWLMapper is the main class to transform XML Schemas to RDF/OWL. The constructor of this class gets the root XSD file to be transformed. Configuration of the transformation operation is quite simple: the caller can set the prefixes for the object property and datatype property names to be created. Then, the call to the convertXSD2OWL() method performs the transformation.  \nXSD2OWLMapper is able to print the output ontology in one of these formats: RDF/XML, RDF/XML-ABBREV, N-TRIPLE and N3. An example transformation routine is provided below for the HL7 CDA R2 XML Schema: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934661337525168
      ],
      "excerpt": "    // This part converts XML schema to OWL ontology. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9943486933969103,
        0.9832016076825171
      ],
      "excerpt": "XML2OWLMapper is the main class to transform XML data to RDF/OWL by creating instances of the necessary OWL classes, RDFS datatypes, OWL datatype and object properties. The constructor of this class gets the XML file to be transformed together with an instance of XSD2OWLMapper that is already initialized with the corresponding XML Schema of the XML data. No other configuration is necessary for the transformation operation; the prefixes for the object property and datatype property names to be created are gathered from the XSD2OWLMapper configuration. Then, the call to the convertXML2OWL() method performs the transformation. \nSimilar to XSD2OWLMapper, XML2OWLMapper is able to print the output ontology instance in one of these formats: RDF/XML, RDF/XML-ABBREV, N-TRIPLE and N3. An example transformation routine is provided below for a complete HL7 CDA R2 instance, which is compliant with the HL7/ASTM Continuity of Care Document (CCD) and IHE Patient Care Coordination (PCC) templates: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934661337525168
      ],
      "excerpt": "    // This part converts XML schema to OWL ontology. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9576760825178767
      ],
      "excerpt": "// This part converts XML instance to RDF data model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8831391895297108
      ],
      "excerpt": "// This part prints the RDF data model to the specified file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A tool that performs comprehensive transformations of XML Schemas (XSD) and XML data to RDF/OWL automatically",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/srdc/ontmalizer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 39,
      "date": "Mon, 20 Dec 2021 14:12:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/srdc/ontmalizer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "srdc/ontmalizer",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Apache Maven is required to build the Ontmalizer. Please visit http://maven.apache.org/ in order to install Maven on your system.\n\nUnder the root directory of the Ontmalizer project run the following:\n\n\t$ ontmalizer> mvn install\n\nIn order to make a clean install run the following:\n\n\t$ ontmalizer> mvn clean install\n\nThese will build the Ontmalizer and also run a number of test cases, which will transform some XML Schemas (e.g. HL7 CDA R2, SALUS Common Information Model) and corresponding XML instances to RDF/OWL. \n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8456206469197
      ],
      "excerpt": "    XSD2OWLMapper mapping = new XSD2OWLMapper(new File(\"src/test/resources/CDA/CDA.xsd\")); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9565128544915041
      ],
      "excerpt": "    File f = new File(\"src/test/resources/output/cda-ontology.n3\"); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456206469197
      ],
      "excerpt": "    XSD2OWLMapper mapping = new XSD2OWLMapper(new File(\"src/test/resources/CDA/CDA.xsd\")); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928206409702666
      ],
      "excerpt": "    new File(\"src/test/resources/CDA/SALUS-sample-full-CDA-instance.xml\"), mapping); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049395213788745
      ],
      "excerpt": "// This part prints the RDF data model to the specified file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9501469809200067
      ],
      "excerpt": "    File f = new File(\"src/test/resources/output/salus-cda-instance.n3\"); \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/srdc/ontmalizer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<!--\nCopyright (C) 2013 SRDC Yazilim Arastirma ve Gelistirme ve Danismanlik Tic. Ltd. Sti.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\nOntmalizer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ontmalizer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "srdc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/srdc/ontmalizer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 64,
      "date": "Mon, 20 Dec 2021 14:12:38 GMT"
    },
    "technique": "GitHub API"
  }
}