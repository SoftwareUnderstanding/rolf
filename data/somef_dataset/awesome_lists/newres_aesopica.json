{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/newres/aesopica",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-15T21:22:17Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-21T16:36:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9538471604696472,
        0.9530049128948033
      ],
      "excerpt": "A Clojure library designed to help create Semantic Web, and in particular Linked Data/RDF based applications.  \nIt allows the user to create Linked Data using idiomatic Clojure datastructures, and translate them to various RDF formats. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "(def fox-and-stork-literals-edn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "(def fox-and-stork-reif-edn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8020968350578124
      ],
      "excerpt": "(def fox-and-stork-blank-node-edn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8964544334660999,
        0.8385833070844738
      ],
      "excerpt": "The conversion utilizes the Apache Jena library for conversion.  \nFirst the Clojure EDN representation needs to be converted to a Jena DataSetGraph (a Jena representation of a set of graphs). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9931449972513812
      ],
      "excerpt": "Assuming fox-and-stork-edn is a Clojure EDN representation of RDF, and conv the shorthand for the aesopica.converter namespace, a conversion to Turtle can be written as: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": " A Clojure library designed to help create Semantic Web based applications.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/newres/aesopica/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 20 Dec 2021 16:37:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/newres/aesopica/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "newres/aesopica",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "     [:fox :foaf/name \"vo\"] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "     [:stork :foaf/name \"ooi\"] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184484496954405
      ],
      "excerpt": "     [:fox :can-eat-food-served-using :shallow-plate] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184484496954405
      ],
      "excerpt": "     [:stork :can-eat-food-served-using :narrow-mouthed-jug] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184484496954405
      ],
      "excerpt": "     [:fox :can-eat-food-served-using :shallow-plate] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184484496954405
      ],
      "excerpt": "     [:stork :can-eat-food-served-using :narrow-mouthed-jug] \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "     [:fox :foaf/name \"vo\"] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "     [:stork :foaf/name \"ooi\"] \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/newres/aesopica/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Clojure"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Eclipse Public License 1.0",
      "url": "https://api.github.com/licenses/epl-1.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC\\nLICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM\\nCONSTITUTES RECIPIENT\\'S ACCEPTANCE OF THIS AGREEMENT.\\n\\n1. DEFINITIONS\\n\\n\"Contribution\" means:\\n\\na) in the case of the initial Contributor, the initial code and\\ndocumentation distributed under this Agreement, and\\n\\nb) in the case of each subsequent Contributor:\\n\\ni) changes to the Program, and\\n\\nii) additions to the Program;\\n\\nwhere such changes and/or additions to the Program originate from and are\\ndistributed by that particular Contributor. A Contribution \\'originates\\' from\\na Contributor if it was added to the Program by such Contributor itself or\\nanyone acting on such Contributor\\'s behalf. Contributions do not include\\nadditions to the Program which: (i) are separate modules of software\\ndistributed in conjunction with the Program under their own license\\nagreement, and (ii) are not derivative works of the Program.\\n\\n\"Contributor\" means any person or entity that distributes the Program.\\n\\n\"Licensed Patents\" mean patent claims licensable by a Contributor which are\\nnecessarily infringed by the use or sale of its Contribution alone or when\\ncombined with the Program.\\n\\n\"Program\" means the Contributions distributed in accordance with this\\nAgreement.\\n\\n\"Recipient\" means anyone who receives the Program under this Agreement,\\nincluding all Contributors.\\n\\n2. GRANT OF RIGHTS\\n\\na) Subject to the terms of this Agreement, each Contributor hereby grants\\nRecipient a non-exclusive, worldwide, royalty-free copyright license to\\nreproduce, prepare derivative works of, publicly display, publicly perform,\\ndistribute and sublicense the Contribution of such Contributor, if any, and\\nsuch derivative works, in source code and object code form.\\n\\nb) Subject to the terms of this Agreement, each Contributor hereby grants\\nRecipient a non-exclusive, worldwide, royalty-free patent license under\\nLicensed Patents to make, use, sell, offer to sell, import and otherwise\\ntransfer the Contribution of such Contributor, if any, in source code and\\nobject code form.  This patent license shall apply to the combination of the\\nContribution and the Program if, at the time the Contribution is added by the\\nContributor, such addition of the Contribution causes such combination to be\\ncovered by the Licensed Patents. The patent license shall not apply to any\\nother combinations which include the Contribution. No hardware per se is\\nlicensed hereunder.\\n\\nc) Recipient understands that although each Contributor grants the licenses\\nto its Contributions set forth herein, no assurances are provided by any\\nContributor that the Program does not infringe the patent or other\\nintellectual property rights of any other entity. Each Contributor disclaims\\nany liability to Recipient for claims brought by any other entity based on\\ninfringement of intellectual property rights or otherwise. As a condition to\\nexercising the rights and licenses granted hereunder, each Recipient hereby\\nassumes sole responsibility to secure any other intellectual property rights\\nneeded, if any. For example, if a third party patent license is required to\\nallow Recipient to distribute the Program, it is Recipient\\'s responsibility\\nto acquire that license before distributing the Program.\\n\\nd) Each Contributor represents that to its knowledge it has sufficient\\ncopyright rights in its Contribution, if any, to grant the copyright license\\nset forth in this Agreement.\\n\\n3. REQUIREMENTS\\n\\nA Contributor may choose to distribute the Program in object code form under\\nits own license agreement, provided that:\\n\\na) it complies with the terms and conditions of this Agreement; and\\n\\nb) its license agreement:\\n\\ni) effectively disclaims on behalf of all Contributors all warranties and\\nconditions, express and implied, including warranties or conditions of title\\nand non-infringement, and implied warranties or conditions of merchantability\\nand fitness for a particular purpose;\\n\\nii) effectively excludes on behalf of all Contributors all liability for\\ndamages, including direct, indirect, special, incidental and consequential\\ndamages, such as lost profits;\\n\\niii) states that any provisions which differ from this Agreement are offered\\nby that Contributor alone and not by any other party; and\\n\\niv) states that source code for the Program is available from such\\nContributor, and informs licensees how to obtain it in a reasonable manner on\\nor through a medium customarily used for software exchange.\\n\\nWhen the Program is made available in source code form:\\n\\na) it must be made available under this Agreement; and\\n\\nb) a copy of this Agreement must be included with each copy of the Program.\\n\\nContributors may not remove or alter any copyright notices contained within\\nthe Program.\\n\\nEach Contributor must identify itself as the originator of its Contribution,\\nif any, in a manner that reasonably allows subsequent Recipients to identify\\nthe originator of the Contribution.\\n\\n4. COMMERCIAL DISTRIBUTION\\n\\nCommercial distributors of software may accept certain responsibilities with\\nrespect to end users, business partners and the like. While this license is\\nintended to facilitate the commercial use of the Program, the Contributor who\\nincludes the Program in a commercial product offering should do so in a\\nmanner which does not create potential liability for other Contributors.\\nTherefore, if a Contributor includes the Program in a commercial product\\noffering, such Contributor (\"Commercial Contributor\") hereby agrees to defend\\nand indemnify every other Contributor (\"Indemnified Contributor\") against any\\nlosses, damages and costs (collectively \"Losses\") arising from claims,\\nlawsuits and other legal actions brought by a third party against the\\nIndemnified Contributor to the extent caused by the acts or omissions of such\\nCommercial Contributor in connection with its distribution of the Program in\\na commercial product offering.  The obligations in this section do not apply\\nto any claims or Losses relating to any actual or alleged intellectual\\nproperty infringement. In order to qualify, an Indemnified Contributor must:\\na) promptly notify the Commercial Contributor in writing of such claim, and\\nb) allow the Commercial Contributor to control, and cooperate with the\\nCommercial Contributor in, the defense and any related settlement\\nnegotiations. The Indemnified Contributor may participate in any such claim\\nat its own expense.\\n\\nFor example, a Contributor might include the Program in a commercial product\\noffering, Product X. That Contributor is then a Commercial Contributor. If\\nthat Commercial Contributor then makes performance claims, or offers\\nwarranties related to Product X, those performance claims and warranties are\\nsuch Commercial Contributor\\'s responsibility alone. Under this section, the\\nCommercial Contributor would have to defend claims against the other\\nContributors related to those performance claims and warranties, and if a\\ncourt requires any other Contributor to pay any damages as a result, the\\nCommercial Contributor must pay those damages.\\n\\n5. NO WARRANTY\\n\\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON\\nAN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER\\nEXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR\\nCONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A\\nPARTICULAR PURPOSE. Each Recipient is solely responsible for determining the\\nappropriateness of using and distributing the Program and assumes all risks\\nassociated with its exercise of rights under this Agreement , including but\\nnot limited to the risks and costs of program errors, compliance with\\napplicable laws, damage to or loss of data, programs or equipment, and\\nunavailability or interruption of operations.\\n\\n6. DISCLAIMER OF LIABILITY\\n\\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY\\nCONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION\\nLOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\nARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE\\nEXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY\\nOF SUCH DAMAGES.\\n\\n7. GENERAL\\n\\nIf any provision of this Agreement is invalid or unenforceable under\\napplicable law, it shall not affect the validity or enforceability of the\\nremainder of the terms of this Agreement, and without further action by the\\nparties hereto, such provision shall be reformed to the minimum extent\\nnecessary to make such provision valid and enforceable.\\n\\nIf Recipient institutes patent litigation against any entity (including a\\ncross-claim or counterclaim in a lawsuit) alleging that the Program itself\\n(excluding combinations of the Program with other software or hardware)\\ninfringes such Recipient\\'s patent(s), then such Recipient\\'s rights granted\\nunder Section 2(b) shall terminate as of the date such litigation is filed.\\n\\nAll Recipient\\'s rights under this Agreement shall terminate if it fails to\\ncomply with any of the material terms or conditions of this Agreement and\\ndoes not cure such failure in a reasonable period of time after becoming\\naware of such noncompliance. If all Recipient\\'s rights under this Agreement\\nterminate, Recipient agrees to cease use and distribution of the Program as\\nsoon as reasonably practicable. However, Recipient\\'s obligations under this\\nAgreement and any licenses granted by Recipient relating to the Program shall\\ncontinue and survive.\\n\\nEveryone is permitted to copy and distribute copies of this Agreement, but in\\norder to avoid inconsistency the Agreement is copyrighted and may only be\\nmodified in the following manner. The Agreement Steward reserves the right to\\npublish new versions (including revisions) of this Agreement from time to\\ntime. No one other than the Agreement Steward has the right to modify this\\nAgreement. The Eclipse Foundation is the initial Agreement Steward. The\\nEclipse Foundation may assign the responsibility to serve as the Agreement\\nSteward to a suitable separate entity. Each new version of the Agreement will\\nbe given a distinguishing version number. The Program (including\\nContributions) may always be distributed subject to the version of the\\nAgreement under which it was received. In addition, after a new version of\\nthe Agreement is published, Contributor may elect to distribute the Program\\n(including its Contributions) under the new version. Except as expressly\\nstated in Sections 2(a) and 2(b) above, Recipient receives no rights or\\nlicenses to the intellectual property of any Contributor under this\\nAgreement, whether expressly, by implication, estoppel or otherwise. All\\nrights in the Program not expressly granted under this Agreement are\\nreserved.\\n\\nThis Agreement is governed by the laws of the State of New York and the\\nintellectual property laws of the United States of America. No party to this\\nAgreement will bring a legal action under this Agreement more than one year\\nafter the cause of action arose. Each party waives its rights to a jury trial\\nin any resulting litigation.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Aesopica",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "aesopica",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "newres",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/newres/aesopica/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Mon, 20 Dec 2021 16:37:49 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "rdf",
      "semantic-web",
      "linked-data",
      "knowledge-graph",
      "clojure"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```clojure\n(ns example\n   (:require [aesopica.core :as aes]\n             [aesopica.converter :as conv]))\n\n(def fox-and-stork-edn\n  {::aes/context\n   {nil \"http://www.newresalhaider.com/ontologies/aesop/foxstork/\"\n    :rdf \"http://www.w3.org/1999/02/22-rdf-syntax-ns#:\"}\n   ::aes/facts\n   #:{[:fox :rdf/type :animal]\n     [:stork :rdf/type :animal]\n     [:fox :gives-invitation :invitation1]\n     [:invitation1 :has-invited :stork]\n     [:invitation1 :has-food :soup]\n     [:invitation1 :serves-using :shallow-plate]\n     [:stork :gives-invitation :invitation2]\n     [:invitation2 :has-invited :fox]\n     [:invitation2 :has-food :crumbled-food]\n     [:invitation2 :serves-using :narrow-mouthed-jug]\n     [:fox :can-eat-food-served-using :shallow-plate]\n     [:fox :can-not-eat-food-served-using :narrow-mouthed-jug]\n     [:stork :can-eat-food-served-using :narrow-mouthed-jug]\n     [:stork :can-not-eat-food-served-using :shallow-plate]}})\n  \n(conv/convert-to-turtle fox-and-stork-edn)\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "I have been writing a number of articles about the use of Clojure for creating Linked Data, that is interlinked with the creation of this library:\n\n1. [General Introduction](https://www.newresalhaider.com/post/aesopica-1/)\n2. [Datatypes](https://www.newresalhaider.com/post/aesopica-2/)\n2. [Named Graphs](https://www.newresalhaider.com/post/aesopica-3/)\n\n",
      "technique": "Header extraction"
    }
  ]
}