{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ldp4j/ldp4j",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2014-04-23T08:23:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-24T14:44:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Java-based framework for the development of read-write Linked Data applications based on the W3C Linked Data Platform 1.0 (LDP) specification.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ldp4j/ldp4j/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Mon, 20 Dec 2021 12:56:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ldp4j/ldp4j/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ldp4j/ldp4j",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ldp4j/ldp4j/master/.travis/utils.sh",
      "https://raw.githubusercontent.com/ldp4j/ldp4j/master/.travis/build.sh",
      "https://raw.githubusercontent.com/ldp4j/ldp4j/master/.travis/qa.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ldp4j/ldp4j/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java",
      "Shell",
      "FreeMarker"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "LDP4j",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ldp4j",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ldp4j",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ldp4j/ldp4j/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "mestebangutierrez",
        "body": "# Release Notes\r\n\r\nVersion 0.2.1 is now available. This release includes the new features, enhancements and fixes described below.\r\n\r\n# New features\r\n\r\n## Addition of HTTP content-negotiation utilities\r\n\r\nThis feature is oriented to the framework developer and consists on a collection of utility classes for supporting the HTTP content negotiation process.\r\n\r\nThe mechanism provided carries out the content negotiation taking into account both the supported and the acceptable media types, character encodings, and languages.\r\n\r\nThe mechanism implements a simplified version of the __HTTP Remote Variant Selection Algorithm -- RVSA/1.0__ defined in [RFC 2296](https://tools.ietf.org/html/rfc2296).\r\nThe differences between the implemented algorithm and the original one are the following:\r\n1. There is no support for _features_,\r\n2. Variant _source-quality_ is assigned linearly (with ratio -0.125) of the values suggested in Section 5.3 of RFC 2296;\r\n3. The _round5_ function is not applied during the computation of overall quality values.\r\n\r\nThe reason for this latter difference is that in the presence of fine-grained qualities (_i.e._, 0.001) computed quality values converge to 10^-12, and can make variants with non-zero computed qualities appear like they are not amenable to selection.\r\n\r\nYou can see an example usage of these utilities down below:\r\n\r\n```java\r\nMediaType TEXT_HTML = MediaTypes.of(\"text\", \"html\");\r\nMediaType POSTSCRIPT = MediaTypes.of(\"application\", \"postscript\");\r\nCharacterEncoding UTF_8 = CharacterEncodings.of(StandardCharsets.UTF_8);\r\nCharacterEncoding US_ASCII = CharacterEncodings.of(StandardCharsets.US_ASCII);\r\nCharacterEncoding ISO_8859_1 = CharacterEncodings.of(StandardCharsets.ISO_8859_1);\r\nLanguage FRENCH = Languages.of(Locale.FRENCH);\r\nLanguage ENGLISH = Languages.of(Locale.ENGLISH);\r\n\r\nNegotiationResult result =\r\n\tContentNegotiator.\r\n\t\tnewInstance().\r\n\t\t\t// Client side preferences\r\n\t\t\taccept(\"*/*;q=0.8\").\r\n\t\t\taccept(\"text/html;q=1.0\").\r\n\t\t\tacceptLanguage(\"en;q=1.0\").\r\n\t\t\tacceptLanguage(\"fr;q=0.5\").\r\n\t\t\tacceptCharset(\"utf-8\").\r\n\t\t\tacceptCharset(\"iso-8859-1\").\r\n\t\t\t// Server side preferences\r\n\t\t\tsupport(ContentNegotiator.DEFAULT_MEDIA_TYPE).\r\n\t\t\tsupport(POSTSCRIPT).\r\n\t\t\tsupport(FRENCH).\r\n\t\t\tsupport(ENGLISH).\r\n\t\t\tsupport(UTF_8).\r\n\t\t\tsupport(ISO_8859_1).\r\n\t\t\tsupport(Variants.builder().type(TEXT_HTML).language(ENGLISH).alternative(0.5D)).\r\n\t\t\tsupport(Variants.builder().type(TEXT_HTML).language(FRENCH).alternative(0.7D)).\r\n\t\t\tsupport(Variants.builder().type(POSTSCRIPT).language(ENGLISH).alternative(1.0D)).\r\n\t\t\tnegotiate();\r\n\r\nassertThat(result.isAcceptable(),equalTo(true));\r\nassertThat(result.variant().type(),equalTo(TEXT_HTML));\r\nassertThat(result.variant().language(),equalTo(ENGLISH));\r\nassertThat(result.variant().charset(),nullValue());\r\nassertThat(result.quality(),equalTo(0.5D));\r\n```\r\n\r\nFor the server preferences above, we can calculate with the abovementioned algorithm the alternatives available for content negotiation:\r\n\r\n```\r\n{0.500 {type text/html} {language en}}\r\n{0.700 {type text/html} {language fr}}\r\n{1.000 {type application/postscript} {language en}}\r\n{1.000 {type text/plain} {charset utf-8} {language fr}}\r\n{0.875 {type text/plain} {charset utf-8} {language en}}\r\n{0.750 {type application/postscript} {charset utf-8} {language fr}}\r\n{0.625 {type application/postscript} {charset utf-8} {language en}}\r\n```\r\n\r\nWe can see that the result is not the best server alternative, but the alternative that best matches the client requiremente (text/html and en with q=1.0). We can also see that despite both the client and server support UTF-8, the response does not include that charset as the winning alternative does not specify it.\r\n\r\n# Enhancements\r\n\r\n## Improved Travis CI configuration\r\n\r\n- Updated build scripts in '.travis/' to leverage the CI environment variable for tuning the execution.\r\n  Thus, if the variable equals to 'skip' the execution of the scripts'functionalities will be totally skipped. However, if the value is 'porcelain' all the checks prior to their execution will be carried out, but no the functionalities themselves.\r\n  In addition, the QA script checks if the value is 'noqa' in which case, the SonarQube analysis is skipped.\r\n- Updated scripts to avoid using the 'exit' built-in command as it may interfere with the CI internals (see https://docs.travis-ci.com/user/customizing-the-build/#How-does-this-work%3F-(Or%2C-why-you-should-not-use-exit-in-build-steps)).\r\n- Enhanced the way in which the QA script checks whether or not the SonarQube server is available. Apart from enforcing the success of the curl command (i.e., a response is received), check that the response is an  OK. Additional information is provided in case of failure. It is possible to select which application to use for carrying out check (curl/wget) leveraging the CHECKER environment variable. By default, wget will be used.\r\n  Additional log messages for the checking process can be shown by setting the DEBUG environment variable to 'verbose'.\r\n- Provide additional information if the unshallowing of the git repository fails.\r\n- Enabled debugging the shell script leveraging the DEBUG environment variable. A value 'trace' will enable the 'xtrace' Bash option (see http://tldp.org/LDP/abs/html/options.html). The debugging capabilities hide sensible information (i.e., passwords) in the logs.\r\n- Granted clean termination of the QA script (disabling the usage of the 'errexit' Bash option and always returning 0) in avoid breaking the build accidentally.\r\n\r\n## Other\r\n\r\n- Issue #20: Remove deprecated method org.ldp4j.application.ApplicationContext.disposeSession(WriteSession)\r\n\r\n# Fixes\r\n\r\n- Issue #19: MutableDataSet isEmpty method returns its negated expected value\r\n- Issue #22: Response body encoding problems when using entities that mix data from various charsets\r\n",
        "dateCreated": "2016-07-06T21:20:34Z",
        "datePublished": "2017-06-16T22:48:16Z",
        "html_url": "https://github.com/ldp4j/ldp4j/releases/tag/0.2.1",
        "name": "Version 0.2.1",
        "tag_name": "0.2.1",
        "tarball_url": "https://api.github.com/repos/ldp4j/ldp4j/tarball/0.2.1",
        "url": "https://api.github.com/repos/ldp4j/ldp4j/releases/6744409",
        "zipball_url": "https://api.github.com/repos/ldp4j/ldp4j/zipball/0.2.1"
      },
      {
        "authorType": "User",
        "author_name": "mestebangutierrez",
        "body": "# Release Notes\n\nVersion 0.2.0 is finally available. This release includes new features (both developer and framework developer oriented), enhancements, and fixes, all of them described below.\n\n# New features\n\n## Query support\n\n### Purpose\n\nEnable retrieving a customized representation of an LDP resource according to the parameters specified in the query string of the URL used to derreferentiate the resource.\n\n### Impact\n- **Application level**: \n  - Requires new mechanism for signaling query support\n  - Requires new mechanism for getting the parameters specified in the URL.\n- **Framework level**:\n  - _Application Engine_: Disable response enrichment\n  - _Server Frontend_: Inform that the response, despite being relative to an LDP resource, is not a fully compliant LDP response.\n\n### New Application API\n\nIn order to expose a query-enabled resource handler, a developer must implement the **`org.ldp4j.application.ext.Queryable`** interface:\n\n``` java\n/**\n * Interface to be implemented by {@link ResourceHandler} implementations that\n * also support resource deletion.\n */\npublic interface Queryable {\n\n/**\n * Query the contents of a resource managed by a resource handler.\n *\n * @param resource\n *            the resource that is to be queried.\n * @param query\n *            the query to be solved.\n * @param session\n *            the session to use for resolving snapshots and individuals.\n * @return the data set that represents the specified resource query.\n * @throws UnknownResourceException\n *             if the specified resource is not managed by the resource\n *             handler.\n * @throws InvalidQueryException\n *             if the specified query is not valid. \n * @throws ApplicationRuntimeException\n *             if an internal exception prevents the deletion of the\n *             resource.\n */\nDataSet query(ResourceSnapshot resource, Query query, ReadSession session)\n    throws UnknownResourceException, \n               InvalidQueryException,\n               ApplicationRuntimeException;\n\n}\n```\n\nThe **`org.ldp4j.application.ext.Query`** interface conveys the parameters especified in the request that is deferred to the ResourceHandler:\n\n``` java\n/**\n * A collection of {@code Parameter}s, where is each parameter is indexed by its\n * name.\n */\npublic interface Query extends Serializable {\n\n    /**\n     * Returns {@code true} if this query contains no parameters.\n     *\n     * @return {@code true} if this query contains no parameters\n     */\n    boolean isEmpty();\n\n    /**\n     * Returns the number of parameters in this query. If the query contains\n     * more than {@code Integer.MAX_VALUE} parameters, returns\n     * {@code Integer.MAX_VALUE}.\n     *\n     * @return the number of parameters in this query\n     */\n    int size();\n\n    /**\n     * Returns {@code true} if this query contains a parameter with the\n     * specified name.\n     *\n     * @param paramName\n     *            the name of the parameter\n     * @return {@code true} if this query contains a parameter with the\n     *         specified name.\n     */\n    boolean hasParameter(String paramName);\n\n    /**\n     * Returns the parameter with the specified name, or {@code null} if this\n     * query contains no parameter with that name.\n     *\n     * @param paramName\n     *            the name of the parameter that is to be returned\n     * @return the parameter with the specified name, or {@code null} if this\n     *         query does not contain a parameter with the specified name\n     * @throws NullPointerException\n     *             if the specified key is null\n     */\n    Parameter getParameter(String paramName);\n\n    /**\n     * Return the names of the parameters in this query. If no parameters are\n     * available and empty set will be returned.\n     *\n     * @return the names of the parameters in this query, or an empty set if the\n     *         query is empty\n     */\n    Set<String> parameterNames();\n\n}\n```\n\nThe **`org.ldp4j.application.ext.Parameter`** conveys the string values defined for a particular parameter of the query and provides utility methods for transforming these representations into other Java types.\n\n``` java\n/**\n * A collection of values defined for a query parameter. The values are defined\n * as strings, which can be transformed to other Java types.\n */\npublic interface Parameter extends Serializable {\n\n    /**\n     * Returns the name of the parameter.\n     *\n     * @return the name of the parameter\n     */\n    String name();\n\n    /**\n     * Returns {@code true} if this parameter contains multiple values.\n     *\n     * @return {@code true} if this parameter contains multiple values\n     */\n    boolean isMultivalued();\n\n    /**\n     * Returns the number of values in this parameter. If the parameter contains\n     * more than {@code Integer.MAX_VALUE} value, returns\n     * {@code Integer.MAX_VALUE}.\n     *\n     * @return the number of values in this parameter\n     */\n    int cardinality();\n\n    /**\n     * Returns the first raw value of this parameter.\n     *\n     * @return the first raw value of this parameter\n     */\n    String rawValue();\n\n    /**\n     * Returns all the raw values of this parameter. If the parameter is not\n     * multivalued, the result will just contain that parameter's single value.\n     *\n     * @return the raw values of this parameter\n     */\n    List<String> rawValues();\n\n    /**\n     * Returns the first raw value of this parameter as an instance of a given\n     * type.\n     *\n     * @param clazz\n     *            the {@code Class} for the type T to which the raw value will\n     *            be transformed to.\n     * @return the instance of the specified {@code Class} to which the first\n     *         raw value of this parameter is transformed to.\n     * @throws ObjectTransformationException\n     *             if the raw value cannot be transformed to the specified type\n     *             T.\n     */\n    <T> T rawValueAs(Class<? extends T> clazz);\n\n    /**\n     * Returns the raw values of this parameter as instances of a given type.\n     *\n     * @param clazz\n     *            the {@code Class} for the type T to which the raw values will\n     *            be transformed to.\n     * @return the instances of the specified {@code Class} to which the raw\n     *         values of this parameter are transformed to.\n     * @throws ObjectTransformationException\n     *             if any of the raw values cannot be transformed to the\n     *             specified type T.\n     */\n    <T> List<T> rawValuesAs(Class<? extends T> clazz);\n\n}\n```\n\n### New application behaviour in action\n\n#### A resource handler without query support:\n\n``` http\nGET /non-queryable-resource/?param1=value1&param2=value2&param2=value3&param3 HTTP/1.1\nHost: localhost:53867\nAccept:  text/turtle\n```\n\n``` http\nHTTP/1.1 403 Forbidden\nContent-Type :  text/plain\nContent-Language : en\nLast-Modified : Tue, 15 Sep 2015 06:32:29 GMT\nEtag : \"ab37z88901f2\"\nLink : <http://www.w3.org/ns/ldp#Resource>; rel=\"type\", <http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\u201c\n\nResource cannot be queried\n```\n\n#### A resource handler with query support:\n\n``` http\nGET /queryable-resource/?param1=value1&param2=value2&param2=value3&param3  HTTP/1.1\nHost: localhost:53867\nAccept:  text/turtle\n```\n\n``` http\nHTTP/1.1 200 Ok\nETag : \"7878as46as9as76\"\nLast-Modified : Tue, 15 Sep 2015 06:32:29 GMT\nLink : <http://www.w3.org/ns/ldp#Resource>; rel=\"type\",<http://localhost:53867/queryable-resource/>; rel=\"queryOf\"; parameters=\"param1%3Dvalue1%26param2%3Dvalue2%26param2%3Dvalue3%26param3%3D\u201c\nContent-Type : text/turtle\n\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@base <http://localhost:53867/queryable-resource/> .\n_:query# Not referenced\n  rdf:type <http://www.ldp4j.org/examples#Query> ;\n  <http://www.ldp4j.org/examples#hasParameter> [ # FOLDED: _:parameter.param1\n    rdf:type <http://www.ldp4j.org/examples#Parameter> ;\n    <http://www.ldp4j.org/examples#hasName> \"param1\" ;\n    <http://www.ldp4j.org/examples#hasValue> \"value1\"\n  ] , [ # FOLDED: _:parameter.param2\n    rdf:type <http://www.ldp4j.org/examples#Parameter> ;\n    <http://www.ldp4j.org/examples#hasName> \"param2\" ;\n    <http://www.ldp4j.org/examples#hasValue> \"value2\", \"value3\"\n  ] , [ # FOLDED: _:parameter.param3\n    rdf:type <http://www.ldp4j.org/examples#Parameter> ;\n    <http://www.ldp4j.org/examples#hasName> \"param3\" ;\n    <http://www.ldp4j.org/examples#hasValue> \"\"\n  ] .\n\n```\n\n#### A resource handler with query support, but an invalid query is submitted:\n\n``` http\nGET /queryable-resource/?trim=yes HTTP/1.1\nHost: localhost:53867\nAccept:  text/turtle\n```\n\n``` http\nHTTP/1.1 400 Bad request\nETag : \"7878as46as9as76\"\nLast-Modified : Tue, 15 Sep 2015 06:32:29 GMT\nLink : <http://www.w3.org/ns/ldp#Resource>; rel=\"type\"\nContent-Type : text/turtle\n\nInvalid query: Could not understand: 'yes' is not a valid boolean value for parameter 'trim'\n\n```\n\n### Limitations\n- **Parameter name `ldp:constrainedBy` is protected, and cannot be used**.\n- **Query string parameter processing**:\n  - Parameters with no value in will have the empty string as raw value\n  - Parameters with multiple values will have the same number of raw values, despite they can be repeated\n- **Parameter value transformation**:\n  - Support for primitive types (_byte_, _short_, _int_, _long_, _double_, _float_, _char_, and _boolean_) as well as its wrapper types.\n  - Support for other native Java types with default string representation (`java.net.URI`, `java.net.URL`, `javax.xml.namespace.QName`, `java.util.UUID`).\n  - Support for temporal types using standard **ISO-8601 date** and **time** formats (`org.joda.time.DateTime`,  `org.joda.time.Duration`, `javax.xml.datatype.XMLGregorianCalendar`, `javax.xml.datatype.Duration, java.util.Date, java.sql.Date`).\n  - Support for enumerations using their default string representation.\n  - Support for custom Java types that provide a **public static `fromString(String)`** or **`valueOf(String)`** method that returns a representation of the type itself.\n\n## Resource resolution\n\n### Purpose\n\nEnable discovering at runtime the endpoint used to publish a resource, and viceversa, so that LDP4j applications can use this information on demand for other purposes (_i.e._, communicate its endpoints to a third party system)\n\n### Impact\n- **Application level**: \n  - Requires a new mechanism for specifying which is the canonical base URI for a given application\n  - Requires a new mechanism for discovering which URI is used to publish a specific resource\n  - Requires a new mechanism for discovering which resource is published by a specific URI\n- **Framework level**:\n  - _Application Engine_: Enable resolving  resource snapshots using a canonical base URI\n\n### New Application API\n\nThe resolution process is undertaken by instances of the class org.ldp4j.application.session.SnapshotResolver. To create an instance, an absolute hierarchical HTTP-based canonical base URL must be provided together with the ReadSession to use during the resolution process:\n\n``` java\n// The session to use\nReadSession session=...\n\n// The canonical base\nURI base=...\n\nSnapshotResolver resolver=\n  SnapshotResolver.\n    builder().\n      withCanonicalBase(base).\n      withReadSession(session).\n      build();\n```\n\nThe URI of a resource can be solved by requesting to the instance the resolution of the snapshot used for exposing the resource:\n\n``` java\n// The resource name\nName<?> name=... \n// The class of the resource handler that manages the resource\nClass<? extends ResourceHandler> handlerClass= ... \n\nResourceSnapshot snapshot=session.find(ResourceSnapshot.class,name,handlerClass);\nURI resolvedURI=session.toURI(snapshot);\n```\n\nIn the same way, given a URI, the snapshot that exposes the resource behind the URI can be solved as follows:\n\n``` java\n// URI to be resolved\nURI snapshotEndpoint=...\nResourceSnapshot snapshot=resolver.fromURI(snapshotEndpoint);\n```\n\n### Limitations\n\nThe resolution process only works for resources **published**, thus, the resolution will not be able to resolve snapshots within a write session before it is commited.\n\n## Framework common testing utils\n\nA collection of common utilities aimed to facilitate testing different aspects of the framework components has been provided in the new `org.ldp4j.commons:ldp4j-commons` module.  In particular, these utilities provide the means for:\n1. _Verifying that a custom toString representation is implemented_ (_i.e._, the result of the toString method is different for the default representation)\n2. _Verifying that a utility class is properly implemented_, that is:\n   2.1. The class is **final**\n   2.2. The class defines a **single private parameter-less constructor**\n\n# Enhancements\n\nThe **Application API** has been enhanced to enable using sessions in _try-with-resources_ statements ([see here](http://docs.oracle.com/javase/7/docs/technotes/guides/language/try-with-resources.html)): the `org.ldp4j.application.session.ReadSession` interface now extends `java.lang.AutoCloseable`, and redefines the close method to throw a framework specific unchecked exception (**`org.ldp4j.application.session.SessionTerminationException`**).\n\nAs part of this enhacement, the **`disposeSession`** method from the **`org.ldp4j.application.ApplicationContext`** class has been **deprecated**. This method will removed in the following release.\n\n# Fixes\n- Solved data set serialization failures when managed individuals cannot be resolved:\n  - Instead of throwing an unchecked exception, no triples are generated.\n",
        "dateCreated": "2015-12-17T14:46:58Z",
        "datePublished": "2015-12-18T11:11:33Z",
        "html_url": "https://github.com/ldp4j/ldp4j/releases/tag/0.2.0",
        "name": "Version 0.2.0",
        "tag_name": "0.2.0",
        "tarball_url": "https://api.github.com/repos/ldp4j/ldp4j/tarball/0.2.0",
        "url": "https://api.github.com/repos/ldp4j/ldp4j/releases/2310749",
        "zipball_url": "https://api.github.com/repos/ldp4j/ldp4j/zipball/0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "mestebangutierrez",
        "body": "",
        "dateCreated": "2015-09-02T07:24:53Z",
        "datePublished": "2015-09-02T07:36:39Z",
        "html_url": "https://github.com/ldp4j/ldp4j/releases/tag/0.1.0",
        "name": "Version 0.1.0",
        "tag_name": "0.1.0",
        "tarball_url": "https://api.github.com/repos/ldp4j/ldp4j/tarball/0.1.0",
        "url": "https://api.github.com/repos/ldp4j/ldp4j/releases/1755049",
        "zipball_url": "https://api.github.com/repos/ldp4j/ldp4j/zipball/0.1.0"
      },
      {
        "authorType": "Organization",
        "author_name": "ldp4j",
        "body": "Version of LDP4j used for the hands-on session of the [LDP4j tutorial](http://www.ldp4j.org/tutorials/eswc2015/) held at the [ESWC 2015](http://2015.eswc-conferences.org/) conference.\n",
        "dateCreated": "2015-05-08T08:21:38Z",
        "datePublished": "2015-06-02T09:32:02Z",
        "html_url": "https://github.com/ldp4j/ldp4j/releases/tag/eswc2015-tutorial",
        "name": "ESWC 2015 Pre-release",
        "tag_name": "eswc2015-tutorial",
        "tarball_url": "https://api.github.com/repos/ldp4j/ldp4j/tarball/eswc2015-tutorial",
        "url": "https://api.github.com/repos/ldp4j/ldp4j/releases/1365306",
        "zipball_url": "https://api.github.com/repos/ldp4j/ldp4j/zipball/eswc2015-tutorial"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 44,
      "date": "Mon, 20 Dec 2021 12:56:32 GMT"
    },
    "technique": "GitHub API"
  }
}