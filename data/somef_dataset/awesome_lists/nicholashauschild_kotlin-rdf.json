{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nicholashauschild/kotlin-rdf",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-08-24T06:08:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-23T01:23:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8962946666623293,
        0.8644091354633457,
        0.9269101169076976,
        0.9574656796471346
      ],
      "excerpt": "A series of DSL's to support creating and querying RDF Graphs. \nThis specific library is backed by Apache Jena. \nThe propertySchema DSL is used to setup a property or predicate 'namespace'. \nHere is an example that showcases the complete set of options available for using the propertySchema DSL: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9181841020863261,
        0.9277294823042072,
        0.8015126785705003,
        0.8730603126586365
      ],
      "excerpt": "1. It is establishing the start of the propertySchema DSL construct \n2. It is providing a value for the propertySchema's namespace. \nThe namespace is useful for providing a default uri template, which will \nallow us to remove some superfluous configuration. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.862255176922755,
        0.9838601621572094
      ],
      "excerpt": "1. It is providing a common name for a new property. \n2. It is establishing the start of the definition for the new property. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9596513132843273
      ],
      "excerpt": "Here is a table with the configuration options available for a property: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.963936625097326
      ],
      "excerpt": "the alias keyword to create aliases for properties. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9672578959204761
      ],
      "excerpt": "underlying property objects, which are implementations of the Property interface of the Apache Jena API. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8418595024789085
      ],
      "excerpt": "The propertySchema definition shown at the beginning of this section can be written up \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9143388519050204,
        0.8044815028581654,
        0.9483643038727889
      ],
      "excerpt": "In general, the idea behind the namespace template is to be able to use a common 'base' URI \nand derive the actual URI for each property from this template based on its name.  This is the \ndefault behavior of the property definition.  With this information, we can rewrite our initial \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806614122162396
      ],
      "excerpt": "    \"price\" {} // uri is the value of the merged namespace template and property name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627039549731798
      ],
      "excerpt": "configuration outside of default values. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8264915191170088
      ],
      "excerpt": "It is worth noting that these two variations may look the same now, but future versions of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956534774489512,
        0.9916298463400984
      ],
      "excerpt": "allow for a pick/choose type of customization \nThe rdfGraph DSL is meant to create an RDF graph or model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9574656796471346
      ],
      "excerpt": "Here is an example that showcases the complete set of options available for using the rdfGraph DSL: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.9968029537584643,
        0.9968029537584643
      ],
      "excerpt": "                props[\"enemies_with\"] of !\"cat\" \n                props[\"hair_color\"] of \"golden\" \n                props[\"leg_count\"] of 4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "                props[\"enemies_with\"] of !\"parrot\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "                props[\"leg_count\"] of 4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "                props[\"leg_count\"] of 2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8240434285570394
      ],
      "excerpt": "These lines are creating resources, which can be referred to by the leading String, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8254843395405238
      ],
      "excerpt": "portion able to be literals or other Resources. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9885776556041949
      ],
      "excerpt": "These lines are the 'Subject' part of the triple.  A block is started as a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.9968029537584643,
        0.9968029537584643
      ],
      "excerpt": "props[\"enemies_with\"] of !\"cat\" \nprops[\"hair_color\"] of \"golden\" \nprops[\"leg_count\"] of 4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9040389838458714
      ],
      "excerpt": "the enclosing subject to create triples. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9364375199216385,
        0.8165935455768826,
        0.8490037945672047,
        0.858368785231478
      ],
      "excerpt": "to the 'cat' Resource (remember the !\"cat\" syntax) \nThe second maps the Predicate of name 'hair_color' from the PropertySchema to \nthe string literal 'golden'. \nThe third maps the Predicate of name 'leg_count' from the PropertySchema to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9420751128887618
      ],
      "excerpt": "The rdfGraph DSL will return an object of type org.apache.jena.rdf.model.Model of the Apache Jena API. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8062084047747133,
        0.8002857288237715
      ],
      "excerpt": "It is possible to simply references to PropertySchema properties.  It requires \nproviding the PropertySchemas to your rdfGraph DSL setup. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "                \"someProp\" of 4 \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nicholashauschild/kotlin-rdf/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 20 Dec 2021 17:50:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nicholashauschild/kotlin-rdf/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nicholashauschild/kotlin-rdf",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nicholashauschild/kotlin-rdf/master/travis_scripts/push_tag_if_release.sh",
      "https://raw.githubusercontent.com/nicholashauschild/kotlin-rdf/master/travis_scripts/set_next_snapshot.sh",
      "https://raw.githubusercontent.com/nicholashauschild/kotlin-rdf/master/travis_scripts/releaseDeploy.sh",
      "https://raw.githubusercontent.com/nicholashauschild/kotlin-rdf/master/travis_scripts/snapshotDeploy.sh",
      "https://raw.githubusercontent.com/nicholashauschild/kotlin-rdf/master/travis_scripts/tag_if_release.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8790181519490972
      ],
      "excerpt": "has a function with signature operator fun get(name: String): Property which can be used to access the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8688315500098807
      ],
      "excerpt": "providing the PropertySchemas to your rdfGraph DSL setup. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8335700440939054
      ],
      "excerpt": "propertySchema(\"http://example/schema/{{property}}\") { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.842940904563104
      ],
      "excerpt": "        uri = \"http://example/schema/price\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335700440939054
      ],
      "excerpt": "propertySchema(\"http://example/schema/{{property}}\") { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.842940904563104
      ],
      "excerpt": "uri = \"http://example/schema/price\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335700440939054,
        0.864752562733598
      ],
      "excerpt": "propertySchema(\"http://example/schema/{{property}}\") { \n    \"color\" { uri = \"http://example/schema/color\" } alias \"pigment\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335700440939054,
        0.8502955478736554
      ],
      "excerpt": "    propertySchema(\"http://example/schema/{{property}}\") { \n        \"height\" { uri = \"http://example/schema/height\" } \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8667655363380845
      ],
      "excerpt": "assertEquals(\"http://example/schema/height\", aProperty.getURI()) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335700440939054
      ],
      "excerpt": "propertySchema(\"http://example/schema/{{property}}\") { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335700440939054
      ],
      "excerpt": "propertySchema(\"http://example/schema/{{property}}\") { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335700440939054
      ],
      "excerpt": "propertySchema(\"http://example/schema/{{property}}\") { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053966807636412
      ],
      "excerpt": "    pSchema(\"http://example/props/{{property}}\") { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8262429909520295,
        0.8262429909520295,
        0.8262429909520295
      ],
      "excerpt": "            \"dog\"(\"http://example/dog\") \n            \"cat\"(\"http://example/cat\") \n            \"parrot\"(\"http://example/parrot\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8262429909520295
      ],
      "excerpt": "            \"dog\"(\"http://example/dog\") \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nicholashauschild/kotlin-rdf/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Kotlin",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Nick Hauschild\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "kotlin-rdf",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "kotlin-rdf",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nicholashauschild",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nicholashauschild/kotlin-rdf/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Release dependencies: Not yet released.  Still experimental.\n\nSnapshot dependencies:\n```\nrepositories {\n    maven {\n        url uri('https://oss.jfrog.org/artifactory/libs-snapshot')\n    }\n}\ndependencies {\n    compile \"com.github.nicholashauschild:kotlin-rdf:0.1.0-SNAPSHOT\"\n}\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 20 Dec 2021 17:50:48 GMT"
    },
    "technique": "GitHub API"
  }
}