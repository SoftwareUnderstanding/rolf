{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Callidon/pyHDT",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-12-30T17:54:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-16T06:14:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9943320358784794
      ],
      "excerpt": "pyHDT is joining the RDFlib family as part of the rdflib 6.0 release! The development continues at rdflib-hdt, and this repository is going into archive. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9530497847057022,
        0.9525238733417086
      ],
      "excerpt": "More details on how to convert string to str from c++ to python here \nTo handle this we doubled the API of the HDT document by adding: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374576294374086
      ],
      "excerpt": " #: Missing indexes are generated automatically, add False as the second argument to disable them \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9520434114924775
      ],
      "excerpt": "for s, p, o in it: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Read and query HDT documents with ease in Python",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://pybind11.readthedocs.io/",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "http://pybind11.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Callidon/pyHDT/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 20 Dec 2021 17:52:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Callidon/pyHDT/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Callidon/pyHDT",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Callidon/pyHDT/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Callidon/pyHDT/master/install.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ngit clone https://github.com/Callidon/pyHDT\ncd pyHDT/\n./install.sh\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npip install hdt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Installation in a [virtualenv](https://virtualenv.pypa.io/en/stable/) is **strongly advised!**\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8228371885469257
      ],
      "excerpt": "  #: now decode it, or handle any error \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.812510988008838
      ],
      "excerpt": "More details on how to convert string to str from c++ to python here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8754518576292406,
        0.8283639429693203,
        0.8830460517323373,
        0.860214515691345
      ],
      "excerpt": "- search_triples_bytes(...) return an iterator of triples as (py::bytes, py::bytes, py::bytes) \n- search_join_bytes(...) return an iterator of sets of solutions mapping as py::set(py::bytes, py::bytes) \n- convert_tripleid_bytes(...) return a triple as: (py::bytes, py::bytes, py::bytes) \n- convert_id_bytes(...) return a py::bytes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516,
        0.8039658055879243
      ],
      "excerpt": "from hdt import HDTDocument \n#: Load an HDT file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8173645323919208
      ],
      "excerpt": "document = HDTDocument(\"test.hdt\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936606094659785
      ],
      "excerpt": "  print(s, p, o) #: print b'...', b'...', b'...' \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Callidon/pyHDT/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017-2019 Thomas Minier\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pyHDT",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pyHDT",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Callidon",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Callidon/pyHDT/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python *version 3.6.4 or higher*\n* [pip](https://pip.pypa.io/en/stable/)\n* **gcc/clang** with **c++11 support**\n* **Python Development headers**\n> You should have the `Python.h` header available on your system.   \n> For example, for Python 3.6, install the `python3.6-dev` package on Debian/Ubuntu systems.\n\nThen, install the [pybind11 library](http://pybind11.readthedocs.io/en/stable/)\n```\npip install pybind11\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Mon, 20 Dec 2021 17:52:33 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "rdf",
      "hdt",
      "python",
      "search"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```python\nfrom hdt import HDTDocument\n\n #: Load an HDT file.\n #: Missing indexes are generated automatically, add False as the second argument to disable them\ndocument = HDTDocument(\"test.hdt\")\n\n#: Display some metadata about the HDT document itself\nprint(\"nb triples: %i\" % document.total_triples)\nprint(\"nb subjects: %i\" % document.nb_subjects)\nprint(\"nb predicates: %i\" % document.nb_predicates)\nprint(\"nb objects: %i\" % document.nb_objects)\nprint(\"nb shared subject-object: %i\" % document.nb_shared)\n\n#: Fetch all triples that matches { ?s ?p ?o }\n#: Use empty strings (\"\") to indicates variables\ntriples, cardinality = document.search_triples(\"\", \"\", \"\")\n\nprint(\"cardinality of { ?s ?p ?o }: %i\" % cardinality)\nfor triple in triples:\n  print(triple)\n\n#: Search also support limit and offset\ntriples, cardinality = document.search_triples(\"\", \"\", \"\", limit=10, offset=100)\n#: etc ...\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}