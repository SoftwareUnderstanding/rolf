{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1708.02002, generalized to the multi-class case.\n\nIt is essentially an enhancement to cross-entropy loss and is useful for classification tasks when there is a large class imbalance. It has the effect of underweighting easy examples.\n\n# Usage\n- `FocalLoss` is an `nn.Module` and behaves very much like `nn.CrossEntropyLoss("
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9563697465372727
      ],
      "excerpt": "x, y = torch.randn(10, 2), (torch.rand(10) &gt; .5).long() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563697465372727
      ],
      "excerpt": "x, y = torch.randn(10, 2), (torch.rand(10) &gt; .5).long() \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AdeelH/pytorch-multi-class-focal-loss",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-03T09:08:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-22T15:34:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8928117861170948,
        0.9660168674622842
      ],
      "excerpt": "An (unofficial) implementation of Focal Loss, as described in the RetinaNet paper, https://arxiv.org/abs/1708.02002, generalized to the multi-class case. \nIt is essentially an enhancement to cross-entropy loss and is useful for classification tasks when there is a large class imbalance. It has the effect of underweighting easy examples. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    model='FocalLoss', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    model='focal_loss', \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An (unofficial) implementation of Focal Loss, as described in the RetinaNet paper, generalized to the multi-class case.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AdeelH/pytorch-multi-class-focal-loss/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Thu, 09 Dec 2021 09:18:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AdeelH/pytorch-multi-class-focal-loss",
    "technique": "GitHub API"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/292520399",
      "technique": "Regular expression"
    }
  ],
  "installation": [
    {
      "confidence": [
        0.8399529495036896
      ],
      "excerpt": "This repo supports importing modules through torch.hub. FocalLoss can be easily imported into your code via, for example: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Adeel Hassan\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Multi-class Focal Loss",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-multi-class-focal-loss",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AdeelH",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AdeelH/pytorch-multi-class-focal-loss/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "AdeelH",
        "body": "Minor changes.",
        "dateCreated": "2021-05-25T12:48:40Z",
        "datePublished": "2021-10-04T12:13:09Z",
        "html_url": "https://github.com/AdeelH/pytorch-multi-class-focal-loss/releases/tag/1.1",
        "name": "1.1",
        "tag_name": "1.1",
        "tarball_url": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/tarball/1.1",
        "url": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/releases/50737265",
        "zipball_url": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/zipball/1.1"
      },
      {
        "authorType": "User",
        "author_name": "AdeelH",
        "body": "",
        "dateCreated": "2020-11-05T07:13:29Z",
        "datePublished": "2020-11-05T13:18:23Z",
        "html_url": "https://github.com/AdeelH/pytorch-multi-class-focal-loss/releases/tag/1.0",
        "name": "",
        "tag_name": "1.0",
        "tarball_url": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/tarball/1.0",
        "url": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/releases/33502410",
        "zipball_url": "https://api.github.com/repos/AdeelH/pytorch-multi-class-focal-loss/zipball/1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 68,
      "date": "Thu, 09 Dec 2021 09:18:38 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "deep-learning",
      "loss-functions",
      "classification",
      "neural-network",
      "retinanet",
      "multiclass-classification",
      "imbalanced-classes",
      "pytorch-implementation",
      "implementation-of-research-paper",
      "machine-learning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- `FocalLoss` is an `nn.Module` and behaves very much like `nn.CrossEntropyLoss()` i.e.\n    - supports the `reduction` and `ignore_index` params, and\n    - is able to work with 2D inputs of shape `(N, C)` as well as K-dimensional inputs of shape `(N, C, d1, d2, ..., dK)`.\n\n- Example usage\n    ```python3\n    focal_loss = FocalLoss(alpha, gamma)\n\t...\n\tinp, targets = batch\n    out = model(inp)\n\tloss = focal_loss(out, targets)\n    ```\n\n",
      "technique": "Header extraction"
    }
  ]
}