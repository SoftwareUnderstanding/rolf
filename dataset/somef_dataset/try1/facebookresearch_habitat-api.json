{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The Habitat project would not have been possible without the support and contributions of many individuals. We would like to thank Dmytro Mishkin, Xinlei Chen, Georgia Gkioxari, Daniel Gordon, Leonidas Guibas, Saurabh Gupta, Or Litany, Marcus Rohrbach, Amanpreet Singh, Devendra Singh Chaplot, Yuandong Tian, and Yuxin Wu for many helpful conversations and guidance on the design and development of the Habitat platform.\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.01201",
      "https://arxiv.org/abs/2106.14405",
      "https://arxiv.org/abs/2106.14405",
      "https://arxiv.org/abs/1807.06757",
      "https://arxiv.org/abs/1807.06757",
      "https://arxiv.org/abs/1912.06321",
      "https://arxiv.org/abs/1807.06757",
      "https://arxiv.org/abs/1807.06757",
      "https://arxiv.org/abs/2006.13171",
      "https://arxiv.org/abs/2109.07703",
      "https://arxiv.org/abs/2106.14405",
      "https://arxiv.org/abs/1904.01201"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. \ud83c\udd95[Habitat 2.0: Training Home Assistants to Rearrange their Habitat](https://arxiv.org/abs/2106.14405) Andrew Szot, Alex Clegg, Eric Undersander, Erik Wijmans, Yili Zhao, John Turner, Noah Maestre, Mustafa Mukadam, Devendra Chaplot, Oleksandr Maksymets, Aaron Gokaslan, Vladimir Vondrus, Sameer Dharur, Franziska Meier, Wojciech Galuba, Angel Chang, Zsolt Kira, Vladlen Koltun, Jitendra Malik, Manolis Savva, Dhruv Batra. Advances in Neural Information Processing Systems (NeurIPS), 2021.\n2. [Habitat: A Platform for Embodied AI Research](https://arxiv.org/abs/1904.01201). Manolis Savva, Abhishek Kadian, Oleksandr Maksymets, Yili Zhao, Erik Wijmans, Bhavana Jain, Julian Straub, Jia Liu, Vladlen Koltun, Jitendra Malik, Devi Parikh, Dhruv Batra. IEEE/CVF International Conference on Computer Vision (ICCV), 2019.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use the Habitat platform in your research, please cite the [Habitat](https://arxiv.org/abs/1904.01201) and [Habitat 2.0](https://arxiv.org/abs/2106.14405) papers:\n\n```\n@inproceedings{szot2021habitat,\n  title     =     {Habitat 2.0: Training Home Assistants to Rearrange their Habitat},\n  author    =     {Andrew Szot and Alex Clegg and Eric Undersander and Erik Wijmans and Yili Zhao and John Turner and Noah Maestre and Mustafa Mukadam and Devendra Chaplot and Oleksandr Maksymets and Aaron Gokaslan and Vladimir Vondrus and Sameer Dharur and Franziska Meier and Wojciech Galuba and Angel Chang and Zsolt Kira and Vladlen Koltun and Jitendra Malik and Manolis Savva and Dhruv Batra},\n  booktitle =     {Advances in Neural Information Processing Systems (NeurIPS)},\n  year      =     {2021}\n}\n\n@inproceedings{habitat19iccv,\n  title     =     {Habitat: {A} {P}latform for {E}mbodied {AI} {R}esearch},\n  author    =     {Manolis Savva and Abhishek Kadian and Oleksandr Maksymets and Yili Zhao and Erik Wijmans and Bhavana Jain and Julian Straub and Jia Liu and Vladlen Koltun and Jitendra Malik and Devi Parikh and Dhruv Batra},\n  booktitle =     {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},\n  year      =     {2019}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{habitat19iccv,\n  title     =     {Habitat: {A} {P}latform for {E}mbodied {AI} {R}esearch},\n  author    =     {Manolis Savva and Abhishek Kadian and Oleksandr Maksymets and Yili Zhao and Erik Wijmans and Bhavana Jain and Julian Straub and Jia Liu and Vladlen Koltun and Jitendra Malik and Devi Parikh and Dhruv Batra},\n  booktitle =     {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},\n  year      =     {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{szot2021habitat,\n  title     =     {Habitat 2.0: Training Home Assistants to Rearrange their Habitat},\n  author    =     {Andrew Szot and Alex Clegg and Eric Undersander and Erik Wijmans and Yili Zhao and John Turner and Noah Maestre and Mustafa Mukadam and Devendra Chaplot and Oleksandr Maksymets and Aaron Gokaslan and Vladimir Vondrus and Sameer Dharur and Franziska Meier and Wojciech Galuba and Angel Chang and Zsolt Kira and Vladlen Koltun and Jitendra Malik and Manolis Savva and Dhruv Batra},\n  booktitle =     {Advances in Neural Information Processing Systems (NeurIPS)},\n  year      =     {2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9565696357172301
      ],
      "excerpt": "Citing Habitat \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/facebookresearch/habitat-lab",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to habitat-lab\nWe want to make contributing to this project as easy and transparent as\npossible.\nPull Requests\nWe actively welcome your pull requests.\n\nFork the repo and create your branch from master.\nIf you've added code that should be tested, add tests.\nIf you've changed APIs, update the documentation.\nEnsure the test suite passes.\nMake sure your code lints.\nIf you haven't already, complete the Contributor License Agreement (\"CLA\").\nWe have adopted squash-and-merge as the policy for incorporating PRs into the master branch.  We encourage more smaller/focused PRs rather than big PRs with many independent changes.  This also enables faster development by merging PRs into master quickly and reducing the need to rebase due to changes on master.\n\nContributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\nComplete your CLA here: https://code.facebook.com/cla\nVersioning / release workflow\nWe use semantic versioning. To prepare a release:\n1. Update version numbers.\n2. Update the change log.\n3. Make sure all tests are passing.\n4. Create a release tag with change log summary using the github release interface (release tag should follow semantic versioning as described above)\nStable versions are regularly assigned by Habitat core team after rigorous testing.\nIssues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\nTest\nWe use pytest testing framework and testing data that needs to be downloaded, please make sure that test are passing:\npytest\nCheck typing\nWe use mypy to check Python typing and guard API consistency, please make sure next command doesn't complain prior to submission:\nmypy . --ignore-missing-imports\nCoding Style\n\nWe follow PEP8 and use typing.\nUse black for style enforcement and linting. Install black through pip install black.\n\nWe also use pre-commit hooks to ensure linting and style enforcement. Install the pre-commit hooks with pip install pre-commit &amp;&amp; pre-commit install.\nDocumentation\n\nOur documentation style is based on Magnum / Corrade and uses a similar build system.\nDocumentation of PRs is highly encouraged!\n\nLicense\nBy contributing to habitat-lab, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-04T23:12:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-07T03:03:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9833799846865277,
        0.9726099982709219,
        0.9948959850404706,
        0.9772240879526054,
        0.9370812161245099,
        0.9755033466904002
      ],
      "excerpt": "While there has been significant progress in the vision and language communities thanks to recent advances in deep representations, we believe there is a growing disconnect between \u2018internet AI\u2019 and embodied AI. The focus of the former is pattern recognition in images, videos, and text on datasets typically curated from the internet. The focus of the latter is to enable action by an embodied agent in an environment (e.g. a robot). This brings to the forefront issues of active perception, long-term planning, learning from interaction, and holding a dialog grounded in an environment. \nTo this end, we aim to standardize the entire \u2018software stack\u2019 for training embodied agents \u2013 scanning the world and creating highly photorealistic 3D assets, developing the next generation of highly efficient and parallelizable simulators, specifying embodied AI tasks that enable us to benchmark scientific progress, and releasing modular high-level libraries to train and deploy embodied agents. \nAn important objective of Habitat Lab is to make it easy for users to set up a variety of embodied agent tasks in 3D environments. The process of setting up a task involves using environment information provided by the simulator, connecting the information with a dataset (e.g. PointGoal targets, or question and answer pairs for Embodied QA) and providing observations which can be used by the agents. Keeping this primary objective in mind the core API defines the following key concepts as abstractions that can be extended: \nEnv: the fundamental environment concept for Habitat. All the information needed for working on embodied tasks with a simulator is abstracted inside an Env. This class acts as a base for other derived environment classes. Env consists of three major components: a Simulator, a Dataset (containing Episodes), and a Task, and it serves to connects all these three components together. \nDataset: contains a list of task-specific episodes from a particular data split and additional dataset-wide information. Handles loading and saving of a dataset to disk, getting a list of scenes, and getting a list of episodes for a particular scene. \nEpisode: a class for episode specification that includes the initial position and orientation of an Agent, a scene id, a goal position and optionally shortest paths to the goal. An episode is a description of one task instance for the agent. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9569470138218669,
        0.8694841911470632,
        0.9060758654130231,
        0.9915566408633041
      ],
      "excerpt": "Task: this class builds on top of the simulator and dataset. The criteria of episode termination and measures of success are provided by the Task. \nSensor: a generalization of the physical Sensor concept provided by a Simulator, with the capability to provide Task-specific Observation data in a specified format. \nObservation: data representing an observation from a Sensor. This can correspond to physical sensors on an Agent (e.g. RGB, depth, semantic segmentation masks, collision sensors) or more abstract sensors such as the current agent state. \nNote that the core functionality defines fundamental building blocks such as the API for interacting with the simulator backend, and receiving observations through Sensors. Concrete simulation backends, 3D datasets, and embodied agent baselines are implemented on top of the core API. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9681655153302228
      ],
      "excerpt": "Habitat Lab includes reinforcement learning (via PPO) and classical SLAM based baselines. For running PPO training on sample data and more details refer habitat_baselines/README.md. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A modular high-level library to train embodied AI agents across a variety of tasks, environments, and simulators.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Habitat Lab documentation is available [here](https://aihabitat.org/docs/habitat-lab/index.html).\n\nFor example, see [this page](https://aihabitat.org/docs/habitat-lab/quickstart.html) for a quickstart example.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/facebookresearch/habitat-api/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 254,
      "date": "Wed, 08 Dec 2021 07:34:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/facebookresearch/habitat-lab/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "facebookresearch/habitat-lab",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/facebookresearch/habitat-api/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/examples/tutorials/colabs/Habitat_Interactive_Tasks.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/examples/tutorials/colabs/Habitat_Lab.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/habitat_baselines/rl/ddppo/single_node.sh",
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/habitat_baselines/rl/ddppo/multi_node_slurm.sh",
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/habitat_baselines/slambased/install_deps.sh",
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/docs/build.sh",
      "https://raw.githubusercontent.com/facebookresearch/habitat-api/main/docs/build-public.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We also provide a docker setup for habitat. This works on machines with an NVIDIA GPU and requires users to install [nvidia-docker](https://github.com/NVIDIA/nvidia-docker). The following [Dockerfile](Dockerfile) was used to build the habitat docker. To setup the habitat stack using docker follow the below steps:\n\n1. Pull the habitat docker image: `docker pull fairembodied/habitat:latest`\n\n1. Start an interactive bash session inside the habitat docker: `docker run --runtime=nvidia -it fairhabitat/habitat:v1`\n\n1. Activate the habitat conda environment: `source activate habitat`\n\n1. Benchmark a forward only agent on the test scenes data: `cd habitat-api; python examples/benchmark.py`. This should print out an output like:\n```bash\n2019-02-25 02:39:48,680 initializing sim Sim-v0\n2019-02-25 02:39:49,655 initializing task Nav-v0\nspl: 0.000\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone a stable version from the github repository and install habitat-lab using the commands below. Note that python>=3.6 is required for working with habitat-lab. All the development and testing was done using python3.6. Please use 3.6 to avoid possible issues.\n\n    ```bash\n    git clone --branch stable https://github.com/facebookresearch/habitat-lab.git\n    cd habitat-lab\n    pip install -e .\n    ```\n\n    The command above will install only core of Habitat Lab. To include habitat_baselines along with all additional requirements, use the command below instead:\n\n    ```bash\n    git clone --branch stable https://github.com/facebookresearch/habitat-lab.git\n    cd habitat-lab\n    pip install -r requirements.txt\n    python setup.py develop --all #: install habitat and habitat_baselines\n    ```\n\n2. Install `habitat-sim`:\n\n      For a machine with an attached display,\n\n      ```bash\n      conda install habitat-sim withbullet -c conda-forge -c aihabitat\n      ```\n\n      For a machine with multiple GPUs or without an attached display (i.e. a cluster),\n\n      ```bash\n       conda install habitat-sim withbullet headless -c conda-forge -c aihabitat\n      ```\n\n      See habitat-sim's [installation instructions](https://github.com/facebookresearch/habitat-sim#installation) for more detials.\n\n\n3. Run the example script `python examples/example.py ` which in the end should print out number of steps agent took inside an environment (eg: `Episode finished after 18 steps.`).\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8632863918038161
      ],
      "excerpt": "Download ReplicaCAD dataset using download utility: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8713239921126879
      ],
      "excerpt": "Download HM3D dataset using download utility and instructions: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8833679461443318
      ],
      "excerpt": "  <img src='res/img/habitat_lab_structure.png' alt=\"teaser results\" width=\"100%\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8678503093759735
      ],
      "excerpt": "| Scenes models | Extract path | Archive size | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065625232151372
      ],
      "excerpt": "| \ud83c\udd95ReplicaCAD | data/scene_datasets/replica_cad/configs/scenes/{scene}.scene_instance.json | 123 MB | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8327131353234454,
        0.9005994389536089
      ],
      "excerpt": "Download ReplicaCAD dataset using download utility: \npython -m habitat_sim.utils.datasets_download --uids replica_cad_dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8382175779121614,
        0.8235043531472777
      ],
      "excerpt": "The full Matterport3D (MP3D) dataset for use with Habitat can be downloaded using the official Matterport3D download script as follows: python download_mp.py --task habitat -o data/scene_datasets/mp3d/. You only need the habitat zip archive and not the entire Matterport3D dataset. Note that this download script requires python 2.7 to run. Extract the matterport data to data/scene_datasets/mp3d. \nDownload the Habitat related Gibson dataset following the instructions here. After downloading extract the dataset to folder habitat-lab/data/scene_datasets/gibson/ folder (this folder should contain the .glb files from Gibson). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.85967476644469,
        0.8948388273555766,
        0.8219342431530435,
        0.8759532173939427,
        0.85967476644469
      ],
      "excerpt": "| Point goal navigation | Gibson | pointnav_gibson_v1.zip | data/datasets/pointnav/gibson/v1/ |  datasets/pointnav/gibson.yaml | 385 MB | \n| \ud83c\udd95Point goal navigation | Gibson 0+ (train) | pointnav_gibson_0_plus_v1.zip | data/datasets/pointnav/gibson/v1/ |  datasets/pointnav/gibson_0_plus.yaml | 321 MB | \n| Point goal navigation corresponding to Sim2LoCoBot experiment configuration | Gibson | pointnav_gibson_v2.zip | data/datasets/pointnav/gibson/v2/ |  datasets/pointnav/gibson_v2.yaml | 274 MB | \n| Point goal navigation | MatterPort3D | pointnav_mp3d_v1.zip | data/datasets/pointnav/mp3d/v1/ | datasets/pointnav/mp3d.yaml | 400 MB | \n| \ud83c\udd95Point goal navigation | HM3D | pointnav_hm3d_v1.zip | data/datasets/pointnav/hm3d/v1/ |  datasets/pointnav/hm3d.yaml | 992 MB | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8179581437102842
      ],
      "excerpt": "| Image goal navigation | MatterPort3D | pointnav_mp3d_v1.zip | data/datasets/pointnav/mp3d/v1/ | datasets/imagenav/mp3d.yaml | 400 MB | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/facebookresearch/habitat-lab/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) Facebook, Inc. and its affiliates.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "habitat-lab",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "facebookresearch",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/facebookresearch/habitat-lab/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "### Major features and improvements:\r\n- Addition of velocity_control actions and support for Gaussian action (#655)\r\n\r\n## House Assistant Benchmarks Task Changes:\r\n- Collision force measurements fixes. (#684)\r\n- Contact measuring API changes with properly return contacts differentiating between object-on-scene, robot-on-scene, and robot-on-object types of contacts.\r\n- Starting state and the robot arm proper location fix.\r\n- Snap to grasp manager implemented and the grasp manager takes care of the collision groups.\r\n- Refactored observations_to_image to allow variable-sized sensor images. The different image sizes are now tiled side by side. Image and text flip fix. (#687)\r\n- Added actions for setting absolute kinematic state and target joint states. (#685)\r\n- Added separate IK config for the interactive play script.\r\nRefactored measurements code to break down the reward signal and reuse measurements for the reward and success signal.\r\n\r\n## Habitat Baselines Changes:\r\n- Support rendering images from observation with unequal dimensions.\r\n- Added benchmark_render.py, a new version of benchmark.py which supports rendering videos and saving trajectories to a file.\r\n- Added Gym wrapper with config for which parts of the observation to get.\r\n- Added Sense Plan Act pipeline from Habitat 2.0 paper.\r\n\r\n### Other improvements and bug fixes:\r\n- Add detail of headless vs. not to the readme (#679)\r\n- Fix to use resume config when training (#695)\r\n- Fix bug with size of the joint observation space.\r\n- Fixed the base transform was not being properly calculated.\r\n- Added interactive play test utility script. This is an important way to test the functionality. (#684)\r\n- Added collision specific measurements.\r\n- Refactored the rearrange simulator class to have less responsibility.\r\n- Record trajectory from the interactive play script for automated testing.\r\n- Added episode generation script for rearrangement tasks under examples folder.\r\n- Fixed properly load in scene config for new ReplicaCAD format.\r\n\r\n\r\n\r\nCorresponding [Habitat-Sim v0.2.1 release](https://github.com/facebookresearch/habitat-sim/releases/tag/v0.2.1).\r\n\r\n**Kudos to our community contributors:**  @naokiyokoyama.\r\n\r\n",
        "dateCreated": "2021-07-31T00:27:17Z",
        "datePublished": "2021-06-30T10:20:54Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "tag_name": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.2.1",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/45480021",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.2.1"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "### Major features and improvements:\r\n- Added fisheye camera to observation transformations by @matsuren (#486, #496)\r\nImplementation equirectangular into perspective images of observation transformation and performance improvement on cube map to equirectangular transformation by @matsuren (#517, #485)\r\n- Collapsed PPO and DD-PPO trainers, added faster RNN code, and double-buffered sampling, switched to optimal default models like ResNet18 (#538, #557)\r\n- Added performance profiling capabilities for PPO/DDPPO training (#477, #476)\r\n- Added Visual Question Answering baseline and NAV-PACMAN baseline implementation for EQA by @mukulkhanna (#487, #539)\r\n- Added mypy and static mandatory type checking and significantly improved typing of the existing codebase (#492, #527, #535, #535)  \r\n- +5% speedup for all model training with zero-copy pickling method used for the vector environments (#582)\r\n\r\n\r\n### Other improvements and bug fixes:\r\n- Support of modern gym API (#498)\r\n- Enhance the display of the top-down map for a floor the agent is currently on by @Skylark0924 (#580)\r\n- Support properties and members with a call method for vector environment (#548)\r\n- [Backwards Incompatible Change] Address out of sync with Habitat Sim config file extensions and refactor for removal of Habitat SimSceneConfiguration (#508, #516, #525)\r\n- Episode generator bug fix by @Jbwasse2 (#560)\r\n- SLAM baselines install script update by @Jbwasse2 (#552)\r\n- Allow PointNav GPS and Compass to support 3D (#553)\r\n- Fix DDP Reduction in PyTorch 1.7 when the model has unused parameters #586\r\n- Compatibility with refactored CameraSensor and SceneGraph in Habitat Sim (#575)\r\n- Bugfix for the situation when the child pipe was not closed (#585)\r\n- Updates of code style guide enforcement tooling (#512)\r\n- Continue integrations improvements: using pre-installed CUDA and better pytest results handling (#510, #511, #524)\r\n- Added support of running evaluation on multiple single checkpoints in the same folder (#493)\r\n- Added shellcheck to pre-commit hook (#509)\r\n\r\nCorresponding [Habitat-Sim v0.1.7 release](https://github.com/facebookresearch/habitat-sim/releases/tag/v0.1.7).\r\n\r\n**Kudos to our community contributors:**  @matsuren, @mukulkhanna, @Jbwasse2, @Skylark0924\r\n",
        "dateCreated": "2021-02-22T17:22:42Z",
        "datePublished": "2021-02-17T08:03:49Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.7",
        "name": "v0.1.7",
        "tag_name": "v0.1.7",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.7",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/38151603",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.7"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "v0.1.7 rc1",
        "dateCreated": "2021-01-25T22:51:00Z",
        "datePublished": "2021-01-25T22:52:01Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.7-rc1",
        "name": "v0.1.7 rc1",
        "tag_name": "v0.1.7-rc1",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.7-rc1",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/36886510",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.7-rc1"
      },
      {
        "authorType": "User",
        "author_name": "aclegg3",
        "body": "### Major features and improvements:\r\n-  Renamed Habitat-API to Habitat-Lab to emphasize its purpose: to conduct experiments in embodied AI, define tasks, train different agents, benchmark performance (#448, #450).\r\n- Implemented a demo cubemap2equirect that stitches together 6 sensors into one creating a 360 Sensor (#478). \r\n- Added an observation transformer registry for transformation as Cropping, Resize and separating Observation Transformation and Policy (#478).\r\n- Embodied Question Answering (EQA) CNN Pre-trainer for EQA baseline implementation by @mukulkhanna (#430).\r\n- Add UUID config to simulator visual sensors to better support multiple sensor of the same type (#472).\r\n- Implemented standard interface for policy instantiation by @rpartsey (#453).\r\n- Added Habitat-Lab Colab Tutorial, presented on ECCV2020 by @dexter1691(#445).\r\n- Delivered Habitat-Lab Interactive Task Colab Tutorial that demonstrate adding new task with grab/release action and moving objects by @dexter1691  (#449).\r\n- Implemented DDPPO baseline for Image Navigation task by @thibautlavril (#378).\r\n- Implemented policy registry to support different policies for the same Trainer by @rpartsey (#440).\r\n- Added usage habitat-sim's topdown view (#442).\r\n- Implemented dataset generation script for Gibson 500 scenes PointNav Task by @srama2512 (#387).\r\n- Removed Habitat Sim wrapper to avoid `sim._sim` constructions. (#418).\r\n\r\n\r\n### Other improvements and bug fixes:\r\n- Bug fix for VLN follower (#461)\r\n- Updated precommit and fix linter (#433)\r\n- Added isort to jupytext (#441)\r\n- Added autoflake support (#456)\r\n- Flake8 upgrade and Pre-Commit Hook added for CircleCI (#459, #469)\r\n- Multiple other Fixes: signal masking, README updates (#406, #413, #418, #435, #426, #438, #439)\r\n\r\nCorresponding [Habitat-Sim v0.1.6 release](https://github.com/facebookresearch/habitat-sim/releases/tag/v0.1.6).\r\n\r\n**Kudos to our community contributors:** @thibautlavril, @rpartsey, @dexter1691, @mukulkhanna, @srama2512.",
        "dateCreated": "2020-09-17T06:42:01Z",
        "datePublished": "2020-09-18T19:38:30Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.6",
        "name": "v0.1.6",
        "tag_name": "v0.1.6",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.6",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/30468374",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.6"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "### Major features and improvements:\r\n- Added Object Navigation task definition, dataset, metrics, goal sensor (#284, #309, #355)\r\n- Object Navigation DDPPO baselines (#370)\r\n- Added Image navigation task (#333)\r\n- Added geodesic distance for multiple goals (#290)\r\n- Integrated RGB, Depth, PyRobot actuation noises, initial camera orientation. (#305)\r\n- Generated PointNav Gibson v2 supporting sim2real direction (#316)\r\n- Nightly build of docs and tutorials (#393, #396, #400)\r\n- Faster multi-goal geodesic distance computation and caching (#352)\r\n\r\n### Other improvements and bug fixes:\r\n- Metrics dependency mechanism to deliver ObjectNav 2x speed (#284, #332)\r\n- Cleaned up agent state checks (#399)\r\n- Added utility func for computing local state change (#392)\r\n- Fixed docker build with extra space. (#363) \r\n- Update demo notebook (habitat.utils.common import) (#351)\r\n- Update Dockerfile to stable (#339)\r\n- Update CUDAGL base image, cmake version and git clone in Dockerfile. (#349)\r\n- Added physics config to default habitat simulator config. (#289) \r\n- Interface with habitat-sim no sliding (#283)\r\n- Added Observation Transformation API (#365)\r\n- Soft SPL implementation: SPL with a softer success criterion (#361).\r\n- Habitat Challenge 2020 gRPC evaluation support (#319)\r\n\r\nCorresponding [Habitat-SIM v0.1.5 release](https://github.com/facebookresearch/habitat-sim/releases/tag/v0.1.5).\r\n\r\n**Kudos to our community contributors:** @thibautlavril, @Xiaoming-Zhao, @pushkalkatara, @kdexd, @Adidushi, @smorad.\r\n",
        "dateCreated": "2020-05-27T23:07:02Z",
        "datePublished": "2020-05-28T02:40:25Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.5",
        "name": "v0.1.5",
        "tag_name": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.5",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/26971994",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.5"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "- [A new large-scale distributed reinforcement learning algorithm Decentralized Distributed PPO](https://ai.facebook.com/blog/near-perfect-point-goal-navigation-from-25-billion-frames-of-experience/) (#245)\r\n- Added Visual Language Navigation Task & Dataset with shortest path example and tests (#233, #263)\r\n- Allow free form arbitrary yaml configs (#275)\r\n- Added test coverage measure for habitat-api with codecov (#257)\r\n- Expand Tensorboard visualization to more than RGB sensor (#251)\r\n\r\n**Other improvements and bug fixes**:\r\n- Preserve scene ordering (#234)\r\n- Fix bugs in config setup and pause_env condition (#235)\r\n- Add CUDA path to CI config path (#249)\r\n- Fix wrong return type of SimulatorTaskAction.step (#248)\r\n- Fix try register for pointnav dataset (#254)\r\n- Fix the documentation build (#256)\r\n- Fix contains method in space classes (#272)\r\n- Fixing Spelling error in 'appned' and adding test (#280)\r\n\r\nCorresponding [Habitat-SIM v0.1.4 release](https://github.com/facebookresearch/habitat-sim/releases/tag/v0.1.4).\r\n\r\n**Community contributors**: @koshyanand, @jacobkrantz, @arjunmajum,  @ChanganVR, @Danmou.",
        "dateCreated": "2020-01-29T17:48:35Z",
        "datePublished": "2020-01-21T23:54:30Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.4",
        "name": "v0.1.4",
        "tag_name": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.4",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/23023350",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.4"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "- Habitat baselines redesign: introduced general trainer (#132, #153, #172, #178), PPO baseline is extendable to other tasks (#112, #126, #144, #176), customizable dataset iterator (#163, #156, #216)\r\n- Embodied Question Answering task released with a dataset. (#113)\r\n- Towards sim2real: integration with [PyRobot](https://github.com/facebookresearch/pyrobot) (#199)\r\n- Continuous and parameterized actions support, extendable simulator action space (#110, #196, #151)\r\n- GPU-GPU memory sharing with [PyTorch](https://github.com/pytorch/pytorch) to speed up training (#197)\r\n- Visualization tools: tensorboard integration (#127), display an episode navigation video on tensorboard, fog of war (#160, #166)\r\n- Added documentation generating system (#201, #219, #212) and improved tutorials (#125, #128), updated class diagram (#224)\r\n\r\n**Other improvements and bug fixes**:\r\n- CI improvements: Added ccache, fixed [PyTorch](https://github.com/pytorch/pytorch) caching (#161), install hsim requirements step (#159), removed travis CI (#215), check of test data installed (#193), pre-commit, added isort-seed, changed CI black and isort (#214)\r\n - Vector environments bug fixes: fix multiprocess eval (#150), fixed vector env deletion (#185), fixed pausing logic (#200), fixed bug in env_utils (#208), fixed a bug of empty list initialization (#209) \r\n - Dataset utils fixed: modified partitioning logic to handle left-over scenes (#89), fixed bug with uneven splits for dataset (#192).\r\n -  Correct the naming of PointGoalNav Sensors (#180), fixed an issue with POINTNAVV1 name (#130) \r\n -  Fix quickstart keys commands (#147) \r\n -  Update Habitat-API to allow for no rendering sensors (#139) \r\n -  Update baseline test import and fix docstring (#170) \r\n -  Evaluate on val and add an option to not take the checkpoints config (#213) \r\n -  Changed Shortest Path Follower criteria to use geodesic distance. (#194) \r\n -  Add py.typed file to indicate PEP 561 compatibility (#198) \r\n\r\nCorresponding [Habitat-SIM v0.1.3 release](https://github.com/facebookresearch/habitat-sim/releases/tag/v0.1.3).\r\n\r\n**Community contributors**: @danielgordon10, @RicCu, @Danmou",
        "dateCreated": "2019-10-15T01:31:08Z",
        "datePublished": "2019-10-14T17:27:17Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.3",
        "name": "v0.1.3",
        "tag_name": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.3",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/20481502",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.3"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "- Added SLAM based agents\r\n- Added Greedy Shortest Path Follower \r\n- Added episode generation code for PointGoal task.\r\n- Nav task improvements, static PointGoal sensor\r\n- Image to video generation utils and top down map measure\r\n- Dataset utility functions \r\n- Config system improvements: compositional config, added scenes_dir.\r\n- Made simple agents suitable for challenge submissions\r\n- Redesign factory/registry pattern\r\n- Switched to attr library for class definition\r\n- Separate baseline installation options\r\n- CI setup with e2e testing using GPU machines \r\n- Tutorials, examples and improved documentation\r\n- Numerous number of bug fixes\r\n\r\n**Community contributors**: @danielgordon10, @RicCu. ",
        "dateCreated": "2019-06-14T04:09:51Z",
        "datePublished": "2019-08-15T18:47:04Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.2",
        "name": "v0.1.2",
        "tag_name": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.2",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/17815842",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.2"
      },
      {
        "authorType": "User",
        "author_name": "mathfac",
        "body": "The release contains important parts for the Habitat challenge, visualizations utilities, fixes:\r\n- Benchmark and challenge implementations\r\n- PPO agents, Random, ForwardOnly, GoalFollower agents\r\n- High resolution top down map and bird-eye visualizations\r\n- Collisions measure introduced\r\n- SPL success criteria fix\r\n- Added deleter that closes subprocesses\r\n\r\n**Community contributors**: @ducha-aiki, @danielgordon10, @titardrew, @eric-xw, @oawiles, @mjschock.",
        "dateCreated": "2019-04-05T00:04:58Z",
        "datePublished": "2019-04-05T01:01:49Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "tag_name": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.1",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/16525508",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.1"
      },
      {
        "authorType": "User",
        "author_name": "abhiskk",
        "body": "Habitat-API is a modular high-level library for end-to-end development in embodied AI. It supports the following functionalities:\r\n\r\n* Defining embodied AI tasks (e.g. navigation, instruction following, question answering)\r\n* Configuring embodied agents (physical form, sensors, capabilities)\r\n* Training these agents (via imitation or reinforcement learning, or no learning at all as in classical SLAM)\r\n* Benchmarking their performance on the defined tasks using standard metrics.",
        "dateCreated": "2019-02-27T07:22:57Z",
        "datePublished": "2019-02-27T07:24:07Z",
        "html_url": "https://github.com/facebookresearch/habitat-lab/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/tarball/v0.1.0",
        "url": "https://api.github.com/repos/facebookresearch/habitat-lab/releases/15798756",
        "zipball_url": "https://api.github.com/repos/facebookresearch/habitat-lab/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 755,
      "date": "Wed, 08 Dec 2021 07:34:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "ai",
      "computer-vision",
      "robotics",
      "simulator",
      "sim2real",
      "deep-learning",
      "deep-reinforcement-learning",
      "reinforcement-learning",
      "research",
      "python"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<!--- Please, update `examples/example.py` if you update example. -->\n\n\ud83c\udd95Example code-snippet which uses [`tasks/rearrangepick_replica_cad.yaml`](configs/tasks/rearrangepick_replica_cad.yaml) for configuration of task and agent.\n\n```python\nimport habitat\n\n#: Load embodied AI task (RearrangePick) and a pre-specified virtual robot\nenv = habitat.Env(\n    config=habitat.get_config(\"configs/tasks/rearrangepick_replica_cad.yaml\")\n)\n\nobservations = env.reset()\n\n#: Step through environment with random actions\nwhile not env.episode_over:\n    observations = env.step(env.action_space.sample())\n\n```\n\nSee [`examples/register_new_sensors_and_measures.py`](examples/register_new_sensors_and_measures.py) for an example of how to extend habitat-lab from _outside_ the source code\n\n",
      "technique": "Header extraction"
    }
  ]
}