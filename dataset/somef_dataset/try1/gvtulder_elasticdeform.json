{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1505.04597>",
      "https://arxiv.org/abs/1606.06650>"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": ": define a crop region \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9179510453168651
      ],
      "excerpt": "If you want to cite this library, please see . \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gvtulder/elasticdeform",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-16T15:03:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-30T11:04:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8622844133139081
      ],
      "excerpt": ": apply deformation to inputs X and Y \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8622844133139081,
        0.8015377501164918
      ],
      "excerpt": ": apply deformation to inputs X and Y, \n: with a different interpolation for each input \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8756600622433174
      ],
      "excerpt": ": the deformation is the same \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910289882737215
      ],
      "excerpt": "as data augmentation step. The rotation and zoom are applied to the output \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8769802232224027
      ],
      "excerpt": "Note that the output shape remains the same. The mapping of the input to the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8776367239813851,
        0.9760896805217091,
        0.9563606521642597
      ],
      "excerpt": "Rotate and zoom can be combined with the crop argument. In that case, the \nscaling and rotation is performed relative to the center of the cropped output. \nFor more advanced transformations, it is also possible to provide an affine \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9177895887363626,
        0.821175844085973
      ],
      "excerpt": "the output with respect to the input. Call deform_grid_gradient with the \nparameters that were used for the forward step. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9075773143681375
      ],
      "excerpt": "The elasticdeform.tf module provides a wrapper for deform_grid in TensorFlow. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8145514715844373
      ],
      "excerpt": ": but it accepts and returns TensorFlow Tensors \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8910548005140356
      ],
      "excerpt": "The elasticdeform.torch module provides a wrapper for deform_grid in PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8357511314085094
      ],
      "excerpt": ": but it accepts and returns PyTorch Tensors \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9009614607129621,
        0.8490037945672047,
        0.8166095081088743
      ],
      "excerpt": "Biomedical Imaging Group Rotterdam, \nErasmus MC, Rotterdam, the Netherlands \nIt is inspired by a similar, Python-based implementation by \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9140519459356842
      ],
      "excerpt": "This C-based implementation gives the same results, but is faster and has \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9174043961899819
      ],
      "excerpt": "This C implementation includes a modified version of the NI_GeometricTransform \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9383135153771079
      ],
      "excerpt": "This code is made available under the BSD license. See LICENSE.txt for details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Differentiable elastic deformations for N-dimensional images (Python, SciPy, NumPy, TensorFlow, PyTorch).",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://elasticdeform.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gvtulder/elasticdeform/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Tue, 07 Dec 2021 13:37:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gvtulder/elasticdeform/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gvtulder/elasticdeform",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/gvtulder/elasticdeform/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/145003699",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/145003699",
      "technique": "Regular expression"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.899899398442048,
        0.824436571700774
      ],
      "excerpt": ": generate a deformation grid \ndisplacement = numpy.random.randn(2, 3, 3) * 25 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.850766455349086
      ],
      "excerpt": ": apply deformation with a random 3 x 3 grid, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899899398442048,
        0.824436571700774
      ],
      "excerpt": ": generate a deformation grid \ndisplacement = numpy.random.randn(2, 3, 3) * 25 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8311292080761891
      ],
      "excerpt": "dX_deformed = numpy.random.randn(*X_deformed.shape) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8268604744325778
      ],
      "excerpt": "The function uses TensorFlow Tensors as input and output, but otherwise uses \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8877186685739473,
        0.920746350801121
      ],
      "excerpt": "import numpy \nimport elasticdeform.tf as etf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8877186685739473
      ],
      "excerpt": "import numpy \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gvtulder/elasticdeform/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C",
      "Python",
      "C++"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Elastic deformations for N-dimensional images (Python, SciPy, NumPy, TensorFlow, PyTorch)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "elasticdeform",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gvtulder",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gvtulder/elasticdeform/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "gvtulder",
        "body": "The binary packages should now also work with older NumPy versions.",
        "dateCreated": "2021-03-01T11:02:03Z",
        "datePublished": "2021-03-01T11:25:41Z",
        "html_url": "https://github.com/gvtulder/elasticdeform/releases/tag/v0.4.9",
        "name": "Version 0.4.9",
        "tag_name": "v0.4.9",
        "tarball_url": "https://api.github.com/repos/gvtulder/elasticdeform/tarball/v0.4.9",
        "url": "https://api.github.com/repos/gvtulder/elasticdeform/releases/39047425",
        "zipball_url": "https://api.github.com/repos/gvtulder/elasticdeform/zipball/v0.4.9"
      },
      {
        "authorType": "User",
        "author_name": "gvtulder",
        "body": "Updates the TensorFlow wrapper to TensorFlow 2 and adds a new PyTorch wrapper.",
        "dateCreated": "2021-02-26T02:10:17Z",
        "datePublished": "2021-02-26T03:36:45Z",
        "html_url": "https://github.com/gvtulder/elasticdeform/releases/tag/v0.4.8",
        "name": "Version 0.4.8",
        "tag_name": "v0.4.8",
        "tarball_url": "https://api.github.com/repos/gvtulder/elasticdeform/tarball/v0.4.8",
        "url": "https://api.github.com/repos/gvtulder/elasticdeform/releases/38778884",
        "zipball_url": "https://api.github.com/repos/gvtulder/elasticdeform/zipball/v0.4.8"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 118,
      "date": "Tue, 07 Dec 2021 13:37:19 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "elastic-deformations",
      "pytorch",
      "tensorflow",
      "data-augmentation"
    ],
    "technique": "GitHub API"
  }
}