{
  "citation": [
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": " resnet269-v2| 80.29/95.00 | 81.75/95.80 | 81.30/95.67 | 82.13/96.15  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": " inception-v4| 79.97/94.91 | 81.40/95.70 | 81.32/95.68 | 81.88/96.08  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507374082549614
      ],
      "excerpt": " resnext101_64x4d| 79.40/94.59 | 81.12/95.41 | 80.74/95.37 | 81.52/95.69 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9880157813353811
      ],
      "excerpt": " resnet152-v2| 32.11/32.54ms | 37.46/41.84ms | 230.2MB|craftGBD \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423,
        0.9537267708315463,
        0.9156566588472104
      ],
      "excerpt": " resnext50_32x4d| 17.29/20.08ms | 19.02/23.81ms | 95.8MB|facebookresearch \n resnext101_32x4d| 30.73/35.75ms | 34.33/41.02ms | 169.1MB|facebookresearch \n resnext101_64x4d| 42.07/64.58ms | 51.99/77.71ms | 319.2MB|facebookresearch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8511535834563826
      ],
      "excerpt": "crop_num = 1    #: perform center(single)-crop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8511535834563826
      ],
      "excerpt": "crop_num = 1    #: perform center(single)-crop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8511535834563826
      ],
      "excerpt": "crop_num = 1    #: perform center(single)-crop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8511535834563826
      ],
      "excerpt": "crop_num = 1    #: perform center(single)-crop \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9371227303709285
      ],
      "excerpt": "I greatly thank Yangqing Jia and BVLC group for developing Caffe \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GeekLiB/caffe-model",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-04-11T09:35:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-20T09:21:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This folder contains the deploy files(include generator scripts) and pre-train models of resnet-v1, resnet-v2, inception-v3, inception-resnet-v2 and densenet(coming soon).\n\nWe didn't train any model from scratch, some of them are converted from other deep learning framworks (inception-v3 from [mxnet](https://github.com/dmlc/mxnet-model-gallery/blob/master/imagenet-1k-inception-v3.md), inception-resnet-v2 from [tensorflow](https://github.com/tensorflow/models/blob/master/slim/nets/inception_resnet_v2.py)), some of them are converted from other modified caffe ([resnet-v2](https://github.com/yjxiong/caffe/tree/mem)). But to achieve the original performance, finetuning is performed on imagenet for several epochs. \n\nThe main contribution belongs to the authors and model trainers.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8531016338676636
      ],
      "excerpt": "Top-1/5 accuracy of pre-train models in this repository. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9161158524838245,
        0.8615730533915537,
        0.9534673434502616
      ],
      "excerpt": "224x224(base_size=256) and 320x320(base_size=320) crop size for resnet-v2/resnext/wrn, 299x299(base_size=320) and 395x395(base_size=395) crop size for inception. \nTop-1/5 accuracy with different crop sizes. \nFigure: Accuracy curves of inception_v3(left) and resnet101_v2(right) with different crop sizes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8495545611665544
      ],
      "excerpt": "Forward/Backward time cost is evaluated with one image/mini-batch using cuDNN 5.1 on a Pascal Titan X GPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627126552026624
      ],
      "excerpt": " to test the forward/backward time cost, the result is really different with time cost of evaluation_cls.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9602833310259846
      ],
      "excerpt": "Check the resnet-v2 (101, 152 and 269) performance, the settings of evaluation_cls.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.938235165661567
      ],
      "excerpt": "model_deploy = 'resnet-v2/deploy_resnet101_v2.prototxt' #: check the parameters of input_shape \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8613381651835879
      ],
      "excerpt": "Check the inception-v3 performance, the settings of evaluation_cls.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410932903412481
      ],
      "excerpt": "model_deploy = 'inception_v3/deploy_inception_v3.prototxt' #: check the parameters of input_shape \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8167712789842434
      ],
      "excerpt": "Check the inception-resnet-v2 (inception-v4) performance, the settings of evaluation_cls.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410932903412481
      ],
      "excerpt": "model_deploy = 'inception_resnet_v2/deploy_inception_resnet_v2.prototxt' #: check the parameters of input_shape \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.958486689961878
      ],
      "excerpt": "Check the resnext (50_32x4d, 101_32x4d and 101_64x4d) or wrn50_2 performance, the settings of evaluation_cls.py: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410932903412481
      ],
      "excerpt": "model_deploy = 'inception_resnet_v2/deploy_inception_resnet_v2.prototxt' #: check the parameters of input_shape \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Caffe models (imagenet pretrain) and prototxt generator scripts for inception_v3 \\ inception_v4 \\ inception_resnet \\ fractalnet \\ resnext",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GeekLiB/caffe-model/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 94,
      "date": "Wed, 08 Dec 2021 07:35:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GeekLiB/caffe-model/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "GeekLiB/caffe-model",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8368388041985679,
        0.8419333630272138,
        0.8361919208099035
      ],
      "excerpt": " resnet101-v2| 78.05/93.88 | 80.01/94.96 | 79.63/94.84 | 80.71/95.43 \n resnet152-v2| 79.15/94.58 | 80.76/95.32 | 80.34/95.26 | 81.16/95.68  \n resnet269-v2| 80.29/95.00 | 81.75/95.80 | 81.30/95.67 | 82.13/96.15  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8148265713571851
      ],
      "excerpt": "Download the ILSVRC 2012 classification val set 6.3GB, and put the extracted images into the directory: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.831537032071762
      ],
      "excerpt": "val_file = 'ILSVRC2012_val.txt' #: download from this folder, label range 0~999 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8294786662228457,
        0.8934100723049424
      ],
      "excerpt": "mean_value = np.array([102.9801, 115.9465, 122.7717])  #: BGR \nstd = np.array([1.0, 1.0, 1.0])  #: BGR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.831537032071762
      ],
      "excerpt": "val_file = 'ILSVRC2015_val.txt' #: download from this folder, label range 0~999 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8761750154761384,
        0.8761750154761384
      ],
      "excerpt": "mean_value = np.array([128.0, 128.0, 128.0])  #: BGR \nstd = np.array([128.0, 128.0, 128.0])  #: BGR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.831537032071762
      ],
      "excerpt": "val_file = 'ILSVRC2012_val.txt' #: download from this folder, label range 0~999 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8761750154761384,
        0.8761750154761384
      ],
      "excerpt": "mean_value = np.array([128.0, 128.0, 128.0])  #: BGR \nstd = np.array([128.0, 128.0, 128.0])  #: BGR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.831537032071762
      ],
      "excerpt": "val_file = 'ILSVRC2012_val.txt' #: download from this folder, label range 0~999 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8866461518617846
      ],
      "excerpt": "mean_value = np.array([103.52, 116.28, 123.675])  #: BGR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "    python evaluation_cls.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GeekLiB/caffe-model/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Caffe-model",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "caffe-model",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "GeekLiB",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GeekLiB/caffe-model/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 119,
      "date": "Wed, 08 Dec 2021 07:35:05 GMT"
    },
    "technique": "GitHub API"
  }
}