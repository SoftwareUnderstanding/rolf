{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.03657",
      "https://arxiv.org/abs/1606.03657"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. **Xi Chen, Yan Duan, Rein Houthooft, John Schulman, Ilya Sutskever, Pieter Abbeel.** *InfoGAN: Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets.* [[arxiv](https://arxiv.org/abs/1606.03657)]\n2. **pianomania/infoGAN-pytorch** [[repo](https://github.com/pianomania/infoGAN-pytorch)]\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "<th> Generation GIF </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "<th> Generation GIF </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "<th> Generation GIF </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "<th> Generation GIF </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "Azimuth (pose) <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490817347094297
      ],
      "excerpt": "Hair Style and Color <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Natsu6767/InfoGAN-PyTorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-19T07:49:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-08T07:11:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "InfoGAN is an information-theoretic extension to the simple Generative Adversarial Networks that is able to learn disentangled representations in a completely unsupervised manner. What this means is that InfoGAN successfully disentangle wrirting styles from digit shapes on th MNIST dataset and discover visual concepts such as hair styles and gender on the CelebA dataset. To achieve this an information-theoretic regularization is added to the loss function that enforces the maximization of mutual information between latent codes, c, and the generator distribution G(z, c).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9424867957489024
      ],
      "excerpt": "PyTorch implementation of InfoGAN: Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets with result of experiments on MNIST, FashionMNIST, SVHN and CelebA datasets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8116783346516859
      ],
      "excerpt": "\u251c\u2500\u2500 data \n\u2502   \u251c\u2500\u2500 mnist #: mnist data (not included in this repo) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116783346516859
      ],
      "excerpt": "\u2502   \u2514\u2500\u2500 fashion-mnist #: fashion-mnist data (not included in this repo) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146076657963643
      ],
      "excerpt": "\u251c\u2500\u2500 models #: infoGAN networks for different datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "Rotation of digits. <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "Thickness of items. <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8562568569810476
      ],
      "excerpt": "Hair Quantity: Roughly ordered from less hair to more hair (left to right)<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch Implementation of InfoGAN",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Natsu6767/InfoGAN-PyTorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 68,
      "date": "Mon, 13 Dec 2021 18:40:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Natsu6767/InfoGAN-PyTorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Natsu6767/InfoGAN-PyTorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8411004553040458,
        0.8837680365796365,
        0.9322609392449874
      ],
      "excerpt": "cuda 9.0 \nPython 3.6.5 \nPyTorch 1.0.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966655221085083
      ],
      "excerpt": "matplotlib 2.2.2 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9257135987283617
      ],
      "excerpt": "\u251c\u2500\u2500 train.py #: train script \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8703752368141298,
        0.942637780087284,
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 config.py #: hyperparameters for training \n\u251c\u2500\u2500 utils.py #: utils \n\u251c\u2500\u2500 dataloader.py #: dataloader \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 mnist_model.py \n\u2502   \u251c\u2500\u2500 svhn_model.py \n\u2502   \u2514\u2500\u2500 celeba_model.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177884738113558
      ],
      "excerpt": "<th> Training Data </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9347039170763188,
        0.8872930106863905
      ],
      "excerpt": "<td><img src = 'results/mnist_results/Training Images MNIST.png' height = '450'> \n<td><img src = 'results/mnist_results/infoGAN_MNIST.gif' height = '450'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8154925863879878
      ],
      "excerpt": "<th> Epoch 100 </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066,
        0.9024745155551066,
        0.9024745155551066
      ],
      "excerpt": "<td><img src = 'results/mnist_results/Epoch_1_MNIST.png' height = '300'> \n<td><img src = 'results/mnist_results/Epoch_50_MNIST.png' height = '300'> \n<td><img src = 'results/mnist_results/Epoch_100_MNIST.png' height = '300'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630327186550657
      ],
      "excerpt": "<img src = 'results/mnist_results/Loss Curve MNIST.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066
      ],
      "excerpt": "<img src = 'results/mnist_results/Rotation.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9079684128105863
      ],
      "excerpt": "<img src = 'results/mnist_results/Width.png' height = '300'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177884738113558
      ],
      "excerpt": "<th> Training Data </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9347039170763188,
        0.8872930106863905
      ],
      "excerpt": "<td><img src = 'results/fashion_results/Training Images FashionMNIST.png' height = '450'> \n<td><img src = 'results/fashion_results/infoGAN_FashionMNIST.gif' height = '450'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8154925863879878
      ],
      "excerpt": "<th> Epoch 100 </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066,
        0.9024745155551066,
        0.9024745155551066
      ],
      "excerpt": "<td><img src = 'results/fashion_results/Epoch_1_FashionMNIST.png' height = '300'> \n<td><img src = 'results/fashion_results/Epoch_50_FashionMNIST.png' height = '300'> \n<td><img src = 'results/fashion_results/Epoch_100_FashionMNIST.png' height = '300'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630327186550657
      ],
      "excerpt": "<img src = 'results/fashion_results/Loss Curve FashionMNIST.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066
      ],
      "excerpt": "<img src = 'results/fashion_results/Thickness.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177884738113558
      ],
      "excerpt": "<th> Training Data </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9347039170763188,
        0.8872930106863905
      ],
      "excerpt": "<td><img src = 'results/svhn_results/Training Images SVHN.png' height = '450'> \n<td><img src = 'results/svhn_results/infoGAN_SVHN.gif' height = '450'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8154925863879878
      ],
      "excerpt": "<th> Epoch 100 </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066,
        0.9024745155551066,
        0.9024745155551066
      ],
      "excerpt": "<td><img src = 'results/svhn_results/Epoch_1_SVHN.png' height = '300'> \n<td><img src = 'results/svhn_results/Epoch_50_SVHN.png' height = '300'> \n<td><img src = 'results/svhn_results/Epoch_100_SVHN.png' height = '300'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630327186550657
      ],
      "excerpt": "<img src = 'results/svhn_results/Loss Curve SVHN.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066
      ],
      "excerpt": "<img src = 'results/svhn_results/Lighting 2.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8602058091156749
      ],
      "excerpt": "<img src = 'results/svhn_results/Plate Context.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177884738113558
      ],
      "excerpt": "<th> Training Data </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9347039170763188,
        0.8872930106863905
      ],
      "excerpt": "<td><img src = 'results/celeba_results/Training Images CelebA.png' height = '450'> \n<td><img src = 'results/celeba_results/infoGAN_CelebA.gif' height = '450'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8154925863879878
      ],
      "excerpt": "<th> Epoch 100 </th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066,
        0.9024745155551066,
        0.9024745155551066
      ],
      "excerpt": "<td><img src = 'results/celeba_results/Epoch_1_CelebA.png' height = '300'> \n<td><img src = 'results/celeba_results/Epoch_50_CelebA.png' height = '300'> \n<td><img src = 'results/celeba_results/Epoch_100_CelebA.png' height = '300'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630327186550657
      ],
      "excerpt": "<img src = 'results/celeba_results/Loss Curve CelebA.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661866191658655
      ],
      "excerpt": "<img src = 'results/celeba_results/Azimuth.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066
      ],
      "excerpt": "<img src = 'results/celeba_results/gender.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9024745155551066
      ],
      "excerpt": "<img src = 'results/celeba_results/Emotions.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787223444810479
      ],
      "excerpt": "<img src = 'results/celeba_results/Hair Style.png' height = '300'> <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Natsu6767/InfoGAN-PyTorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "InfoGAN-PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "InfoGAN-PyTorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Natsu6767",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Natsu6767/InfoGAN-PyTorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 240,
      "date": "Mon, 13 Dec 2021 18:40:24 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "infogan",
      "mnsit",
      "fashion-mnist",
      "svhn",
      "celeba",
      "infogan-pytorch"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Edit the **`config.py`** file to select training parameters and the dataset to use. Choose *`dataset`* from **['MNIST', 'FashionMNIST', 'SVHN', 'CelebA']**\n\nTo train the model run **`train.py`**:\n```sh\npython3 train.py\n```\nAfter training the network to experiment with the latent code for the `MNIST` dataset run **`mnist_generate.py`**:\n```sh\npython3 mnist_generate.py --load_path /path/to/pth/checkpoint\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}