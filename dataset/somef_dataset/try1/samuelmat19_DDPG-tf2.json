{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1509.02971, but also highly inspired by https://spinningup.openai.com/en/latest/algorithms/ddpg.html . This implementation is simple and can be used \nas a boilerplate for your need. It also modifies a bit the original algorithm which mainly aims to speed up the training\nprocess.\n\nSeveral videos of proof-of-concepts are as such:\n- [AI learns how to invert pendulum under 8 minutes](https://youtu.be/lY99ye4hhok"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8019230745432292
      ],
      "excerpt": "- AI speed walks on Open AI Gym's BipedalWalker-v3 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/samuelmat19/DDPG-tf2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-21T12:50:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-13T15:50:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8802532999895567
      ],
      "excerpt": "as a boilerplate for your need. It also modifies a bit the original algorithm which mainly aims to speed up the training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9457754212179765
      ],
      "excerpt": "Several videos of proof-of-concepts are as such: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950049460974287,
        0.877784536125248
      ],
      "excerpt": "Reinforcement learning is important when it comes to real environment. As \nthere is no definite right way to achieve a goal, the AI can be optimized based \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.915271398843551,
        0.8650207409642109,
        0.9564049666219875,
        0.9372759239140407,
        0.8743464656295798,
        0.8511138102672839
      ],
      "excerpt": "In continuous action space, DDPG algorithm shines as one of the best in \nthe field. In contrast to discrete action space,  \ncontinuous action space mimics the reality of the world. \nThe original implementation is in PyTorch. Additionally, there are several \nmodifications of the original algorithm that may improve it. \nAs mentioned above, there are several changes with different aims: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9274211343014475
      ],
      "excerpt": "- Epsilon-greedy is implemented in addition to the policy's action. This \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9534287440786325,
        0.8693086271077802
      ],
      "excerpt": "As DDPG is off-policy, this surely is fine. The epsilon-greedy and noise are turned off in the testing state. \n- Unbalance replay buffer. Recent entries in the replay buffer are more likely to be taken \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8293440252066405
      ],
      "excerpt": "                        The epsilon for Epsilon-greedy in the policy's action \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182590165671405
      ],
      "excerpt": "                        epochs are initially set to do this. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9398835113827635
      ],
      "excerpt": "                        Save the weight of the network in the defined \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8610222608867146
      ],
      "excerpt": "Additionally, TensorBoard is used to track the resultive losses and rewards. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9201718360635598,
        0.9309712636632201,
        0.8052949539847851,
        0.9181371878687146
      ],
      "excerpt": "To contribute to the project, these steps can be followed. Anyone that contributes will surely be recognized and mentioned here! \nContributions to the project are made using the \"Fork & Pull\" model. The typical steps would be: \ncreate an account on github \nfork this repository \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.891163296740692
      ],
      "excerpt": "(go to your fork's webpage and click on \"Pull Request.\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Deep Deterministic Policy Gradient (DDPG) in Tensorflow 2",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/samuelmat19/DDPG-tf2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 06 Dec 2021 07:11:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/samuelmat19/DDPG-tf2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "samuelmat19/DDPG-tf2",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9196313253110892
      ],
      "excerpt": "  --env [ENV]           The OpenAI Gym environment to train on, e.g. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014545749319295
      ],
      "excerpt": "  --warm_up [WARM_UP]   Following recommendation from OpenAI Spinning Up, the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8207072993860414
      ],
      "excerpt": "The pretrained weights can be retrieved from these links: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9127905597054865,
        0.8705391537609293
      ],
      "excerpt": "make a local clone \nmake changes on the local copy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8827405864753333
      ],
      "excerpt": "push to your GitHub account: git push origin \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8447106186264625,
        0.8222880285515013
      ],
      "excerpt": "overestimate value above one and underestime value below one (x^2 function). \nThis might be unfavorable for the Q-function update as all value range should \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "                 [--train [TRAIN]] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8830041945845503
      ],
      "excerpt": "                        checkpoint file directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9233890740137317
      ],
      "excerpt": "Testing is done with the same file as training (main.py), but with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9495253990396166
      ],
      "excerpt": "python3 main.py --render_env True --train False --use_noise False \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/samuelmat19/DDPG-tf2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2020 Samuel Matthew Koesnadi\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep Deterministic Policy Gradient (DDPG) in Tensorflow 2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DDPG-tf2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "samuelmat19",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/samuelmat19/DDPG-tf2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "samuelmat19",
        "body": "This weight can be placed in the checkpoints directory to continue training or testing.",
        "dateCreated": "2020-09-23T01:28:39Z",
        "datePublished": "2020-10-13T23:33:29Z",
        "html_url": "https://github.com/samuelmat19/DDPG-tf2/releases/tag/0.0.2",
        "name": "DDPG Checkpoint for LunarLanderContinuous-v2",
        "tag_name": "0.0.2",
        "tarball_url": "https://api.github.com/repos/samuelmat19/DDPG-tf2/tarball/0.0.2",
        "url": "https://api.github.com/repos/samuelmat19/DDPG-tf2/releases/32535929",
        "zipball_url": "https://api.github.com/repos/samuelmat19/DDPG-tf2/zipball/0.0.2"
      },
      {
        "authorType": "User",
        "author_name": "samuelmat19",
        "body": "This weight can be placed in the checkpoints directory to continue training or testing.",
        "dateCreated": "2020-09-23T01:28:39Z",
        "datePublished": "2020-10-13T23:32:07Z",
        "html_url": "https://github.com/samuelmat19/DDPG-tf2/releases/tag/0.0.1",
        "name": "DDPG Checkpoint for BipedalWalker-v3",
        "tag_name": "0.0.1",
        "tarball_url": "https://api.github.com/repos/samuelmat19/DDPG-tf2/tarball/0.0.1",
        "url": "https://api.github.com/repos/samuelmat19/DDPG-tf2/releases/32535815",
        "zipball_url": "https://api.github.com/repos/samuelmat19/DDPG-tf2/zipball/0.0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`pip3 install -r requirements.txt`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 06 Dec 2021 07:11:26 GMT"
    },
    "technique": "GitHub API"
  }
}