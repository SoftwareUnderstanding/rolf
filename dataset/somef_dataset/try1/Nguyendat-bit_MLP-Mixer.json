{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2105.01601"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.923492828551061
      ],
      "excerpt": "Give me a star :star2: if you like this repo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.99976074844324,
        0.9939715480297715,
        0.9791719257879131,
        0.9926904745258611
      ],
      "excerpt": "    <li>Github: <a href = \"https://github.com/Nguyendat-bit\">Nguyendat-bit</a> </li> \n    <li>Email: <a href = \"nduc0231@gmai.com\">nduc0231@gmail</a></li> \n    <li>Facebook: <a href = \"https://www.facebook.com/dat.ng48/\">Nguy\u1ec5n \u0110\u1ea1t</a></li> \n    <li>Linkedin: <a href = \"https://www.linkedin.com/in/nguyendat4801\">\u0110\u1ea1t Nguy\u1ec5n Ti\u1ebfn</a></li> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Nguyendat-bit/MLP-Mixer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-06T03:04:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-12T17:22:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9968590758222604
      ],
      "excerpt": "My project is using the TensorFlow framework to implement the MLP-Mixer model. <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation for paper MLP-Mixer: An all-MLP Architecture for Vision",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Nguyendat-bit/MLP-Mixer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 10 Dec 2021 09:18:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Nguyendat-bit/MLP-Mixer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Nguyendat-bit/MLP-Mixer",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<!-- - Guide user how to download your data and set the data pipeline  -->\n1. Download the data:\n- Download dataset [here](http://download.tensorflow.org/example_images/flower_photos.tgz)\n2. Extract file and put folder ```train``` and ```validation``` to ```./data``` by using [splitfolders](https://pypi.org/project/split-folders/)\n- train folder was used for the training process\n- validation folder was used for validating training result after each epoch\n\nThis library use ImageDataGenerator API from Tensorflow 2.0 to load images. Make sure you have some understanding of how it works via [its document](https://keras.io/api/preprocessing/image/)\nStructure of these folders in ```./data```\n\n```\ntrain/\n...daisy/\n......daisy0.jpg\n......daisy1.jpg\n...dandelion/\n......dandelion0.jpg\n......dandelion1.jpg\n...roses/\n......roses0.jpg\n......roses1.jpg\n...sunflowers/\n......sunflowers0.jpg\n......sunflowers1.jpg\n...tulips/\n......tulips0.jpg\n......tulips1.jpg\n```\n\n```\nvalidation/\n...daisy/\n......daisy2000.jpg\n......daisy2001.jpg\n...dandelion/\n......dandelion2000.jpg\n......dandelion2001.jpg\n...roses/\n......roses2000.jpg\n......roses2001.jpg\n...sunflowers/\n......sunflowers2000.jpg\n......sunflowers2001.jpg\n...tulips/\n......tulips2000.jpg\n......tulips2001.jpg\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Step 1: Make sure you have installed Miniconda. If not yet, see the setup document <a href=\"https://docs.conda.io/en/latest/miniconda.html\">here</a>\n\n\n- Step 2: `cd` into `MLP-Mixer` and use command line\n```\nconda env create -f environment.yml\n```\n\n- Step 3: Run conda environment using the command\n\n```\nconda activate mlp-mixer\n``` \n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8519087160785439
      ],
      "excerpt": "<img src = \"image/mlp_mixer.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.970916485762324
      ],
      "excerpt": "python predict.py --test-file ${link_to_test_image} \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Nguyendat-bit/MLP-Mixer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Nguy\\xe1\\xbb\\x85n Ti\\xe1\\xba\\xbfn \\xc4\\x90\\xe1\\xba\\xa1t\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MLP-Mixer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MLP-Mixer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Nguyendat-bit",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Nguyendat-bit/MLP-Mixer/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Review training on colab:\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1J_xSQ-9hhOv_J-wGyYAxrusDFw7-phb0?usp=sharing)\n\n\nTraining script:\n\n\n```python\n\npython train.py --train-folder ${link_to_train_folder} --valid-folder ${link_to_valid_folder} --epochs ${epochs}\n\n```\n\n\nExample:\n\n```python\n\npython train.py  --train-folder ./data/train --valid-folder ./data/val --epochs 100 \n\n``` \n\nThere are some important arguments for the script you should consider when running it:\n\n- `train-folder`: The folder of training data\n- `valid-folder`: The folder of validation data\n- `model-save`: Where the model after training saved\n- `batch-size`: The batch size of the dataset\n- `lr`: The learning rate\n- `image-size`: The image size of the dataset\n- `Dc`: Hidden units of channel-mixing. It was mentioned in the paper on [page 3](https://arxiv.org/pdf/2105.01601.pdf)\n- `Ds`: Hidden units of token-mixing. It was mentioned in the paper on [page 3](https://arxiv.org/pdf/2105.01601.pdf)\n- `mixer-layer`: The number of mixer-layer \n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 10 Dec 2021 09:18:04 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tensorflow2",
      "mlp-mixer"
    ],
    "technique": "GitHub API"
  }
}