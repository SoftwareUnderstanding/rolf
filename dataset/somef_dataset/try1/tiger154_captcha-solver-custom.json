{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. An overview of gradient descent optimization algorithms -  http://ruder.io/optimizing-gradient-descent/index.html\n2. SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\u7b49\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u548c\u6bd4\u8f83 - http://ycszen.github.io/2016/08/24/SGD%EF%BC%8CAdagrad%EF%BC%8CAdadelta%EF%BC%8CAdam%E7%AD%89%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E6%AF%94%E8%BE%83/\n3. Going Deeper with Convolutions - http://arxiv.org/abs/1409.4842\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8484086155042555
      ],
      "excerpt": "2. SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\u7b49\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u548c\u6bd4\u8f83 - http://ycszen.github.io/2016/08/24/SGD%EF%BC%8CAdagrad%EF%BC%8CAdadelta%EF%BC%8CAdam%E7%AD%89%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E6%AF%94%E8%BE%83/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8955886365383559,
        0.8109194328925066
      ],
      "excerpt": "max_pooling2d_1 (MaxPooling2D)  (None, 29, 99, 32)   0           batch_normalization_1[0][0] \ndropout_1 (Dropout)             (None, 29, 99, 32)   0           max_pooling2d_1[0][0] \nconv2d_3 (Conv2D)               (None, 29, 99, 64)   18496       dropout_1[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "max_pooling2d_4 (MaxPooling2D)  (None, 1, 10, 256)   0           batch_normalization_4[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8275296219550469
      ],
      "excerpt": "img = Image.open('tmp.png') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9482401847497453
      ],
      "excerpt": "url = 'http://railway1.hinet.net/ImageOut.jsp' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507936845610369
      ],
      "excerpt": "\u4e4b\u5f8c\u6211\u5011\u53ef\u4ee5\u4eff\u7167 2.1 \u7684\u683c\u5f0f\u53bb\u6a19\u8a18\u9a57\u8b49\u78bc\u7b54\u6848\u65bccsv\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u505a\u500b\u5c0f\u5de5\u5177\u4f86\u8f14\u52a9\u6a19\u8a18(https://github.com/JasonLiTW/captcha-label-tool)\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8484086155042555,
        0.9126419181843836
      ],
      "excerpt": "SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\u7b49\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u548c\u6bd4\u8f83 - http://ycszen.github.io/2016/08/24/SGD%EF%BC%8CAdagrad%EF%BC%8CAdadelta%EF%BC%8CAdam%E7%AD%89%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E6%AF%94%E8%BE%83/ \nGoing Deeper with Convolutions - http://arxiv.org/abs/1409.4842 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8484086155042555
      ],
      "excerpt": "2. SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\u7b49\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u548c\u6bd4\u8f83 - http://ycszen.github.io/2016/08/24/SGD%EF%BC%8CAdagrad%EF%BC%8CAdadelta%EF%BC%8CAdam%E7%AD%89%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E6%AF%94%E8%BE%83/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8109194328925066
      ],
      "excerpt": "max_pooling2d_1 (MaxPooling2D)  (None, 29, 99, 32)   0           conv2d_2[0][0] \nconv2d_3 (Conv2D)               (None, 29, 99, 64)   18496       max_pooling2d_1[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "max_pooling2d_4 (MaxPooling2D)  (None, 1, 10, 256)   0           conv2d_7[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9076501442428265,
        0.9076501442428265,
        0.9076501442428265,
        0.9076501442428265,
        0.9076501442428265,
        0.9076501442428265
      ],
      "excerpt": "digit1 (Dense)                  (None, 10)           25610       dropout_1[0][0] \ndigit2 (Dense)                  (None, 10)           25610       dropout_1[0][0] \ndigit3 (Dense)                  (None, 10)           25610       dropout_1[0][0] \ndigit4 (Dense)                  (None, 10)           25610       dropout_1[0][0] \ndigit5 (Dense)                  (None, 10)           25610       dropout_1[0][0] \ndigit6 (Dense)                  (None, 10)           25610       dropout_1[0][0] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tiger154/captcha-solver-custom",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-05T05:55:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-25T02:35:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8472894247807236
      ],
      "excerpt": "model = Model(inputs=in, outputs=out) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875,
        0.8577302739126875,
        0.8577302739126875,
        0.8577302739126875,
        0.8577302739126875,
        0.8577302739126875
      ],
      "excerpt": "digit1 (Dense)                  (None, 34)           87074       dropout_4[0][0] \ndigit2 (Dense)                  (None, 34)           87074       dropout_4[0][0] \ndigit3 (Dense)                  (None, 34)           87074       dropout_4[0][0] \ndigit4 (Dense)                  (None, 34)           87074       dropout_4[0][0] \ndigit5 (Dense)                  (None, 34)           87074       dropout_4[0][0] \ndigit6 (Dense)                  (None, 34)           87074       dropout_4[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8472894247807236
      ],
      "excerpt": "model = Model(inputs=in, outputs=out) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606018550295674
      ],
      "excerpt": "model.fit(train_data, train_label, batch_size=400, epochs=50, verbose=2, validation_data=(vali_data, vali_label), callbacks=callbacks_list) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u5728\u7b2c\u4e09\u90e8\u4efd\u6211\u5011\u6703\u7528\u5c11\u91cf\u624b\u52d5\u6a19\u8a18\u7684\u9a57\u8b49\u78bc\uff0c\u900f\u904e\u8cc7\u6599\u589e\u5f37(Data Augmentation)\u7522\u751f\u5927\u91cf\u8cc7\u6599\u4f86\u8a13\u7df4\u6a21\u578b\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "SAVEPATH = \"./data/manual_label/\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.895608950120991
      ],
      "excerpt": "    with open(SAVEPATH + str(i) + '.jpg', 'wb') as out_file: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9944671062235547,
        0.9920619937275106
      ],
      "excerpt": "This project uses simple convolution neural network to implement solving the captcha(as above, in Taiwan railway booking website).The training set is generated by imitating the style of captcha, and the validation set is crawling from the booking site and labeled manually for about 1000 records. \nCurrently, the accuracy of a single digit on the validation set is about 98.84%, and overall accuracy is 91.13% (Successfully recognize 6-digits at once). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8325528679129073
      ],
      "excerpt": "Let's build a simple CNN model! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8005982133804648
      ],
      "excerpt": "model = Model(inputs=tensor_in, outputs=out) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8217497461067343
      ],
      "excerpt": "About the choice of an optimizer, you can refer below: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9888233647984986
      ],
      "excerpt": "Okay! Now we have finished the design of the model, let's see the summary of model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8845418069751397
      ],
      "excerpt": "We are using 3 callbacks: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.963638770546611
      ],
      "excerpt": "For saving best accuracy model, it will check after every epoch, and save the model to filepath if the accuracy is better than before. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606018550295674
      ],
      "excerpt": "model.fit(train_data, train_label, batch_size=400, epochs=50, verbose=2, validation_data=(vali_data, vali_label), callbacks=callbacks_list) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9832165790024207,
        0.9721326229069231
      ],
      "excerpt": "The accuracy for a single digit on the validation set is about 98.84%, and overall accuracy is 91.13% (Successfully recognize 6-digits at once). \nCurrently unable to solve 5-digits captcha. Maybe implement by CNN + RNN. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "captcha solver test ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tiger154/captcha-solver-custom/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 13 Dec 2021 17:27:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tiger154/captcha-solver-custom/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tiger154/captcha-solver-custom",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The validation set is real captcha image crawl from the railway booking website and labeled manually. Load the data as same as above, and X(feature(image)) put in ```vali_data```, Y(label) in ```vali_label```.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Before train the model, we have to load the data into memory.\n\nFirstly we have to process X part: feature(our captcha image).\nThe data we input to CNN should be numpy array type, so we use Pillow to read image and convert it to numpy array.\n\n```python\nfor index in range(1, 50001, 1)\n    image = Image.open(\"./data/train_set/\" + str(index) + \".jpg\") #:Load our image\n    nparr = np.array(image) #: Convert to numpy array\n    nparr = nparr / 255.0\n```\n\nThe shape of nparr is ```(60, 200, 3)```, it's same as the input we just designed in the model.\nAnd we plan to use 50,000 captcha image to train the model, so the input shape to CNN will be ```(50000, 60, 200, 3)```. Use numpy.stack to merge them all:\n\n```python\ntrain_data = np.stack([np.array(Image.open(\"./data/train_set/\" + str(index) + \".jpg\"))/255.0 for index in range(1, 50001, 1)])\n```\n\nNow, the shape of train_data is ```(50000, 60, 200, 3)```\u3002\n\nThe next is Y part, label: the answer of the training set.\nBecause the model is multi-output(6 softmax regression classifier), so the Y should be a list containing 6 numpy array, like this:\n```\n[[First digit of first image,..., First digit of last image], [Second digit of first image,..., Second digit of last image], [...], [...], [...], [...]]\n```\nAnd every digit is present as one-hot encoding, for example 0 is ```[1, 0, 0, 0, ....,0]```, 2 is```[0, 0, 1, 0, ....,0]```\n\n```python\ntraincsv = open('./data/train_set/train.csv', 'r', encoding = 'utf8')\nread_label = [toonehot(row[1]) for row in csv.reader(traincsv)]\ntrain_label = [[] for _ in range(6)]\nfor arr in read_label:\n    for index in range(6):\n        train_label[index].append(arr[index])\ntrain_label = [arr for arr in np.asarray(train_label)]\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Firstly we have to observe the captcha, it's easy to find that the captcha is made up of two primary elements:\n- ```5 ~ 6 digits``` number and the text size is not same. Furthermore, they are being rotated, and the color is floating.\n- The color of background is floating, and there have some white and black interference lines, and some of them will overlay on the number.\n\nAnd more...:\n- The angle of rotation is between about ```-55 ~ 55 degrees```, and the size is about ```25 ~ 27pt```.\n- We can found that one number has not only one style, so we guess that there have two fonts randomly in change. The first one obviously is ```Courier New-Bold```, and the second one is ```Times New Roman-Bold```.(You can use software such as Photoshop to cross-comparison.)\n- About the range of background and text color, we can through the color quantization such as k-means to get color of every background and text, and so we can calculate the color range.(I used k-means in opencv to implement.)\n- The color range(R/G/B) of the background is between about ```180 ~ 250```, and text is between ```10 ~ 140```.\n- Those interference lines form a rectangle, they have two styles: left and up sides are black, right and down sides are white, and vice versa.(you can also treat them as be rotated 180 degrees).\n- The number of the rectangle is between about ```30 ~ 32```, randomly distribute on captcha image, and the width and height is between about ```5 ~ 21px```. Besides, there has 40% white line will overlay on the number, and about 20% by the black line.\n\nWith these observation, we are about to generate training set! Now, let's observe where the number place on the image:\n\n![image](./readme_img/old/5.PNG)![image](./readme_img/old/6.PNG)![image](./readme_img/old/7.PNG)\n\nFrom these images we can find that the text(number) are not regularly distributed on the image, we can guess that the text is randomly moved left or right after a rotation. There has even some text overlap together, so we can't crop the image and process only one number at a time.\n\nAbove is the captcha rule we simply observed. The implement of training set generate is in ```captcha_gen.py```, you can try to implement it in your own way.\n\n![image](./readme_img/old/8.jpg)\n\nThe generator finally will output 50,000 captcha image and a csv labeled answer.\n\n![image](./readme_img/old/9.PNG)![image](./readme_img/old/10.PNG)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "It is not difficult for building a CNN model to solve a captcha, but where and how do we get a labeled training set?\n\n![image](./readme_img/old/2.jpeg)![image](./readme_img/old/3.jpeg)![image](./readme_img/old/4.jpeg)\n\nWe can write a program to crawl thousands of captcha image, and labeled it manually, but it's a time-consuming job! Maybe we can try to generate some captcha image by imitating it.\nBut of course, the image we generate should be really close to the real, otherwise, the accuracy on validation set will really bad.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\u4ee56\u78bc\u7684\u70ba\u4f8b\uff0c\u6211\u5011\u73fe\u5728\u670975000\u5f35\u9a57\u8b49\u78bc\u5716\u7247\uff0c\u6211\u5011\u53d6\u5176\u4e2d\u524d60000\u5f35\u70ba\u8a13\u7df4\u96c6\uff0c\u5f8c15000\u5f35\u70ba\u9a57\u8b49\u96c6\u4f86\u8a13\u7df4\u3002(\u9a57\u8b49\u96c6\u4e5f\u662f\u4e00\u6a23\uff0c\u53ea\u662f\u6539\u6210\u53d6\u5f8c15000\u5f35\u3002)\n\n```python\ntraincsv = open('./data/6_real_train_set/captcha_train.csv', 'r', encoding = 'utf8')\ntrain_data = np.stack([np.array(Image.open(\"./data/6_real_train_set/\" + row[0] + \".jpg\"))/255.0 for row in csv.reader(traincsv)][:60000])\ntraincsv = open('./data/6_real_train_set/captcha_train.csv', 'r', encoding = 'utf8')\nread_label = [toonehot(row[1]) for row in csv.reader(traincsv)][:60000]\ntrain_label = [[] for _ in range(6)]\nfor arr in read_label:\n    for index in range(6):\n        train_label[index].append(arr[index])\ntrain_label = [arr for arr in np.asarray(train_label)]\n```\n\n\u53e6\u5916\u5224\u65b7\u662f5\u78bcor6\u78bc\u7684\u6a21\u578b\uff0c\u5247\u662f\u5404\u4ee55/6\u78bc\u7684\u524d60000\u5f35\u5404\u96a8\u6a5f\u6311\u907820000\u5f35=40000\u5f35\u7576\u8a13\u7df4\u96c6\uff0c\u5269\u4e0b15000\u5f35\u5404\u96a8\u6a5f\u6311\u90785000\u5f35=10000\u5f35\u7576\u9a57\u8b49\u96c6\u3002\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\u9a57\u8b49\u96c6\u7684\u8f09\u5165\u65b9\u5f0f\u8ddf\u8a13\u7df4\u96c6\u76f8\u540c\uff0c\u9019\u908a\u7565\u904e\u3002\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\u5728\u8a13\u7df4\u4e4b\u524d\u6211\u5011\u8981\u5148\u5c07\u8cc7\u6599\u8f09\u5165\u5230\u8a18\u61b6\u9ad4\u4e2d\uff0c\u524d\u9762\u7522\u751f\u8a13\u7df4\u96c6\u548c\u9a57\u8b49\u96c6\u7684\u6642\u5019\uff0c\u6211\u5011\u662f\u5c07\u9a57\u8b49\u78bc\u5b58\u6210\u4e00\u5f35\u5f35\u7de8\u865f\u597d\u7684\u5716\u7247\uff0c\u4e26\u7528csv\u6a94\u8a18\u9304\u4e0b\u4e86\u7b54\u6848\u3002\n\n\u9019\u908a\u4e00\u6a23\u4ee56\u78bc\u7684\u70ba\u4f8b\uff0c\u9996\u5148\u6211\u5011\u5148\u8655\u7406X\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u7279\u5fb5\u503c\uff0c\u9019\u908a\u5c31\u662f\u6307\u6211\u5011\u7684\u5716\u7247\u3002\n\u800c\u8981\u8f38\u5165\u9032CNN\u7684\u8cc7\u6599\u5fc5\u9808\u662fnumpy array\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u5011\u7528Pillow\u4f86\u8b80\u53d6\u5716\u7247\u4e26\u8f49\u70banumpy\u683c\u5f0f\uff1a\n\n```python\ntraincsv = open('./data/6_imitate_train_set/captcha_train.csv', 'r', encoding = 'utf8')\nfor row in csv.reader(traincsv):\n \u00a0 \u00a0image = Image.open(\"./data/6_imitate_train_set/\" + row[0] + \".jpg\") #: \u8b80\u53d6\u5716\u7247\n \u00a0 \u00a0nparr = np.array(image) #: \u8f49\u6210np array\n \u00a0 \u00a0nparr = nparr / 255.0\n```\n\n\u9019\u6642\u6211\u5011\u4e0b```nparr.shape```\uff0c\u53ef\u4ee5\u770b\u5230\u77e9\u9663\u7684\u5927\u5c0f\u662f```(60, 200, 3)```\uff0c\u8ddf\u524d\u9762\u6a21\u578b\u8a2d\u8a08\u7684Input\u662f\u76f8\u540c\u7684\u3002\n\n\u800c\u6211\u5011\u8a08\u5283\u4f7f\u752850000\u5f35\u5716\u7247\u4f86\u8a13\u7df4\uff0c\u6240\u4ee5\u6700\u5f8c\u8f38\u5165\u7d66CNN\u7684\u77e9\u9663\u5927\u5c0f\u6703\u662f```(50000, 60, 200, 3)```\uff0c\u9019\u90e8\u5206\u53ea\u8981\u5229\u7528stack\u5c31\u53ef\u4ee5\u628a\u5b83\u5011\u5408\u4f75\uff0c\u6574\u7406\u6210\u4e0b\u9762:\n\n```python\ntrain_data = np.stack([np.array(Image.open(\"./data/6_imitate_train_set/\" + row[0] + \".jpg\"))/255.0 for row in csv.reader(traincsv)])\n```\n\n\u6700\u5f8ctrain_data\u7684shape\u5c31\u6703\u662f```(50000, 60, 200, 3)```\u3002\n\n\u63a5\u4e0b\u4f86Y\u5247\u662f\u8a13\u7df4\u96c6\u7684\u6a19\u8a18\uff0c\u4e5f\u5c31\u662f\u6211\u5011\u8a13\u7df4\u96c6\u7684\u7b54\u6848\u3002\n\n\u56e0\u70ba\u6211\u5011\u7684\u6a21\u578b\u662f\u591a\u8f38\u51fa\u7684\u7d50\u69cb(6\u7d44softmax\u51fd\u6578\u5206\u985e\u5668)\uff0c\u6240\u4ee5Y\u8981\u662f\u4e00\u500b\u542b\u67096\u500bnumpy array\u7684list\uff0c\u5927\u6982\u50cf\u662f\u9019\u6a23\uff1a\n```\n[[\u7b2c\u4e00\u5f35\u7b2c1\u500b\u6578\u5b57,...,\u6700\u5f8c\u4e00\u5f35\u7b2c1\u500b\u6578\u5b57], [\u7b2c\u4e00\u5f35\u7b2c2\u500b\u6578\u5b57,...,\u6700\u5f8c\u4e00\u5f35\u7b2c2\u500b\u6578\u5b57], [...], [...], [...], [...]]\n```\n\u800c\u5176\u4e2d\u6bcf\u500b\u6578\u5b57\u90fd\u662f\u4ee5one-hot encoding\u8868\u793a\uff0c\u4f8b\u59820\u5c31\u662f```[1, 0, 0, 0, ....,0]```\uff0c2\u5c31\u662f```[0, 0, 1, 0, ....,0]```\n\n```python\ntraincsv = open('./data/6_imitate_train_set/captcha_train.csv', 'r', encoding = 'utf8') #: \u8b80\u53d6\u8a13\u7df4\u96c6\u7684\u6a19\u8a18\nread_label = [toonehot(row[1]) for row in csv.reader(traincsv)] #: \u5c07\u6bcf\u4e00\u884c\u7684\u6587\u5b57\u8f49\u6210one-hot encoding\ntrain_label = [[] for _ in range(6)] #: \u5404\u7d44\u8f38\u51fa\u7684\u7b54\u6848\u8981\u653e\u5230train_label\n\nfor arr in read_label:\n    for index in range(6):\n \u00a0 \u00a0 \u00a0 \u00a0train_label[index].append(arr[index]) #: \u539f\u672c\u662f[[\u7b2c1\u5b57\u7b54\u6848, ..., \u7b2c6\u5b57\u7b54\u6848],......, [\u7b2c1\u5b57\u7b54\u6848, ..., \u7b2c6\u5b57\u7b54\u6848]]\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#: \u8981\u8f49\u6210[[\u7b2c1\u5b57\u7b54\u6848,..., \u7b2c1\u5b57\u7b54\u6848],..., [\u7b2c6\u5b57\u7b54\u6848,..., \u7b2c6\u5b57\u7b54\u6848]]\u624d\u7b26\u5408Y\u7684\u8f38\u5165\ntrain_label = [arr for arr in np.asarray(train_label)] #: \u6700\u5f8c\u8981\u628a6\u500bnumpy array \u653e\u5728\u4e00\u500blist\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\u8b93\u6211\u5011\u4f86\u6a21\u4eff\u7522\u751f\u4e00\u4e9b\u9a57\u8b49\u78bc\u5427\uff01\n\u9996\u5148\u6211\u5011\u8981\u5148\u89c0\u5bdf\u9a57\u8b49\u78bc\uff0c\u4f60\u53ef\u4ee5\u5beb\u4e00\u652f\u722c\u87f2\u7a0b\u5f0f(eg.```captcha_scrawl.py```)\u53bb\u64f7\u53d6\u4e00\u5169\u767e\u5f35\u9a57\u8b49\u78bc\u56de\u4f86\u7d30\u7d30\u6bd4\u5c0d\u3002\u6211\u5011\u4e0d\u96e3\u767c\u73fe\u53f0\u9435\u7684\u9a57\u8b49\u78bc\u4e0d\u5916\u4e4e\u7531\u5169\u500b\u4e3b\u8981\u5143\u7d20\u7d44\u6210\uff1a\n- ```5 ~ 6\u78bc```\u7684\u6578\u5b57\u53ca\u82f1\u6587(\u4e0d\u5305\u542bO\u548cI)\uff0c\u5927\u5c0f\u4f3c\u4e4e\u4e0d\u4e00\u81f4\uff0c\u800c\u4e14\u90fd\u6709\u7d93\u904e\u65cb\u8f49\uff0c\u53e6\u5916\u984f\u8272\u662f\u6d6e\u52d5\u7684\u3002\n- \u80cc\u666f\u662f\u6d6e\u52d5\u7684\u984f\u8272\uff0c\u53e6\u5916\u9084\u6709\u4e0d\u5c11\u5e72\u64fe\u7684\u7dda\u689d\uff0c\u770b\u8d77\u4f86\u61c9\u8a72\u662f\u77e9\u5f62\uff0c\u7531\u9ed1\u7dda\u548c\u767d\u7dda\u7d44\u6210\uff0c\u4e14\u6709\u90e8\u5206\u6703\u84cb\u5230\u6578\u5b57\u4e0a\u9762\u3002\n\n\u9032\u4e00\u6b65\u7814\u7a76\u6703\u767c\u73fe:\n- \u6578\u5b57\u7684\u65cb\u8f49\u89d2\u5ea6\u7d04\u5728```-55 ~ 55\u5ea6```\u9593\uff0c\u5927\u5c0f\u7d04```25 ~ 27pt```\u3002\n- \u5b57\u578b\u7684\u90e8\u5206\uff0c\u4ed4\u7d30\u89c0\u5bdf\u6703\u767c\u73fe\u540c\u4e00\u500b\u5b57\u6703\u6709\u5169\u7a2e\u4e0d\u4e00\u6a23\u7684\u6a23\u5f0f\uff0c\u63a8\u6e2c\u662f\u6709\u5169\u7a2e\u5b57\u578b\u96a8\u6a5f\u66f4\u66ff\uff0c\u5176\u4e2d\u4e00\u500b\u5f88\u660e\u986f\u662f```Courier New-Bold```\uff0c\u53e6\u4e00\u500b\u6bd4\u5c0d\u4e00\u4e0b\u4e5f\u4e0d\u96e3\u767c\u73fe\u5373\u662f```Times New Roman-Bold```\u3002\n- \u80cc\u666f\u548c\u5b57\u578b\u984f\u8272\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u7528\u4e00\u4e9b\u8272\u5f69\u5747\u503c\u5316\u7684\u624b\u6cd5\u5feb\u901f\u7684\u5f9e\u6578\u767e\u5f35\u7684\u9a57\u8b49\u78bc\u4e2d\u5f97\u51fa\u6bcf\u4e00\u5f35\u7684\u80cc\u666f\u53ca\u6578\u5b57\u7684\u984f\u8272\uff0c\u9032\u800c\u6211\u5011\u5c31\u80fd\u7b97\u51fa\u984f\u8272\u7684\u7bc4\u570d\u3002\u9019\u90e8\u5206\u53ef\u4ee5\u7528OpenCV\u7684k-means\u4f86\u5be6\u4f5c\uff0c\u9019\u908a\u5c31\u4e0d\u518d\u8d05\u8ff0\u3002\n\n\u80cc\u666f\u7684R/G/B\u7bc4\u570d\u7d04\u662f\u5728```180 ~ 250```\u9593\uff0c\u6587\u5b57\u7684\u90e8\u5206\u5247\u662f```10 ~ 140```\u9593\u3002\n- \u5e72\u64fe\u7684\u7dda\u689d\u662f\u77e9\u5f62\uff0c\u6709\u5de6\u3001\u4e0a\u662f\u9ed1\u7dda\u689d\u4e14\u53f3\u3001\u4e0b\u662f\u767d\u7dda\u689d\u548c\u5012\u904e\u4f86\uff0c\u5171\u5169\u7a2e\u6a23\u5f0f(\u4e5f\u53ef\u4ee5\u7576\u4f5c\u662f\u65cb\u8f49180\u5ea6)\uff0c\u5e73\u5747\u5927\u7d04\u6703\u51fa\u73fe```30 ~ 32\u500b```\u96a8\u6a5f\u5206\u5e03\u5728\u5716\u4e2d\uff0c\u9577\u5bec\u90fd\u5927\u7d04\u843d\u5728```5 ~ 21px```\u9593\u3002\n\u53e6\u5916\uff0c\u5927\u7d04\u67094\u6210\u7684\u6a5f\u6703\u767d\u7dda\u6703\u84cb\u5728\u6578\u5b57\u4e0a\uff0c\u9ed1\u7dda\u84cb\u5728\u6587\u5b57\u4e0a\u7684\u6a5f\u7387\u5247\u66f4\u4f4e\u3002\n\n\u6709\u4e86\u9019\u4e9b\u89c0\u5bdf\uff0c\u53ea\u5dee\u4e00\u9ede\u9ede\u5c31\u53ef\u4ee5\u7522\u751f\u8a13\u7df4\u96c6\u4e86\uff0c\u6211\u5011\u73fe\u5728\u4f86\u89c0\u5bdf\u6587\u5b57\u90fd\u843d\u5728\u5716\u7247\u4e0a\u7684\u751a\u9ebc\u4f4d\u7f6e\u4e0a:\n\n![image](./readme_img/captcha_seperate1.png)![image](./readme_img/captcha_seperate2.png)![image](./readme_img/captcha_seperate3.png)\n\n\u5f9e\u9019\u5e7e\u5f35\u5716\u4e2d\u4e0d\u96e3\u770b\u51fa\u6587\u5b57\u4e26\u975e\u898f\u5247\u5730\u5206\u5e03\u5728\u5716\u7247\u4e0a\uff0c\u6211\u5011\u53ef\u4ee5\u731c\u6e2c\u6587\u5b57\u662f\u65cb\u8f49\u5f8c\u88ab\u96a8\u6a5f\u5de6\u79fb\u6216\u53f3\u79fb\u4e86\uff0c\u751a\u81f3\u9084\u6703\u6709\u91cd\u758a\u7684\u60c5\u6cc1\uff0c\u6240\u4ee5\u6c92\u8fa6\u6cd5\u7528\u5207\u5272\u7684\u65b9\u5f0f\u4e00\u6b21\u8655\u7406\u4e00\u500b\u6587\u5b57\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u6211\u5011\u7c21\u55ae\u89c0\u5bdf\u5230\u7684\u9a57\u8b49\u78bc\u898f\u5247\uff0c\u8a13\u7df4\u96c6\u7522\u751f\u7684\u90e8\u5206\u5be6\u4f5c\u5728```captcha_gen.py```\u4e2d\uff0c\u96d6\u7136\u5beb\u5f97\u6709\u9ede\u96dc\u4e82\uff0c\u4e0d\u904e\u6c92\u751a\u9ebc\u7279\u5225\u7684\u5730\u65b9\uff0c\u5c31\u662f\u7167\u8457\u4e0a\u9762\u7684\u898f\u5247\u7522\u751f\uff0c\u53ef\u4ee5\u8a66\u8457\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u5be6\u4f5c\u770b\u770b\u3002\n\n![image](./readme_img/captcha_sample4.jpg)\n\n```python\nif __name__ == \"__main__\":\n    generate(50000, \"./data/56_imitate_train_set/\",  ENGP=100, FIVEP=50, ENGNOLIMIT=True, filename=\"train\")\n    generate(10240, \"./data/56_imitate_vali_set/\",  ENGP=100, FIVEP=50, ENGNOLIMIT=True, filename=\"vali\")\n    generate(50000, \"./data/5_imitate_train_set/\",  ENGP=100, FIVEP=100, ENGNOLIMIT=True, filename=\"train\")\n    generate(10240, \"./data/5_imitate_vali_set/\",  ENGP=100, FIVEP=100, ENGNOLIMIT=True, filename=\"vali\")\n    generate(50000, \"./data/6_imitate_train_set/\",  ENGP=100, FIVEP=0, ENGNOLIMIT=True, filename=\"train\")\n    generate(10240, \"./data/6_imitate_vali_set/\",  ENGP=100, FIVEP=0, ENGNOLIMIT=True, filename=\"vali\")\n```\n\n\u6700\u5f8c\u6703\u70ba\u6211\u5011\u9810\u8a08\u5efa\u7acb\u7684\u4e09\u500bCNN(2.2.1\u6703\u63d0\u5230)\u5404\u5206\u5225\u7522\u751f50000\u7b46Training data\u548c10240\u7b46Validate data\uff0c\u7b54\u6848\u5247\u6a19\u8a18\u5728csv\u6a94\u4e2d\u3002\n\n![image](./readme_img/csv.png)![image](./readme_img/generate.png)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\u8981\u5efa\u7acb\u4e00\u500b\u8fa8\u8b58\u9a57\u8b49\u78bc\u7684CNN\u6a21\u578b\u5176\u5be6\u4e26\u975e\u96e3\u4e8b\uff0c\u96e3\u7684\u662f\u8981\u5982\u4f55\u53d6\u5f97\u6a19\u8a18\u597d\u7684\u8a13\u7df4\u96c6\u5462?\n\n![image](./readme_img/captcha_sample1.jpg)![image](./readme_img/captcha_sample2.jpg)![image](./readme_img/captcha_sample3.jpg)\n\n\u5728\u9019\u908a\u6211\u5011\u6703\u5617\u8a66\u5169\u7a2e\u65b9\u6cd5(2.\u82073.)\uff1a\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8114789566912101
      ],
      "excerpt": "Click here or scroll down for english version \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.820616593839249
      ],
      "excerpt": "\u5206\u985e\u9a57\u8b49\u78bc\u662f5\u78bc or 6\u78bc\u7684\u6a21\u578b(train_cnn_imitate_56)\u5247\u9054\u5230\u7d0498.13%\u3002 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.856989540636594
      ],
      "excerpt": "Layer (type)                    Output Shape         Param #:     Connected to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378331769195192,
        0.8378331769195192
      ],
      "excerpt": "max_pooling2d_3 (MaxPooling2D)  (None, 5, 23, 128)   0           batch_normalization_3[0][0] \ndropout_3 (Dropout)             (None, 5, 23, 128)   0           max_pooling2d_3[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8585779652068145
      ],
      "excerpt": "Total params: 1,106,540 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8337731032438952
      ],
      "excerpt": "checkpoint = ModelCheckpoint(filepath, monitor='val_digit6_acc', verbose=1, save_best_only=True, mode='max') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8371775238856519
      ],
      "excerpt": "captcha.convert(\"RGB\").save('captcha.jpg', 'JPEG') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8887040546590859
      ],
      "excerpt": "    with open(SAVEPATH + str(i) + '.jpg', 'wb') as out_file: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8479816623851857,
        0.8798677294264481
      ],
      "excerpt": "|train_cnn.py  |Building the model and train it.| \n|demo_solver.py|Demo:Load the model and solve the captcha.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.856989540636594
      ],
      "excerpt": "Layer (type)                    Output Shape         Param #:     Connected to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378331769195192
      ],
      "excerpt": "max_pooling2d_3 (MaxPooling2D)  (None, 5, 23, 128)   0           conv2d_6[0][0] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934745846565956
      ],
      "excerpt": "Total params: 735,836 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8337731032438952
      ],
      "excerpt": "checkpoint = ModelCheckpoint(filepath, monitor='val_digit6_acc', verbose=1, save_best_only=True, mode='max') \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tiger154/captcha-solver-custom/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2017 Jason-ChengYing,Li\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "This is a test from original source(simple-railway-captcha-solver) to solve Naver's captcha image.\n  - Try to generate similar image of captcha\n  - Create Neural Network and train and test \n  * May it's better some pre-processing of image..\n\n\n##\n\n# simple-railway-captcha-solver\n[Click here or scroll down for english version](#english-version)\n\n![image](./readme_img/head.gif)\n\n\u672c\u5c08\u6848\u5229\u7528\u7c21\u55ae\u7684Convolutional Neural Network\u4f86\u5be6\u4f5c\u8fa8\u8b58\u53f0\u9435\u8a02\u7968\u7db2\u7ad9\u7684\u9a57\u8b49\u78bc\uff0c\u8a13\u7df4\u96c6\u53ca\u9a57\u8b49\u96c6\u7684\u90e8\u5206\u4ee5\u6a21\u4eff\u9a57\u8b49\u78bc\u6a23\u5f0f\u7684\u65b9\u5f0f\u4f86\u7522\u751f\u3001\u53e6\u5916\u6e2c\u8a66\u96c6\u7684\u90e8\u5206\u5247\u81ea\u53f0\u9435\u8a02\u7968\u7db2\u7ad9\u64f7\u53d6\uff0c\u518d\u4ee5\u624b\u52d5\u65b9\u5f0f\u6a19\u8a18\u7d043000\u7b46\u3002\n\n\u76ee\u524d\u6a21\u578b\u55ae\u78bc\u8fa8\u8b58\u7387\u6700\u9ad8\u9054\u5230```99.39%```\uff0c\u5728\u53f0\u9435\u7db2\u7ad9\u4e0a\u4ee5\u67e5\u8a62\u5269\u9918\u8eca\u7968\u529f\u80fd\u4f86\u6e2c\u8a66\u9a57\u8b49\u78bc\uff0c\u6574\u9ad4\u8fa8\u8b58\u6210\u529f\u7387(\u5168\u90e8\u5b57\u5143\u6b63\u78ba)\u9054\u5230```91.57%```\u3002\n\n\u5e95\u4e0b\u6709\u8a73\u76e1\u7684\u8aaa\u660e\u3002\n\n|Name|Description|\n|----|----|\n|captcha_gen.py|\u6a21\u4eff\u9a57\u8b49\u78bc\u6a23\u5f0f\u5efa\u7acb\u8a13\u7df4\u96c6|\n|captcha_scrawl.py|\u5f9e\u53f0\u9435\u7db2\u7ad9\u53d6\u5f97\u771f\u5be6\u9a57\u8b49\u78bc\u5716|\n|train_cnn_imitate_5.py|\u5efa\u7acbCNN\u4e26\u4ee5\u6a21\u4eff\u9a57\u8b49\u78bc\u8a13\u7df4(5\u78bc\u8fa8\u8b58)|\n|train_cnn_imitate_6.py|\u5efa\u7acbCNN\u4e26\u4ee5\u6a21\u4eff\u9a57\u8b49\u78bc\u8a13\u7df4(6\u78bc\u8fa8\u8b58)|\n|train_cnn_imitate_56.py|\u5efa\u7acbCNN\u4e26\u4ee5\u6a21\u4eff\u9a57\u8b49\u78bc\u8a13\u7df4(\u8fa8\u8b58\u662f5\u78bcor6\u78bc)|\n|data_augment.py|\u7528\u65bc\u771f\u5be6\u9a57\u8b49\u78bc\u7684\u8cc7\u6599\u589e\u5f37|\n|train_cnn_real_5.py|\u5efa\u7acbCNN\u4e26\u4ee5\u771f\u5be6\u9a57\u8b49\u78bc\u8a13\u7df4(5\u78bc\u8fa8\u8b58)|\n|train_cnn_real_6.py|\u5efa\u7acbCNN\u4e26\u4ee5\u771f\u5be6\u9a57\u8b49\u78bc\u8a13\u7df4(6\u78bc\u8fa8\u8b58)|\n|train_cnn_real_56.py|\u5efa\u7acbCNN\u4e26\u4ee5\u771f\u5be6\u9a57\u8b49\u78bc\u8a13\u7df4(\u8fa8\u8b58\u662f5\u78bcor6\u78bc)|\n|demo_cnn.py|Demo\u8f09\u5165\u6a21\u578b\u4e26\u4ee5\u6e2c\u8a66\u96c6\u8a55\u4f30\u8fa8\u8b58\u7387|\n|demo_online.py|Demo\u8f09\u5165\u6a21\u578b\u4e26\u5728\u53f0\u9435\u7db2\u7ad9\u4e0a\u8a55\u4f30\u8fa8\u8b58\u7387|\n\n## \u6eab\u99a8\u63d0\u9192\n\u9435\u8def\u6cd5\u7b2c65\u689d\u4e2d\u63d0\u5230\uff1a```\u300c...\u4ee5\u4e0d\u6b63\u65b9\u6cd5\u5c07\u865b\u507d\u8cc7\u6599\u6216\u4e0d\u6b63\u6307\u4ee4\u8f38\u5165\u96fb\u8166\u6216\u5176\u76f8\u95dc\u8a2d\u5099\u800c\u8cfc\u8cb7\u8eca\u7968\u3001\u53d6\u5f97\u8a02\u7968\u6216\u53d6\u7968\u6191\u8b49\u8005\uff0c\u8655\u4e94\u5e74\u4ee5\u4e0b\u6709\u671f\u5f92\u5211\u6216\u79d1\u6216\u4f75\u79d1\u65b0\u81fa\u5e63\u4e09\u767e\u842c\u5143\u4ee5\u4e0b\u7f70\u91d1\u3002\u300d```\uff0c\u6211\u60f3\u4f7f\u7528\u7a0b\u5f0f\u8fa8\u8b58\u9a57\u8b49\u78bc\u4f86\u81ea\u52d5\u8a02\u7968\uff0c\u61c9\u8a72\u4e5f\u5728\u5176\u4e2d\"\u4e0d\u6b63\u65b9\u6cd5\"\u7684\u7bc4\u7587\u4e2d\u3002\n\n\u6b64\u5c08\u6848\u50c5\u4f9b\u5b78\u8853\u7814\u7a76\uff0c\u6240\u4ee5\u8acb\u4e0d\u8981\u5229\u7528\u5efa\u7acb\u7684\u6a21\u578b\u8fa8\u8b58\u9a57\u8b49\u78bc\u53bb\u81ea\u52d5\u8a02\u7968\uff0c\u9019\u662f\u9055\u6cd5\u7684\u5594\u3002\n\n## 0.-Dependencies\n|Name|Version|\n|----|----|\n|tensorflow|1.4.0|\n|tensorflow-gpu|1.4.0|\n|tensorflow-tensorboard|0.4.0rc3|\n|Keras|2.1.2|\n|h5py|2.7.1|\n|Pillow|5.1.0|\n|numpy|1.13.3|\n\n## 1.-Training set?\n\u8981\u5efa\u7acb\u4e00\u500b\u8fa8\u8b58\u9a57\u8b49\u78bc\u7684CNN\u6a21\u578b\u5176\u5be6\u4e26\u975e\u96e3\u4e8b\uff0c\u96e3\u7684\u662f\u8981\u5982\u4f55\u53d6\u5f97\u6a19\u8a18\u597d\u7684\u8a13\u7df4\u96c6\u5462?\n\n![image](./readme_img/captcha_sample1.jpg)![image](./readme_img/captcha_sample2.jpg)![image](./readme_img/captcha_sample3.jpg)\n\n\u5728\u9019\u908a\u6211\u5011\u6703\u5617\u8a66\u5169\u7a2e\u65b9\u6cd5(2.\u82073.)\uff1a\n#### 2.-\u6a21\u4eff\u9a57\u8b49\u78bc\u7684\u6a23\u5f0f\uff0c\u81ea\u884c\u7522\u751f\u8a13\u7df4\u96c6\u548c\u9a57\u8b49\u96c6\n\u56e0\u70ba\u8981\u624b\u52d5\u6a19\u8a18\u4e0a\u842c\u5f35\u9a57\u8b49\u78bc\u662f\u975e\u5e38\u8cbb\u6642\u7684\uff0c\u6240\u4ee5\u6211\u5011\u53ef\u4ee5\u8a66\u8457\u6a21\u4eff\u7522\u751f\u4e00\u4e9b\u9a57\u8b49\u78bc\u770b\u770b\u3002\n\n\u4e0d\u904e\u7576\u7136\uff0c\u6211\u5011\u7522\u751f\u7684\u8cc7\u6599\u96c6\u5fc5\u9808\u975e\u5e38\u63a5\u8fd1\u771f\u5be6\u7684\u9a57\u8b49\u78bc\uff0c\u5426\u5247\u6700\u5f8c\u8a13\u7df4\u5b8c\u53ef\u80fd\u7528\u5728\u771f\u5be6\u7684\u9a57\u8b49\u78bc\u4e0a\u6548\u679c\u6703\u975e\u5e38\u7684\u5dee\u3002\n\n#### 3.-\u6a19\u8a18\u5c11\u91cf\u7684\u9a57\u8b49\u78bc\uff0c\u4ee5\u8cc7\u6599\u589e\u5f37\u7684\u65b9\u5f0f\u64f4\u5145\u8cc7\u6599\u96c6\n\u56e0\u70ba\u4e0d\u4e00\u5b9a\u6bcf\u4e00\u7a2e\u9a57\u8b49\u78bc\u90fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u627e\u51fa\u4ed6\u7684\u6a23\u5f0f\u6216\u898f\u5f8b\u7b49\u7b49\uff0c\u6709\u6642\u5019\u6211\u5011\u9084\u662f\u5f97\u7528\u624b\u52d5\u65b9\u5f0f\u6a19\u8a18\u4e00\u4e9b\u9a57\u8b49\u78bc\u3002\n\n\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u8cc7\u6599\u589e\u5f37\u7684\u65b9\u6cd5\u4f86\u64f4\u5145\u6211\u5011\u7684\u8cc7\u6599\u96c6\uff0c\u8b93\u6211\u5011\u7684\u7db2\u8def\u6709\u66f4\u591a\u8cc7\u6599\u53ef\u4ee5\u5b78\u7fd2\u3002\n\n```(\u8a3b:\u5728\u53f0\u9435\u9a57\u8b49\u78bc\u7684\u4f8b\u5b50\u4e2d\uff0c\u81ea\u5f9e\u6539\u7248\u52a0\u5165\u82f1\u6587\u5b57\u5f8c\uff0c\u56e0\u70ba\u82f1\u6587\u5b57\u7684\u51fa\u73fe\u6a5f\u7387\u9060\u4f4e\u65bc\u6578\u5b57(\u6bcfdigit\u5927\u7d04\u53ea\u67091~5%)\uff0c\u6240\u4ee5\u5728\u624b\u52d5\u6a19\u8a18\u7684\u771f\u5be6\u8cc7\u6599\u96c6\u4e2d\uff0c\u82f1\u6587\u5b57\u7684\u6bd4\u4f8b\u662f\u6975\u4f4e\u7684\uff0c\u9020\u6210\u6578\u64da\u5f88\u4e0d\u5e73\u8861\u3002\u4e14\u5728\u771f\u5be6\u9a57\u8b49\u78bc\u4e2d\uff0c\u4e00\u5f35\u9a57\u8b49\u78bc\u6700\u591a\u53ea\u6703\u51fa\u73fe\u4e00\u500b\u82f1\u6587\u5b57\uff0c\u5373\u4f7f\u6211\u5011\u7528\u8cc7\u6599\u589e\u5f37\u7684\u65b9\u5f0f\uff0c\u4e5f\u5f88\u96e3\u53bb\u505a\u5230\u5e73\u8861\u6578\u5b57\u53ca\u82f1\u6587\u7684\u8cc7\u6599\u6bd4\u4f8b\u3002\u96d6\u7136\u4f3c\u4e4e\u53ef\u4ee5\u900f\u904e\u8a2d\u5b9aclass weight\u7684\u65b9\u5f0f\u4f86\u6539\u5584\uff0c\u4f46\u662fkeras\u597d\u50cf\u4e0d\u652f\u63f4\u4ee5one-hot encoding\u8868\u793a\u7684\u8f38\u51fa\u8a2d\u5b9aclass weight...\u3002\u9019\u90e8\u5206\u66ab\u6642\u60f3\u4e0d\u5230\u65b9\u5f0f\u89e3\u6c7a\uff0c\u4e0d\u904e\u82e5\u53ea\u662f\u8981\u8a13\u7df4\u4e00\u500b\u52c9\u5f37\u582a\u7528\u7684\u6a21\u578b\uff0c\u7528\u9019\u500b\u65b9\u5f0f\u9084\u662f\u53ef\u884c\u7684\uff0c\u56e0\u70ba\u5be6\u969b\u4e0a\u53f0\u9435\u9a57\u8b49\u78bc\u82f1\u6587\u51fa\u73fe\u7684\u6bd4\u4f8b\u4e5f\u6c92\u6709\u975e\u5e38\u9ad8\u3002)```\n\n--------------------\n\n## 2.1-Generate training and validation set\n\u8b93\u6211\u5011\u4f86\u6a21\u4eff\u7522\u751f\u4e00\u4e9b\u9a57\u8b49\u78bc\u5427\uff01\n\u9996\u5148\u6211\u5011\u8981\u5148\u89c0\u5bdf\u9a57\u8b49\u78bc\uff0c\u4f60\u53ef\u4ee5\u5beb\u4e00\u652f\u722c\u87f2\u7a0b\u5f0f(eg.```captcha_scrawl.py```)\u53bb\u64f7\u53d6\u4e00\u5169\u767e\u5f35\u9a57\u8b49\u78bc\u56de\u4f86\u7d30\u7d30\u6bd4\u5c0d\u3002\u6211\u5011\u4e0d\u96e3\u767c\u73fe\u53f0\u9435\u7684\u9a57\u8b49\u78bc\u4e0d\u5916\u4e4e\u7531\u5169\u500b\u4e3b\u8981\u5143\u7d20\u7d44\u6210\uff1a\n- ```5 ~ 6\u78bc```\u7684\u6578\u5b57\u53ca\u82f1\u6587(\u4e0d\u5305\u542bO\u548cI)\uff0c\u5927\u5c0f\u4f3c\u4e4e\u4e0d\u4e00\u81f4\uff0c\u800c\u4e14\u90fd\u6709\u7d93\u904e\u65cb\u8f49\uff0c\u53e6\u5916\u984f\u8272\u662f\u6d6e\u52d5\u7684\u3002\n- \u80cc\u666f\u662f\u6d6e\u52d5\u7684\u984f\u8272\uff0c\u53e6\u5916\u9084\u6709\u4e0d\u5c11\u5e72\u64fe\u7684\u7dda\u689d\uff0c\u770b\u8d77\u4f86\u61c9\u8a72\u662f\u77e9\u5f62\uff0c\u7531\u9ed1\u7dda\u548c\u767d\u7dda\u7d44\u6210\uff0c\u4e14\u6709\u90e8\u5206\u6703\u84cb\u5230\u6578\u5b57\u4e0a\u9762\u3002\n\n\u9032\u4e00\u6b65\u7814\u7a76\u6703\u767c\u73fe:\n- \u6578\u5b57\u7684\u65cb\u8f49\u89d2\u5ea6\u7d04\u5728```-55 ~ 55\u5ea6```\u9593\uff0c\u5927\u5c0f\u7d04```25 ~ 27pt```\u3002\n- \u5b57\u578b\u7684\u90e8\u5206\uff0c\u4ed4\u7d30\u89c0\u5bdf\u6703\u767c\u73fe\u540c\u4e00\u500b\u5b57\u6703\u6709\u5169\u7a2e\u4e0d\u4e00\u6a23\u7684\u6a23\u5f0f\uff0c\u63a8\u6e2c\u662f\u6709\u5169\u7a2e\u5b57\u578b\u96a8\u6a5f\u66f4\u66ff\uff0c\u5176\u4e2d\u4e00\u500b\u5f88\u660e\u986f\u662f```Courier New-Bold```\uff0c\u53e6\u4e00\u500b\u6bd4\u5c0d\u4e00\u4e0b\u4e5f\u4e0d\u96e3\u767c\u73fe\u5373\u662f```Times New Roman-Bold```\u3002\n- \u80cc\u666f\u548c\u5b57\u578b\u984f\u8272\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u7528\u4e00\u4e9b\u8272\u5f69\u5747\u503c\u5316\u7684\u624b\u6cd5\u5feb\u901f\u7684\u5f9e\u6578\u767e\u5f35\u7684\u9a57\u8b49\u78bc\u4e2d\u5f97\u51fa\u6bcf\u4e00\u5f35\u7684\u80cc\u666f\u53ca\u6578\u5b57\u7684\u984f\u8272\uff0c\u9032\u800c\u6211\u5011\u5c31\u80fd\u7b97\u51fa\u984f\u8272\u7684\u7bc4\u570d\u3002\u9019\u90e8\u5206\u53ef\u4ee5\u7528OpenCV\u7684k-means\u4f86\u5be6\u4f5c\uff0c\u9019\u908a\u5c31\u4e0d\u518d\u8d05\u8ff0\u3002\n\n\u80cc\u666f\u7684R/G/B\u7bc4\u570d\u7d04\u662f\u5728```180 ~ 250```\u9593\uff0c\u6587\u5b57\u7684\u90e8\u5206\u5247\u662f```10 ~ 140```\u9593\u3002\n- \u5e72\u64fe\u7684\u7dda\u689d\u662f\u77e9\u5f62\uff0c\u6709\u5de6\u3001\u4e0a\u662f\u9ed1\u7dda\u689d\u4e14\u53f3\u3001\u4e0b\u662f\u767d\u7dda\u689d\u548c\u5012\u904e\u4f86\uff0c\u5171\u5169\u7a2e\u6a23\u5f0f(\u4e5f\u53ef\u4ee5\u7576\u4f5c\u662f\u65cb\u8f49180\u5ea6)\uff0c\u5e73\u5747\u5927\u7d04\u6703\u51fa\u73fe```30 ~ 32\u500b```\u96a8\u6a5f\u5206\u5e03\u5728\u5716\u4e2d\uff0c\u9577\u5bec\u90fd\u5927\u7d04\u843d\u5728```5 ~ 21px```\u9593\u3002\n\u53e6\u5916\uff0c\u5927\u7d04\u67094\u6210\u7684\u6a5f\u6703\u767d\u7dda\u6703\u84cb\u5728\u6578\u5b57\u4e0a\uff0c\u9ed1\u7dda\u84cb\u5728\u6587\u5b57\u4e0a\u7684\u6a5f\u7387\u5247\u66f4\u4f4e\u3002\n\n\u6709\u4e86\u9019\u4e9b\u89c0\u5bdf\uff0c\u53ea\u5dee\u4e00\u9ede\u9ede\u5c31\u53ef\u4ee5\u7522\u751f\u8a13\u7df4\u96c6\u4e86\uff0c\u6211\u5011\u73fe\u5728\u4f86\u89c0\u5bdf\u6587\u5b57\u90fd\u843d\u5728\u5716\u7247\u4e0a\u7684\u751a\u9ebc\u4f4d\u7f6e\u4e0a:\n\n![image](./readme_img/captcha_seperate1.png)![image](./readme_img/captcha_seperate2.png)![image](./readme_img/captcha_seperate3.png)\n\n\u5f9e\u9019\u5e7e\u5f35\u5716\u4e2d\u4e0d\u96e3\u770b\u51fa\u6587\u5b57\u4e26\u975e\u898f\u5247\u5730\u5206\u5e03\u5728\u5716\u7247\u4e0a\uff0c\u6211\u5011\u53ef\u4ee5\u731c\u6e2c\u6587\u5b57\u662f\u65cb\u8f49\u5f8c\u88ab\u96a8\u6a5f\u5de6\u79fb\u6216\u53f3\u79fb\u4e86\uff0c\u751a\u81f3\u9084\u6703\u6709\u91cd\u758a\u7684\u60c5\u6cc1\uff0c\u6240\u4ee5\u6c92\u8fa6\u6cd5\u7528\u5207\u5272\u7684\u65b9\u5f0f\u4e00\u6b21\u8655\u7406\u4e00\u500b\u6587\u5b57\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u6211\u5011\u7c21\u55ae\u89c0\u5bdf\u5230\u7684\u9a57\u8b49\u78bc\u898f\u5247\uff0c\u8a13\u7df4\u96c6\u7522\u751f\u7684\u90e8\u5206\u5be6\u4f5c\u5728```captcha_gen.py```\u4e2d\uff0c\u96d6\u7136\u5beb\u5f97\u6709\u9ede\u96dc\u4e82\uff0c\u4e0d\u904e\u6c92\u751a\u9ebc\u7279\u5225\u7684\u5730\u65b9\uff0c\u5c31\u662f\u7167\u8457\u4e0a\u9762\u7684\u898f\u5247\u7522\u751f\uff0c\u53ef\u4ee5\u8a66\u8457\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u5be6\u4f5c\u770b\u770b\u3002\n\n![image](./readme_img/captcha_sample4.jpg)\n\n```python\nif __name__ == \"__main__\":\n    generate(50000, \"./data/56_imitate_train_set/\",  ENGP=100, FIVEP=50, ENGNOLIMIT=True, filename=\"train\")\n    generate(10240, \"./data/56_imitate_vali_set/\",  ENGP=100, FIVEP=50, ENGNOLIMIT=True, filename=\"vali\")\n    generate(50000, \"./data/5_imitate_train_set/\",  ENGP=100, FIVEP=100, ENGNOLIMIT=True, filename=\"train\")\n    generate(10240, \"./data/5_imitate_vali_set/\",  ENGP=100, FIVEP=100, ENGNOLIMIT=True, filename=\"vali\")\n    generate(50000, \"./data/6_imitate_train_set/\",  ENGP=100, FIVEP=0, ENGNOLIMIT=True, filename=\"train\")\n    generate(10240, \"./data/6_imitate_vali_set/\",  ENGP=100, FIVEP=0, ENGNOLIMIT=True, filename=\"vali\")\n```\n\n\u6700\u5f8c\u6703\u70ba\u6211\u5011\u9810\u8a08\u5efa\u7acb\u7684\u4e09\u500bCNN(2.2.1\u6703\u63d0\u5230)\u5404\u5206\u5225\u7522\u751f50000\u7b46Training data\u548c10240\u7b46Validate data\uff0c\u7b54\u6848\u5247\u6a19\u8a18\u5728csv\u6a94\u4e2d\u3002\n\n![image](./readme_img/csv.png)![image](./readme_img/generate.png)\n\n\n## 2.2.1-Building Convolution Neural Network\n\u6709\u4e86\u8cc7\u6599\u96c6\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u4f86\u5efa\u7acbCNN\u4e86\uff01\n\n\u5728\u9019\u908a\u6211\u5011\u6703\u5efa\u7acb\u4e09\u500bCNN\uff0c\u5206\u5225\u662f```1.\u8fa8\u8b585\u78bc\u9a57\u8b49\u78bc\u5716\u7247\u7684CNN```\u3001```2.\u8fa8\u8b586\u78bc\u9a57\u8b49\u78bc\u5716\u7247\u7684CNN``` \u4ee5\u53ca ```3.\u8fa8\u8b58\u5716\u7247\u662f5\u78bcor6\u78bc\u9a57\u8b49\u78bc\u7684CNN```\u3002\n\n\u9996\u5148\u6211\u5011\u5148\u4f86\u5be6\u4f5c\u524d\u5169\u500b\u8fa8\u8b58\u9a57\u8b49\u78bc\u7684CNN:\u8f38\u5165\u662f```60*200```\u7684\u5716\u7247\uff0c\u5171\u67093\u500bchannel(R/G/B)\uff0c\u6240\u4ee5\u662fshape\u6703\u662f```(60, 200, 3)```\u3002\n\n\u4e2d\u9593\u900f\u904e\u6578\u5c64\u7531ReLU\u51fd\u6578\u6fc0\u767c\u7684Convolution Layer\u64f7\u53d6\u7279\u5fb5\uff0c\u4e26\u4ee52x2\u7684Max pooling layer\u63a1\u6a23\u6e1b\u5c11\u8a08\u7b97\u91cf\u3001BatchNormalization layer\u505a\u6a19\u6e96\u5316 \u53ca Dropout Layer\u96a8\u6a5f\u6368\u68c4\u4e00\u4e9b\u795e\u7d93\u5143(\u907f\u514doverfitting)\uff0c\u6700\u5f8c\u7528Flatten Layer\u4f86\u628a\u8cc7\u6599\u964d\u52301\u7dad\uff0c\u8f38\u51fa\u5230\u5168\u9023\u63a5\u5c64\uff1a5/6\u500b34\u795e\u7d93\u5143\u7684Softmax regression\u5206\u985e\u5668\u3002\n\n(\u8a3b:34\u500b\u4ee3\u8868\u6578\u5b570~9\u4ee5\u53ca\u82f1\u6587\u5b57\u6bcd\u53bb\u9664O\u53caI\u7684\u6578\u91cf\uff0c\u53e6\u59165\u78bc\u548c6\u78bc\u53ea\u5dee\u5728\u6700\u5f8c\u6709\u5e7e\u500bSoftmax regression\u5206\u985e\u5668\u3002)\n\n\u4ee5\u516d\u78bc\u70ba\u4f8b(train_cnn_imitate_6.py):\n```python\nin = Input((60, 200, 3))\nout = in\nout = Conv2D(filters=32, kernel_size=(3, 3), padding='same', activation='relu')(out)\nout = Conv2D(filters=32, kernel_size=(3, 3), activation='relu')(out)\nout = BatchNormalization()(out)\nout = MaxPooling2D(pool_size=(2, 2))(out)\nout = Dropout(0.3)(out)\nout = Conv2D(filters=64, kernel_size=(3, 3), padding='same', activation='relu')(out)\nout = Conv2D(filters=64, kernel_size=(3, 3), activation='relu')(out)\nout = BatchNormalization()(out)\nout = MaxPooling2D(pool_size=(2, 2))(out)\nout = Dropout(0.3)(out)\nout = Conv2D(filters=128, kernel_size=(3, 3), padding='same', activation='relu')(out)\nout = Conv2D(filters=128, kernel_size=(3, 3), activation='relu')(out)\nout = BatchNormalization()(out)\nout = MaxPooling2D(pool_size=(2, 2))(out)\nout = Dropout(0.3)(out)\nout = Conv2D(filters=256, kernel_size=(3, 3), activation='relu')(out)\nout = BatchNormalization()(out)\nout = MaxPooling2D(pool_size=(2, 2))(out)\nout = Flatten()(out)\nout = Dropout(0.3)(out)\nout = [Dense(34, name='digit1', activation='softmax')(out),\\\n    Dense(34, name='digit2', activation='softmax')(out),\\\n    Dense(34, name='digit3', activation='softmax')(out),\\\n    Dense(34, name='digit4', activation='softmax')(out),\\\n    Dense(34, name='digit5', activation='softmax')(out),\\\n    Dense(34, name='digit6', activation='softmax')(out)]\nmodel = Model(inputs=in, outputs=out)\n```\n\n\u5b8c\u6210\u5f8c\u8981\u4f86compile\u6a21\u578b\uff0c\u9019\u908aloss\u4f7f\u7528```categorical_crossentropy```\u3001optimizer*\u4f7f\u7528```Adam```\uff0c\u800cmetrics\u7406\u6240\u7576\u7136\u662f```accuracy```\u4e86\u3002\n```python\nmodel.compile(loss='categorical_crossentropy', optimizer='Adamax', metrics=['accuracy'])\n```\n\n*\u95dc\u65bcoptimizer\u7684\u9078\u64c7\uff0c\u53ef\u4ee5\u53c3\u8003\u9019\u5169\u7bc7\uff0c\u5beb\u5f97\u4e0d\u932f\uff1a\n1. An overview of gradient descent optimization algorithms -  http://ruder.io/optimizing-gradient-descent/index.html\n2. SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\u7b49\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u548c\u6bd4\u8f83 - http://ycszen.github.io/2016/08/24/SGD%EF%BC%8CAdagrad%EF%BC%8CAdadelta%EF%BC%8CAdam%E7%AD%89%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E6%AF%94%E8%BE%83/\n**\n\n--\n\n\u6700\u5f8c\u4f86\u770b\u770bmodel\u7684summary\u8f38\u51fa\u9577\u751a\u9ebc\u6a23\u5b50\uff1a\n```python\nmodel.summary()\n\n__________________________________________________________________________________________________\nLayer (type)                    Output Shape         Param #     Connected to",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "captcha-solver-custom",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tiger154",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tiger154/captcha-solver-custom/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 13 Dec 2021 17:27:28 GMT"
    },
    "technique": "GitHub API"
  }
}