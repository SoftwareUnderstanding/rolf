{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2003.14032"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite our paper if this code benefits your research:\n```\n@InProceedings{Zhang_2020_CVPR,\nauthor = {Zhang, Yang and Zhou, Zixiang and David, Philip and Yue, Xiangyu and Xi, Zerong and Gong, Boqing and Foroosh, Hassan},\ntitle = {PolarNet: An Improved Grid Representation for Online LiDAR Point Clouds Semantic Segmentation},\nbooktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\nmonth = {June},\nyear = {2020}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Zhang_2020_CVPR,\nauthor = {Zhang, Yang and Zhou, Zixiang and David, Philip and Yue, Xiangyu and Xi, Zerong and Gong, Boqing and Foroosh, Hassan},\ntitle = {PolarNet: An Improved Grid Representation for Online LiDAR Point Clouds Semantic Segmentation},\nbooktitle = {Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},\nmonth = {June},\nyear = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9900272403192524
      ],
      "excerpt": "        <img src=\"imgs/PC_vis.png\" title=\"SemanticKITTI Point Cloud\" width=\"48%\"> <img src=\"imgs/predict_vis.png\" title=\"PolarSeg Prediction\" width=\"48%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9959730875119275,
        0.999998815191985
      ],
      "excerpt": "Yang Zhang*; Zixiang Zhou*; Philip David; Xiangyu Yue; Zerong Xi; Boqing Gong; Hassan Foroosh \nConference on Computer Vision and Pattern Recognition, 2020 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9792428879788975
      ],
      "excerpt": "[ArXiv paper] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yvanali/KITTISeg",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-03T02:50:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-14T09:27:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.968820346747342
      ],
      "excerpt": "THis is a modified repo of PolarNet. We rename it as KITTISeg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.862786270684735
      ],
      "excerpt": "        <em>LiDAR scan visualization of SemanticKITTI dataset(left) and the prediction result of PolarNet(right).</em> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9864389132404195
      ],
      "excerpt": "PolarNet is a lightweight neural network that aims to provide near-real-time online semantic segmentation for a single LiDAR scan. Unlike existing methods that require KNN to build a graph and/or 3D/graph convolution, we achieve fast inference speed by avoiding both of them. As shown below, we quantize points into grids using their polar coordinations. We then learn a fixed-length representation for each grid and feed them to a 2D neural network to produce point segmentation results. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9212219256952805
      ],
      "excerpt": "We achieved leading mIoU performance in the following LiDAR scan datasets : SemanticKITTI, A2D2 and Paris-Lille-3D. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.962166613705384
      ],
      "excerpt": "Model | SemanticKITTI | A2D2 | Paris-Lille-3D \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8071436843770216
      ],
      "excerpt": "3D-MiniNet | 55.8%  | - | - | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8032846479540435
      ],
      "excerpt": "We also provide a pretrained SemanticKITTI PolarNet weight. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8459730530086147
      ],
      "excerpt": "Remember to shift label number back to the original dataset format before submitting! Instruction can be found in semantic-kitti-api repo. You should be able to reproduce the SemanticKITTI results reported in our paper. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yvanali/KITTISeg/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 12 Dec 2021 03:38:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yvanali/KITTISeg/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yvanali/KITTISeg",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code is tested on Ubuntu 16.04 with Python 3.5, CUDA 9.2 and Pytorch 1.3.1.\n\n1, Install the following dependencies by either `pip install -r requirements.txt` or manual installation.\n* numpy\n* pytorch\n* tqdm\n* yaml\n* Cython\n* [numba](https://github.com/numba/numba)\n* [torch-scatter](https://github.com/rusty1s/pytorch_scatter)\n* [dropblock](https://github.com/miguelvr/dropblock)\n\n2, Download Velodyne point clouds and label data in SemanticKITTI dataset [here](http://www.semantic-kitti.org/dataset.html#overview).\n\n3, Extract everything into the same folder. The folder structure inside the zip files of label data matches the folder structure of the LiDAR point cloud data.\n\n4, Data file structure should look like this:\n\n```\n./\n\u251c\u2500\u2500 train.py\n\u251c\u2500\u2500 ...\n\u2514\u2500\u2500 data/\n    \u251c\u2500\u2500sequences\n        \u251c\u2500\u2500 00/           \n        \u2502   \u251c\u2500\u2500 velodyne/\t#: Unzip from KITTI Odometry Benchmark Velodyne point clouds.\n        |   |\t\u251c\u2500\u2500 000000.bin\n        |   |\t\u251c\u2500\u2500 000001.bin\n        |   |\t\u2514\u2500\u2500 ...\n        \u2502   \u2514\u2500\u2500 labels/ \t#: Unzip from SemanticKITTI label data.\n        |       \u251c\u2500\u2500 000000.label\n        |       \u251c\u2500\u2500 000001.label\n        |       \u2514\u2500\u2500 ...\n        \u251c\u2500\u2500 ...\n        \u2514\u2500\u2500 21/\n\t    \u2514\u2500\u2500 ...\n```\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8177420909649895
      ],
      "excerpt": "        <img src=\"imgs/PC_vis.png\" title=\"SemanticKITTI Point Cloud\" width=\"48%\"> <img src=\"imgs/predict_vis.png\" title=\"PolarSeg Prediction\" width=\"48%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8428099087091617
      ],
      "excerpt": "        <img src=\"imgs/overview.png\" width=\"90%\">  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785,
        0.8610540925048715
      ],
      "excerpt": "python train.py \nto train a SemanticKITTI segmentation PolarNet from scratch after dataset preparation. The code will automatically train, validate and early stop training process. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091,
        0.8424003036995108
      ],
      "excerpt": "python test_pretrain.py \nResult will be stored in ./out folder. Test performance can be evaluated by uploading label results onto the SemanticKITTI competition website here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9083896587620477
      ],
      "excerpt": "        <img src=\"imgs/SKITTI.png\" width=\"100%\">  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yvanali/KITTISeg/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2019, Edward Zhou\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its\\n   contributors may be used to endorse or promote products derived from\\n   this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PolarNet: An Improved Grid Representation for Online LiDAR Point Clouds Semantic Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "KITTISeg",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yvanali",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yvanali/KITTISeg/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 12 Dec 2021 03:38:15 GMT"
    },
    "technique": "GitHub API"
  }
}