{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{pytorchaaac,\n  author = {Kostrikov, Ilya},\n  title = {PyTorch Implementations of Asynchronous Advantage Actor Critic},\n  year = {2018},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/ikostrikov/pytorch-a3c}},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9946434342164127
      ],
      "excerpt": "Please use this bibtex if you want to cite this repository in your publications: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9818894004866677,
        0.8494045166012649,
        0.9959021299438506,
        0.9146894306581513,
        0.9851092049198196,
        0.9687043686588788
      ],
      "excerpt": "  author = {Kostrikov, Ilya}, \n  title = {PyTorch Implementations of Asynchronous Advantage Actor Critic}, \n  year = {2018}, \n  publisher = {GitHub}, \n  journal = {GitHub repository}, \n  howpublished = {\\url{https://github.com/ikostrikov/pytorch-a3c}}, \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ikostrikov/pytorch-a3c",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-02-13T03:57:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T07:11:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9891077146528273,
        0.824427390132214,
        0.976294337071313
      ],
      "excerpt": "This is a PyTorch implementation of Asynchronous Advantage Actor Critic (A3C) from \"Asynchronous Methods for Deep Reinforcement Learning\". \nThis implementation is inspired by Universe Starter Agent. \nIn contrast to the starter agent, it uses an optimizer with shared statistics as in the original paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8041001869795971,
        0.9025781463100374,
        0.8499879246536841
      ],
      "excerpt": "I highly recommend to check a sychronous version and other algorithms: pytorch-a2c-ppo-acktr. \nIn my experience, A2C works better than A3C and ACKTR is better than both of them. Moreover, PPO is a great algorithm for continuous control. Thus, I recommend to try A2C/PPO/ACKTR first and use A3C only if you need it specifically for some reasons. \nAlso read OpenAI blog for more information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of Asynchronous Advantage Actor Critic (A3C) from \"Asynchronous Methods for Deep Reinforcement Learning\".",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ikostrikov/pytorch-a3c/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 246,
      "date": "Fri, 10 Dec 2021 21:05:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ikostrikov/pytorch-a3c/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ikostrikov/pytorch-a3c",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8049264445935403
      ],
      "excerpt": "I highly recommend to check a sychronous version and other algorithms: pytorch-a2c-ppo-acktr. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ikostrikov/pytorch-a3c/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Ilya Kostrikov\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-a3c",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-a3c",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ikostrikov",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ikostrikov/pytorch-a3c/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 950,
      "date": "Fri, 10 Dec 2021 21:05:18 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "python",
      "reinforcement-learning",
      "pytorch",
      "deep-learning",
      "actor-critic",
      "a3c",
      "pytorch-a3c",
      "asynchronous-methods",
      "deep-reinforcement-learning",
      "asynch",
      "asynchronous-advantage-actor-critic"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n#: Works only wih Python 3.\npython3 main.py --env-name \"PongDeterministic-v4\" --num-processes 16\n```\n\nThis code runs evaluation in a separate thread in addition to 16 processes.\n\n",
      "technique": "Header extraction"
    }
  ]
}