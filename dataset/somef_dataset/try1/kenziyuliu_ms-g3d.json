{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repo is based on\n  - [2s-AGCN](https://github.com/lshiwjx/2s-AGCN)\n  - [ST-GCN](https://github.com/yysijie/st-gcn)\n\nThanks to the original authors for their work!\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite this work if you find it useful:\n\n```\n@inproceedings{liu2020disentangling,\n  title={Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition},\n  author={Liu, Ziyu and Zhang, Hongwen and Chen, Zhenghao and Wang, Zhiyong and Ouyang, Wanli},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={143--152},\n  year={2020}\n}\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{liu2020disentangling,\n  title={Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition},\n  author={Liu, Ziyu and Zhang, Hongwen and Chen, Zhenghao and Wang, Zhiyong and Ouyang, Wanli},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={143--152},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9795574546360021
      ],
      "excerpt": "PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\", CVPR 2020 Oral. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "2 GPUs: --base-lr 0.05 --device 0 1 --batch-size 32 --forward-batch-size 32 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kenziyuliu/MS-G3D",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please email `kenziyuliu AT outlook.com` for further questions\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-17T06:02:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-27T08:59:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9192085170458634
      ],
      "excerpt": "PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\", CVPR 2020 Oral. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "- data/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9881184327125152
      ],
      "excerpt": "Time estimate is ~ 3hrs to generate NTU 120 on a single core (feel free to parallelize the code :)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248223361017352,
        0.9555339732732651
      ],
      "excerpt": "~ 70 mins to generate Kinetics data \nGenerate the bone data with: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787947191496486
      ],
      "excerpt": "Put the folder of pretrained models at repo root: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189129600288928,
        0.8863978367976859
      ],
      "excerpt": "Unfortunately, different PyTorch/CUDA versions & GPU setups can cause different levels of memory usage, and so you may experience out of memory (OOM) on some machines but not others \n1080Ti GPUs with --half and --amp-opt-level 1 (default) are relatively more stable \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.918719466970005
      ],
      "excerpt": "It may also impact the stability of training and/or the final performance \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[CVPR 2020 Oral] PyTorch implementation of \"Disentangling and Unifying Graph Convolutions for Skeleton-Based Action Recognition\"",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "There are 3 datasets to download:\n\n- NTU RGB+D 60 Skeleton\n- NTU RGB+D 120 Skeleton\n- Kinetics 400 Skeleton\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kenziyuliu/ms-g3d/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 76,
      "date": "Mon, 06 Dec 2021 09:30:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kenziyuliu/MS-G3D/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kenziyuliu/MS-G3D",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kenziyuliu/ms-g3d/master/eval_pretrained.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "*Disk usage warning: after preprocessing, the total sizes of datasets are around 38GB, 77GB, 63GB for NTU RGB+D 60, NTU RGB+D 120, and Kinetics 400, respectively. The raw/intermediate sizes may be larger.*\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8041702872532085
      ],
      "excerpt": "Download missing skeletons lookup files from the authors' GitHub repo: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8476150360351908
      ],
      "excerpt": "  wget https://raw.githubusercontent.com/shahroudy/NTURGB-D/master/Matlab/NTU_RGBD_samples_with_missing_skeletons.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8476150360351908
      ],
      "excerpt": "  wget https://raw.githubusercontent.com/shahroudy/NTURGB-D/master/Matlab/NTU_RGBD120_samples_with_missing_skeletons.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9619863950424019
      ],
      "excerpt": "Download dataset from ST-GCN repo: https://github.com/yysijie/st-gcn/blob/master/OLD_README.md#kinetics-skeleton \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd data_gen \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9630513359443713
      ],
      "excerpt": "Run bash eval_pretrained.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9695324404155894
      ],
      "excerpt": "Train with 1 GPU: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8817584725980971
      ],
      "excerpt": "This means you may need to train on a single GPU when using O2 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8743181651595923,
        0.8743181651595923,
        0.8743181651595923,
        0.8743181651595923,
        0.8743181651595923,
        0.8743181651595923,
        0.8743181651595923,
        0.8062087464445361
      ],
      "excerpt": "<img src=\"imgs/cropped-fixed-standup.gif\" width=\"24%\"><img src=\"imgs/cropped-fixed-clap.gif\" width=\"24%\"> \n<img src=\"imgs/cropped-fixed-salute.gif\" width=\"24%\"> \n<img src=\"imgs/cropped-fixed-pointfinger.gif\" width=\"24%\"> \n<img src=\"imgs/cropped-fixed-pickup.gif\" width=\"24%\"> \n<img src=\"imgs/cropped-fixed-rub.gif\" width=\"24%\"> \n<img src=\"imgs/cropped-fixed-drink.gif\" width=\"24%\"> \n<img src=\"imgs/cropped-fixed-checktime.gif\" width=\"24%\"> \nRequest dataset here: http://rose1.ntu.edu.sg/Datasets/actionRecognition.asp \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "python3 ntu_gendata.py \npython3 ntu120_gendata.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.814772095536665
      ],
      "excerpt": "python3 kinetics_gendata.py \n~ 70 mins to generate Kinetics data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.921108411272225,
        0.921108411272225,
        0.9357981093910539,
        0.844272329096494
      ],
      "excerpt": "python gen_bone_data.py --dataset ntu \npython gen_bone_data.py --dataset ntu120 \npython gen_bone_data.py --dataset kinetics \nDownload pretrained models for producing the final results on NTU RGB+D 60, NTU RGB+D 120, Kinetics Skeleton 400: [Dropbox][GoogleDrive][WeiYun] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8245539886860519,
        0.9285065137266004
      ],
      "excerpt": "  - pretrained-models/ \n  - main.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "python3 main.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "python3 main.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 ensemble.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8525006468049924,
        0.8595847467514373,
        0.8213806783845459,
        0.8478470813599832
      ],
      "excerpt": "Train with 1 GPU: \npython3 main.py --config ./config/nturgbd120-cross-subject/train_joint.yaml \nTrain with 2 GPUs: \npython3 main.py --config ./config/nturgbd120-cross-subject/train_joint.yaml --batch-size 32 --forward-batch-size 32 --device 0 1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8582826564186439
      ],
      "excerpt": "python3 main.py --config ./config/nturgbd120-cross-setup/test_bone.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8332655064876293,
        0.9285065137266004
      ],
      "excerpt": "Resume training from checkpoint \npython3 main.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kenziyuliu/MS-G3D/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Ziyu Liu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MS-G3D",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MS-G3D",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kenziyuliu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kenziyuliu/MS-G3D/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python >= 3.6\n- PyTorch >= 1.2.0\n- [NVIDIA Apex](https://github.com/NVIDIA/apex) (auto mixed precision training)\n- PyYAML, tqdm, tensorboardX\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 301,
      "date": "Mon, 06 Dec 2021 09:30:34 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "action-recognition",
      "pretrained-models",
      "deep-learning",
      "computer-vision",
      "skeleton",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}