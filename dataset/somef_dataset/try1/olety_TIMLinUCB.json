{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.06593",
      "https://arxiv.org/abs/1404.0900",
      "https://arxiv.org/abs/1607.00653",
      "https://arxiv.org/abs/1604.07638"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[[arXiv]](https://arxiv.org/abs/1605.06593)[IMLinUCB] Wen, Zheng, et al. \"Online influence maximization under independent cascade model with semi-bandit feedback.\" Advances in neural information processing systems. 2017.\n\n[[arXiv]](https://arxiv.org/abs/1404.0900)[TIM] Tang, Youze, Xiaokui Xiao, and Yanchen Shi. \"Influence maximization: Near-optimal time complexity meets practical efficiency.\" Proceedings of the 2014 ACM SIGMOD international conference on Management of data. 2014.\n\n[[arXiv]](https://arxiv.org/abs/1607.00653)[node2vec] Grover, Aditya, and Jure Leskovec. \"node2vec: Scalable feature learning for networks.\" Proceedings of the 22nd ACM SIGKDD international conference on Knowledge discovery and data mining. 2016.\n\n[[arXiv]](https://arxiv.org/abs/1604.07638)[RSB] Bao, Yixin, et al. \"Online influence maximization in non-stationary social networks.\" 2016 IEEE/ACM 24th International Symposium on Quality of Service (IWQoS). IEEE, 2016.\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/olety/TIMLinUCB",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-16T17:51:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-19T08:42:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9348110677716654,
        0.9828859732352119,
        0.9943212469758465,
        0.9871155008829501,
        0.9936674887026344
      ],
      "excerpt": "An effective way of finding the most influential nodes in a temporal network without knowing everything about it (aka in an online way). \nThe current (2020) Influence Maximization literature is mainly focused on analyzing static networks as well as temporal networks in cases where we know the \"activation probability\" of a node X transferring some information to the node Y.  \nAs you can see from the diagram above, the only algorithm designed specifically for the case of Online IM in Temporal Networks is RSB. This work aims to change this by introducing TIMLinUCB - a temporal adaptation of a state-of-the-art Online IM algorithm for Static networks. \nTIMLinUCB is based on IMLinUCB (T stands for Temporal).  \nWhile you can find the IMLinUCB paper in the references below, the basic algorithm is built on top of an efficient Offline IM algorithm, TIM. The main idea is similar to linear regression - IMLinUCB represents the edge activation probability of every edge as a vector of edge features multiplied by a weight vector (features are usually obtained using node2vec and multiplying the features of the two nodes that form the edge), and then adjusts the weight based on the output that TIM generates. If the influence generated by the TIM's output node set increases, we know that we are changing weights in a correct direction. Please check the referenced paper for a more mathematical description! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9956041179969704,
        0.9228360521568778
      ],
      "excerpt": "TIMLinUCB extends IMLinUCB to work on temporal networks by simply applying the algorithm at every time step. The output of the algorithm is thus a set of sets, in which every subset is a seed that maximizes the influence at that time point. \nDue to the TIMLinUCB's structure (It calls IMLinUCB for every time step while IMLinUCB calls TIM a certain number of times), it can be very time-consuming to run. But we can parellelize it! While IMLinUCB requires for its previous iteration to finish before the next one can begin, TIMLinUCB doesn't which leads us to the following parallelization scheme: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9863749803367343
      ],
      "excerpt": "RSB by Bao, Yixin, et al. (referenced below) is also an algorithm designed to perform Online IM in Temporal Networks. While TIMLinUCB is based on an OIM algorithm, RSB was designed specifically for Temporal Networks, which makes it a good \"sparring partner\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9253424461034864,
        0.8930977746350787
      ],
      "excerpt": "You can see the comparison between TIMLinUCB and RSB in the pictures above and below. We used the Facebook dataset \"fb-wosn-friends\" and a seed set of 100 nodes. \nAs you can see, TIMLinUCB is better at actually finding the best seed node set but takes more time than RSB to execute, even if we are running the parallel version of TIMLinUCB. You can find more comparison charts in the thesis introducing TIMLinUCB. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Temporal IMLinUCB - a solution for Online Influence Maximization problem in Temporal Networks (based on IMLinUCB)",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://timlinucb.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/olety/TIMLinUCB/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 11 Dec 2021 21:41:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/olety/TIMLinUCB/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "olety/TIMLinUCB",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/olety/TIMLinUCB/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/256289048",
      "technique": "Regular expression"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8579970184227242
      ],
      "excerpt": "<img src=\"pictures/tlu_par_oim.png\" alt=\"Running multiple OIM (IMLinUCB) instances in parallel\" width=\"500\" /><br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8656035015071427
      ],
      "excerpt": "<img src=\"pictures/tlu_par_toim.png\" alt=\"Running multiple TIMLinUCB instances in parallel\" height=\"350\" /><br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8261882372914657
      ],
      "excerpt": "<img src=\"pictures/rsb_perf.png\" alt=\"RSB vs TIMLinUCB (execution time) - RSB is faster\" height=\"350\" /><br/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/olety/TIMLinUCB/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TIMLinUCB - an algorithm for Online Influence Maximization in Temporal Networks.",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "TIMLinUCB",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "olety",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/olety/TIMLinUCB/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "olety",
        "body": "Feel free to use the timlinucb function in timlinucb.py to solve online influence maximization for temporal networks.\r\n\r\nYou can refer to experiment.py for some guidance on how to create your own experiment.",
        "dateCreated": "2020-07-14T09:58:02Z",
        "datePublished": "2020-07-14T18:55:55Z",
        "html_url": "https://github.com/olety/TIMLinUCB/releases/tag/v1.0-alpha",
        "name": "First release - getting a DOI",
        "tag_name": "v1.0-alpha",
        "tarball_url": "https://api.github.com/repos/olety/TIMLinUCB/tarball/v1.0-alpha",
        "url": "https://api.github.com/repos/olety/TIMLinUCB/releases/28557446",
        "zipball_url": "https://api.github.com/repos/olety/TIMLinUCB/zipball/v1.0-alpha"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Sat, 11 Dec 2021 21:41:33 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "influence-maximization",
      "dynamic-networks",
      "online-influence-maximization"
    ],
    "technique": "GitHub API"
  }
}