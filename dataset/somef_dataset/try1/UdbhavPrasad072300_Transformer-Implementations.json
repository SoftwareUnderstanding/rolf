{
  "citation": [
    {
      "confidence": [
        0.8029948720864918,
        0.8111036989382164
      ],
      "excerpt": "  <a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/LICENSE\"> \n        <img alt=\"License\" src=\"https://img.shields.io/github/license/UdbhavPrasad072300/Transformer-Implementations\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9942757182925156,
        0.9991979213234429,
        0.9744675921129115,
        0.9865374311292784,
        0.9946379808099154
      ],
      "excerpt": "  <li>Vanilla Transformer</li> \n  <li>ViT - Vision Transformers</li> \n  <li>DeiT - Data efficient image Transformers</li> \n  <li>BERT - Bidirectional Encoder Representations from Transformers</li> \n  <li>GPT - Generative Pre-trained Transformer</li> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9887671410556264
      ],
      "excerpt": "  <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/Multi30k%20-%20Language%20Translation.ipynb\">Multi30k - German to English</a></li> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9731281516868951
      ],
      "excerpt": "from \"An Image is Worth 16x16 words: Transformers for image recognition at scale\": https://arxiv.org/pdf/2010.11929v1.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.988334602490187,
        0.988334602490187
      ],
      "excerpt": " <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/MNIST%20Classification%20-%20ViT.ipynb\">MNIST - Grayscale Images</a></li> \n  <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/CIFAR10%20Classification%20-%20ViT.ipynb\">CIFAR10 - MultiChannel Images</a></li> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9711550341287523
      ],
      "excerpt": "from \"Training data-efficient image transformers & distillation through attention\": https://arxiv.org/pdf/2012.12877v1.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9767895183772,
        0.9554495341661648
      ],
      "excerpt": " <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/pre-train/VGG16_CIFAR10.ipynb\">Pretraining Teacher model for Distillation</a></li> \n <li><a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/CIFAR10%20Classification%20-%20DeiT.ipynb\">CIFAR10 - Low Res Images</a></li> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/UdbhavPrasad072300/Transformer-Implementations/main/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/UdbhavPrasad072300/Transformer-Implementations",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a \n   build.\nUpdate the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\n  address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\n  professional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-07T06:31:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-30T22:25:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Library - Vanilla, ViT, DeiT, BERT, GPT",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Tue, 07 Dec 2021 03:31:52 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/UdbhavPrasad072300/Transformer-Implementations/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "UdbhavPrasad072300/Transformer-Implementations",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/UdbhavPrasad072300/Transformer-Implementations/main/notebooks/CIFAR10%20Classification%20-%20ViT.ipynb",
      "https://raw.githubusercontent.com/UdbhavPrasad072300/Transformer-Implementations/main/notebooks/Multi30k%20-%20Language%20Translation.ipynb",
      "https://raw.githubusercontent.com/UdbhavPrasad072300/Transformer-Implementations/main/notebooks/CIFAR10%20Classification%20-%20DeiT.ipynb",
      "https://raw.githubusercontent.com/UdbhavPrasad072300/Transformer-Implementations/main/notebooks/MNIST%20Classification%20-%20ViT.ipynb",
      "https://raw.githubusercontent.com/UdbhavPrasad072300/Transformer-Implementations/main/notebooks/pre-train/VGG16_CIFAR10.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<a href=\"https://pypi.org/project/transformer-implementations/\">PyPi</a>\n\n```bash\n$ pip install transformer-implementations\n```\n\nor\n\n```bash\npython setup.py build\npython setup.py install\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9591558830407932
      ],
      "excerpt": "        <img alt=\"PyPi Version\" src=\"https://img.shields.io/pypi/v/transformer-implementations\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.878494510612567
      ],
      "excerpt": "        <img alt=\"PyPi Downloads\" src=\"https://img.shields.io/pypi/dm/transformer-implementations\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8713173085757242
      ],
      "excerpt": "        <img alt=\"Package Status\" src=\"https://img.shields.io/pypi/status/transformer-implementations\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/UdbhavPrasad072300/Transformer-Implementations/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Udbhav Prasad\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Transformer Implementations",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Transformer-Implementations",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "UdbhavPrasad072300",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Tue, 07 Dec 2021 03:31:52 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "transformers",
      "transformer-implementations",
      "vision-transformers",
      "pytorch"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In <a href=\"https://github.com/UdbhavPrasad072300/Transformer-Implementations/blob/main/notebooks/\">notebooks</a> directory there is a notebook on how to use each of these models for their intented use; such as image classification for Vision Transformer (ViT) and others.\nCheck them out!\n\n```python\nfrom transformer_package.models import ViT\n\nimage_size = 28 #: Model Parameters\nchannel_size = 1\npatch_size = 7\nembed_size = 512\nnum_heads = 8\nclasses = 10\nnum_layers = 3\nhidden_size = 256\ndropout = 0.2\n\nmodel = ViT(image_size, \n            channel_size, \n            patch_size, \n            embed_size, \n            num_heads, \n            classes, \n            num_layers, \n            hidden_size, \n            dropout=dropout).to(DEVICE)\n            \nprediction = model(image_tensor)\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}