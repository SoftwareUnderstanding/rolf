{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.11362",
      "https://arxiv.org/abs/2002.05709",
      "https://arxiv.org/abs/2004.11362"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@Article{khosla2020supervised,\n    title   = {Supervised Contrastive Learning},\n    author  = {Prannay Khosla and Piotr Teterwak and Chen Wang and Aaron Sarna and Yonglong Tian and Phillip Isola and Aaron Maschinot and Ce Liu and Dilip Krishnan},\n    journal = {arXiv preprint arXiv:2004.11362},\n    year    = {2020},\n}\n```\n- https://github.com/HobbitLong/SupContrast\n- https://github.com/itisianlee/paddle-cifar100\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@Article{khosla2020supervised,\n    title   = {Supervised Contrastive Learning},\n    author  = {Prannay Khosla and Piotr Teterwak and Chen Wang and Aaron Sarna and Yonglong Tian and Phillip Isola and Aaron Maschinot and Ce Liu and Dilip Krishnan},\n    journal = {arXiv preprint arXiv:2004.11362},\n    year    = {2020},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8511535834563841
      ],
      "excerpt": "(1) Supervised Contrastive Learning. Paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9630501882921163
      ],
      "excerpt": "Results on CIFAR-10: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "AutoAugment: https://github.com/DeepVoltaire/AutoAugment \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paddorch/SupContrast.paddle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-17T02:14:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-01T08:04:32Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8826810703128871
      ],
      "excerpt": "A PaddlePaddle implementation of SupContrast: Supervised Contrastive Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9037684213129799
      ],
      "excerpt": "This repo covers an reference implementation for the following papers in PaddlePaddle 2.x, using CIFAR as an illustrative example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9370471414107301,
        0.9038405423087965
      ],
      "excerpt": "(2) A Simple Framework for Contrastive Learning of Visual Representations. Paper \nThe loss function SupConLoss in supcon.py takes features (L2 normalized) and labels as input, and return the loss. If labels is None or not passed to the it, it degenerates to SimCLR. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8930901044020226,
        0.848065338741063
      ],
      "excerpt": ": features: [bsz * n_views, f_dim] \n: n_views is the number of crops from each image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8930901044020226
      ],
      "excerpt": "features = ... \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8036348713147656
      ],
      "excerpt": "|          |Arch | Setting | Loss | Paper Acc(%) | Our Acc(%) | abs. improv. | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.859501173473258,
        0.91863806371024,
        0.8819410932260265
      ],
      "excerpt": "see config/ for configuration details \nCompared to the original batch size of 6144, we use a smaller batch size of 128, which allows us to train on a single GPU card. \nWe use gradient clip to avoid gradient explosion, to make the training of small batch size more stable \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A PaddlePaddle implementation of SupContrast: Supervised Contrastive Learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paddorch/SupContrast.paddle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 11 Dec 2021 22:52:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/paddorch/SupContrast.paddle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "paddorch/SupContrast.paddle",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "AutoAugment: https://github.com/DeepVoltaire/AutoAugment \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9042534665813847
      ],
      "excerpt": "  <img src=\"images/teaser.png\" width=\"700\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from supcon import SupConLoss \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/paddorch/SupContrast.paddle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Paddorch\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SupContrast.paddle",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SupContrast.paddle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "paddorch",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paddorch/SupContrast.paddle/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You might use `CUDA_VISIBLE_DEVICES` to set proper number of GPUs.\n\nWe released 3 models, please download from [cowtransfer](https://cowtransfer.com/s/7b3ee056bbd042) with code `461254`:\n```\n./logs\n|-- resnet50-ce-final/final             #: SupCrossEntropy (Acc: 96.9)\n|-- resnet50-supcon-final/final         #: SupContrast Pretrained\n|-- resnet50-linear-final/final         #: SupContrast Linear Fine-tuned (Acc: 97.3)\n```\n\n**(0) Data Preparing**\n```\ncd data\nwget https://dataset.bj.bcebos.com/cifar/cifar-10-python.tar.gz\n```\n\n**(1) Standard Cross-Entropy**\n- Train:\n```\npython main_ce.py -y config/resnet50_ce.yml\n```\n\n- Test:\n\nconfig the `continue_from` in `config/resnet50_ce.yml` to specify the checkpoint path, then run:\n```\npython main_ce.py -y config/resnet50_ce.yml --test\n```\n\nyou will get:\n\n![](images/ce_test.png)\n\n**(2) Supervised Contrastive Learning**  \n\n- Train:\n\nPretraining stage:\n```\npython main_supcon.py -y config/resnet50_supcon.yml\n```\n\nLinear evaluation stage:\nconfig the `from_supcon` in `config/resnet50_linear.yml` to specify the checkpoint path, then run:\n\n```\npython main_ce.py -y config/resnet50_linear.yml\n```\n\n- Test:\n\nconfig the `continue_from` in `config/resnet50_linear.yml` to specify the checkpoint path, then run:\n```\npython main_ce.py -y config/resnet50_linear.yml --test\n```\n\nyou will get:\n\n![](images/supcon_test.png)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 11 Dec 2021 22:52:18 GMT"
    },
    "technique": "GitHub API"
  }
}