{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.10593"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1.Original CycleGAN paper: [arXiv](https://arxiv.org/abs/1703.10593)\n\n2.Original CycleGAN repo: [repo](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix)\n\n3.Simple implementation of CycleGAN: [repo](https://github.com/arnab39/cycleGAN-PyTorch)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9982485508698089
      ],
      "excerpt": "Team members: Yite Wang (yitew2) , Jing Wu(jingwu6) , Yuchen He(he44), Randy Chase (randyjc2) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YiteWang/CS547-final-project",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-25T21:26:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-15T21:54:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.915369462427499,
        0.8558865435396186
      ],
      "excerpt": "Arch.py: It contains all the functions/classes to create the discriminator and generators. Here we only support resnet generator and 70X70 patch discriminator. \nMain.py: It is the main file that takes in all the arguments including all the hyperparameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "CS547 final project",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YiteWang/CS547-final-project/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 09 Dec 2021 13:14:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/YiteWang/CS547-final-project/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "YiteWang/CS547-final-project",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8073802826760982
      ],
      "excerpt": "Main.py: It is the main file that takes in all the arguments including all the hyperparameters. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/YiteWang/CS547-final-project/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS547 final project",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS547-final-project",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "YiteWang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YiteWang/CS547-final-project/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 09 Dec 2021 13:14:50 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone this repo to your machine.\n\nCreate folder `datasets` and put the dataset you want into the folder `datasets`.\n\nNotice the structure under `datasets` is as follows:\n\n```\nvangogh2photo\n\u2502\n\u2514\u2500\u2500\u2500TrainA\n\u2502   \u2502   \n\u2502   \u2514\u2500\u2500\u2500Apple_train\n\u2502       \u2502   pic1.png\n\u2502       \u2502   pic2.png\n\u2502       \u2502   ...\n\u2502    \n\u2502   \n\u2514\u2500\u2500\u2500TrainB\n\u2502   \u2502   \n\u2502   \u2514\u2500\u2500\u2500Orange_train\n\u2502       \u2502   pic1.png\n\u2502       \u2502   pic2.png\n\u2502       \u2502   ...\n\u2502    \n\u2502   \n\u2514\u2500\u2500\u2500TestA\n\u2502   \u2502   \n\u2502   \u2514\u2500\u2500\u2500Apple_test\n\u2502       \u2502   pic1.png\n\u2502       \u2502   pic2.png\n\u2502       \u2502   ...\n\u2502    \n\u2502   \n\u2514\u2500\u2500\u2500TestB\n    \u2502   \n    \u2514\u2500\u2500\u2500Orange_test\n        \u2502   pic1.png\n        \u2502   pic2.png\n        \u2502   ...\n```\n\nAn example modified dataset can be downloaded [here](https://drive.google.com/open?id=1-t9Q2kMwcPxdUe-v6Gy_Kg3LaP68F27K)\n\nThen run the following code in terminal to train:\n\n`python main.py --epochs 200 --decay_epoch 100 --batch_size 2 --training True --testing True --data_name apple2orange`\n\nIf you only want to test:\n\n`python main.py --test_batch_size 1 --testing True --data_name apple2orange`\n\nIf you want to do Monet, you should add identity loss, which needs extra arguments: `--use_id_loss True`\n\nFor more information, check `main.py` or run the following code:\n\n`python main.py -h`\n\n",
      "technique": "Header extraction"
    }
  ]
}