{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/0xzayd/Wnet-cGAN-Building-Footprints",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-14T11:20:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-18T11:55:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Building outlines  are a relevant information for multiple tasks such as urban planning, disaster assessment \nand cartographic analysis. DSM (Digital Surface Model) depth information is useful for filtering the elevated objects (buildings,...) \nfrom the objects close to the ground (streets, ...). [(Bittner et al., 2019)](https://arxiv.org/pdf/1903.03519.pdf) Combined very high resolution PAN imagery\nwith DSM model to refine the 3D building footprints. This Repository presents an implementation of their model using the Keras Framework. <br>\n<br>\n![Results obtained by [(Bittner et al., 2019)](https://arxiv.org/pdf/1903.03519.pdf)](https://github.com/0xzayd/Wnet-cGAN/blob/master/img/results.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8847940333191145,
        0.948391279824244,
        0.8994669584328112,
        0.973722751985082,
        0.8113661160997319
      ],
      "excerpt": "The architecture is a conditional Generative Adversarial Neural Network which consists of a generator network which  \nconsists of the so called W-net that admits two inputs: A panchromatic image and A stereo DSM, stacked with a discriminator that discriminates Real and Fake labels. <br> \nThe Generator network contains two U-net networks that predict the building footprints. The output of each U-net is fused at the output. \nThe Discriminator is a neural network with 5 Convolutional layers that takes the fused output of the generator (or ground truth) and the DSM data to discriminate the fake from real labels. \nIn this implementation I train the generator and the discriminator sequentially. I shuffle the pairs (input DSM, Generated label) with the pairs (input DSM, Ground truth Label) and train the discriminator on that dataset. This has shown speed up and stability in training the discriminator.<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9034376764084276
      ],
      "excerpt": "training data (tiles of same size, recommended 256x256, single band tif files) must be put in 3 different folders: PAN, DSM and LABEL as shown in the schema below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Stereo Conditional GAN for Building Footprints",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/0xzayd/Wnet-cGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 11 Dec 2021 06:29:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/0xzayd/Wnet-cGAN-Building-Footprints/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "0xzayd/Wnet-cGAN-Building-Footprints",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/0xzayd/Wnet-cGAN/master/WNET_CGAN.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8425946149241968,
        0.8770921085779495
      ],
      "excerpt": "training data (tiles of same size, recommended 256x256, single band tif files) must be put in 3 different folders: PAN, DSM and LABEL as shown in the schema below. \nTraining Folder \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8255529648132193
      ],
      "excerpt": "               \u2502   \u2514\u2500\u2500\u2500 *.tif files \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8255529648132193
      ],
      "excerpt": "               \u2502   \u2514\u2500\u2500\u2500 *.tif files \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/0xzayd/Wnet-cGAN-Building-Footprints/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/0xzayd/Wnet-cGAN/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'COPYRIGHT\\r\\n\\r\\nAll contributions by 0xzayd:\\r\\nCopyright (c) 2019, Zayd Mahmoud Hamdi.\\r\\nAll rights reserved.\\r\\n\\r\\nEach contributor holds copyright over their respective contributions.\\r\\nThe project versioning (Git) records all such contribution source information.\\r\\n\\r\\nLICENSE\\r\\n\\r\\nThe MIT License (MIT)\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\r\\nof this software and associated documentation files (the \"Software\"), to deal\\r\\nin the Software without restriction, including without limitation the rights\\r\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\ncopies of the Software, and to permit persons to whom the Software is\\r\\nfurnished to do so, subject to the following conditions:\\r\\n\\r\\nThe above copyright notice and this permission notice shall be included in all\\r\\ncopies or substantial portions of the Software.\\r\\n\\r\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Wnet-CGAN For Building Outline",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Wnet-cGAN-Building-Footprints",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "0xzayd",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/0xzayd/Wnet-cGAN-Building-Footprints/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Sat, 11 Dec 2021 06:29:09 GMT"
    },
    "technique": "GitHub API"
  }
}