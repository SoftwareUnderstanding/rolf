{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.04861"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this project useful, we would be grateful if you cite the paper:\n\n```\n@article{BlindDenoising2019,\nauthor = {Shaofeng Zou, Mingzhu Long, Xuyang Wang, Xiang Xie, Guolin Li, Zhihua Wang},\nconference = {BioCAS 2019},\ntitle = {A CNN-Based Blind Denoising Method for Endoscopic Images},\nurl = {https://ieeexplore.ieee.org/abstract/document/8918994/},\nyear = {2019}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Part of code refers from [deep image prior](https://github.com/DmitryUlyanov/deep-image-prior) and [neural-image-assessment](https://github.com/titu1994/neural-image-assessment).\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{BlindDenoising2019,\nauthor = {Shaofeng Zou, Mingzhu Long, Xuyang Wang, Xiang Xie, Guolin Li, Zhihua Wang},\nconference = {BioCAS 2019},\ntitle = {A CNN-Based Blind Denoising Method for Endoscopic Images},\nurl = {https://ieeexplore.ieee.org/abstract/document/8918994/},\nyear = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8332975487436729
      ],
      "excerpt": "|   Noise2Noise    | Clean image + Gaussian noise_A | Clean image + Gaussian noise_B |   Denoised image    |  Encoder-Decoder/U-net  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9788914761692258,
        0.9706028454607681
      ],
      "excerpt": "| Canon 5D ISO = 3200   | 37.79 | 37.72     | 38.75     | 38.37     | 40.83 | \n|                       | 34.34 | 35.26     | 35.57     | 35.37     | 36.65 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8968592401678916,
        0.8906174419333412,
        0.9278824608274014
      ],
      "excerpt": "|                       | 34.33 | 34.32     | 36.78 | 35.95     | 35.88     | \n|                       | 35.75 | 38.57     | 39.30     | 40.51     | 41.19 | \n| Nikon D800 ISO= 1600  | 36.15 | 38.18     | 38.02     | 37.99     | 38.39 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799411683948944
      ],
      "excerpt": "|                       | 35.47 | 38.44 | 38.19     | 38.30     | 37.99     | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9321597499656605
      ],
      "excerpt": "|                       | 33.43 | 35.72     | 35.71     | 36.75 | 35.59     | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537267708315463,
        0.9702105236373249
      ],
      "excerpt": "|                       | 30.33 | 32.57     | 32.75     | 33.21     | 33.38 | \n|                       | 30.21 | 32.86     | 32.88     | 33.22 | 33.02     | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShaofengZou/A-CNN-Based-Blind-Denoising-Method",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-11T13:08:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-21T03:16:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9834131451065721,
        0.9358053580006238,
        0.983748493118998,
        0.9700697738779529
      ],
      "excerpt": "Official implementation of the BioCAS 2019 paper: A CNN-Based Blind Denoising Method for Endoscopic Images \nPytorch implementation of blind denoising network and keras implementation of  blind image quality assessment network. \nFor blind denoising, we optimize the Deep Image Prior method by transfer learning to reduce the number of iteration.  \nTo determine the quality of reconstructed image, the blind image assessment network based on MobileNet is presented to estimate the scores of image quality. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9337377176842464
      ],
      "excerpt": "Use the method of deep image prior to reconstruct one image will cost about 15 minutes with 3000 iteration.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Denoising method based on Deep Image Prior and Neural Image Assessment",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShaofengZou/A-CNN-Based-Blind-Denoising-Method/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 11 Dec 2021 20:30:35 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShaofengZou/A-CNN-Based-Blind-Denoising-Method/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShaofengZou/A-CNN-Based-Blind-Denoising-Method",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8770499177384571
      ],
      "excerpt": "So you can simply download the reconstructed images from here or here and then update the dataset. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8620648902446378
      ],
      "excerpt": "python run_BDN.py   --dataset_real_path dataset/CC/real/ \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620648902446378
      ],
      "excerpt": "python run_BDN.py   --dataset_real_path dataset/PolyU/real/ \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.921108411272225,
        0.8193357609272297,
        0.921108411272225
      ],
      "excerpt": "python generator_dataset.py  --dataset_path dataset/PolyU_Mulit_UN_GN \\ \n\u200b                                                     --output_path dataset/PolyU_Mulit_UN_GN_PNSR.txt \npython train_BIQAN.py   --dataset_image_path dataset/PolyU_Mulit_UN_GN \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8303324606630167
      ],
      "excerpt": "\u200b                                         --output_path result/PolyU_Mulit_UN_GN \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8232913566983248,
        0.921108411272225
      ],
      "excerpt": "You can download the trained model from here or here \npython test_BIQAN.py --dataset_image_path dataset/CC_Resume_All32 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8303324606630167
      ],
      "excerpt": "\u200b                                      --output_path result/CC_Resume_All32 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8789474737893581
      ],
      "excerpt": "<img src=\"result\\PolyU_Mulit_UN_GN\\first stage.png\" alt=\"first stage\" style=\"zoom: 80%;\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8522765047529636
      ],
      "excerpt": "|  |  | <img src=\"README/d800_iso1600_2_BIQAN.png\" alt=\"c\" style=\"zoom:100%;\" /> | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8409650407112053
      ],
      "excerpt": "| Nikon D800 ISO = 3200 | 34.00 | 38.22     | 38.05     | 39.01     | 39.76 | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShaofengZou/A-CNN-Based-Blind-Denoising-Method/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "A CNN-Based Blind Denoising Method",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "A-CNN-Based-Blind-Denoising-Method",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShaofengZou",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShaofengZou/A-CNN-Based-Blind-Denoising-Method/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* torch (1.0.1.post2)\n* tensorflow (1.12.0)\n* keras (2.1.6)\n* numpy\n* matplotlib\n* skimage\n* opencv-python\n* pandas\n\nRun on ubuntu 16.04, python3.5, CUDA 9.0, cuDNN 7.5 with 8 Nvidia TITAN Xp  GPUs.\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sat, 11 Dec 2021 20:30:35 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "blind-denoising",
      "image-quality-assessment",
      "cnn-keras"
    ],
    "technique": "GitHub API"
  }
}