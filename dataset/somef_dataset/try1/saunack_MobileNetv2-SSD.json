{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Mobilenetv2: https://arxiv.org/pdf/1801.04381.pdf\n* SSD: https://arxiv.org/pdf/1512.02325.pdf\n* Code:https://github.com/pierluigiferrari/ssd_keras and https://github.com/rs9899/mySSDimplementation/ \n* Blogs: https://machinethink.net/blog/object-detection/ and https://lambdalabs.com/blog/how-to-implement-ssd-object-detection-in-tensorflow/ \n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/saunack/MobileNetv2-SSD",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-22T13:18:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-01T06:22:57Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9713525348411941
      ],
      "excerpt": "An end-to-end implementation of the MobileNetv2+SSD architecture in Keras from scratch for learning purposes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An end-to-end implementation of the MobileNetv2+SSD architecture in Keras from sratch for learning purposes. The dataset is prepared using MNIST images: MNIST images are embedded into a box and the model detects bounding boxes for the numbers and the numbers.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/saunack/MobileNetv2-SSD/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sat, 11 Dec 2021 00:38:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/saunack/MobileNetv2-SSD/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "saunack/MobileNetv2-SSD",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/saunack/MobileNetv2-SSD/master/model.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/saunack/MobileNetv2-SSD/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNetv2-SSD",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNetv2-SSD",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "saunack",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/saunack/MobileNetv2-SSD/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Sat, 11 Dec 2021 00:38:24 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The python notebook lists all the code required for running the model. The code is commented for ease of understanding and also highlights some key points which need to be taken care of while creating the model.<br>\nThe model is supposed to predict the bounding boxes for a digit embedded in the image as well as a confidence score for the digit inside the bounding box.\n\n",
      "technique": "Header extraction"
    }
  ]
}