{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Zhang, H., Wu, C., Zhang, Z., Zhu, Y., Zhang, Z., Lin, H., Sun, Y., He, T., Muller, J., Manmatha, R., Li, M., & Smola, A. (2020). ResNeSt: Split-Attention NetworksarXiv preprint arXiv:2004.08955.\n- Buslaev, A., Iglovikov, V., Khvedchenya, E., Parinov, A., Druzhinin, M., & Kalinin, A. (2020). Albumentations: Fast and Flexible Image AugmentationsInformation, 11(2).\n- Falcon, W. (2019). PyTorch LightningGitHub. Note: https://github.com/PyTorchLightning/pytorch-lightning Cited by, 3.\n***\n***\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.08955",
      "https://arxiv.org/abs/2004.08955.\n- Buslaev, A., Iglovikov, V., Khvedchenya, E., Parinov, A., Druzhinin, M., & Kalinin, A. (2020). Albumentations: Fast and Flexible Image AugmentationsInformation, 11(2).\n- Falcon, W. (2019). PyTorch LightningGitHub. Note: https://github.com/PyTorchLightning/pytorch-lightning Cited by, 3.\n***\n***"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8419913200918888
      ],
      "excerpt": "The CNN used is a resnest50_fast_4s1x64d variant of ResNeSt family of CNNs published in ResNeSt: Split-Attention Networks by Hang Zhang et al. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thepooons/melanoma-comp-2020",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-20T07:50:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-19T10:15:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9949131298175832,
        0.9101741238247772,
        0.967486422117107
      ],
      "excerpt": "This repository houses the code for a streamlit powered web app (capable of running on an AWS t2.micro EC2 instance) backed with a CNN fine-tuned on the SIIM ISIC Melanoma Classification Competition data. \nNote: Training code is NOT available in this repository. \nThe CNN used is a resnest50_fast_4s1x64d variant of ResNeSt family of CNNs published in ResNeSt: Split-Attention Networks by Hang Zhang et al. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9771427910306912,
        0.9807103143737099,
        0.9259021312521482
      ],
      "excerpt": "The network is trained on two thirds of the ISIC 2020 JPEG images and all the JPEG images of ISIC 2019 (and 2018) resized to 128*128 sq. pixels for 15 epochs with a batch size of 256. \nThe model reaches a validation AUC (calculated on the third part of ISIC 2020 data dropped from train set) of 0.8892 with single inference and 0.9010 with Test Time Augmentations. \nProviding better model weights is WIP. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository houses the code for a streamlit powered web app (capable of running on an AWS `t2.micro` EC2 instance) backed with a CNN fine-tuned on the SIIM ISIC Melanoma Classification Competition data.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thepooons/melanoma-comp-2020/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 06 Dec 2021 22:31:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/thepooons/melanoma-comp-2020/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "thepooons/melanoma-comp-2020",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9222865718619747
      ],
      "excerpt": "The network is trained on an NVIDIA P100 TENSOR CORE GPU provided by Kaggle in the GPU accelerator version of Kaggle Kernels, however the weight tensors are converted from cuda tensors to CPU tenesors to allow for inferring on machines without a GPU. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/thepooons/melanoma-comp-2020/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Melanoma Classification Web App",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "melanoma-comp-2020",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "thepooons",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thepooons/melanoma-comp-2020/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 06 Dec 2021 22:31:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "resnest",
      "cnn",
      "melanoma",
      "classification",
      "streamlit",
      "webapp"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Follow same steps to run the web app on a cloud vm.\n- `git clone` this repository.\n- [optional but recommended] Set up a virtual environement.\n- Run `pip install -r requiments.txt` to install all* the python libraries.    \n    - *`opencv-python` needs to be installed using [these](https://docs.opencv.org/master/d2/de6/tutorial_py_setup_in_ubuntu.html) steps.\n- Download the weights of the Neural Network from [here](https://drive.google.com/file/d/1M6w0WOjm1nLkDxl43_iwvIM-lVtfJPD_/view?usp=sharing). \n- Run `streamlit run app.py <path/of/the/weights_file(.ckpt)>` in the system CLI.\n- In a web browser of choice, open `localhost:8501`.  \n\n",
      "technique": "Header extraction"
    }
  ]
}