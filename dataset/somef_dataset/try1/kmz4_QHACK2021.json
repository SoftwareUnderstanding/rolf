{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    De Wynter (2020) \"An Approximation Algorithm for Optimal Subarchitecture Extraction\" \n    [arxiv.org/abs/2010.08512]\n    De Wynter and Perry (2020) \"Optimal Subarchitecture Extraction for BERT\" \n    [arxiv.org/abs/2010.10499]\n\n_this module was developed as part of QHACK 2021_\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kmz4/QHACK2021",
    "technique": "GitHub API"
  },
  "contributor": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Jelena Mackeprang \n* Roeland Wiersema\n* Aroosa Ijaz\n* Kathleen Hamilton\n* Yash Chitgopekar\n\nDetermining the optimal quantum circuit structure for a parameterized model that will be trained as a quantum circuit classifier.  Heuristic ansatz design involves searching over a large parameter space including: depth, number of qubits, entangler layer design, initialization, optimizer choice (and associated hyperparameters), embedding..\n\nSince running exponentially large circuits are liable to run into barren plateau problems, there is a need for fast searching over circuit structures coupled with intialization choices.\n\nQOSE is a version of OSE (optimal subarchitecture extraction) that is an adaptation of the FPTAS algorithm introduced in arxiv.org/abs/2010.08512 for parameterized quantum circuits and written using PennyLane. \n\nDocumentation can be found [here](https://kmz4.github.io/QHACK2021/).\n\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-22T21:50:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-26T22:38:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code repo for QOSE: a Python library for Quantum Optimal Subarchitecture Extraction",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kmz4/QHACK2021/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 10 Dec 2021 10:28:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kmz4/QHACK2021/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kmz4/QHACK2021",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/kmz4/QHACK2021/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/demos/QOSE_demo_parallel.ipynb",
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/demos/QOSE_demo.ipynb",
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/demos/QOSE_different_embeddings.ipynb",
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/demos/braket-parallel-test%20copy.ipynb",
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/qose/.ipynb_checkpoints/braket-parallel-test-checkpoint.ipynb",
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/qose/.ipynb_checkpoints/braket-parallel-test%20copy-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kmz4/QHACK2021/main/run_docs.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ngit clone <this repo>\ncd QHACK2021\npython setup.py install\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kmz4/QHACK2021/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 kmz4\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "QOSE (Quantum Optimal Subarchitecture Extraction)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "QHACK2021",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kmz4",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kmz4/QHACK2021/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 10 Dec 2021 10:28:43 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For basic functionality of QOSE\n[QOSE: Finding the optimal circuit architecture](demos/QOSE_demo.ipynb)\n\nFor exploring the effects of different embedding methods\n[QOSE: Different Embeddings](demos/QOSE_different_embeddings.ipynb)\n\nFor a demonstration of parallelized execution \n[QOSE: MPI and SV1 parallelization on AWS](demos/QOSE_demo_parallel.ipynb)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}