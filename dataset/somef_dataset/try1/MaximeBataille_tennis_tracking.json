{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* To track a tennis ball : Y.-C. Huang, I.-N. Liao, C.-H. Chen, T.-U. Ik, W.-C. Peng, \u201cTrackNet: A Deep Learning Network for Tracking High-speed and Tiny Objects in Sport Applications\u201d, Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining KDD \u201819, https://arxiv.org/pdf/1907.03698.pdf\n* TrackNet on github : https://github.com/nyck33/TrackNetMirror\n* To detect players with Yolov3 : Joseph Redmon, Ali Farhadi, \"YOLOv3: An Incremental Improvement\", University of Washington, https://arxiv.org/pdf/1804.02767.pdf\n* To track players : Alex Bewley, Zongyuan Ge, Lionel Ott, Fabio Ramos, Ben Upcrof, \"Simple Online and Realtime Tracking\", Queensland University of Technology, University of Sydney, https://arxiv.org/pdf/1602.00763.pdf\n* SORT algorithm on github, https://github.com/abewley/sort\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MaximeBataille/tennis_tracking",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-04T17:06:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-21T16:02:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9936578552747068
      ],
      "excerpt": "The goal of this project is : \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910413840690719,
        0.9699413527584995,
        0.9906822321384117
      ],
      "excerpt": "- to detect and track the ball. \n- to project the location of players in a bird eye view \nMore generally, this tool is an introduction to a more developed tool that would allow the analysis of tennis matches thanks to tracking data (distances covered, ball bounce zone, etc..). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073286443018435
      ],
      "excerpt": "court.py : Function to display the contours of the court on video tracking. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8549958352605196
      ],
      "excerpt": "predict_video.py : To track players and the ball. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MaximeBataille/tennis_tracking/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Thu, 09 Dec 2021 20:24:01 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MaximeBataille/tennis_tracking/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MaximeBataille/tennis_tracking",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Download yolov3 weights here https://pjreddie.com/darknet/yolo/ (YOLOV3-320, 45 FPS) and add it to Yolov3 directory. (This file is too heavy to push on github). Name this file yolov3.weights .\n\nThe best way to run predict_video.py is on google colab, which has a GPU.  I was unable to configure opencv to use the GPU on google colab. So the player detection part is not faster. The ball detection is. Any help is welcome to achieve this. This link could be useful https://towardsdatascience.com/how-to-use-opencv-with-gpu-on-colab-25594379945f .\n \n1. Clone the repo.\n```sh\ngit clone https://github.com/MaximeBataille/tennis_tracking\n```\n\n2. Put the all the repo on a Google Drive.\n\n3. Run predict_video.py to obtain a tracking video. (Google colab)\n```sh\n!python3 \"predict_video.py\"  --save_weights_path=\"weights_tracknet/model.1\" --input_video_path=\"/VideoInput/video_cut.mp4\" --output_video_path=\"/VideoOutput/video_output.avi\" --n_classes=256 --path_yolo_classes=\"/yolov3/yolov3.txt\" --path_yolo_weights=\"/yolov3/yolov3.weights\" --path_yolo_config=\"/yolov3/yolov3.cfg\"\n```\n\n4. Run generate_bird_eye_view.py to obtain a bird eye view. (Google colab)\n```sh\n!python3 \"generate_bird_eye_view.py\"\n```\n\n5. The generated videos are in the VideoOutput directory.\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9143800438294397
      ],
      "excerpt": "  <img src=\"demo.PNG\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810543929216607
      ],
      "excerpt": "predict_video.py : To track players and the ball. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MaximeBataille/tennis_tracking/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Track tennis players and the ball",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tennis_tracking",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MaximeBataille",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MaximeBataille/tennis_tracking/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 38,
      "date": "Thu, 09 Dec 2021 20:24:01 GMT"
    },
    "technique": "GitHub API"
  }
}