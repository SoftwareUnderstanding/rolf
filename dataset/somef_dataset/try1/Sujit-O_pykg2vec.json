{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.08098",
      "https://arxiv.org/abs/1906.04239"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please kindly consider citing our paper if you find pykg2vec useful for your research. \n```\n  @article{yu2019pykg2vec,\n  title={Pykg2vec: A Python Library for Knowledge Graph Embedding},\n  author={Yu, Shih Yuan and Rokka Chhetri, Sujit and Canedo, Arquimedes and Goyal, Palash and Faruque, Mohammad Abdullah Al},\n  journal={arXiv preprint arXiv:1906.04239},\n  year={2019}\n  }\n```\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sujit-O/pykg2vec",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to pykg2vec\nWe feel humbled that you have decided to contribute to the pykg2vec repository. Thank you! Please read the following guidelines to checkout how you can contribute.  \nTable Of Contents\n\nReporting Bugs\nSuggesting Enhancements\nAdding Algorithm\nAdding Evaluation Metric\nCsource for Python Modules\nAdding Dataset Source\n\nSuggesting Enhancements\nIf you have any suggestion for enhancing any of the modules please send us an enhancement using the issue template.\nAdding Algorithm\nWe are continually striving to add the state-of-the-art algorithms in the library. If you want to suggest adding any algorithm or add your algoirithm to the library, please follow the following steps:\n\nMake sure the generator is able to produce the batches\nMake sure to follow the class structure presented in pykg2vec/core/KGMeta.py\n\nAdding Evaluation Metric\nWe are always eager to add more evaluation metrics for link prediction, triple classification, and so on. You may create a new evaluation process in pykg2vec/utils/evaluation.py to add the metric.\nCsource for Python Modules\nAlthough we use Tensorflow for running the main modules, there are many alforithms written in pure python. We invite you to contibute by converting the python source code to more efficient C or C++ codes. \nAdding Dataset Source\nWe encourage you to add your own dataset links. Currenlty the pykg2vec/config/global_config.py handles the datasets, how to extract them and generate the training, testing and validation triples.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-06T23:06:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T11:04:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9982809847801906,
        0.9541386893713254
      ],
      "excerpt": "Pykg2vec is a library for learning the representation of entities and relations in Knowledge Graphs built on top of PyTorch 1.5 (TF2 version is available in tf-master branch as well). We have attempted to bring state-of-the-art Knowledge Graph Embedding (KGE) algorithms and the necessary building blocks in the pipeline of knowledge graph embedding task into a single library. We hope Pykg2vec is both practical and educational for people who want to explore the related fields.   \n* Support state-of-the-art KGE model implementations and benchmark datasets. (also support custom datasets) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9845415317733288
      ],
      "excerpt": "* Tools for inspecting the learned embeddings.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Python library for knowledge graph embedding and representation learning.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The documentation is [here](https://pykg2vec.readthedocs.io/). \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://pykg2vec.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sujit-O/pykg2vec/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 90,
      "date": "Tue, 07 Dec 2021 20:42:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Sujit-O/pykg2vec/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sujit-O/pykg2vec",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Sujit-O/pykg2vec/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Sujit-O/pykg2vec/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 louisccc\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pykg2vec: Python Library for KGE Methods",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pykg2vec",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sujit-O",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Sujit-O/pykg2vec/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "louisccc",
        "body": "1) revised user documentation.\r\n2) add more algorithms. now, pykg2vec has 25 algorithms.\r\n3) usability improvement (pykg2vec-train/-tune/-infer) \r\n4) minor fixes.",
        "dateCreated": "2020-12-14T19:38:52Z",
        "datePublished": "2020-12-23T04:48:12Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.52",
        "name": "Milestone v0.0.52",
        "tag_name": "v0.0.52",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.52",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/35643425",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.52"
      },
      {
        "authorType": "User",
        "author_name": "louisccc",
        "body": "More Algorithms added (Analogy, SimplE, CP).\r\nMinor bug fixes.",
        "dateCreated": "2020-04-21T01:05:43Z",
        "datePublished": "2020-04-21T01:18:35Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.51",
        "name": "Milestone v0.0.51",
        "tag_name": "v0.0.51",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.51",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/25704356",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.51"
      },
      {
        "authorType": "User",
        "author_name": "louisccc",
        "body": "Fix bugs regarding link prediction metrics and algorithms. \r\n\r\nadding '-exp' for train.py to test benchmark dataset (fb15k) with best hyperparameter settings. \r\n\r\nallowing a more flexible search space specifications for tune_model.py. ",
        "dateCreated": "2020-03-03T19:29:55Z",
        "datePublished": "2020-03-03T19:31:54Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v.0.0.50",
        "name": "Milestone v.0.0.50 ",
        "tag_name": "v.0.0.50",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v.0.0.50",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/24119087",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v.0.0.50"
      },
      {
        "authorType": "User",
        "author_name": "Sujit-O",
        "body": "Added inference, support for custom dataset, fixed minor bugs.",
        "dateCreated": "2019-08-15T05:13:40Z",
        "datePublished": "2019-08-15T05:17:52Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.49",
        "name": "Milestone 0.0.49",
        "tag_name": "v0.0.49",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.49",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/19304299",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.49"
      },
      {
        "authorType": "User",
        "author_name": "Sujit-O",
        "body": "Handled all the major issues and bugs.",
        "dateCreated": "2019-07-02T00:48:52Z",
        "datePublished": "2019-07-02T23:46:34Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.48",
        "name": "Milestone 0.0.48 achieved",
        "tag_name": "v0.0.48",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.48",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/18374408",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.48"
      },
      {
        "authorType": "User",
        "author_name": "Sujit-O",
        "body": "Major update with the detailed API documentation.",
        "dateCreated": "2019-06-14T23:43:27Z",
        "datePublished": "2019-06-17T03:19:15Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.46",
        "name": "API Documentation",
        "tag_name": "v0.0.46",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.46",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/18026909",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.46"
      },
      {
        "authorType": "User",
        "author_name": "Sujit-O",
        "body": "The first release with major bugs fixed!",
        "dateCreated": "2019-05-30T21:58:45Z",
        "datePublished": "2019-05-31T02:36:23Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.45",
        "name": "First-Release",
        "tag_name": "v0.0.45",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.45",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/17695874",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.45"
      },
      {
        "authorType": "User",
        "author_name": "Sujit-O",
        "body": "This is the first pre-release of pykg2vec. ",
        "dateCreated": "2019-05-23T23:44:35Z",
        "datePublished": "2019-05-23T23:51:04Z",
        "html_url": "https://github.com/Sujit-O/pykg2vec/releases/tag/v0.0.44",
        "name": "First pre-release of pykg2vec!",
        "tag_name": "v0.0.44",
        "tarball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/tarball/v0.0.44",
        "url": "https://api.github.com/repos/Sujit-O/pykg2vec/releases/17558204",
        "zipball_url": "https://api.github.com/repos/Sujit-O/pykg2vec/zipball/v0.0.44"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 400,
      "date": "Tue, 07 Dec 2021 20:42:24 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "knowledge-graph",
      "embedding-models",
      "embedding-python",
      "representation-learning"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Before using pykg2vec, we recommend users to have the following libraries installed:\n* python >=3.7 (recommended)\n* pytorch>= 1.5\n\nQuick Guide for Anaconda users:\n\n* Setup a Virtual Environment: we encourage you to use anaconda to work with pykg2vec:\n```bash\n(base) $ conda create --name pykg2vec python=3.7\n(base) $ conda activate pykg2vec\n```\n* Setup Pytorch: we encourage to use pytorch with GPU support for good training performance. However, a CPU version also runs. The following sample commands are for setting up pytorch:\n\n```bash\n#: if you have a GPU with CUDA 10.1 installed\n(pykg2vec) $ conda install pytorch torchvision cudatoolkit=10.1 -c pytorch\n#: or cpu-only\n(pykg2vec) $ conda install pytorch torchvision cpuonly -c pytorch\n```\n\n* Setup Pykg2vec:\n```bash\n(pykg2vec) $ git clone https://github.com/Sujit-O/pykg2vec.git\n(pykg2vec) $ cd pykg2vec\n(pykg2vec) $ python setup.py install\n```\n\nFor beginners, these papers, [A Review of Relational Machine Learning for Knowledge Graphs](https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7358050), [Knowledge Graph Embedding: A Survey of Approaches and Applications](https://ieeexplore.ieee.org/document/8047276), and [An overview of embedding models of entities and relationships for knowledge base completion](https://arxiv.org/abs/1703.08098) can be good starting points!\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "With pykg2vec command-line interface, you can\n1. Run a single algorithm with various models and datasets (customized dataset also supported).\n    ```\n    #: Check all tunnable parameters.\n    (pykg2vec) $ pykg2vec-train -h\n\n    #: Train TransE on FB15k benchmark dataset.\n    (pykg2vec) $ pykg2vec-train -mn TransE\n\n    #: Train using different KGE methods.\n    (pykg2vec) $ pykg2vec-train -mn [TransE|TransD|TransH|TransG|TransM|TransR|Complex|ComplexN3|\n                        CP|RotatE|Analogy|DistMult|KG2E|KG2E_EL|NTN|Rescal|SLM|SME|SME_BL|HoLE|\n                        ConvE|ConvKB|Proje_pointwise|MuRP|QuatE|OctonionE|InteractE|HypER]\n\n    #: For KGE using projection-based loss function, use more processes for batch generation.\n    (pykg2vec) $ pykg2vec-train -mn [ConvE|ConvKB|Proje_pointwise] -npg [the number of processes, 4 or 6]\n\n    #: Train TransE model using different benchmark datasets.\n    (pykg2vec) $ pykg2vec-train -mn TransE -ds [fb15k|wn18|wn18_rr|yago3_10|fb15k_237|ks|nations|umls|dl50a|nell_955]\n\n    #: Train TransE model using your own hyperparameters.\n    (pykg2vec) $ pykg2vec-train -exp True -mn TransE -ds fb15k -hpf ./examples/custom_hp.yaml\n\n    #: Use your own dataset\n    (pykg2vec) $ pykg2vec-train -mn TransE -ds [name] -dsp [path to the custom dataset]\n    ```\n2. Tune a single algorithm.\n    ```\n    #: Tune TransE using the benchmark dataset.\n    (pykg2vec) $ pykg2vec-tune -mn [TransE] -ds [dataset name]\n\n    #: Tune TransE with your own search space\n    (pykg2vec) $ pykg2vec-tune -exp True -mn TransE -ds fb15k -ssf ./examples/custom_ss.yaml\n    ```\n3. Perform Inference Tasks (more advanced).\n    ```\n    #: Train a model and perform inference tasks.\n    (pykg2vec) $ pykg2vec-infer -mn TransE\n\n    #: Perform inference tasks over a pretrained model.\n    (pykg2vec) $ pykg2vec-infer -mn TransE -ld [path to the pretrained model]\n    ```\n\\* NB: On Windows, use `pykg2vec-train.exe`, `pykg2vec-tune.exe` and `pykg2vec-infer.exe` instead.\n\nFor more usage of pykg2vec APIs, please check the [programming examples](https://pykg2vec.readthedocs.io/en/latest/auto_examples/index.html).\n\n",
      "technique": "Header extraction"
    }
  ]
}