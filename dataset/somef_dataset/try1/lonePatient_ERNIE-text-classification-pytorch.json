{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.09223v1\r\n\r\n## Structure of the code\r\n\r\nAt the root of the project, you will see:\r\n\r\n```text\r\n\u251c\u2500\u2500 pyernie\r\n|  \u2514\u2500\u2500 callback\r\n|  |  \u2514\u2500\u2500 lrscheduler.py\u3000\u3000\r\n|  |  \u2514\u2500\u2500 trainingmonitor.py\u3000\r\n|  |  \u2514\u2500\u2500 ...\r\n|  \u2514\u2500\u2500 config\r\n|  |  \u2514\u2500\u2500 basic_config.py #a configuration file for storing model parameters\r\n|  \u2514\u2500\u2500 dataset\u3000\u3000\u3000\r\n|  \u2514\u2500\u2500 io\u3000\u3000\u3000\u3000\r\n|  |  \u2514\u2500\u2500 dataset.py\u3000\u3000\r\n|  |  \u2514\u2500\u2500 data_transformer.py\u3000\u3000\r\n|  \u2514\u2500\u2500 model\r\n|  |  \u2514\u2500\u2500 nn\u3000\r\n|  |  \u2514\u2500\u2500 pretrain\u3000\r\n|  \u2514\u2500\u2500 output #save the ouput of model\r\n|  \u2514\u2500\u2500 preprocessing #text preprocessing \r\n|  \u2514\u2500\u2500 train #used for training a model\r\n|  |  \u2514\u2500\u2500 trainer.py \r\n|  |  \u2514\u2500\u2500 ...\r\n|  \u2514\u2500\u2500 utils # a set of utility functions\r\n\u251c\u2500\u2500 convert_ernie_to_pytorch.py\r\n\u251c\u2500\u2500 fine_tune_ernie.py\r\n```\r\n## Dependencies\r\n\r\n- csv\r\n- tqdm\r\n- numpy\r\n- pickle\r\n- scikit-learn\r\n- PyTorch 1.0\r\n- matplotlib\r\n- tensorboardX\r\n- Tensorflow (to be able to run TensorboardX"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9995991827938789
      ],
      "excerpt": "arxiv: https://arxiv.org/abs/1904.09223v1 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lonePatient/ERNIE-text-classification-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-18T16:33:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-22T07:21:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.983810348415787
      ],
      "excerpt": "This repo contains a PyTorch implementation of a pretrained ERNIE model  for text classification. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9652771208610523
      ],
      "excerpt": "At the root of the project, you will see: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "|  \u2514\u2500\u2500 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8596982069667689
      ],
      "excerpt": "|  \u2514\u2500\u2500 output #:save the ouput of model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.974376041305329,
        0.9528725823047942
      ],
      "excerpt": "When converting the tensorflow checkpoint into the pytorch, it's expected to choice the \"bert_model.ckpt\", instead of \"bert_model.ckpt.index\", as the input file. Otherwise, you will see that the model can learn nothing and give almost same random outputs for any inputs. This means, in fact, you have not loaded the true ckpt for your model \nWhen using multiple GPUs, the non-tensor calculations, such as accuracy and f1_score, are not supported by DataParallel instance \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repo contains a PyTorch implementation of a pretrained ERNIE model  for text classification.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lonePatient/ERNIE-text-classification-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Wed, 08 Dec 2021 08:45:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lonePatient/ERNIE-text-classification-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lonePatient/ERNIE-text-classification-pytorch",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "|  |  \u2514\u2500\u2500 lrscheduler.py\u3000\u3000 \n|  |  \u2514\u2500\u2500 trainingmonitor.py\u3000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8369245672576114
      ],
      "excerpt": "|  |  \u2514\u2500\u2500 basic_config.py #:a configuration file for storing model parameters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9152750849795331,
        0.9336801098518991
      ],
      "excerpt": "|  |  \u2514\u2500\u2500 dataset.py\u3000\u3000 \n|  |  \u2514\u2500\u2500 data_transformer.py\u3000\u3000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8277380791614312
      ],
      "excerpt": "|  \u2514\u2500\u2500 output #:save the ouput of model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8653523522410159,
        0.828520898273279
      ],
      "excerpt": "|  \u2514\u2500\u2500 train #:used for training a model \n|  |  \u2514\u2500\u2500 trainer.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8197328191806175,
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "|  \u2514\u2500\u2500 utils #: a set of utility functions \n\u251c\u2500\u2500 convert_ernie_to_pytorch.py \n\u251c\u2500\u2500 fine_tune_ernie.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853492186136904
      ],
      "excerpt": "| avg / total |   0.98    |  0.98  |   0.98   |  15000  | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lonePatient/ERNIE-text-classification-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ERNIE text classification by PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ERNIE-text-classification-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lonePatient",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lonePatient/ERNIE-text-classification-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n- csv\r\n- tqdm\r\n- numpy\r\n- pickle\r\n- scikit-learn\r\n- PyTorch 1.0\r\n- matplotlib\r\n- tensorboardX\r\n- Tensorflow (to be able to run TensorboardX)\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 47,
      "date": "Wed, 08 Dec 2021 08:45:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "ernie",
      "text-classification",
      "pytorch",
      "chinese-text-classification",
      "python3",
      "bert"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nyou need download pretrained ERNIE model\r\n\r\n1. Download the  pretrained ERNIE model from [baiduPan](https://pan.baidu.com/s/1BQlwbc9PZjAoVB7Kfq_Ihg) {password: uwds} and place it into the `/pyernie/model/pretrain` directory.\r\n\r\n2. prepare Chinese raw data(example,news data), you can modify the `io.data_transformer.py` to adapt your data.\r\n\r\n3. Modify configuration information in `pyernie/config/basic_config.py`(the path of data,...).\r\n\r\n4. run `fine_tune_ernie.py`.\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}