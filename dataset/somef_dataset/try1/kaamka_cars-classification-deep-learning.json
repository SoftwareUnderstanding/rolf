{
  "citation": [
    {
      "confidence": [
        0.9723894381223213
      ],
      "excerpt": "[[('Tesla Model S Sedan 2012', 0.99994814), ('Aston Martin V8 Vantage Coupe 2012', 9.0942467e-06), ('Hyundai Veloster Hatchback 2012', 6.253455e-06), ('Volkswagen Golf Hatchback 2012', 3.5931739e-06), ('Acura ZDX Hatchback 2012',2.7549402e-06)]] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9321597499656605
      ],
      "excerpt": "[[('Audi S4 Sedan 2012', 0.88584036), ('Audi A5 Coupe 2012', 0.11131641), ('Audi TTS Coupe 2012', 0.0016650328), ('Audi S6 Sedan 2011', 0.00045785238), ('Audi S4Sedan 2007', 8.3126331e-05)]] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9982563384206103
      ],
      "excerpt": "[1] Rethinking the Inception Architecture for Computer Vision -  https://arxiv.org/pdf/1512.00567v1.pdf \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kaamka/cars-classification-deep-learning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-02T07:13:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-27T12:13:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9848330014263581,
        0.9971142967458558,
        0.8896633648984065,
        0.9958913888842762
      ],
      "excerpt": "IntelliGate project is aimed to create a system for an entrance gate which is able to fully recognize an approaching car. Car recognition involves recognition of a make and model of a car exploiting its shape (1), company logo recognition (2) reading and interpretation of number plate of a car. (3). \nThis repository contains files and description concerning the (1) part of the project: recognition of a make and model of a car. \nThe classification algorithm was created by transfer learning and fine-tuning Inception-v3 network [1] [2] with Cars Dataset from Stanford [3]. Keras implementation of Inception-v3 was used [4]. \nFinal model is able to recognize 195 different classes of cars with overall accuracy of 81%.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "[[('Tesla Model S Sedan 2012', 0.99994814), ('Aston Martin V8 Vantage Coupe 2012', 9.0942467e-06), ('Hyundai Veloster Hatchback 2012', 6.253455e-06), ('Volkswagen Golf Hatchback 2012', 3.5931739e-06), ('Acura ZDX Hatchback 2012',2.7549402e-06)]] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8977042047396643
      ],
      "excerpt": "There is also  version for Jupyer Notebook. There are similar options of usage. Examples: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8098180447559568
      ],
      "excerpt": "Check paths that are hardcoded inside the script, which leads to: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9523581145772294
      ],
      "excerpt": "The folder with results (weights, structure of model, plots of accuracy in the function of epochs etc) will be automatically saved inside the folder saved_models/xxxxxxxx_xxxx. (xxxxxxxx_xxxx - the data and hour of starting the training). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8688221762783563
      ],
      "excerpt": "In order to analyse the results (confusion matrix, accuracy within each of the class and more statistics concerning model performance) use analyse_results.ipynb. Specify the paths: \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kaamka/cars-classification-deep-learning/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sun, 05 Dec 2021 19:23:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kaamka/cars-classification-deep-learning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kaamka/cars-classification-deep-learning",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kaamka/cars-classification-deep-learning/master/analyse_results.ipynb",
      "https://raw.githubusercontent.com/kaamka/cars-classification-deep-learning/master/demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8451115062019297
      ],
      "excerpt": "In order to use a different test dataset that the one which is hardcoded inside the code, specify the path as a last argument: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.804182469722398
      ],
      "excerpt": "Check paths that are hardcoded inside the script, which leads to: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8292068118276977
      ],
      "excerpt": "python3 demo.py 'Tesla Model S Sedan 2012' '../test_imgs/tesla.png' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9027746459563293
      ],
      "excerpt": "python3 demo.py 'Audi A5 Coupe 2012' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9027746459563293
      ],
      "excerpt": "python3 demo.py 'Volkswagen Golf Hatchback 2012' \"../saved_models/BEST_OF_THE_BEST/all_layers_trained_lhcbgpu_inceptionv3_RESIZEDIMGS/20190626_0944\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8574836105279086
      ],
      "excerpt": "Modify the hyperparams.json file in order to adjust hyperparameters and other training settings.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8344933225897895
      ],
      "excerpt": "BATCHSIZE - number of training batch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804227479540484
      ],
      "excerpt": "- file with settings: hyperparams.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804227479540484
      ],
      "excerpt": "- file with settings: hyperparams.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8022571874570745
      ],
      "excerpt": "Example statistics created with analyse_results.ipynb (for BMW 3 Series Sedan 2012): \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kaamka/cars-classification-deep-learning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "cars-classification-deep-learning (IntelliGate project)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cars-classification-deep-learning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kaamka",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kaamka/cars-classification-deep-learning/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In order to use the classification algorithm as well as train a new model with usage of my code, you have to install Python 3.6 and additional packages. For training purposes, a machine with GPU is recommended. \nDependencies:\n\n- [NumPy](http://docs.scipy.org/doc/numpy-1.10.1/user/install.html)\n- [Tensorflow](https://www.tensorflow.org/versions/r0.8/get_started/os_setup.html)\n- [Keras](https://keras.io/#installation)\n- [OpenCV](https://opencv-python-tutroals.readthedocs.io/en/latest/)\n- [Matplotlib](https://matplotlib.org/)\n- [Jupyter Notebook](https://jupyter.org/)\n- [Pillow](https://pypi.org/project/Pillow/2.2.2/)\n- [Scikit-learn](https://scikit-learn.org/stable/)\n- [h5py](https://www.h5py.org/)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\npython3 train.py \n```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sun, 05 Dec 2021 19:23:40 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Download or clone whole repository in order to obtain all necessary files. If you need a dataset - you can download it from [here.](https://drive.google.com/drive/u/1/folders/1KfR5TjGstcA3SEXb2TKkHnoTVIoiCKDG)\nSave it inside the project folder (DATASETS/). \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Use the *demo.py* file in order to test an algorithm. \n\nWarning: the default RESULTS_FOLDER in the code leads to the *cars-classification-deep-learning/saved_models/20190701_1148* which does not contain file with weights. You can download weights from [here](https://drive.google.com/drive/folders/1HXAJUELObpp06H9VGNmopPiBopmHGjkb?usp=sharing) (*weights.best.hdf5*), save it inside results folder (*saved_models/20190701_1148*) and run the *demo.py*. \n\nExample usage:\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The main folder should contain 2 subfolders: train dataset and test dataset. Each of them should contain more subdirectories created due to class (label) names (one subdirectory per class).\nYou can prepare data on your own, using [original Cars Stanford Dataset](https://ai.stanford.edu/~jkrause/cars/car_dataset.html) or use mine (already sorted) - download from [here.](https://ai.stanford.edu/~jkrause/cars/car_dataset.html)\n\nIf you want to modify these images (resize, expand background, transform to grayscale) you can check functions inside the script called *data_preprocessing.py*.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "If you want to use a new dataset, you also need to prepare them: save images inside correct subdirectories.\n\n",
      "technique": "Header extraction"
    }
  ]
}