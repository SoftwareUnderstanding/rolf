{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.10196"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zsef123/PGGAN-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-26T12:12:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-31T07:48:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9677376582103324
      ],
      "excerpt": "PyTorch implementation of PROGRESSIVE GROWING OF GANS FOR IMPROVED QUALITY, STABILITY, AND VARIATION \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch implementation of progressive growing gan",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zsef123/PGGAN-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 08 Dec 2021 23:00:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zsef123/PGGAN-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zsef123/PGGAN-Pytorch",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zsef123/PGGAN-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PGGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PGGAN-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zsef123",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zsef123/PGGAN-Pytorch/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Wed, 08 Dec 2021 23:00:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "deep-learning",
      "gan",
      "pggan"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython3 main.py -h\n\nusage: main.py [-h] [--gpus GPUS] [--cpus CPUS] [--save_dir SAVE_DIR]\n               [--img_num IMG_NUM] [--optim_G {adam,sgd}]\n               [--optim_D {adam,sgd}] [--loss {wgangp,lsgan}]\n               [--start_resl START_RESL] [--end_resl END_RESL]\n               [--beta [BETA [BETA ...]]] [--momentum MOMENTUM]\n               [--decay DECAY] [--gp_lambda GP_LAMBDA]\n\nPGGAN\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --gpus GPUS           Select GPU Numbering | 0,1,2,3 |\n  --cpus CPUS           The number of CPU workers\n  --save_dir SAVE_DIR   Directory which models will be saved in\n  --img_num IMG_NUM     The number of images to be used for each phase\n  --optim_G {adam,sgd}\n  --optim_D {adam,sgd}\n  --loss {wgangp,lsgan}\n  --start_resl START_RESL\n  --end_resl END_RESL\n  --beta [BETA [BETA ...]]\n                        Beta for Adam optimizer\n  --momentum MOMENTUM   Momentum for SGD optimizer\n  --decay DECAY         Weight decay for optimizers\n  --gp_lambda GP_LAMBDA\n                        Lambda as a weight of Gradient Panelty in WGAN-GP loss\n```\n\n<hr>\n\n",
      "technique": "Header extraction"
    }
  ]
}