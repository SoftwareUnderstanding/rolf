{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1705.07750"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PPPrior/i3d-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-13T13:37:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T18:39:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9913929537365431
      ],
      "excerpt": "This is a simple and crude implementation of Inflated 3D ConvNet Models (I3D) in PyTorch. Different from models reported in \"Quo Vadis, Action Recognition? A New Model and the Kinetics Dataset\" by Joao Carreira and Andrew Zisserman, this implementation uses ResNet as backbone. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9807106694552689
      ],
      "excerpt": "This implementation is based on OpenMMLab's MMAction2. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8321795222260002
      ],
      "excerpt": "Please refer to main.py for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8005456490438455
      ],
      "excerpt": "Or for flow models: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "I3D Models in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PPPrior/i3d-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 09 Dec 2021 16:47:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PPPrior/i3d-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "PPPrior/i3d-pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For optical flow extraction and video list generation, please refer to [TSN](https://github.com/yjxiong/temporal-segment-networks#code--data-preparation) for details.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8917518751347289
      ],
      "excerpt": "For example, command to train models with RGB modality on UCF101 can be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8212373302187409
      ],
      "excerpt": "Use the following command to test its performance: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8890818307099057
      ],
      "excerpt": "  <img src=\"QuoVadis.png\" width=\"600px\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8976162394885772,
        0.8317482148354648
      ],
      "excerpt": "To train a new model, use the main.py script. \nFor example, command to train models with RGB modality on UCF101 can be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109413088645443
      ],
      "excerpt": "    --lr 0.001 --lr_steps 15 30 --epochs 40 \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PPPrior/i3d-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "I3D-PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "i3d-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "PPPrior",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PPPrior/i3d-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Thu, 09 Dec 2021 16:47:47 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "i3d",
      "action-recognition"
    ],
    "technique": "GitHub API"
  }
}