{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.08803",
      "https://arxiv.org/abs/1605.08803_\n\nTraining script and hyperparameters designed to match the\nCIFAR-10 experiments described in Section 4.1 of the paper.\n\n\n## Usage\n\n### Environment Setup\n  1. Make sure you have [Anaconda or Miniconda](https://conda.io/docs/download.html)\n  installed.\n  2. Clone repo with `git clone https://github.com/chrischute/real-nvp.git rnvp`.\n  3. Go into the cloned repo: `cd rnvp`.\n  4. Create the environment: `conda env create -f environment.yml`.\n  5. Activate the environment: `source activate rnvp`.\n\n### Train\n  1. Make sure you've created and activated the conda environment as described above.\n  2. Run `python train.py -h` to see options.\n  3. Run `python train.py [FLAGS]` to train. *E.g.,* run\n  `python train.py` for the default configuration, or run\n  `python train.py --gpu_ids=[0,1] --batch_size=128` to run on\n  2 GPUs instead of the default of 1 GPU. \n  4. At the end of each epoch, samples from the model will be saved to\n  `samples/epoch_N.png`, where `N` is the epoch number.\n \nOne epoch takes about 4 minutes when using the default arguments\nand running on an NVIDIA Titan Xp card.\n\n## Samples\n\n### Epoch 5\n\n![Samples at Epoch 5](/samples/epoch_5.png?raw=true \"Samples at Epoch 5\")\n\n\n### Epoch 10\n\n![Samples at Epoch 10](/samples/epoch_10.png?raw=true \"Samples at Epoch 10\")\n\n\n### Epoch 15\n\n![Samples at Epoch 15](/samples/epoch_15.png?raw=true \"Samples at Epoch 15\")\n\n\n### Epoch 20\n\n![Samples at Epoch 20](/samples/epoch_20.png?raw=true \"Samples at Epoch 20\")\n\n\n### Epoch 25\n\n![Samples at Epoch 25](/samples/epoch_25.png?raw=true \"Samples at Epoch 25\")\n\n\n\n## Results\n\n### Bits per Dimension\n\n| Epoch | Train | Valid |\n|-------|-------|-------|\n| 5     | 3.97  | 3.98  |\n| 10    | 3.76  | 3.76  |\n| 15    | 3.69  | 3.74  |\n| 20    | 3.65  | 3.70  |\n| 25    | 3.62  | 3.74  |"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "| 10    | 3.76  | 3.76  | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/P4ppenheimer/NormalizingFlows_rnvp",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-28T20:48:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-08T11:12:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9892338203980946
      ],
      "excerpt": "Implementation of Real NVP in PyTorch. Based on the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8195233876805097
      ],
      "excerpt": "CIFAR-10 experiments described in Section 4.1 of the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9072426933760195,
        0.9292643255469794
      ],
      "excerpt": "  2 GPUs instead of the default of 1 GPU.  \nAt the end of each epoch, samples from the model will be saved to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282366759662164
      ],
      "excerpt": "One epoch takes about 4 minutes when using the default arguments \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/P4ppenheimer/NormalizingFlows_rnvp/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 06 Dec 2021 21:20:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/P4ppenheimer/NormalizingFlows_rnvp/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "P4ppenheimer/NormalizingFlows_rnvp",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  1. Make sure you have [Anaconda or Miniconda](https://conda.io/docs/download.html)\n  installed.\n  2. Clone repo with `git clone https://github.com/chrischute/real-nvp.git rnvp`.\n  3. Go into the cloned repo: `cd rnvp`.\n  4. Create the environment: `conda env create -f environment.yml`.\n  5. Activate the environment: `source activate rnvp`.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9204286958081991
      ],
      "excerpt": "Make sure you've created and activated the conda environment as described above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83045552956247
      ],
      "excerpt": "  python train.py for the default configuration, or run \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.929821633893561,
        0.9427218605829304,
        0.8827130282374717,
        0.938359229208316
      ],
      "excerpt": "Run python train.py -h to see options. \nRun python train.py [FLAGS] to train. E.g., run \n  python train.py for the default configuration, or run \n  python train.py --gpu_ids=[0,1] --batch_size=128 to run on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8084706661572996
      ],
      "excerpt": "  samples/epoch_N.png, where N is the epoch number. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8204641952739528
      ],
      "excerpt": "| Epoch | Train | Valid | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811854372964597
      ],
      "excerpt": "| 15    | 3.69  | 3.74  | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/P4ppenheimer/NormalizingFlows_rnvp/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Real NVP in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "NormalizingFlows_rnvp",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "P4ppenheimer",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/P4ppenheimer/NormalizingFlows_rnvp/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 06 Dec 2021 21:20:47 GMT"
    },
    "technique": "GitHub API"
  }
}