{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1611.07004\r"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AlliBalliBaba/PixFace",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-29T21:37:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-20T04:31:35Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8487502970405576
      ],
      "excerpt": "A small implementation of pix2pix tensorflow by affinelayer (https://github.com/affinelayer/pix2pix-tensorflow), prepared for client-side use in the browser. Pix2pix is a Conditional Adversarial Network, that creates an output image from an input image. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "pix2pix image-to-image translation for faces",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AlliBalliBaba/PixFace-Neural-Network/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 08 Dec 2021 12:19:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AlliBalliBaba/PixFace/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AlliBalliBaba/PixFace",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AlliBalliBaba/PixFace/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "JavaScript",
      "HTML",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# PixFace pix2pix",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PixFace",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AlliBalliBaba",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AlliBalliBaba/PixFace/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Wed, 08 Dec 2021 12:19:04 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nOnce you've finished training your model using affinelayer's **pixpix.py** script, you can use the **export** mode to export only the generator to a new folder:\r\n\r\n```\r\npython pix2pix.py --mode export --output_dir exported_model --input_dir your_model --checkpoint your_model\r\n```\r\n\r\nTo create a .pict file and quantize your model, use the **export-checkpoint.py** script\r\n\r\n```\r\npython tools/export-checkpoint.py --checkpoint exported_model --output_file model.pict\r\n```\r\n\r\nThe default setting for number of filters in the first convolutional layer of your generator (--ngf) and your discriminator (--ndf) is set to 64. When using these settings, the quantized model will be around 50 MB in size and require significant processing power.\r\n\r\nFor simple use in javascript I recommend setting -ngf to 32 or 16 before training, which will result in a final model size of around 13 MB and 3 MB. This will significantly increase the generator's speed, but also reduce the quality of the generated image.\r\n\r\n\r\nOriginal pix2pix paper: https://arxiv.org/abs/1611.07004\r\n",
      "technique": "Header extraction"
    }
  ]
}