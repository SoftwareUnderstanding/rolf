{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.09782 / https://arxiv.org/abs/1606.00704\r\n- Alpha-GAN (VAE + GAN",
      "https://arxiv.org/abs/1606.00704\r\n- Alpha-GAN (VAE + GAN",
      "https://arxiv.org/abs/1706.04987\r\n\r\n## Approach\r\nLeveraging the ability to unsupervisedly learned the structure of data to generate realisitic image, this experiments aims to use that ability to perform binary classification when only trained on one class.\r\n\r\n## Usage\r\nRun `python main.py --help` for full detail.\r\n\r\nExample:\r\n```\r\npython main.py --batch_size 128 --imsize 64 --dataset mura --adv_loss inverse --version sabigan_wrist --image_path ~/datasets/ --use_tensorboard true --mura_class XR_WRIST --mura_type negative\r\n```\r\n\r\n### How:\r\n- Train GAN model with the ability to inference on the latent variable (VAE+GAN / BiGAN"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Thank https://github.com/heykeetae/Self-Attention-GAN for great examples.\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9553176248362617
      ],
      "excerpt": "Article: https://medium.com/vitalify-asia/gan-for-unsupervised-anomaly-detection-on-x-ray-images-6b9f678ca57d \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999582833911902,
        0.9912556242864674
      ],
      "excerpt": "Bidirection GAN / ALI : https://arxiv.org/abs/1605.09782 / https://arxiv.org/abs/1606.00704 \nAlpha-GAN (VAE + GAN): https://arxiv.org/abs/1706.04987 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pavasgdb/Anomaly-detector-using-GAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-02T11:28:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-29T14:14:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9460853940941261,
        0.9075782293126483
      ],
      "excerpt": "Leveraging the ability to unsupervisedly learned the structure of data to generate realisitic image, this experiments aims to use that ability to perform binary classification when only trained on one class. \nTrain GAN model with the ability to inference on the latent variable (VAE+GAN / BiGAN) on only 'negative class' \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pavasgdb/Anomaly-detector-using-GAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 11 Dec 2021 08:51:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pavasgdb/Anomaly-detector-using-GAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pavasgdb/Anomaly-detector-using-GAN",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pavasgdb/Anomaly-detector-using-GAN/master/eval_train_alphaGAN.ipynb",
      "https://raw.githubusercontent.com/pavasgdb/Anomaly-detector-using-GAN/master/eval_train_SaBiGAN.ipynb",
      "https://raw.githubusercontent.com/pavasgdb/Anomaly-detector-using-GAN/master/eval_SaBiGAN.ipynb",
      "https://raw.githubusercontent.com/pavasgdb/Anomaly-detector-using-GAN/master/eval_alphaGAN.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pavasgdb/Anomaly-detector-using-GAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Unsupervised Anomaly Detection using Generative Adversarial Network on medical X-Ray image",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Anomaly-detector-using-GAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pavasgdb",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pavasgdb/Anomaly-detector-using-GAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 11 Dec 2021 08:51:12 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Run `python main.py --help` for full detail.\r\n\r\nExample:\r\n```\r\npython main.py --batch_size 128 --imsize 64 --dataset mura --adv_loss inverse --version sabigan_wrist --image_path ~/datasets/ --use_tensorboard true --mura_class XR_WRIST --mura_type negative\r\n```\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}