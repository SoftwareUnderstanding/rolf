{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Paper on arxiv: [arxiv](https://arxiv.org/abs/2108.10710)\n\n![evaluation](https://raw.githubusercontent.com/fdbtrs/PocketNet/main/logs/tradeoff.png)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Model training:\nIn the paper, we employ MS1MV2 as the training dataset which can be downloaded from InsightFace (MS1M-ArcFace in DataZoo)\nDownload [MS1MV2](https://drive.google.com/file/d/1SXS4-Am3bsKSK615qbYdbA_FMVh3sAvR/view?usp=sharing) dataset from [insightface](https://github.com/deepinsight/insightface/tree/master/recognition/_datasets_) on strictly follow the licence distribution\n\nUnzip the dataset and place it in the data folder\n\nRename the config/config_xxxxxx.py to config/config.py\n1. Train PocketNet with ArcFace loss\n   + ./train.sh\n2. Train PocketNet with template knowledge distillation\n    + ./train_kd.sh\n3. Train PocketNet with multi-step template knowledge distillation\n    + ./train_kd.sh\n\n| Model  | Parameters (M)| configuration | log| pretrained model| \n| ------------- | ------------- |  ------------- |------------- |------------- |\n| PocketNetS-128 |0.92 |[Config](config/config_PocketNetS128.py)| [log](https://www.dropbox.com/s/hha0qp63y8w46ng/training.log?dl=0)|[Pretrained-model](https://www.dropbox.com/sh/38mhqa19xx28438/AABw64kuY4ExrE4NAQLLiJJwa?dl=0)  |\n| PocketNetS-256 |0.99 |[Config](config/config_PocketNetS256.py)| [log](https://www.dropbox.com/s/tenmtzjrghaos75/training.log?dl=0)|[Pretrained-model](https://www.dropbox.com/sh/n2blqt17bg5eh1m/AAAxhWFZ2mC2hveuHzSMy0mma?dl=0) |\n| PocketNetM-128 |1.68 |[Config](config/config_PocketNetM128.py) | [log](https://www.dropbox.com/s/o0vnxns6hmmj1rg/training.log?dl=0)|[Pretrained-model](https://www.dropbox.com/sh/a8qgqkyryli0nl2/AABPlP5fmiZzlN8IV64BBGica?dl=0)  |\n| PocketNetM-256 |1.75 |[Config](config/config_PocketNetM256.py)| [log](https://www.dropbox.com/s/lqs47v4rc5g7425/training.log?dl=0) |[Pretrained-model](https://www.dropbox.com/sh/4dz14jgynrmsdgb/AAAsfYtKBXg1tPuK7RwzDbGva?dl=0)  |\n\n\n\nAll code has been trained and tested using  Pytorch 1.7.1\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2108.10710"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{boutros2021pocketnet,\n      title={PocketNet: Extreme Lightweight Face Recognition Network using Neural Architecture Search and Multi-Step Knowledge Distillation}, \n      author={Fadi Boutros and Patrick Siebke and Marcel Klemt and Naser Damer and Florian Kirchbuchner and Arjan Kuijper},\n      year={2021},\n      eprint={2108.10710},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fdbtrs/PocketNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-24T12:08:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T14:52:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9789394874686796,
        0.8341589559722501
      ],
      "excerpt": "The code of NAS is available under NAS \n[x] Add pretrained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official repository for PocketNet: Extreme Lightweight Face Recognition Network using Neural Architecture Search and Multi-Step Knowledge Distillation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fdbtrs/pocketnet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sun, 26 Dec 2021 03:20:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fdbtrs/PocketNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fdbtrs/PocketNet",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/train.sh",
      "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/train_mulit_step_kd.sh",
      "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/train_kd.sh",
      "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/eval/megaface/runMegafaceEval.sh",
      "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/eval/IJB/runIJBEval.sh",
      "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/NAS/search.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8301475424423401,
        0.8531290083697612
      ],
      "excerpt": "Rename the configuration file in config directory based on the evaluation model e.g. rename config_PocketNetM128.py to config.py to evaluate the PocketNetM128 \nset the config.rec to dataset folder e.g. data/faces_emore \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8480205425656169,
        0.8588393679718516
      ],
      "excerpt": "set the config.output to path to pretrained model weights \nrun eval/eval.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8437591758189931
      ],
      "excerpt": "[x] Add pretrained model \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fdbtrs/PocketNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/fdbtrs/pocketnet/main/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) license\\n\\nThis project is licensed under the terms of the Attribution-NonCommercial-ShareAlike 4.0\\nInternational (CC BY-NC-SA 4.0) license.\\nCopyright (c) 2021 Fraunhofer Institute for Computer Graphics Research IGD Darmstadt\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PocketNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PocketNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fdbtrs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fdbtrs/PocketNet/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 17,
      "date": "Sun, 26 Dec 2021 03:20:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "biometrics",
      "face-recognition",
      "neural-architecture-search",
      "knowledge-distillation",
      "pocketnet",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}