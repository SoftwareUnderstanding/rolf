{
  "citation": [
    {
      "confidence": [
        0.9955943705675873,
        0.8827840915603409
      ],
      "excerpt": "Model Free Episodic Control, C. Blundell et al., arXiv, 2016. \nHuman-level control through deep reinforcement learning, V. Mnih et al., Nature, 2015. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShibiHe/Model-Free-Episodic-Control",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-07-02T18:48:01Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-05T06:05:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9941553285265173,
        0.9929725576441985
      ],
      "excerpt": "This is the implementation of DQN and Model Free Episodic Control \nThis package provides DQN and Episodic Control. The DQN implementation is based on spragunr/deep_q_rl and the Episodic Control is written by myself. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8887707079671168
      ],
      "excerpt": "I have contacted the author C. Blundell of Model Free Episodic Control. He told me he was using approximate KNN to speed up episodic control, however, he did not tell me details. So I used annoy to do KNN, and I rebuild the search tree frequently. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is the implementation of paper Model Free Episodic Control",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShibiHe/Model-Free-Episodic-Control/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Tue, 28 Dec 2021 06:42:00 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShibiHe/Model-Free-Episodic-Control/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShibiHe/Model-Free-Episodic-Control",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9859547123002996,
        0.9049269730659784
      ],
      "excerpt": "I made some changes to DQN so that we do not need OpenCV any more. In addition if your python has OpenAI gym then you do not need to install Arcade Learning Environment (https://github.com/mgbellemare/Arcade-Learning-Environment) Check spragunr/deep_q_rl's readMe to know more about how to install ALE. \nPersonally, I recommend using OpenAI gym because it not only can be installed by simply pip install gym but also provides us atari game roms (For instance /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/atari_py/atari_roms on my mac). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8294697298283611,
        0.8022604105524299
      ],
      "excerpt": "Arcade Learning Environment or OpenAI gym \nNumpy and SciPy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9748709027320682
      ],
      "excerpt": "A reasonable GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8294697298283611,
        0.8022604105524299
      ],
      "excerpt": "Arcade Learning Environment or OpenAI gym \nNumpy and SciPy \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShibiHe/Model-Free-Episodic-Control/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Shibi He\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Model-Free-Episodic-Control",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Model-Free-Episodic-Control",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShibiHe",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShibiHe/Model-Free-Episodic-Control/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "examples:\n\n`THEANO_FLAGS='device=gpu0, floatX=float32' python run_nature.py`\n\n`THEANO_FLAGS='device=gpu1, floatX=float32' python run_nature.py -r ms_pacman`\n\n`python run_episodic_control.py`\n\nTo get more running details, we can use `python run_episodic_control.py -h` or `python run_nature.py -h`\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 34,
      "date": "Tue, 28 Dec 2021 06:42:00 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "openai-gym",
      "dqn-ep",
      "deep",
      "knn",
      "numpy",
      "self-play",
      "game-theory",
      "fictitious"
    ],
    "technique": "GitHub API"
  }
}