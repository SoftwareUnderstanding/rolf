{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/acholston/SimCLR",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-01T17:33:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-02T16:57:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9884908920183795
      ],
      "excerpt": "This is an implementaton of SimCLR from the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9918497521267378
      ],
      "excerpt": "SimCLR presents a method for unsupervised pretraining of a backbone model, designed  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9689925853167426,
        0.8432385514342681,
        0.9738371147976355,
        0.9264220124565082
      ],
      "excerpt": "To do this two augmentations of the same image are generated and passed into a backbone \nnetwork, and then a projection head. Each head of the projection is compared, with the goal  \nof matching like-pairs and separating negative pairs. This is called Contrastive Loss. \nThe augmentations used mainly in this paper consist of: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "1. Model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8132258716088443
      ],
      "excerpt": "        a. CIFAR10 is default (can be modified to n-classes) \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/acholston/SimCLR/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 08:30:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/acholston/SimCLR/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "acholston/SimCLR",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": " \n To get the required setups run\n \n > pip3 install -r requirements.txt\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8138954141231656,
        0.8522944268274735
      ],
      "excerpt": "Random Color Distortion - Grayscale (20%), Jitter \nRandom Gaussian Blur (Kernel - 10% of image size, sigma - [0.01, 2]) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/acholston/SimCLR/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SimCLR",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SimCLR",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "acholston",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/acholston/SimCLR/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code arguments are setup with defaults in main.py. The main changes would \nbe to the -base_model (resnet to be used), -lr, and -contrastive (to compare \nbetween original and contrastive network)\n\nTo test original resnet accuracy\n > python3 main.py -contrastive False -epoch 50\n\nAnd compare to contrastive model\n > python3 main.py\n\nChanging --base_model 50 would provide better results\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 08:30:46 GMT"
    },
    "technique": "GitHub API"
  }
}