{
  "citation": [
    {
      "confidence": [
        0.9449813035477502
      ],
      "excerpt": "\u9644\u4e0a\u4ee3\u7801\u52a0\u6570\u636e\u5730\u5740 https://github.com/Liuyubao/transfer-learning \uff0c\u6b22\u8fce\u53c2\u8003\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9230513810226604,
        0.9818894004866677
      ],
      "excerpt": "Created on May 31 2018 \n@author: \u67f3\u7389\u8c79 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "VALIDATION_PERCENTAGE = 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "TEST_PERCENTAGE = 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if is_root_dir: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if chance < validation_percentage: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Liuyubao/transfer-learning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-21T12:58:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-20T07:21:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8088485575918286
      ],
      "excerpt": "[v4] Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning, 3.08% test error \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8986980464448271
      ],
      "excerpt": "2.1 What is transfer learning\uff1f \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "sub_dirs = [x[0] for x in os.walk(INPUT_DATA)] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "for sub_dir in sub_dirs: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8410675081908526
      ],
      "excerpt": "for extension in extensions: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "for file_name in file_list: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8674699144987233,
        0.895608950120991
      ],
      "excerpt": "bottleneck_string = ','.join(str(x) for x in bottleneck_values) \nwith open(bottleneck_path, 'w') as bottleneck_file: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.895608950120991
      ],
      "excerpt": "with open(bottleneck_path, 'r') as bottleneck_file: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "bottleneck_values = [float(x) for x in bottleneck_string.split(',')] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "for label_index, label_name in enumerate(label_name_list): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "with tf.name_scope('final_training_ops'): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9319708861235405
      ],
      "excerpt": "with tf.Session() as sess: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Transfer learning in Practice",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Liuyubao/transfer-learning/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 04:35:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Liuyubao/transfer-learning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Liuyubao/transfer-learning",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "\u74f6\u9888\u5c42tensor name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "\u56fe\u50cf\u8f93\u5165tensor name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8492965625796943
      ],
      "excerpt": "\u7279\u5f81\u5411\u91cf save path\uff08\u4e00\u4e2a\u8bad\u7ec3\u6570\u636e\u4f1a\u88ab\u591a\u6b21\u4f7f\u7528\uff0c\u514d\u53bb\u91cd\u590d\u8ba1\u7b97\u7279\u5f81\u5411\u91cf\uff09 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283817423524806
      ],
      "excerpt": "dir_name = os.path.basename(sub_dir) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8031701152930539
      ],
      "excerpt": "file_glob = os.path.join(INPUT_DATA, dir_name, '*.' + extension) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283817423524806
      ],
      "excerpt": "base_name = os.path.basename(file_name) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9133368656218674,
        0.8335805565478537,
        0.8722253495125046,
        0.9457175861910134,
        0.925671696398174,
        0.8603708998795594
      ],
      "excerpt": "import glob \nimport os.path \nimport random \nimport numpy as np \nimport tensorflow as tf \nfrom tensorflow.python.platform import gfile \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "\u74f6\u9888\u5c42tensor name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "\u56fe\u50cf\u8f93\u5165tensor name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828665034782968
      ],
      "excerpt": "LEARNING_RATE = 0.01 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8102780086823556
      ],
      "excerpt": "result = {} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "is_root_dir = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8962939660738152
      ],
      "excerpt": "chance = np.random.randint(100) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8102780086823556
      ],
      "excerpt": "result[label_name] = { \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "'training': training_images, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "bottleneck_values = sess.run(bottleneck_tensor, {image_data_tensor: image_data}) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177883565392947
      ],
      "excerpt": "image_data = gfile.FastGFile(image_path, 'rb').read() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8329015283702058
      ],
      "excerpt": "bottleneck_string = bottleneck_file.read() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9122501389016175
      ],
      "excerpt": "ground_truth = np.zeros(n_classes, dtype=np.float32) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9122501389016175
      ],
      "excerpt": "ground_truth = np.zeros(n_classes, dtype=np.float32) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.829220152048198
      ],
      "excerpt": "n_classes = len(image_lists.keys()) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "graph_def = tf.GraphDef() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "bottleneck_tensor, jpeg_data_tensor = tf.import_graph_def( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8736680535061061
      ],
      "excerpt": "bottleneck_input = tf.placeholder(tf.float32, [None, BOTTLENECK_TENSOR_SIZE], name='BottleneckInputPlaceholder') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8821222069008651
      ],
      "excerpt": "ground_truth_input = tf.placeholder(tf.float32, [None, n_classes], name='GroundTruthInput') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8001448566709184
      ],
      "excerpt": "biases = tf.Variable(tf.zeros([n_classes])) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "final_tensor = tf.nn.softmax(logits) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432,
        0.8936954105699045
      ],
      "excerpt": "cross_entropy_mean = tf.reduce_mean(cross_entropy) \ntrain_step = tf.train.GradientDescentOptimizer(LEARNING_RATE).minimize(cross_entropy_mean) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432,
        0.8135654125968134
      ],
      "excerpt": "evaluation_step = tf.reduce_mean(tf.cast(correct_prediction, tf.float32)) \nwith tf.Session() as sess: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8245955242855427,
        0.8008331685760428
      ],
      "excerpt": "sess, n_classes, image_lists, BATCH, 'training', jpeg_data_tensor, bottleneck_tensor) \nsess.run(train_step, feed_dict={bottleneck_input: train_bottlenecks, ground_truth_input: train_ground_truth}) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "validation_accuracy = sess.run(evaluation_step, feed_dict={ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8508390435915216
      ],
      "excerpt": "print('Step %d: Validation accuracy on random sampled %d examples = %.1f%%' % \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "test_accuracy = sess.run(evaluation_step, feed_dict={ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8999057580636876,
        0.8458751354831934
      ],
      "excerpt": "print('Final test accuracy = %.1f%%' % (test_accuracy * 100)) \nif name == 'main': \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Liuyubao/transfer-learning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "-*- coding: utf-8 -*-",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "transfer-learning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Liuyubao",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Liuyubao/transfer-learning/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 23 Dec 2021 04:35:47 GMT"
    },
    "technique": "GitHub API"
  }
}