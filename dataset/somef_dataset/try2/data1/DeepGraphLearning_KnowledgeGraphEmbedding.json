{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{\n sun2018rotate,\n title={RotatE: Knowledge Graph Embedding by Relational Rotation in Complex Space},\n author={Zhiqing Sun and Zhi-Hong Deng and Jian-Yun Nie and Jian Tang},\n booktitle={International Conference on Learning Representations},\n year={2019},\n url={https://openreview.net/forum?id=HkgEQnRqYQ},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "[x] MRR, MR, HITS@1, HITS@3, HITS@10 (filtered) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9593299683604384
      ],
      "excerpt": "| HITS@10 | .884 | .533 | .959 | .571 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "    if mode == 'head-batch': \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DeepGraphLearning/KnowledgeGraphEmbedding",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-23T18:21:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T05:45:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9955846320704584,
        0.9422251802511975,
        0.8650840624045425
      ],
      "excerpt": "This is the PyTorch implementation of the RotatE model for knowledge graph embedding (KGE). We provide a toolkit that gives state-of-the-art performance of several popular KGE models. The toolkit is quite efficient, which is able to train a large KGE model within a few hours on a single GPU. \nA faster multi-GPU implementation of RotatE and other KGE models is available in GraphVite. \nImplemented features \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8369896296301601
      ],
      "excerpt": "[x] AUC-PR (for Countries data sets) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9002189487255127
      ],
      "excerpt": "Knowledge Graph Data: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8595246936503504
      ],
      "excerpt": " - test.txt: the KGE model is evaluated on this data set \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.860059181823877
      ],
      "excerpt": " --data_path data/FB15k \\ \n --model RotatE \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9471574643276539
      ],
      "excerpt": "   Check argparse configuration at codes/run.py for more arguments and more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9315034521274375
      ],
      "excerpt": "To reprocude the results in the ICLR 2019 paper RotatE: Knowledge Graph Embedding by Relational Rotation in Complex Space, you can run the bash commands in best_config.sh to get the best performance of RotatE, TransE, and ComplEx on five widely used datasets (FB15k, FB15k-237, wn18, wn18rr, Countries). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.946190683114495
      ],
      "excerpt": "The KGE models usually take about half an hour to run 10000 steps on a single GeForce GTX 1080 Ti GPU with default configuration. And these models need different max_steps to converge on different data sets: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9852434130406583
      ],
      "excerpt": "Results of the RotatE model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9067511516405438
      ],
      "excerpt": "Add your own model to model.py like: \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DeepGraphLearning/KnowledgeGraphEmbedding/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 200,
      "date": "Fri, 24 Dec 2021 15:30:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DeepGraphLearning/KnowledgeGraphEmbedding/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepGraphLearning/KnowledgeGraphEmbedding",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/DeepGraphLearning/KnowledgeGraphEmbedding/master/best_config.sh",
      "https://raw.githubusercontent.com/DeepGraphLearning/KnowledgeGraphEmbedding/master/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8664445590072002
      ],
      "excerpt": "For example, this command train a RotatE model on FB15k dataset with GPU 0. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": " --cuda \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8284894318807529
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=$GPU_DEVICE python -u $CODE_PATH/run.py --do_test --cuda -init $SAVE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8613740999829038
      ],
      "excerpt": "bash run.sh train RotatE FB15k 0 0 1024 256 1000 24.0 1.0 0.0001 200000 16 -de \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8118594057312192
      ],
      "excerpt": " - train.txt: the KGE model is trained to fit this data set \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8869647387529559,
        0.8346065211888999
      ],
      "excerpt": "For example, this command train a RotatE model on FB15k dataset with GPU 0. \nCUDA_VISIBLE_DEVICES=0 python -u codes/run.py --do_train \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8061674212083602
      ],
      "excerpt": "bash run.sh train RotatE FB15k 0 0 1024 256 1000 24.0 1.0 0.0001 200000 16 -de \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8304510055137817,
        0.8810256730751624,
        0.8234612296519643
      ],
      "excerpt": "KGEModel (model.py): calculate triple score and provide train/test API \nThe run.py file contains the main function, which parses arguments, reads data, initilize the model and provides the training loop. \nAdd your own model to model.py like: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DeepGraphLearning/KnowledgeGraphEmbedding/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Edward-Sun\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "RotatE: Knowledge Graph Embedding by Relational Rotation in Complex Space",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "KnowledgeGraphEmbedding",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepGraphLearning",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DeepGraphLearning/KnowledgeGraphEmbedding/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 806,
      "date": "Fri, 24 Dec 2021 15:30:51 GMT"
    },
    "technique": "GitHub API"
  }
}