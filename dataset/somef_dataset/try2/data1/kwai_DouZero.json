{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2106.06135](https://arxiv.org/abs/2106.06135",
      "https://arxiv.org/abs/2106.06135",
      "https://arxiv.org/abs/2106.06135"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this project helpful in your research, please cite our paper:\n\nZha, Daochen et al. \u201cDouZero: Mastering DouDizhu with Self-Play Deep Reinforcement Learning.\u201d ICML (2021).\n\n```bibtex\n@InProceedings{pmlr-v139-zha21a,\n  title = \t {DouZero: Mastering DouDizhu with Self-Play Deep Reinforcement Learning},\n  author =       {Zha, Daochen and Xie, Jingru and Ma, Wenye and Zhang, Sheng and Lian, Xiangru and Hu, Xia and Liu, Ji},\n  booktitle = \t {Proceedings of the 38th International Conference on Machine Learning},\n  pages = \t {12333--12344},\n  year = \t {2021},\n  editor = \t {Meila, Marina and Zhang, Tong},\n  volume = \t {139},\n  series = \t {Proceedings of Machine Learning Research},\n  month = \t {18--24 Jul},\n  publisher =    {PMLR},\n  pdf = \t {http://proceedings.mlr.press/v139/zha21a/zha21a.pdf},\n  url = \t {http://proceedings.mlr.press/v139/zha21a.html},\n  abstract = \t {Games are abstractions of the real world, where artificial agents learn to compete and cooperate with other agents. While significant achievements have been made in various perfect- and imperfect-information games, DouDizhu (a.k.a. Fighting the Landlord), a three-player card game, is still unsolved. DouDizhu is a very challenging domain with competition, collaboration, imperfect information, large state space, and particularly a massive set of possible actions where the legal actions vary significantly from turn to turn. Unfortunately, modern reinforcement learning algorithms mainly focus on simple and small action spaces, and not surprisingly, are shown not to make satisfactory progress in DouDizhu. In this work, we propose a conceptually simple yet effective DouDizhu AI system, namely DouZero, which enhances traditional Monte-Carlo methods with deep neural networks, action encoding, and parallel actors. Starting from scratch in a single server with four GPUs, DouZero outperformed all the existing DouDizhu AI programs in days of training and was ranked the first in the Botzone leaderboard among 344 AI agents. Through building DouZero, we show that classic Monte-Carlo methods can be made to deliver strong results in a hard domain with a complex action space. The code and an online demo are released at https://github.com/kwai/DouZero with the hope that this insight could motivate future work.}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{pmlr-v139-zha21a,\n  title =    {DouZero: Mastering DouDizhu with Self-Play Deep Reinforcement Learning},\n  author =       {Zha, Daochen and Xie, Jingru and Ma, Wenye and Zhang, Sheng and Lian, Xiangru and Hu, Xia and Liu, Ji},\n  booktitle =    {Proceedings of the 38th International Conference on Machine Learning},\n  pages =    {12333--12344},\n  year =     {2021},\n  editor =   {Meila, Marina and Zhang, Tong},\n  volume =   {139},\n  series =   {Proceedings of Machine Learning Research},\n  month =    {18--24 Jul},\n  publisher =    {PMLR},\n  pdf =      {http://proceedings.mlr.press/v139/zha21a/zha21a.pdf},\n  url =      {http://proceedings.mlr.press/v139/zha21a.html},\n  abstract =     {Games are abstractions of the real world, where artificial agents learn to compete and cooperate with other agents. While significant achievements have been made in various perfect- and imperfect-information games, DouDizhu (a.k.a. Fighting the Landlord), a three-player card game, is still unsolved. DouDizhu is a very challenging domain with competition, collaboration, imperfect information, large state space, and particularly a massive set of possible actions where the legal actions vary significantly from turn to turn. Unfortunately, modern reinforcement learning algorithms mainly focus on simple and small action spaces, and not surprisingly, are shown not to make satisfactory progress in DouDizhu. In this work, we propose a conceptually simple yet effective DouDizhu AI system, namely DouZero, which enhances traditional Monte-Carlo methods with deep neural networks, action encoding, and parallel actors. Starting from scratch in a single server with four GPUs, DouZero outperformed all the existing DouDizhu AI programs in days of training and was ranked the first in the Botzone leaderboard among 344 AI agents. Through building DouZero, we show that classic Monte-Carlo methods can be made to deliver strong results in a hard domain with a complex action space. The code and an online demo are released at https://github.com/kwai/DouZero with the hope that this insight could motivate future work.}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8374695145293155
      ],
      "excerpt": "Online Demo: https://www.douzero.org/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977994744046882
      ],
      "excerpt": "Paper: https://arxiv.org/abs/2106.06135  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999868703411524,
        0.9222383658450612
      ],
      "excerpt": "Algorithm: Daochen Zha, Jingru Xie, Wenye Ma, Sheng Zhang, Xiangru Lian, Xia Hu, Ji Liu \nGUI Demo: Songyi Huang \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kwai/DouZero",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-02T01:55:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T18:58:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9981561401072604
      ],
      "excerpt": "DouZero is a reinforcement learning framework for DouDizhu (\u6597\u5730\u4e3b), the most popular card game in China. It is a shedding-type game where the player\u2019s objective is to empty one\u2019s hand of all cards before other players. DouDizhu is a very challenging domain with competition, collaboration, imperfect information, large state space, and particularly a massive set of possible actions where the legal actions vary significantly from turn to turn. DouZero is developed by AI Platform, Kwai Inc. (\u5feb\u624b). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9629962971611608
      ],
      "excerpt": "Related Project: RLCard Project \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8064906170488448,
        0.9040153337988496
      ],
      "excerpt": "Google Colab: jupyter notebook \nUnofficial improved versions of DouZero by the community: [DouZero ResNet] [DouZero FullAuto] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9777665738262231,
        0.9009614607129621,
        0.9009614607129621,
        0.9009614607129621
      ],
      "excerpt": "*  QQ Group: Join our QQ group to discuss. Password: douzeroqqgroup \n*  Group 1: 819204202 \n*  Group 2: 954183174 \n*  Group 3: 834954839 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9739615742124893,
        0.9869405910152765
      ],
      "excerpt": "In addition to the challenge of imperfect information, DouDizhu has huge state and action spaces. In particular, the action space of DouDizhu is 10^4 (see this table). Unfortunately, most reinforcement learning algorithms can only handle very small action spaces. Moreover, the players in DouDizhu need to both compete and cooperate with others in a partially-observable environment with limited communication, i.e., two Peasants players will play as a team to fight against the Landlord player. Modeling both competing and cooperation is an open research challenge. \nIn this work, we propose Deep Monte Carlo (DMC) algorithm with action encoding and parallel actors. This leads to a very simple yet surprisingly effective solution for DouDizhu. Please read our paper for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9457052106928369
      ],
      "excerpt": "For more customized configuration of training, see the following optional arguments: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9718161432410358
      ],
      "excerpt": "                      Time interval (in minutes) at which to save the model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112412662830264
      ],
      "excerpt": "                      Which GPUs to be used for training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8712366209283862
      ],
      "excerpt": "                      The number of devices used for simulation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8032001884971631
      ],
      "excerpt": "                      The number of actors for each simulation device \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8366795932048218
      ],
      "excerpt": "                      The probability for exploration \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8103798665569889
      ],
      "excerpt": "                      Max norm of gradients \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8989940302280032,
        0.8757723771227095,
        0.8958076336518119,
        0.8617274723198968
      ],
      "excerpt": "*   rlcard: the rule-based agent in RLCard \n*   SL (baselines/sl/): the pre-trained deep agents on human data \n*   DouZero-ADP (baselines/douzero_ADP/): the pretrained DouZero agents with Average Difference Points (ADP) as objective \n*   DouZero-WP (baselines/douzero_WP/): the pretrained DouZero agents with Winning Percentage (WP) as objective \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "[ICML 2021] DouZero: Mastering DouDizhu with Self-Play Deep Reinforcement Learning | \u6597\u5730\u4e3bAI",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kwai/DouZero/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 299,
      "date": "Thu, 23 Dec 2021 01:50:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kwai/DouZero/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kwai/DouZero",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kwai/DouZero/main/get_most_recent.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The training code is designed for GPUs. Thus, you need to first install CUDA if you want to train models. You may refer to [this guide](https://docs.nvidia.com/cuda/index.html#installation-guides). For evaluation, CUDA is optional and you can use CPU for evaluation.\n\nFirst, clone the repo with (if you are in China and Github is slow, you can use the mirror in [Gitee](https://gitee.com/daochenzha/DouZero)):\n```\ngit clone https://github.com/kwai/DouZero.git\n```\nMake sure you have python 3.6+ installed. Install dependencies:\n```\ncd douzero\npip3 install -r requirements.txt\n```\nWe recommend installing the stable version of DouZero with\n```\npip3 install douzero\n```\nIf you are in China and the above command is too slow, you can use the mirror provided by Tsinghua University:\n```\npip3 install douzero -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\nor install the up-to-date version (it could be not stable) with\n```\npip3 install -e .\n```\nNote that Windows users can only use CPU as actors. See [Issues in Windows](README.md#issues-in-windows) about why GPUs are not supported. Nonetheless, Windows users can still [run the demo locally](https://github.com/datamllab/rlcard-showdown).  \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8656099942634643
      ],
      "excerpt": ":loudspeaker: New Version with Bid\uff08\u53eb\u724c\u7248\u672c\uff09: https://www.douzero.org/bid \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816298928803422
      ],
      "excerpt": "To use GPU for training, run \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9415694697875563
      ],
      "excerpt": "This will train DouZero on one GPU. To train DouZero on multiple GPUs. Use the following arguments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8085763151603137
      ],
      "excerpt": "To use CPU training or simulation (Windows can only use CPU for actors), use the following arguments: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9486896461486628
      ],
      "excerpt": "For example, use the following command to run everything on CPU: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8853979086072189
      ],
      "excerpt": "The following command only runs actors on CPU: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9353740182973136
      ],
      "excerpt": "                      Total environment frames to train for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9202604519962421
      ],
      "excerpt": "*   --gpu_device: which GPU to use. It will use CPU by default \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh get_most_recent.sh douzero_checkpoints/douzero/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8246915864416197
      ],
      "excerpt": "<img width=\"500\" src=\"https://raw.githubusercontent.com/kwai/DouZero/main/imgs/douzero_logo.jpg\" alt=\"Logo\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "python3 train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.952168041536384
      ],
      "excerpt": "python3 train.py --gpu_devices 0,1,2,3 --num_actor_devices 3 --num_actors 15 --training_device 3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8911126927265138
      ],
      "excerpt": "python3 train.py --actor_device_cpu --training_device cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "python3 train.py --actor_device_cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 generate_eval_data.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.852118605582617
      ],
      "excerpt": "python3 evaluate.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8198714289711821
      ],
      "excerpt": "python3 evaluate.py --landlord baselines/douzero_ADP/landlord.ckpt --landlord_up random --landlord_down random \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kwai/DouZero/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "[ICML 2021] DouZero: Mastering DouDizhu with Self-Play Deep Reinforcement Learning",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DouZero",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kwai",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kwai/DouZero/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "daochenzha",
        "body": "*   Support CPU training\r\n*   Support using the log of ADP as objective",
        "dateCreated": "2021-08-05T04:52:32Z",
        "datePublished": "2021-08-05T04:53:24Z",
        "html_url": "https://github.com/kwai/DouZero/releases/tag/1.1.0",
        "name": "DouZero 1.1.0",
        "tag_name": "1.1.0",
        "tarball_url": "https://api.github.com/repos/kwai/DouZero/tarball/1.1.0",
        "url": "https://api.github.com/repos/kwai/DouZero/releases/47336436",
        "zipball_url": "https://api.github.com/repos/kwai/DouZero/zipball/1.1.0"
      },
      {
        "authorType": "User",
        "author_name": "daochenzha",
        "body": "*   Fixed bugs of evaluation with multi-processes in Windows system\r\n*   Updated the dependency to PyTorch >= 1.6",
        "dateCreated": "2021-07-19T13:58:18Z",
        "datePublished": "2021-07-19T14:01:22Z",
        "html_url": "https://github.com/kwai/DouZero/releases/tag/1.0.7",
        "name": "DouZero 1.0.7",
        "tag_name": "1.0.7",
        "tarball_url": "https://api.github.com/repos/kwai/DouZero/tarball/1.0.7",
        "url": "https://api.github.com/repos/kwai/DouZero/releases/46414345",
        "zipball_url": "https://api.github.com/repos/kwai/DouZero/zipball/1.0.7"
      },
      {
        "authorType": "User",
        "author_name": "daochenzha",
        "body": "*   DouDizhu game engine\r\n*   Training and evaluating with multiple processes\r\n*   Instructions for training and evaluation",
        "dateCreated": "2021-06-27T04:49:15Z",
        "datePublished": "2021-06-27T04:53:33Z",
        "html_url": "https://github.com/kwai/DouZero/releases/tag/1.0.6",
        "name": "DouZero 1.0.6",
        "tag_name": "1.0.6",
        "tarball_url": "https://api.github.com/repos/kwai/DouZero/tarball/1.0.6",
        "url": "https://api.github.com/repos/kwai/DouZero/releases/45312515",
        "zipball_url": "https://api.github.com/repos/kwai/DouZero/zipball/1.0.6"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2289,
      "date": "Thu, 23 Dec 2021 01:50:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "reinforcement-learning",
      "doudizhu",
      "game-ai",
      "poker"
    ],
    "technique": "GitHub API"
  }
}