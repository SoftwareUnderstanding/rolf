{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1509.06461\n\nOpenAI Spinning Up tutorial: https://spinningup.openai.com/en/latest/\n\nReinforcement Learning: An Introduction, Richard S. Sutton et al. https://web.stanford.edu/class/psych209/Readings/SuttonBartoIPRLBook2ndEd.pdf\n\nDeep Reinforcement Learning Doesn't Work Yet: https://www.alexirpan.com/2018/02/14/rl-hard.html"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9996313167497971
      ],
      "excerpt": "Deep Reinforcement Learning with Double Q-learning, Hado V. Hasselt et al, NIPS 2015: https://arxiv.org/abs/1509.06461 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ianlimle/ItsMeMario",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-08T13:46:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-12T05:13:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8933235689906506
      ],
      "excerpt": "Define parameters for the training and evaluation of Mario. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.845993025285234,
        0.8307287084964884,
        0.8232400610655592
      ],
      "excerpt": "MeanReward: moving average of episode reward in past 100 episodes \nMeanLength: moving average of episode length in past 100 episodes \nMeanLoss: moving average of step loss in past 100 episodes \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ianlimle/ItsMeMario/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 07:23:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ianlimle/ItsMeMario/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ianlimle/ItsMeMario",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.890409927237967
      ],
      "excerpt": "\u251c\u2500\u2500 environment.yml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.985421927143098
      ],
      "excerpt": "Define packages/dependencies required for the environment to be installed and run. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9151270764930737
      ],
      "excerpt": "|   \u251c\u2500\u2500 /src \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.887348249053625,
        0.8759955720239709
      ],
      "excerpt": "\u251c\u2500\u2500 agent.py \n\u251c\u2500\u2500 config.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8212777017038255
      ],
      "excerpt": "\u251c\u2500\u2500 net.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9521174821235511,
        0.950563948951535,
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 test.py \n\u251c\u2500\u2500 train.py \n\u251c\u2500\u2500 wrappers.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ianlimle/ItsMeMario/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "JavaScript",
      "HTML",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Prerequisites",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ItsMeMario",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ianlimle",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ianlimle/ItsMeMario/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Install [conda](https://www.anaconda.com/products/individual)\n2. Install dependencies with `environment.yml`\n\n   ```\n   conda env create -f environment.yml\n   ```\n\n   Check the new environment _mario-env_ is [created successfully](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-from-an-environment-yml-file).\n\n3. Activate _mario-env_ environment\n\n   ```\n   conda activate mario-env\n   ```\n\n4. If your shell is not properly configured to use `conda activate`, it may be a source line in your bash scripts that has to explicitly reference your conda installation path. You can reference your conda installation path with the following:\n   ```\n   CONDA_PREFIX=$(conda info --base)\n   source $CONDA_PREFIX/etc/profile.d/conda.sh\n   conda activate mario-env\n   ```\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To start the **training** process for Mario,\n\n```\npython train.py\n```\n\nThis starts the _double Q-learning_ and logs key training metrics to `checkpoints`. A copy of `MarioNet` and current exploration rate will be saved.\n\nTo **evaluate** a trained Mario,\n\n```\npython test.py \\\n--checkpoint [PATH/TO/YOUR/CHECKPOINT/FILE]\n```\n\nThis visualizes Mario playing the game in a window. Performance metrics will be logged to a new folder under `checkpoints`. Change the `--checkpoint`, e.g. `checkpoints/2021-08-06T22-00-00/mario_net_1.chkpt` to check a specific timestamp.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you have NPM installed\n\n1. Go into `app` folder\n2. Run `npm install`\n3. Run `npm start`\n4. Open a separate terminal and perform `python server.py`\n5. The GUI should be running at `localhost:3000` while the server which interacts with the AI scripts is `localhost:5001`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 07:23:58 GMT"
    },
    "technique": "GitHub API"
  }
}