{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2108.09551",
      "https://arxiv.org/abs/1804.02815"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@inproceedings{song2021variable,\n  title={Variable-Rate Deep Image Compression through Spatially-Adaptive Feature Transform},\n  author={Song, Myungseo and Choi, Jinyoung and Han, Bohyung},\n  booktitle={Proceedings of the IEEE/CVF International Conference on Computer Vision},\n  pages={2380--2389},\n  year={2021}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{song2021variable,\n  title={Variable-Rate Deep Image Compression through Spatially-Adaptive Feature Transform},\n  author={Song, Myungseo and Choi, Jinyoung and Han, Bohyung},\n  booktitle={Proceedings of the IEEE/CVF International Conference on Computer Vision},\n  pages={2380--2389},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8334316807263773
      ],
      "excerpt": "2017 Train/Val annotations [241MB] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/micmic123/QmapCompression",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-03T18:27:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T07:40:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8791759900099914,
        0.9931645870292163
      ],
      "excerpt": "This repository is the implementation of \"Variable-Rate Deep Image Compression through Spatially-Adaptive Feature Transform\" (ICCV 2021). \nOur code is based on CompressAI. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9521509513774918,
        0.9838680256711412,
        0.9464645033778752,
        0.9043869275478441,
        0.9580984945700113,
        0.8920335269882065
      ],
      "excerpt": "We propose a versatile deep image compression network based on Spatial Feature Transform (SFT), which takes a source image and a corresponding quality map as inputs and produce a compressed image with variable rates.  \nOur model covers a wide range of compression rates using a single model, which is controlled by arbitrary pixel-wise quality maps.  \nIn addition, the proposed framework allows us to perform task-aware image compressions for various tasks, e.g., classification, by efficiently estimating optimized quality maps specific to target tasks for our encoding network.  \nThis is even possible with a pretrained network without learning separate models for individual tasks.  \nOur algorithm achieves outstanding rate-distortion trade-off compared to the approaches based on multiple models that are optimized separately for several different target rates.  \nAt the same level of compression, the proposed approach successfully improves performance on image classification and text region quality preservation via task-aware quality map estimation without additional model training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8765829246116426
      ],
      "excerpt": "We expect that larger number of training iteration will lead to the better performance. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9484969271096672
      ],
      "excerpt": "The checkpoints of the model will be saved in ./results/your_instance_name/snapshots. \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9229627935337784
      ],
      "excerpt": "We release the pretrained model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9738340938923981
      ],
      "excerpt": "For example, in the case of [ Test8 ], a uniform quality map of 0.8 is used. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8747743892456986,
        0.9287125684769088,
        0.9320005129016903
      ],
      "excerpt": "Bpp is the theoretical average bpp calculated by the trained probability model. \nReal Bpp is the real average bpp for the saved file including quantized latent representations and metadata. \nAll bpps reported in the paper are Real Bpp. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official implementation of \"Variable-Rate Deep Image Compression through Spatially-Adaptive Feature Transform\", ICCV 2021",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/micmic123/qmapcompression/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Fri, 24 Dec 2021 10:37:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/micmic123/QmapCompression/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "micmic123/QmapCompression",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/micmic123/qmapcompression/master/scripts/prepare.sh",
      "https://raw.githubusercontent.com/micmic123/qmapcompression/master/scripts/prepare_imagenet.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We tested our code in ubuntu 16.04, g++ 8.4.0, cuda 10.1, python 3.8.8, pytorch 1.7.1.\nA C++ 17 compiler is required to use the Range Asymmetric Numeral System implementation.\n\n1. Check your g++ version >= 7. If not, please update it first and make sure to use the updated version.\n    - `$ g++ --version`\n\n2. Set up the python environment (Python 3.8).\n    \n3. Install needed packages.\n    - `$ pip install torch==1.7.1+cu101 torchvision==0.8.2+cu101 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html`\n    - `$ pip install -r requirements.txt`\n    - If some errors occur in installing [CompressAI](https://github.com/InterDigitalInc/CompressAI), please install it yourself. \n    It is for the entropy coder.\n        - We used [CompressAI 1.0.9](https://github.com/micmic123/CompressAI) version.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8727487047449518
      ],
      "excerpt": "    \u251c\u2500\u2500 coco \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9518928852480057,
        0.9347428372188059
      ],
      "excerpt": "Run following command in scripts directory. \n$ ./prepare.sh your_dataset_root/coco your_dataset_root/kodak \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8832446989848799
      ],
      "excerpt": "At least 12GB GPU memory is needed for the default training setting. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.973161821758984
      ],
      "excerpt": "You can use it like following: \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9518928852480057,
        0.9023697225149864
      ],
      "excerpt": "2. Run following command in scripts directory. \n    - $ ./prepare_imagenet.sh your_dataset_root/ILSVRC2012_img_val \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8511631830142523
      ],
      "excerpt": "Test set: Kodak dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928883598313284
      ],
      "excerpt": "(Test set) Download Kodak dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8556183912281797
      ],
      "excerpt": "trainset_coco.csv and kodak.csv will be created in data directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.921542931579827
      ],
      "excerpt": "$ python train.py --config=./configs/config.yaml --name=your_instance_name \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9130148741425742
      ],
      "excerpt": "$ python train.py --resume=./results/your_instance_name/snapshots/your_snapshot_name.pt \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9214975485398604
      ],
      "excerpt": "$ python eval.py --snapshot=./results/your_instance_name/snapshots/your_snapshot_name.pt --testset=./data/kodak.csv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436267223835474
      ],
      "excerpt": "Unzip the file and put it in results directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9214975485398604,
        0.876843036954063,
        0.8670279992938138,
        0.8670279992938138,
        0.840363308812393,
        0.876843036954063,
        0.8782486509480283,
        0.8558532275751441,
        0.8689906368230601,
        0.8875914008403422,
        0.8665457169589338,
        0.8689906368230601,
        0.8006581781040797,
        0.8369774367516596
      ],
      "excerpt": "$ python eval.py --snapshot=./results/pretrained_dist/snapshots/2M_itrs.pt --testset=./data/kodak.csv \n[ Test-1 ] Total: 0.5104 | Real BPP: 0.2362 | BPP: 0.2348 | PSNR: 29.5285 | MS-SSIM: 0.9360 | Aux: 93 | Enc Time: 0.2403s | Dec Time: 0.0356s \n[ Test 0 ] Total: 0.2326 | Real BPP: 0.0912 | BPP: 0.0902 | PSNR: 27.1140 | MS-SSIM: 0.8976 | Aux: 93 | Enc Time: 0.2399s | Dec Time: 0.0345s \n[ Test 1 ] Total: 0.2971 | Real BPP: 0.1187 | BPP: 0.1176 | PSNR: 27.9824 | MS-SSIM: 0.9159 | Aux: 93 | Enc Time: 0.2460s | Dec Time: 0.0347s \n[ Test 2 ] Total: 0.3779 | Real BPP: 0.1559 | BPP: 0.1547 | PSNR: 28.8982 | MS-SSIM: 0.9323 | Aux: 93 | Enc Time: 0.2564s | Dec Time: 0.0370s \n[ Test 3 ] Total: 0.4763 | Real BPP: 0.2058 | BPP: 0.2045 | PSNR: 29.9052 | MS-SSIM: 0.9464 | Aux: 93 | Enc Time: 0.2553s | Dec Time: 0.0359s \n[ Test 4 ] Total: 0.5956 | Real BPP: 0.2712 | BPP: 0.2697 | PSNR: 30.9739 | MS-SSIM: 0.9582 | Aux: 93 | Enc Time: 0.2548s | Dec Time: 0.0354s \n[ Test 5 ] Total: 0.7380 | Real BPP: 0.3558 | BPP: 0.3541 | PSNR: 32.1140 | MS-SSIM: 0.9678 | Aux: 93 | Enc Time: 0.2598s | Dec Time: 0.0358s \n[ Test 6 ] Total: 0.9059 | Real BPP: 0.4567 | BPP: 0.4548 | PSNR: 33.2801 | MS-SSIM: 0.9752 | Aux: 93 | Enc Time: 0.2596s | Dec Time: 0.0361s \n[ Test 7 ] Total: 1.1050 | Real BPP: 0.5802 | BPP: 0.5780 | PSNR: 34.4822 | MS-SSIM: 0.9811 | Aux: 93 | Enc Time: 0.2590s | Dec Time: 0.0364s \n[ Test 8 ] Total: 1.3457 | Real BPP: 0.7121 | BPP: 0.7095 | PSNR: 35.5609 | MS-SSIM: 0.9852 | Aux: 93 | Enc Time: 0.2569s | Dec Time: 0.0367s \n[ Test 9 ] Total: 1.6392 | Real BPP: 0.8620 | BPP: 0.8590 | PSNR: 36.5931 | MS-SSIM: 0.9884 | Aux: 93 | Enc Time: 0.2553s | Dec Time: 0.0371s \n[ Test10 ] Total: 2.0116 | Real BPP: 1.0179 | BPP: 1.0145 | PSNR: 37.4660 | MS-SSIM: 0.9907 | Aux: 93 | Enc Time: 0.2644s | Dec Time: 0.0376s \n[ Test ] Total mean: 0.8841 | Enc Time: 0.2540s | Dec Time: 0.0361s \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185593738476578
      ],
      "excerpt": "Total is the average loss value. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/micmic123/QmapCompression/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Variable-Rate Deep Image Compression through Spatially-Adaptive Feature Transform",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "QmapCompression",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "micmic123",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/micmic123/QmapCompression/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`$ python classification_aware.py --snapshot=./results/your_instance_name/snapshots/your_snapshot_name.pt` \\\nA result plot `./classificatoin_result.png` will be generated.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Fri, 24 Dec 2021 10:37:03 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "compression",
      "pytorch",
      "deeplearning",
      "iccv2021"
    ],
    "technique": "GitHub API"
  }
}