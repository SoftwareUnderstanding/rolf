{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.03476"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Jonathan Ho and Stefano Ermon. Generative adversarial imitation learning, [[arxiv](https://arxiv.org/abs/1606.03476)]\n- @openai/imitation\n- @openai/baselines\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  Generative Adversarial Nets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8385178584879004
      ],
      "excerpt": "export STOCHASTIC_POLICY=\"False\"            #: use True for a stochastic policy \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bukysun/gail-traj-eb",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-13T04:54:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-13T05:12:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9278918409981658
      ],
      "excerpt": "Tensorflow implementation of Generative Adversarial Imitation Learning (and  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8830995053086719
      ],
      "excerpt": "disclaimers: some code is borrowed from @openai/baselines \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9437162929145082
      ],
      "excerpt": "model-based GAIL: End-to-End Differentiable Adversarial Imitation Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9677458672817263,
        0.8354646904696805
      ],
      "excerpt": "Some work based on GAIL: \nInferring The Latent Structure of Human Decision-Making from Raw Visual  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8379416772125279,
        0.944621875442739
      ],
      "excerpt": "Robust Imitation of Diverse Behaviors \nEnsure that $GAILTF is set to the path to your gail-tf repository, and  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394977323377361
      ],
      "excerpt": "vary based on your optimization method and environment ID. Choose the last  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9966474696551649
      ],
      "excerpt": "--traj_limitation: Limitation of the exerpt trajectories \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8127617292418958
      ],
      "excerpt": "--num_timesteps:   Number of timesteps to train (limit the number of timesteps to interact with environment) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8083847204476823
      ],
      "excerpt": "Note: The following hyper-parameter setting is the best that I've tested (simple  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168123944437988
      ],
      "excerpt": "For HalfCheetah-v1 and Ant-v1, using behavior cloning is needed: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609440858174288
      ],
      "excerpt": "encounter error: Cannot compile MPI programs. Check your configuration!!! or the systme complain about mpi/h  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bukysun/gail-traj-eb/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 02:06:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bukysun/gail-traj-eb/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bukysun/gail-traj-eb",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/bukysun/gail-traj-eb/master/env.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.802342402886512
      ],
      "excerpt": "export GAILTF=/path/to/your/gail-tf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd $GAILTF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8680583890093855
      ],
      "excerpt": "--env_id:          The environment id \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8410613256224919
      ],
      "excerpt": "Note: The following hyper-parameter setting is the best that I've tested (simple  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9300886921095451
      ],
      "excerpt": "We don't have a pip package yet, so you'll need to add this repo to your  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8980097929936733,
        0.8947688434285554
      ],
      "excerpt": "export PYTHONPATH=/path/to/your/repo/with/gailtf:$PYTHONPATH \nCreate pip package/setup.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8786745114395541
      ],
      "excerpt": "Create requirements.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991,
        0.8864089478828969
      ],
      "excerpt": "python3 $BASELINES_PATH/run_mujoco.py --env_id $ENV_ID \nThe trained model will save in ./checkpoint, and its precise name will \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.849778896293833
      ],
      "excerpt": "python3 $BASELINES_PATH/run_mujoco.py --env_id $ENV_ID --task sample_trajectory --sample_stochastic $SAMPLE_STOCHASTIC --load_model_path $PATH_TO_CKPT \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "python3 main.py --env_id $ENV_ID --expert_path $PICKLE_PATH \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8811075069383943
      ],
      "excerpt": "python3 main.py --env_id $ENV_ID --task evaluate --stochastic_policy $STOCHASTIC_POLICY --load_model_path $PATH_TO_CKPT --expert_path $PICKLE_PATH \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "python3 main.py --env_id $ENV_ID --algo bc --expert_path $PICKLE_PATH \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.896489021386876
      ],
      "excerpt": "python3 main.py --env_id $ENV_ID --algo bc --task evalaute --stochastic_policy $STOCHASTIC_POLICY --load_model_path $PATH_TO_CKPT --expert_path $PICKLE_PATH \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8565766861170411
      ],
      "excerpt": "python3 main.py --env_id Hopper-v1 --expert_path baselines/ppo1/deterministic.ppo.Hopper.0.00.pkl --g_step 3 --adversary_entcoeff 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8525080344567464
      ],
      "excerpt": "python3 main.py --env_id Walker2d-v1 --expert_path baselines/ppo1/deterministic.ppo.Walker2d.0.00.pkl --g_step 3 --adversary_entcoeff 1e-3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150307839776004
      ],
      "excerpt": "python3 main.py --env_id HalfCheetah-v1 --expert_path baselines/ppo1/deterministic.ppo.HalfCheetah.0.00.pkl --pretrained True --BC_max_iter 10000 --g_step 3 --adversary_entcoeff 1e-3 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bukysun/gail-traj-eb/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License\\n\\nCopyright (c) 2017 Andrew Liao\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Check out the simpler version at [openai/baselines/gail](https://github.com/openai/baselines/blob/master/baselines/gail/README.md)!",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "gail-traj-eb",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bukysun",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bukysun/gail-traj-eb/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- python==3.5.2\n- mujoco-py==0.5.7\n- tensorflow==1.1.0\n- gym==0.9.3\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "I separate the code into two parts: (1) Sampling expert data, (2) Imitation \nlearning with GAIL/BC\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 02:06:02 GMT"
    },
    "technique": "GitHub API"
  }
}