{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Apart from links above for SSD Arxiv paper and VOC dataset documentation, we referred to:\n- [Project problem statement document](https://www.charles-deledalle.fr/pages/files/ucsd_ece285_mlip/projectC_object_detection.pdf)\n- Inspired by https://github.com/amdegroot/ssd.pytorch for SSD Implementation\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9993111537141801
      ],
      "excerpt": "A PyTorch implementation of the SSD Multibox Detector for image feature extraction, based on the 2016 Arxiv paper by Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian Szegedy, Scott Reed, Cheng-Yang, and Alexander C. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8476356955367003
      ],
      "excerpt": "On UCSD Data Science and Machine Learning Cluster: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8496043989141447
      ],
      "excerpt": "denNet.pt - Trained DUDnCNN net for image denoising. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9449187648369126
      ],
      "excerpt": "Rohit Gupta \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/guptarohit994/ECE285_Graduate_Descent_SSD",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-21T23:54:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-08T07:35:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.948563959574478
      ],
      "excerpt": "A PyTorch implementation of the SSD Multibox Detector for image feature extraction, based on the 2016 Arxiv paper by Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian Szegedy, Scott Reed, Cheng-Yang, and Alexander C. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8214544284095717
      ],
      "excerpt": "2012 version of Pascal VOC dataset - well known dataset for object detection/classification/segmentation. Contains 100k images for training and validation containing bounding boxes with 20 categories of objects. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9029296412528152
      ],
      "excerpt": "On UCSD Data Science and Machine Learning Cluster: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8691303874321872
      ],
      "excerpt": "SSD_train_LearningRate.ipynb - Runs the training using a range of learning rates. Used for hyperparameter tuning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8858334207275067
      ],
      "excerpt": "SSD_Denoise_Eval.ipynb - Runs the evaluation of the the denoised images of the validation set of PascalVOC2012. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8858334207275067
      ],
      "excerpt": "SSD_Noisy_Eval.ipynb - Runs the evaluation of the the noisy images of the validation set of PascalVOC2012. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333734453758283
      ],
      "excerpt": "SSD_Denoise_Experiments.ipynb - A superset of \"SSD_Denoising.ipynb\" that runs detection of Clean, Noisy, and Denoised versions of a random image from PascalVOC2012 dataset, while providing options for changing the characteristics of the noise added. The characteristics include Mean, Standard Deviation, and Magnitude. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "data/ -  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9287743349030929
      ],
      "excerpt": "function detection_collate - stack images in 0th dimension and list of tensors with annotations for image and return in tuple format, given tuple of tensor images and list of annotations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185164497892555,
        0.9072982471773677
      ],
      "excerpt": "class VOCDetection - update and store annotation based on input image, with functions to get item, pull item, image, annotation and tensor \ndemos/ - demo gifs to show performance of SSD on noisy, clean and denoised video streams (source files for the .gifs shown above) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804426666277223,
        0.8755654004119285
      ],
      "excerpt": "*.jpeg - plots of loss functions in different scenarios \npickles/ - pickle files for easy storing of data during cross validation (different learning rates, momentums etc.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8983051700605722,
        0.9247979475942328
      ],
      "excerpt": "test1.txt - ground truth bbox vales and predictions for a selected portion of VOC dataset \ntest1_Denoise.txt - ground truth bbox vales and predictions for a selected portion of the VOC dataset AFTER noising and denoising \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9163705619486685
      ],
      "excerpt": "class Detect - enable decoding of location predictions of bboxes and apply NMS based on confidence values and threshold; restrict to tok_k output predictions to reduce noise in results quality (not actual image noise) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8055852308446876
      ],
      "excerpt": "class MultiBoxLoss - compute targets for confidence and localization and apply HNM; using a loss function that is weighted between the cross entropy loss and a smooth L1 loss (weights were found during cross validation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9380970088056394
      ],
      "excerpt": "function log_sum_exp - compute log of sum of exponent of difference between current tensor and maximum value of tensor, for unaveraged confidence loss \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8685142168203946
      ],
      "excerpt": "class Compose - definitions of different transforms to perform \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83904020873261
      ],
      "excerpt": "class ToPercentCoords - convert coordinates to percentage values of image height and width \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8107838464641907
      ],
      "excerpt": "class SSDAugmentation - itemize all the above transformation functions on every image iteratively \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ECE285 SP19",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/guptarohit994/ECE285_Graduate_Descent_SSD/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 15:58:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/guptarohit994/ECE285_Graduate_Descent_SSD/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "guptarohit994/ECE285_Graduate_Descent_SSD",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Denoising.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_train_RMSProp.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Eval.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_train.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Denoise_Experiments.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_train_Adam.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Demo.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_train_LearningRate.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_train_Momentum.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Noisy_Eval.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Denoise_Eval.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Noisy_Eval_Testset.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Denoise_Eval_Testset.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/SSD_Eval_Testset.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Denoise_Eval_Testset-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Demo-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_train_LearningRate-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Denoise_Experiments-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Denoising-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_train-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_train_RMSProp-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Denoise_Eval-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_train_Adam-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_train_Momentum-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Eval_Testset-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Eval-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Noisy_Eval-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/.ipynb_checkpoints/SSD_Noisy_Eval_Testset-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/video_experiments/SSD_VIDEO_NOISY.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/video_experiments/SSD_VIDEO.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/video_experiments/SSD_VIDEO_DENOISED.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/train_eval_test_notebooks/SSD_Eval.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/train_eval_test_notebooks/SSD_train.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/SSD_train_LearningRate.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/SSD_train_Momentum.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/LearningRates_Momentum/Plot_LearningRates_Momentum.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/LearningRates_Momentum/.ipynb_checkpoints/Plot_LearningRates_Momentum-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/Adam/PLOT_Adam.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/Adam/.ipynb_checkpoints/PLOT_Adam-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/SGD/PLOTS_SGD.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/RMSProp/PLOTS_RMS.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/RMSProp/.ipynb_checkpoints/PLOTS_RMS-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/optimization_experiments/RMSProp/.ipynb_checkpoints/PLOTS_SGD-checkpoint.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/denoising_experiments/SSD_Denoising.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/denoising_experiments/SSD_Denoise_Experiments.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/denoising_experiments/SSD_Noisy_Eval.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/denoising_experiments/SSD_Denoise_Eval.ipynb",
      "https://raw.githubusercontent.com/guptarohit994/ECE285_Graduate_Descent_SSD/master/denoising_experiments/.ipynb_checkpoints/SSD_Denoising-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To install Python dependencies and modules, use <br>\n```pip install -r requirements.txt``` <br>\n\nTo get the pretrained weights ready for use, run `tar -zxvf ssd_pretrained.pth.tar.gz` and `tar -zxvf vgg16_reducedfc.pth.tar.gz` inside the `weights/` folder.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8397331684428114
      ],
      "excerpt": "Directory structure \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308105851741
      ],
      "excerpt": "pycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308105851741
      ],
      "excerpt": "pycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308105851741
      ],
      "excerpt": "pycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308105851741
      ],
      "excerpt": "pycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308105851741
      ],
      "excerpt": "pycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9032837796845528,
        0.8927308105851741
      ],
      "excerpt": "modules/ - \npycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927308105851741
      ],
      "excerpt": "pycache/ - .pyc files for Python interpreter to compile the source to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8330640032164549
      ],
      "excerpt": "class ToTensor - shift image to GPU \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8774999352689076,
        0.8249078121274219
      ],
      "excerpt": "Run SSD_train.ipynb notebook to train the SSD model on the PascalVOC2012 dataset. \nRun SSD_Eval.ipynb notebook to evaluate the SSD model on the PascalVOC2012 validation set. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8703567143081639
      ],
      "excerpt": "config.py - configures VOC dataset with source directory, mean values, color ranges and SSD parameters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816042835705462
      ],
      "excerpt": "results/ - result files for each class \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8677701242427809
      ],
      "excerpt": "init.py - import all files in pwd \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8677701242427809
      ],
      "excerpt": "init.py - import all files in pwd \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8677701242427809
      ],
      "excerpt": "init.py - import all files in pwd \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924976426181745
      ],
      "excerpt": "utils/ - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544511639262746
      ],
      "excerpt": "init.py - import all in pwd \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8162707531028888,
        0.8290819586536343
      ],
      "excerpt": "class ToAbsoluteCoords - convert lengths (widths, heights) to absolute coordinates \nclass ToPercentCoords - convert coordinates to percentage values of image height and width \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8196567868111667
      ],
      "excerpt": "weights/ - *.pth files containing pretrained weights of SSD for the VOC 2012 dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8102450367487194
      ],
      "excerpt": "opts.py - Contains default variables, parameters, and paths to run experiments. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/guptarohit994/ECE285_Graduate_Descent_SSD/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ECE 285 UCSD - Spring '19 - Final project",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ECE285_Graduate_Descent_SSD",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "guptarohit994",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/guptarohit994/ECE285_Graduate_Descent_SSD/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 15:58:11 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "ucsd",
      "single-shot-detection",
      "single-shot-multibox-detector",
      "boxed-net"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Run **SSD_Demo.ipynb** notebook to run Single-Shot Detection on a random image from the PascalVOC2012 dataset.\n",
      "technique": "Header extraction"
    }
  ]
}