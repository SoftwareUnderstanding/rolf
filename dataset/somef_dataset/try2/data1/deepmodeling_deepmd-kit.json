{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1707.01478\n[2]: https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.120.143001\n[3]: https://arxiv.org/abs/1805.09003\n[4]: https://aip.scitation.org/doi/full/10.1063/1.5027645",
      "https://arxiv.org/abs/1805.09003\n[4]: https://aip.scitation.org/doi/full/10.1063/1.5027645"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The project DeePMD-kit is licensed under [GNU LGPLv3.0](./LICENSE).\nIf you use this code in any future publications, please cite this using \n``Han Wang, Linfeng Zhang, Jiequn Han, and Weinan E. \"DeePMD-kit: A deep learning package for many-body potential energy representation and molecular dynamics.\" Computer Physics Communications 228 (2018): 178-184.``\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "preferred-citation:\n  type: article\n  authors:\n  - family-names: \"Wang\"\n    given-names: \"Han\"\n  - family-names: \"Zhang\"\n    given-names: \"Linfeng\"\n  - family-names: \"Han\"\n    given-names: \"Jiequn\"\n  - family-names: \"E\"\n    given-names: \"Weinan\"\n  doi: \"10.1016/j.cpc.2018.03.016\"\n  journal: \"Computer Physics Communications\"\n  month: 7\n  start: 178 # First page number\n  end: 184 # Last page number\n  title: \"DeePMD-kit: A deep learning package for many-body potential energy representation and molecular dynamics\"\n  volume: 228\n  year: 2018",
      "technique": "File Exploration"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmodeling/deepmd-kit",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeePMD-kit Contributing Guide\nWelcome to DeePMD-kit!\nWhat you can contribute\nYou can either make a code contribution, help improve our document or offer help to other users. Your help is always appreciated. Come and have fun!\nCode contribution\nYou can start from any one of the following items to help improve deepmd-kit\n\nSmash a bug\nImplement a feature or add a patch, whatever you think deepmd-kit is missing\nBrowse issues, find an issue labeled enhancement or bug, and help to solve it.\n\nSee here for some before-hand heads-up. \nSee here to learn how to contribute.\nDocument improvement\nYou can start from any one of the following items to help improve DeePMD-kit Docs:\n\nFix typos or format (punctuation, space, indentation, code block, etc.)\nFix or update inappropriate or outdated descriptions\nAdd missing content (sentence, paragraph, or a new document)\nTranslate docs changes from English to Chinese\n\nOffer help\nYou can help other users of deepmd-kit in the following way\n\nSubmit, reply to, and resolve issues\n(Advanced) Review Pull Requests created by others\n\nBefore you contribute\nOverview of DeePMD-kit\nCurrently, we maintain two main branch:\n- master: stable branch with version tag\n- devel :  branch for developers\nDeveloper guide\nSee here for coding conventions, API and other needs-to-know of the code.\nHow to contribute\nPlease perform the following steps to create your Pull Request to this repository. If don't like to use commands, you can also use GitHub Desktop, which is easier to get started. Go to git documentation if you want to really master git.\nStep 1: Fork the repository\n\nVisit the project: https://github.com/deepmodeling/deepmd-kit\nClick the Fork button on the top right and wait it to finish.\n\nStep 2: Clone the forked repository to local storage and set configurations\n\n\nClone your own repo, not the public repo (from deepmodeling) ! And change the branch to devel.\n    ``bash\n    git clone https://github.com/$username/deepmd-kit.git\n    # Replace$username` with your GitHub ID\ngit checkout devel\n```\n\n\nAdd deepmodeling's repo as your remote repo, we can name it \"upstream\". And fetch upstream's latest codes to your workstation.\n    ```bash\n    git remote add upstream https://github.com/deepmodeling/deepmd-kit.git\n    # After you add a remote repo, your local repo will be automatically named \"origin\".\ngit fetch upstream\nIf your current codes are behind the latest codes, you should merge latest codes first.\nNotice you should merge from \"devel\"!\ngit merge upstream/devel\n```\n\n\nModify your codes and design unit tests.\n\n\nCommit your changes\n    bash\n    git status # Checks the local status\n    git add &lt;file&gt; ... # Adds the file(s) you want to commit. If you want to commit all changes, you can directly use `git add.`\n    git commit -m \"commit-message: update the xx\"\n\n\nPush the changed codes to your original repo on github. \n    bash\n    git push origin devel\n\n\nAlternatively: Create a new branch\n\n\nGet your local master up-to-date with upstream/master.\nbash\ncd $working_dir/deepmd-kit\ngit fetch upstream\ngit checkout master\ngit rebase upstream/master\n\n\nCreate a new branch based on the master branch.\nbash\ngit checkout -b new-branch-name\n\n\nModify your codes and design unit tests.\n\n\nCommit your changes\nbash\ngit status # Checks the local status\ngit add &lt;file&gt; ... # Adds the file(s) you want to commit. If you want to commit all changes, you can directly use `git add.`\ngit commit -m \"commit-message: update the xx\"\n\n\nKeep your branch in sync with upstream/master\n```bash\nWhile on your new branch\ngit fetch upstream\ngit rebase upstream/master\n```\n\n\nPush your changes to the remote\nbash\ngit push -u origin new-branch-name # \"-u\" is used to track the remote branch from origin\n\n\nStep 3: Create a pull request\n\nVisit your fork at https://github.com/$username/deepmd-kit (replace $username with your GitHub ID)\nClick pull requests, followed by New pull request and Compare &amp; pull request to create your PR.\n\nNow, your PR is successfully submitted! After this PR is merged, you will automatically become a contributor to DeePMD-kit.\nContact us\nE-mail: contact@deepmodeling.org",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-12-12T15:23:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T16:30:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8930901044020226
      ],
      "excerpt": "Highlighted features \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.872110511128802
      ],
      "excerpt": "Deep Potential in a nutshell \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9862504391226056,
        0.8870641662079949,
        0.9824138288160689,
        0.9002667399404215,
        0.8510596884519842
      ],
      "excerpt": "DeePMD-kit is a package written in Python/C++, designed to minimize the effort required to build deep learning based model of interatomic potential energy and force field and to perform molecular dynamics (MD). This brings new hopes to addressing the accuracy-versus-efficiency dilemma in molecular simulations. Applications of DeePMD-kit span from finite molecules to extended systems and from metallic systems to chemically bonded systems.  \nFor more information, check the documentation. \nModel compression. Accelerate the efficiency of model inference for 4-15 times. \nNew descriptors. Including se_e2_r and se_e3. \nHybridization of descriptors. Hybrid descriptor constructed from concatenation of several descriptors. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8718070518750333
      ],
      "excerpt": "Training and inference the dipole (vector) and polarizability (matrix). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714105080982228
      ],
      "excerpt": "interfaced with TensorFlow, one of the most popular deep learning frameworks, making the training process highly automatic and efficient, in addition Tensorboard can be used to visualize training procedure. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8701824885176054,
        0.8368761096610637,
        0.9759901157304463,
        0.9973233739677925,
        0.9991454230666793,
        0.9980624696899201,
        0.9790003269238992
      ],
      "excerpt": "implements the Deep Potential series models, which have been successfully applied to  finite and extended systems including organic molecules, metals, semiconductors, and insulators, etc. \nimplements MPI and GPU supports, makes it highly efficient for high performance parallel and distributed computing. \nhighly modularized, easy to adapt to different descriptors for deep learning based potential energy models. \nThe goal of Deep Potential is to employ deep learning techniques and realize an inter-atomic potential energy model that is general, accurate, computationally efficient and scalable. The key component is to respect the extensive and symmetry-invariant properties of a potential energy model by assigning a local reference frame and a local environment to each atom. Each environment contains a finite number of atoms, whose local coordinates are arranged in a symmetry preserving way. These local coordinates are then transformed, through a sub-network, to a so-called atomic energy. Summing up all the atomic energies gives the potential energy of the system. \nThe initial proof of concept is in the [Deep Potential][1] paper, which employed an approach that was devised to train the neural network model with the potential energy only. With typical ab initio molecular dynamics (AIMD) datasets this is insufficient to reproduce the trajectories. The Deep Potential Molecular Dynamics ([DeePMD][2]) model overcomes this limitation. In addition, the learning process in DeePMD improves significantly over the Deep Potential method thanks to the introduction of a flexible family of loss functions. The NN potential constructed in this way reproduces accurately the AIMD trajectories, both classical and quantum (path integral), in extended and finite systems, at a cost that scales linearly with system size and is always several orders of magnitude lower than that of equivalent AIMD simulations. \nAlthough being highly efficient, the original Deep Potential model satisfies the extensive and symmetry-invariant properties of a potential energy model at the price of introducing discontinuities in the model. This has negligible influence on a trajectory from canonical sampling but might not be sufficient for calculations of dynamical and mechanical properties. These points motivated us to develop the Deep Potential-Smooth Edition ([DeepPot-SE][3]) model, which replaces the non-smooth local frame with a smooth and adaptive embedding network. DeepPot-SE shows great ability in modeling many kinds of systems that are of interests in the fields of physics, chemistry, biology, and materials science. \nIn addition to building up potential energy models, DeePMD-kit can also be used to build up coarse-grained models. In these models, the quantity that we want to parameterize is the free energy, or the coarse-grained potential, of the coarse-grained particles. See the [DeePCG paper][4] for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.9806628490043687
      ],
      "excerpt": "Data conversion \nPrepare data with dpdata \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8779137674681573
      ],
      "excerpt": "Known limitations of using GPUs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865,
        0.860059181823877,
        0.860059181823877
      ],
      "excerpt": "Freeze and Compress \nFreeze a model \nCompress a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Calculate Model Deviation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553549982554667,
        0.8351478810897823
      ],
      "excerpt": "The code is organized as follows: \ndata/raw: tools manipulating the raw data files. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Model compatibility \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9049648020359063
      ],
      "excerpt": "The temperature undulates violently during early stages of MD \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.875900195445892
      ],
      "excerpt": "How to control the number of nodes used by a job? \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A deep learning package for many-body potential energy representation and molecular dynamics",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://deepmd.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please follow our [GitHub](https://github.com/deepmodeling/deepmd-kit) webpage to download the [latest released version](https://github.com/deepmodeling/deepmd-kit/tree/master) and [development version](https://github.com/deepmodeling/deepmd-kit/tree/devel).\n\nDeePMD-kit offers multiple installation methods. It is recommend using easily methods like [offline packages](doc/install/easy-install.md#offline-packages), [conda](doc/install/easy-install.md#with-conda) and [docker](doc/install/easy-install.md#with-docker). \n\nOne may manually install DeePMD-kit by following the instuctions on [installing the Python interface](doc/install/install-from-source.md#install-the-python-interface) and [installing the C++ interface](doc/install/install-from-source.md#install-the-c-interface). The C++ interface is necessary when using DeePMD-kit with LAMMPS, i-PI or GROMACS.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmodeling/deepmd-kit/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 255,
      "date": "Tue, 28 Dec 2021 17:34:52 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmodeling/deepmd-kit/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmodeling/deepmd-kit",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/data/raw/raw_to_set.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/source/lmp/Install.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/source/install/test_cc.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/source/install/build_lammps.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/source/install/test_cc_local.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/source/install/build_cc.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/examples/methane/run.sh",
      "https://raw.githubusercontent.com/deepmodeling/deepmd-kit/master/examples/water/gmx/md.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please follow our [GitHub](https://github.com/deepmodeling/deepmd-kit) webpage to download the [latest released version](https://github.com/deepmodeling/deepmd-kit/tree/master) and [development version](https://github.com/deepmodeling/deepmd-kit/tree/devel).\n\nDeePMD-kit offers multiple installation methods. It is recommend using easily methods like [offline packages](doc/install/easy-install.md#offline-packages), [conda](doc/install/easy-install.md#with-conda) and [docker](doc/install/easy-install.md#with-docker). \n\nOne may manually install DeePMD-kit by following the instuctions on [installing the Python interface](doc/install/install-from-source.md#install-the-python-interface) and [installing the C++ interface](doc/install/install-from-source.md#install-the-c-interface). The C++ interface is necessary when using DeePMD-kit with LAMMPS, i-PI or GROMACS.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9704251512141436
      ],
      "excerpt": "Download and install \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9226309005062402,
        0.9906963860897631,
        0.999833231880651,
        0.920130691921803,
        0.999833231880651,
        0.9082559314946512
      ],
      "excerpt": "Easy install \nInstall from source code \nInstall LAMMPS \nInstall i-PI \nInstall GROMACS \nBuilding conda packages \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.856628270924533
      ],
      "excerpt": "Integrate with third-party packages \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9578072502415834
      ],
      "excerpt": "deepmd: DeePMD-kit python modules. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.823658471783466
      ],
      "excerpt": "source/gmx: source code of Gromacs plugin. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8006205298172453
      ],
      "excerpt": "Split of training and validation dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8483819940059046
      ],
      "excerpt": "Training a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.827980313422777
      ],
      "excerpt": "TensorBoard Usage \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8764063352976937
      ],
      "excerpt": "Test a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8838148168639296
      ],
      "excerpt": "examples: examples. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmodeling/deepmd-kit/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Cuda",
      "CMake",
      "Shell",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU Lesser General Public License v3.0",
      "url": "https://api.github.com/licenses/lgpl-3.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                   GNU LESSER GENERAL PUBLIC LICENSE\\n                       Version 3, 29 June 2007\\n\\n Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\\n Everyone is permitted to copy and distribute verbatim copies\\n of this license document, but changing it is not allowed.\\n\\n\\n  This version of the GNU Lesser General Public License incorporates\\nthe terms and conditions of version 3 of the GNU General Public\\nLicense, supplemented by the additional permissions listed below.\\n\\n  0. Additional Definitions.\\n\\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\\nGeneral Public License.\\n\\n  \"The Library\" refers to a covered work governed by this License,\\nother than an Application or a Combined Work as defined below.\\n\\n  An \"Application\" is any work that makes use of an interface provided\\nby the Library, but which is not otherwise based on the Library.\\nDefining a subclass of a class defined by the Library is deemed a mode\\nof using an interface provided by the Library.\\n\\n  A \"Combined Work\" is a work produced by combining or linking an\\nApplication with the Library.  The particular version of the Library\\nwith which the Combined Work was made is also called the \"Linked\\nVersion\".\\n\\n  The \"Minimal Corresponding Source\" for a Combined Work means the\\nCorresponding Source for the Combined Work, excluding any source code\\nfor portions of the Combined Work that, considered in isolation, are\\nbased on the Application, and not on the Linked Version.\\n\\n  The \"Corresponding Application Code\" for a Combined Work means the\\nobject code and/or source code for the Application, including any data\\nand utility programs needed for reproducing the Combined Work from the\\nApplication, but excluding the System Libraries of the Combined Work.\\n\\n  1. Exception to Section 3 of the GNU GPL.\\n\\n  You may convey a covered work under sections 3 and 4 of this License\\nwithout being bound by section 3 of the GNU GPL.\\n\\n  2. Conveying Modified Versions.\\n\\n  If you modify a copy of the Library, and, in your modifications, a\\nfacility refers to a function or data to be supplied by an Application\\nthat uses the facility (other than as an argument passed when the\\nfacility is invoked), then you may convey a copy of the modified\\nversion:\\n\\n   a) under this License, provided that you make a good faith effort to\\n   ensure that, in the event an Application does not supply the\\n   function or data, the facility still operates, and performs\\n   whatever part of its purpose remains meaningful, or\\n\\n   b) under the GNU GPL, with none of the additional permissions of\\n   this License applicable to that copy.\\n\\n  3. Object Code Incorporating Material from Library Header Files.\\n\\n  The object code form of an Application may incorporate material from\\na header file that is part of the Library.  You may convey such object\\ncode under terms of your choice, provided that, if the incorporated\\nmaterial is not limited to numerical parameters, data structure\\nlayouts and accessors, or small macros, inline functions and templates\\n(ten or fewer lines in length), you do both of the following:\\n\\n   a) Give prominent notice with each copy of the object code that the\\n   Library is used in it and that the Library and its use are\\n   covered by this License.\\n\\n   b) Accompany the object code with a copy of the GNU GPL and this license\\n   document.\\n\\n  4. Combined Works.\\n\\n  You may convey a Combined Work under terms of your choice that,\\ntaken together, effectively do not restrict modification of the\\nportions of the Library contained in the Combined Work and reverse\\nengineering for debugging such modifications, if you also do each of\\nthe following:\\n\\n   a) Give prominent notice with each copy of the Combined Work that\\n   the Library is used in it and that the Library and its use are\\n   covered by this License.\\n\\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\\n   document.\\n\\n   c) For a Combined Work that displays copyright notices during\\n   execution, include the copyright notice for the Library among\\n   these notices, as well as a reference directing the user to the\\n   copies of the GNU GPL and this license document.\\n\\n   d) Do one of the following:\\n\\n       0) Convey the Minimal Corresponding Source under the terms of this\\n       License, and the Corresponding Application Code in a form\\n       suitable for, and under terms that permit, the user to\\n       recombine or relink the Application with a modified version of\\n       the Linked Version to produce a modified Combined Work, in the\\n       manner specified by section 6 of the GNU GPL for conveying\\n       Corresponding Source.\\n\\n       1) Use a suitable shared library mechanism for linking with the\\n       Library.  A suitable mechanism is one that (a) uses at run time\\n       a copy of the Library already present on the user\\'s computer\\n       system, and (b) will operate properly with a modified version\\n       of the Library that is interface-compatible with the Linked\\n       Version.\\n\\n   e) Provide Installation Information, but only if you would otherwise\\n   be required to provide such information under section 6 of the\\n   GNU GPL, and only to the extent that such information is\\n   necessary to install and execute a modified version of the\\n   Combined Work produced by recombining or relinking the\\n   Application with a modified version of the Linked Version. (If\\n   you use option 4d0, the Installation Information must accompany\\n   the Minimal Corresponding Source and Corresponding Application\\n   Code. If you use option 4d1, you must provide the Installation\\n   Information in the manner specified by section 6 of the GNU GPL\\n   for conveying Corresponding Source.)\\n\\n  5. Combined Libraries.\\n\\n  You may place library facilities that are a work based on the\\nLibrary side by side in a single library together with other library\\nfacilities that are not Applications and are not covered by this\\nLicense, and convey such a combined library under terms of your\\nchoice, if you do both of the following:\\n\\n   a) Accompany the combined library with a copy of the same work based\\n   on the Library, uncombined with any other library facilities,\\n   conveyed under the terms of this License.\\n\\n   b) Give prominent notice with the combined library that part of it\\n   is a work based on the Library, and explaining where to find the\\n   accompanying uncombined form of the same work.\\n\\n  6. Revised Versions of the GNU Lesser General Public License.\\n\\n  The Free Software Foundation may publish revised and/or new versions\\nof the GNU Lesser General Public License from time to time. Such new\\nversions will be similar in spirit to the present version, but may\\ndiffer in detail to address new problems or concerns.\\n\\n  Each version is given a distinguishing version number. If the\\nLibrary as you received it specifies that a certain numbered version\\nof the GNU Lesser General Public License \"or any later version\"\\napplies to it, you have the option of following the terms and\\nconditions either of that published version or of any later version\\npublished by the Free Software Foundation. If the Library as you\\nreceived it does not specify a version number of the GNU Lesser\\nGeneral Public License, you may choose any version of the GNU Lesser\\nGeneral Public License ever published by the Free Software Foundation.\\n\\n  If the Library as you received it specifies that a proxy can decide\\nwhether future versions of the GNU Lesser General Public License shall\\napply, that proxy\\'s public statement of acceptance of any version is\\npermanent authorization for you to choose that version for the\\nLibrary.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<span style=\"font-size:larger;\">DeePMD-kit Manual</span>",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmd-kit",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmodeling",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmodeling/deepmd-kit/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Enhancements\r\n- bump default LAMMPS version to `stable_29Sep2021` (#1176)\r\n- improved documentation (#1184 #1191)\r\n\r\nBug fixings\r\n- add `start_pref_pf` and `limit_pref_pf` to `loss` Argument (#1200)\r\n- Fix the bug when type_map has only one element (#1196)\r\n- failure of hybrid descriptor (#1214)\r\n- fix single precision error in the model compression (#1212)\r\n\r\n[Download manual](https://docs.deepmodeling.org/_/downloads/deepmd/en/v2.0.3/pdf/)",
        "dateCreated": "2021-10-15T02:31:09Z",
        "datePublished": "2021-10-15T02:34:29Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.3",
        "name": "v2.0.3",
        "tag_name": "v2.0.3",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.3",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/51404562",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.3"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- support the plugin for GROMACS (#1160 #1169 )\r\n- support the `init-frz-model` option for `se_r` and `se_t` (#1144)\r\n- support data in hdf5 format (#1163)\r\n- automatic batch size for the inference of DP (#1165 #1154 #1173 )\r\n- Allow to scale LR in parallel training in different ways. (#1167)\r\n\r\nEnhancement for developers:\r\n-  support descriptor plugin (#1118 #1143 )\r\n-  support lammps 20210831 (#1129)\r\n\r\nBug fixings:\r\n- explicitly set lammps' neighbor request to full to fix bug #1109\r\n- Add init-frz-model command support to the frozen model generated by this command (#1137)\r\n- Add error message for repeated model compression (#1136)\r\n- doc related improvements and bug fixings (#1141 #1131 #1147 #1156 #1153 #1171 )\r\n- Fix freezing error on checkpoint from parallel training. (#1166)",
        "dateCreated": "2021-09-29T08:48:37Z",
        "datePublished": "2021-09-29T08:54:13Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.2",
        "name": "v2.0.2",
        "tag_name": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.2",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/50445811",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.2"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- correct heat flux calculation: interface for deepmd with the centroids atoms, full 3x3 \"atomic-virial\" (#1093). \r\n- Enable init-frz-model support for the original model (#1102 #1107 )\r\n- support init-frz-model for hybrid descriptor (#1112) \r\n\r\nEnhancements:\r\n- use `np.testing.assert_almost_equal` for array comparing (#1059)\r\n- set `allow_growth` in `default_tf_session_config` (#1067)\r\n- Enable parallel training UT in GitHub CI. (#1075)\r\n- create cross-references in docstring (#1083)\r\n- add ABC for descriptors (#1081)\r\n- merge duplicated NeighborStat.get_stat (#1103)\r\n\r\nBug fixings:\r\n- fix hybrid descriptor training error (#1052)\r\n- bugs and memory issues in UTs (#1056 #1066 )\r\n- copy `all_virial` for float precision (#1069) \r\n- fix building problem on macos (#1071)\r\n- use @loader_path on macos instead of $ORIGIN (#1078)\r\n- Revert \"get library extension suffix from built-in method\" #1072\r\n- undo reset lcurve.out during the model compression process (#1080)\r\n- fix typo: `lcueve.out`->`lcurve.out` (#1077)\r\n- create model compression checkpoint, avoid overwriting original checkpoint (#1076)\r\n- Fix shape mismatch when type_embedding is enabled and type_one_side is disabled (#1074 )\r\n- reduce `rcut` and `sel` in the example of `se_e3` (#1082) \r\n- Fix a potential slice bug in se_t descriptor (#1087) \r\n- make compress work for hybrid descriptor composed of se_e2_a (#1094)\r\n- Fix gradient not averaged when parallel training. (#1104) \r\n- fix bug of single precision model compression (#1110)\r\n- fix bug of single precision transfer (#1111)\r\n- fix LAMMPS_VERSION_NUMBER condition (#1116) \r\n- Fix missing `std::numeric_limits` (#1113) \r\n- fix data_modifier OOM problem when set size is too large (#1117)\r\n- fix bugs of dipole charge modifier: binary str and missing frozen node (#1124 )\r\n- fix \"Call to method DeepTensor.__init__ with too many arguments\" (#1125)",
        "dateCreated": "2021-09-10T14:12:15Z",
        "datePublished": "2021-09-10T14:29:00Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.1",
        "name": "v2.0.1",
        "tag_name": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.1",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/49352138",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.1"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Breaking changes to v1.3\r\n- Training parameters: Several training parameters have been updated. Original training data is splited into training data and validation data. Please read the document to apply the changes. Old styles can still work but are not recommended.\r\n- Model inference: Old models trained by v1 will not work in v2. Run `dp convert-from` to convert old models to v2.\r\n- Python interface: `deepmd.DeepPot` has been moved to `deepmd.infer.DeepPot`. <!-- add an alias? -->\r\n- C++ interface: `NNPInter` has been renamed to `deepmd::DeepPot` and `NNPInter.h` has been renamed to `DeepPot.h`. Use `-ldeepmd_cc` to link instead.\r\n\r\nNew features\r\n- [Model compression](https://arxiv.org/abs/2107.02103) (#350 #586 #610 #921 #948 #956 #1000 #1008 #1020 #1043) \r\n- Parallel training (#892 #905 #913 #1030 #1032) (Bytedance)\r\n- ROCm device support (#656 )\r\n- New descriptor: three body embedding (`se_e3`)\r\n- Hybridization of descriptors (`hybrid`)\r\n- Type embedding\r\n- Training and inference the dipole (vector) and polarizability (matrix). (#495 #538 #927)\r\n- Support derivatives of the tensor properties. (#805)\r\n- Split of training and validation dataset. \r\n- Model deviation for virial\r\n- Add subcommand and python interface to calculate model-deviation (#715)\r\n- Automatically determine the sel from the training data. (#831)\r\n- Building with lammps with plugin mode (#930 #945)\r\n\r\nPerformance improvement:\r\n- More efficient training: all customized OPs are implemented with GPU.\r\n- MPI support for atomic model deviation #628\r\n- speedup ROCm kernels which use atomicAdd (#809 #815 ) (from ByteDance)\r\n- speedup CUDA kernels (use atomicAdd inside) by reducing the global memory write (#811)\r\n- speedup tabulate cuda kernel by reducing shm using (#830) (Bytedance)\r\n- speedup `format_nlist_b` (#832 #845)\r\n- speedup `scan_nlist` kernel  (#1028)\r\n\r\nEnhancements\r\n- Strict argument check in the input script.\r\n- Auto conversion of input file to v2.0 compatibility\r\n- Append out_file when lammps restarts #640\r\n- Document and examples for the C++ interface #652 #663\r\n- Instructions for the i-pi #660\r\n- Document for the network size and sel #657\r\n- Use fmod to wrap the coord of atoms (solve slow PBC) (#741)\r\n- bit operations to encode neighbor information\r\n- add CUDA/ROCM buidling documents (#739)\r\n- add type-embedding developer doc (#762 #967)\r\n- add model compression support for models with exclude_types feature (#754)\r\n- improve the doc and user interface of model compression (#772)\r\n- support converting models generated in v1.3 to 2.0 compatibility (#725)\r\n- give a default value to T and convert models from v1.2 to 2.0 compatibility (#789)\r\n- improved documents for conda (#798 #925)\r\n- throw a message if tf runtime is incompatible (#797)\r\n- capture OOM and print debug message (#801)\r\n- add message for DecodeError raised when using model compression (#839)\r\n- Passing error to TF instead of exit (#918)\r\n- refactor docs (#952)\r\n- add an example of `nopbc` and related docs (#994)\r\n- add `dp --version` (#995)\r\n- add the argument `tensorboard_freq` to control sampling ratio during training. (#996)\r\n- add sphinx plugins `viewcode` and `intersphinx` (#997)\r\n- generate Python API document automatically (#998)\r\n- give a clear message if `model.get_ntypes()<data.get_ntypes()` (#1016)\r\n- add docstring for `descrpt/se_e2_a` (#1017)\r\n- add docstring for `fit/ener` (#1024)\r\n- add `InputNlist` into API doc (#1009)\r\n- save checkpoint files with step and keep recent files (#1031)\r\n\r\n\r\nImprovement of the code for developers\r\n- Support version of the model. Easily check model compatability\r\n- Clear and pythonic python interface\r\n- C++ lib that can be tested independently\r\n- C++ API that can be tested independently\r\n- OP supports multi-device.\r\n- Added `deepmd` namespace for the C++ API\r\n- UT for Cuda/ROCm code (#569)\r\n- UT for model compression (#586)\r\n- UT for prod_force/virial ops (#703 #741)\r\n- CI test Lammps build (#600)\r\n- allow c++ tests to run without internet (#785)\r\n- build low and high precision at the same time (#879)\r\n- support to specify CUDA/ROCm root in python pkg building (#834) (Bytedance)\r\n- use cached Session to speed up py tests (#833)\r\n- remove cub include for CUDA>=11 (#866)\r\n- Add Errcheck after every kernel function runs And merge redundant code (#855)\r\n- adapt changes to auditwheel directory in manylinux (#889)\r\n- enhance the cli to generate doc json file (#891)\r\n- raise warning before training if `sel` is not enough (#914)\r\n- make native MD compatible with v2.0 (#950)\r\n- fix type hints and add doc for `exclude_types` (#1005)\r\n- use TF's built-in method to get numpy dtype (#1035)\r\n\r\n\r\nBug fixings:\r\n- Remove `using namespace std`. Solve compiling compatability problem.\r\n- `cuda` memory access error #566\r\n- Relative force model deviation is not copied back at single precision #599\r\n- Correct way of allocating memory in float precision #612\r\n- Fix TB logdir remove bug #617\r\n- Illegal nlist #680\r\n- Bug in `prod_virial_grad` that causes wrong results when training with virials #685\r\n- Uniform random seed #691\r\n- Illegal nlist #680\r\n- Bug in `prod_virial_grad` that causes wrong results when training with virials #685\r\n- Uniform random seed #691\r\n- fix bug of adding int to a None random seed (#705)\r\n- reuse the zero layer rather than building a new one (#714)\r\n- fix bug in CI (#739)\r\n- fix bug 824 and Synchronize updates to CUDA cod (#828)\r\n- Fix the empty neighbor distance array in neighbor_stat.py (#882)\r\n- fix InvalidArgumentError caused by zero sel and optimize zero matrix (#900)\r\n- fix 'NoneType' has no len() in auto_sel (#911)\r\n- set input `DeepmdData.type_map` to input `type_map` (#924)\r\n- Fix member declartion of `deepmd` and `deepmd.entrypoints`. (#922)\r\n- add aliases to Arguments (#933)\r\n- fix bug of gelu activation function (#939)\r\n- convert `decay_rate` to `stop_lr` from old inputs (#949)\r\n- only enable link what you use on GNU compilers (#962)\r\n- Do not find protobuf for python (#963)\r\n- fix an error in stress by ase interface  (#964)\r\n- remove bare `except` and limit the `try` clause (#977)\r\n- fix python cmake error (#976)\r\n- Instantiate RunOptions first when training. (#1019)\r\n- Fix complier type in cmake: `CMAKE_COMPILER_IS_GNUCXX` (#1038)\r\n- other cleanups of the code (#968 #970 #975 #999 #1004 #1002 #1001 #1010 #1014 #1012 #1011 #1021 #1036 #1037)\r\n\r\n\r\n## Contributors\r\n* Han Bao\r\n* Roberto Car\r\n* Junhan Chang\r\n* Yixiao Chen\r\n* Ye Ding\r\n* Weinan E\r\n* Jiequn Han\r\n* Li'ang Huang\r\n* Weile Jia\r\n* Zeyu Li\r\n* Ziyao Li\r\n* Yinnian Lin\r\n* Yihao Liu\r\n* Xinzijian Liu\r\n* Denghui Lu\r\n* Mari\u00e1n Rynik\r\n* Shaochen Shi\r\n* Ping Tuo\r\n* Bo Wang\r\n* Haidi Wang\r\n* Han Wang\r\n* Yingze Wang\r\n* Yu Xia\r\n* Fengbo Yuan\r\n* Jiabin Yang\r\n* Haotian Ye\r\n* Jinzhe Zeng\r\n* Duo Zhang\r\n* Linfeng Zhang\r\n* Yuzhi Zhang",
        "dateCreated": "2021-08-28T00:15:38Z",
        "datePublished": "2021-08-28T00:20:02Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0",
        "name": "v2.0.0",
        "tag_name": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/48602630",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- parallel training (#892 #905 #913) (Bytedance)\r\n- automatically determine the `sel` from the training data. (#831)\r\n- build low and high precision at the same time (#879)\r\n\r\nPerformance improvement:\r\n- speedup tabulate cuda kernel by reducing shm using (#830) (Bytedance)\r\n- speedup format_nlist_b (#832 #845)\r\n\r\nEnhancements:\r\n- support to specify CUDA/ROCm root in python pkg building (#834) (Bytedance)\r\n- use cached Session to speed up py tests (#833)\r\n- add message for DecodeError raised when using model compression (#839)\r\n- remove cub include for CUDA>=11 (#866)\r\n- Add Errcheck after every kernel function runs And merge redundant code (#855)\r\n- adapt changes to auditwheel directory in manylinux (#889)\r\n- enhance the cli to generate doc json file (#891)\r\n- raise warning before training if sel is not enough (#914)\r\n\r\nBug fixings:\r\n- fix bug 824 and Synchronize updates to CUDA cod (#828)\r\n- Fix the empty neighbor distance array in neighbor_stat.py  (#882)\r\n- fix `InvalidArgumentError` caused by zero `sel` and optimize zero matrix (#900)\r\n- fix 'NoneType' has no len() in `auto_sel` (#911)\r\n\r\n",
        "dateCreated": "2021-08-02T03:57:49Z",
        "datePublished": "2021-08-04T08:37:55Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.b4",
        "name": "v2.0.0-beta.4",
        "tag_name": "v2.0.0.b4",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.b4",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/47276800",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.b4"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New feature:\r\n-  derivatives for deep tensor (#805)\r\n\r\nPerformance improvement:\r\n- speedup ROCm kernels which use atomicAdd (#809 #815 ) (from ByteDance)  \r\n- speedup CUDA kernels (use atomicAdd inside)  by reducing the global memory write (#811)\r\n\r\nEnhancement:\r\n- add type-embedding developer doc (#762)\r\n- add model compression support for  models with exclude_types feature (#754)\r\n- improve the doc and user interface of model compression (#772)\r\n- allow c++ tests to run without internet (#785)\r\n- support converting models generated in v1.3 to 2.0 compatibility (#725)\r\n- give a default value to T and convert models from v1.2 to 2.0 compatibility (#789)\r\n- improved documents for conda (#798)\r\n- throw a message if tf runtime is incompatible (#797)\r\n- capture OOM and print debug message (#801)\r\n\r\nBug fixings\r\n- fix bug of custom op's multiple initialization (#812)\r\n- fix bug of empty input in gelu.cu  (#800)\r\n- fix model compression bug of zero environment matrix (#808)\r\n- `box.npy` is not necessary for nopbc (#810)\r\n- fill rij with zero (#818)\r\n- `NOT_LOADABLE` should be `tuple` (#825)\r\n\r\n\r\n",
        "dateCreated": "2021-07-04T14:12:13Z",
        "datePublished": "2021-07-05T00:42:54Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.b3",
        "name": "v2.0.0-beta.3",
        "tag_name": "v2.0.0.b3",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.b3",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/45685262",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.b3"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- Add subcommand and python interface to calculate model-deviation (#715)\r\n\r\nEnhancements\r\n- Use fmod to wrap the coord of atoms. UT for force/virial ops (#741)\r\n- UT for model devi C++ interface (#731)\r\n- add CUDA/ROCM buidling documents (#739)\r\n- add op unittests for prod_force, prod_virial, prod_force_grad and prod_virial_grad (#703)\r\n\r\nBug fixings:\r\n- fix bug of adding int to a None random seed (#705)\r\n- reuse the zero layer rather than building a new one (#714)\r\n- fix CI (#739)\r\n\n\n\n",
        "dateCreated": "2021-06-15T02:07:52Z",
        "datePublished": "2021-06-15T23:44:27Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.b2",
        "name": "v2.0.0-beta.2",
        "tag_name": "v2.0.0.b2",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.b2",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/44681463",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.b2"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New hardware support:\r\n- ROCM support\r\n\r\nEnhancement:\r\n- Document and examples for the C++ interface\r\n- Instructions for the i-pi\r\n- Document for the network size and `sel`\r\n\r\nBug fixing:\r\n- Illegal nlist #680 \r\n- Bug in `prod_virial_grad` that causes wrong results when training with virials #685 \r\n- Uniform random seed #691 \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n\n\n",
        "dateCreated": "2021-06-03T00:13:45Z",
        "datePublished": "2021-06-03T08:14:19Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.b1",
        "name": "v2.0.0-beta.1",
        "tag_name": "v2.0.0.b1",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.b1",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/44026139",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.b1"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Increment to v2.0.0-alpha:\r\n\r\nNew features:\r\n- Atom type embedding\r\n- Model deviation for virial\r\n\r\nEnhancement:\r\n- Improved documentation\r\n- Better support for dipole and polarizability learning\r\n- bit operations to encode neighbor information\r\n- MPI support for atomic model deviation #628\r\n- UT for GPU code #569\r\n- UT for model compression #586 \r\n- Test Lammps build #600 \r\n\r\nBug fixings\r\n- cuda memory access error #566 \r\n- relative force model deviation is not copied back at single precision #599 \r\n- correct way of allocating memory in float precision #612 \r\n- fix TB logdir remove bug #617 \r\n- Append out_file when lammps restarts #640 \r\n\r\n\r\n\r\n",
        "dateCreated": "2021-05-18T07:14:02Z",
        "datePublished": "2021-05-20T00:11:10Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.b0",
        "name": "v2.0.0-beta.0",
        "tag_name": "v2.0.0.b0",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.b0",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/43253838",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.b0"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "What's new to v2.0.0-alpha.0\r\n- Training and inference the dipole (vector).\r\n- Split of training and validation dataset. \r\n\r\nEnhancement:\r\n- Strict argument check in the input script.\r\n- Update readme for v2.0\r\n- Auto conversion of input file to v2.0 compatibility\r\n\r\nBug fixings:\r\n- Fix bugs of broken examples.",
        "dateCreated": "2021-04-21T03:35:42Z",
        "datePublished": "2021-04-21T05:33:45Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.a1",
        "name": "v2.0.0-alpha.1",
        "tag_name": "v2.0.0.a1",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.a1",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/41751696",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.a1"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "The very first alpha release of deepmd-kit version 2.0.0. It includes the following new features\r\n- Model compression\r\n- New descriptor: three body embedding \r\n- Hybridization of descriptors\r\n- Long-range modification\r\n- Type embedding (under development)\r\n- Training and inference the dipole (vector) and polarizability (matrix). (under development)\r\n- Split of training and validation dataset. (under development)\r\n- ROCm device support (under development)\r\n\r\nEnhancements\r\n- More efficient training: all customized OPs are implemented with GPU.\r\n- Parallel training with multiple GPU support (under development)\r\n\r\nImprovement of the code for developers\r\n- Supports version of the model. Easily check model compatability\r\n- Clear and pythonic python interface\r\n- C++ API that can be tested independently\r\n- OP supports multi-device.\r\n\r\nBug fixings:\r\n- remove `using namespace std`. Solves compiling compatability problem.\r\n- added `deepmd` namespace for the C++ API\r\n",
        "dateCreated": "2021-04-13T09:53:49Z",
        "datePublished": "2021-04-13T07:38:51Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v2.0.0.a0",
        "name": "v2.0.0-alpha.0",
        "tag_name": "v2.0.0.a0",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v2.0.0.a0",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/41335862",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v2.0.0.a0"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Bug fixing:\r\n- Fix lammps memory leak when initialized pair_style deepmd for multiple times. #392 \r\n- Fix GPU memory issues. #393 #407 #424 ",
        "dateCreated": "2021-03-19T16:53:44Z",
        "datePublished": "2021-03-23T01:24:44Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.3.3",
        "name": "v1.3.3",
        "tag_name": "v1.3.3",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.3.3",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/40195706",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.3.3"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Improvements:\r\n- Compiling with Cuda 11.0 and 11.1 #390 \r\n\r\nBug fixings:\r\n- Fix stress tensor bug of ASE interface #338 \r\n- Fix neighbor list bug that may cause inconsistent results between CPU and GPU #334 ",
        "dateCreated": "2021-03-01T22:30:13Z",
        "datePublished": "2021-03-02T00:55:58Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.3.2",
        "name": "v1.3.2",
        "tag_name": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.3.2",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/39085920",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.3.2"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Bug fixings\r\n- Fix several compiling issues of v1.2.3",
        "dateCreated": "2021-02-24T00:06:17Z",
        "datePublished": "2021-02-24T14:52:24Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.2.4",
        "name": "v1.2.4",
        "tag_name": "v1.2.4",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.2.4",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/38521867",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.2.4"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New feature:\r\n- added tool to convert a v1.2 compatible model to v1.3 compatible model.\r\n\r\nBug fixing:\r\n- neighbor list bug in the GPU implementation.",
        "dateCreated": "2021-02-21T06:40:46Z",
        "datePublished": "2021-02-21T22:32:46Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.2.3",
        "name": "v1.2.3",
        "tag_name": "v1.2.3",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.2.3",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/38385410",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.2.3"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Bug fixing:\r\n- Compulsory label requirement if the corresponding prefactor is set to non-zero.  The current behavior is when then label is missing, the corresponding term does not appear in the loss function\r\n- Optional requirement of `loss` in dipole and polarizability training\r\n\r\nImprovement:\r\n- Recommend consistent TensorFlow versions for python and C++ interfaces.",
        "dateCreated": "2021-01-12T12:01:04Z",
        "datePublished": "2021-01-12T20:08:29Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.3.1",
        "name": "v1.3.1",
        "tag_name": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.3.1",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/36281815",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.3.1"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- Support input script in yaml format #271\r\n- Enable setting test size individually for each system #267\r\n\r\nImprovements:\r\n- Support building with TF2.3\r\n- Improved documentation. Automatically generated doc page. Explained keys in the training input script. #297\r\n- Compile with latest stable release of lammps (stable_29Oct2020). Old releases are not supported anymore. #302\r\n- Multi-device and multi-implementation support for OPs. #254\r\n\r\nBug fixings:\r\n- Allow ntypes_model > ntypes_data (fix #261) #296\r\n- Bug in setting `coeff_ener` when `coeff_atom_ener` is given #290\r\n",
        "dateCreated": "2021-01-01T09:17:33Z",
        "datePublished": "2021-01-01T12:16:46Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "tag_name": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.3.0",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/35892253",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.3.0"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- fast gelu implementation\r\n- relax the restriction on the maximal number of neighbors to 4096\r\n- one-sided embedding net\r\n\r\nBug fixings:\r\n- check if the cell volume is positive.\r\n- bugs of dplr\r\n- loading coord when data has only one frame\r\n- ase calculator None-PBC system\r\n- details printing when testing on multiple systems.\r\n- bugs in transform\r\n",
        "dateCreated": "2020-09-14T14:49:07Z",
        "datePublished": "2020-09-15T00:28:49Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.2.2",
        "name": "v1.2.2",
        "tag_name": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.2.2",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/31263030",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.2.2"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "\r\n\r\nBug fixing:\r\n- GPU implementation: stop the program when the number of neighbors is larger than the limit.",
        "dateCreated": "2020-06-19T14:51:44Z",
        "datePublished": "2020-06-20T08:36:00Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.1.5",
        "name": "v1.1.5",
        "tag_name": "v1.1.5",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.1.5",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/27729987",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.1.5"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features of dp train:\r\n- Polarizability and dipole fitting\r\n- If provided with `stop_lr`, the `decay_rate` will be computed automatically\r\n- Support non-pbc system: add an empty file named nopbc to the data system.\r\n- Use envs `TF_INTRA_OP_PARALLELISM_THREADS` and `TF_INTER_OP_PARALLELISM_THREADS` to control the multi-threading of tf, clean up command line options.\r\n- When the key `systems` is provided with a string, all possible systems will be recursively searched within the dir given by `systems`\r\n- User specific atomic energy.\r\n- Exclude types when building descriptors.\r\n- User specific activation function and network precision.\r\n- Transform neural network parameters.\r\n\r\nNew features of dp test:\r\n- Recursively search all possible systems in a directory.\r\n- Weighted average of test results\r\n\r\nBug fixings:\r\n- Cuda version compatibility\r\n- raw_to_set when nframe == 1\r\n- Slow test when testing multiple systems\r\n- Potentially wrong neighbor list when number of neighbors is larger than 256.\r\n- Fix bug #163 : broken lib link of dp_ipi\r\n- Infering number of types from data\r\n\r\n",
        "dateCreated": "2020-05-23T16:44:21Z",
        "datePublished": "2020-05-23T22:24:20Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.2.0",
        "name": "v1.2.0",
        "tag_name": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.2.0",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/26828653",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.2.0"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Big fixings:\r\n- KeyError in dp test (#165 )\r\n- Protect the std calculation",
        "dateCreated": "2020-02-01T11:02:21Z",
        "datePublished": "2020-03-03T20:30:26Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.1.4",
        "name": "v1.1.4",
        "tag_name": "v1.1.4",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.1.4",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/24167851",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.1.4"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Bug fixings:\r\n- raw_to_set.sh does not work for data system that has only one frame.\r\n- dp test ignores type_map.raw\r\n- cannot compile lammps with deepmd-kit that does not use GPU\r\n- compiling problems in debug mode\r\n- GPU kernel threading bug that leads to wrong model deviation ",
        "dateCreated": "2020-01-23T14:36:57Z",
        "datePublished": "2020-01-23T23:02:25Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.1.3",
        "name": "v1.1.3",
        "tag_name": "v1.1.3",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.1.3",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/23074995",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.1.3"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- GPU supported descriptor computation\r\n- Support ASE evaluation of deep potential\r\n- Trainable (true/false) descriptors\r\n\r\nBug fixings:\r\n- import warnings in common.py\r\n- relative force model deviation\r\n- freezing bug in se_ar\r\n",
        "dateCreated": "2019-12-20T00:25:41Z",
        "datePublished": "2019-12-20T19:37:00Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.1.2",
        "name": "v1.1.2",
        "tag_name": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.1.2",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/22374370",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.1.2"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "Bug fixing: \r\n- pass the warning of upper/lower index bound but do not correct the index.",
        "dateCreated": "2019-11-09T14:42:29Z",
        "datePublished": "2019-11-09T15:59:33Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "tag_name": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.1.1",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/21339902",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.1.1"
      },
      {
        "authorType": "User",
        "author_name": "amcadmus",
        "body": "New features:\r\n- Atom parameter\r\n- More robust data statistics\r\n- Relative force loss\r\n\r\nCode structure:\r\n- Implement WFC and Polarizability by TensorModel\r\n- Select the appropriate shared library suffix based on the operating system\r\n\r\nBug fixings:\r\n- The minimal model devi when a proc has none local atom.\r\n- Correctly unset USE_CUDA_TOOLKIT\r\n",
        "dateCreated": "2019-11-04T10:43:46Z",
        "datePublished": "2019-11-04T16:15:19Z",
        "html_url": "https://github.com/deepmodeling/deepmd-kit/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "tag_name": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/tarball/v1.1.0",
        "url": "https://api.github.com/repos/deepmodeling/deepmd-kit/releases/21191949",
        "zipball_url": "https://api.github.com/repos/deepmodeling/deepmd-kit/zipball/v1.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 695,
      "date": "Tue, 28 Dec 2021 17:34:52 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "molecular-dynamics",
      "deepmd",
      "lammps",
      "potential-energy",
      "python",
      "tensorflow",
      "cpp",
      "cuda",
      "rocm",
      "ipi"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "A quick-start on using DeePMD-kit can be found as follows:\n\n- [Prepare data with dpdata](doc/data/dpdata.md)\n- [Training a model](doc/train/training.md)\n- [Freeze a model](doc/freeze/freeze.md)\n- [Test a model](doc/test/test.md)\n- [Run MD with LAMMPS](doc/third-party/lammps.md)\n\nA full [document](doc/train/train-input-auto.rst) on options in the training input script is available.\n\n",
      "technique": "Header extraction"
    }
  ]
}