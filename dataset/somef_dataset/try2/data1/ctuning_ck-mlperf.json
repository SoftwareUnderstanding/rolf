{
  "citation": [
    {
      "confidence": [
        0.9999997439918688
      ],
      "excerpt": "March 2021 The overview of the CK technology has appeared in the Philosophical Transactions A, the world's longest-running journal where Newton published: <a href=\"https://doi.org/10.1098/rsta.2020.0211\">DOI</a>, <a href=\"https://arxiv.org/pdf/2011.01149.pdf\">ArXiv</a>. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146894306581498
      ],
      "excerpt": "- Object Detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9145293342498773
      ],
      "excerpt": "$ ck locate env --tags=object-detection,dataset,coco,2017,val,original \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8814848301044106
      ],
      "excerpt": "TestScenario.Offline qps=128.83, mean=7.5497, time=12.419, acc=70.676, queries=1600, tiles=50.0:7.8294,80.0:11.1442,90.0:11.7616,95.0:12.1174,99.0:12.9126,99.9:13.1641 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9954615990010869
      ],
      "excerpt": "TestScenario.Offline qps=5.82, mean=8.0406, time=27.497, acc=93.312, mAP=0.235, queries=160, tiles=50.0:6.7605,80.0:10.3870,90.0:10.4632,95.0:10.4788,99.0:10.4936,99.9:10.5068 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9640392133737443
      ],
      "excerpt": "TestScenario.Offline qps=5.46, mean=9.4975, time=29.310, acc=94.037, mAP=0.239, queries=160, tiles=50.0:7.9843,80.0:12.2297,90.0:12.3646,95.0:12.3965,99.0:12.4229,99.9:12.4351 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ctuning/ck-mlperf",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-20T10:17:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-25T17:04:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8524084872246119,
        0.9827636608876225,
        0.9187185908162755,
        0.9116569652994938
      ],
      "excerpt": "All CK components from the community are now aggregated in one CK repository. \nApril 2021 We are very excited to join forces with OctoML.ai! Contact Grigori Fursin for more details! \nMarch 2021 For your convenience, all CK components for ML Systems are now aggregated in one GitHub repository! They can be also searched for at the cKnowledge.io portal! \nMarch 2021 See our ACM TechTalk about the CK technology, reproducible research, FAIR principles and MLPerf. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950195213710358
      ],
      "excerpt": "CK workflows for official application with Docker \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8988086354183755
      ],
      "excerpt": "CK workflows for official application without Docker \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9121594024870805
      ],
      "excerpt": "Using CK is optional for MLPerf Inference v0.5. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9061093299415732,
        0.9444936381103163
      ],
      "excerpt": "We (unofficially) support two tasks out of three (i.e. except for Machine Translation). \nFull instructions are provided in the official MLPerf Inference repository: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8064280227781239
      ],
      "excerpt": "TestScenario.SingleStream qps=1089.79, mean=0.0455, time=45.880, acc=76.456, queries=50000, tiles=50.0:0.0447,80.0:0.0465,90.0:0.0481,95.0:0.0501,99.0:0.0564,99.9:0.0849 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8154924243500076
      ],
      "excerpt": "TestScenario.Offline qps=5.46, mean=9.4975, time=29.310, acc=94.037, mAP=0.239, queries=160, tiles=50.0:7.9843,80.0:12.2297,90.0:12.3646,95.0:12.3965,99.0:12.4229,99.9:12.4351 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Collective Knowledge repository to automate MLPerf - a broad ML benchmark suite for measuring performance of ML software frameworks, ML hardware accelerators, and ML cloud platforms:",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ctuning/ck-mlperf/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Thu, 23 Dec 2021 03:08:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ctuning/ck-mlperf/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ctuning/ck-mlperf",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/object-detection-tflite.debian-9/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tflite.dashboard.ubuntu-18.04/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tflite.ubuntu-16.04/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tflite.ubuntu-18.04/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tensorrt-loadgen-py.tensorrt-6/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-openvino.ubuntu-18.04/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/object-detection-tf-py.debian-9/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tflite.centos-7/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tf-cpp.debian-9/Dockerfile",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tflite.debian-9/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/jnotebook/mlperf-inference-v0.5/dividiti.ipynb",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/jnotebook/mlperf-inference-v0.5/results.ipynb",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/jnotebook/mlperf-inference-v0.5/systems.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/docker/image-classification-tensorrt-loadgen-py.tensorrt-6/explore.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/model-onnx-convert-from-tf/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/model-onnx-mlperf-ssd-mobilenet/scripts.linux/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/lib-mlperf-loadgen-static/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/model-tflite-convert-from-tf/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/lib-python-transformers/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/model-onnx-mlperf-ssd-resnet/scripts.linux/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/package/lib-python-mlperf-loadgen/install.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/script/mlperf-inference-v0.5.open.image-classification/audit.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/script/mlperf-inference-v0.5.open.image-classification/run.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/script/mlperf-inference-v0.7.image-classification/run.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/script/mlperf-inference-v0.5.closed.image-classification/audit.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/script/mlperf-inference-v0.5.closed.image-classification/run.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/script/mlperf-inference-v0.5.open.object-detection/run.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/program/fai-pep/run-caffe2.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/program/fai-pep/run-tflite.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/program/bert-reference-loadgen-py/setup_and_run_bert.sh",
      "https://raw.githubusercontent.com/ctuning/ck-mlperf/master/program/sylt/ck-compile.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the official vision app natively (i.e. without Docker), first install Python prerequisites such as OpenCV, TensorFlow and COCO Python API:\n```bash\n$ ck detect soft --tags=compiler,python --full_path=`which python3`\n$ ck install package --tags=lib,tensorflow,v1.14,vcpu,vprebuilt\n$ ck install package --tags=lib,python-package,cv2\n$ ck install package --tags=tool,coco,api\n```\n\nThen, install the latest LoadGen package:\n```bash\n$ ck install package --tags=mlperf,inference,source,upstream.master\n$ ck install package --tags=lib,python-package,absl\n$ ck install package --tags=lib,python-package,mlperf,loadgen\n```\n\n**NB:** The most important thing during installation is to select the same version of Python 3 (if you have more than one registered with CK).\nCheck that each package \"needs\" exactly the same version of Python 3 after installation:\n```bash\n$ ck show env --tags=lib,tensorflow,v1.14,vcpu,vprebuilt\nEnv UID:         Target OS: Bits: Name:                              Version: Tags:\n087035468886d589   linux-64    64 TensorFlow library (prebuilt, cpu) 1.14.0   64bits,channel-stable,host-os-linux-64,lib,needs-python,needs-python-3.6.7,target-os-linux-64,tensorflow,tensorflow-cpu,tf,tf-cpu,v1,v1.14,v1.14.0,vcpu,vprebuilt\n\n$ ck show env --tags=lib,python-package,cv2\nEnv UID:         Target OS: Bits: Name:                 Version: Tags:\n5f31d16b444d6b8c   linux-64    64 Python OpenCV library 3.6.7    64bits,cv2,host-os-linux-64,lib,needs-python,needs-python-3.6.7,opencv,python-package,target-os-linux-64,v3,v3.6,v3.6.7\n\n$ ck show env --tags=tool,coco,api\nEnv UID:         Target OS: Bits: Name:            Version: Tags:\n885a8f71bf1219da   linux-64    64 COCO dataset API master   64bits,api,coco,compiled-by-gcc,compiled-by-gcc-8.3.0,host-os-linux-64,needs-python,needs-python-3.6.7,target-os-linux-64,tool,v0,vmaster,vtrunk\n\n$ ck show env --tags=lib,python-package,mlperf,loadgen\nEnv UID:         Target OS: Bits: Name:                            Version: Tags:\n462592cb2beeaf63   linux-64    64 MLPerf Inference LoadGen library master   64bits,host-os-linux-64,lib,loadgen,mlperf,mlperf-loadgen,mlperf_loadgen,needs-python,needs-python-3.6.7,python-package,target-os-linux-64,v0,vmaster\n```\n\n<a name=\"modify_run_local\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "**NB:** It is currently necessary to create symbolic links if a model's file\nname is different from the one hardcoded in the application for each profile.\nFor example, for the `tf-mobilenet` profile (which can be used both for the\nnon-quantized and quantized MobileNet TF models), the application specifies\n`mobilenet_v1_1.0_224_frozen.pb` , but the quantized model's file is\n`mobilenet_v1_1.0_224_quant_frozen.pb`.\n\n<a name=\"resnet\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "<a name=\"imagenet\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n$ python -m pip install ck --user\n$ ck version\nV1.11.1\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9219971131075787
      ],
      "excerpt": "Linux/MacOS:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9122314369824116
      ],
      "excerpt": "Modify run_local.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.981615032346806
      ],
      "excerpt": "<a name=\"installation\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"inference_0_5\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"unofficial\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"official_docker\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8017051700918135
      ],
      "excerpt": "$ ck install package --tags=image-classification,dataset,imagenet,aux \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9471045906594017
      ],
      "excerpt": "<a name=\"coco\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8686359085618851
      ],
      "excerpt": "<a name=\"models\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8355226530335278
      ],
      "excerpt": "$ ./run_and_time.sh tf resnet cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"mobilenet\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8561852602416818
      ],
      "excerpt": "$ ./run_and_time.sh tf mobilenet cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"mobilenet_quant\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8561852602416818
      ],
      "excerpt": "$ ./run_and_time.sh tf mobilenet cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"ssd_mobilenet\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8561852602416818
      ],
      "excerpt": "$ ./run_and_time.sh tf ssd-mobilenet cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"ssd_mobilenet_quant\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8561852602416818
      ],
      "excerpt": "$ ./run_and_time.sh tf ssd-mobilenet cpu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"ssd_resnet\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521,
        0.8589376700360407,
        0.9395696914546919,
        0.955432675888159
      ],
      "excerpt": "<a name=\"official_native\"></a> \n<a name=\"prereqs\"></a> \nModify the run_local.sh script under v0.5/classification_and_detection as follows: \n$ git diff \ndiff --git a/v0.5/classification_and_detection/run_local.sh b/v0.5/classification_and_detection/run_local.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9111099061925916,
        0.9111099061925916
      ],
      "excerpt": "--- a/v0.5/classification_and_detection/run_local.sh \n+++ b/v0.5/classification_and_detection/run_local.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8902627162932362
      ],
      "excerpt": "     mkdir -p $OUTPUT_DIR \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9280186813482075
      ],
      "excerpt": "+ck virtual env --tag_groups=\"lib,tensorflow-cpu,v1.14,vcpu,vprebuilt lib,python-package,cv2 tool,coco lib,python-package,mlperf,loadgen\" \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"inference_0_5\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"unofficial\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"official_docker\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8428924547536248
      ],
      "excerpt": "<a name=\"datasets\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8602710097793844
      ],
      "excerpt": "<a name=\"models\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8626255414354917,
        0.8421074476017179
      ],
      "excerpt": "TestScenario.SingleStream qps=1089.79, mean=0.0455, time=45.880, acc=76.456, queries=50000, tiles=50.0:0.0447,80.0:0.0465,90.0:0.0481,95.0:0.0501,99.0:0.0564,99.9:0.0849 \n<a name=\"mobilenet\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"mobilenet_quant\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"ssd_mobilenet\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"ssd_mobilenet_quant\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"ssd_resnet\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.8421074476017179
      ],
      "excerpt": "<a name=\"official_native\"></a> \n<a name=\"prereqs\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9337025175737107,
        0.8289669050403863
      ],
      "excerpt": "-python python/main.py --profile $profile $common_opt --model $model_path $dataset \\ \n-    --output $OUTPUT_DIR $EXTRA_OPS $@ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9489940854679895
      ],
      "excerpt": "+--shell_cmd=\"python3.6 python/main.py --profile $profile $common_opt --model $model_path $dataset --output $OUTPUT_DIR $EXTRA_OPS $@\" \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ctuning/ck-mlperf/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "C++",
      "Shell",
      "Dockerfile",
      "Roff",
      "Batchfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Collective Knowledge workflows for MLPerf",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ck-mlperf",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ctuning",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ctuning/ck-mlperf/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "gfursin",
        "body": "Tagging stable version 2018.12.20",
        "dateCreated": "2018-12-19T19:01:56Z",
        "datePublished": "2018-12-20T21:12:16Z",
        "html_url": "https://github.com/ctuning/ck-mlperf/releases/tag/20181220",
        "name": "Tagging stable version 2018.12.20",
        "tag_name": "20181220",
        "tarball_url": "https://api.github.com/repos/ctuning/ck-mlperf/tarball/20181220",
        "url": "https://api.github.com/repos/ctuning/ck-mlperf/releases/14648001",
        "zipball_url": "https://api.github.com/repos/ctuning/ck-mlperf/zipball/20181220"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the official vision app natively (i.e. without Docker), first install Python prerequisites such as OpenCV, TensorFlow and COCO Python API:\n```bash\n$ ck detect soft --tags=compiler,python --full_path=`which python3`\n$ ck install package --tags=lib,tensorflow,v1.14,vcpu,vprebuilt\n$ ck install package --tags=lib,python-package,cv2\n$ ck install package --tags=tool,coco,api\n```\n\nThen, install the latest LoadGen package:\n```bash\n$ ck install package --tags=mlperf,inference,source,upstream.master\n$ ck install package --tags=lib,python-package,absl\n$ ck install package --tags=lib,python-package,mlperf,loadgen\n```\n\n**NB:** The most important thing during installation is to select the same version of Python 3 (if you have more than one registered with CK).\nCheck that each package \"needs\" exactly the same version of Python 3 after installation:\n```bash\n$ ck show env --tags=lib,tensorflow,v1.14,vcpu,vprebuilt\nEnv UID:         Target OS: Bits: Name:                              Version: Tags:\n087035468886d589   linux-64    64 TensorFlow library (prebuilt, cpu) 1.14.0   64bits,channel-stable,host-os-linux-64,lib,needs-python,needs-python-3.6.7,target-os-linux-64,tensorflow,tensorflow-cpu,tf,tf-cpu,v1,v1.14,v1.14.0,vcpu,vprebuilt\n\n$ ck show env --tags=lib,python-package,cv2\nEnv UID:         Target OS: Bits: Name:                 Version: Tags:\n5f31d16b444d6b8c   linux-64    64 Python OpenCV library 3.6.7    64bits,cv2,host-os-linux-64,lib,needs-python,needs-python-3.6.7,opencv,python-package,target-os-linux-64,v3,v3.6,v3.6.7\n\n$ ck show env --tags=tool,coco,api\nEnv UID:         Target OS: Bits: Name:            Version: Tags:\n885a8f71bf1219da   linux-64    64 COCO dataset API master   64bits,api,coco,compiled-by-gcc,compiled-by-gcc-8.3.0,host-os-linux-64,needs-python,needs-python-3.6.7,target-os-linux-64,tool,v0,vmaster,vtrunk\n\n$ ck show env --tags=lib,python-package,mlperf,loadgen\nEnv UID:         Target OS: Bits: Name:                            Version: Tags:\n462592cb2beeaf63   linux-64    64 MLPerf Inference LoadGen library master   64bits,host-os-linux-64,lib,loadgen,mlperf,mlperf-loadgen,mlperf_loadgen,needs-python,needs-python-3.6.7,python-package,target-os-linux-64,v0,vmaster\n```\n\n<a name=\"modify_run_local\"></a>\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**NB:** It is currently necessary to create symbolic links if a model's file\nname is different from the one hardcoded in the application for each profile.\nFor example, for the `tf-mobilenet` profile (which can be used both for the\nnon-quantized and quantized MobileNet TF models), the application specifies\n`mobilenet_v1_1.0_224_frozen.pb` , but the quantized model's file is\n`mobilenet_v1_1.0_224_quant_frozen.pb`.\n\n<a name=\"resnet\"></a>\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 34,
      "date": "Thu, 23 Dec 2021 03:08:26 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "See [above](#official_docker) for how to specify [datasets](#datasets) and [models](#models).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n$ ck install package --tags=mlperf,image-classification,model,tf,mobilenet,non-quantized\n$ export MODEL_DIR=`ck locate env --tags=model,tf,mobilenet,non-quantized`\n$ export DATA_DIR=`ck locate env --tags=dataset,imagenet,val`\n$ export EXTRA_OPS=\"--count 1024 --scenario Offline\"\n$ ./run_local.sh tf mobilenet cpu\n...\nTestScenario.Offline qps=237.10, mean=3.3406, time=4.319, queries=1024, tiles=50.0:2.9683,80.0:4.2340,90.0:4.2692,95.0:4.2827,99.0:4.2932,99.9:4.2932\n```\n",
      "technique": "Header extraction"
    }
  ]
}