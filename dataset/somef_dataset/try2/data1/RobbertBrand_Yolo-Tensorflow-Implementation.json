{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Yolo v1 paper    https://arxiv.org/pdf/1506.02640.pdf\n- Yolo v2 paper    https://arxiv.org/pdf/1612.08242.pdf\n- Tensorflow    https://www.tensorflow.org/\n- Coco dataset  http://cocodataset.org/\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9031447312001706
      ],
      "excerpt": "- Image size (640, 480) and yolo output size (10, 10) is correct. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RobbertBrand/Yolo-Tensorflow-Implementation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-21T21:24:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-20T16:05:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This Python project is a, from scratch, implementation of a Yolo object detection neural network model in Tensorflow. This implementation consists out of a functioning Yolo model, trainable using the Tensorflow ADAM optimizer on data like the Microsoft COCO dataset. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8341390746540512
      ],
      "excerpt": "Run the Yolo_Training.py program to create and start training a new Yolo model. Train and test results will be displayed while training. The model is stored every epoch in the folder ./models/New Model *time and data*.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8795951557955571
      ],
      "excerpt": "When satisfied with the displayed train and test results during training, could the Yolo_Training.py program just be terminated. The last 5 models, each stored after a finished epoch, are available in the./models/New Model time and data` folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9860720252356183,
        0.8527636292717183,
        0.9162448353907208,
        0.9774176425545507,
        0.9122421838855136,
        0.9890374068498702,
        0.833912782241086,
        0.9099523142683221,
        0.9004193269230091
      ],
      "excerpt": "These are prediction results of a small Yolo model trained with this project for just 12 epochs: \nThis Python project was used to train a Yolo model, defined in config.py, on an Intel i7 set-up with a Nvidia Geforce 750M graphic card. The model was trained on about 65000 Coco dataset images for between 10 and 20 epochs. Results are acceptable but far from perfect because of the following reasons. \n- A larger model couldn\u2019t be trained on my set-up because of the limited amount of available memory. \n- Further tuning of the models hyper parameters and increasing the model size is required to improve precision and recall. \n- Filtering of the predictions has to be further implemented like a non-max suppression algorithm. \n- Only a limited amount of data augmentation is currently implemented. \nThe following settings in the config.ini file could be optimized to boost model precision and recall in a relative simple way: \nThe model hyper parameters could be tweaked in the [Model] definition parameter, like by adding layers and increasing filter depths. \nThe Yolo model input image size could be increased in parameter [Model.input] input_img_shape. (The project will resize the images automatically) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8682836531461241,
        0.9107331516688084,
        0.8263025584004353
      ],
      "excerpt": "|anchor_min_iou_gain|Sets the minimum amount of gained result per added anchor box, to keep adding anchor boxes to the anchor box specification. The result is determined by computing the average IOU between the anchor boxes and the bboxes from the dataset. When the last IOU minus the second to last IOU is more than \u2018anchor_min_iou_gain\u2019, shall one more anchor box be added to the specification and this routine repeated. (a value of 0.01 would make sense)| \n|anchor_min_iou|Sets the minimum IOU which has to be reached, before the optimization quits on the \u2018anchor_min_iou_gain\u2019 parameter. (a value of 0.45 would make sense)| \nThe IOU between the dataset bboxes and anchors is displayed during the Yolo_Train.py program initialization as \u2018bbox over anchor IOU: 0.53\u2019. This IOU should be around or higher than 0.5. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Yolo object detection implementation in Tensorflow, trainable using Tensorflow optimizers like ADAM. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RobbertBrand/Yolo-Tensorflow-Implementation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 07:37:37 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/RobbertBrand/Yolo-Tensorflow-Implementation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "RobbertBrand/Yolo-Tensorflow-Implementation",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install Python 3.6 with the following Python packages in your environment:\n- Ffmpeg v4.0.2\n- Matplotlib v2.2.2\n- Numpy v1.14.5 (v1.15.1)\n- Opencv v3.3.1 (v3.4.1)\n- Pandas v0.22.0 (v0.23.4)\n- Pycocotools v2.0.0\n- scikit-learn v0.19.2 \n- sklearn v0.0 \n- Scikit-image v0.13.1 \n- Scikit-learn v0.19.1 \n- Scipy v1.0.1 \n- Tensorflow (-gpu) v1.8.0 (v1.10.0) \n\nDownload and unzip the following coco dataset files from http://cocodataset.org/#download:\n- annotations_trainval2017.zip (241MB)\n- train2017.zip (18GB)\n\nClone this project and change the file locations of the COCO dataset in the `config.ini` file:\n```\n[DataSet.coco]\nannotation_file = \"../COCO/annotations_trainval2017/annotations/instances_train2017.json\"\nimg_dir = \"../COCO/annotations_trainval2017/images/train2017/\"\n```\nYou are ready to roll!\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9212518044421832
      ],
      "excerpt": "Run the Yolo_Training.py program to create and start training a new Yolo model. Train and test results will be displayed while training. The model is stored every epoch in the folder ./models/New Model *time and data*.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python Yolo_Train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9010951052505168
      ],
      "excerpt": "When satisfied with the displayed train and test results during training, could the Yolo_Training.py program just be terminated. The last 5 models, each stored after a finished epoch, are available in the./models/New Model time and data` folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8658438330140418
      ],
      "excerpt": "python Yolo_Predict.py \"models\\model_folder_name\\model_name.ckpt\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8354846364959104
      ],
      "excerpt": "The Yolo output cell grid size could be tweaked in parameter [Model.output] yolo_outp_cell_grid_size. The set size should match the input image size by making sure the image size is dividable by the output cell grid size: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/RobbertBrand/Yolo-Tensorflow-Implementation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 RobbertBrand\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yolo-Tensorflow-Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yolo-Tensorflow-Implementation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "RobbertBrand",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RobbertBrand/Yolo-Tensorflow-Implementation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 07:37:37 GMT"
    },
    "technique": "GitHub API"
  }
}