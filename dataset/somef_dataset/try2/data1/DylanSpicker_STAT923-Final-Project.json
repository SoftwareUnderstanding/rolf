{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/ 1312.6114. url: http://arxiv.org/abs/1312.6114.\n\nIrina Higgins et al. \u201cbeta-VAE: Learning Basic Visual Concepts with a Constrained Variational Framework\u201d. In: Iclr July (2017), pp. 1\u201313. url: https://openreview.net/forum?id=Sy2fzU9gl.\n\nTejas D. Kulkarni et al. \u201cDeep Convolutional Inverse Graphics Network\u201d. In: (2015). issn: 10897550. doi: 0.1063/1.4914407. https://arxiv.org/abs/ 1503.03167. url: http://arxiv.org/abs/1503.03167",
      "https://arxiv.org/abs/ 1503.03167. url: http://arxiv.org/abs/1503.03167"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Diederik P Kingma and Max Welling. \u201cAuto-Encoding Variational Bayes\u201d. In: Ml (2013), pp. 1\u201314. issn: 1312.6114v10. doi: 10.1051/0004- 6361/201527329. arXiv: 1312.6114. url: http://arxiv.org/abs/1312.6114.\n\nIrina Higgins et al. \u201cbeta-VAE: Learning Basic Visual Concepts with a Constrained Variational Framework\u201d. In: Iclr July (2017), pp. 1\u201313. url: https://openreview.net/forum?id=Sy2fzU9gl.\n\nTejas D. Kulkarni et al. \u201cDeep Convolutional Inverse Graphics Network\u201d. In: (2015). issn: 10897550. doi: 0.1063/1.4914407. arXiv: 1503.03167. url: http://arxiv.org/abs/1503.03167.",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DylanSpicker/STAT923-Final-Project",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-20T23:53:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-02T01:55:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.998969819357599,
        0.9830611438846523
      ],
      "excerpt": "The code within was created during a cumulative project for a Multivariate Analysis project. The idea was to attempt to learn low-dimensional latent representations of images of faces in order to conduct facial verification tasks. In general different autoencoder structures were used, with a focus on variational autoencoders that can be shifted to generative models. The repository contains code for a standard Variational Autoencoder, the beta-Variational Autoencoder (which helps learn disentangled latent representations, by modifying the loss from a standard VAE), a VAE which is trained in batches and attempts to hold components constant for the purpose of learning disentangled representations, and a end-to-end CNN which attempts to do the classification without learning an explicit low-dimensional representation. \nAny of the models should be able to have their relevant file taken in the directory, and be run separate from the rest of the repository. While the loading of data and the saving of weights has been specifically written for the project's application, modest modification should allow the same models to be used in other applications. In particular, changing the encoder and decoder structures, should allow for arbitrary model structures to be leveraged. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A collection of variational autoencoders, intended to learn disentangled representations of face images.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DylanSpicker/STAT923-Final-Project/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 21:57:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DylanSpicker/STAT923-Final-Project/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "DylanSpicker/STAT923-Final-Project",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DylanSpicker/STAT923-Final-Project/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "R"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "STAT923 Final Project",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "STAT923-Final-Project",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "DylanSpicker",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DylanSpicker/STAT923-Final-Project/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 21:57:57 GMT"
    },
    "technique": "GitHub API"
  }
}