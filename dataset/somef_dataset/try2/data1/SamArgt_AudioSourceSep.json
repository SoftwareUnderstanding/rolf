{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.08803\n- **flow_tfp_bijectors.py** contains basic bijectors used in complex models\n- **flow_tfk_layers.py** contains tf.keras.layers.Layer used for the affine coupling layers. Contains also bijectors implemented with keras (used to compare performances with the tfp implementation",
      "https://arxiv.org/abs/1902.00275\n- flow_tfk_models.py (deprecated",
      "https://arxiv.org/abs/2002.07942"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This work is inspired by 3 main articles: the Glow model, the NCSN model and the BASIS algorithm\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{jayaram2020source,\n  title={Source Separation with Deep Generative Priors},\n  author={Jayaram, Vivek and Thickstun, John},\n  journal={arXiv preprint arXiv:2002.07942},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{song2019generative,\n  title={Generative Modeling by Estimating Gradients of the Data Distribution},\n  author={Song, Yang and Ermon, Stefano},\n  booktitle={Advances in Neural Information Processing Systems},\n  pages={11895--11907},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{kingma2018glow,\n  title={Glow: Generative flow with invertible 1x1 convolutions},\n  author={Kingma, Durk P and Dhariwal, Prafulla},\n  booktitle={Advances in neural information processing systems},\n  pages={10215--10224},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9775166916262069
      ],
      "excerpt": "<center> https://samargt.github.io/AudioSourceSep/ </center> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SamArgt/AudioSourceSep",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-08T08:19:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-08T10:04:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9771505926613131
      ],
      "excerpt": "Some of the results can be seen and listened to on the github page: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.97162169336248
      ],
      "excerpt": "We used mixture of Piano and Violin. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8162523126360777
      ],
      "excerpt": "Script to fine-tune trained glow model at different noise levels for the BASIS Algorithm \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9557394904155462
      ],
      "excerpt": "Example to separate a mixture of piano and violin: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8450114532781214
      ],
      "excerpt": "RESTORE_PATH_PIANO and RESTORE_PATH_VIOLIN are the path to the piano and violin model checkpoints respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8987536488992944
      ],
      "excerpt": "Set of functions to: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8780962139601717
      ],
      "excerpt": "Set of functions to load datasets ready for training or for separation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490662467542729
      ],
      "excerpt": "flow_glow.py : implementation of the Glow model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9254417406240169
      ],
      "excerpt": "flow_tfk_layers.py contains tf.keras.layers.Layer used for the affine coupling layers. Contains also bijectors implemented with keras (used to compare performances with the tfp implementation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9696921238467926
      ],
      "excerpt": "Implementation of the Score Network and the Langevin Dynamics to generate samples. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Statistics MSc Project (2020): Audio Source Separation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SamArgt/AudioSourceSep/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 13:35:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SamArgt/AudioSourceSep/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SamArgt/AudioSourceSep",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8781884154164287
      ],
      "excerpt": "To train a generative model on source1 for instance, one should give the following path: DATASET_FOLDER/source1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.850339676122465
      ],
      "excerpt": "flow_builder : build flow using Transformed Distribution from Tensorflow-probability \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9116276325768
      ],
      "excerpt": "python datasets/wav_to_spec.py INPUT_PATH OUTPUT_PATH --use_dB --tfrecords \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "|   |-- train/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "|   |-- test/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.8633989807152664
      ],
      "excerpt": "|   |-- train/ \n|   |-- test/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851716043565638
      ],
      "excerpt": "Script to train NCSN model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654710810901136
      ],
      "excerpt": "python train_ncsn.py --dataset [dirpath] --config configs/melspec_ncsnv1.yml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851716043565638
      ],
      "excerpt": "Script to train Glow model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654710810901136
      ],
      "excerpt": "python train_glow.py --dataset [dirpath] --config configs/melspec_glow.yml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654710810901136
      ],
      "excerpt": "python train_noisy_glow.py RESTORE_PATH --dataset [dirpath] --config configs/melspec_noisy_glow.yml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9015778547241152
      ],
      "excerpt": "python run_basis_sep.py RESTORE_PATH_PIANO RESTORE_PATH_VIOLIN --song_dir [PATH] --model ncsn --config configs/melspec_ncsnv1.yml --output [DIRPATH] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python melspec_inversion_basis.py DIRPATH --wiener_filter \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8987925819390875,
        0.8654513783722037,
        0.9102949888952098
      ],
      "excerpt": "DIRPATH is the path of the folder containing \"results.npz\", the result from running run_basis_sep.py \ntrain_realnvp.py: Script to train the Real NVP model on MNIST \ntrain_utils.py: Utility functions for training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8006493026382532
      ],
      "excerpt": "unittest_pipeline.py: Test the pipeline module \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029746009366481
      ],
      "excerpt": "utils.py : functions such as print_summary to print the trainable variables of the flow models implemented above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8353473853668638
      ],
      "excerpt": "flow_tfk_models.py (deprecated) contains a keras Model class used to build a bijector from the bijectors implemented in flow_tfk_layers.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SamArgt/AudioSourceSep/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Statistics MSs Project: Audio Source Separation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "AudioSourceSep",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SamArgt",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SamArgt/AudioSourceSep/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- tensorflow 2.2.0 \n- tensorflow-addons 0.10.0\n- tensorflow-datasets 2.1.0\n- tensorflow-probability 0.9.0\n- librosa 0.7.2\n- pandas 1.1.3\n- numpy 1.16.2\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sun, 26 Dec 2021 13:35:29 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "source-separation",
      "normalizing-flows",
      "tensorflow-probability"
    ],
    "technique": "GitHub API"
  }
}