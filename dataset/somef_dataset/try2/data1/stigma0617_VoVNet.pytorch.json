{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.09730"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9016847351482408
      ],
      "excerpt": "step learning rate schedule (learning rate decayed at every 30 epoch) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "| VoVNet-39 |  23.23%     | 6.57%     |10 ms| \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/stigma0617/VoVNet.pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-14T07:32:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-26T00:51:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9779083312926053
      ],
      "excerpt": "This is a pytorch implementation of VoVNet backbone networks as described in the paper An Energy and GPU-Computation Efficient Backbone Network for Real-Time Object Detection. This is implemented through pytorch/vision style. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9156107846780128
      ],
      "excerpt": "Inference time is measured on TITAN X PASCAL GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8211612055557365
      ],
      "excerpt": "| Model | Top-1 | Top-5 | Inference time \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A pytorch implementation of VoVNet",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/stigma0617/VoVNet.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Thu, 30 Dec 2021 06:46:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/stigma0617/VoVNet.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "stigma0617/VoVNet.pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can follow the instruction of [pytorch/examples/imagenet](https://github.com/pytorch/examples/tree/master/imagenet)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "0. python  3.6\n1. Install pytorch > 0.4\n2. `git clone https://github.com/stigma0617/VoVNet.pytorch.git`\n3. install depenecies : `pip install -r requirements.txt`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9591616656363343
      ],
      "excerpt": "CUDA v9.2, cuDNN v7.3, pytorch 1.0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8243377400652662
      ],
      "excerpt": "This repo provides VoVNet-39/57 models trained on ImageNet classification dataset with same training protocols as pytorch/examples/imagenet (e.g., 128 batch size, 90 epoch, data augmentations, lr_policy, etc) and compares to ResNet and DenseNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8213457800676237
      ],
      "excerpt": "@224x224 training/validation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8138962750007235,
        0.8262234806749313,
        0.8266130233086759,
        0.802096952508229
      ],
      "excerpt": "| DenseNet-201  |  22.80%     | 6.43%     |39 ms| \n| VoVNet-39 |  23.23%     | 6.57%     |10 ms| \n| ResNet-101    |  22.63%     | 6.44%     |20 ms| \n| DenseNet-161  |  22.35%     | 6.20%     |27 ms| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9483629093490996
      ],
      "excerpt": "run main.py specifying data path, the desired model name--arch, and save-directory--savedir. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9329606631530645
      ],
      "excerpt": "python main.py [imagenet-folder with train and val folders] --arch vovnet39 --savedir VoVNet39 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/stigma0617/VoVNet.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "A pytorch Implementation of VoVNet Backbone Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "VoVNet.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "stigma0617",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/stigma0617/VoVNet.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 112,
      "date": "Thu, 30 Dec 2021 06:46:29 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "imagenet",
      "classification-model",
      "vovnet"
    ],
    "technique": "GitHub API"
  }
}