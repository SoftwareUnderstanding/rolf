{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yuqj1991/caffe_train",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-20T06:09:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-09T21:28:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8099976303621189
      ],
      "excerpt": "| Method | Easy | Medium | Hard| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8099976303621189
      ],
      "excerpt": "| Method | Easy | Medium | Hard| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8458756770791368
      ],
      "excerpt": "L.Convolution(bottom, kernel_size=ks, stride=stride,num_output=nout, pad=pad, group=group) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "caffe train face licenseplate reID action ocr centernet",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yuqj1990/deepano_face_train/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Fri, 24 Dec 2021 14:11:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yuqj1991/caffe_train/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yuqj1991/caffe_train",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/yuqj1990/deepano_face_train/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/scripts/coco/PythonAPI/pycocoDemo.ipynb",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/scripts/coco/PythonAPI/pycocoEvalDemo.ipynb",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/testing/python/demo.ipynb",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/testing/python/.ipynb_checkpoints/demo-checkpoint.ipynb",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/siamese/mnist_siamese.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_lp_det.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_lp_det_640.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_resnet_ctc_50.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_recognition_v2.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/create_data_anno.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_resnet_ctc.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_recognition_v1.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/create_data_anno_lp.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/licensePlate/scripts/train_resnet.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/train_mobilenet.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/train_google.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/train_resnet.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/scripts/create_data.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/extract/extract_prediction.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/extract/extract_train.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/reID/caffe/eval/val_command.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/ssdlite/model/mobilenetv2/voc/test.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/ssdlite/model/mobilenetv2/voc/train.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/ssdlite/model/mobilenetv2/coco/test.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/ssdlite/model/mobilenetv2/coco/train.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/eval/val_command.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_centerGridSigmoid_face_v3.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_centerGridSoftmax_face_v2.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_centerGridSoftmax_face_merge_v4.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_center_face_v2_800.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/create_data_anno.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_yolov3_face.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_center_face_v2.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/detector/train_scripts/train_centerGridSoftmax_face_v4.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/create_vggface2.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_model_v2.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_mobilenet.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_inception.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_google.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_model.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_mobilenet_v3.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_mobilenet_v2.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_resnet.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/train/train_mobilenet_v2_npad.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/caffe/eval/val_command.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/tensorflow/alignface.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/tensorflow/train_tripletloss.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/recognition/tensorflow/train_softmax.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/attributes/scripts/face_attri_train.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/attributes/scripts/face_attri_train_glass_no_pad.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/attributes/scripts/create_data_anno.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/face/attributes/scripts/face_attri_train_glass.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/action/caffe/scripts/extract_frames.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/action/caffe/scripts/run_singleFrame_flow.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/action/caffe/scripts/run_lstm_flow.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/action/caffe/scripts/run_lstm_RGB.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/action/caffe/scripts/run_singleFrame_RGB.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/action/tensorflow/train.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/model/train_pose.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/training/getData.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/training/get_lmdb.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/training/exp22/train_pose.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/training/example_loss/plotLoss.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/training/example_proto/train_pose.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/pose/testing/get_model.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/mnist/create_mnist.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/mnist/train_lenet.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/siamese/create_mnist_siamese.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/siamese/train_mnist_siamese.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/person/train_scripts/train_centerGridSigmoid_face_v3.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/examples/person/train_scripts/create_data_anno.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/tools/extra/parse_log.sh",
      "https://raw.githubusercontent.com/yuqj1990/deepano_face_train/master/tools/extra/launch_resize_and_crop_images.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8489999372776986
      ],
      "excerpt": "2020.07.11. Updates: optimizing the CUDA memory to improve the batch_size in one batch at the limited Cuda memory of 16GitaBytes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8674660186893135
      ],
      "excerpt": "|Yolov3  |Yolov3+darknet COCO 57.9%|Yolov3 Caffe COCO 53.2%| \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8263636155650136
      ],
      "excerpt": "|triplet_loss|facenet+tf 99.85%|mobilenet-face 99.4%| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674,
        0.8489658320949641,
        0.9092360984957386,
        0.8370797733415254
      ],
      "excerpt": "import caffe \nfrom caffe import layers as L \nfrom caffe import params as P \nL.Data( source=lmdb,backend=P.Data.LMDB,batch_size=batch_size, ntop=2,transform_param=dict(crop_size=227,mean_value=[104, 117, 123],mirror=True)) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yuqj1991/caffe_train/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Jupyter Notebook",
      "Python",
      "Cuda",
      "Makefile",
      "C",
      "CMake",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'/***********\\n Copyright (c) 2013, NVIDIA CORPORATION.  All rights reserved.\\n \\n Redistribution and use in source and binary forms, with or without\\n modification, are permitted provided that the following conditions are met:\\n     * Redistributions of source code must retain the above copyright\\n       notice, this list of conditions and the following disclaimer.\\n     * Redistributions in binary form must reproduce the above copyright\\n       notice, this list of conditions and the following disclaimer in the\\n       documentation and/or other materials provided with the distribution.\\n     * Neither the name of the NVIDIA CORPORATION nor the\\n       names of its contributors may be used to endorse or promote products\\n       derived from this software without specific prior written permission.\\n \\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE \\n ARE DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE FOR ANY\\n DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n***********/\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# caffe train face licenseplate reID action ocr",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "caffe_train",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yuqj1991",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yuqj1991/caffe_train/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 25,
      "date": "Fri, 24 Dec 2021 14:11:23 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "| Method | accuray performance|  \n|:--------:| :--------:|  \n|mobilenet-v2 face recognition|99.42%  |\n|face landmarks + face attributes gender |(99.4%)+ bool glasses(99.5%)|  \n|face head angle|(not evaluated)|  \n|car license plate detect|(mAP91%)|  \n|car recognition| (96%, only support anhui car + blue car style)|  \n\n",
      "technique": "Header extraction"
    }
  ]
}