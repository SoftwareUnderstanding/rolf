{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1811.11405",
      "https://arxiv.org/abs/1711.09349"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.987115451605939,
        0.9896534279187987,
        0.8356013927728488
      ],
      "excerpt": "Spectral feature transform (rank1: 0.945071, map: 0.827155 w\\o post-processing). (https://arxiv.org/abs/1811.11405). \nPCB structure (https://arxiv.org/abs/1711.09349); Improved training strategy \nGAN related person generator(unstable) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xuxu116/pytorch-reid-lite",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-10-13T02:31:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-06T06:34:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Which benefits:\n - PCB structure\n - PCB randomly update\n - batchnorm\n - random erasing, zero paddding crop\n - warm-up learning rate\n - global branch\n - small batchsize\n\nWhich might helps:\n - feature erasing\n - feature mask\n - tri-loss\n - balanced sampling\n - multi-gpu training (differs in BN layer)\n \n Not working:\n - adam\n - am-softmax\n - bias in FC layer or BN\n \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8968952096579383,
        0.8303621724274597,
        0.8559533767412631
      ],
      "excerpt": "This codebase is for training/deploying models in pytorch (onnx),  \ncurrently it provides basic protocols for model training, evaluation and deploying. \nDistillation. Rank1:0.942993/map:0.831319 taught by resnet-101 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9820531268571571
      ],
      "excerpt": "The code currently supports \"market_evaluate\" for person-reid and \"classification_evaluate\" for image classification, but it is easy to extend this to support other evalutiaons (like LFW). All you need to do is create a new file - say \"lfw_evaluate.py\" in the evaluate folder, and expose a run_eval method which takes in your training config and returns your evaluation result. See evaluate/market_evalute.py for an example. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8459071469778856
      ],
      "excerpt": "resnet-50 | 384128 |1536/6 |0.683492|0.411627|mirro | 641 |weight_decay from 4e-5 to 5e-4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8976127896746201,
        0.8629108550046106
      ],
      "excerpt": "resnet-50 | 384128 |1536/6 |0.920724|0.755717|mirro | 641 |add BN to pcb stripe \nresnet-50 | 384128 |1536/6 |0.921318|0.765050|mirro,RE | 641 |add BN to pcb stripe \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106989375021146
      ],
      "excerpt": "resnet-50 | 384128 |1536+256|0.927257|0.793121|mirro,RE| 641 |mask@ all bracnchs, pcbRE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.850602301922527
      ],
      "excerpt": "3. Tri-loss only used in global features \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8925516430107682
      ],
      "excerpt": "documentation of what they are about: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9643709847967292
      ],
      "excerpt": "\"data_augmentation\" contains the params related to data_augmentation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184732561171852,
        0.9460050648911181,
        0.8987894973725963,
        0.8979008805472675,
        0.934264123308118
      ],
      "excerpt": "\"imagenet_pretrain\": Whether to initialze your model with ImageNet pretrained network. Note that some networks might not support this. \n\"img_h\" and \"img_w\": Size of the input image. \n\"lr\" contains the params related to learning rate setting, where \"base_lr\" denotes the initial learning rate for the base network and \"fc_lr\" denotes the initial learning rate for the fc layers. Also note that \"decay_step\" here refers to training epochs. \n\"model_params\" contains the setting of network structure. \n\"optimizer\": Which opitimization algorithm to use, default is is SGD. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8316062418046255
      ],
      "excerpt": "\"weight_decay\": The l2-regularization parameter. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8473457073956341
      ],
      "excerpt": "\"tri_loss_margin\": If set, the model will be trained with the Triplet loss with batch-hard mining, set to \"soft_margin\" to use the soft margin setting, and set to 0 to disbale. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Person Re-identification ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xuxu116/pytorch-reid-lite/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Thu, 23 Dec 2021 20:38:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xuxu116/pytorch-reid-lite/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "xuxu116/pytorch-reid-lite",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/xuxu116/pytorch-reid-lite/master/train_gan.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code depends on pytorch v0.4 and torchvision, run the \nfollowing command to install pytorch:\n\n```\npip install --user torch==0.4 torchvision==0.2.1 tensorflow==1.8 tensorboardX lmdb -i https://pypi.douban.com/simple/\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9277098667175131
      ],
      "excerpt": "cd pytorch-reid-lite \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8366812165220625
      ],
      "excerpt": "cd ~/.local/bin \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867395261905681
      ],
      "excerpt": "For following settings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867911734307815
      ],
      "excerpt": "GPU memory usage: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867395261905681
      ],
      "excerpt": "For following settings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867911734307815
      ],
      "excerpt": "GPU memory usage: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9736120515424128,
        0.8542222446931123
      ],
      "excerpt": "\"batch_size\": The batch_size PER GPU. \n\"batches_dir\": The path to your dataset generated by the open platform. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080747513337692
      ],
      "excerpt": "\"parallels\": The GPU(s) to train your model on. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8742267760258238
      ],
      "excerpt": "To train a model, clone the repo, modify params.json as you need, and run train.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8313815876433133
      ],
      "excerpt": ": Modify params.json - specify your own working dir. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9308709318368599
      ],
      "excerpt": "python train.py --operation start_train --config_path params.json --sub_working_dir SUB_WORKING_DIR_NAME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9280857673571561
      ],
      "excerpt": "python evaluator.py eval_params.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.812010326848468
      ],
      "excerpt": "resnet-50 | 384128 |1536/6 |0.628266|0.346756|mirro | 641 |classifier no bias, 60 epoch, decay per 40 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8183293763172227,
        0.8183293763172227
      ],
      "excerpt": "resnet-50 | 384128 |1536/6 |0.920724|0.768056|mirro | 321 |120 epoch, decay per 40, hue \nresnet-50 | 256128 |1024/4 |0.907957|0.731270|mirro | 321 |120 epoch, decay per 40 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8251559510522108,
        0.8216270093103228
      ],
      "excerpt": "GPU memory usage: \n- 9529MiB for last_conv_stride=1 (130 example/sec) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8175229164157096
      ],
      "excerpt": "resnet-50 | 256128 |2561 |0.849169|0.673918|mirro | 321 | adam, epoch 20 lr decay \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8044290599680651
      ],
      "excerpt": "- `batch_size = 128 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8251559510522108,
        0.8216270093103228,
        0.8790604724437566
      ],
      "excerpt": "GPU memory usage: \n- 10343MiB for last_conv_stride=1 (215 example/sec) \nThe params.json file contains the settings you need to run your model, here is a brief  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8129188052101897
      ],
      "excerpt": "\"batch_size\": The batch_size PER GPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8015183310986216
      ],
      "excerpt": "\"epoch\": How many epochs to train your model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8149658413925329,
        0.8146810779026653
      ],
      "excerpt": "\"parallels\": The GPU(s) to train your model on. \n\"pretrain_snapshot\": Path to pretrained model. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xuxu116/pytorch-reid-lite/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Overview",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-reid-lite",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "xuxu116",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xuxu116/pytorch-reid-lite/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This code depends on pytorch v0.4 and torchvision, run the \nfollowing command to install pytorch:\n\n```\npip install --user torch==0.4 torchvision==0.2.1 tensorflow==1.8 tensorboardX lmdb -i https://pypi.douban.com/simple/\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Thu, 23 Dec 2021 20:38:36 GMT"
    },
    "technique": "GitHub API"
  }
}