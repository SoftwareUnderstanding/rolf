{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.08008",
      "https://arxiv.org/abs/1611.08050",
      "https://arxiv.org/abs/1704.07809",
      "https://arxiv.org/abs/1602.00134",
      "https://arxiv.org/abs/1812.08008"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "LearOpenCV Website (used for post-processing HandPose):\n\nhttps://www.learnopencv.com/hand-keypoint-detection-using-deep-learning-and-opencv/\n\nOpenPose Citation:\n\n\n    @inproceedings{cao2018openpose,\n      author = {Zhe Cao and Gines Hidalgo and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {arXiv preprint arXiv:1812.08008},\n      title = {Open{P}ose: realtime multi-person 2{D} pose estimation using {P}art {A}ffinity {F}ields},\n      year = {2018}\n    }\n\n    @inproceedings{cao2017realtime,\n      author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n      year = {2017}\n    }\n\n    @inproceedings{simon2017hand,\n      author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n      year = {2017}\n    }\n\n    @inproceedings{wei2016cpm,\n      author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n      booktitle = {CVPR},\n      title = {Convolutional pose machines},\n      year = {2016}\n    }\n\nLinks to the papers:\n\n- [OpenPose: Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1812.08008)\n- [Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields](https://arxiv.org/abs/1611.08050)\n- [Hand Keypoint Detection in Single Images using Multiview Bootstrapping](https://arxiv.org/abs/1704.07809)\n- [Convolutional Pose Machines](https://arxiv.org/abs/1602.00134)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{wei2016cpm,\n  author = {Shih-En Wei and Varun Ramakrishna and Takeo Kanade and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Convolutional pose machines},\n  year = {2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{simon2017hand,\n  author = {Tomas Simon and Hanbyul Joo and Iain Matthews and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Hand Keypoint Detection in Single Images using Multiview Bootstrapping},\n  year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cao2017realtime,\n  author = {Zhe Cao and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n  booktitle = {CVPR},\n  title = {Realtime Multi-Person 2D Pose Estimation using Part Affinity Fields},\n  year = {2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cao2018openpose,\n  author = {Zhe Cao and Gines Hidalgo and Tomas Simon and Shih-En Wei and Yaser Sheikh},\n  booktitle = {arXiv preprint arXiv:1812.08008},\n  title = {Open{P}ose: realtime multi-person 2{D} pose estimation using {P}art {A}ffinity {F}ields},\n  year = {2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9222383658450612
      ],
      "excerpt": "OpenVINO 2019 R2 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fcr3/OpenVINO_Tutorials",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-26T23:21:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-17T04:50:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This respository contains a number of tutorials on how to use OpenVINO. In particular, these tutorials teach how someone would like to get started using OpenVINO through the context of object detection and pose estimation. Feel free to flip through the Jupyter Notebooks in order to understand how OpenVINO's Python API works.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8525401312686035,
        0.9055608112078938,
        0.9657167994494102
      ],
      "excerpt": "Contains a brief example of how to set up a network, load it into a plugin, and run inference. \nContains a slightly more complicated example, but puts the pieces together from the simple object detection module in order to detect different kinds of wine from a webcam. \nBasically the same tutorial as the real time object detection one, but using multiple requests to distribute inference tasks. While we wait for the inference task we care about to finish, others will be processing in the background. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9638141266426186
      ],
      "excerpt": "Downloading these networks and put them in a folder called handpose_optimized. Within handpose_optimized, create two folders called fp32 and fp16. Put the contents of reverse_hand into fp32 and the contents of fp16 into fp16. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Uses OpenVINO to detect Silveroak and Twomey wine, see what gesture you are doing, and draw keypoints on your hand!",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fcr3/OpenVINO_Tutorials/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 05:16:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fcr3/OpenVINO_Tutorials/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fcr3/OpenVINO_Tutorials",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Using%20OpenVINO%20Core%20for%20Real%20Time%20Detection.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Using%20OpenVINO%20with%20New%20Core%20API.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Using%20OpenVINO%20for%20Async%20Real%20Time%20Detection.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Loading%20Multiple%20Networks%20in%20OpenVINO.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Using%20OpenVINO%20Core%20for%20Async%20RT%20Detection.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Demo%20with%20Handpose%20and%20SSD.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Using%20OpenVINO%20for%20Real%20Time%20Detection.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Python%20Basics.ipynb",
      "https://raw.githubusercontent.com/fcr3/OpenVINO_Tutorials/master/Using%20OpenVINO.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8820234121644812
      ],
      "excerpt": "jupyter notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8149893338972146
      ],
      "excerpt": "This assumes that you have set up the OpenVINO environment. Replace ## with either 16 or 32. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "$ mo.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fcr3/OpenVINO_Tutorials/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tutorials For Using OpenVINO",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "OpenVINO_Tutorials",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fcr3",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fcr3/OpenVINO_Tutorials/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 28 Dec 2021 05:16:05 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Contains a not-so-brief but hopefully clear walkthrough on how someone can use multiple networks in an application.\n\n",
      "technique": "Header extraction"
    }
  ],
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "These tutorials show how to program using OpenVINO's Python API. Some of the sections within each iPython Notebook are not generalizable, i.e. the networks I use accept input and output detections differently then perhaps other networks. These tutorials are meant for you to extrapolate on your own, since you should know your network and what it accepts as input/what it spits out as output.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Accompanying the simple object detection tutorial, real-time object detection tutorial, and the async real-time object detection tutorial are also tutorials that pretty much do the same thing but utilize the IECore instead of IEPlugin. IEPlugin may/will be deprecated in future releases of OpenVINO.\n\n",
      "technique": "Header extraction"
    }
  ]
}