{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liuzhuang13/DenseNetCaffe",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "liuzhuangthu at gmail.com  \ngh349 at cornell.edu   \nAny discussions, suggestions and questions are welcome!\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-09-05T03:58:02Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-17T10:21:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9370090926722916,
        0.9907447586027383
      ],
      "excerpt": "This repository contains the caffe version code for the paper Densely Connected Convolutional Networks.  \nFor a brief introduction of DenseNet, see our original Torch implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8697387899773246,
        0.89925573023034
      ],
      "excerpt": "See http://pytorch.org/docs/torchvision/models.html?highlight=densenet for directly using the pretrained models in PyTorch. \nThe models in this repo are for CIFAR datasets only (input 32x32). If you feed images with larger resolution (e.g., ImageNet images), you need to use a different downsampling strategy to keep the memory usage reasonable. See our paper or Torch code for details on ImageNet models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Caffe code for Densely Connected Convolutional Networks (DenseNets) ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liuzhuang13/DenseNetCaffe/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 209,
      "date": "Mon, 27 Dec 2021 11:38:55 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liuzhuang13/DenseNetCaffe/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "liuzhuang13/DenseNetCaffe",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/liuzhuang13/DenseNetCaffe/master/train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8383394861139329
      ],
      "excerpt": "See http://pytorch.org/docs/torchvision/models.html?highlight=densenet for directly using the pretrained models in PyTorch. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liuzhuang13/DenseNetCaffe/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Densely Connected Convolutional Network (DenseNet)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DenseNetCaffe",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "liuzhuang13",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liuzhuang13/DenseNetCaffe/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 270,
      "date": "Mon, 27 Dec 2021 11:38:55 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "0. Get the CIFAR data prepared following the [Caffe's official CIFAR tutorial](http://caffe.berkeleyvision.org/gathered/examples/cifar10.html).\n1. make\\_densenet.py contains the code to generate the network and solver prototxt file. First change the data path in function make\\_net() and preprocessing mean file in function densenet() to your own path of corresponding data file.\n2. By default make\\_densenet.py generates a DenseNet with Depth L=40, Growth rate k=12 and Dropout=0.2. To experiment with different settings, change the code accordingly (see the comments in the code). Example prototxt files are already included. Use ```python densenet_make.py``` to generate new prototxt files.\n3. Change the caffe path in train.sh. Then use ```sh train.sh``` to train a DenseNet.\n\n",
      "technique": "Header extraction"
    }
  ]
}