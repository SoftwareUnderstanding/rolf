{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "SimCLR paper by Chen et. al:\n```bash\n@misc{chen2020simple,\n      title={A Simple Framework for Contrastive Learning of Visual Representations}, \n      author={Ting Chen and Simon Kornblith and Mohammad Norouzi and Geoffrey Hinton},\n      year={2020},\n      eprint={2002.05709},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG}\n}\n```\n\n[1]:https://arxiv.org/pdf/2002.05709.pdf \n[2]:https://medium.com/analytics-vidhya/understanding-simclr-a-simple-framework-for-contrastive-learning-of-visual-representations-d544a9003f3c?source=friends_link&sk=e768e4c2a88bd7d33f8eb42072b1fb05\n[3]:https://drive.google.com/file/d/1x3BSoqoe76FcWdbagLj6Mx6_2EAJ982g/view?usp=sharing\n[4]:https://drive.google.com/drive/folders/1hXzJklDds662eHYxafwCLexIeBjby4uX?usp=sharing\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{chen2020simple,\n      title={A Simple Framework for Contrastive Learning of Visual Representations}, \n      author={Ting Chen and Simon Kornblith and Mohammad Norouzi and Geoffrey Hinton},\n      year={2020},\n      eprint={2002.05709},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9371952685384562
      ],
      "excerpt": "Arxiv link for the SimCLR paper : [A Simple Framework for Contrastive Learning of Visual Representations][1]   \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thunderInfy/simclr",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-04T09:02:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-06T21:04:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.91375813581152,
        0.9904431641258237
      ],
      "excerpt": "Arxiv link for the SimCLR paper : [A Simple Framework for Contrastive Learning of Visual Representations][1]   \nThis repository contains my implementation of the SimCLR paper in PyTorch. I've written a blog post about the same [here][2]. SimCLR presented a simple framework to learn representations from unlabeled image data using contrastive learning. A composition of two data augmentation operations, namely random crop and color jittering, produced outlooks from images, and then positive and negative pairs are defined as outlooks from same and different images, respectively, in a batch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9393222557218279
      ],
      "excerpt": "The recommended version for running the experiments is Python3. The results using this code have been generated with: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9159643228425749
      ],
      "excerpt": "scikit-learn (0.23.2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853134726109167,
        0.9887232320820427
      ],
      "excerpt": "Project Structure \nThe skeletal overview of this project is as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "\u2502    \u251c\u2500\u2500 model/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.913403808537222
      ],
      "excerpt": "4. -nw: The number of workers for loading data (default=2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.913403808537222
      ],
      "excerpt": "5. -nw: The number of workers for loading data (default=2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8904263106088345
      ],
      "excerpt": "This command would run the linear evaluator, for which the dataset is at '../milli_imagenet', stored self-supervised model is at 'results/model/model.pth' and would produce the results at 'results' (if any), uses cuda and multiple gpus. Batch size used is 125. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repo contains code for SimCLR : A Simple Framework for Contrastive Learning of Visual Representations",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thunderInfy/simclr/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Tue, 28 Dec 2021 09:18:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/thunderInfy/simclr/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "thunderInfy/simclr",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9461387272693286
      ],
      "excerpt": "Setup Dependencies \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966655221085083
      ],
      "excerpt": "matplotlib (3.3.2) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8924976426181745,
        0.9336801098518991,
        0.91892912920148,
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 utils/ \n\u2502     \u251c\u2500\u2500 __init__.py \n\u2502     \u251c\u2500\u2500 model.py \n\u2502     \u251c\u2500\u2500 ntxent.py \n\u2502     \u251c\u2500\u2500 plotfuncs.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8318549392002752
      ],
      "excerpt": "\u2502    \u2502     \u251c\u2500\u2500 model.pth \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9285065137266004,
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 linear_evaluation.py \n\u251c\u2500\u2500 main.py \n\u251c\u2500\u2500 simclr.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8388466510622169,
        0.9539565232404899,
        0.8002997516328323
      ],
      "excerpt": "You can pass command line arguments to the files main.py for simclr training and linear_evaluation.py for linear classifier evaluation on top of the learned representations. \nfile main.py \n1. datapath: Path to the data root folder which contains train and test folders \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8107360785923443
      ],
      "excerpt": "3. -bs: The batch size for self-supervised training (default = 250) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9538145301726777,
        0.8002997516328323
      ],
      "excerpt": "file linear_evaluation.py \n1. datapath: Path to the data root folder which contains train and test folders \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925619830435868
      ],
      "excerpt": "Example usage: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9256597267106931
      ],
      "excerpt": "python main.py '../milli_imagenet' 'results' -bs 250 -c --multiple_gpus &amp; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070556621808803
      ],
      "excerpt": "python linear_evaluation.py '../milli_imagenet/' 'results/model/model.pth' 'results' -c --multiple_gpus -bs 125 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890818307099057
      ],
      "excerpt": "<img src=\"acc_vs_layer.png\" width=\"425\"/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/thunderInfy/simclr/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SimCLR: A Simple Framework for Contrastive Learning of Visual Representations in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "simclr",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "thunderInfy",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/thunderInfy/simclr/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Tue, 28 Dec 2021 09:18:46 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "self-supervised-learning",
      "contrastive-learning",
      "simclr",
      "research-paper",
      "pytorch-implementation",
      "deep-learning"
    ],
    "technique": "GitHub API"
  }
}