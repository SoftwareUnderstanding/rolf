{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.05957\n\n# Reimplementation\nExperiments mostly based on the paper.\n\n## CIFAR-10 (Standard CNN"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.879211071776784
      ],
      "excerpt": "Much less images per class than CIFAR-10 and STL-10. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.879211071776784
      ],
      "excerpt": "Much less images per class than CIFAR-10 and STL-10. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/koshian2/SNGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-22T12:37:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-15T04:50:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9727389952892334
      ],
      "excerpt": "Unofficial implementation of SNGAN in PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.849820467678548
      ],
      "excerpt": "Experiments mostly based on the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262,
        0.9891785691729262,
        0.8178480043341506,
        0.9891785691729262
      ],
      "excerpt": "IS = 5.844 \nIS = 6.077 \nIS = 6.094 (Best) \nIS = 5.821 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262,
        0.8178480043341506,
        0.9891785691729262,
        0.9891785691729262
      ],
      "excerpt": "IS = 3.916 \nIS = 5.962 (Best) \nIS = 3.908 \nIS = 5.900 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262
      ],
      "excerpt": "|     IS      | 5.932 | 6.058 | 6.157 | 5.813 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262,
        0.9891785691729262,
        0.8178480043341506,
        0.9891785691729262
      ],
      "excerpt": "IS = 5.932 \nIS = 6.058 \nIS = 6.157 (Best) \nIS = 5.813 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262,
        0.8397985307444656,
        0.9891785691729262,
        0.9891785691729262,
        0.9891785691729262,
        0.9891785691729262,
        0.9891785691729262,
        0.8178480043341506,
        0.9891785691729262,
        0.9891785691729262,
        0.9174697905517357
      ],
      "excerpt": "|      IS      | 5.795 | 7.136 | 3.421 | 3.883 | 6.538 | 7.314 | 3.444 | 3.653 | \nTrainings in n_dis = 1 are very difficult. Some additional experiments are written in appendix. \nIS = 5.795 \nIS = 7.136 (2nd) \nIS = 3.421 \nIS = 3.883 \nIS = 6.538 \nIS = 7.314 (Best) \nIS = 3.444 \nIS = 3.653 \nExperiments with datasets that were not written in the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185442429493971
      ],
      "excerpt": "Sampling and interpolation uses the final epoch model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185442429493971,
        0.8440282003158887,
        0.934398419646425
      ],
      "excerpt": "Sampling and interpolation uses the final epoch model. \nIt seems that the generation of flowers is still difficult (outlines are too complicated). \nThe goal is to train with n_dis = 1, but there are many negative results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8660237939375921
      ],
      "excerpt": "| Case | Condition              |   IS  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8660237939375921
      ],
      "excerpt": "| Case | Condition            |   IS  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9149688979038985,
        0.9635035733548137,
        0.9891785691729262,
        0.9891785691729262,
        0.9891785691729262,
        0.9891785691729262
      ],
      "excerpt": "It's not good at training with n_dis = 1. Other tunings are also subtle. \nOnly a part is described. The rest, please refer to them in the repository folder. \nIS = 6.419 \nIS = 5.663 \nIS = 2.499 \nIS = 2.722 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9643887737683821,
        0.9687937451310613
      ],
      "excerpt": "As you can see, the loss of D in case 6 has hardly decreased.\u3000If it doesn\u2019t work, G is too strong to learn nothing. This is due to set Spectral Norm in D. \nTherefore, n_dis=5 which increases D update is easier to work. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262,
        0.9891785691729262,
        0.9891785691729262
      ],
      "excerpt": "IS = 4.621 \nIS = 4.789 \nIS = 4.990 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unofficial implementation of SNGAN in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/koshian2/SNGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 18:29:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/koshian2/SNGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "koshian2/SNGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Res Net in the paper (48x48) \n* Generator leraning rate : 0.0002\n* n_dis : 5\n* n_epochs : 1301\n* All conditional\n* Adam parameters : lr=0.0002, beta1=0.5\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Post-act Res Net (48x48) \n* Discriminator : Post-act Res Net (48x48, initial ch changeable)\n* Generator leraning rate : 0.0002\n* n_epochs : 1301 if n_dis=5, 261 if n_dis=1 (approx. 53k G updates)\n* Adam parameters : beta1=0.5, beta2 = 0.999\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Post-act Res Net (48x48) \n* Discriminator : Standard CNN (48x48)\n* Generator leraning rate : 0.0002\n\nFor generator, ResNet implementation in the paper was pre-act ResNet (BN / SN-> ReLU-> Conv), but change this to post-act (Conv-> BN / SN-> ReLU). \n\nFor discriminator, simply used Standard CNN to reduce computation.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Res Net (96x96) \n* Discriminator : Res Net (96x96)\n* n_epochs : 1301 (approx. 53k G updates)\n* Hinge loss, n_dis = 5\n* Adam parameters : lr=0.0002, beta1=0.5, beta2 = 0.9\n\nThe network architecture is based on a 128x128 paper and the resolution is changed to 96x96 (dense : 4x4x1024 -> 3x3x1024).\n\n![](https://raw.githubusercontent.com/koshian2/SNGAN/master/figure/network4.png)\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Res Net (48x48) \n* Discriminator : Res Net (48x48)\n* n_epochs : 1301 if n_dis=5, 261 if n_dis=1 (approx. 53k G updates)\n* Hinge loss\n* Adam parameters : lr=0.0002, beta1=0.5, beta2 = 0.9\n* Using training + test data (10 classes, 13k (5k + 8k) images)\n\n![](https://raw.githubusercontent.com/koshian2/SNGAN/master/figure/network3.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Standard CNN (48x48) \n* Discriminator : Standard CNN (48x48)\n* n_epochs : 1301 (approx. 53k G updates)\n* n_dis = 5\n* Hinge loss\n* Adam parameters : lr=0.0002, beta2 = 0.9\n* Using training + test data (10 classes, 13k (5k + 8k) images)\n\n![](https://raw.githubusercontent.com/koshian2/SNGAN/master/figure/network1.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: ResNet (32x32) \n* Discriminator : ResNet (32x32)\n* n_epochs : 321 (approx. 50k G updates)\n* n_dis = 5\n* Adam parameters : lr=0.0002, beta1=**0.5**, beta2 = 0.9\n* Using training data (10 classes, 50k images)\n\nNote: beta1=0.0 failed to converge (seems to stuck into saddle points).\n\n![](https://raw.githubusercontent.com/koshian2/SNGAN/master/figure/network2.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* Generator: Standard CNN \n* Discriminator : Standard CNN\n* n_epochs : 321 (approx. 50k G updates)\n* n_dis = 5\n* Adam parameters : lr=0.0002, beta1=0.0, beta2 = 0.9\n* Using training data (10 classes, 50k images)\n\n![](https://raw.githubusercontent.com/koshian2/SNGAN/master/figure/network1.png)\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8768801849289117
      ],
      "excerpt": "|   Conditional   |     FALSE     | FALSE |      TRUE     |  TRUE | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768801849289117
      ],
      "excerpt": "|   Conditional   |     FALSE     | FALSE |      TRUE     |  TRUE | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768801849289117
      ],
      "excerpt": "| Conditional | FALSE | FALSE |  TRUE |  TRUE | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768801849289117
      ],
      "excerpt": "|  Conditional | FALSE |  TRUE | FALSE |  TRUE | FALSE |  TRUE | FALSE |  TRUE | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768801849289117
      ],
      "excerpt": "|      Conditional      |  FALSE |  TRUE  |  FALSE |  TRUE  |  FALSE |  TRUE  |  FALSE |  TRUE  | FALSE |  TRUE | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/koshian2/SNGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 \\xe3\\x81\\x93\\xe3\\x81\\x97\\xe3\\x81\\x82\\xe3\\x82\\x93\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SNGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SNGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "koshian2",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/koshian2/SNGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Sat, 25 Dec 2021 18:29:31 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "sngan",
      "pytorch",
      "gans",
      "python"
    ],
    "technique": "GitHub API"
  }
}