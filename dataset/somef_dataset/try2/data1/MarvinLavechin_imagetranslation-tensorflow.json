{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository is based on [this](https://github.com/affinelayer/pix2pix-tensorflow) Tensorflow implementation of the paired image-to-image translation ([Isola et al., 2016](https://arxiv.org/pdf/1611.07004v1.pdf)) \nHighway and dense net were adapted from the implementation exemplified in [this blog entry](https://chatbotslife.com/resnets-highwaynets-and-densenets-oh-my-9bb15918ee32). \n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1607.08022",
      "https://arxiv.org/abs/1611.07004v1",
      "https://arxiv.org/abs/1703.10593",
      "https://arxiv.org/abs/1603.05027",
      "https://arxiv.org/abs/1505.00387",
      "https://arxiv.org/abs/1608.06993"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this code for your research, please cite the papers this code is based on:\n\n```tex\n@article{pix2pix2016,\n  title={Image-to-Image Translation with Conditional Adversarial Networks},\n  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},\n  journal={arXiv preprint arXiv:1611.07004v1},\n  year={2016}\n}\n\n@article{CycleGAN2017,\n  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},\n  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},\n  journal={arXiv preprint arXiv:1703.10593},\n  year={2017}\n}\n\n@inproceedings{johnson2016perceptual,\n  title={Perceptual losses for real-time style transfer and super-resolution},\n  author={Johnson, Justin and Alahi, Alexandre and Fei-Fei, Li},\n  booktitle={European Conference on Computer Vision},\n  pages={694--711},\n  year={2016},\n  organization={Springer}\n}\n\n@article{He2016identity,\n  title={Identity Mappings in Deep Residual Networks},\n  author={Kaiming He and Xiangyu Zhang and Shaoqing Ren and Jian Sun},\n  journal={arXiv preprint arXiv:1603.05027},\n  year={2016}}\n\n@article{Srivastava2015highway,\n  title={Highway Networks},\n  author={Rupesh Kumar Srivastava and Klaus Greff and J{\\\"{u}}rgen Schmidhuber},\n  journal={arXiv preprint arXiv:1505.00387},\n  year={2015}\n}\n\n@article{Huang2016dense,\n  title={Densely Connected Convolutional Networks},\n  author={Gao Huang and Zhuang Liu and Kilian Q. Weinberger},\n  journal={arXiv preprint arXiv:1608.06993},\n  year={2016}\n}\n\n```",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{Huang2016dense,\n  title={Densely Connected Convolutional Networks},\n  author={Gao Huang and Zhuang Liu and Kilian Q. Weinberger},\n  journal={arXiv preprint arXiv:1608.06993},\n  year={2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{He2016identity,\n  title={Identity Mappings in Deep Residual Networks},\n  author={Kaiming He and Xiangyu Zhang and Shaoqing Ren and Jian Sun},\n  journal={arXiv preprint arXiv:1603.05027},\n  year={2016}}\n@article{Srivastava2015highway,\n  title={Highway Networks},\n  author={Rupesh Kumar Srivastava and Klaus Greff and J{\\\"{u}}rgen Schmidhuber},\n  journal={arXiv preprint arXiv:1505.00387},\n  year={2015}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{johnson2016perceptual,\n  title={Perceptual losses for real-time style transfer and super-resolution},\n  author={Johnson, Justin and Alahi, Alexandre and Fei-Fei, Li},\n  booktitle={European Conference on Computer Vision},\n  pages={694--711},\n  year={2016},\n  organization={Springer}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{CycleGAN2017,\n  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},\n  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},\n  journal={arXiv preprint arXiv:1703.10593},\n  year={2017}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{pix2pix2016,\n  title={Image-to-Image Translation with Conditional Adversarial Networks},\n  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},\n  journal={arXiv preprint arXiv:1611.07004v1},\n  year={2016}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8321694502994226
      ],
      "excerpt": "This is my ongoing tensorflow implementation for unpaired image-to-image translation (Zhu et al., 2017).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9643527176249604
      ],
      "excerpt": "- add instance normalization (Ulyanov D et al., 2016) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8798805348570832
      ],
      "excerpt": "res-net, highway-net, dense-net implementation with endcoder/decoder as in faststyle res-net \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MarvinLvn/imagetranslation-tensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-22T01:25:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-19T22:10:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8672767612421771
      ],
      "excerpt": "This is my ongoing tensorflow implementation for unpaired image-to-image translation (Zhu et al., 2017).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030277142421211
      ],
      "excerpt": "- test u-net declaration with decoder using encoder dimensions (fix crash when height and width other than powers of 2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9477073820481821
      ],
      "excerpt": "- add image buffer that stores the previous image (to update discriminators using a history of 50 generated images) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8193083583085364
      ],
      "excerpt": "test CycleGAN with u-net generator and log loss and compare with pix2pix: OK  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9709952087263929
      ],
      "excerpt": "refactor summary and export of images to work for all models: Pix2Pix, CycleGAN, Pix2Pix2 \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MarvinLavechin/imagetranslation-tensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 17:40:59 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MarvinLvn/imagetranslation-tensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MarvinLvn/imagetranslation-tensorflow",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/MarvinLavechin/imagetranslation-tensorflow/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8818361427395651
      ],
      "excerpt": "Anaconda Python distribution \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.882466147317738
      ],
      "excerpt": "- add one-direction test mode for CycleGAN \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8260262293211895
      ],
      "excerpt": "<img src=\"https://junyanz.github.io/CycleGAN/images/teaser_high_res.jpg\" width=\"900\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8197496066957258
      ],
      "excerpt": "- test other datasets, show results on README.md \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MarvinLvn/imagetranslation-tensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Image translation by CycleGAN and pix2pix in Tensorflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "imagetranslation-tensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MarvinLvn",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MarvinLvn/imagetranslation-tensorflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Linux or OSX.\n- Python 2 or Python 3.\n- CPU or NVIDIA GPU + CUDA CuDNN.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Tensorflow 1.0\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 17:40:59 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone this repository\n```sh\ngit clone https://github.com/tbullmann/imagetranslation-tensorflow.git\ncd imagetranslation-tensorflow\n```\nInstall Tensorflow, e.g. [with Anaconda](https://www.tensorflow.org/install/install_mac#installing_with_anaconda)\n\nCreate directories or symlink\n```sh\nmkdir datasets  #: or symlink; for datasets\nmkdir temp  #: or symlink; for checkpoints, test results\n```\nDownload the CMP Facades dataset (generated from http://cmp.felk.cvut.cz/~tylecr1/facade/)\n```sh\npython tools/download-dataset.py facades datasets\n```\nTrain the model (this may take 1-8 hours depending on GPU, on CPU you will be waiting for a bit)\n```sh\npython translate.py \\\n  --model pix2pix \\\n  --mode train \\\n  --output_dir temp/facades_train \\\n  --max_epochs 200 \\\n  --input_dir datasets/facades/train \\\n  --which_direction BtoA\n```\n\nTest the model\n```sh\npython translate.py \\\n  --model pix2pix \\\n  --mode test \\\n  --output_dir temp/facades_test \\\n  --input_dir datasets/facades/val \\\n  --checkpoint temp/facades_train\n```\nThe test run will output an HTML file at `temp/facades_test/index.html` that shows input/output/target image sets.\n\nFor training of the CycleGAN use ```--model CycleGAN``` instead of ```--model pix2pix```. \nBoth models use u-net as generator by default but can use faststyle-net when specified by ```--generator faststyle```.\n\nYou can look at the loss and computation graph for [pix2pix](docs/run_1_images/Graph_Pix2Pix.png) and [CycleGAN](docs/run_1_images/Graph_CycleGAN.png) using tensorboard:\n\n```sh\ntensorboard --logdir=temp/facades_train\n```  \n\nIf you wish to write in-progress pictures as the network is training, use ```--display_freq 50```. This will update ```temp/facades_train/index.html``` every 50 steps with the current training inputs and outputs.\n\n",
      "technique": "Header extraction"
    }
  ]
}