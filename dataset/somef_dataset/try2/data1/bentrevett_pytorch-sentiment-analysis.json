{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1607.01759",
      "https://arxiv.org/abs/1408.5882",
      "https://arxiv.org/abs/1607.01759",
      "https://arxiv.org/abs/1408.5882",
      "https://arxiv.org/abs/1810.04805"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Here are some things I looked at while making these tutorials. Some of it may be out of date.\n\n* http://anie.me/On-Torchtext/\n* http://mlexplained.com/2018/02/08/a-comprehensive-tutorial-to-torchtext/\n* https://github.com/spro/practical-pytorch\n* https://gist.github.com/Tushar-N/dfca335e370a2bc3bc79876e6270099e\n* https://gist.github.com/HarshTrivedi/f4e7293e941b17d19058f6fb90ab0fec\n* https://github.com/keras-team/keras/blob/master/examples/imdb_fasttext.py\n* https://github.com/Shawn1993/cnn-text-classification-pytorch\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8357664768244879
      ],
      "excerpt": "B - A Closer Look at Word Embeddings  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bentrevett/pytorch-sentiment-analysis",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-12-13T13:36:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-26T16:22:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9270747118197304,
        0.8029565172473898
      ],
      "excerpt": "A - Using TorchText with your Own Datasets  \nThe tutorials use TorchText's built in datasets. This first appendix notebook covers how to load your own datasets using TorchText. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tutorials on getting started with PyTorch and TorchText for sentiment analysis.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bentrevett/pytorch-sentiment-analysis/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 930,
      "date": "Mon, 27 Dec 2021 08:43:45 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bentrevett/pytorch-sentiment-analysis/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bentrevett/pytorch-sentiment-analysis",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/A%20-%20Using%20TorchText%20with%20Your%20Own%20Datasets.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/C%20-%20Loading%2C%20Saving%20and%20Freezing%20Embeddings.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/torchtext_0_10_imdb_nbow.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/5%20-%20Multi-class%20Sentiment%20Analysis.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/2_lstm.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/3_cnn.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/1%20-%20Simple%20Sentiment%20Analysis.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/4_transformer.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/3%20-%20Faster%20Sentiment%20Analysis.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/1_nbow.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/4%20-%20Convolutional%20Sentiment%20Analysis.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/2%20-%20Upgraded%20Sentiment%20Analysis.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/B%20-%20A%20Closer%20Look%20at%20Word%20Embeddings.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/6%20-%20Transformers%20for%20Sentiment%20Analysis.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/experimental/a_nbow-bag.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/experimental/3_rnn_bilstm.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/experimental/2_rnn_gru.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/experimental/4_cnn.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/experimental/1_nbow.ipynb",
      "https://raw.githubusercontent.com/bentrevett/pytorch-sentiment-analysis/master/experimental/5_transformer.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bentrevett/pytorch-sentiment-analysis/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Ben Trevett\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PyTorch Sentiment Analysis",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-sentiment-analysis",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bentrevett",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3219,
      "date": "Mon, 27 Dec 2021 08:43:45 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "sentiment-analysis",
      "tutorial",
      "rnn",
      "lstm",
      "fasttext",
      "torchtext",
      "sentiment-classification",
      "cnn",
      "cnn-text-classification",
      "lstm-sentiment-analysis",
      "pytorch-tutorial",
      "pytorch-tutorials",
      "pytorch-nlp",
      "nlp",
      "natural-language-processing",
      "recurrent-neural-networks",
      "word-embeddings",
      "transformers",
      "bert"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repo contains tutorials covering how to do sentiment analysis using [PyTorch](https://github.com/pytorch/pytorch) 1.8 and [torchtext](https://github.com/pytorch/text) 0.9 using Python 3.7.\n\nThe first 2 tutorials will cover getting started with the de facto approach to sentiment analysis: recurrent neural networks (RNNs). The third notebook covers the [FastText](https://arxiv.org/abs/1607.01759) model and the final covers a [convolutional neural network](https://arxiv.org/abs/1408.5882) (CNN) model.\n\nThere are also 2 bonus \"appendix\" notebooks. The first covers loading your own datasets with torchtext, while the second contains a brief look at the pre-trained word embeddings provided by torchtext.\n\n**If you find any mistakes or disagree with any of the explanations, please do not hesitate to [submit an issue](https://github.com/bentrevett/pytorch-sentiment-analysis/issues/new). I welcome any feedback, positive or negative!**\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To install PyTorch, see installation instructions on the [PyTorch website](https://pytorch.org/get-started/locally).\n\nTo install torchtext:\n\n``` bash\npip install torchtext\n```\n\nWe'll also make use of spaCy to tokenize our data. To install spaCy, follow the instructions [here](https://spacy.io/usage/) making sure to install the English models with:\n\n``` bash\npython -m spacy download en_core_web_sm\n```\n\nFor tutorial 6, we'll use the transformers library, which can be installed via:\n\n```bash\npip install transformers\n```\n\nThese tutorials were created using version 4.3 of the transformers library.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* 1 - [Simple Sentiment Analysis](https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/1%20-%20Simple%20Sentiment%20Analysis.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/bentrevett/pytorch-sentiment-analysis/blob/master/1%20-%20Simple%20Sentiment%20Analysis.ipynb)\n\n    This tutorial covers the workflow of a PyTorch with torchtext project. We'll learn how to: load data, create train/test/validation splits, build a vocabulary, create data iterators, define a model and implement the train/evaluate/test loop. The model will be simple and achieve poor performance, but this will be improved in the subsequent tutorials.\n\n* 2 - [Upgraded Sentiment Analysis](https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/2%20-%20Upgraded%20Sentiment%20Analysis.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/bentrevett/pytorch-sentiment-analysis/blob/master/2%20-%20Upgraded%20Sentiment%20Analysis.ipynb)\n\n    Now we have the basic workflow covered, this tutorial will focus on improving our results. We'll cover: using packed padded sequences, loading and using pre-trained word embeddings, different optimizers, different RNN architectures, bi-directional RNNs, multi-layer (aka deep) RNNs and regularization.\n\n* 3 - [Faster Sentiment Analysis](https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/3%20-%20Faster%20Sentiment%20Analysis.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/bentrevett/pytorch-sentiment-analysis/blob/master/3%20-%20Faster%20Sentiment%20Analysis.ipynb)\n\n    After we've covered all the fancy upgrades to RNNs, we'll look at a different approach that does not use RNNs. More specifically, we'll implement the model from [Bag of Tricks for Efficient Text Classification](https://arxiv.org/abs/1607.01759). This simple model achieves comparable performance as the *Upgraded Sentiment Analysis*, but trains much faster.\n\n* 4 - [Convolutional Sentiment Analysis](https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/4%20-%20Convolutional%20Sentiment%20Analysis.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/bentrevett/pytorch-sentiment-analysis/blob/master/4%20-%20Convolutional%20Sentiment%20Analysis.ipynb)\n\n    Next, we'll cover convolutional neural networks (CNNs) for sentiment analysis. This model will be an implementation of [Convolutional Neural Networks for Sentence Classification](https://arxiv.org/abs/1408.5882).\n\n* 5 - [Multi-class Sentiment Analysis](https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/5%20-%20Multi-class%20Sentiment%20Analysis.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/bentrevett/pytorch-sentiment-analysis/blob/master/5%20-%20Multi-class%20Sentiment%20Analysis.ipynb)\n\n    Then we'll cover the case where we have more than 2 classes, as is common in NLP. We'll be using the CNN model from the previous notebook and a new dataset which has 6 classes.\n\n* 6 - [Transformers for Sentiment Analysis](https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/6%20-%20Transformers%20for%20Sentiment%20Analysis.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/bentrevett/pytorch-sentiment-analysis/blob/master/6%20-%20Transformers%20for%20Sentiment%20Analysis.ipynb)\n\n    Finally, we'll show how to use the transformers library to load a pre-trained transformer model, specifically the BERT model from [this](https://arxiv.org/abs/1810.04805) paper, and use it to provide the embeddings for text. These embeddings can be fed into any model to predict sentiment, however we use a gated recurrent unit (GRU).\n\n",
      "technique": "Header extraction"
    }
  ]
}