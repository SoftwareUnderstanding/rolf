{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2108.10723"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hlsheng1/CT3D",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-08T15:34:58Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T00:55:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9854981565550397,
        0.9680306699020464
      ],
      "excerpt": "Thanks for the OpenPCDet, this implementation of the CT3D is mainly based on the pcdet v0.3. Our paper can be downloaded here ICCV2021.  \n Overview of CT3D. The raw points are first fed into the RPN for generating 3D proposals. Then the raw points along with the corresponding proposals are processed by the channel-wise Transformer composed of the proposal-to-point encoding module and the channel-wise decoding module. Specifically, the proposal-to-point encoding module is to modulate each point feature with global proposal-aware context information. After that, the encoded point features  are transformed into an effective proposal feature representation by the channel-wise decoding module for confidence prediction and box regression. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9101768009737126
      ],
      "excerpt": "|        Only Car         | 86.06  | 85.79  | model-car | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "\"Improving 3D Object Detection with Channel-wise Transformer\", ICCV2021 accept!",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hlsheng1/ct3d/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Thu, 23 Dec 2021 04:27:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hlsheng1/CT3D/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "hlsheng1/CT3D",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/hlsheng1/ct3d/master/tools/scripts/slurm_train.sh",
      "https://raw.githubusercontent.com/hlsheng1/ct3d/master/tools/scripts/dist_test.sh",
      "https://raw.githubusercontent.com/hlsheng1/ct3d/master/tools/scripts/slurm_test_mgpu.sh",
      "https://raw.githubusercontent.com/hlsheng1/ct3d/master/tools/scripts/dist_train.sh",
      "https://raw.githubusercontent.com/hlsheng1/ct3d/master/tools/scripts/slurm_test_single.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Prepare [KITTI](http://www.cvlibs.net/datasets/kitti/eval_object.php?obj_benchmark=3d) dataset and [road planes](https://drive.google.com/file/d/1d5mq0RXRnvHPVeKx6Q612z0YRO1t2wAp/view?usp=sharing)\n\n```shell\n#: Download KITTI and organize it into the following form:\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 kitti\n\u2502   \u2502   \u2502\u2500\u2500 ImageSets\n\u2502   \u2502   \u2502\u2500\u2500 training\n\u2502   \u2502   \u2502   \u251c\u2500\u2500calib & velodyne & label_2 & image_2 & (optional: planes)\n\u2502   \u2502   \u2502\u2500\u2500 testing\n\u2502   \u2502   \u2502   \u251c\u2500\u2500calib & velodyne & image_2\n\n#: Generatedata infos:\npython -m pcdet.datasets.kitti.kitti_dataset create_kitti_infos tools/cfgs/dataset_configs/kitti_dataset.yaml\n```\n\n- Prepare [Waymo](https://waymo.com/open/download/) dataset\n\n```shell\n#: Download Waymo and organize it into the following form:\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 waymo\n\u2502   \u2502   \u2502\u2500\u2500 ImageSets\n\u2502   \u2502   \u2502\u2500\u2500 raw_data\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 segment-xxxxxxxx.tfrecord\n|   |   |   |\u2500\u2500 ...\n|   |   |\u2500\u2500 waymo_processed_data\n\u2502   \u2502   \u2502   \u2502\u2500\u2500 segment-xxxxxxxx/\n|   |   |   |\u2500\u2500 ...\n\u2502   \u2502   \u2502\u2500\u2500 pcdet_gt_database_train_sampled_xx/\n\u2502   \u2502   \u2502\u2500\u2500 pcdet_waymo_dbinfos_train_sampled_xx.pkl\n\n#: Install tf 2.1.0\n#: Install the official waymo-open-dataset by running the following command:\npip3 install --upgrade pip\npip3 install waymo-open-dataset-tf-2-1-0 --user\n\n#: Extract point cloud data from tfrecord and generate data infos:\npython -m pcdet.datasets.waymo.waymo_dataset --func create_waymo_infos --cfg_file tools/cfgs/dataset_configs/waymo_dataset.yaml\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\npip install -r requirement.txt\npython setup.py develop\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8096422022825122
      ],
      "excerpt": "|                         | AP@R11 | AP@R40 |                           Download                           | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9340577486323056,
        0.8837680365796365,
        0.9696001037339058,
        0.92268820804468,
        0.899201228818787
      ],
      "excerpt": "Linux (tested on Ubuntu 16.04) \nPython 3.6+ \nPyTorch 1.1 or higher (tested on PyTorch 1.6) \nCUDA 9.0 or higher (PyTorch 1.3+ needs CUDA 9.2+) \nTrain with a single GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/dist_train.sh ${NUM_GPUS} --cfg_file ${CONFIG_FILE} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414119019616536
      ],
      "excerpt": "bash scripts/slurm_train.sh ${PARTITION} ${JOB_NAME} ${NUM_GPUS} --cfg_file ${CONFIG_FILE} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8413987461166609
      ],
      "excerpt": "bash scripts/dist_train.sh 8 --cfg_file tools/cfgs/kitti_models/second_ct3d.yaml \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.810870454768102
      ],
      "excerpt": "|                         | AP@R11 | AP@R40 |                           Download                           | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train.py --cfg_file ${CONFIG_FILE} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046101214541922
      ],
      "excerpt": "python train.py --cfg_file tools/cfgs/kitti_models/second_ct3d.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8908955068305916
      ],
      "excerpt": "Test with a pretrained model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8506590757383299
      ],
      "excerpt": "python test.py --cfg_file ${CONFIG_FILE} --ckpt ${CKPT} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9426709083215008
      ],
      "excerpt": "python test.py --cfg_file tools/cfgs/kitti_models/second_ct3d.yaml --ckpt output/kitti_models/second_ct3d/default/kitti_val.pth \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hlsheng1/CT3D/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "C",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 hlsheng1\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# \"Improving 3D Object Detection with Channel-wise Transformer\"",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CT3D",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "hlsheng1",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hlsheng1/CT3D/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 71,
      "date": "Thu, 23 Dec 2021 04:27:16 GMT"
    },
    "technique": "GitHub API"
  }
}