{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.09458",
      "https://arxiv.org/abs/1608.06993"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GeoTrouvetout/Vehicle_ReID",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-09T11:36:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-19T13:13:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.965256930275997
      ],
      "excerpt": "This repository is related to the publication \"Improving Vehicle Re-Identification using CNN Latent Spaces: Metrics Comparison and Track-to-track Extension\" (https://arxiv.org/abs/1910.09458). This paper is a postprint of the paper submitted and accepted to IET Computer Vision (https://digital-library.theiet.org/content/journals/iet-cvi). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8728872279551434,
        0.8612275125420914
      ],
      "excerpt": "For a given image <img src=\"https://render.githubusercontent.com/render/math?math=I_{k,i}\\in \\mathbb{R}^{n\\times m}\">, we extract its latent representation (LR) <img src=\"https://render.githubusercontent.com/render/math?math=L_{k,i} \\in \\mathbb{R}^{f}\"> by projecting it in the latent space of a neural network <img src=\"https://render.githubusercontent.com/render/math?math=\\mathcal{N}\"> (in our experiments, the second-to-last layer of a CNN). \nWe construct the matrix <img src=\"https://render.githubusercontent.com/render/math?math=\\mathbf{L}_{k}=[L_{k,1}, ..., L_{k,N_k}] \\in \\mathbb{R}^{f\\times N_k}\">, the LR of the track $T_k$ as a concatenation of the LR of the <img src=\"https://render.githubusercontent.com/render/math?math=N_k\"> images of the track. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8403912700106111
      ],
      "excerpt": "The image-to-track ranking (I2T) corresponds to the T2T ranking procedure but with a query track composed of only one image <img src=\"https://render.githubusercontent.com/render/math?math=T_q = I_q\">, and its corresponding LR <img src=\"https://render.githubusercontent.com/render/math?math=L_q\"> (only the distance metric d used differs). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9078844804843181
      ],
      "excerpt": "- RSCR : Residual of the Sparse Coding Reconstruction \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "with  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8570820992119776,
        0.8484862707442978,
        0.9968029537584643,
        0.9268371053108896,
        0.8965409809573428
      ],
      "excerpt": "- min : minimum of distances \n- mean : average of distances \n- med : median of distances \n- mean50 : average of distances between the 50% smallest distances \n- med50 : average of distances between 50% smallest distances \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "with  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8328161036685092,
        0.9898569117761161,
        0.9058313245958968,
        0.8013563106875763,
        0.9692329278304167
      ],
      "excerpt": "The python package vehicle_reid contains code for : \n1. Extract the latent representation of images of vehicle using the second-to-last layer of our CNN fine-tuned in the task of vehicle recognition as proposed in our paper. The CNN considered here is based on the DenseNet201 (https://arxiv.org/abs/1608.06993) architectures which has been fine-tuned using the VeRI dataset (https://github.com/VehicleReId/VeRidataset). Corresponding weights are given in \"data/cnn_weights/VeRI_densenet_ft50.pth\" \n2. Compute the Ranking Vehicle Re-identification between tracks of vehicle using the various distance metrics studied in the paper.  \n3. Compute the performance metrics rank1 rank5 and mAP. \nThe module vehicle_reid is composed of 3 modules  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GeoTrouvetout/Vehicle_ReID/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Thu, 30 Dec 2021 01:29:45 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GeoTrouvetout/Vehicle_ReID/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "GeoTrouvetout/Vehicle_ReID",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9336801098518991,
        0.8403207817505357,
        0.9336801098518991,
        0.803915929848486
      ],
      "excerpt": "- latent_representation.py \n    - Extract latent representation (LR) of each track of vehicle -> return a json file containing the LR for each track \n- ranking.py \n    - Compute the ranking for each query track -> return a json file containing the ranking for each query track \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GeoTrouvetout/Vehicle_ReID/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Geoffrey ROMAN JIMENEZ\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vehicle Re-Identification using Track-to-track ranking of deep latent representation of vehicles",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vehicle_ReID",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "GeoTrouvetout",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GeoTrouvetout/Vehicle_ReID/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- numpy==1.19.2\n- torchvision==0.7.0\n- torch==1.6.0\n- scikit_learn==0.23.2\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The directory ```data``` contains data to test the module ```vehicle_reid```. Note that to perform the VeRI experiments presented on the paper, you'll need the VeRI dataset which can be found, by simple request to authors, here : https://github.com/JDAI-CV/VeRidataset\n\n- data/cnn_weights/VeRI_densenet_ft50.pth : Pre-trained weights for the DenseNet201 architecture. The model has been trained to classify vehicles of training set the VeRI dataset. Only its latent space (the second-to-last layer) is used to extract features\n- data/image_sample : some VeRI tracks of vehicle (splitted in query and test). \n\n``` \npython3 run_example.py\n```\n\n\n\n\n\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Thu, 30 Dec 2021 01:29:45 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The directory ```data``` contains data to test the module ```vehicle_reid```. Note that to perform the VeRI experiments presented on the paper, you'll need the VeRI dataset which can be found, by simple request to authors, here : https://github.com/JDAI-CV/VeRidataset\n\n- data/cnn_weights/VeRI_densenet_ft50.pth : Pre-trained weights for the DenseNet201 architecture. The model has been trained to classify vehicles of training set the VeRI dataset. Only its latent space (the second-to-last layer) is used to extract features\n- data/image_sample : some VeRI tracks of vehicle (splitted in query and test). \n\n``` \npython3 run_example.py\n```\n\n\n\n\n\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}