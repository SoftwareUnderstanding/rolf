{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1502.03167"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.997267340006914
      ],
      "excerpt": "International Journal of Multimedia Information Retrieval, 2018 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490817347094297
      ],
      "excerpt": "(DIM_LATENT=32, BATCH_SIZE=100) and (DIM_LATENT=128, BATCH_SIZE=1000). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9265749172982553
      ],
      "excerpt": "                    #: if 1.0 only TNO. if 0.0 only pairwise ranking loss \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CPJKU/cca_layer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-02-13T08:26:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T22:50:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9700226633062672,
        0.8746667662612743,
        0.9172574761415562,
        0.908925214220865
      ],
      "excerpt": "This repository contains the code for all three cross-modality retrieval methods \nevaluated in our manuscript: \nEnd-to-End Cross-Modality Retrieval with CCA Projections and Pairwise Ranking Loss. (PDF)<br> \nDorfer M., Schl\u00fcter J., Vall A., Korzeniowski F., and Widmer G.<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9742637666839482,
        0.9736815211243796,
        0.8362654192773941,
        0.9502980396826145,
        0.8982062749114152
      ],
      "excerpt": "In this README we explain how to set up the project, \nhow to get the data, \nand how to train and evaluate the different retrieval models. \nIn particular this repository contains code for the following methods: \nDeep Canonical Correlation Analysis (optimizing the Trace Norm Objective (TNO)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9622104366873716,
        0.9179059268875814,
        0.8875254622431353
      ],
      "excerpt": "The main purpose of the repository is to make the methods evaluated in our article \neasily applicable to new retrieval problems (see Applying the Models to New Retrieval Problems). \nFor details on the three retrieval paradigms we refer to the corresponding article. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "Data Preparation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8922870841319576
      ],
      "excerpt": "Applying the Models to New Retrieval Problems \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150975223344664
      ],
      "excerpt": "namely text-to-image retrieval.<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9539106374210172,
        0.8995772164892952,
        0.9316374951563641,
        0.8795033667247282
      ],
      "excerpt": "and precomputed text features. \nFor the second data set we learn retrieval embedding spaces for complex audio - score pairs. \nThis set of experiments is more interesting, \nas we learn the embedding networks for both modalities entirely from scratch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8635649036077149
      ],
      "excerpt": "You can of course also move the data somewhere else \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8756238661246765
      ],
      "excerpt": "Overall you should have a bit more than 314MB of disk space available. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8322387240306613
      ],
      "excerpt": "Deep Canonical Correlation Analysis (TNO) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833310245982698
      ],
      "excerpt": "over the training epochs. Below you see an exemplar plot for the audio-score data set and all three models: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9727179021188066
      ],
      "excerpt": "- Create the model definition files in cca_layer/models as we did for our applications. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9750838918596403
      ],
      "excerpt": "to get to the best retrieval performance out of your models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9935548016562242
      ],
      "excerpt": "DIM_LATENT = 32     #: dimensionality of retrieval space \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9700815224732818,
        0.8224633844004288
      ],
      "excerpt": "Depending on the problem we set the dimensionality of the latent space (DIM_LATENT) \nto values such as [32, 48, 64, 128]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9384135834185109
      ],
      "excerpt": "of the mini-batches used for training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8716430894927145
      ],
      "excerpt": "To get stable covariance estimates we need to set the BATCH_SIZE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9325621548821749
      ],
      "excerpt": "simply increase your BATCH_SIZE or reduce the dimensionality of your retrieval space. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8868653104419353,
        0.9067902374081351,
        0.863088837159335
      ],
      "excerpt": "                            #: this parmeter controls how often this procedure is repeated. \nLR_MULTIPLIER = 0.5         #: this is the factor by which the learning rate gets multiplied (0.1, 0.5) \nThese are the parameters to control your learning rate as well as your learning rate schedule. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.8408183122729354
      ],
      "excerpt": "L2 = 0.00001        #: degree of L2 regularization (weight decay) \nr1 = r2 = 1e-3      #: Tikhonov regularization of covariance matrices (e.g. C + rI)         \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606704844932285,
        0.9844852269941586
      ],
      "excerpt": "The r parameters are used to regularize the covariance matrices., \nwhich is common for Deep Canonical Correlation Analysis. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9748973221650444
      ],
      "excerpt": "WEIGHT_TNO = 1.0    #: (range: 0 to 1) controls the influence of the Trace Norm Objective (TNO) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of Canonical Correlation Analysis Layer for Cross-Modality Retrieval.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://lasagne.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CPJKU/cca_layer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Tue, 28 Dec 2021 11:29:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/CPJKU/cca_layer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "CPJKU/cca_layer",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To test the performance of a model on the test set you can run  the following command\n```\npython run_eval.py --model models/iapr_ccal_cont.py --data iapr\n```\n\nRunning the command above should give you something like this:\n\n```\nLoading data...\nTrain: 17000\nValid: 1000\nTest: 2000\n\nCompiling prediction functions...\nEvaluating on test set...\nComputing embedding ...\nlv1_latent.shape: (2000, 128)\nlv2_latent.shape: (2000, 128)\n\nHit Rates:\nTop 01: 31.050 (621) 31.050\nTop 05: 58.250 (1165) 11.650\nTop 10: 69.700 (1394) 6.970\nTop 25: 81.700 (1634) 3.268\n\nMedian Rank: 3.00 (2000)\nMean Rank  : 33.99 (2000)\nMean Dist  : 0.58933 \nMRR        : 0.440 \nMin Dist   : 0.18588 \nMax Dist   : 1.16693 \nMed Dist   : 0.59117\n```\n\nIf you would like to change the retrieval direction simply add this flag to the evaluation command:\n```\n--V2_to_V1\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We provide two diverse experimental data sets along with this repository.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This is the list of python packages required to run the code:\n- scipy\n- numpy\n- matplotlib\n- seaborn\n- Theano [(installation instructions)](http://deeplearning.net/software/theano/install.html)\n- lasagne [(installation instructions)](https://lasagne.readthedocs.io/en/latest/user/installation.html)\n\nOnce all requirements are available\nwe recommend to install the *cca_layer package* in develop mode\nby running the following command in the root folder of the project:\n```\npython setup.py develop --user\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9590198023036793
      ],
      "excerpt": "Requirements and Installation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9519115909935985
      ],
      "excerpt": "Required Steps \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956828225668167
      ],
      "excerpt": "To get the data you can run the python script given below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8295560968041561
      ],
      "excerpt": "To train the text-to-image models run the following options: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625155186474297
      ],
      "excerpt": "To train the audio-score retrieval models run: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.913523144448626
      ],
      "excerpt": "To visualize the evolution of your models during training you can run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9422162026835212
      ],
      "excerpt": "these steps are required: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8766778644995192
      ],
      "excerpt": "Here are just a few practical recommendations where you can start to tweaking: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8262157230141619,
        0.8483819940059046
      ],
      "excerpt": "Data Preparation \nModel Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833424227198158,
        0.9246227682586091
      ],
      "excerpt": "and change the data root path in our settings file (<project_root>/cca_layer/config/settings.py). \npython prepare_data.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8663505117965727
      ],
      "excerpt": "To train the text-to-image models run the following options: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9447377080794677
      ],
      "excerpt": "python run_train.py --model models/iapr_ccal_tno.py --data iapr \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9447377080794677
      ],
      "excerpt": "python run_train.py --model models/iapr_learned_cont.py --data iapr \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9447377080794677,
        0.8602363725312409,
        0.8578663560804387
      ],
      "excerpt": "python run_train.py --model models/iapr_ccal_cont.py --data iapr \nTo train the audio-score retrieval models run: \npython run_train.py --model models/&lt;model&gt;.py --data audio_score \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8430526509319418,
        0.8495261284629021
      ],
      "excerpt": "python plot_log.py model_params/audio_score_*/results.pkl --key \"mrr_%s\" --high_is_better \nThis will plot you the Mean Reciprocal Rank (MRR) of your models on train and validation set \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9364643859407757,
        0.9110048081816841
      ],
      "excerpt": "- Implement your data loading function in cca_layer/utils/data.py \n- Add this function to select_data() in cca_layer/utils/run_train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8675342561144803
      ],
      "excerpt": "BATCH_SIZE = 100    #: batch-size used for training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8194265451423934
      ],
      "excerpt": "WEIGHT_TNO = 1.0    #: (range: 0 to 1) controls the influence of the Trace Norm Objective (TNO) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/CPJKU/cca_layer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "End-to-End Cross-Modality Retrieval with CCA Projections and Pairwise Ranking Loss",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cca_layer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "CPJKU",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CPJKU/cca_layer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is the list of python packages required to run the code:\n- scipy\n- numpy\n- matplotlib\n- seaborn\n- Theano [(installation instructions)](http://deeplearning.net/software/theano/install.html)\n- lasagne [(installation instructions)](https://lasagne.readthedocs.io/en/latest/user/installation.html)\n\nOnce all requirements are available\nwe recommend to install the *cca_layer package* in develop mode\nby running the following command in the root folder of the project:\n```\npython setup.py develop --user\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 31,
      "date": "Tue, 28 Dec 2021 11:29:41 GMT"
    },
    "technique": "GitHub API"
  }
}