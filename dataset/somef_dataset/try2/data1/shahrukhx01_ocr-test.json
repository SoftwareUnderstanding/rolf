{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Code taken and modified from [lucidrains](https://github.com/lucidrains), [rwightman](https://github.com/rwightman/pytorch-image-models), [im2markup](https://github.com/harvardnlp/im2markup), [arxiv_leaks](https://github.com/soskek/arxiv_leaks)\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2010.11929",
      "https://arxiv.org/abs/1706.03762"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] [An Image is Worth 16x16 Words](https://arxiv.org/abs/2010.11929)\n\n[2] [Attention Is All You Need](https://arxiv.org/abs/1706.03762)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9615751212402992
      ],
      "excerpt": "* de-macro >= 1.4 (only for parsing arxiv papers) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shahrukhx01/ocr-test",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-12T00:30:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-05T14:36:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9839201708671803
      ],
      "excerpt": "The goal of this project is to create a learning based system that takes an image of a math formula and returns corresponding LaTeX code. As a physics student I often find myself writing down Latex code from a reference image. I wanted to streamline my workflow and began looking into solutions, but besides the Freemium Mathpix I could not find anything ready-to-use that runs locally. That's why I decided to create it myself. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9631125807457606
      ],
      "excerpt": "In order to render the math in many different fonts we use  XeLaTeX, generate a PDF and finally convert it to a PNG. For the last step we need to use some third party tools: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9544328421839504
      ],
      "excerpt": "* ImageMagick with Ghostscript. (for converting pdf to png) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.875683220351444,
        0.9068492746537633
      ],
      "excerpt": "The pix2tex.py file offers a quick way to get the model prediction of an image. First you need to copy the formula image into the clipboard memory for example by using a snipping tool (on Windows built in Win+Shift+S). Next just call the script with python pix2tex.py. It will print out the predicted Latex code for that image and also copy it into your clipboard. \nNote: As of right now it works best with images of smaller resolution. Don't zoom in all the way before taking a picture. Double check the result carefully. You can try to redo the prediction with an other resolution if the answer was wrong. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9803126159952887
      ],
      "excerpt": "The model consist of a ViT [1] encoder with a ResNet backbone and a Transformer [2] decoder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9678220611955759
      ],
      "excerpt": "We need paired data for the network to learn. Luckily there is a lot of LaTeX code on the internet, e.g. wikipedia, arXiv. We also use the formulae from the im2latex-100k dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9777649085315362,
        0.9302287581602335
      ],
      "excerpt": "[ ] fix data scraping and scape more data \n[ ] trace the model \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shahrukhx01/ocr-test/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 20:49:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/shahrukhx01/ocr-test/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "shahrukhx01/ocr-test",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/shahrukhx01/ocr-test/main/Untitled.ipynb",
      "https://raw.githubusercontent.com/shahrukhx01/ocr-test/main/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9289965268738116,
        0.9716249414243635,
        0.9979947896609701,
        0.9989644916361726
      ],
      "excerpt": "PyTorch (tested on v1.7.0) \nPython 3.7+ & dependencies (requirements.txt) \n  pip install -r requirements.txt \n  install timm directly pip install -U git+https://github.com/rwightman/pytorch-image-models.git@ca9b078ac7b5058d6d8d3db0fa6b30916b8fa113 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9716249414243635
      ],
      "excerpt": "* Python 3.7+ & dependencies (requirements.txt) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9789992392810403
      ],
      "excerpt": "For now you need to install the Python dependencies specified in requirements.txt (look further down) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8384633990864878,
        0.8000820070009779
      ],
      "excerpt": "Download the weights.pth file from my Google Drive and place it in the checkpoints directory \nThe pix2tex.py file offers a quick way to get the model prediction of an image. First you need to copy the formula image into the clipboard memory for example by using a snipping tool (on Windows built in Win+Shift+S). Next just call the script with python pix2tex.py. It will print out the predicted Latex code for that image and also copy it into your clipboard. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.879909388006572,
        0.8641706923823177
      ],
      "excerpt": "python dataset/dataset.py --equations path_to_textfile --images path_to_images --tokenizer path_to_tokenizer --out dataset.pkl \nYou can find my generated training data on the Google Drive as well (formulae.zip - images, math.txt - labels). Repeat the step for the validation and test data. All use the same label text file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617182863160628,
        0.9317135315960992
      ],
      "excerpt": "Now for the actual training run \npython train.py --config path_to_config_file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8972932498066812
      ],
      "excerpt": "[ ] trace the model \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/shahrukhx01/ocr-test/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "JavaScript"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Lukas Blecher\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# How to run",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ocr-test",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "shahrukhx01",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shahrukhx01/ocr-test/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone repository\n```bash\ngit clone https://github.com/shahrukhx01/ocr-test.git\ncd 'ocr-test'\n```\n2. (Optional) For ease of reproducibility I like to keep my project libraries seperate. Feel free to omit this if you like.\n```bash\npython3.9 -m virtualenv .venv\nsource .venv/bin/activate\n```\n3. This will install all the libraries you need to run the server.\n```bash\npip install -r requirements.txt\n```\n4. You can run the server by using any one of the following commands\n```bash\npython app.py\n```\n5. Finally try ocr by posting a screenshot\n```bash\ncurl -F \"file=@tmp.jpeg\" http://localhost:8080/predict/latex\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 20:49:30 GMT"
    },
    "technique": "GitHub API"
  }
}