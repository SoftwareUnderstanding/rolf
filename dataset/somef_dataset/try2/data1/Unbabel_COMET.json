{
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "comet-score -s src.de -t hyp1.en -r ref.en --gpus 2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890232838846187
      ],
      "excerpt": "        \"mt\": \"Schools and kindergartens were open\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9115465676107753
      ],
      "excerpt": "Uncertainty-Aware Machine Translation Evaluation  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Unbabel/COMET",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contribution guide\nOverview\nCOMET is an Open Source toolkit aimed to develop state of the art models that can act as MT evaluation metrics. While we do welcome contributions, in order to guarantee their quality and usefulness, it is necessary that we follow basic guidelines in order to ease development, collaboration and readability.\nBasic guidelines\n\nThe project must fully support Python 3.6 or further.\nCode formatting must stick to the Facebook style, 80 columns and single quotes. Please make sure you have black installed and to run it before submitting changes.\nImports are sorted with isort.\nFilenames must be in lowercase.\nTests are running with unittest. Unittest implements a standard test discovery which means that it will search for test_*.py files. We do not enforce a minimum code coverage but it is preferrable to have even very basic tests running for critical pieces of code. Always test functions that takes/returns tensor argument to document the sizes.\nThe comet folder contains core features.\n\nContributing\n\nKeep track of everything by creating issues and editing them with reference to the code! Explain succinctly the problem you are trying to solve and your solution.\nContributions to master should be made through github pull-requests.\nWork in a clean environment (virtualenv is nice). \nYour commit message must start with an infinitive verb (Add, Fix, Remove, ...).\nIf your change is based on a paper, please include a clear comment and reference in the code and in the related issue.\nIn order to test your local changes, install COMET following the instructions on the documentation",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-28T14:59:58Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T18:52:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9871093524267913
      ],
      "excerpt": "COMET is optimized to be used in a single GPU by taking advantage of length batching and embedding caching. When using Multi-GPU since data e spread across GPUs we will typically get fewer cache hits and the length batching samples is replaced by a DistributedSampler. Because of that, according to our experiments, using 1 GPU is faster than using 2 GPUs specially when scoring multiple systems for the same source and reference. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8857355432531206
      ],
      "excerpt": "by default the COMET cache size is 1024. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877,
        0.8979411005071259
      ],
      "excerpt": "model = load_from_checkpoint(model_path) \ndata = [ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8115412672887817
      ],
      "excerpt": "        \"ref\": \"They were able to control the fire.\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "        \"ref\": \"Schools and kindergartens opened\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8242654189282049
      ],
      "excerpt": "seg_scores, sys_score = model.predict(data, batch_size=8, gpus=1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9248200810383398
      ],
      "excerpt": "All the above mentioned models are build on top of XLM-R which cover the following languages: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606651986800784,
        0.8583862376162287,
        0.9133829378971485,
        0.8988579359206748,
        0.9431614720507586,
        0.9364673612774813,
        0.8061904331675908
      ],
      "excerpt": "Thus, results for language pairs containing uncovered languages are unreliable! \nWe recommend the two following models to evaluate your translations: \nwmt20-comet-da: DEFAULT Reference-based Regression model build on top of XLM-R (large) and trained of Direct Assessments from WMT17 to WMT19. Same as wmt-large-da-estimator-1719 from previous versions. \nwmt20-comet-qe-da: Reference-FREE Regression model build on top of XLM-R (large) and trained of Direct Assessments from WMT17 to WMT19. Same as wmt-large-qe-estimator-1719 from previous versions. \nThese two models were developed to participate on the WMT20 Metrics shared task (Mathur et al. 2020) and were among the best metrics that year. Also, in a large-scale study performed by Microsoft Research these two metrics are ranked 1st and 2nd in terms of system-level decision accuracy (Kocmi et al. 2020). At segment-level, these systems also correlate well with expert evaluations based on MQM data (Freitag et al. 2020). \nFor more information about the available COMET models read our metrics descriptions here \nInstead of using pretrained models your can train your own model with the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927054567660341,
        0.8219648343631719
      ],
      "excerpt": "COMET - Deploying a New State-of-the-art MT Evaluation Metric in Production \nUnbabel's Participation in the WMT20 Metrics Shared Task \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": " A Neural Framework for MT Evaluation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Unbabel/COMET/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Thu, 30 Dec 2021 06:40:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Unbabel/COMET/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Unbabel/COMET",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Unbabel/COMET/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simple installation from PyPI\n\n```bash\npip install --upgrade pip  #: ensures that pip is current \npip install unbabel-comet\n```\nor\n```bash\npip install unbabel-comet==1.0.1 --use-feature=2020-resolver\n```\n\nTo develop locally install [Poetry](https://python-poetry.org/docs/#installation) and run the following commands:\n```bash\ngit clone https://github.com/Unbabel/COMET\ncd COMET\npoetry install\n```\n\nAlternately, for development, you can run the CLI tools directly, e.g.,\n\n```bash\nPYTHONPATH=. ./comet/cli/score.py\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9517324687142731
      ],
      "excerpt": "Nonetheless, if your data does not have repetitions and you have more than 1 GPU available, you can run multi-GPU inference with the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8630290883880637
      ],
      "excerpt": "All the above mentioned models are build on top of XLM-R which cover the following languages: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9265403796469508
      ],
      "excerpt": "Instead of using pretrained models your can train your own model with the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9119445992809778
      ],
      "excerpt": "You can then use your own metric to score: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.859873428303176,
        0.8342758470989959
      ],
      "excerpt": "In order to run the toolkit tests you must run the following command: \ncoverage run --source=comet -m unittest discover \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.833667139475504
      ],
      "excerpt": "from comet import download_model, load_from_checkpoint \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278038455928625
      ],
      "excerpt": "model = load_from_checkpoint(model_path) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9151270764930737
      ],
      "excerpt": "        \"src\": \"Dem Feuer konnte Einhalt geboten werden\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9151270764930737
      ],
      "excerpt": "        \"src\": \"Schulen und Kinderg\u00e4rten wurden er\u00f6ffnet.\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8911695570862411
      ],
      "excerpt": "seg_scores, sys_score = model.predict(data, batch_size=8, gpus=1) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8025648523068509
      ],
      "excerpt": "Instead of using pretrained models your can train your own model with the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804917064427378
      ],
      "excerpt": "comet-train --cfg configs/models/{your_model_config}.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8393462746583822
      ],
      "excerpt": "comet-score -s src.de -t hyp1.en -r ref.en --model PATH/TO/CHECKPOINT \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Unbabel/COMET/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Apache License\\n                        Version 2.0, January 2004\\n                     http://www.apache.org/licenses/\\n\\n\\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n1. Definitions.\\n\\n   \"License\" shall mean the terms and conditions for use, reproduction,\\n   and distribution as defined by Sections 1 through 9 of this document.\\n\\n   \"Licensor\" shall mean the copyright owner or entity authorized by\\n   the copyright owner that is granting the License.\\n\\n   \"Legal Entity\" shall mean the union of the acting entity and all\\n   other entities that control, are controlled by, or are under common\\n   control with that entity. For the purposes of this definition,\\n   \"control\" means (i) the power, direct or indirect, to cause the\\n   direction or management of such entity, whether by contract or\\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n   outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n   exercising permissions granted by this License.\\n\\n   \"Source\" form shall mean the preferred form for making modifications,\\n   including but not limited to software source code, documentation\\n   source, and configuration files.\\n\\n   \"Object\" form shall mean any form resulting from mechanical\\n   transformation or translation of a Source form, including but\\n   not limited to compiled object code, generated documentation,\\n   and conversions to other media types.\\n\\n   \"Work\" shall mean the work of authorship, whether in Source or\\n   Object form, made available under the License, as indicated by a\\n   copyright notice that is included in or attached to the work\\n   (an example is provided in the Appendix below).\\n\\n   \"Derivative Works\" shall mean any work, whether in Source or Object\\n   form, that is based on (or derived from) the Work and for which the\\n   editorial revisions, annotations, elaborations, or other modifications\\n   represent, as a whole, an original work of authorship. For the purposes\\n   of this License, Derivative Works shall not include works that remain\\n   separable from, or merely link (or bind by name) to the interfaces of,\\n   the Work and Derivative Works thereof.\\n\\n   \"Contribution\" shall mean any work of authorship, including\\n   the original version of the Work and any modifications or additions\\n   to that Work or Derivative Works thereof, that is intentionally\\n   submitted to Licensor for inclusion in the Work by the copyright owner\\n   or by an individual or Legal Entity authorized to submit on behalf of\\n   the copyright owner. For the purposes of this definition, \"submitted\"\\n   means any form of electronic, verbal, or written communication sent\\n   to the Licensor or its representatives, including but not limited to\\n   communication on electronic mailing lists, source code control systems,\\n   and issue tracking systems that are managed by, or on behalf of, the\\n   Licensor for the purpose of discussing and improving the Work, but\\n   excluding communication that is conspicuously marked or otherwise\\n   designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n   on behalf of whom a Contribution has been received by Licensor and\\n   subsequently incorporated within the Work.\\n\\n2. Grant of Copyright License. Subject to the terms and conditions of\\n   this License, each Contributor hereby grants to You a perpetual,\\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n   copyright license to reproduce, prepare Derivative Works of,\\n   publicly display, publicly perform, sublicense, and distribute the\\n   Work and such Derivative Works in Source or Object form.\\n\\n3. Grant of Patent License. Subject to the terms and conditions of\\n   this License, each Contributor hereby grants to You a perpetual,\\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n   (except as stated in this section) patent license to make, have made,\\n   use, offer to sell, sell, import, and otherwise transfer the Work,\\n   where such license applies only to those patent claims licensable\\n   by such Contributor that are necessarily infringed by their\\n   Contribution(s) alone or by combination of their Contribution(s)\\n   with the Work to which such Contribution(s) was submitted. If You\\n   institute patent litigation against any entity (including a\\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\\n   or a Contribution incorporated within the Work constitutes direct\\n   or contributory patent infringement, then any patent licenses\\n   granted to You under this License for that Work shall terminate\\n   as of the date such litigation is filed.\\n\\n4. Redistribution. You may reproduce and distribute copies of the\\n   Work or Derivative Works thereof in any medium, with or without\\n   modifications, and in Source or Object form, provided that You\\n   meet the following conditions:\\n\\n   (a) You must give any other recipients of the Work or\\n       Derivative Works a copy of this License; and\\n\\n   (b) You must cause any modified files to carry prominent notices\\n       stating that You changed the files; and\\n\\n   (c) You must retain, in the Source form of any Derivative Works\\n       that You distribute, all copyright, patent, trademark, and\\n       attribution notices from the Source form of the Work,\\n       excluding those notices that do not pertain to any part of\\n       the Derivative Works; and\\n\\n   (d) If the Work includes a \"NOTICE\" text file as part of its\\n       distribution, then any Derivative Works that You distribute must\\n       include a readable copy of the attribution notices contained\\n       within such NOTICE file, excluding those notices that do not\\n       pertain to any part of the Derivative Works, in at least one\\n       of the following places: within a NOTICE text file distributed\\n       as part of the Derivative Works; within the Source form or\\n       documentation, if provided along with the Derivative Works; or,\\n       within a display generated by the Derivative Works, if and\\n       wherever such third-party notices normally appear. The contents\\n       of the NOTICE file are for informational purposes only and\\n       do not modify the License. You may add Your own attribution\\n       notices within Derivative Works that You distribute, alongside\\n       or as an addendum to the NOTICE text from the Work, provided\\n       that such additional attribution notices cannot be construed\\n       as modifying the License.\\n\\n   You may add Your own copyright statement to Your modifications and\\n   may provide additional or different license terms and conditions\\n   for use, reproduction, or distribution of Your modifications, or\\n   for any such Derivative Works as a whole, provided Your use,\\n   reproduction, and distribution of the Work otherwise complies with\\n   the conditions stated in this License.\\n\\n5. Submission of Contributions. Unless You explicitly state otherwise,\\n   any Contribution intentionally submitted for inclusion in the Work\\n   by You to the Licensor shall be under the terms and conditions of\\n   this License, without any additional terms or conditions.\\n   Notwithstanding the above, nothing herein shall supersede or modify\\n   the terms of any separate license agreement you may have executed\\n   with Licensor regarding such Contributions.\\n\\n6. Trademarks. This License does not grant permission to use the trade\\n   names, trademarks, service marks, or product names of the Licensor,\\n   except as required for reasonable and customary use in describing the\\n   origin of the Work and reproducing the content of the NOTICE file.\\n\\n7. Disclaimer of Warranty. Unless required by applicable law or\\n   agreed to in writing, Licensor provides the Work (and each\\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n   implied, including, without limitation, any warranties or conditions\\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n   PARTICULAR PURPOSE. You are solely responsible for determining the\\n   appropriateness of using or redistributing the Work and assume any\\n   risks associated with Your exercise of permissions under this License.\\n\\n8. Limitation of Liability. In no event and under no legal theory,\\n   whether in tort (including negligence), contract, or otherwise,\\n   unless required by applicable law (such as deliberate and grossly\\n   negligent acts) or agreed to in writing, shall any Contributor be\\n   liable to You for damages, including any direct, indirect, special,\\n   incidental, or consequential damages of any character arising as a\\n   result of this License or out of the use or inability to use the\\n   Work (including but not limited to damages for loss of goodwill,\\n   work stoppage, computer failure or malfunction, or any and all\\n   other commercial damages or losses), even if such Contributor\\n   has been advised of the possibility of such damages.\\n\\n9. Accepting Warranty or Additional Liability. While redistributing\\n   the Work or Derivative Works thereof, You may choose to offer,\\n   and charge a fee for, acceptance of support, warranty, indemnity,\\n   or other liability obligations and/or rights consistent with this\\n   License. However, in accepting such obligations, You may act only\\n   on Your own behalf and on Your sole responsibility, not on behalf\\n   of any other Contributor, and only if You agree to indemnify,\\n   defend, and hold each Contributor harmless for any liability\\n   incurred by, or claims asserted against, such Contributor by reason\\n   of your accepting any such warranty or additional liability.\\n\\nEND OF TERMS AND CONDITIONS'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Quick Installation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "COMET",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Unbabel",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Unbabel/COMET/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "ricardorei",
        "body": "Scipy missing from dependencies list.",
        "dateCreated": "2021-11-19T15:47:48Z",
        "datePublished": "2021-11-19T15:51:52Z",
        "html_url": "https://github.com/Unbabel/COMET/releases/tag/v1.0.1",
        "name": "Version 1.0.1",
        "tag_name": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/Unbabel/COMET/tarball/v1.0.1",
        "url": "https://api.github.com/repos/Unbabel/COMET/releases/53731969",
        "zipball_url": "https://api.github.com/repos/Unbabel/COMET/zipball/v1.0.1"
      },
      {
        "authorType": "User",
        "author_name": "ricardorei",
        "body": "What's new?\r\n\r\n1) comet-compare command for statistical comparison between two models\r\n2) comet-score with multiple hypothesis/systems\r\n3) Embeddings caching for faster inference (thanks to @jsouza).\r\n4) Length Batching for faster inference (thanks to @CoderPat)\r\n5) Integration with SacreBLEU for dataset downloading (thanks to @mjpost)\r\n6) Monte-carlo Dropout for uncertainty estimation (thanks to @glushkovato and @chryssa-zrv)\r\n7) Some code refactoring\r\n\r\nHopefully, this version is also easier to install than the previous one that relied on fairseq.\r\n\r\n",
        "dateCreated": "2021-11-19T14:49:19Z",
        "datePublished": "2021-11-19T14:59:59Z",
        "html_url": "https://github.com/Unbabel/COMET/releases/tag/v1.0.0",
        "name": "Version 1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/Unbabel/COMET/tarball/v1.0.0",
        "url": "https://api.github.com/repos/Unbabel/COMET/releases/53727713",
        "zipball_url": "https://api.github.com/repos/Unbabel/COMET/zipball/v1.0.0"
      },
      {
        "authorType": "User",
        "author_name": "ricardorei",
        "body": "- We now use Poetry to solve dependency issues.\r\n- Removed LASER encoder and FastBPE dependencies (Windows users can now run COMET)\r\n- Removed references requirements for QE models",
        "dateCreated": "2021-03-11T17:53:06Z",
        "datePublished": "2021-03-11T17:55:36Z",
        "html_url": "https://github.com/Unbabel/COMET/releases/tag/0.1.0",
        "name": "Version 0.1.0",
        "tag_name": "0.1.0",
        "tarball_url": "https://api.github.com/repos/Unbabel/COMET/tarball/0.1.0",
        "url": "https://api.github.com/repos/Unbabel/COMET/releases/39672088",
        "zipball_url": "https://api.github.com/repos/Unbabel/COMET/zipball/0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 109,
      "date": "Thu, 30 Dec 2021 06:40:36 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-translation",
      "evaluation-metrics",
      "natural-language-processing",
      "machine-learning",
      "artificial-intelligence",
      "nlp"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Test examples:\n\n```bash\necho -e \"Dem Feuer konnte Einhalt geboten werden\\nSchulen und Kinderg\u00e4rten wurden er\u00f6ffnet.\" >> src.de\necho -e \"The fire could be stopped\\nSchools and kindergartens were open\" >> hyp1.en\necho -e \"The fire could have been stopped\\nSchools and pre-school were open\" >> hyp2.en\necho -e \"They were able to control the fire.\\nSchools and kindergartens opened\" >> ref.en\n```\n\nBasic scoring command:\n```bash\ncomet-score -s src.de -t hyp1.en -r ref.en\n```\n> you can set `--gpus 0` to test on CPU.\n\nScoring multiple systems:\n```bash\ncomet-score -s src.de -t hyp1.en hyp2.en -r ref.en\n```\n\nWMT test sets via [SacreBLEU](https://github.com/mjpost/sacrebleu):\n\n```bash\ncomet-score -d wmt20:en-de -t PATH/TO/TRANSLATIONS\n```\n\nYou can select another model/metric with the --model flag and for reference-free (QE-as-a-metric) models you don't need to pass a reference.\n\n```bash\ncomet-score -s src.de -t hyp1.en --model wmt20-comet-qe-da\n```\n\nFollowing the work on [Uncertainty-Aware MT Evaluation](https://aclanthology.org/2021.findings-emnlp.330/) you can use the --mc_dropout flag to get a variance/uncertainty value for each segment score. If this value is high, it means that the metric is less confident in that prediction.\n\n```bash\ncomet-score -s src.de -t hyp1.en -r ref.en --mc_dropout 30\n```\n\nWhen comparing two MT systems we encourage you to run the `comet-compare` command to get **statistical significance** with Paired T-Test and bootstrap resampling [(Koehn, et al 2004)](https://aclanthology.org/W04-3250/).\n\n```bash\ncomet-compare -s src.de -x hyp1.en -y hyp2.en -r ref.en\n```\n\nFor even more detailed MT contrastive evaluation please take a look at our new tool [MT-Telescope](https://github.com/Unbabel/MT-Telescope).\n\n",
      "technique": "Header extraction"
    }
  ]
}