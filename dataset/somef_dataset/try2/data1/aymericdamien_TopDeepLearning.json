{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1709.02755",
      "https://arxiv.org/abs/1901.00212|\n|[awd-lstm-lm](https://github.com/salesforce/awd-lstm-lm",
      "https://arxiv.org/abs/1710.10903"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9958633378630758
      ],
      "excerpt": "|opencv|46.1k|Open Source Computer Vision Library| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959146684743172
      ],
      "excerpt": "|tesseract|35.3k|Tesseract Open Source OCR Engine (main repository)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9195926162616405
      ],
      "excerpt": "|funNLP|22.1k|(Machine Learning)NLP\u9762\u8bd5\u4e2d\u5e38\u8003\u5230\u7684\u77e5\u8bc6\u70b9\u548c\u4ee3\u7801\u5b9e\u73b0\u3001nlp4han:\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5de5\u5177\u96c6(\u65ad\u53e5/\u5206\u8bcd/\u8bcd\u6027\u6807\u6ce8/\u7ec4\u5757/\u53e5\u6cd5\u5206\u6790/\u8bed\u4e49\u5206\u6790/NER/N\u5143\u8bed\u6cd5/HMM/\u4ee3\u8bcd\u6d88\u89e3/\u60c5\u611f\u5206\u6790/\u62fc\u5199\u68c0\u67e5\u3001XLM\uff1aFace\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9641348225130735
      ],
      "excerpt": "|cs-video-courses|14.9k|List of Computer Science courses with video lectures.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9277914105518967
      ],
      "excerpt": "|nndl.github.io|12.7k|\u300a\u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\u300b \u90b1\u9521\u9e4f\u8457 Neural Network and Deep Learning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8651886041180082
      ],
      "excerpt": "|darknet|11.4k|YOLOv4 - Neural Networks for Object Detection (Windows and Linux version of Darknet )| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9238101905744046,
        0.9178231096025495
      ],
      "excerpt": "|neural-networks-and-deep-learning|11.3k|Code samples for my book \"Neural Networks and Deep Learning\"| \n|google-research|11.2k|Google Research| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.962168728617774,
        0.9194723478549625,
        0.9786888994998716,
        0.998337814220655,
        0.961217209785172,
        0.8274840104536503
      ],
      "excerpt": "|facenet|10.8k|Face recognition using Tensorflow| \n|DeOldify|10.7k|A Deep Learning based project for colorizing and restoring old images (and video!)| \n|python-machine-learning-book|10.7k|The \"Python Machine Learning (1st edition)\" book code repository and info resource| \n|stanford-cs-229-machine-learning|10.6k|VIP cheatsheets for Stanford's CS 229 Machine Learning| \n|mmdetection|10.5k|OpenMMLab Detection Toolbox and Benchmark| \n|face-api.js|10.4k|JavaScript API for face detection and face recognition in the browser and nodejs with tensorflow.js| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8293263092706973
      ],
      "excerpt": "|fast-style-transfer|9.2k|TensorFlow CNN for fast style transfer \u26a1\ud83d\udda5\ud83c\udfa8\ud83d\uddbc| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9551632216476252
      ],
      "excerpt": "|kubeflow|9.1k|Machine Learning Toolkit for Kubernetes| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9601991828361272
      ],
      "excerpt": "|ml-agents|9k|Unity Machine Learning Agents Toolkit| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.909900852992773
      ],
      "excerpt": "|golearn|7.3k|Machine Learning for Go| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9763154040476395
      ],
      "excerpt": "|mlcourse.ai|7k|Open Machine Learning Course| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8688837631556517
      ],
      "excerpt": "|vision|6.7k|Datasets, Transforms and Models specific to Computer Vision| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9764936049043731
      ],
      "excerpt": "|bullet3|6.6k|Bullet Physics SDK: real-time collision detection and multi-physics simulation for VR, games, visual effects, robotics,| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920147914148954
      ],
      "excerpt": "|lab|6.2k|A customisable 3D platform for agent-based AI research| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9989363369065153
      ],
      "excerpt": "|machine-learning-yearning-cn|6.1k|Machine Learning Yearning \u4e2d\u6587\u7248 - \u300a\u673a\u5668\u5b66\u4e60\u8bad\u7ec3\u79d8\u7c4d\u300b - Andrew Ng \u8457| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868371346575934
      ],
      "excerpt": "|python-machine-learning-book-2nd-edition|5.8k|The \"Python Machine Learning (2nd edition)\" book code repository and info resource| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9128081459486188
      ],
      "excerpt": "|ML-NLP|5.5k|\u6b64\u9879\u76ee\u662f\u673a\u5668\u5b66\u4e60(Machine Learning)\u3001\u6df1\u5ea6\u5b66\u4e60(Deep Learning)\u3001NLP\u9762\u8bd5\u4e2d\u5e38\u8003\u5230\u7684\u77e5\u8bc6\u70b9\u548c\u4ee3\u7801\u5b9e\u73b0\uff0c\u4e5f\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7b97\u6cd5\u5de5\u7a0b\u5e08\u5fc5\u4f1a\u7684\u7406\u8bba\u57fa\u7840\u77e5\u8bc6\u3002| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9946635809492683
      ],
      "excerpt": "|deep-residual-networks|5.4k|Deep Residual Learning for Image Recognition| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9829021358516454
      ],
      "excerpt": "|wav2letter|5.2k|Facebook AI Research's Automatic Speech Recognition Toolkit| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891545106172659,
        0.989794056130436
      ],
      "excerpt": "|h2o-3|4.9k|Open Source Fast Scalable Machine Learning Platform For Smarter Applications: Deep Learning, Gradient Boosting & XGBo\u2026| \n|awesome-machine-learning-on-source-code|4.8k|Cool links & research papers related to Machine Learning applied to source code (MLonCode)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9774902543439558
      ],
      "excerpt": "|smile|4.8k|Statistical Machine Intelligence & Learning Engine| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9911018677116716
      ],
      "excerpt": "|carla|4.7k|Open-source simulator for autonomous driving research.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9576581443887728
      ],
      "excerpt": "|stargan|4.6k|StarGAN - Official PyTorch Implementation (CVPR 2018)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9976260961965907
      ],
      "excerpt": "|Realtime_Multi-Person_Pose_Estimation|4.4k|Code repo for realtime multi-person pose estimation in CVPR'17 (Oral)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9206899369666613
      ],
      "excerpt": "|deeplearning-papernotes|4.2k|Summaries and notes on Deep Learning research papers| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971323773710985
      ],
      "excerpt": "|AlphaPose|4.1k|Real-Time and Accurate Multi-Person Pose Estimation&Tracking System| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.93287665480136
      ],
      "excerpt": "|serenata-de-amor|4.1k|\ud83d\udd75 Artificial Intelligence for social control of public administration| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9596869684204727
      ],
      "excerpt": "|machine-learning-notes|4k|My continuously updated Machine Learning, Probabilistic Models and Deep Learning notes and demos (1500+ slides) \u6211\u4e0d\u95f4\u65ad\u66f4\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9924924389652849,
        0.9971852935237251
      ],
      "excerpt": "|DenseNet|4k|Densely Connected Convolutional Networks, In CVPR 2017 (Best Paper Award).| \n|awesome-project-ideas|4k|Curated list of Machine Learning, NLP, Vision, Recommender Systems Project Ideas| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9166666481780487
      ],
      "excerpt": "|MachineLearning|3.8k|Basic Machine Learning and Deep Learning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8991689979498401
      ],
      "excerpt": "|awesome-ml-for-cybersecurity|3.8k|Machine Learning for Cyber Security| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9919330726830982
      ],
      "excerpt": "|cvat|3.8k|Powerful and efficient Computer Vision Annotation Tool (CVAT)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8415584583382066
      ],
      "excerpt": "|mmf|3.7k|A modular framework for vision & language multimodal research from Facebook AI Research (FAIR)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.806482503779977
      ],
      "excerpt": "|ML_for_Hackers|3.6k|Code accompanying the book \"Machine Learning for Hackers\"| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9565159680877489
      ],
      "excerpt": "|gocv|3.3k|Go package for computer vision using OpenCV 4 and beyond.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9195926162616405
      ],
      "excerpt": "|InterpretableMLBook|3.3k|\u300a\u53ef\u89e3\u91ca\u7684\u673a\u5668\u5b66\u4e60--\u9ed1\u76d2\u6a21\u578b\u53ef\u89e3\u91ca\u6027\u7406\u89e3\u6307\u5357\u300b\uff0c\u8be5\u4e66\u4e3a\u300aInterpretable Machine Learning\u300b\u4e2d\u6587\u7248| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9885427279391034
      ],
      "excerpt": "|machine-learning|3.2k|Content for Udacity's Machine Learning curriculum| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.887167692142383
      ],
      "excerpt": "|tensorflow_poems|3.1k|\u4e2d\u6587\u53e4\u8bd7\u81ea\u52a8\u4f5c\u8bd7\u673a\u5668\u4eba\uff0c\u5c4c\u70b8\u5929\uff0c\u57fa\u4e8etensorflow1.10 api\uff0c\u6b63\u5728\u79ef\u6781\u7ef4\u62a4\u5347\u7ea7\u4e2d\uff0c\u5febstar\uff0c\u4fdd\u6301\u66f4\u65b0\uff01| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8743148652834278,
        0.9878673543585983
      ],
      "excerpt": "|ASRT_SpeechRecognition|3.1k|A Deep-Learning-Based Chinese Speech Recognition System \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e2d\u6587\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf| \n|benchmark_results|3.1k|Visual Tracking Paper List| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8615544989540893
      ],
      "excerpt": "|DeepVideoAnalytics|2.9k|A distributed visual search and visual data analytics platform.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9569732544122974
      ],
      "excerpt": "|computervision-recipes|2.9k|Best Practices, code samples, and documentation for Computer Vision.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8181394416641434
      ],
      "excerpt": "|100-Days-of-ML-Code-Chinese-Version|2.9k|Chinese Translation for Machine Learning Infographics| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507954086596051
      ],
      "excerpt": "|DMTK|2.8k|Microsoft Distributed Machine Learning Toolkit| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.972407958796058
      ],
      "excerpt": "|pigo|2.8k|Pure Go face detection, pupil/eyes localization and facial landmark points detection library| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9908492972049846
      ],
      "excerpt": "|SiamMask|2.7k|[CVPR2019] Fast Online Object Tracking and Segmentation: A Unifying Approach| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9554627125069733
      ],
      "excerpt": "|Automatic_Speech_Recognition|2.7k|End-to-end Automatic Speech Recognition for Madarian and English in Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.89292487927795
      ],
      "excerpt": "|CVPR2020-Code|2.7k|CVPR 2020 \u8bba\u6587\u5f00\u6e90\u9879\u76ee\u5408\u96c6| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9853510537565194
      ],
      "excerpt": "|kornia|2.6k|Open Source Differentiable Computer Vision Library for PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9475576180092198
      ],
      "excerpt": "|espnet|2.6k|End-to-End Speech Processing Toolkit| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9243188970772274
      ],
      "excerpt": "|ai-deadlines|2.6k|\u23f0 AI conference deadline countdowns| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9268707930031782
      ],
      "excerpt": "|training|2.5k|\ud83d\udc1d Custom Object Detection and Classification Training| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999871676801648
      ],
      "excerpt": "|Artificial-Intelligence-Deep-Learning-Machine-Learning-Tutorials|2.4k|A comprehensive list of Deep Learning / Artificial Intelligence and Machine Learning tutorials - rapidly expanding in\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9899413505101146
      ],
      "excerpt": "|luminoth|2.3k|\u26a0\ufe0f UNMAINTAINED. Deep Learning toolkit for Computer Vision.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9329495205760094,
        0.955478352119761
      ],
      "excerpt": "|colorization|2.3k|Automatic colorization using deep neural networks. \"Colorful Image Colorization.\" In ECCV, 2016.| \n|OpenNMT|2.3k|Open Source Neural Machine Translation in Torch (deprecated)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9990717206170899
      ],
      "excerpt": "|3D-ResNets-PyTorch|2.3k|3D ResNets for Action Recognition (CVPR 2018)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8197430051331007
      ],
      "excerpt": "|deepchem|2.2k|Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8530268843043954
      ],
      "excerpt": "|FCOS|2.2k|FCOS: Fully Convolutional One-Stage Object Detection (ICCV'19)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9406060840121583
      ],
      "excerpt": "|machinelearninginaction|2.1k|Source Code for the book: Machine Learning in Action published by Manning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9274409132073548
      ],
      "excerpt": "|mmlspark|2k|Microsoft Machine Learning for Apache Spark| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8963751669432088
      ],
      "excerpt": "|ELF|2k|An End-To-End, Lightweight and Flexible Platform for Game Research| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9859165469228477
      ],
      "excerpt": "|texar|2k|Toolkit for Machine Learning, Natural Language Processing, and Text Generation, in TensorFlow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9984485752050354
      ],
      "excerpt": "|generative_inpainting|1.9k|DeepFill v1/v2 with Contextual Attention and Gated Convolution, CVPR 2018, and ICCV 2019 Oral| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8001199206302154
      ],
      "excerpt": "|human-pose-estimation.pytorch|1.9k|The project is an official implement of our ECCV2018 paper \"Simple Baselines for Human Pose Estimation and Tracking(h\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9997271465006325,
        0.9958917927371737
      ],
      "excerpt": "|mmskeleton|1.8k|A OpenMMLAB toolbox for human pose estimation, skeleton-based action recognition, and action synthesis.| \n|sru|1.8k|Training RNNs as Fast as CNNs (https://arxiv.org/abs/1709.02755)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8824264439431111
      ],
      "excerpt": "|sequence_tagging|1.8k|Named Entity Recognition (LSTM + CRF) - Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9997746191048013
      ],
      "excerpt": "|edge-connect|1.8k|EdgeConnect: Structure Guided Image Inpainting using Edge Prediction, ICCV 2019 https://arxiv.org/abs/1901.00212| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8373058090969138
      ],
      "excerpt": "|spark-ml-source-analysis|1.7k|spark ml \u7b97\u6cd5\u539f\u7406\u5256\u6790\u4ee5\u53ca\u5177\u4f53\u7684\u6e90\u7801\u5b9e\u73b0\u5206\u6790| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9777880979389272
      ],
      "excerpt": "|datascience-pizza|1.7k|\ud83c\udf55 Reposit\u00f3rio para juntar informa\u00e7\u00f5es sobre materiais de estudo em an\u00e1lise de dados e \u00e1reas afins, empresas que trabalham com dados e dicion\u00e1rio de conceitos| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891391424646203
      ],
      "excerpt": "|imgclsmob|1.6k|Sandbox for training convolutional networks for computer vision| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918918685549017
      ],
      "excerpt": "|MTBook|1.6k|\u300a\u673a\u5668\u7ffb\u8bd1\uff1a\u7edf\u8ba1\u5efa\u6a21\u4e0e\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u300b\u8096\u6850 \u6731\u9756\u6ce2 \u8457 - Machine Translation: Statistical Modeling and Deep Learning Methods| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8408862558138948
      ],
      "excerpt": "|fast-wavenet|1.6k|Speedy Wavenet generation using dynamic programming \u26a1| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9737106289744377
      ],
      "excerpt": "|lip-reading-deeplearning|1.5k|\ud83d\udd13 Lip Reading - Cross Audio-Visual Recognition using 3D Architectures| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9990608715957695,
        0.9336201079646346
      ],
      "excerpt": "|awesome-hand-pose-estimation|1.5k|Awesome work on hand pose estimation/tracking| \n|mAP|1.5k|mean Average Precision - This code evaluates the performance of your neural net for object recognition.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.990988644033304
      ],
      "excerpt": "|Machine-Learning-Flappy-Bird|1.5k|Machine Learning for Flappy Bird using Neural Network and Genetic Algorithm| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9995606372696032,
        0.9946313826031112
      ],
      "excerpt": "|GANimation|1.5k|GANimation: Anatomically-aware Facial Animation from a Single Image (ECCV'18 Oral) [PyTorch]| \n|EagleEye|1.5k|Stalk your Friends. Find their Instagram, FB and Twitter Profiles using Image Recognition and Reverse Image Search.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9917055785691976,
        0.8388711920974846
      ],
      "excerpt": "|GAT|1.5k|Graph Attention Networks (https://arxiv.org/abs/1710.10903)| \n|mt-dnn|1.4k|Multi-Task Deep Neural Networks for Natural Language Understanding| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8052858479707351
      ],
      "excerpt": "|cuml|1.4k|cuML - RAPIDS Machine Learning Library| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8546616431601454
      ],
      "excerpt": "|mlr|1.4k|Machine Learning in R| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9829291196867281
      ],
      "excerpt": "|stellargraph|1.4k|StellarGraph - Machine Learning on Graphs| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.864518709856004,
        0.8966403865980441
      ],
      "excerpt": "|seldon-server|1.4k|Machine Learning Platform and Recommendation Engine built on Kubernetes| \n|chainercv|1.4k|ChainerCV: a Library for Deep Learning in Computer Vision| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9538284984120012
      ],
      "excerpt": "|sphereface|1.4k|Implementation for <SphereFace: Deep Hypersphere Embedding for Face Recognition> in CVPR'17.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9596093268216024
      ],
      "excerpt": "|sod|1.4k|An Embedded Computer Vision & Machine Learning Library (CPU Optimized & IoT Capable)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9426719113538272
      ],
      "excerpt": "|anago|1.3k|Bidirectional LSTM-CRF and ELMo for Named-Entity Recognition, Part-of-Speech Tagging and so on.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8258418890718323
      ],
      "excerpt": "|ngraph|1.3k|nGraph - open source C++ library, compiler and runtime for Deep Learning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9811263568732616
      ],
      "excerpt": "|VIBE|1.3k|Official implementation of CVPR2020 paper \"VIBE: Video Inference for Human Body Pose and Shape Estimation\"| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "|practicalAI-cn|1.3k|AI\u5b9e\u6218-practicalAI \u4e2d\u6587\u7248| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9808645864647633
      ],
      "excerpt": "|alpr-unconstrained|1.2k|License Plate Detection and Recognition in Unconstrained Scenarios| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9863226974437115
      ],
      "excerpt": "|OpenSeq2Seq|1.2k|Toolkit for efficient experimentation with Speech Recognition, Text2Speech and NLP| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9187206714568453
      ],
      "excerpt": "|NiftyNet|1.2k|[unmaintained] An open-source convolutional neural networks platform for research in medical image analysis and image-guided therapy| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9995926086217111
      ],
      "excerpt": "|RFBNet|1.2k|Receptive Field Block Net for Accurate and Fast Object Detection, ECCV 2018| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116504415893147
      ],
      "excerpt": "|DLTK|1.2k|Deep Learning Toolkit for Medical Image Analysis| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.882445087035899
      ],
      "excerpt": "|h2o-tutorials|1.2k|Tutorials and training material for the H2O Machine Learning Platform| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8696982213653943
      ],
      "excerpt": "|noreward-rl|1.1k|[ICML 2017] TensorFlow code for Curiosity-driven Exploration for Deep Reinforcement Learning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9585573641152232
      ],
      "excerpt": "|PerceptualSimilarity|1.1k|Learned Perceptual Image Patch Similarity (LPIPS) metric. In CVPR, 2018.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959546310417776
      ],
      "excerpt": "|CRNN_Chinese_Characters_Rec|1k|(CRNN) Chinese Characters Recognition.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9263209770820184
      ],
      "excerpt": "|open-reid|1k|Open source person re-identification library in python| \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aymericdamien/TopDeepLearning",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-04-27T04:13:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T15:22:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9635481478703901
      ],
      "excerpt": "A list of popular github projects related to deep learning (ranked by stars). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9381335654943147
      ],
      "excerpt": "|keras|48.9k|Deep Learning for humans| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9482401131269274,
        0.9711901667374071,
        0.8486727759456852
      ],
      "excerpt": "|faceswap|31.4k|Deepfakes Software For All| \n|transformers|30.4k|\ud83e\udd17Transformers: State-of-the-art Natural Language Processing for Pytorch and TensorFlow 2.0.| \n|100-Days-Of-ML-Code|29.1k|100 Days of ML Coding| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8568475130710206,
        0.875274963523365
      ],
      "excerpt": "|awesome-scalability|26.6k|The Patterns of Scalable, Reliable, and Performant Large-Scale Systems| \n|basics|24.5k|\ud83d\udcda Learn ML with clean code, simplified math and illustrative visuals.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9305864227767465,
        0.8199095029542555
      ],
      "excerpt": "|xgboost|19.4k|Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for Python, R, Java, Scala, C++ and more. Runs on single machine, Hadoop, Spark, Flink and DataFlow| \n|Real-Time-Voice-Cloning|18.4k|Clone a voice in 5 seconds to generate arbitrary speech in real-time| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9559892029959284,
        0.9381608550771116,
        0.9128109809022295
      ],
      "excerpt": "|DeepFaceLab|17.3k|DeepFaceLab is the leading software for creating deepfakes.| \n|pytorch-tutorial|17.3k|PyTorch Tutorial for Deep Learning Researchers| \n|Mask_RCNN|17.2k|Mask R-CNN for object detection and instance segmentation on Keras and TensorFlow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.926282495387138
      ],
      "excerpt": "|NLP-progress|16.2k|Repository to track the progress in Natural Language Processing (NLP), including the datasets and the current state-of-the-art for the most common NLP tasks.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9033420773831179,
        0.807894925811788
      ],
      "excerpt": "|reinforcement-learning|14.7k|Implementation of Reinforcement Learning Algorithms. Python, OpenAI Gym, Tensorflow. Exercises and Solutions to accom\u2026| \n|pwc|14.7k|Papers with code. Sorted by stars. Updated weekly.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8584728164218591
      ],
      "excerpt": "|Qix|13.3k|Machine Learning\u3001Deep Learning\u3001PostgreSQL\u3001Distributed System\u3001Node.Js\u3001Golang| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9258725214604605,
        0.848625400324551,
        0.8838111733407588,
        0.8794619296836136
      ],
      "excerpt": "|Virgilio|12.7k|Your new Mentor for Data Science E-Learning.| \n|nndl.github.io|12.7k|\u300a\u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\u300b \u90b1\u9521\u9e4f\u8457 Neural Network and Deep Learning| \n|Screenshot-to-code|12.7k|A neural network that transforms a design mock-up into a static website.| \n|pytorch-CycleGAN-and-pix2pix|12.4k|Image-to-Image Translation in PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8547574242168033
      ],
      "excerpt": "|gun|11.9k|An open source cybersecurity protocol for syncing decentralized graph data.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452416690591553
      ],
      "excerpt": "|neural-networks-and-deep-learning|11.3k|Code samples for my book \"Neural Networks and Deep Learning\"| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8929140908751149
      ],
      "excerpt": "|gensim|11k|Topic Modelling for Humans| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8759903354759837
      ],
      "excerpt": "|DeOldify|10.7k|A Deep Learning based project for colorizing and restoring old images (and video!)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824739345233702,
        0.8824871041936431,
        0.9601528250194601
      ],
      "excerpt": "|face-api.js|10.4k|JavaScript API for face detection and face recognition in the browser and nodejs with tensorflow.js| \n|Awesome-pytorch-list|10.4k|A comprehensive list of pytorch related content on github,such as different models,implementations,helper libraries,t\u2026| \n|nsfw_data_scraper|10.2k|Collection of scripts to aggregate image data for the purposes of training an NSFW Image Classifier| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918672648248542
      ],
      "excerpt": "|CycleGAN|9.8k|Software that can generate photos from paintings, turn horses into zebras, perform style transfer, and more.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9259979346852777,
        0.8194186222644161,
        0.9151115587582818,
        0.9282151288984827
      ],
      "excerpt": "|DeepCreamPy|9.7k|Decensoring Hentai with Deep Neural Networks| \n|stylegan|9.7k|StyleGAN - Official TensorFlow Implementation| \n|Dive-into-DL-PyTorch|9.6k|\u672c\u9879\u76ee\u5c06\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b(Dive into Deep Learning)\u539f\u4e66\u4e2d\u7684MXNet\u5b9e\u73b0\u6539\u4e3aPyTorch\u5b9e\u73b0\u3002| \n|stanford-tensorflow-tutorials|9.6k|This repository contains code examples for the Stanford's course: TensorFlow for Deep Learning Research.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9334309492650176,
        0.9567162909202338
      ],
      "excerpt": "|Deep-Learning-with-TensorFlow-book|9.4k|\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u5f00\u6e90\u4e66\uff0c\u57fa\u4e8eTensorFlow 2.0\u6848\u4f8b\u5b9e\u6218\u3002Open source Deep Learning book, based on TensorFlow 2.0 framework.| \n|neural-doodle|9.4k|Turn your two-bit doodles into fine artworks with deep neural networks, generate seamless textures from photos, transfer style from one image to another, perform example-based upscaling, but wait... there's more! (An implementation of Semantic Style Transfer.)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9621471046752964
      ],
      "excerpt": "|ncnn|9.2k|ncnn is a high-performance neural network inference framework optimized for the mobile platform| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9555311080234468
      ],
      "excerpt": "|flair|9k|A very simple framework for state-of-the-art Natural Language Processing (NLP)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9721830679141622,
        0.9342004689833004
      ],
      "excerpt": "|botpress|8.8k|\ud83e\udd16 The Conversational Platform with built-in language understanding (NLU), beautiful graphical interface and Dialog Manager (DM). Easily create chatbots and AI-based virtual assistants.| \n|the-gan-zoo|8.7k|A list of all named GANs!| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.934146310988619
      ],
      "excerpt": "|tfjs-core|8.5k|WebGL-accelerated ML // linear algebra // automatic differentiation for JavaScript.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185422069900077
      ],
      "excerpt": "|mit-deep-learning-book-pdf|8.3k|MIT Deep Learning Book in PDF format (complete and parts) by Ian Goodfellow, Yoshua Bengio and Aaron Courville| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8815015184224005
      ],
      "excerpt": "|pytorch_geometric|8.2k|Geometric Deep Learning Extension Library for PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8092980582316222,
        0.8290512791172416,
        0.966790145204177
      ],
      "excerpt": "|bert-as-service|7.9k|Mapping a variable-length sentence to a fixed-length vector using BERT model| \n|pix2pix|7.8k|Image-to-image translation with conditional adversarial nets| \n|mediapipe|7.7k|MediaPipe is the simplest way for researchers and developers to build world-class ML solutions and applications for mobile, edge, cloud and the web.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9354095174314558
      ],
      "excerpt": "|mit-deep-learning|7.7k|Tutorials, assignments, and competitions for MIT Deep Learning related courses.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9420976963213189,
        0.9896015949384039,
        0.807674805413999,
        0.8391115862588892
      ],
      "excerpt": "|vid2vid|7.4k|Pytorch implementation of our method for high-resolution (e.g. 2048x1024) photorealistic video-to-video translation.| \n|Learn_Machine_Learning_in_3_Months|7.3k|This is the code for \"Learn Machine Learning in 3 Months\" by Siraj Raval on Youtube| \n|golearn|7.3k|Machine Learning for Go| \n|Keras-GAN|7.2k|Keras implementations of Generative Adversarial Networks.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544321464224326,
        0.8686477002992461
      ],
      "excerpt": "|pretrained-models.pytorch|6.9k|Pretrained ConvNets for pytorch: NASNet, ResNeXt, ResNet, InceptionV4, InceptionResnetV2, Xception, DPN, etc.| \n|PyTorch-GAN|6.7k|PyTorch implementations of Generative Adversarial Networks.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9275576250170353
      ],
      "excerpt": "|nlp-tutorial|6.6k|Natural Language Processing Tutorial for Deep Learning Researchers| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.878515258965658,
        0.8418270450543021
      ],
      "excerpt": "|DCGAN-tensorflow|6.6k|A tensorflow implementation of \"Deep Convolutional Generative Adversarial Networks\"| \n|tfjs-models|6.5k|Pretrained models for TensorFlow.js| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9687805809917485,
        0.8784862488361617,
        0.9290978171130038,
        0.8795840875112759
      ],
      "excerpt": "|guess|6.3k|\ud83d\udd2e Libraries & tools for enabling Machine Learning driven user-experiences on the web| \n|pyro|6.3k|Deep universal probabilistic programming with Python and PyTorch| \n|lab|6.2k|A customisable 3D platform for agent-based AI research| \n|mml-book.github.io|6.2k|Companion webpage to the book \"Mathematics For Machine Learning\"| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9480449425440723,
        0.9024001588081346
      ],
      "excerpt": "|tensorlayer|6.2k|Deep Learning and Reinforcement Learning Library for Scientists and Engineers \ud83d\udd25| \n|generative-models|6.1k|Collection of generative models, e.g. GAN, VAE in Pytorch and Tensorflow.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9250121083389897,
        0.9690989681515296
      ],
      "excerpt": "|keras-yolo3|6k|A Keras implementation of YOLOv3 (Tensorflow backend)| \n|BossSensor|5.9k|Hide screen when boss is approaching.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8358015429238602,
        0.812849709550444
      ],
      "excerpt": "|TensorFlow-Tutorials|5.9k|Simple tutorials using Google's TensorFlow Framework| \n|argo|5.9k|Argo Workflows: Get stuff done with Kubernetes.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8215100396574757,
        0.9303868011685885,
        0.9242790484745612,
        0.8036247914164237,
        0.8858527563962415,
        0.8561033393650231
      ],
      "excerpt": "|dvc|5.7k|\ud83e\udd89Data Version Control | Git for Data & Models| \n|EasyPR|5.7k|An easy, flexible, and accurate plate recognition project for Chinese licenses in unconstrained situations.| \n|AdversarialNetsPapers|5.6k|The classical paper list with code about generative adversarial nets| \n|tensorpack|5.6k|A Neural Net Training Interface on TensorFlow, with focus on speed + flexibility| \n|photoprism|5.6k|Personal Photo Management powered by Go and Google TensorFlow| \n|tensorflow_cookbook|5.6k|Code for Tensorflow Machine Learning Cookbook| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9651549922042394,
        0.9065344646886558,
        0.8453296764362749
      ],
      "excerpt": "|tensorflow_tutorials|5.5k|From the basics to slightly more interesting applications of Tensorflow| \n|deep-learning-coursera|5.5k|Deep Learning Specialization by Andrew Ng on Coursera.| \n|transferlearning|5.5k|Everything about Transfer Learning and Domain Adaptation--\u8fc1\u79fb\u5b66\u4e60| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9063652192307777,
        0.8892472450305008
      ],
      "excerpt": "|faster-rcnn.pytorch|5.5k|A faster pytorch implementation of faster r-cnn| \n|UGATIT|5.4k|Official Tensorflow implementation of U-GAT-IT: Unsupervised Generative Attentional Networks with Adaptive Layer-Inst\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8069216424114248
      ],
      "excerpt": "|xlnet|5.3k|XLNet: Generalized Autoregressive Pretraining for Language Understanding| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544938663154588
      ],
      "excerpt": "|cnn-text-classification-tf|5.2k|Convolutional Neural Network for Text Classification in Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9562656315765448,
        0.8646391731295147,
        0.8871750899556273
      ],
      "excerpt": "|have-fun-with-machine-learning|4.9k|An absolute beginner's guide to Machine Learning and Image Classification with Neural Networks| \n|eat_tensorflow2_in_30_days|4.9k|Tensorflow2.0 \ud83c\udf4e\ud83c\udf4a is delicious, just eat it! \ud83d\ude0b\ud83d\ude0b| \n|tensorflow-wavenet|4.9k|A TensorFlow implementation of DeepMind's WaveNet paper| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8194186222644161,
        0.8275433373830917
      ],
      "excerpt": "|stylegan2|4.9k|StyleGAN2 - Official TensorFlow Implementation| \n|h2o-3|4.9k|Open Source Fast Scalable Machine Learning Platform For Smarter Applications: Deep Learning, Gradient Boosting & XGBo\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9388843644950453,
        0.8872548961844737,
        0.8274597634140965
      ],
      "excerpt": "|Learning-to-See-in-the-Dark|4.8k|Learning to See in the Dark. CVPR 2018| \n|PyTorch-YOLOv3|4.8k|Minimal PyTorch implementation of YOLOv3| \n|first-order-model|4.8k|This repository contains the source code for the paper First Order Motion Model for Image Animation| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153101767665874
      ],
      "excerpt": "|keras-rl|4.7k|Deep Reinforcement Learning for Keras.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9707773335851392
      ],
      "excerpt": "|Awesome-CoreML-Models|4.7k|Largest list of models for Core ML (for iOS 11+)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.948160115788186,
        0.961812488180197
      ],
      "excerpt": "|gcn|4.7k|Implementation of Graph Convolutional Networks in TensorFlow| \n|introduction_to_ml_with_python|4.7k|Notebooks and code for the book \"Introduction to Machine Learning with Python\"| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8681944879021662
      ],
      "excerpt": "|Data-Science-Wiki|4.6k|A wiki of DataScience, Statistics, Maths, R,Python, AI, Machine Learning, Automation, Devops Tools, Bash, Linux Tutor\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920028287567455,
        0.951813849089012,
        0.9346297170698301
      ],
      "excerpt": "|vaex|4.6k|Out-of-Core DataFrames for Python, ML, visualize and explore big tabular data at a billion rows per second \ud83d\ude80| \n|Grokking-Deep-Learning|4.6k|this repository accompanies the book \"Grokking Deep Learning\"| \n|trax|4.5k|Trax \u2014 Deep Learning with Clear Code and Speed| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9197957665017067
      ],
      "excerpt": "|edward|4.5k|A probabilistic programming language in TensorFlow. Deep generative models, variational inference.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9183272493734338,
        0.8900258214655333,
        0.9710087041128412,
        0.9184312234337441,
        0.9246811497048942
      ],
      "excerpt": "|imbalanced-learn|4.5k|A Python Package to Tackle the Curse of Imbalanced Datasets in Machine Learning| \n|machine-learning-mindmap|4.5k|A mindmap summarising Machine Learning concepts, from Data Analysis to Deep Learning.| \n|seq2seq-couplet|4.5k|Play couplet with seq2seq model. \u7528\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u8054\u3002| \n|EfficientNet-PyTorch|4.4k|A PyTorch implementation of EfficientNet| \n|TensorFlow-Book|4.4k|Accompanying source code for Machine Learning with TensorFlow. Refer to the book for step-by-step explanations.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9059443355907043,
        0.9706327625650195
      ],
      "excerpt": "|amazon-dsstne|4.4k|Deep Scalable Sparse Tensor Network Engine (DSSTNE) is an Amazon developed library for building Deep Learning (DL) ma\u2026| \n|cnn-explainer|4.4k|Learning Convolutional Neural Networks with Interactive Visualization.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9077199935698822,
        0.8899995585905525
      ],
      "excerpt": "|stanford-cs-230-deep-learning|4.3k|VIP cheatsheets for Stanford's CS 230 Deep Learning| \n|Real-Time-Person-Removal|4.3k|Removing people from complex backgrounds in real time using TensorFlow.js in the web browser| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9534949087353839,
        0.8996635164979273
      ],
      "excerpt": "|pytorch-cnn-visualizations|4.2k|Pytorch implementation of convolutional neural network visualization techniques| \n|tensorspace|4.2k|Neural network 3D visualization framework, build interactive and intuitive model in browsers, support pre-trained deep \u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030558832744798,
        0.8914747121616629,
        0.944236505961699
      ],
      "excerpt": "|sketch-code|4.2k|Keras model to generate HTML code from hand-drawn website mockups. Implements an image captioning architecture to dra\u2026| \n|deeplearning-papernotes|4.2k|Summaries and notes on Deep Learning research papers| \n|apex|4.2k|A PyTorch Extension: Tools for easy mixed precision and distributed training in Pytorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9352756133596817,
        0.9792424187553502
      ],
      "excerpt": "|attention-is-all-you-need-pytorch|4.1k|A PyTorch implementation of the Transformer model in \"Attention is All You Need\".| \n|nmap|4.1k|Nmap - the Network Mapper. Github mirror of official SVN repository.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8581356543845713,
        0.8159315722817481,
        0.8193471986689184,
        0.8436380974584299,
        0.961525317403934,
        0.8894556144707401
      ],
      "excerpt": "|serenata-de-amor|4.1k|\ud83d\udd75 Artificial Intelligence for social control of public administration| \n|practical-pytorch|4.1k|DEPRECATED and not maintained - see official repo at https://github.com/pytorch/tutorials| \n|pytorch-image-models|4.1k|PyTorch image models, scripts, pretrained weights -- (SE)ResNet/ResNeXT, DPN, EfficientNet, MixNet, MobileNet-V3/V2, MNASNet, Single-Path NAS, FBNet, and more| \n|face-alignment|4k|\ud83d\udd25 2D and 3D Face alignment library build using pytorch| \n|learning-to-learn|4k|Learning to Learn in TensorFlow| \n|machine-learning-notes|4k|My continuously updated Machine Learning, Probabilistic Models and Deep Learning notes and demos (1500+ slides) \u6211\u4e0d\u95f4\u65ad\u66f4\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8776948655474582
      ],
      "excerpt": "|snorkel|4k|A system for quickly generating training data with weak supervision| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8722197803937418
      ],
      "excerpt": "|awesome-project-ideas|4k|Curated list of Machine Learning, NLP, Vision, Recommender Systems Project Ideas| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9909211037053575,
        0.8700296760131895,
        0.977576600778951
      ],
      "excerpt": "|DeepLearningTutorials|3.9k|Deep Learning Tutorial notes and code. See the wiki for more info.| \n|textgenrnn|3.9k|Easily train your own text-generating neural network of any size and complexity on any text dataset with a few lines \u2026| \n|lucid|3.8k|A collection of infrastructure and tools for research in neural network interpretability.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358325125308748,
        0.8524002910715156
      ],
      "excerpt": "|ssd.pytorch|3.8k|A PyTorch Implementation of Single Shot MultiBox Detector| \n|MachineLearning|3.8k|Basic Machine Learning and Deep Learning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9082157727181109
      ],
      "excerpt": "|awesome-ml-for-cybersecurity|3.8k|Machine Learning for Cyber Security| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8689578475009175
      ],
      "excerpt": "|deep-learning-roadmap|3.8k|\ud83d\udce1 All You Need to Know About Deep Learning - A kick-starter| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8690824017262749,
        0.9738403471905758
      ],
      "excerpt": "|CapsNet-Tensorflow|3.7k|A Tensorflow implementation of CapsNet(Capsules Net) in paper Dynamic Routing Between Capsules| \n|Yet-Another-EfficientDet-Pytorch|3.6k|The pytorch re-implement of the official efficientdet with SOTA performance in real time and pretrained weights.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8965100685485097
      ],
      "excerpt": "|ML_for_Hackers|3.6k|Code accompanying the book \"Machine Learning for Hackers\"| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8706575296292606,
        0.9070368793877289
      ],
      "excerpt": "|tensorflow-generative-model-collections|3.6k|Collection of generative models in Tensorflow| \n|DeepLearning.ai-Summary|3.6k|This repository contains my personal notes and summaries on DeepLearning.ai specialization courses. I've enjoyed ever\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153101767665874
      ],
      "excerpt": "|pwnagotchi|3.5k|(\u2310\u25a0_\u25a0) - Deep Reinforcement Learning instrumenting bettercap for WiFi pwning.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9067958835697798
      ],
      "excerpt": "|deep-learning|3.5k|Repo for the Deep Learning Nanodegree Foundations program.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9188014713299028,
        0.9791843563472409
      ],
      "excerpt": "|BigDL|3.5k|BigDL: Distributed Deep Learning Framework for Apache Spark| \n|AlgoWiki|3.5k|Repository which contains links and resources on different topics of Computer Science.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9111388463990039
      ],
      "excerpt": "|tf-pose-estimation|3.4k|Deep Pose Estimation implemented using Tensorflow with Custom Architectures for fast inference.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8887973387197274
      ],
      "excerpt": "|deep-reinforcement-learning|3.3k|Repo for the Deep Reinforcement Learning Nanodegree program| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515451713617896
      ],
      "excerpt": "|d2l-pytorch|3.3k|This project reproduces the book Dive Into Deep Learning (www.d2l.ai), adapting the code from MXNet into PyTorch.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8829633336880098,
        0.923750716954593
      ],
      "excerpt": "|SmartCropper|3.3k|\ud83d\udd25 A library for cropping image in a smart way that can identify the border and correct the cropped image. \u667a\u80fd\u56fe\u7247\u88c1\u526a\u6846\u67b6\u3002\u81ea\u52a8\u8bc6\u522b\u8fb9\u6846\uff0c\u624b\u52a8\u8c03\u8282\u9009\u533a\uff0c\u4f7f\u7528\u900f\u89c6\u53d8\u6362\u88c1\u526a\u5e76\u77eb\u6b63\u9009\u533a\uff1b\u9002\u7528\u4e8e\u8eab\u4efd\u8bc1\uff0c\u540d\u7247\uff0c\u6587\u6863\u7b49\u7167\u7247\u7684\u88c1\u526a\u3002| \n|PyTorchZeroToAll|3.3k|Simple PyTorch Tutorials Zero to ALL!| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503829381739865,
        0.9542028621743653,
        0.9245057764229605
      ],
      "excerpt": "|DeepLearning|3.2k|\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u6559\u7a0b, \u4f18\u79c0\u6587\u7ae0, Deep Learning Tutorial| \n|vespa|3.2k|Vespa is an engine for low-latency computation over large data sets.| \n|deep-voice-conversion|3.2k|Deep neural networks for voice conversion (voice style transfer) in Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9615264127613526,
        0.8874587053255577
      ],
      "excerpt": "|skflow|3.2k|Simplified interface for TensorFlow (mimicking Scikit Learn) for Deep Learning| \n|Tensorflow-Project-Template|3.2k|A best practice for tensorflow project template architecture.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9793781992322524,
        0.9390376602308347
      ],
      "excerpt": "|MatchZoo|3.1k|Facilitating the design, comparison and sharing of deep text matching models.| \n|transformer|3.1k|A TensorFlow Implementation of the Transformer: Attention Is All You Need| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9345674116143
      ],
      "excerpt": "|Deep-Learning-Roadmap|3.1k|\ud83d\udce1 Organized Resources for Deep Learning Researchers and Developers| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372098370091274
      ],
      "excerpt": "|pytorch-cifar|3k|95.16% on CIFAR10 with PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8657157124212093
      ],
      "excerpt": "|Reinforcement-Learning|3k|Learn Deep Reinforcement Learning in 60 days! Lectures & Code in Python. Reinforcement Learning + Deep Learning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8111142254304614
      ],
      "excerpt": "|probability|3k|Probabilistic reasoning and statistical analysis in TensorFlow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8994852809946278
      ],
      "excerpt": "|tensorwatch|2.9k|Debugging, monitoring and visualization for Python Machine Learning and Data Science| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028177863298441
      ],
      "excerpt": "|text-detection-ctpn|2.9k|text detection mainly based on ctpn model in tensorflow, id card detect, connectionist text proposal network| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106129681800028
      ],
      "excerpt": "|tensorflow-yolov3|2.9k|\ud83d\udd25 Pure tensorflow Implement of YOLOv3 with support to train your own dataset| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891606775254512
      ],
      "excerpt": "|BERT-BiLSTM-CRF-NER|2.9k|Tensorflow solution of NER task Using BiLSTM-CRF model with Google BERT Fine-tuning And private Server services| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9636426321357157
      ],
      "excerpt": "|ignite|2.9k|High-level library to help with training and evaluating neural networks in PyTorch flexibly and transparently.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8415994426854548
      ],
      "excerpt": "|100-Days-of-ML-Code-Chinese-Version|2.9k|Chinese Translation for Machine Learning Infographics| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8682896695072224
      ],
      "excerpt": "|libpostal|2.8k|A C library for parsing/normalizing street addresses around the world. Powered by statistical NLP and open geo data.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8095842816486291
      ],
      "excerpt": "|easy-tensorflow|2.8k|Simple and comprehensive tutorials in TensorFlow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414829693594588,
        0.8994214987169826,
        0.8485716134810694,
        0.9809136529791103
      ],
      "excerpt": "|pytorch-yolo-v3|2.8k|A PyTorch implementation of the YOLO v3 object detection algorithm| \n|jukebox|2.8k|Code for the paper \"Jukebox: A Generative Model for Music\"| \n|makegirlsmoe_web|2.8k|Create Anime Characters with MakeGirlsMoe| \n|deep-learning-keras-tensorflow|2.8k|Introduction to Deep Neural Networks with Keras and Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8650930528175568
      ],
      "excerpt": "|DALI|2.7k|A library containing both highly optimized building blocks and an execution engine for data pre-processing in deep le\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146265658874873
      ],
      "excerpt": "|Automatic_Speech_Recognition|2.7k|End-to-end Automatic Speech Recognition for Madarian and English in Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8231747935921422,
        0.9956149537441646,
        0.9394611099894637
      ],
      "excerpt": "|pygcn|2.7k|Graph Convolutional Networks in PyTorch| \n|deep-learning-book|2.7k|Repository for \"Introduction to Artificial Neural Networks and Deep Learning: A Practical Guide with Applications in \u2026| \n|pointnet|2.7k|PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8087667814627001
      ],
      "excerpt": "|LSTM-Human-Activity-Recognition|2.6k|Human Activity Recognition example using TensorFlow on smartphone sensors dataset and an LSTM RNN. Classifying the type of movement amongst six activity categories - Guillaume Chevalier| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9038462200777557
      ],
      "excerpt": "|Pytorch-UNet|2.6k|PyTorch implementation of the U-Net for image semantic segmentation with high quality images| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372396012058242,
        0.9966106134145902
      ],
      "excerpt": "|Ad-papers|2.6k|Papers on Computational Advertising| \n|deep-high-resolution-net.pytorch|2.6k|The project is an official implementation of our CVPR2019 paper \"Deep High-Resolution Representation Learning for Hum\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.864790958057934,
        0.8546901215054433,
        0.9953936934287592
      ],
      "excerpt": "|espnet|2.6k|End-to-End Speech Processing Toolkit| \n|ltp|2.6k|Language Technology Platform| \n|Learn_Deep_Learning_in_6_Weeks|2.6k|This is the Curriculum for \"Learn Deep Learning in 6 Weeks\" by Siraj Raval on Youtube| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8104372789282087,
        0.8339609651820138,
        0.970070578555827
      ],
      "excerpt": "|3DDFA|2.6k|The PyTorch improved version of TPAMI 2017 paper: Face Alignment in Full Pose Range: A 3D Total Solution.| \n|olivia|2.6k|\ud83d\udc81\u200d\u2640\ufe0fYour new best friend powered by an artificial neural network| \n|albert_zh|2.6k|A LITE BERT FOR SELF-SUPERVISED LEARNING OF LANGUAGE REPRESENTATIONS, \u6d77\u91cf\u4e2d\u6587\u9884\u8bad\u7ec3ALBERT\u6a21\u578b| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9174488876880976,
        0.8485201394771907,
        0.8473526370768275,
        0.9728373998507269,
        0.9441698077678636
      ],
      "excerpt": "|rust|2.5k|Rust language bindings for TensorFlow| \n|miles-deep|2.5k|Deep Learning Porn Video Classifier/Editor with Caffe| \n|VisualDL|2.5k|Deep Learning Visualization Toolkit\uff08\u300e\u98de\u6868\u300f\u6df1\u5ea6\u5b66\u4e60\u53ef\u89c6\u5316\u5de5\u5177 \uff09| \n|SinGAN|2.5k|Official pytorch implementation of the paper: \"SinGAN: Learning a Generative Model from a Single Natural Image\"| \n|t81_558_deep_learning|2.5k|Washington University (in St. Louis) Course T81-558: Applications of Deep Neural Networks| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9338986575300537,
        0.8970420003767673,
        0.9387673123638933,
        0.8813176076514727
      ],
      "excerpt": "|PocketFlow|2.5k|An Automatic Model Compression (AutoMC) framework for developing smaller and faster AI applications.| \n|autogluon|2.5k|AutoGluon: AutoML Toolkit for Deep Learning| \n|simple-faster-rcnn-pytorch|2.5k|A simplified implemention of Faster R-CNN that replicate performance from origin paper| \n|MITIE|2.5k|MITIE: library and tools for information extraction| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414907742546436,
        0.8987464367972741
      ],
      "excerpt": "|EAST|2.4k|A tensorflow implementation of EAST text detector| \n|DeepNLP-models-Pytorch|2.4k|Pytorch implementations of various Deep NLP models in cs-224n(Stanford Univ)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9404462959624654,
        0.8752591728028809
      ],
      "excerpt": "|stanford_dl_ex|2.4k|Programming exercises for the Stanford Unsupervised Feature Learning and Deep Learning Tutorial| \n|tensorflow-internals|2.4k|It is open source ebook about TensorFlow kernel and implementation mechanism.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187122309208192
      ],
      "excerpt": "|text|2.4k|Data loaders and abstractions for text and NLP| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9533930862483422
      ],
      "excerpt": "|pytorch-summary|2.4k|Model summary in PyTorch similar to model.summary() in Keras| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9238616823043906,
        0.914816060251934,
        0.9298196141111125,
        0.9233262784269802,
        0.9520824984203147
      ],
      "excerpt": "|Deep_reinforcement_learning_Course|2.4k|Implementations from the free course Deep Reinforcement Learning with Tensorflow| \n|ML-Tutorial-Experiment|2.4k|Coding the Machine Learning Tutorial for Learning to Learn| \n|pytorch-Deep-Learning|2.4k|Deep Learning (with PyTorch)| \n|models|2.4k|A collection of pre-trained, state-of-the-art models in the ONNX format| \n|book|2.4k|Deep Learning 101 with PaddlePaddle \uff08\u300e\u98de\u6868\u300f\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5165\u95e8\u6559\u7a0b\uff09| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956980706296742,
        0.915277931431557,
        0.8235319771443079
      ],
      "excerpt": "|Dive-into-DL-TensorFlow2.0|2.4k|\u672c\u9879\u76ee\u5c06\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b(Dive into Deep Learning)\u539f\u4e66\u4e2d\u7684MXNet\u5b9e\u73b0\u6539\u4e3aTensorFlow 2.0\u5b9e\u73b0\uff0c\u9879\u76ee\u5df2\u5f97\u5230\u674e\u6c90\u8001\u5e08\u7684\u540c\u610f| \n|Artificial-Intelligence-Deep-Learning-Machine-Learning-Tutorials|2.4k|A comprehensive list of Deep Learning / Artificial Intelligence and Machine Learning tutorials - rapidly expanding in\u2026| \n|segmentation_models|2.4k|Segmentation models with pretrained backbones. Keras and TensorFlow Keras.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146066797785026,
        0.8288267600498093,
        0.8404920065648882
      ],
      "excerpt": "|weld|2.3k|High-performance runtime for data analytics applications| \n|PyTorch-BigGraph|2.3k|Generate embeddings from large-scale graph-structured data.| \n|byteps|2.3k|A high performance and generic framework for distributed DNN training| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.975373741435613,
        0.9888361648325815,
        0.814422643547545
      ],
      "excerpt": "|Alink|2.3k|Alink is the Machine Learning algorithm platform based on Flink, developed by the PAI team of Alibaba computing platf\u2026| \n|introtodeeplearning|2.3k|Lab Materials for MIT 6.S191: Introduction to Deep Learning| \n|TensorFlow-and-DeepLearning-Tutorial|2.3k|A TensorFlow & Deep Learning online course I taught in 2016| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8087174321809626
      ],
      "excerpt": "|colorization|2.3k|Automatic colorization using deep neural networks. \"Colorful Image Colorization.\" In ECCV, 2016.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8731026471989977
      ],
      "excerpt": "|datascience|2.3k|Curated list of Python resources for data science.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8631746804917477,
        0.9189084238162317,
        0.9582418680102813,
        0.8226525502478987
      ],
      "excerpt": "|covid-chestxray-dataset|2.2k|We are building an open database of COVID-19 cases with chest X-ray or CT images.| \n|deepchem|2.2k|Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology| \n|awesome-learning-resources|2.2k|\ud83d\udd25 Awesome list of resources on Web Development.| \n|omniscidb|2.2k|OmniSciDB (formerly MapD Core)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.885189334079083,
        0.9483950232185332,
        0.9662235761037933
      ],
      "excerpt": "|spotlight|2.2k|Deep recommender models using PyTorch.| \n|datasets|2.2k|TFDS is a collection of datasets ready to use with TensorFlow, Jax, ...| \n|Deep-Learning-for-Recommendation-Systems|2.2k|This repository contains Deep Learning based articles , paper and repositories for Recommender Systems| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9934376350991417
      ],
      "excerpt": "|dowhy|2.1k|DoWhy is a Python library for causal inference that supports explicit modeling and testing of causal assumptions. DoWhy is based on a unified language for causal inference, combining causal graphical models and potential outcomes frameworks.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9152262386197632
      ],
      "excerpt": "|tacotron|2.1k|A TensorFlow implementation of Google's Tacotron speech synthesis with pre-trained model (unofficial)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9614101103211962,
        0.9648025102828722,
        0.8143475655626847
      ],
      "excerpt": "|deepdetect|2.1k|Deep Learning API and Server in C++11 support for Caffe, Caffe2, PyTorch,TensorRT, Dlib, NCNN, Tensorflow, XGBoost an\u2026| \n|XLM|2.1k|PyTorch original implementation of Cross-lingual Language Model Pretraining.| \n|tensorflow-on-raspberry-pi|2.1k|TensorFlow for Raspberry Pi| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9808287566249432,
        0.8016503725580796
      ],
      "excerpt": "|AlphaZero_Gomoku|2.1k|An implementation of the AlphaZero algorithm for Gomoku (also called Gobang or Five in a Row)| \n|pytorch-beginner|2.1k|pytorch tutorial for beginners| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9696147925391074,
        0.9420072782727136
      ],
      "excerpt": "|pytorch-sentiment-analysis|2k|Tutorials on getting started with PyTorch and TorchText for sentiment analysis.| \n|ELF|2k|An End-To-End, Lightweight and Flexible Platform for Game Research| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.845847863477081,
        0.9507156599391777,
        0.8795529012714896
      ],
      "excerpt": "|neuralcoref|2k|\u2728Fast Coreference Resolution in spaCy with Neural Networks| \n|DeepRL-Agents|2k|A set of Deep Reinforcement Learning Agents implemented in Tensorflow.| \n|RL-Adventure|2k|Pytorch Implementation of DQN / DDQN / Prioritized replay/ noisy networks/ distributional values/ Rainbow/ hierarchic\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8637103394650302
      ],
      "excerpt": "|pytorch-generative-model-collections|2k|Collection of generative models in Pytorch version.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9019216973340415,
        0.8323504939740461,
        0.9368690198394324,
        0.8407364003010314
      ],
      "excerpt": "|deepvariant|2k|DeepVariant is an analysis pipeline that uses a deep neural network to call genetic variants from next-generation DNA sequencing data.| \n|texar|2k|Toolkit for Machine Learning, Natural Language Processing, and Text Generation, in TensorFlow| \n|kaolin|2k|A PyTorch Library for Accelerating 3D Deep Learning Research| \n|Clairvoyant|2k|Software designed to identify and monitor social/historical cues for short term stock movement| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9379141539547785,
        0.8194616490644675
      ],
      "excerpt": "|DeepRL|2k|Modularized Implementation of Deep RL Algorithms in PyTorch| \n|lgo|2k|Interactive Go programming with Jupyter| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9518782524655177,
        0.9438649575634027
      ],
      "excerpt": "|dm_control|2k|DeepMind's software stack for physics-based simulation and Reinforcement Learning environments, using MuJoCo.| \n|gpytorch|2k|A highly efficient and modular implementation of Gaussian Processes in PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9257102218653714,
        0.9244419741706256,
        0.9255191045492143
      ],
      "excerpt": "|alpha-zero-general|1.9k|A clean implementation based on AlphaZero for any game in any framework + tutorial + Othello/Gobang/TicTacToe/Connect4| \n|tacotron2|1.9k|Tacotron 2 - PyTorch implementation with faster-than-realtime inference| \n|siamese-triplet|1.9k|Siamese and triplet networks with online pair/triplet mining in PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.994834944335633,
        0.9341481308043655
      ],
      "excerpt": "|code-of-learn-deep-learning-with-pytorch|1.9k|This is code of book \"Learn Deep Learning with PyTorch\"| \n|gpt-2-simple|1.9k|Python package to easily retrain OpenAI's GPT-2 text-generating model on new texts| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9892017746427682
      ],
      "excerpt": "|human-pose-estimation.pytorch|1.9k|The project is an official implement of our ECCV2018 paper \"Simple Baselines for Human Pose Estimation and Tracking(h\u2026| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9463727033983227,
        0.8475863126544798
      ],
      "excerpt": "|pytorch-playground|1.9k|Base pretrained models and datasets in pytorch (MNIST, SVHN, CIFAR10, CIFAR100, STL10, AlexNet, VGG16, VGG19, ResNet, Inception, SqueezeNet)| \n|bertviz|1.9k|Tool for visualizing attention in the Transformer model (BERT, GPT-2, Albert, XLNet, RoBERTa, CTRL, etc.)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9440017785383372,
        0.9433355834188212
      ],
      "excerpt": "|Reco-papers|1.8k|Classic papers and resources on recommendation| \n|coach|1.8k|Reinforcement Learning Coach by Intel AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8824221331139765
      ],
      "excerpt": "|pytorch-deeplab-xception|1.8k|DeepLab v3+ model in PyTorch. Support different backbones.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787011468382627,
        0.9057048566332082,
        0.9079899187310382,
        0.9618615866129575
      ],
      "excerpt": "|pytorch-seq2seq|1.8k|Tutorials on implementing a few sequence-to-sequence (seq2seq) models with PyTorch and TorchText.| \n|pai|1.8k|Resource scheduling and cluster management for AI| \n|AI-Blocks|1.8k|A powerful and intuitive WYSIWYG interface that allows anyone to create Machine Learning models!| \n|scikit-optimize|1.8k|Sequential model-based optimization with a scipy.optimize interface| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9634582574416872,
        0.9853402302703149
      ],
      "excerpt": "|awd-lstm-lm|1.7k|LSTM and QRNN Language Model Toolkit for PyTorch| \n|pytorch-kaldi|1.7k|pytorch-kaldi is a project for developing state-of-the-art DNN/RNN hybrid speech recognition systems. The DNN part is managed by pytorch, while feature extraction, label computation, and decoding are performed with the kaldi toolkit.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8427915054389801
      ],
      "excerpt": "|zi2zi|1.7k|Learning Chinese Character style with conditional GAN| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9288796993728831,
        0.9325568730600857
      ],
      "excerpt": "|ranking|1.7k|Learning to Rank in TensorFlow| \n|mathAI|1.7k|\u4e00\u4e2a\u62cd\u7167\u505a\u9898\u7a0b\u5e8f\u3002\u8f93\u5165\u4e00\u5f20\u5305\u542b\u6570\u5b66\u8ba1\u7b97\u9898\u7684\u56fe\u7247\uff0c\u8f93\u51fa\u8bc6\u522b\u51fa\u7684\u6570\u5b66\u8ba1\u7b97\u5f0f\u4ee5\u53ca\u8ba1\u7b97\u7ed3\u679c\u3002This is a mathematic expression recognition project.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9087223630133118,
        0.9614357298584454,
        0.981741769012512,
        0.889912608931637
      ],
      "excerpt": "|ComputeLibrary|1.7k|The ARM Computer Vision and Machine Learning library is a set of functions optimised for both ARM CPUs and GPUs using SIMD technologies.| \n|tacotron|1.7k|A TensorFlow Implementation of Tacotron: A Fully End-to-End Text-To-Speech Synthesis Model| \n|DeepLearn|1.7k|Implementation of research papers on Deep Learning+ NLP+ CV in Python using Keras, Tensorflow and Scikit Learn.| \n|analytics-zoo|1.7k|Distributed Tensorflow, Keras and PyTorch on Apache Spark/Flink & Ray| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8426797655343093,
        0.9330714887098298,
        0.8246051258189779
      ],
      "excerpt": "|robosat|1.6k|Semantic segmentation on aerial and satellite imagery. Extracts features such as: buildings, parking lots, roads, water, clouds| \n|pointnet2|1.6k|PointNet++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space| \n|AutonomousDrivingCookbook|1.6k|Scenarios, tutorials and demos for Autonomous Driving| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9112215020329123,
        0.8251225749343168,
        0.9366082756779257
      ],
      "excerpt": "|torchsample|1.6k|High-Level Training, Data Augmentation, and Utilities for Pytorch| \n|nlp|1.6k|\ud83e\udd17nlp \u2013 Datasets and evaluation metrics for Natural Language Processing in NumPy, Pandas, PyTorch and TensorFlow| \n|hdbscan|1.6k|A high performance implementation of HDBSCAN clustering.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9523509280279796
      ],
      "excerpt": "|knockknock|1.6k|\ud83d\udeaa\u270aKnock Knock: Get notified when your training ends with only two additional lines of code| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9700571653982614,
        0.9291674027839708
      ],
      "excerpt": "|gandissect|1.6k|Pytorch-based tools for visualizing and understanding the neurons of a GAN. https://gandissect.csail.mit.edu/| \n|NCRFpp|1.6k|NCRF++, a Neural Sequence Labeling Toolkit. Easy use to any sequence labeling tasks (e.g. NER, POS, Segmentation). It includes character LSTM/CNN, word LSTM/CNN and softmax/CRF components.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8453347267566247
      ],
      "excerpt": "|tinyflow|1.6k|Tutorial code on how to build your own Deep Learning System in 2k Lines| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979710194078178
      ],
      "excerpt": "|ssd_keras|1.6k|A Keras port of Single Shot MultiBox Detector| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8615232778805761,
        0.9279423138471831
      ],
      "excerpt": "|capsule-networks|1.5k|A PyTorch implementation of the NIPS 2017 paper \"Dynamic Routing Between Capsules\".| \n|flogo|1.5k|Project Flogo is an open source ecosystem of opinionated event-driven capabilities to simplify building efficient & modern serverless functions, microservices & edge apps.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8155942068883202,
        0.9435712817470303,
        0.884361859465005,
        0.9348129851300943
      ],
      "excerpt": "|hummingbird|1.5k|Hummingbird compiles trained ML models into tensor computation for faster inference.| \n|deep-rl-tensorflow|1.5k|TensorFlow implementation of Deep Reinforcement Learning papers| \n|practical-machine-learning-with-python|1.5k|Master the essential skills needed to recognize and solve complex real-world problems with Machine Learning and Deep Learning by leveraging the highly popular Python Machine Learning Eco-system.| \n|NeuroNER|1.5k|Named-entity recognition using neural networks. Easy-to-use and state-of-the-art results.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8774249251721894,
        0.9551855375660457,
        0.9688013022878652,
        0.908793208368755,
        0.9874165565310058
      ],
      "excerpt": "|mAP|1.5k|mean Average Precision - This code evaluates the performance of your neural net for object recognition.| \n|agents|1.5k|TF-Agents is a library for Reinforcement Learning in TensorFlow| \n|CADL|1.5k|ARCHIVED: Contains historical course materials/Homework materials for the FREE MOOC course on \"Creative Applications of Deep Learning w/ Tensorflow\" #CADL| \n|tensorflow-DeepFM|1.5k|Tensorflow implementation of DeepFM for CTR prediction.| \n|tensorflow-1.4-billion-password-analysis|1.5k|Deep Learning model to analyze a large corpus of clear text passwords.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8852098579333348,
        0.8417446034535616
      ],
      "excerpt": "|Machine-Learning-Flappy-Bird|1.5k|Machine Learning for Flappy Bird using Neural Network and Genetic Algorithm| \n|ml-visuals|1.5k|Visuals contains figures and templates which you can reuse and customize to improve your scientific writing.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.866848897715209,
        0.9281116489507375
      ],
      "excerpt": "|spark|1.5k|.NET for Apache\u00ae Spark\u2122 makes Apache Spark\u2122 easily accessible to .NET developers.| \n|quiver|1.5k|Interactive convnet features visualization for Keras| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577707596151322
      ],
      "excerpt": "|mt-dnn|1.4k|Multi-Task Deep Neural Networks for Natural Language Understanding| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8348310394910521,
        0.828682722842745,
        0.9331908835596433,
        0.965387191137247,
        0.8036610697714037,
        0.8773551170324219
      ],
      "excerpt": "|labelbox|1.4k|Labelbox is the fastest way to annotate data to build and ship computer vision applications.| \n|openvino|1.4k|OpenVINO\u2122 Toolkit repository| \n|awesome-decision-tree-papers|1.4k|A collection of research papers on decision, classification and regression trees with implementations.| \n|project_alias|1.4k|Alias is a teachable \u201cparasite\u201d that is designed to give users more control over their smart assistants, both when it comes to customisation and privacy. Through a simple app the user can train Alias to react on a custom wake-word/sound, and once trained, Alias can take control over your home assistant by activating it for you.| \n|data-science-question-answer|1.4k|A repo for data science related questions and answers| \n|photo2cartoon|1.4k|\u4eba\u50cf\u5361\u901a\u5316\u63a2\u7d22\u9879\u76ee (photo-to-cartoon translation project)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.974125879395036
      ],
      "excerpt": "|Tengine|1.4k|Tengine is a lite, high performance, modular inference engine for embedded device| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9159061397408036
      ],
      "excerpt": "|GANotebooks|1.4k|wgan, wgan2(improved, gp), infogan, and dcgan implementation in lasagne, keras, pytorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.934714079141371
      ],
      "excerpt": "|CRAFT-pytorch|1.4k|Official implementation of Character Region Awareness for Text Detection (CRAFT)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912892709485056,
        0.8169614001558185,
        0.9348526005856285
      ],
      "excerpt": "|GDLnotes|1.4k|Google Deep Learning Notes\uff08TensorFlow\u6559\u7a0b\uff09| \n|pydensecrf|1.4k|Python wrapper to Philipp Kr\u00e4henb\u00fchl's dense (fully connected) CRFs with gaussian edge potentials.| \n|seldon-server|1.4k|Machine Learning Platform and Recommendation Engine built on Kubernetes| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8502416555174138
      ],
      "excerpt": "|iOS_ML|1.4k|List of Machine Learning, AI, NLP solutions for iOS. The most recent version of this article can be found on my blog.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.983787848433329
      ],
      "excerpt": "|CoreML-in-ARKit|1.4k|Simple project to detect objects and display 3D labels above them in AR. This serves as a basic Template for an ARKit project to use CoreML.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8000470406702995,
        0.8725680942291016,
        0.9444385049061381,
        0.8542253454305923
      ],
      "excerpt": "|DeepFace|1.4k|Face analysis mainly based on Caffe. At this time, face analysis tasks like detection, alignment and recognition have been done.| \n|torch2trt|1.4k|An easy to use PyTorch to TensorRT converter| \n|deepvoice3_pytorch|1.4k|PyTorch implementation of convolutional neural networks-based text-to-speech synthesis models| \n|sphereface|1.4k|Implementation for <SphereFace: Deep Hypersphere Embedding for Face Recognition> in CVPR'17.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9823300771774338
      ],
      "excerpt": "|minimalRL|1.4k|Implementations of basic RL algorithms with minimal lines of codes! (pytorch based)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8220973557187252
      ],
      "excerpt": "|faster_rcnn_pytorch|1.4k|Faster RCNN with PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.930076445855791,
        0.9177883531837632
      ],
      "excerpt": "|keras_to_tensorflow|1.4k|General code to convert a trained keras model into an inference tensorflow model| \n|handtracking|1.3k|Building a Real-time Hand-Detector using Neural Networks (SSD) on Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9949700824436153,
        0.9184312234337441,
        0.903553913145324,
        0.999083045129356,
        0.953872002600364
      ],
      "excerpt": "|hackermath|1.3k|Introduction to Statistics and Basics of Mathematics for Data Science - The Hacker's Way| \n|pytorch-grad-cam|1.3k|PyTorch implementation of Grad-CAM| \n|grenade|1.3k|Deep Learning in Haskell| \n|captcha_trainer|1.3k|[\u9a8c\u8bc1\u7801\u8bc6\u522b-\u8bad\u7ec3] This project is based on CNN/ResNet/DenseNet+GRU/LSTM+CTC/CrossEntropy to realize verification code identification. This project is only for training the model.| \n|anago|1.3k|Bidirectional LSTM-CRF and ELMo for Named-Entity Recognition, Part-of-Speech Tagging and so on.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8568569307250284,
        0.8522715563498605,
        0.9567588029116127
      ],
      "excerpt": "|eos|1.3k|A lightweight 3D Morphable Face Model fitting library in modern C++14| \n|ngraph|1.3k|nGraph - open source C++ library, compiler and runtime for Deep Learning| \n|NSFWDetector|1.3k|A NSFW (aka porn) detector with CoreML| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9434019626143887,
        0.9196073913195687
      ],
      "excerpt": "|VIBE|1.3k|Official implementation of CVPR2020 paper \"VIBE: Video Inference for Human Body Pose and Shape Estimation\"| \n|bulbea|1.3k|\ud83d\udc17 \ud83d\udc3b Deep Learning based Python Library for Stock Market Prediction and Modelling| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9316930387440756,
        0.9507913573559517
      ],
      "excerpt": "|scattertext|1.3k|Beautiful visualizations of how language differs among document types.| \n|talos|1.3k|Hyperparameter Optimization for TensorFlow, Keras and PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9385684112101016
      ],
      "excerpt": "|impersonator|1.3k|PyTorch implementation of our ICCV 2019 paper: Liquid Warping GAN: A Unified Framework for Human Motion Imitation, Appearance Transfer and Novel View Synthesis| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9208191400310414
      ],
      "excerpt": "|dcgan-completion.tensorflow|1.3k|Image Completion with Deep Learning in TensorFlow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8525671184089355,
        0.9825505404552047
      ],
      "excerpt": "|EmojiIntelligence|1.3k|Neural Network built in Apple Playground using Swift| \n|efficientnet|1.3k|Implementation of EfficientNet model. Keras and TensorFlow Keras.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9332555785904514,
        0.9693018083910753,
        0.9244374551845091,
        0.8979411005071259
      ],
      "excerpt": "|TensorFlow.NET|1.3k|.NET Standard bindings for Google's TensorFlow for developing, training and deploying Machine Learning models in C#.| \n|pytextrank|1.3k|Python implementation of TextRank for phrase extraction and summarization of text documents| \n|infer|1.3k|Infer.NET is a framework for running Bayesian inference in graphical models| \n|uda|1.3k|Unsupervised Data Augmentation (UDA)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9169669541571737
      ],
      "excerpt": "|spark-nlp|1.3k|State of the Art Natural Language Processing| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9170111090387187,
        0.8362838157402812,
        0.858791434517241
      ],
      "excerpt": "|pytorch-openai-transformer-lm|1.2k|\ud83d\udc25A PyTorch implementation of OpenAI's finetuned transformer language model with a script to import the weights pre-trained by OpenAI| \n|hiddenlayer|1.2k|Neural network graphs and training metrics for PyTorch, Tensorflow, and Keras.| \n|PaddleHub|1.2k|Toolkit for Pre-trained Model Application of PaddlePaddle\uff08\u300e\u98de\u6868\u300f\u9884\u8bad\u7ec3\u6a21\u578b\u5e94\u7528\u5de5\u5177 \uff09| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8489841900542894,
        0.9461292372237338
      ],
      "excerpt": "|Deep-Image-Analogy|1.2k|The source code of 'Visual Attribute Transfer through Deep Image Analogy'.| \n|spektral|1.2k|Graph Neural Networks with Keras and Tensorflow 2.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8285422219552648
      ],
      "excerpt": "|NiftyNet|1.2k|[unmaintained] An open-source convolutional neural networks platform for research in medical image analysis and image-guided therapy| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.978300787978123
      ],
      "excerpt": "|dlwpt-code|1.2k|Code for the book Deep Learning with PyTorch by Eli Stevens, Luca Antiga, and Thomas Viehmann.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9553415337874768,
        0.9194956164118552,
        0.9294808892419438
      ],
      "excerpt": "|Deep-Learning-with-PyTorch-Tutorials|1.2k|\u6df1\u5ea6\u5b66\u4e60\u4e0ePyTorch\u5165\u95e8\u5b9e\u6218\u89c6\u9891\u6559\u7a0b \u914d\u5957\u6e90\u4ee3\u7801\u548cPPT| \n|DLTK|1.2k|Deep Learning Toolkit for Medical Image Analysis| \n|FCN.tensorflow|1.2k|Tensorflow implementation of Fully Convolutional Networks for Semantic Segmentation (http://fcn.berkeleyvision.org)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8949582112449173,
        0.9331966541437166
      ],
      "excerpt": "|h2o-tutorials|1.2k|Tutorials and training material for the H2O Machine Learning Platform| \n|nlp-journey|1.2k|Documents, papers and codes related to Natural Language Processing, including Topic Model, Word Embedding, Named Entity Recognition, Text Classificatin, Text Generation, Text Similarity, Machine Translation)\uff0cetc. All codes are implemented intensorflow 2.0.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860925285647357
      ],
      "excerpt": "|tnt|1.2k|Simple tools for logging and visualizing, loading and training| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9282987095535029,
        0.9184312234337441,
        0.8386274812376724,
        0.8657228655185304,
        0.9319180881705419
      ],
      "excerpt": "|reproducible-image-denoising-state-of-the-art|1.2k|Collection of popular and reproducible image denoising works.| \n|senet.pytorch|1.2k|PyTorch implementation of SENet| \n|pytorch-seq2seq|1.2k|An open source framework for seq2seq models in PyTorch.| \n|efficient_densenet_pytorch|1.2k|A memory-efficient implementation of DenseNets| \n|pytorch-retinanet|1.2k|Pytorch implementation of RetinaNet object detection.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9465249871749255
      ],
      "excerpt": "|pytorch-fcn|1.2k|PyTorch Implementation of Fully Convolutional Networks. (Training code to reproduce the original result is available.)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9000933622330465,
        0.8019252099514549
      ],
      "excerpt": "|gnes|1.1k|GNES is Generic Neural Elastic Search, a cloud-native semantic search system based on deep neural network.| \n|Image-OutPainting|1.1k|\ud83c\udfd6 Keras Implementation of Painting outside the box| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808695299208173
      ],
      "excerpt": "|pytorch-cifar100|1.1k|Practice on cifar100(ResNet, DenseNet, VGG, GoogleNet, InceptionV3, InceptionV4, Inception-ResNetv2, Xception, Resnet In Resnet, ResNext,ShuffleNet, ShuffleNetv2, MobileNet, MobileNetv2, SqueezeNet, NasNet, Residual Attention Network, SENet)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8882140600998534,
        0.9099968038504752
      ],
      "excerpt": "|noreward-rl|1.1k|[ICML 2017] TensorFlow code for Curiosity-driven Exploration for Deep Reinforcement Learning| \n|PyTorchNLPBook|1.1k|Code and data accompanying Natural Language Processing with PyTorch published by O'Reilly Media https://nlproc.info| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.98702702548709
      ],
      "excerpt": "|UNet-family|1.1k|Paper and implementation of UNet-related model.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9471780016150301
      ],
      "excerpt": "|tensorflow-fcn|1.1k|An Implementation of Fully Convolutional Networks in Tensorflow.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8619779749479242,
        0.8830032566679102,
        0.8065880758465229
      ],
      "excerpt": "|fast-autoaugment|1.1k|Official Implementation of 'Fast AutoAugment' in PyTorch.| \n|fastai_deeplearn_part1|1.1k|Notes for Fastai Deep Learning Course| \n|HyperGAN|1.1k|Composable GAN framework with api and user interface| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9622549313361788
      ],
      "excerpt": "|tfx|1.1k|TFX is an end-to-end platform for deploying production ML pipelines| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8741223748346131
      ],
      "excerpt": "|lanenet-lane-detection|1.1k|Unofficial implemention of lanenet model for real time lane detection using deep neural network model https://maybeshewill-cv.github.io/lanenet-lane-detection/| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9514860973083527,
        0.9831764393097968
      ],
      "excerpt": "|torchgan|1.1k|Research Framework for easy and efficient training of GANs based on Pytorch| \n|merlin|1.1k|This is now the official location of the Merlin project.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153038172465788,
        0.9293987916152104
      ],
      "excerpt": "|tfjs-node|1k|TensorFlow powered JavaScript library for training and deploying ML models on Node.js.| \n|CycleGAN-TensorFlow|1k|An implementation of CycleGan using TensorFlow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9770522938253133,
        0.9017024143824602
      ],
      "excerpt": "|AdvancedEAST|1k|AdvancedEAST is an algorithm used for Scene image text detect, which is primarily based on EAST, and the significant improvement was also made, which make long text predictions more accurate.| \n|one-pixel-attack-keras|1k|Keras implementation of \"One pixel attack for fooling deep neural networks\" using differential evolution on Cifar10 and ImageNet| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9707012961310908
      ],
      "excerpt": "|hmtl|1k|\ud83c\udf0aHMTL: Hierarchical Multi-Task Learning - A State-of-the-Art neural network model for several NLP tasks based on PyTorch and AllenNLP| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.929748065344543
      ],
      "excerpt": "|a-PyTorch-Tutorial-to-Image-Captioning|1k|Show, Attend, and Tell | a PyTorch Tutorial to Image Captioning| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9477452515497783
      ],
      "excerpt": "|pytorch-YOLOv4|1k|PyTorch ,ONNX and TensorRT implementation of YOLOv4| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A list of popular github projects related to deep learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aymericdamien/TopDeepLearning/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1176,
      "date": "Wed, 22 Dec 2021 18:15:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/aymericdamien/TopDeepLearning/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "aymericdamien/TopDeepLearning",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9484267327410516
      ],
      "excerpt": "|pytorch-handbook|11.9k|pytorch handbook\u662f\u4e00\u672c\u5f00\u6e90\u7684\u4e66\u7c4d\uff0c\u76ee\u6807\u662f\u5e2e\u52a9\u90a3\u4e9b\u5e0c\u671b\u548c\u4f7f\u7528PyTorch\u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u548c\u7814\u7a76\u7684\u670b\u53cb\u5feb\u901f\u5165\u95e8\uff0c\u5176\u4e2d\u5305\u542b\u7684Pytorch\u6559\u7a0b\u5168\u90e8\u901a\u8fc7\u6d4b\u8bd5\u4fdd\u8bc1\u53ef\u4ee5\u6210\u529f\u8fd0\u884c| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043929270298233
      ],
      "excerpt": "|nltk|9k|NLTK Source| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.834369642931624
      ],
      "excerpt": "|pretrained-models.pytorch|6.9k|Pretrained ConvNets for pytorch: NASNet, ResNeXt, ResNet, InceptionV4, InceptionResnetV2, Xception, DPN, etc.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8685530577480985
      ],
      "excerpt": "|tensorboardX|6.4k|tensorboard for pytorch (and chainer, mxnet, numpy, ...)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8141274629401278
      ],
      "excerpt": "|keras-js|4.7k|Run Keras models in the browser, with GPU support using WebGL| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8296236436971902
      ],
      "excerpt": "|practical-pytorch|4.1k|DEPRECATED and not maintained - see official repo at https://github.com/pytorch/tutorials| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8790910953221536
      ],
      "excerpt": "|pytorch-cifar|3k|95.16% on CIFAR10 with PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8983064790078007
      ],
      "excerpt": "|tensorflow-windows-wheel|2.9k|Tensorflow prebuilt binary for Windows| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "|pytorch-doc-zh|2.4k|Pytorch \u4e2d\u6587\u6587\u6863| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8573642923819054,
        0.8845669477476327
      ],
      "excerpt": "|pytorch-beginner|2.1k|pytorch tutorial for beginners| \n|tangent|2.1k|Source-to-Source Debuggable Derivatives in Pure Python| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8731205217686321
      ],
      "excerpt": "|tensorflow-build-archived|2k|TensorFlow binaries supporting AVX, FMA, SSE| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9055802413270152
      ],
      "excerpt": "|segmentation_models.pytorch|1.9k|Segmentation models with pretrained backbones. PyTorch.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8989188310244524
      ],
      "excerpt": "|pytorch-seq2seq|1.8k|Tutorials on implementing a few sequence-to-sequence (seq2seq) models with PyTorch and TorchText.| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8763453636841034
      ],
      "excerpt": "|PyTorch-Encoding|1.5k|A PyTorch CV Toolkit| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8769801558174155
      ],
      "excerpt": "|MobileNet|1.4k|MobileNet build with Tensorflow| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8398982946378809
      ],
      "excerpt": "|faster_rcnn_pytorch|1.4k|Faster RCNN with PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654351586676339
      ],
      "excerpt": "|yolo2-pytorch|1.3k|YOLOv2 in PyTorch| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8036225766482413
      ],
      "excerpt": "|Awesome-pytorch-list-CNVersion|1.1k|Awesome-pytorch-list \u7ffb\u8bd1\u5de5\u4f5c\u8fdb\u884c\u4e2d......| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9403418823697708
      ],
      "excerpt": "|pytorch-classification|1k|Classification with PyTorch.| \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8686579605861037
      ],
      "excerpt": "|TensorFlow-Examples|38.1k|TensorFlow Tutorial and Examples for Beginners (support TF v1 & v2)| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8253093718489083
      ],
      "excerpt": "|python-small-examples|4.7k|\u544a\u522b\u67af\u71e5\uff0c\u81f4\u529b\u4e8e\u6253\u9020 Python \u5bcc\u6709\u4f53\u7cfb\u4e14\u5b9e\u7528\u7684\u5c0f\u4f8b\u5b50\u3001\u5c0f\u6848\u4f8b\u3002| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8020668205584495
      ],
      "excerpt": "|Tensorflow-Tutorial|3.8k|Tensorflow tutorial from basic to hard| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8983185558420431
      ],
      "excerpt": "|examples|3.5k|TensorFlow examples| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8242462227817554
      ],
      "excerpt": "|segmentation_models|2.4k|Segmentation models with pretrained backbones. Keras and TensorFlow Keras.| \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/aymericdamien/TopDeepLearning/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2016 Aymeric Damien\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Top Deep Learning Projects",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "TopDeepLearning",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "aymericdamien",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aymericdamien/TopDeepLearning/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5346,
      "date": "Wed, 22 Dec 2021 18:15:31 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "machine-learning",
      "tensorflow",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}