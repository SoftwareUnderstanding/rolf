{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.05905 and Proximal Policy Optimization (PPO",
      "https://arxiv.org/abs/1707.06347 can be used as neural network reinforcement learning methods to perform grasping and lifting cube tasks. Monitoring of the data obtained is done with the use of Weights and Biases software https://wandb.ai/site. The novelty on this code consists on the fact that instead of a centralized controller approach, a development on a decentralized and multi agent control framework has been developed to support behavioural skills being treained sepparately and action spaces be managed individually.\n\n![mainFigureversion2](https://user-images.githubusercontent.com/90107153/135591702-19778db4-fa6b-4365-b5c2-2eb5cc022711.jpg"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jvidals09/Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-03T14:17:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-08T16:29:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9859584956179854,
        0.9528400010133026
      ],
      "excerpt": "This Repository contains the Python and Mujoco interactive code and simulation for Ubuntu Linux on Decentralized and multi agent control of Franka Emika Panda robot in continuous task execution \nIntelligent Task Learning code contains a http://www.mujoco.org/ MUJOCO multiphysics operated simulated environment , where Soft Actor Critic https://arxiv.org/abs/1812.05905 and Proximal Policy Optimization (PPO) algorithms https://arxiv.org/abs/1707.06347 can be used as neural network reinforcement learning methods to perform grasping and lifting cube tasks. Monitoring of the data obtained is done with the use of Weights and Biases software https://wandb.ai/site. The novelty on this code consists on the fact that instead of a centralized controller approach, a development on a decentralized and multi agent control framework has been developed to support behavioural skills being treained sepparately and action spaces be managed individually. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This Repository contains the Python and Mujoco interactive code and simulation for Ubuntu Linux on Decentralized and multi agent control of Franka Emika Panda robot in continuous task execution",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jvidals09/Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 19:13:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jvidals09/Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jvidals09/Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9739557224417164
      ],
      "excerpt": "To use this toolkit, it is required to first install MuJoCo 200 https://www.roboti.us/index.html and then mujoco-py  https://github.com/openai/mujoco-py from Open AI. mujoco-py allows using MuJoCo from python interface. The installation requires python 3.6 or higher. It is recommended to install all the required packages under a conda virtual environment \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jvidals09/Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jvidals09",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jvidals09/Decentralized-and-multi-agent-control-of-Franka-Emika-Panda-robot-in-continuous-task-execution/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 19:13:16 GMT"
    },
    "technique": "GitHub API"
  }
}