{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.10196"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/suhuijia/pggan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-04T06:58:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-17T16:47:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "generate images",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/suhuijia/pggan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:23:17 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/suhuijia/pggan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "suhuijia/pggan",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.999746712887969
      ],
      "excerpt": "pip install tensorboardX \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "python3 main.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285065137266004
      ],
      "excerpt": "\u6ce8\u610f\uff1amain.py \u4e2d\u7684 data_path \u8def\u5f84\u662f\u8bfb\u53d6\u6570\u636e\u96c6\u7684\u8def\u5f84\uff0c\u770b\u6e05\u76ee\u5f55\u7ed3\u6784 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/suhuijia/pggan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PGGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pggan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "suhuijia",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/suhuijia/pggan/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:23:17 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython3 main.py -h\n\nusage: main.py [-h] [--gpus GPUS] [--cpus CPUS] [--save_dir SAVE_DIR]\n               [--img_num IMG_NUM] [--optim_G {adam,sgd}]\n               [--optim_D {adam,sgd}] [--loss {wgangp,lsgan}]\n               [--start_resl START_RESL] [--end_resl END_RESL]\n               [--beta [BETA [BETA ...]]] [--momentum MOMENTUM]\n               [--decay DECAY] [--gp_lambda GP_LAMBDA]\n\nPGGAN\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --gpus GPUS           Select GPU Numbering | 0,1,2,3 |\n  --cpus CPUS           The number of CPU workers\n  --save_dir SAVE_DIR   Directory which models will be saved in\n  --img_num IMG_NUM     The number of images to be used for each phase\n  --optim_G {adam,sgd}\n  --optim_D {adam,sgd}\n  --loss {wgangp,lsgan}\n  --start_resl START_RESL\n  --end_resl END_RESL\n  --beta [BETA [BETA ...]]\n                        Beta for Adam optimizer\n  --momentum MOMENTUM   Momentum for SGD optimizer\n  --decay DECAY         Weight decay for optimizers\n  --gp_lambda GP_LAMBDA\n                        Lambda as a weight of Gradient Panelty in WGAN-GP loss\n```\n\n\n#######################################\n1. \u8bad\u7ec3\u6570\u636e\u9884\u5904\u7406\ncd ./datas\npython3 preDataset.py    ",
      "technique": "Header extraction"
    }
  ]
}