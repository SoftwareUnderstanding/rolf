{
  "citation": [
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "        if(g_loss_*2.0 &lt; d_loss_): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "        if(d_loss_*2.0 &lt; g_loss_): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if(train_discriminator):     \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if(train_generator): \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cesar0205/autoencoder-gan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-08T04:34:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-26T08:52:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9729617159256395,
        0.899397313106683,
        0.9560583453311974
      ],
      "excerpt": "A GAN is a neural network that is composed by a generator and a discriminator networks. The principal \napplication of the GANs is to generate realistic images that can in turn be used in other supervised tasks. \nThe discriminator takes an image and its job is to decide whether it is real or fake. The generator produces \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875
      ],
      "excerpt": "        dense1 = dense(flatten, dense1_params[0]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9145206775393921,
        0.8332011793709632
      ],
      "excerpt": "For the generator we need to construct a special layer that behaves as the opposite of the convolutional layer. Generally, \nthe output of the covolutional layer is a smaller image. Then the oppositive operation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8551268717521462,
        0.9143740047568278,
        0.8577302739126875
      ],
      "excerpt": "This layer in tensorflow is conv2d_transpose. \nThe remaining elements that are needed for the generator are dense and dropout layers. \n        dense1 = dense(z, pp1[0]*pp1[0]*pp1[1])         \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8959695558574042
      ],
      "excerpt": "Finally the architecture of a GAN is as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9851299889093433,
        0.9791850031176299
      ],
      "excerpt": "a combination of both. The objective of the discriminator is to minimize this loss. \nOn the other hand the objective of the generator is to maximize the same loss by producing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8788766199285714
      ],
      "excerpt": "Generally the GANs are hard to train. It is really sensitive to the hyperparameters. Addionally they \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9037423339571021
      ],
      "excerpt": "To alleviate the second problem one tecnique is to not allow that the discriminator is trained too fast and  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Variational Autoencoder and Generative Adversarial Network",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cesar0205/autoencoder-gan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 12:50:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cesar0205/autoencoder-gan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cesar0205/autoencoder-gan",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8012759490916428
      ],
      "excerpt": "        projection = tf.reshape(dense1, (-1, pp1[0], pp1[0], pp1[1]))  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "        train_generator = True; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "        train_discriminator = True; \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cesar0205/autoencoder-gan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Variational Autoencoders and Generative Adversarial Networks.",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "autoencoder-gan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cesar0205",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cesar0205/autoencoder-gan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 12:50:43 GMT"
    },
    "technique": "GitHub API"
  }
}