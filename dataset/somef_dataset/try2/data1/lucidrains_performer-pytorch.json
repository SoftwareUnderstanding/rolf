{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2009.14794\">Performer</a>, a linear attention-based transformer variant with a **F**ast **A**ttention **V**ia positive **O**rthogonal **R**andom features approach (FAVOR+",
      "https://arxiv.org/abs/2003.04887}\n}\n```\n\n```bibtex\n@article{1910.05895,\n    author  = {Toan Q. Nguyen and Julian Salazar},\n    title   = {Transformers without Tears: Improving the Normalization of Self-Attention},\n    year    = {2019},\n    eprint  = {arXiv:1910.05895},\n    doi     = {10.5281/zenodo.3525484},\n}\n```\n\n```bibtex\n@misc{shazeer2020glu,\n    title   = {GLU Variants Improve Transformer},\n    author  = {Noam Shazeer},\n    year    = {2020},\n    url     = {https://arxiv.org/abs/2002.05202}\n}\n```\n\n```bibtex\n@misc{roy*2020efficient,\n    title   = {Efficient Content-Based Sparse Attention with Routing Transformers},\n    author  = {Aurko Roy* and Mohammad Taghi Saffar* and David Grangier and Ashish Vaswani},\n    year    = {2020},\n    url     = {https://arxiv.org/pdf/2003.05997.pdf}\n}\n```\n\n```bibtex\n@misc{su2021roformer,\n    title   = {RoFormer: Enhanced Transformer with Rotary Position Embedding},\n    author  = {Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu},\n    year    = {2021},\n    eprint  = {2104.09864},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url     = {https://arxiv.org/abs/2104.09864}\n}\n```",
      "https://arxiv.org/abs/2002.05202}\n}\n```\n\n```bibtex\n@misc{roy*2020efficient,\n    title   = {Efficient Content-Based Sparse Attention with Routing Transformers},\n    author  = {Aurko Roy* and Mohammad Taghi Saffar* and David Grangier and Ashish Vaswani},\n    year    = {2020},\n    url     = {https://arxiv.org/pdf/2003.05997.pdf}\n}\n```\n\n```bibtex\n@misc{su2021roformer,\n    title   = {RoFormer: Enhanced Transformer with Rotary Position Embedding},\n    author  = {Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu},\n    year    = {2021},\n    eprint  = {2104.09864},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url     = {https://arxiv.org/abs/2104.09864}\n}\n```",
      "https://arxiv.org/abs/2104.09864}\n}\n```",
      "https://arxiv.org/abs/1910.05895"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@misc{choromanski2020rethinking,\n    title   = {Rethinking Attention with Performers},\n    author  = {Krzysztof Choromanski and Valerii Likhosherstov and David Dohan and Xingyou Song and Andreea Gane and Tamas Sarlos and Peter Hawkins and Jared Davis and Afroz Mohiuddin and Lukasz Kaiser and David Belanger and Lucy Colwell and Adrian Weller},\n    year    = {2020},\n    eprint  = {2009.14794},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.LG}\n}\n```\n\n```bibtex\n@inproceedings{kitaev2020reformer,\n    title       = {Reformer: The Efficient Transformer},\n    author      = {Nikita Kitaev and Lukasz Kaiser and Anselm Levskaya},\n    booktitle   = {International Conference on Learning Representations},\n    year        = {2020},\n    url         = {https://openreview.net/forum?id=rkgNKkHtvB}\n}\n```\n\n```bibtex\n@inproceedings{katharopoulos_et_al_2020,\n    author  = {Katharopoulos, A. and Vyas, A. and Pappas, N. and Fleuret, F.},\n    title   = {Transformers are RNNs: Fast Autoregressive Transformers with Linear Attention},\n    booktitle = {Proceedings of the International Conference on Machine Learning (ICML)},\n    year    = {2020}\n}\n```\n\n```bibtex\n@misc{bachlechner2020rezero,\n    title   = {ReZero is All You Need: Fast Convergence at Large Depth},\n    author  = {Thomas Bachlechner and Bodhisattwa Prasad Majumder and Huanru Henry Mao and Garrison W. Cottrell and Julian McAuley},\n    year    = {2020},\n    url     = {https://arxiv.org/abs/2003.04887}\n}\n```\n\n```bibtex\n@article{1910.05895,\n    author  = {Toan Q. Nguyen and Julian Salazar},\n    title   = {Transformers without Tears: Improving the Normalization of Self-Attention},\n    year    = {2019},\n    eprint  = {arXiv:1910.05895},\n    doi     = {10.5281/zenodo.3525484},\n}\n```\n\n```bibtex\n@misc{shazeer2020glu,\n    title   = {GLU Variants Improve Transformer},\n    author  = {Noam Shazeer},\n    year    = {2020},\n    url     = {https://arxiv.org/abs/2002.05202}\n}\n```\n\n```bibtex\n@misc{roy*2020efficient,\n    title   = {Efficient Content-Based Sparse Attention with Routing Transformers},\n    author  = {Aurko Roy* and Mohammad Taghi Saffar* and David Grangier and Ashish Vaswani},\n    year    = {2020},\n    url     = {https://arxiv.org/pdf/2003.05997.pdf}\n}\n```\n\n```bibtex\n@misc{su2021roformer,\n    title   = {RoFormer: Enhanced Transformer with Rotary Position Embedding},\n    author  = {Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu},\n    year    = {2021},\n    eprint  = {2104.09864},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url     = {https://arxiv.org/abs/2104.09864}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{su2021roformer,\n    title   = {RoFormer: Enhanced Transformer with Rotary Position Embedding},\n    author  = {Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu},\n    year    = {2021},\n    eprint  = {2104.09864},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CL},\n    url     = {https://arxiv.org/abs/2104.09864}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{roy*2020efficient,\n    title   = {Efficient Content-Based Sparse Attention with Routing Transformers},\n    author  = {Aurko Roy* and Mohammad Taghi Saffar* and David Grangier and Ashish Vaswani},\n    year    = {2020},\n    url     = {https://arxiv.org/pdf/2003.05997.pdf}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{shazeer2020glu,\n    title   = {GLU Variants Improve Transformer},\n    author  = {Noam Shazeer},\n    year    = {2020},\n    url     = {https://arxiv.org/abs/2002.05202}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{1910.05895,\n    author  = {Toan Q. Nguyen and Julian Salazar},\n    title   = {Transformers without Tears: Improving the Normalization of Self-Attention},\n    year    = {2019},\n    eprint  = {arXiv:1910.05895},\n    doi     = {10.5281/zenodo.3525484},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{bachlechner2020rezero,\n    title   = {ReZero is All You Need: Fast Convergence at Large Depth},\n    author  = {Thomas Bachlechner and Bodhisattwa Prasad Majumder and Huanru Henry Mao and Garrison W. Cottrell and Julian McAuley},\n    year    = {2020},\n    url     = {https://arxiv.org/abs/2003.04887}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{katharopoulos_et_al_2020,\n    author  = {Katharopoulos, A. and Vyas, A. and Pappas, N. and Fleuret, F.},\n    title   = {Transformers are RNNs: Fast Autoregressive Transformers with Linear Attention},\n    booktitle = {Proceedings of the International Conference on Machine Learning (ICML)},\n    year    = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{kitaev2020reformer,\n    title       = {Reformer: The Efficient Transformer},\n    author      = {Nikita Kitaev and Lukasz Kaiser and Anselm Levskaya},\n    booktitle   = {International Conference on Learning Representations},\n    year        = {2020},\n    url         = {https://openreview.net/forum?id=rkgNKkHtvB}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{choromanski2020rethinking,\n    title   = {Rethinking Attention with Performers},\n    author  = {Krzysztof Choromanski and Valerii Likhosherstov and David Dohan and Xingyou Song and Andreea Gane and Tamas Sarlos and Peter Hawkins and Jared Davis and Afroz Mohiuddin and Lukasz Kaiser and David Belanger and Lucy Colwell and Adrian Weller},\n    year    = {2020},\n    eprint  = {2009.14794},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.LG}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/performer-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-03T03:41:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-29T02:44:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8524034231794068,
        0.8306470410773877
      ],
      "excerpt": "An implementation of <a href=\"https://arxiv.org/abs/2009.14794\">Performer</a>, a linear attention-based transformer variant with a Fast Attention Via positive Orthogonal Random features approach (FAVOR+). \nAt the end of training, if you wish to fix the projection matrices to get the model to output deterministically, you can invoke the following \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An implementation of Performer, a linear attention-based transformer, in Pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/performer-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 103,
      "date": "Thu, 30 Dec 2021 06:58:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lucidrains/performer-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lucidrains/performer-pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n$ pip install performer-pytorch\n```\n\nThen you must run the following, if you plan on training an autoregressive model\n\n```bash\n$ pip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lucidrains/performer-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Phil Wang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Performer - Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "performer-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lucidrains",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/performer-pytorch/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-11-07T01:02:14Z",
        "datePublished": "2021-11-07T01:02:45Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.1.3",
        "name": "1.1.3",
        "tag_name": "1.1.3",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.1.3",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/52857322",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.1.3"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-10-21T01:01:00Z",
        "datePublished": "2021-10-21T01:01:20Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.1.2",
        "name": "1.1.2",
        "tag_name": "1.1.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.1.2",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/51751331",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.1.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-10-21T00:58:33Z",
        "datePublished": "2021-10-21T00:59:09Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.1.1",
        "name": "1.1.1",
        "tag_name": "1.1.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.1.1",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/51751268",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.1.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-08-21T17:28:24Z",
        "datePublished": "2021-08-21T17:28:44Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.1.0",
        "name": "1.1.0",
        "tag_name": "1.1.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.1.0",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/48225082",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.1.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-21T06:29:48Z",
        "datePublished": "2021-04-21T06:30:05Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.11",
        "name": "1.0.11",
        "tag_name": "1.0.11",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.11",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41756121",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.11"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-21T05:44:34Z",
        "datePublished": "2021-04-21T05:44:52Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.10",
        "name": "1.0.10",
        "tag_name": "1.0.10",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.10",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41754846",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.10"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-21T05:23:03Z",
        "datePublished": "2021-04-21T05:23:29Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.9",
        "name": "1.0.9",
        "tag_name": "1.0.9",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.9",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41754335",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.9"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-20T23:39:53Z",
        "datePublished": "2021-04-20T23:40:09Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.8",
        "name": "1.0.8",
        "tag_name": "1.0.8",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.8",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41745790",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.8"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-20T20:02:45Z",
        "datePublished": "2021-04-20T20:03:03Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.7",
        "name": "1.0.7",
        "tag_name": "1.0.7",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.7",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41736749",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.7"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-15T04:02:51Z",
        "datePublished": "2021-04-15T04:03:11Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.6",
        "name": "1.0.6",
        "tag_name": "1.0.6",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.6",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41455064",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.6"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-15T03:46:40Z",
        "datePublished": "2021-04-15T03:46:56Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.5",
        "name": "1.0.5",
        "tag_name": "1.0.5",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.5",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41454674",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.5"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-14T20:19:13Z",
        "datePublished": "2021-04-14T20:19:29Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.4",
        "name": "1.0.4",
        "tag_name": "1.0.4",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.4",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41440290",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.4"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-14T19:50:18Z",
        "datePublished": "2021-04-14T19:50:31Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.3",
        "name": "1.0.3",
        "tag_name": "1.0.3",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.3",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41438867",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.3"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-13T22:30:10Z",
        "datePublished": "2021-04-13T22:30:31Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.2",
        "name": "1.0.2",
        "tag_name": "1.0.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.2",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/41383178",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-03-25T21:12:57Z",
        "datePublished": "2021-03-25T21:17:15Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.1",
        "name": "1.0.1",
        "tag_name": "1.0.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.1",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/40443427",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "Add relative positional encoding (previously impossible) for Performer. Dramatically better performance",
        "dateCreated": "2021-03-25T20:05:52Z",
        "datePublished": "2021-03-25T20:08:44Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/1.0.0",
        "name": "1.0.0",
        "tag_name": "1.0.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/1.0.0",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/40439961",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/1.0.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-03-20T00:32:08Z",
        "datePublished": "2021-03-20T00:32:28Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.15.2",
        "name": "0.15.2",
        "tag_name": "0.15.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.15.2",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/40092946",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.15.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-03-05T15:14:51Z",
        "datePublished": "2021-03-05T15:15:10Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.15.1",
        "name": "0.15.1",
        "tag_name": "0.15.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.15.1",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/39345197",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.15.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-17T01:22:36Z",
        "datePublished": "2021-01-17T01:22:47Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.15.0",
        "name": "0.15.0",
        "tag_name": "0.15.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.15.0",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/36506802",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.15.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-14T17:09:48Z",
        "datePublished": "2020-12-14T17:10:37Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.9",
        "name": "0.14.9",
        "tag_name": "0.14.9",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.9",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35247752",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.9"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-13T20:20:08Z",
        "datePublished": "2020-12-13T20:20:22Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.8",
        "name": "0.14.8",
        "tag_name": "0.14.8",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.8",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35209409",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.8"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-13T19:00:28Z",
        "datePublished": "2020-12-13T19:00:46Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.7",
        "name": "0.14.7",
        "tag_name": "0.14.7",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.7",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35208276",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.7"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-13T04:00:09Z",
        "datePublished": "2020-12-13T04:00:26Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.6",
        "name": "0.14.6",
        "tag_name": "0.14.6",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.6",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35198372",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.6"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-12T06:07:27Z",
        "datePublished": "2020-12-12T06:07:42Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.5",
        "name": "0.14.5",
        "tag_name": "0.14.5",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.5",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35183590",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.5"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-12T03:57:07Z",
        "datePublished": "2020-12-12T03:57:59Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.4",
        "name": "0.14.4",
        "tag_name": "0.14.4",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.4",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35182397",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.4"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-12T00:10:05Z",
        "datePublished": "2020-12-12T00:10:20Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.3",
        "name": "0.14.3",
        "tag_name": "0.14.3",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.3",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35179324",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.3"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-11T23:58:32Z",
        "datePublished": "2020-12-11T23:58:50Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.2",
        "name": "0.14.2",
        "tag_name": "0.14.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.2",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35179065",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-11T19:59:17Z",
        "datePublished": "2020-12-11T19:59:30Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.1",
        "name": "0.14.1",
        "tag_name": "0.14.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.1",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35171147",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-11T04:06:19Z",
        "datePublished": "2020-12-11T04:07:00Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.14.0",
        "name": "0.14.0",
        "tag_name": "0.14.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.14.0",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35134595",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.14.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-11T03:48:53Z",
        "datePublished": "2020-12-11T03:49:14Z",
        "html_url": "https://github.com/lucidrains/performer-pytorch/releases/tag/0.12.9",
        "name": "0.12.9",
        "tag_name": "0.12.9",
        "tarball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/tarball/0.12.9",
        "url": "https://api.github.com/repos/lucidrains/performer-pytorch/releases/35134199",
        "zipball_url": "https://api.github.com/repos/lucidrains/performer-pytorch/zipball/0.12.9"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 764,
      "date": "Thu, 30 Dec 2021 06:58:25 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "artificial-intelligence",
      "deep-learning",
      "attention-mechanism",
      "attention",
      "transformers"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Performer Language Model\n\n```python\nimport torch\nfrom performer_pytorch import PerformerLM\n\nmodel = PerformerLM(\n    num_tokens = 20000,\n    max_seq_len = 2048,             #: max sequence length\n    dim = 512,                      #: dimension\n    depth = 12,                     #: layers\n    heads = 8,                      #: heads\n    causal = False,                 #: auto-regressive or not\n    nb_features = 256,              #: number of random features, if not set, will default to (d * log(d)), where d is the dimension of each head\n    feature_redraw_interval = 1000, #: how frequently to redraw the projection matrix, the more frequent, the slower the training\n    generalized_attention = False,  #: defaults to softmax approximation, but can be set to True for generalized attention\n    kernel_fn = torch.nn.ReLU(),    #: the kernel function to be used, if generalized attention is turned on, defaults to Relu\n    reversible = True,              #: reversible layers, from Reformer paper\n    ff_chunks = 10,                 #: chunk feedforward layer, from Reformer paper\n    use_scalenorm = False,          #: use scale norm, from 'Transformers without Tears' paper\n    use_rezero = False,             #: use rezero, from 'Rezero is all you need' paper\n    ff_glu = True,                  #: use GLU variant for feedforward\n    emb_dropout = 0.1,              #: embedding dropout\n    ff_dropout = 0.1,               #: feedforward dropout\n    attn_dropout = 0.1,             #: post-attn dropout\n    local_attn_heads = 4,           #: 4 heads are local attention, 4 others are global performers\n    local_window_size = 256,        #: window size of local attention\n    rotary_position_emb = True,     #: use rotary positional embedding, which endows linear attention with relative positional encoding with no learned parameters. should always be turned on unless if you want to go back to old absolute positional encoding\n    shift_tokens = True             #: shift tokens by 1 along sequence dimension before each block, for better convergence\n)\n\nx = torch.randint(0, 20000, (1, 2048))\nmask = torch.ones_like(x).bool()\n\nmodel(x, mask = mask) #: (1, 2048, 20000)\n```\n\nPlain Performer, if you are working with say images or other modalities\n\n```python\nimport torch\nfrom performer_pytorch import Performer\n\nmodel = Performer(\n    dim = 512,\n    depth = 1,\n    heads = 8,\n    causal = True\n)\n\nx = torch.randn(1, 2048, 512)\nmodel(x) #: (1, 2048, 512)\n```\n\nEncoder / Decoder - Made possible by <a href=\"https://github.com/gulnazaki\">Thomas Melistas</a>\n\n```python\nimport torch\nfrom performer_pytorch import PerformerEncDec\n\nSRC_SEQ_LEN = 4096\nTGT_SEQ_LEN = 4096\nGENERATE_LEN = 512\n\nenc_dec = PerformerEncDec(\n    dim = 512,\n    tie_token_embed = True,\n    enc_num_tokens = 20000,\n    enc_depth = 6,\n    enc_heads = 8,\n    enc_max_seq_len = SRC_SEQ_LEN,\n    dec_num_tokens = 20000,\n    dec_depth = 6,\n    dec_heads = 8,\n    dec_max_seq_len = TGT_SEQ_LEN,\n)\n\nsrc = torch.randint(0, 20000, (1, SRC_SEQ_LEN))\ntgt = torch.randint(0, 20000, (1, TGT_SEQ_LEN))\nsrc_mask = torch.ones_like(src).bool()\ntgt_mask = torch.ones_like(src).bool()\n\n#: train\nenc_dec.train()\nloss = enc_dec(src, tgt, enc_mask = src_mask, dec_mask = tgt_mask)\nloss.backward()\n\n#: generate\ngenerate_in = torch.randint(0, 20000, (1, SRC_SEQ_LEN)).long()\ngenerate_out_prime = torch.tensor([[0.]]).long() #: prime with <bos> token\nsamples = enc_dec.generate(generate_in, generate_out_prime, seq_len = GENERATE_LEN, eos_token = 1) #: assume 1 is id of stop token\nprint(samples.shape) #: (1, <= GENERATE_LEN) decode the tokens\n```\n\n\nStandalone self-attention layer with linear complexity in respect to sequence length, for replacing trained full-attention transformer self-attention layers.\n\n```python\nimport torch\nfrom performer_pytorch import SelfAttention\n\nattn = SelfAttention(\n    dim = 512,\n    heads = 8,\n    causal = False,\n).cuda()\n\nx = torch.randn(1, 1024, 512).cuda()\nattn(x) #: (1, 1024, 512)\n```\n\nCross attention is similarly\n\n```python\nimport torch\nfrom performer_pytorch import CrossAttention\n\nattn = CrossAttention(\n    dim = 512,\n    heads = 8\n).cuda()\n\nx = torch.randn(1, 1024, 512).cuda()\ncontext = torch.randn(1, 512, 512).cuda()\n\nattn(x, context = context) #: (1, 1024, 512)\n```\n\nTo minimize model surgery, you could also simply rewrite the code, so that the attention step is done by the `FastAttention` module, as follows.\n\n```python\nimport torch\nfrom performer_pytorch import FastAttention\n\n#: queries / keys / values with heads already split and transposed to first dimension\n#: 8 heads, dimension of head is 64, sequence length of 512\nq = torch.randn(1, 8, 512, 64)\nk = torch.randn(1, 8, 512, 64)\nv = torch.randn(1, 8, 512, 64)\n\nattn_fn = FastAttention(\n    dim_heads = 64,\n    nb_features = 256,\n    causal = False\n)\n\nout = attn_fn(q, k, v) #: (1, 8, 512, 64)\n#: now merge heads and combine outputs with Wo\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}