{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1906.09978",
      "https://arxiv.org/abs/1810.04805"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9781026617152551,
        0.8764168915795172
      ],
      "excerpt": "1. BSNLP 2019 ACL workshop: solution and paper on multilingual shared task. \n2. The second place solution of Dialogue AGRR-2019 task and paper. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sberbank-ai/ner-bert",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-21T10:15:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T02:30:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository contains solution of NER task based on PyTorch [reimplementation](https://github.com/huggingface/pytorch-pretrained-BERT) of [Google's TensorFlow repository for the BERT model](https://github.com/google-research/bert) that was released together with the paper [BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding](https://arxiv.org/abs/1810.04805) by Jacob Devlin, Ming-Wei Chang, Kenton Lee and Kristina Toutanova.\n\nThis implementation can load any pre-trained TensorFlow checkpoint for BERT (in particular [Google's pre-trained models](https://github.com/google-research/bert)).\n\nOld version is in \"old\" branch.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8558834243279076
      ],
      "excerpt": "2. The second place solution of Dialogue AGRR-2019 task and paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9095432547555006
      ],
      "excerpt": "model = BERTBiLSTMAttnCRF.create(len(data.train_ds.idx2label)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8130761100553919
      ],
      "excerpt": "    model, data, \"/path/for/save/best/model\", t_total=num_epochs * len(data.train_dl)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "BERT-NER (nert-bert) with google bert https://github.com/google-research.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sberbank-ai/ner-bert/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 92,
      "date": "Sat, 25 Dec 2021 00:47:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sberbank-ai/ner-bert/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sberbank-ai/ner-bert",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/censor_cls.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTBiLSTMAttnCRF-fit_BERT.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/conll2003%20BERTBiLSTMAttnNCRF%20base%20BERT.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTBiLSTMCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/conll2003%20BERTBiLSTMAttnCRF%20base%20BERT.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTBiLSTMAttnNCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTBiLSTMAttnNCRF-fit_BERT.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/prc%20fre.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/conll2003%20BERTBiLSTMCRF%20base%20BERT.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTBiLSTMNCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/conll2003%20BERTBiLSTMCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTBiLSTMAttnCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTAttnCRF.ipynb",
      "https://raw.githubusercontent.com/sberbank-ai/ner-bert/master/exps/fre%20BERTNCRF.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8533949002803727
      ],
      "excerpt": "from modules.models.bert_models import BERTBiLSTMAttnCRF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8790250799586103
      ],
      "excerpt": "from modules.train.train import NerLearner \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8288243400067321,
        0.8288243400067321
      ],
      "excerpt": "from modules.analyze_utils.plot_metrics import get_bert_span_report \nfrom modules.analyze_utils.main_metrics import precision_recall_f1 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8417331475432311
      ],
      "excerpt": "from modules.data import bert_data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    clear_cache=True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8306040543014903,
        0.8741364533089421,
        0.8942890530529792
      ],
      "excerpt": "from modules.models.bert_models import BERTBiLSTMAttnCRF \nmodel = BERTBiLSTMAttnCRF.create(len(data.train_ds.idx2label)) \nfrom modules.train.train import NerLearner \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8484619227583068,
        0.8417331475432311
      ],
      "excerpt": "    model, data, \"/path/for/save/best/model\", t_total=num_epochs * len(data.train_dl)) \nfrom modules.data.bert_data import get_data_loader_for_predict \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8200429725067666,
        0.8213380337316241
      ],
      "excerpt": "dl = get_data_loader_for_predict(data, df_path=\"/path/to/df/for/predict\") \npreds = learner.predict(dl) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8986233501106213
      ],
      "excerpt": "from modules.analyze_utils.utils import bert_labels2tokens, voting_choicer \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sberbank-ai/ner-bert/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Sberbank AI\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# 0. Papers",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ner-bert",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sberbank-ai",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sberbank-ai/ner-bert/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 361,
      "date": "Sat, 25 Dec 2021 00:47:30 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "python",
      "python3",
      "pytorch",
      "bert",
      "ner",
      "bilstm-crf",
      "attention",
      "nlp",
      "transfer-learning",
      "pytorch-model",
      "ner-task",
      "bert-model",
      "nmt",
      "joint-models",
      "classification",
      "factrueval",
      "conll-2003",
      "atis",
      "elmo"
    ],
    "technique": "GitHub API"
  }
}