{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2010.07468\nauto adabelief = createOptimizer!AdaBelief(fc1, fc2"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9977994744046882
      ],
      "excerpt": "// https://arxiv.org/abs/2010.07468 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9704849549806037
      ],
      "excerpt": "Dim : 10 -&gt; 8 -&gt; |3| -&gt; 8 -&gt; 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266,
        0.9030859728368266
      ],
      "excerpt": "    Perceptron!(10, 8, 3) encoder; \n    Perceptron!(3, 8, 10) decoder; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "foreach (epoch; 0 .. 10) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lempiji/golem",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-04T16:35:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-03T11:02:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8529020147417462,
        0.935601520706761,
        0.9201195794939944,
        0.945183547123012
      ],
      "excerpt": "A library that provides tensors and computational graphs for machine learning. \nLower the hurdle and learning curve to getting started. \nUse language features to make model definition simple and safe. \nUnify the code and language for training and production environments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8886034359529978
      ],
      "excerpt": "// more dimentions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "auto data = tensor!([0, 2])([ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8687295153951641
      ],
      "excerpt": "    auto y = linear(data); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8687295153951641
      ],
      "excerpt": "auto y = linear(data); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8154309818977666,
        0.8154309818977666
      ],
      "excerpt": "auto fc1 = new Linear!(float, 2, 2); \nauto fc2 = new Linear!(float, 2, 1); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9972130414773881
      ],
      "excerpt": "// is equals to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "    // Nested custom model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9071002439834202
      ],
      "excerpt": "auto model = new Perceptron!(2, 2, 1); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A simple tensor library for the computational graph on CPU",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lempiji/golem/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 30 Dec 2021 09:13:52 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lempiji/golem/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lempiji/golem",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=shape_1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=shape_2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=shape_3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=broadcast \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=optimizer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=optimizer_parameters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=custommodel \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=custommodel \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=kfold \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043929270298233
      ],
      "excerpt": "auto source = [1.0, 2.0, 3.0, 4.0, 5.0]; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "```d name=custommodel \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8421074476017179,
        0.9133368656218674
      ],
      "excerpt": "```d name=shape_1 \nimport golem; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.9133368656218674
      ],
      "excerpt": "```d name=shape_2 \nimport golem; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674
      ],
      "excerpt": "import std.exception : assertThrown; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.9133368656218674
      ],
      "excerpt": "```d name=shape_3 \nimport golem; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8025796386816414
      ],
      "excerpt": "// (batch, width, height) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.9133368656218674,
        0.8722253495125046
      ],
      "excerpt": "```d name=broadcast \nimport golem; \nimport golem.random; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.877752153982073,
        0.8813403066551019
      ],
      "excerpt": "assert(images.shape.length > offset.shape.length); \nassert(images.shape[$ - offset.shape.length .. $] == offset.shape); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8703849180557263,
        0.8703849180557263,
        0.8703849180557263
      ],
      "excerpt": "auto result1 = broadcastOp!\"+\"(images, offset); \nauto result2 = broadcastOp!\"-\"(images, offset); \nauto result3 = broadcastOp!\"*\"(images, offset); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768283381387031
      ],
      "excerpt": "auto result4 = broadcastOp!\"*\"(images, onesLike(offset) / offset); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674
      ],
      "excerpt": "import golem; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811854372964597
      ],
      "excerpt": "        [0.15, 0.4], \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "// train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8102780086823556,
        0.9133368656218674
      ],
      "excerpt": "// result \nimport std.stdio; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "```d name=optimizer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674
      ],
      "excerpt": "import golem.optimizer; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "```d name=optimizer_parameters \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674
      ],
      "excerpt": "import golem; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8742464689953552
      ],
      "excerpt": "sgd.config.learningRate = 0.1;  // default 0.01 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.9133368656218674,
        0.9078051738130971,
        0.837265552622869
      ],
      "excerpt": "```d name=custommodel \nimport golem; \nimport std.meta : AliasSeq; \nclass Perceptron(size_t Input, size_t Hidden, size_t Output) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "```d name=custommodel \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "```d name=kfold \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8729753544422336,
        0.8745248600586039,
        0.8589534893990137
      ],
      "excerpt": "    auto train = dataset[0]; \n    auto test = dataset[1]; \n// train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "```d name=custommodel \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112735652505316
      ],
      "excerpt": "foreach (epoch; 0 .. 10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.8051368525398265
      ],
      "excerpt": "    // train \narchiver.save(model); // save each epoch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8866729506744659
      ],
      "excerpt": "filename format \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lempiji/golem/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "D"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "golem",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "golem",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lempiji",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lempiji/golem/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "- Add a naive linear regression model\r\n    - See : https://github.com/lempiji/golem/blob/aea822f9e0832780b6c8fd35dae66fa79f140081/source/golem/models/linear.d#L141-L166\r\n- Add constructors for initial weights and biases to Linear\r\n- Add a unified interface for optimizers\r\n- Improve performance the BatchNorm\r\n- Update dependencies (mir-algorithm 3.10.76 -> 3.10.83)",
        "dateCreated": "2021-09-11T18:33:25Z",
        "datePublished": "2021-09-11T18:45:51Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.9.0",
        "name": "v0.9.0",
        "tag_name": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.9.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/49395415",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.9.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "- Add golem.model.NetModule\r\n    - See https://github.com/lempiji/golem/blob/f392ddde9089e33f61b9895fcfda06c3e31eff1d/README.md#custom-model\r\n- Add golem.math.leakyRelu\r\n- Add support for the no-grads args of softmaxCrossEntropy",
        "dateCreated": "2021-07-09T17:51:08Z",
        "datePublished": "2021-07-09T17:56:35Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.8.0",
        "name": "",
        "tag_name": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.8.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/45982267",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.8.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "- Update dependencies\r\n- Improve performance",
        "dateCreated": "2021-06-12T03:45:15Z",
        "datePublished": "2021-06-12T04:17:21Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.7.0",
        "name": "",
        "tag_name": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.7.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/44512765",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.7.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "- Add projection1D\r\n- Add LiftPool2D\r\n- Add Conv2D\r\n- Add an example `mnist-conv`\r\n- Fix warnings",
        "dateCreated": "2021-04-04T07:26:46Z",
        "datePublished": "2021-04-04T07:29:47Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.6.0",
        "name": "",
        "tag_name": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.6.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/40911305",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.6.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2021-03-07T06:29:06Z",
        "datePublished": "2021-03-07T07:17:40Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.5.1",
        "name": "",
        "tag_name": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.5.1",
        "url": "https://api.github.com/repos/lempiji/golem/releases/39391159",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.5.1"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2021-03-07T03:36:52Z",
        "datePublished": "2021-03-07T03:38:33Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.5.0",
        "name": "",
        "tag_name": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.5.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/39389255",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.5.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2021-03-03T14:58:16Z",
        "datePublished": "2021-03-04T13:20:23Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.4.0",
        "name": "",
        "tag_name": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.4.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/39274612",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.4.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2021-02-16T13:24:30Z",
        "datePublished": "2021-02-21T04:14:37Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.3.0",
        "name": "",
        "tag_name": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.3.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/38384072",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.3.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2021-01-23T03:36:29Z",
        "datePublished": "2021-01-23T03:37:15Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.2.1",
        "name": "",
        "tag_name": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.2.1",
        "url": "https://api.github.com/repos/lempiji/golem/releases/36797673",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.2.1"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2021-01-17T07:00:04Z",
        "datePublished": "2021-01-20T12:42:43Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.2.0",
        "name": "",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.2.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/36653507",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "lempiji",
        "body": "",
        "dateCreated": "2020-10-06T12:40:35Z",
        "datePublished": "2020-10-06T12:48:04Z",
        "html_url": "https://github.com/lempiji/golem/releases/tag/v0.1.0",
        "name": "",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/lempiji/golem/tarball/v0.1.0",
        "url": "https://api.github.com/repos/lempiji/golem/releases/32215762",
        "zipball_url": "https://api.github.com/repos/lempiji/golem/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Link with BLAS Library\n\nSee the `mir-lapack` Wiki\n\nLink: [https://github.com/libmir/mir-lapack/wiki/Link-with-CBLAS-&-LAPACK](https://github.com/libmir/mir-lapack/wiki/Link-with-CBLAS-&-LAPACK)\n\n__For Windows__\n\nUse Intel MKL by default\n\nDownload : [https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html](https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html)\n\n__For Ubuntu__\n\nUse OpenBLAS by default\n\n```console\n$ sudo apt install libopenblas-dev\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Thu, 30 Dec 2021 09:13:52 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "dlang",
      "d-programming-language",
      "deep-learning",
      "neural-network"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "__command__\n\n```console\ndub init\ndub add golem\n```\n\n__dub.json__\n\n```json\n{\n    \"dependencies\": {\n        \"golem\": \"~>0.8.0\"\n    }\n}\n```\n\n__dub.sdl__\n\n```json\ndependency \"golem\" version=\"~>0.8.0\"\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```d\nimport golem;\n\n// statically sized tensor\nauto x = tensor!([2, 2])([\n        [0.1, 0.2],\n        [0.3, 0.4],\n    ]);\nauto y = tensor!([2, 2])([\n        [-0.1, 0.2],\n        [0.3, -0.4],\n    ]);\n\nauto z = x + y;\n\nassert(z.value[0, 0] == 0.0);\n```\n\n```d name=no_grad\nimport golem;\nimport golem.random : randn;\nimport std.typecons : No;\n\n// no grads tensor\nTensor!(float, [3, 3], UseGradient.no) x = randn!(float, [3, 3], No.gradient);\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```d name=sequence\nimport golem;\n\nalias Perceptron(size_t Input, size_t Hidden, size_t Output) = Sequence!(\n        Linear!(float, Input, Hidden),\n        Activation!sigmoid,\n        Linear!(float, Hidden, Output),\n        Activation!sigmoid,\n    );\n\nauto net = new Perceptron!(2, 2, 1);\nauto x = tensor!([0, 2])([1.0f, 2.0f]);\nauto y = net(x);\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}