{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1706.03762",
      "https://arxiv.org/abs/1810.04805",
      "https://arxiv.org/abs/1810.04805, 2018.\n3. He K, Zhang X, Ren S, et al. [Deep residual learning for image recognition](http://openaccess.thecvf.com/content_cvpr_2016/papers/He_Deep_Residual_Learning_CVPR_2016_paper.pdf)[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2016: 770-778.\n4. Ba J L, Kiros J R, Hinton G E. [Layer normalization](https://arxiv.org/pdf/1607.06450.pdf)[J]. arXiv preprint https://arxiv.org/abs/1607.06450, 2016.\n5. Sennrich R, Haddow B, Birch A. [Neural machine translation of rare words with subword units](https://arxiv.org/pdf/1508.07909)[J]. arXiv preprint https://arxiv.org/abs/1508.07909, 2015.\n\n\n## \u7248\u672c\u66f4\u65b0\n\n2019/08/16 \u8fdb\u884c\u4e86\u89c4\u8303\u5316\uff0c\u66f4\u65b0\u4e86 Paddle \u63a5\u53e3\u7684\u4f7f\u7528\n\n## \u4f5c\u8005\n- [guochengCS](https://github.com/guoshengCS)\n\n## \u5982\u4f55\u8d21\u732e\u4ee3\u7801\n\n\u5982\u679c\u4f60\u53ef\u4ee5\u4fee\u590d\u67d0\u4e2aissue\u6216\u8005\u589e\u52a0\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u6b22\u8fce\u7ed9\u6211\u4eec\u63d0\u4ea4PR\u3002\u5982\u679c\u5bf9\u5e94\u7684PR\u88ab\u63a5\u53d7\u4e86\uff0c\u6211\u4eec\u5c06\u6839\u636e\u8d21\u732e\u7684\u8d28\u91cf\u548c\u96be\u5ea6\u8fdb\u884c\u6253\u5206\uff080-5\u5206\uff0c\u8d8a\u9ad8\u8d8a\u597d\uff09\u3002\u5982\u679c\u4f60\u7d2f\u8ba1\u83b7\u5f97\u4e8610\u5206\uff0c\u53ef\u4ee5\u8054\u7cfb\u6211\u4eec\u83b7\u5f97\u9762\u8bd5\u673a\u4f1a\u6216\u8005\u4e3a\u4f60\u5199\u63a8\u8350\u4fe1\u3002",
      "https://arxiv.org/abs/1607.06450, 2016.\n5. Sennrich R, Haddow B, Birch A. [Neural machine translation of rare words with subword units](https://arxiv.org/pdf/1508.07909)[J]. arXiv preprint https://arxiv.org/abs/1508.07909, 2015.\n\n\n## \u7248\u672c\u66f4\u65b0\n\n2019/08/16 \u8fdb\u884c\u4e86\u89c4\u8303\u5316\uff0c\u66f4\u65b0\u4e86 Paddle \u63a5\u53e3\u7684\u4f7f\u7528\n\n## \u4f5c\u8005\n- [guochengCS](https://github.com/guoshengCS)\n\n## \u5982\u4f55\u8d21\u732e\u4ee3\u7801\n\n\u5982\u679c\u4f60\u53ef\u4ee5\u4fee\u590d\u67d0\u4e2aissue\u6216\u8005\u589e\u52a0\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u6b22\u8fce\u7ed9\u6211\u4eec\u63d0\u4ea4PR\u3002\u5982\u679c\u5bf9\u5e94\u7684PR\u88ab\u63a5\u53d7\u4e86\uff0c\u6211\u4eec\u5c06\u6839\u636e\u8d21\u732e\u7684\u8d28\u91cf\u548c\u96be\u5ea6\u8fdb\u884c\u6253\u5206\uff080-5\u5206\uff0c\u8d8a\u9ad8\u8d8a\u597d\uff09\u3002\u5982\u679c\u4f60\u7d2f\u8ba1\u83b7\u5f97\u4e8610\u5206\uff0c\u53ef\u4ee5\u8054\u7cfb\u6211\u4eec\u83b7\u5f97\u9762\u8bd5\u673a\u4f1a\u6216\u8005\u4e3a\u4f60\u5199\u63a8\u8350\u4fe1\u3002",
      "https://arxiv.org/abs/1508.07909, 2015.\n\n\n## \u7248\u672c\u66f4\u65b0\n\n2019/08/16 \u8fdb\u884c\u4e86\u89c4\u8303\u5316\uff0c\u66f4\u65b0\u4e86 Paddle \u63a5\u53e3\u7684\u4f7f\u7528\n\n## \u4f5c\u8005\n- [guochengCS](https://github.com/guoshengCS)\n\n## \u5982\u4f55\u8d21\u732e\u4ee3\u7801\n\n\u5982\u679c\u4f60\u53ef\u4ee5\u4fee\u590d\u67d0\u4e2aissue\u6216\u8005\u589e\u52a0\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u6b22\u8fce\u7ed9\u6211\u4eec\u63d0\u4ea4PR\u3002\u5982\u679c\u5bf9\u5e94\u7684PR\u88ab\u63a5\u53d7\u4e86\uff0c\u6211\u4eec\u5c06\u6839\u636e\u8d21\u732e\u7684\u8d28\u91cf\u548c\u96be\u5ea6\u8fdb\u884c\u6253\u5206\uff080-5\u5206\uff0c\u8d8a\u9ad8\u8d8a\u597d\uff09\u3002\u5982\u679c\u4f60\u7d2f\u8ba1\u83b7\u5f97\u4e8610\u5206\uff0c\u53ef\u4ee5\u8054\u7cfb\u6211\u4eec\u83b7\u5f97\u9762\u8bd5\u673a\u4f1a\u6216\u8005\u4e3a\u4f60\u5199\u63a8\u8350\u4fe1\u3002"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": "\u673a\u5668\u7ffb\u8bd1\uff08machine translation, MT\uff09\u662f\u5229\u7528\u8ba1\u7b97\u673a\u5c06\u4e00\u79cd\u81ea\u7136\u8bed\u8a00(\u6e90\u8bed\u8a00)\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u81ea\u7136\u8bed\u8a00(\u76ee\u6807\u8bed\u8a00)\u7684\u8fc7\u7a0b\uff0c\u8f93\u5165\u4e3a\u6e90\u8bed\u8a00\u53e5\u5b50\uff0c\u8f93\u51fa\u4e3a\u76f8\u5e94\u7684\u76ee\u6807\u8bed\u8a00\u7684\u53e5\u5b50\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  --epoch 30 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  --epoch 30 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9462194746815161,
        0.9204470346418643,
        0.9204470346418643,
        0.9251297350816814,
        0.9669839002510836,
        0.8798374929598684,
        0.9204470346418643,
        0.9807582422145847,
        0.8798374929598684
      ],
      "excerpt": "[2019-08-02 15:30:51,656 INFO train.py:262] step_idx: 150100, epoch: 32, batch: 1364, avg loss: 2.880427, normalized loss: 1.504687, ppl: 17.821888, speed: 3.34 step/s \n[2019-08-02 15:31:19,824 INFO train.py:262] step_idx: 150200, epoch: 32, batch: 1464, avg loss: 2.955965, normalized loss: 1.580225, ppl: 19.220257, speed: 3.55 step/s \n[2019-08-02 15:31:48,151 INFO train.py:262] step_idx: 150300, epoch: 32, batch: 1564, avg loss: 2.951180, normalized loss: 1.575439, ppl: 19.128502, speed: 3.53 step/s \n[2019-08-02 15:32:16,401 INFO train.py:262] step_idx: 150400, epoch: 32, batch: 1664, avg loss: 3.027281, normalized loss: 1.651540, ppl: 20.641024, speed: 3.54 step/s \n[2019-08-02 15:32:44,764 INFO train.py:262] step_idx: 150500, epoch: 32, batch: 1764, avg loss: 3.069125, normalized loss: 1.693385, ppl: 21.523066, speed: 3.53 step/s \n[2019-08-02 15:33:13,199 INFO train.py:262] step_idx: 150600, epoch: 32, batch: 1864, avg loss: 2.869379, normalized loss: 1.493639, ppl: 17.626074, speed: 3.52 step/s \n[2019-08-02 15:33:41,601 INFO train.py:262] step_idx: 150700, epoch: 32, batch: 1964, avg loss: 2.980905, normalized loss: 1.605164, ppl: 19.705633, speed: 3.52 step/s \n[2019-08-02 15:34:10,079 INFO train.py:262] step_idx: 150800, epoch: 32, batch: 2064, avg loss: 3.047716, normalized loss: 1.671976, ppl: 21.067181, speed: 3.51 step/s \n[2019-08-02 15:34:38,598 INFO train.py:262] step_idx: 150900, epoch: 32, batch: 2164, avg loss: 2.956475, normalized loss: 1.580735, ppl: 19.230072, speed: 3.51 step/s \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  --predict_file gen_data/wmt16_ende_data_bpe/newstest2014.tok.bpe.32000.en-de \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  --predict_file gen_data/wmt16_ende_data_bpe/newstest2014.tok.bpe.32000.en-de \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9625923568277878
      ],
      "excerpt": "perl gen_data/mosesdecoder/scripts/generic/multi-bleu.perl gen_data/wmt16_ende_data/newstest2014.tok.de < predict.tok.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "BLEU = 26.35, 57.7/32.1/20.0/13.0 (BP=1.000, ratio=1.013, hyp_len=63903, ref_len=63078) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9702105236373249
      ],
      "excerpt": "| Base | 26.35 | 29.07 | 33.30 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": "\u56fe 2. Multi-Head Attention \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9048172864221794,
        0.999995931704793,
        0.9999999999998579,
        0.9995250101393315,
        0.9986497415973761,
        0.9268240064709804
      ],
      "excerpt": "Vaswani A, Shazeer N, Parmar N, et al. Attention is all you need[C]//Advances in Neural Information Processing Systems. 2017: 6000-6010. \nDevlin J, Chang M W, Lee K, et al. Bert: Pre-training of deep bidirectional transformers for language understanding[J]. arXiv preprint arXiv:1810.04805, 2018. \nHe K, Zhang X, Ren S, et al. Deep residual learning for image recognition[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2016: 770-778. \nBa J L, Kiros J R, Hinton G E. Layer normalization[J]. arXiv preprint arXiv:1607.06450, 2016. \nSennrich R, Haddow B, Birch A. Neural machine translation of rare words with subword units[J]. arXiv preprint arXiv:1508.07909, 2015. \n2019/08/16 \u8fdb\u884c\u4e86\u89c4\u8303\u5316\uff0c\u66f4\u65b0\u4e86 Paddle \u63a5\u53e3\u7684\u4f7f\u7528 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Xinsen-Zhang/transformer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-02T10:39:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-02T10:44:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "study the official implement of Transformer via PaddlePaddle",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Xinsen-Zhang/transformer/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**Q:** \u9884\u6d4b\u7ed3\u679c\u4e2d\u6837\u672c\u6570\u5c11\u4e8e\u8f93\u5165\u7684\u6837\u672c\u6570\u662f\u4ec0\u4e48\u539f\u56e0  \n**A:** \u82e5\u6837\u672c\u4e2d\u6700\u5927\u957f\u5ea6\u8d85\u8fc7 `transformer.yaml` \u4e2d `max_length` \u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u8bf7\u6ce8\u610f\u8fd0\u884c\u65f6\u589e\u5927 `--max_length` \u7684\u8bbe\u7f6e\uff0c\u5426\u5219\u8d85\u957f\u6837\u672c\u5c06\u88ab\u8fc7\u6ee4\u3002\n\n**Q:** \u9884\u6d4b\u65f6\u6700\u5927\u957f\u5ea6\u8d85\u8fc7\u4e86\u8bad\u7ec3\u65f6\u7684\u6700\u5927\u957f\u5ea6\u600e\u4e48\u529e  \n**A:** \u7531\u4e8e\u8bad\u7ec3\u65f6 `max_length` \u7684\u8bbe\u7f6e\u51b3\u5b9a\u4e86\u4fdd\u5b58\u6a21\u578b position encoding \u7684\u5927\u5c0f\uff0c\u82e5\u9884\u6d4b\u65f6\u957f\u5ea6\u8d85\u8fc7 `max_length`\uff0c\u8bf7\u8c03\u5927\u8be5\u503c\uff0c\u4f1a\u91cd\u65b0\u751f\u6210\u66f4\u5927\u7684 position encoding \u8868\u3002\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 00:56:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Xinsen-Zhang/transformer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Xinsen-Zhang/transformer",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Xinsen-Zhang/transformer/master/gen_data.sh",
      "https://raw.githubusercontent.com/Xinsen-Zhang/transformer/master/.run_ce.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "\u251c\u2500\u2500 gen_data.sh          #: \u6570\u636e\u751f\u6210\u811a\u672c \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9892278522053876,
        0.9771384723171962
      ],
      "excerpt": "git clone https://github.com/PaddlePaddle/models.git \ncd models/PaddleNLP/machine_translation/transformer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9457752339520574
      ],
      "excerpt": "\u8bad\u7ec3\u65f6\u9ed8\u8ba4\u4f7f\u7528\u6240\u6709 GPU\uff0c\u53ef\u4ee5\u901a\u8fc7 CUDA_VISIBLE_DEVICES \u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u4f7f\u7528\u7684 GPU \u6570\u76ee\u3002\u4e5f\u53ef\u4ee5\u53ea\u4f7f\u7528 CPU \u8bad\u7ec3(\u901a\u8fc7\u53c2\u6570 --use_cuda False \u8bbe\u7f6e)\uff0c\u8bad\u7ec3\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\u3002\u5728\u6267\u884c\u8bad\u7ec3\u65f6\u82e5\u63d0\u4f9b\u4e86 save_model_path\uff08\u9ed8\u8ba4\u4e3a saved_models\uff09\uff0c\u5219\u6bcf\u9694\u4e00\u5b9a iteration \u540e(\u901a\u8fc7\u53c2\u6570 save_step \u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a10000)\u5c06\u4fdd\u5b58\u5f53\u524d\u8bad\u7ec3\u7684 checkpoint \u5230\u76f8\u5e94\u76ee\u5f55\uff08\u4f1a\u4fdd\u5b58\u5206\u522b\u8bb0\u5f55\u4e86\u6a21\u578b\u53c2\u6570\u548c\u4f18\u5316\u5668\u72b6\u6001\u7684 transformer.pdparams \u548c transformer.pdopt \u4e24\u4e2a\u6587\u4ef6\uff09\uff0c\u6bcf\u9694\u4e00\u5b9a\u6570\u76ee\u7684 iteration (\u901a\u8fc7\u53c2\u6570 print_step \u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a100)\u5c06\u6253\u5370\u5982\u4e0b\u7684\u65e5\u5fd7\u5230\u6807\u51c6\u8f93\u51fa\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9893272198983933
      ],
      "excerpt": ": git clone https://github.com/moses-smt/mosesdecoder.git \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8924976426181745,
        0.8418319959942993
      ],
      "excerpt": "\u251c\u2500\u2500 utils                #: \u5de5\u5177\u5305 \n\u251c\u2500\u2500 desc.py              #: \u8f93\u5165\u63cf\u8ff0\u6587\u4ef6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9285065137266004,
        0.9303748089054232,
        0.8470133494189246
      ],
      "excerpt": "\u251c\u2500\u2500 inference_model.py   #: \u4fdd\u5b58 inference_model \u7684\u811a\u672c \n\u251c\u2500\u2500 main.py              #: \u4e3b\u7a0b\u5e8f\u5165\u53e3 \n\u251c\u2500\u2500 predict.py           #: \u9884\u6d4b\u811a\u672c \n\u251c\u2500\u2500 reader.py            #: \u6570\u636e\u8bfb\u53d6\u63a5\u53e3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535,
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 train.py             #: \u8bad\u7ec3\u811a\u672c \n\u251c\u2500\u2500 transformer.py       #: \u6a21\u578b\u5b9a\u4e49\u6587\u4ef6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.8594142235991984
      ],
      "excerpt": "python -u main.py \\ \n  --do_train True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8153934971190178
      ],
      "excerpt": "\u4ee5\u4e0a\u547d\u4ee4\u4e2d\u4f20\u5165\u4e86\u6267\u884c\u8bad\u7ec3\uff08do_train\uff09\u3001\u8bad\u7ec3\u8f6e\u6570\uff08epoch\uff09\u548c\u8bad\u7ec3\u6570\u636e\u6587\u4ef6\u8def\u5f84\uff08\u6ce8\u610f\u8bf7\u6b63\u786e\u8bbe\u7f6e\uff0c\u652f\u6301\u901a\u914d\u7b26\uff09\u7b49\u53c2\u6570\uff0c\u66f4\u591a\u53c2\u6570\u7684\u4f7f\u7528\u4ee5\u53ca\u652f\u6301\u7684\u6a21\u578b\u8d85\u53c2\u6570\u53ef\u4ee5\u53c2\u89c1 transformer.yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u5176\u4e2d\u9ed8\u8ba4\u63d0\u4f9b\u4e86 Transformer base model \u7684\u914d\u7f6e\uff0c\u5982\u9700\u8c03\u6574\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u66f4\u6539\u6216\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u5165\uff08\u547d\u4ee4\u884c\u4f20\u5165\u5185\u5bb9\u5c06\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bad\u7ec3 Transformer \u8bba\u6587\u4e2d\u7684 big model\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.8594142235991984
      ],
      "excerpt": "python -u main.py \\ \n  --do_train True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028668742369119
      ],
      "excerpt": "[2019-08-02 15:34:10,079 INFO train.py:262] step_idx: 150800, epoch: 32, batch: 2064, avg loss: 3.047716, normalized loss: 1.671976, ppl: 21.067181, speed: 3.51 step/s \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.8594142235991984
      ],
      "excerpt": "python -u main.py \\ \n  --do_predict True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9020025270336994
      ],
      "excerpt": "  --output_file predict.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8840945803770602
      ],
      "excerpt": "\u7531 predict_file \u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u6587\u672c\u7684\u7ffb\u8bd1\u7ed3\u679c\u4f1a\u8f93\u51fa\u5230 output_file \u6307\u5b9a\u7684\u6587\u4ef6\u3002\u6267\u884c\u9884\u6d4b\u65f6\u9700\u8981\u8bbe\u7f6e init_from_params \u6765\u7ed9\u51fa\u6a21\u578b\u6240\u5728\u76ee\u5f55\uff0c\u66f4\u591a\u53c2\u6570\u7684\u4f7f\u7528\u53ef\u4ee5\u5728 transformer.yaml \u6587\u4ef6\u4e2d\u67e5\u9605\u6ce8\u91ca\u8bf4\u660e\u5e76\u8fdb\u884c\u66f4\u6539\u8bbe\u7f6e\u3002\u6ce8\u610f\u82e5\u5728\u6267\u884c\u9884\u6d4b\u65f6\u8bbe\u7f6e\u4e86\u6a21\u578b\u8d85\u53c2\u6570\uff0c\u5e94\u4e0e\u6a21\u578b\u8bad\u7ec3\u65f6\u7684\u8bbe\u7f6e\u4e00\u81f4\uff0c\u5982\u82e5\u8bad\u7ec3\u65f6\u4f7f\u7528 big model \u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u5219\u9884\u6d4b\u65f6\u5bf9\u5e94\u7c7b\u4f3c\u5982\u4e0b\u547d\u4ee4\uff1a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333384803827206,
        0.8594142235991984
      ],
      "excerpt": "python -u main.py \\ \n  --do_predict True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9020025270336994
      ],
      "excerpt": "  --output_file predict.txt \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8314117652697011,
        0.8314117652697011
      ],
      "excerpt": ": \u8fd8\u539f predict.txt \u4e2d\u7684\u9884\u6d4b\u7ed3\u679c\u4e3a tokenize \u540e\u7684\u6570\u636e \nsed -r 's/(@@ )|(@@ ?$)//g' predict.txt > predict.tok.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302767448384834
      ],
      "excerpt": "<img src=\"images/transformer_network.png\" height=400 hspace='10'/> <br /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9249960601372091
      ],
      "excerpt": "<img src=\"images/multi_head_attention.png\" height=300 hspace='10'/> <br /> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Xinsen-Zhang/transformer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Transformer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "transformer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Xinsen-Zhang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Xinsen-Zhang/transformer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 00:56:11 GMT"
    },
    "technique": "GitHub API"
  }
}