{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1811.09245",
      "https://arxiv.org/abs/1611.06624",
      "https://arxiv.org/abs/1811.09245"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nPlease cite this paper when you use the code in this repository:\r\n\r\n```\r\n@journal{TGAN2020,\r\n    author = {Saito, Masaki and Saito, Shunta and Koyama, Masanori and Kobayashi, Sosuke},\r\n    title = {Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN},\r\n    booktitle = {International Journal of Computer Vision},\r\n    year = {2020},\r\n    month = may,\r\n    doi = {10.1007/s11263-020-01333-y},\r\n    url = {https://doi.org/10.1007/s11263-020-01333-y},\r\n}\r\n```\r\n\r\nYou can find our paper also on [arxiv](https://arxiv.org/abs/1811.09245).\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@journal{TGAN2020,\n    author = {Saito, Masaki and Saito, Shunta and Koyama, Masanori and Kobayashi, Sosuke},\n    title = {Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN},\n    booktitle = {International Journal of Computer Vision},\n    year = {2020},\n    month = may,\n    doi = {10.1007/s11263-020-01333-y},\n    url = {https://doi.org/10.1007/s11263-020-01333-y},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8843489770879777
      ],
      "excerpt": "* Unconditional video generation results by TGANv2 (trained on the FaceForensics dataset) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pfnet-research/tgan2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-23T05:44:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-03T06:17:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9876273168525038
      ],
      "excerpt": "This repository contains the implementation of TGANv2 (see the details in \"Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN\") and scripts to reproduce experiments in the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9093787665300426
      ],
      "excerpt": "It retrieves the UCF101 dataset from the official server and extract all the videos contained in it under datasets/ucf101 directory which is automatically created by the script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8332917866991215
      ],
      "excerpt": "(You can also find more details in this official README of the FaceForensics dataset.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8707413902538166
      ],
      "excerpt": "Calculate statistics of the UCF101 dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8783478303791498
      ],
      "excerpt": "--c3d-pretrained-model datasets/models/conv3d_deepnetA_ucf.npz \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620488722956475
      ],
      "excerpt": "Calculate the FID score of a given trained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "Model | UCF101 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "The official implementation of \"Train Sparsely, Generate Densely: Memory-efficient Unsupervised Training of High-resolution Temporal GAN\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pfnet-research/tgan2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Fri, 24 Dec 2021 01:05:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pfnet-research/tgan2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pfnet-research/tgan2",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pfnet-research/tgan2/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pfnet-research/tgan2/master/figure/MakeFigureForCostAndMemory.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pfnet-research/tgan2/master/scripts/download_ucf101.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n```bash\r\ncd docker\r\ndocker build -t tgan2 .\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8226295206929012,
        0.9414119019616536
      ],
      "excerpt": "Please run the download.sh script as followings. \nbash scripts/download_ucf101.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8706217993101727
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; python3 scripts/make_ucf101.py --img-rows 192 --img-cols 256\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8949735454179769
      ],
      "excerpt": "Then, please run the following commands to download the FaceForensics dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8110896623861598
      ],
      "excerpt": "Finally, please run the following command to create .h5 files from those downloaded videos: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.919805134471699
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; python3 scripts/make_face_forensics.py\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333210818297472,
        0.8144331013724293,
        0.8673412891986425,
        0.8673412891986425
      ],
      "excerpt": "cd datasets \nif [ ! -d models ]; then mkdir -p models; fi \nwget https://github.com/rezoo/tgan2/releases/download/v1.0/mean2.npz \nwget https://github.com/rezoo/tgan2/releases/download/v1.0/conv3d_deepnetA_ucf.npz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872455358139388
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872455358139388
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872455358139388
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872455358139388
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872455358139388
      ],
      "excerpt": "bash -c \"cd /tgan2 &amp;&amp; \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8144772707454367
      ],
      "excerpt": "Then, please run the make_ucf101.py script to apply preprocessings: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.818059139294919
      ],
      "excerpt": "python scripts/faceforensics_download_v1.py -d compressed datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u251c\u2500\u2500 faceforensics_download_v1.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664,
        0.8909404767862593,
        0.8589534893990137,
        0.8890390350607155
      ],
      "excerpt": "\u2502   \u251c\u2500\u2500 test.h5 \n\u2502   \u251c\u2500\u2500 test.json \n\u2502   \u251c\u2500\u2500 train.h5 \n\u2502   \u251c\u2500\u2500 train.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "python3 train.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8171624367351883
      ],
      "excerpt": "'out=results/full-bs-128' \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535
      ],
      "excerpt": "python3 train.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151898980997648,
        0.807173047533053,
        0.852182146829592
      ],
      "excerpt": "results/full-bs-128/config.yml \\ \n-m results/full-bs-128/generator_iter_82000.npz \\ \n-o results/full-bs-128/result.yml\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8578215481027035,
        0.8962283665419261,
        0.8669098733933345,
        0.8372027707759631
      ],
      "excerpt": "--ucf101-h5path-train datasets/ucf101_192x256/train.h5 \\ \n--ucf101-config-train datasets/ucf101_192x256/train.json \\ \n--c3d-pretrained-model datasets/models/conv3d_deepnetA_ucf.npz \\ \n--stat-output datasets/ucf101_192x256/ucf101_192px_stat.npz\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589549300508185,
        0.8060417806238915,
        0.807173047533053
      ],
      "excerpt": "--stat-filename datasets/ucf101_192x256/ucf101_192x256_stat.npz \\ \n--config results/full-bs-128/config.yml \\ \n--gen-snapshot results/full-bs-128/generator_iter_82000.npz \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8660701074245004
      ],
      "excerpt": "--result-dir results/full-bs-128\" \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pfnet-research/tgan2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Dockerfile",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Preferred Networks\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Temporal Generative Adversarial Nets v2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tgan2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pfnet-research",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pfnet-research/tgan2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n- docker\r\n- nvidia-docker\r\n- unrar\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 33,
      "date": "Fri, 24 Dec 2021 01:05:03 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "generative-adversarial-network",
      "video-generation",
      "machine-learning",
      "deep-learning"
    ],
    "technique": "GitHub API"
  }
}