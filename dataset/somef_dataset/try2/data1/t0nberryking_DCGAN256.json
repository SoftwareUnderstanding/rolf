{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1606.03498",
      "https://arxiv.org/abs/1704.00028"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "https://github.com/manicman1999/GAN256\n\nhttps://medium.com/@utk.is.here/keep-calm-and-train-a-gan-pitfalls-and-tips-on-training-generative-adversarial-networks-edd529764aa9\n\nGenerative adversarial nets [[arXiv]](https://arxiv.org/abs/1406.2661)\n\nImproved Techniques for Training GANs [[arXiv]](https://arxiv.org/abs/1606.03498)\n\nImproved Training of Wasserstein GANs [[arXiv]](https://arxiv.org/abs/1704.00028)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/t0nberryking/DCGAN256",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-11T07:17:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-11T04:39:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8372396012058242,
        0.9625272486312118,
        0.9751388515311742,
        0.9711220730672344
      ],
      "excerpt": "DCGAN on 256x256 pictures  \n(*) This repo is a modification of manicman1999/GAN256 \n(*) The full credit of the basic model structure design goes to manicman1999/GAN256 \nThis GAN was based on GAN256 by Matthew Mann as his implementation allowed input and output of pictures of 256x256 resolution. Normally, GANs trained at a personal scale only works well at much lower resolutions (32x32 or 64x64), and may not transfer to datasets other than Mnist. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9587738249472585,
        0.9592760438988577
      ],
      "excerpt": "Larger Kernel and more filters \nThe kernel size of layers 2 and 3 in the generator was increased by 1. As larger kernels cover more area it should capture more information.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8397082151489834,
        0.9183607778119139
      ],
      "excerpt": "A Gaussian Noise layer was added at the top of the Discriminator, with the idea being to prevent the Discriminator from being too good too early, which will prevent the Generator from learning and possibly converging. \nFor female blouses, the images were scraped using Scrapy from the Amazon website, and filters were used to select only 4-/5-star products.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9036679627932406
      ],
      "excerpt": "All the images were resized and background-filled to 256x256 resolution before input into the model for training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "DCGAN on 256x256 pictures ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/t0nberryking/DCGAN256/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Wed, 22 Dec 2021 15:21:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/t0nberryking/DCGAN256/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "t0nberryking/DCGAN256",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/t0nberryking/DCGAN256/master/GAN256%20-%20Heels%20Zippo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/t0nberryking/DCGAN256/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN256",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN256",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "t0nberryking",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/t0nberryking/DCGAN256/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 24,
      "date": "Wed, 22 Dec 2021 15:21:13 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Read the code first in the Jupyter Notebook, and create an images folders to store your image dataset (with the names renamed to 5-digit numbers starting from 0, images resized to 256x256). Then just run it and let the community know what you came up with!\n\n",
      "technique": "Header extraction"
    }
  ]
}