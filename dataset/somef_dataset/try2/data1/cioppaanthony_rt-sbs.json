{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Anthony Cioppa is funded by the FRIA, Belgium.\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2002.04993"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Cioppa2020RealTime,\n  author = {Cioppa, Anthony and Braham, Marc and Van Droogenbroeck, Marc},\n  title = {Real-Time Semantic Background Subtraction},\n  booktitle = {The IEEE Conference on Image Processing (ICIP)},\n  month = {October},\n  year = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9834728139738911
      ],
      "excerpt": "Please contact the authors if you require a commercial license. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.99862984142183
      ],
      "excerpt": "To cite this paper or repository, please use the following bibtex entry: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cioppaanthony/rt-sbs",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-27T07:59:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-16T12:12:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9678050153895003,
        0.9199560577109318,
        0.996068057774235
      ],
      "excerpt": "Be aware that the code presented in this repository is for research purpose only.  \nThe technology as well as the ViBe algorithm are PATENT protected, see LICENSE. \nTherefore, this is not a real-time implementation of the method, but simply a benchmarking code to reproduce the results of the scientific paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023480630272381
      ],
      "excerpt": "Note that we also use the implementation of MedianPool2d from rwightman \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9913760272569447
      ],
      "excerpt": "This repository provides a benchmarking code of the method RT-SBS  (Real-Time Semantic Background Subtraction) in Python 3 using the PyTorch deep learning framework. This work is presented at the IEEE Conference on Image Processing (ICIP 2020). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968351487409289,
        0.9773734650926315
      ],
      "excerpt": "The objective is to segment all the moving parts of a scene by classifying each pixel into one of the two following classes: the foreground containing the moving objects, and the background for the static parts. To do so, we base our method on the Semantic background subtraction method (also called SBS). This a method that combines the decision of two classifiers: Any background subtraction algorithm and a semantic classifier. However this work relies on a pretty strong assumption: that the semantic information is available for each frame of the video. This is not guaranteed in a real-time application. In fact, semantic segmentation is often much slower to compute than background subtraction. \nTo overcome this issue, we need to find a faster surrogate for the semantic information when it is not available. This is the basics of our algorithm, that we call Real-Time Semantic Background Subtraction (or RT-SBS for short). Our idea is the following: We simply look at the previous available semantic information for each pixel. This gives us some information about the object that was present at that moment. Of course, we cannot completely trust this information as the objects may have moved between the frames. To know whether or not we should trust this previous semantic information, we propose to use a change detection algorithm. This algorithm will indicate whether or not the pixel and its surroundings have significantly changed. In the cases where the pixel has not changed too much, we can still trust the previous semantic information and apply its decision. Otherwise, we do not trust it and rely on the decision of the background subtraction. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9188462452021291,
        0.9979324891169464
      ],
      "excerpt": "This repository provides every module needed to reproduce the results of the paper on the CDNet 2014 dataset. It also provides the CDNet 2014 data and the PSPNet semantic segmentation masks so that you don't need to run PSPNet on your device. \nFor more information about the content of the paper, check out our presentation video. To see more of our work, subscribe to our YouTube channel Acad Research \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository contains the code for the paper: \"Real-Time Semantic Background Subtraction\", published at the ICIP 2020 conference.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cioppaanthony/rt-sbs/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 10:36:19 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cioppaanthony/rt-sbs/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cioppaanthony/rt-sbs",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/cioppaanthony/rt-sbs/master/docker_install.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For benchmarking, we provide the videos and groud truths of CDNet and the 16-bits segmentation masks of PSPNet. Simply download these masks and unzip all categories folder inside of a specific folder for the CDNet dataset and for PSPNet.\n\n```\npip install -U pip setuptools\npip install gdown\n\ngdown https://drive.google.com/uc?id=1rSpbC70FPpoISZ4X-f4SbfCEPYPPOfWF\nunzip Original.zip\n\ngdown https://drive.google.com/uc?id=1T8-2xOsB9HqTJ5SL8JzluoJjAYQ-HEJG\nunzip PSPNet_Part1.zip\ngdown https://drive.google.com/uc?id=1ghS_nNQ9f733EcW_kln0LYZrseo4_sCf\nunzip PSPNet_Part2.zip\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "If you are using conda, simply follow these steps to create the environment and install the required libraries:\n\n```\nconda create -n context_aware\nconda install python=3.7 pip cudnn cudatoolkit=10.1\npip install numpy==1.14.0 torch==1.0.1.post2 torchvision==0.2.0 tqdm==4.19.4 matplotlib==3.1.2 opencv-python-headless==4.1.2.30 opencv-contrib-python-headless==4.1.2.30\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "If you are using the nvidia-docker, you can follow these steps to instantiate the docker and install the libraries:\n\n\nIn our case we used the following commands to create the dockers. Note that you will need to replace */path/to/your/directory/* by the path to one of your directories and *path/to/the/docker/image* by the path to the docker image. Note that you can select the GPUs to use by changing the index(es) of the *NV_GPU* variable.\n\n```\nNV_GPU=0 nvidia-docker run --name RTSBS -it --rm --shm-size=1g --ulimit memlock=-1 -v /path/to/your/directory/:/workspace/generic path/to/the/docker/image\n```\n\nTo install the code and libraries, simply run:\n\n```\n1. git clone https://github.com/cioppaanthony/rt-sbs\n3. cd rt-sbs\n3. bash docker_install.sh\n```\n\nAt this step, all the required libraries are installed. Note that outside of a docker, sudo permission can be required to install the libraries in the <code>docker_install.sh</code> file.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8152587734173162
      ],
      "excerpt": "<p align=\"center\"><img src=\"img/graphical.png\" width=\"480\"></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8298760536014178
      ],
      "excerpt": "<p align=\"center\"><img src=\"img/Miniature-Youtube.png\" width=\"720\"></p> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cioppaanthony/rt-sbs/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/cioppaanthony/rt-sbs/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\nSOFTWARE EVALUATION LICENSE AGREEMENT\\n\\nThis software license agreement applies to the RT-SBS software, hereinafter referred to as the \\xe2\\x80\\x9cSoftware\\xe2\\x80\\x9d, available for download from this website and constitutes a legal agreement between the person or entity downloading the Software, hereinafter referred to as \\xe2\\x80\\x9cLicensee\\xe2\\x80\\x9d, and University of Li\\xc3\\xa8ge, hereinafter referred to as \\xe2\\x80\\x9cULi\\xc3\\xa8ge\". By downloading, installing and otherwise using the Software, Licensee is automatically agreeing to and show that he has read and understood the terms and conditions contained in this\\xc2\\xa0Software Evaluation License.\\n\\n\\n1. \\tBACKGROUND \\n\\nULi\\xc3\\xa8ge owns certain software for use for background detection and subtraction in video sequences that  implements a method covered by patents also owned by ULi\\xc3\\xa8ge. The software and the patents (hereinafter \\xe2\\x80\\x9cthe Technology\\xe2\\x80\\x9d) were developed by the laboratory of Professor Marc Van Droogenbroeck, the research unit for signal and image exploitation of the Electrical Engineering and Computer Science of the University of Li\\xc3\\xa8ge. This software is entitled \\xc2\\xab\\xc2\\xa0RT-SBS\\xc2\\xa0\\xc2\\xbb. \\n\\nLicensee desires to acquire a personal, non-exclusive, non-transferable, limited license to use such software for the purposes of evaluating Technology.\\n\\nLicensee shall use such software for the sole purpose of determining its interest in acquiring a commercial license on the Technology and solely upon the terms and conditions set forth in this Agreement. \\n\\n\\n\\n2.\\t DEFINITIONS\\n \\n2.1 \\xe2\\x80\\x9cPrototype\\xe2\\x80\\x9d means any software to be developed by Licensee that includes or incorporates the Software, in whole or in parts, or elements based on or deriving from the Software. \\n\\n2.2 \\xe2\\x80\\x9cSoftware\\xe2\\x80\\x9d means the source code and binary files known as \\xc2\\xab\\xc2\\xa0RT-SBS\\xc2\\xa0\\xc2\\xbb provided to Licensee pursuant to this Agreement.  Software includes the \\xe2\\x80\\x9cRT-SBS\\xc2\\xa0\\xe2\\x80\\x9d Reference implementation in python and any other material relating to the Software that may be provided by ULi\\xc3\\xa8ge to Licensee in connection with this Agreement.\\n\\n\\n3. \\tLIMITED LICENSE\\n \\n3.1 Grant. Subject to the terms and conditions of this Agreement, ULi\\xc3\\xa8ge grants Licensee a personal, non-exclusive, non-transferable limited license to : \\n\\n    (i) use and modify the Software in source code form for the sole purpose of enabling Licensee to evaluate the Software in connection with the development by Licensee of a Prototype integrating, in whole or in part, the Software as it may be modified by Licensee. \\n\\nAll rights not expressly granted by this agreement are expressly reserved by ULi\\xc3\\xa8ge.\\n\\n3.2 Patents.  Although the Software is covered by the following patent rights owned by ULi\\xc3\\xa8ge: EP3438929B1, US10614736B2, US10706558B2, CN109389618, EP2015252B1,  US8009918B2, JP4699564B2 ; ULi\\xc3\\xa8ge does not grant any licenses under any ULi\\xc3\\xa8ge\\xe2\\x80\\x99s patent rights by this Agreement.  However, ULi\\xc3\\xa8ge does covenant that, for the term of this Agreement, it will not assert against Licensee a claim that use of the Software by Licensee in accordance with this Agreement infringes any such patent rights. For purposes of clarity, Licensee acknowledges that ULi\\xc3\\xa8ge is under no obligation to maintain the patents above.\\n\\n\\n4.\\tSOFTWARE DELIVERY \\xe2\\x80\\x93 NO SUPPORT SERVICE\\n\\nLicensee shall obtain the Software by downloading it from a publicly accessible code repository.\\n\\nULi\\xc3\\xa8ge is under no obligation to provide Licensee with any kind of support services to address issues arising in connection with Licensee\\xe2\\x80\\x99s use and/or integration of the Software to the Prototype. \\n\\nIf requested by Licensee and accepted by ULi\\xc3\\xa8ge, ULi\\xc3\\xa8ge shall provide such support on terms and conditions as may be determined by ULi\\xc3\\xa8ge including price.\\n\\n\\n5.\\tMAINTENANCE AND ADDITIONAL RELEASES\\n\\nThis Agreement applies only to the Software as licensed hereunder to Licensee. Possible later versions released by ULi\\xc3\\xa8ge are not part of this License.\\n \\n\\n6.\\tFINANCIAL COMPENSATION\\n\\nAccess to the Software is given for free. \\n\\n\\n7.\\tACKNOWLEDGEMENT\\n\\nUniversity shall be entitled to disclose the existence of this Agreement. \\n\\n\\t \\n8.\\tWARRANTY DISCLAIMER \\xe2\\x80\\x93 NO LIABILITY\\n\\nThe Software is provided on an \\xe2\\x80\\x9cas is\\xe2\\x80\\x9d basis without warranty of any kind, either expressed or implied, including without limitation any warranties of merchantability, fitness for a particular purpose or that the use of the Software and exercise of the license rights hereunder will not infringe any intellectual property rights other than the patents above. ULi\\xc3\\xa8ge does not warrant that the Software will meet Licensee\\xe2\\x80\\x99s requirements or that the Software will operate uninterrupted or error-free. Licensee is solely responsible for determining the appropriateness of using the Software or integrating the Software into the Prototype and assumes all risks with its exercise of rights under this Agreement \\n\\nThe Software was created in the course of academic research and not as a commercial product. Licensee expressly agrees that ULi\\xc3\\xa8ge shall not be responsible for any damages whatsoever (including without limitation loss of data, loss of profits arising out of or related to the use of the Software. By using the Software and exercising its licensed rights hereunder, Licensee expressly agrees to assume all responsibility for any and all such use and exercise and ULi\\xc3\\xa8ge shall not be liable in any manner whatsoever for any damages however caused and regardless of the theory of liability in connection with such use and exercise. \\n\\nAny provision herein to the contrary notwithstanding, the maximum liability of ULi\\xc3\\xa8ge whatsoever in connection with Licensee\\xe2\\x80\\x99s use of the Software shall in no case exceed 500 (five hundred Euros).\\n\\n\\n9.\\tINDEMNIFICATION\\n\\nLicensee agrees to indemnify and hold ULi\\xc3\\xa8ge harmless from any and all liability, damage, loss or expense that may be incurred by ULi\\xc3\\xa8ge in connection with any claim, suit, demand, action or judgement arising out of the use by Licensee of the Software.\\n\\n\\n10.\\tTERM AND TERMINATION\\n\\nThis Agreement shall be effective as of the date of the last signature as written below and shall automatically terminate 180 (one hundred eighty) days thereafter.\\n\\nULi\\xc3\\xa8ge may immediately terminate this agreement in case Licensee is in breach of any provision of this Agreement. \\n\\nUpon termination of this Agreement, Licensee shall cease all use of the Software and of all of its elements and shall, at the ULi\\xc3\\xa8ge\\xe2\\x80\\x99s option, return or destroy any copies of the Software in its possession. \\n\\n\\n11.\\tENTIRE AGREEMENT - SEVERABILITY \\n\\nThis Agreement constitutes the entire agreement between the Parties concerning the subject matter hereof and supersedes any prior agreements, statements, negotiations, understandings, proposals or undertakings, oral or written, with respect to the subject matter hereof. If any provision of this Agreement shall be held to be illegal, invalid or unenforceable, each Party agrees that such provision shall be enforced to the maximum extent permissible so as to effect the intent of the Parties, and the validity, legality and enforceability of the remaining provisions of this Agreement shall not in any way be affected or impaired thereby. If necessary to effect the intent of the Parties, the Parties shall negotiate in good faith to amend this Agreement to replace the unenforceable language with enforceable language that reflects such intent as closely as possible.\\n\\n\\n12.\\tGOVERNING LAW\\n\\nThis Agreement shall be governed by, and construed in accordance with, the laws of Belgium without giving effect to any choice of law principle that would require the application of the laws of a different country. The Parties agree that in the event of a dispute arising from, or in any way related to this Agreement, they should undertake good faith efforts to resolve the matter amicably. Any dispute that cannot be settled amicably by negotiation between the parties shall be exclusively referred to Li\\xc3\\xa8ge Courts, Belgium. \\n\\n\\nThe parties hereto have executed this agreement done in two originals by their duly authorised representatives on the date written below. Each party acknowledges receipt of a duly executed copy.\\n\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Real-Time Semantic Background Subtraction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "rt-sbs",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cioppaanthony",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cioppaanthony/rt-sbs/blob/master/README.MD",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Whether you are using the docker image or not, here are the versions of the libraries that are used:\n\n```\nnumpy==1.14.0\ntorch==1.0.1.post2\ntorchvision==0.2.0\ntqdm==4.19.4\nmatplotlib==3.1.2\nopencv-python-headless==4.1.2.30\nopencv-contrib-python-headless==4.1.2.30\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code for running RT-SBS on CDNet is located inside the <code>src</code> folder under the name <code>main-rtsbs.py</code>.\n\nSimply go to the <code>src</code> folder and run the following command:\n\n```\npython3 main-rtsbs.py -d /path/to/CDNet/Original/ -ds /path/to/PSPNet/\n```\nThe paths should point to the folders containing the different categories (badWeather, baseline,...).\n\nThis code will go through all the videos and print the F1 score for each video. Finally, it will print the overall F1 score over the entire dataset.\n\nYou can use the different arguments in [utils/argument_parser.py](utils/argument_parser.py) to experiment with the different parameters such as the semantic frame rate and the four thresholds of the method.\n\nIf you change the parameters accordingly (see the paper for details), you should get the following points on this graph:\n\n<p align=\"center\"><img src=\"img/performances.png\" width=\"480\"></p>\n\nOtherwise, with the default parameters, the overall F1 score should be around: 0.745\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Wed, 29 Dec 2021 10:36:19 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The following instructions will help you install the required libraries and the dataset to run the code. The code runs in <code>python 3</code> and was tested inside a nvidia-docker with the folowing base image: <code>pytorch:18.02-py3</code> which can be found at the following address: [NVIDIA TENSORFLOW IMAGE REPOSITORY](https://ngc.nvidia.com/catalog/containers/nvidia:pytorch/tags).\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "For benchmarking, we provide the videos and groud truths of CDNet and the 16-bits segmentation masks of PSPNet. Simply download these masks and unzip all categories folder inside of a specific folder for the CDNet dataset and for PSPNet.\n\n```\npip install -U pip setuptools\npip install gdown\n\ngdown https://drive.google.com/uc?id=1rSpbC70FPpoISZ4X-f4SbfCEPYPPOfWF\nunzip Original.zip\n\ngdown https://drive.google.com/uc?id=1T8-2xOsB9HqTJ5SL8JzluoJjAYQ-HEJG\nunzip PSPNet_Part1.zip\ngdown https://drive.google.com/uc?id=1ghS_nNQ9f733EcW_kln0LYZrseo4_sCf\nunzip PSPNet_Part2.zip\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}