{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2103.06877",
      "https://arxiv.org/abs/1711.05101",
      "https://arxiv.org/abs/1710.09412",
      "https://arxiv.org/abs/1708.03888",
      "https://arxiv.org/abs/1805.00932"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use Classy Vision in your work, please use the following BibTeX entry:\n\n```BibTeX\n@misc{adcock2019classy,\n  title={Classy Vision},\n  author={{Adcock}, A. and {Reis}, V. and {Singh}, M. and {Yan}, Z. and {van der Maaten}, L. and {Zhang}, K. and {Motwani}, S. and {Guerin}, J. and {Goyal}, N. and {Misra}, I. and {Gustafson}, L. and {Changhan}, C. and {Goyal}, P.},\n  howpublished = {\\url{https://github.com/facebookresearch/ClassyVision}},\n  year={2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{adcock2019classy,\n  title={Classy Vision},\n  author={{Adcock}, A. and {Reis}, V. and {Singh}, M. and {Yan}, Z. and {van der Maaten}, L. and {Zhang}, K. and {Motwani}, S. and {Guerin}, J. and {Goyal}, N. and {Misra}, I. and {Gustafson}, L. and {Changhan}, C. and {Goyal}, P.},\n  howpublished = {\\url{https://github.com/facebookresearch/ClassyVision}},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9604788714807978
      ],
      "excerpt": "  2020-11-20: Classy Vision v0.5 Released \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9111361724337846
      ],
      "excerpt": "  2020-04-29: Classy Vision v0.4 Released \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9056674988540252
      ],
      "excerpt": "  2020-03-06: Classy Vision v0.3 Released \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/facebookresearch/ClassyVision",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to Facebook AI Research Classy Vision framework (ClassyVision)\nWe want to make contributing to this project as easy and transparent as\npossible.\nPull Requests\nWe actively welcome your pull requests.\n\nFork the repo and create your branch from main.\nIf you've added code that should be tested, add tests.\nIf you've changed APIs, update the documentation.\nEnsure the test suite passes.\nMake sure your code lints (black and isort) by running scripts/formatter.sh.\nIf you haven't already, complete the Contributor License Agreement (\"CLA\").\n\nContributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\nComplete your CLA here: https://code.facebook.com/cla\nIssues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\nLicense\nBy contributing to Facebook AI Research Classy Vision framework (ClassyVision),\nyou agree that your contributions will be licensed under the LICENSE file in\nthe root directory of this source tree.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-13T22:54:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T18:38:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8013436037562719
      ],
      "excerpt": "Release Vision Transformers model implementation, with recipes(#646) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8872489774233018
      ],
      "excerpt": "Added support for sync batch norm group size (#534) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762,
        0.861433956953844
      ],
      "excerpt": "Migrated to Hydra 1.0 (#536) \nMigrated off of tensorboardX (#488) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9718252791980313
      ],
      "excerpt": "Renamed is_master to is_primary in distributed_util (#576) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8678170524418113,
        0.9908294872743934
      ],
      "excerpt": "Release EfficientNet model implementation (#475) \nAdd support to convert any PyTorch model to a ClassyModel with the ability to attach heads to it (#461) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9308474275602527
      ],
      "excerpt": "Squeeze and Excitation support for ResNe(X)t and DenseNet models (#426, #427) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "Migrated to TorchElastic v0.2.0 (#464) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9363880864474491
      ],
      "excerpt": "Move num_dataloader_workers out of ClassyTrainer (#477) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "checkpoint_folder renamed to checkpoint_load_path (#379) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8562738669493408
      ],
      "excerpt": "support for losses with trainable parameters (#394) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9939191436431768,
        0.985747871309858
      ],
      "excerpt": "Classy Vision is a new end-to-end, PyTorch-based framework for large-scale training of state-of-the-art image and video classification models. Previous computer vision (CV) libraries have been focused on providing components for users to build their own frameworks for their research. While this approach offers flexibility for researchers, in production settings it leads to duplicative efforts, and requires users to migrate research between frameworks and to relearn the minutiae of efficient distributed training and data loading. Our PyTorch-based CV framework offers a better solution for training at scale and for deploying to production. It offers several notable advantages: \nEase of use. The library features a modular, flexible design that allows anyone to train machine learning models on top of PyTorch using very simple abstractions. The system also has out-of-the-box integration with Amazon Web Services (AWS), facilitating research at scale and making it simple to move between research and production. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9550421723625278,
        0.8946706577960168,
        0.9425046190129152,
        0.9858215689403906
      ],
      "excerpt": "Demonstrated success in training at scale. We\u2019ve used it to replicate the state-of-the-art results from the paper Exploring the Limits of Weakly Supervised Pretraining. \nIntegration with PyTorch Hub. AI researchers and engineers can download and fine-tune the best publically available ImageNet models with just a few lines of code. \nElastic training. We have also added experimental integration with PyTorch Elastic, which allows distributed training jobs to adjust as available resources in the cluster changes. It also makes distributed training robust to transient hardware failures. \nClassy Vision is beta software. The project is under active development and our APIs are subject to change in future releases. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An end-to-end PyTorch framework for image and video classification",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please see our [tutorials](https://classyvision.ai/tutorials/) to learn how to get started on Classy Vision and customize your training runs. Full documentation is available [here](https://classyvision.ai/api/).\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/facebookresearch/ClassyVision/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 245,
      "date": "Wed, 29 Dec 2021 16:56:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/facebookresearch/ClassyVision/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "facebookresearch/ClassyVision",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/classy_model.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/video_classification.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/ray_aws.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/classy_dataset.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/getting_started.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/fine_tuning.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/torchscript.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/classy_loss.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/pet_aws.ipynb",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/tutorials/wsl_model_predict.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/scripts/build_docs.sh",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/scripts/formatter.sh",
      "https://raw.githubusercontent.com/facebookresearch/ClassyVision/main/scripts/publish_website.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Alternatively you can do a manual install.\n\n```bash\ngit clone https://github.com/facebookresearch/ClassyVision.git\ncd ClassyVision\npip install .\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To install Classy Vision via pip:\n```bash\npip install classy_vision\n```\n\nTo install Classy Vision via conda (only works on linux):\n```bash\nconda install -c conda-forge classy_vision\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you have an up-to-date installation of PyTorch (1.6), Python (3.6) and torchvision (0.7). If you want to use GPUs, then a CUDA installation (10.1) is also required.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8060274469440092
      ],
      "excerpt": "  2020-11-20: Classy Vision v0.5 Released \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8113148021044179
      ],
      "excerpt": "Added a CSV Hook to manually inspect model predictions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "Implement mixup train augmentation (#469) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8165777480460304
      ],
      "excerpt": "Plot histograms of model weights to Tensorboard (#432) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/facebookresearch/ClassyVision/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "CSS",
      "JavaScript",
      "Shell",
      "Batchfile",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) Meta Platforms, Inc. and affiliates.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# What's New:",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ClassyVision",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "facebookresearch",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/facebookresearch/ClassyVision/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "lauragustafson",
        "body": "### New Features\r\n\r\n- Added compatibility with pytorch version 1.9.0 (#753)\r\n- Added [RegNetZ model](https://arxiv.org/abs/2103.06877) implementation (#713)\r\n- Redefined RegNetY 64GF to better performing model (#748)\u00a0\r\n- Added support for Pytorch AMP + ShardedDDP (#667)\r\n- Added support for cutmix in `MixupTransform`\r\n- Added support for a 1x1 convolution in the fully connected head (#712)\u00a0\r\n- Add support to normalize inputs in the heads (#664)\u00a0\r\n- Added support for SiLU activation in RegNets (#711)\u00a0\r\n- Added support for FP16 gradient communication in DDP (#709)\u00a0\r\n- Added reduction mode `none` in `soft_target_cross_entropy_loss` (#714)\u00a0\r\n- Added FLOPs computation to ViT (#746)\r\n- Upstreamed parameter schedulers to [fvcore](https://github.com/facebookresearch/fvcore)\r\n",
        "dateCreated": "2021-07-09T17:26:03Z",
        "datePublished": "2021-07-19T20:08:51Z",
        "html_url": "https://github.com/facebookresearch/ClassyVision/releases/tag/v0.6.0",
        "name": "v0.6.0",
        "tag_name": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/tarball/v0.6.0",
        "url": "https://api.github.com/repos/facebookresearch/ClassyVision/releases/46435229",
        "zipball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/zipball/v0.6.0"
      },
      {
        "authorType": "User",
        "author_name": "lauragustafson",
        "body": "# New Features\r\n- Release [Vision Transformers](https://openreview.net/forum?id=YicbFdNTTy) model implementation, with [recipes](https://github.com/facebookresearch/ClassyVision/tree/master/examples/vit)(#646)\r\n- Implemented gradient clipping (#643) \r\n- Implemented gradient accumulation (#644)\r\n- Added support for [AdamW](https://arxiv.org/abs/1711.05101) (#636)\r\n- Added Precise batch norm hook (#592)\r\n- Added support for adaptive pooling in `fully_convolutional_linear_head` (#602) \r\n- Added support for sync batch norm group size (#534)\r\n- Added a CSV Hook to manually inspect model predictions\r\n- Added a ClassyModel tutorial (#485)\r\n- Migrated to [Hydra 1.0](https://github.com/facebookresearch/hydra) (#536)\r\n- Migrated off of [tensorboardX](https://github.com/lanpa/tensorboardX) (#488)\r\n\r\n# Breaking Changes\r\n- `ClassyOptimizer` API improvements\r\n    - added `OptionsView` to retrieve options from the optimizer `param_group`\r\n- Removed `ClassyModel.evaluation_mode` (#521)\r\n- Removed `ImageNetDataset`, now a subset of `ImagePathDataset` (#494)\r\n- Renamed `is_master` to `is_primary` in `distributed_util` (#576)",
        "dateCreated": "2020-11-17T02:16:46Z",
        "datePublished": "2020-11-20T16:42:56Z",
        "html_url": "https://github.com/facebookresearch/ClassyVision/releases/tag/v0.5.0",
        "name": "v0.5.0",
        "tag_name": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/tarball/v0.5.0",
        "url": "https://api.github.com/repos/facebookresearch/ClassyVision/releases/34238012",
        "zipball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/zipball/v0.5.0"
      },
      {
        "authorType": "User",
        "author_name": "mannatsingh",
        "body": "# New Features\r\n- Release [EfficientNet](https://arxiv.org/pdf/1905.11946.pdf) model implementation (#475)\r\n- Add support to convert any `PyTorch` model to a `ClassyModel` with the ability to attach heads to it (#461)\r\n  - Added a corresponding [tutorial](https://classyvision.ai/tutorials/classy_model) on `ClassyModel` and `ClassyHeads` (#485)\r\n- [Squeeze and Excitation](https://arxiv.org/pdf/1709.01507.pdf) support for `ResNe(X)t` and `DenseNet` models (#426, #427)\r\n- Made `ClassyHook`s registrable (#401) and configurable (#402) \r\n- Migrated to [`TorchElastic v0.2.0`](https://pytorch.org/elastic/master/examples.html#classy-vision) (#464)\r\n- Add `SyncBatchNorm` support (#423)\r\n- Implement [`mixup`](https://arxiv.org/abs/1710.09412) train augmentation (#469) \r\n- Support [`LARC`](https://arxiv.org/abs/1708.03888) for SGD optimizer (#408)\r\n- Added convenience wrappers for `Iterable` datasets (#455)\r\n- `Tensorboard` improvements\r\n  - Plot histograms of model weights to Tensorboard (#432)\r\n  - Reduce data logged to tensorboard (#436)\r\n- Invalid (`NaN` / `Inf`) loss detection \r\n- Revamped logging (#478)\r\n- Add `bn_weight_decay` configuration option for `ResNe(X)t` models\r\n- Support specifying `update_interval` to Parameter Schedulers (#418)\r\n\r\n# Breaking changes\r\n- `ClassificationTask` API improvement and `train_step`, `eval_step` simplification\r\n  - Removed `local_variables` from `ClassificationTask` (#411, #412, #413, #414, #416, #421)\r\n  - Move `use_gpu` from `ClassyTrainer` to `ClassificationTask` (#468)\r\n  - Move `num_dataloader_workers` out of `ClassyTrainer` (#477)\r\n- Rename `lr` to `value` in parameter schedulers (#417)\r\n",
        "dateCreated": "2020-04-21T14:17:48Z",
        "datePublished": "2020-04-29T23:00:13Z",
        "html_url": "https://github.com/facebookresearch/ClassyVision/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "tag_name": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/tarball/v0.4.0",
        "url": "https://api.github.com/repos/facebookresearch/ClassyVision/releases/26026341",
        "zipball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/zipball/v0.4.0"
      },
      {
        "authorType": "User",
        "author_name": "aadcock",
        "body": "V0.30 release notes:\r\n - checkpoint_folder renamed to checkpoint_load_path: https://github.com/facebookresearch/ClassyVision/pull/379\r\n - head support on DenseNet: https://github.com/facebookresearch/ClassyVision/pull/383\r\n - Cleaner abstraction in ClassyTask/ClassyTrainer: eval_step, on_start, on_end, \u2026\r\n - Speed metrics in TB: https://github.com/facebookresearch/ClassyVision/pull/385\r\n - test_phase_period in ClassificationTask https://github.com/facebookresearch/ClassyVision/pull/395\r\n - support for losses with trainable parameters https://github.com/facebookresearch/ClassyVision/pull/394\r\n - Added presets for some typical resNe(X)t configurations: https://github.com/facebookresearch/ClassyVision/pull/405",
        "dateCreated": "2020-03-02T16:26:51Z",
        "datePublished": "2020-03-06T21:01:24Z",
        "html_url": "https://github.com/facebookresearch/ClassyVision/releases/tag/v0.3.0",
        "name": "v0.3.0",
        "tag_name": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/tarball/v0.3.0",
        "url": "https://api.github.com/repos/facebookresearch/ClassyVision/releases/24305267",
        "zipball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/zipball/v0.3.0"
      },
      {
        "authorType": "User",
        "author_name": "vreis",
        "body": "# Classy Vision v0.2 release notes\r\nNew features:\r\n - Adam optimizer (https://github.com/facebookresearch/ClassyVision/pull/301)\r\n - R(2+1)d units (https://github.com/facebookresearch/ClassyVision/pull/322)\r\n - Mixed precision training (https://github.com/facebookresearch/ClassyVision/pull/338)\r\n - One-hot targets in meters (https://github.com/facebookresearch/ClassyVision/pull/349)\r\n\r\nThis release has been tested on the latest PyTorch (1.4) and torchvision (0.5) releases. It also includes bug fixes and other smaller features.",
        "dateCreated": "2020-01-22T19:34:32Z",
        "datePublished": "2020-01-24T21:00:59Z",
        "html_url": "https://github.com/facebookresearch/ClassyVision/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/tarball/v0.2.0",
        "url": "https://api.github.com/repos/facebookresearch/ClassyVision/releases/23115804",
        "zipball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "vreis",
        "body": "Initial release",
        "dateCreated": "2019-12-05T20:56:51Z",
        "datePublished": "2019-12-05T23:59:59Z",
        "html_url": "https://github.com/facebookresearch/ClassyVision/releases/tag/0.1.0",
        "name": "v0.1.0",
        "tag_name": "0.1.0",
        "tarball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/tarball/0.1.0",
        "url": "https://api.github.com/repos/facebookresearch/ClassyVision/releases/22014142",
        "zipball_url": "https://api.github.com/repos/facebookresearch/ClassyVision/zipball/0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you have an up-to-date installation of PyTorch (1.6), Python (3.6) and torchvision (0.7). If you want to use GPUs, then a CUDA installation (10.1) is also required.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1393,
      "date": "Wed, 29 Dec 2021 16:56:13 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Classy Vision aims to support a variety of projects to be built and open sourced on top of the core library. We provide utilities for setting up a project in a standard format with some simple generated examples to get started with. To start a new project:\n\n```bash\nclassy-project my-project\ncd my-project\n```\n\nWe even include a simple, synthetic, training example to show how to use Classy Vision:\n\n```bash\n ./classy_train.py --config configs/template_config.json\n ```\n\nVoila! A few seconds later your first training run using our classification task should be done. Check out the results in the output folder:\n```bash\nls output_<timestamp>/checkpoints/\ncheckpoint.torch model_phase-0_end.torch model_phase-1_end.torch model_phase-2_end.torch model_phase-3_end.torch\n```\n\n`checkpoint.torch` is the latest model (in this case, same as `model_phase-3_end.torch`), a checkpoint is saved at the end of each phase.\n\nFor more details / tutorials see the documentation section below.\n\n",
      "technique": "Header extraction"
    }
  ]
}