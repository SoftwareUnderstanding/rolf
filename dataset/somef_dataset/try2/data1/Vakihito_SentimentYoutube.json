{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.10703\n- https://arxiv.org/pdf/1803.09820.pdf\n- https://arxiv.org/abs/1409.1556",
      "https://arxiv.org/abs/1409.1556"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- https://github.com/amaiya/ktrain\n- https://arxiv.org/abs/2004.10703\n- https://arxiv.org/pdf/1803.09820.pdf\n- https://arxiv.org/abs/1409.1556\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8648185160561668
      ],
      "excerpt": "show_image_url - Shows a image given a url \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Vakihito/SentimentYoutube",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-16T16:09:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-30T15:51:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9519422061967128,
        0.9951927087866337,
        0.8434809022153862
      ],
      "excerpt": "First release of SentimentYoutube ! Version 0.0.1 cames with a simple way to analyze sentiment through out the video, it's not working properly, but defines the start of project by analysing both the frame and the caption of the video. \nSentimentYoutube is library that makes an easy way to evaluate the sentiment in a frame, by using TensorFlow Keras to judge the feeling in a frame as positive or negative. In order to do this, we analyze the frames of the video, the description of the frame generated by the pythia library and also the caption of the video. \nThis library uses Ktrain in order to train models and load models, and also uses pythia to describe a frame. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9040437289017664
      ],
      "excerpt": "PythiaDemon() - The main utility of this class is to describe a given image, this class is called in Utils to make the process easier.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8976736615838287
      ],
      "excerpt": "FrameExtractor() - The main utility of this library, this is the class that allows to analise a given video via it's ID. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8586392697547738,
        0.9087482209871495
      ],
      "excerpt": "sum_the_positivity_of_vid() - This funcion returns the posivitity of the video \nshow_descriptions_frames_with_caption() - This function returns the description of each frame and also it's caption \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009919178347739,
        0.9479737147922682,
        0.9590695209255368
      ],
      "excerpt": "extract_obj.create_frame_description_file() - This function creates a file with the description of each frame.  \nextract_obj.plot_caption_sentiment_during_time() - This function plots the feeling of the captions, frames and frames descriptions over time. \nextract_obj.plot_caption_sentiment_during_time() - This function plots the feeling of the captions, frames and frames descriptions over time in a line. And also the weighted average of the 3 parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8606930701511197
      ],
      "excerpt": "This module has bunch of usefull functions that allow a easier use of the library \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8016020343509922
      ],
      "excerpt": "predic_text() - This function receives a path to a images and returns the positivity of the sentence using a pre-trained model of the MDB dataset \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Vakihito/SentimentYoutube/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 11:32:07 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Vakihito/SentimentYoutube/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vakihito/SentimentYoutube",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Vakihito/SentimentYoutube/main/exemple/demo%20TCC.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Vakihito/SentimentYoutube/main/install.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This whole project was made in Google Colab, so Please use [Google Colab](https://colab.research.google.com/notebooks/intro.ipynb) nootebook in order to make this operantion work, other wise you can check our install.sh an change the paths to your liking, but I wouldn't suggest doing so...\n- First of all make sure that you are using *GPU* enviroment.\n- Than open the file content : <code> cd /content </code>\n- Clone the git repository: <code> !git clone https://github.com/Vakihito/SentimentYoutube.git </code> \n- Open the file SentimentYoutube : <code> cd SentimentYoutube/ </code> \n- Install packages requirements: <code> !pip3 install -r requirements.txt </code> \n- Install enviroment requirements: <code> !./install.sh </code> \n- Open the enviroment file : <code> cd /content/vqa-maskrcnn-benchmark </code>\n- Thats all, now you are good to go !!!\n\n---\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8469762504012884
      ],
      "excerpt": "<img src=\"https://github.com/Vakihito/SentimentYoutube/blob/main/darkLogo.png?raw=true\" width=\"100\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924976426181745
      ],
      "excerpt": "'Utils' : \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Vakihito/SentimentYoutube/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Victor Akihito Kamada Tomita\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "## [Overview](#overview) | [Tutorials](#tutorials) | [Examples](#examples)  | [Installation](#installation) | [References](#references)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SentimentYoutube",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vakihito",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Vakihito/SentimentYoutube/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 11:32:07 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please see the following tutorial notebooks for a guide on how to use **SentimentYoutube** on your projects:\n    \n- **Tutorial 1**: [Introduction](https://colab.research.google.com/drive/1JEmHlvQ2CFP6Zwdoi1TQyu_Fjzb7J2kW?usp=sharing)\n\n---\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Please see the following examples notebooks for a guide on how to use **SentimentYoutube** on your projects:\n    \n- **How to use** : [Introduction](https://colab.research.google.com/drive/1JEmHlvQ2CFP6Zwdoi1TQyu_Fjzb7J2kW?usp=sharing)\n- **Using Explain** : [Explain Notebook](https://colab.research.google.com/drive/1EWV1Qss2IxqUReJe1GO4N0AyUviZGCeZ?usp=sharing)\n- **Example of the application** : [Video](https://studio.youtube.com/video/eWX21QAbqNE/edit)\n\n---\n\n",
      "technique": "Header extraction"
    }
  ]
}