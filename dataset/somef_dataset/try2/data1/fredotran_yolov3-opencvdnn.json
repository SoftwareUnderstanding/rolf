{
  "citation": [
    {
      "confidence": [
        0.9994274475171526
      ],
      "excerpt": "YOLOv3: An Incremental Improvement, Redmon, Joseph and Farhadi, Ali, arXiv, 2018 : http://arxiv.org/abs/1804.02767 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fredotran/yolov3-opencvdnn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-06T09:35:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-15T12:29:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.959938840343999,
        0.9178107351116425
      ],
      "excerpt": "You'll find all the instructions in the three different notebooks which are basically the same, the only changes occur on the detection device or type of input frames. There are three different object detections tasks I would like to highlight there, for objects detections in images, videos and webcam (cameras). This code was inspired by some coders on github and Kaggle, they allow me to start my first project of Computer Vision using OpenCV DNN and YoloV3.  \nAll the functions are stored in these notebooks and ready to work : \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8245472306885843,
        0.87551328998022,
        0.8332186588277554
      ],
      "excerpt": "Notebook for videos \nNotebook for webcam/cameras \nI based this repository on the YOLOv3 algorithm : https://pjreddie.com/darknet/yolo/ . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9324417353723331,
        0.8997851695957644
      ],
      "excerpt": "This code is not the most complicated and is certainly not the most detailed one but, it was the easiest one for me to start to learn about using OpenCV DNN and YOLOv3 for object detections and I think it might be useful for beginners to start there. \nIn the near future, I'll try to upgrade the code for custom detections and combined my findings in this : https://github.com/fredotran/traffic-sign-recognition with OpenCV DNN and YOLOv3 for traffic signs detections. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository is about my first code for object detection using OpenCV DNN module and YOLOv3 algorithm.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fredotran/yolov3-opencvdnn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 28 Dec 2021 11:34:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fredotran/yolov3-opencvdnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fredotran/yolov3-opencvdnn",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fredotran/yolov3-opencvdnn/main/yolov3_on_images-tests.ipynb",
      "https://raw.githubusercontent.com/fredotran/yolov3-opencvdnn/main/yolov3_on_videos-tests.ipynb",
      "https://raw.githubusercontent.com/fredotran/yolov3-opencvdnn/main/yolov3_on_camera-tests.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fredotran/yolov3-opencvdnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Using OpenCV DNN combined with YoloV3 and YoloV3-tiny for simple object detections tasks.",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "yolov3-opencvdnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fredotran",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fredotran/yolov3-opencvdnn/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [Python3 or higher](https://www.python.org/downloads/)\n* [OpenCV 4.0 or higher](https://opencv.org/releases/) \n* [CUDA 11.0 or higher](https://developer.nvidia.com/cuda-toolkit-archive) \n* [cuDNN 7.0 or higher](https://developer.nvidia.com/rdp/cudnn-archive) \n* [GPU with CudaCompiler](https://en.wikipedia.org/wiki/CUDA#GPUs_supported)\n* Windows OS (I haven't tried on other OS)\n* Lot of patience (but worth it)\n\nYou can watch tutorial steps to download and build [OpenCV with GPU back-end](https://medium.com/analytics-vidhya/build-opencv-from-source-with-cuda-for-gpu-access-on-windows-5cd0ce2b9b37), as we will need [OpenCV DNN](https://docs.opencv.org/master/d2/d58/tutorial_table_of_content_dnn.html) module for this work.\n\n---\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 11:34:39 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "yolov3-algorithm",
      "opencv-dnn",
      "detections",
      "deep-learning",
      "object-detection",
      "python"
    ],
    "technique": "GitHub API"
  }
}