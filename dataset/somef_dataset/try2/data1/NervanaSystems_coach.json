{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06581",
      "https://arxiv.org/abs/1703.01310",
      "https://arxiv.org/abs/1512.04860",
      "https://arxiv.org/abs/1707.06887",
      "https://arxiv.org/abs/1602.01783",
      "https://arxiv.org/abs/1703.01988",
      "https://arxiv.org/abs/1603.00748.pdf",
      "https://arxiv.org/abs/1710.02298",
      "https://arxiv.org/abs/1602.01783",
      "https://arxiv.org/abs/1509.02971",
      "https://arxiv.org/abs/1506.02438",
      "https://arxiv.org/abs/1611.01224",
      "https://arxiv.org/abs/1801.01290",
      "https://arxiv.org/abs/1611.01779",
      "https://arxiv.org/abs/1710.02410",
      "https://arxiv.org/abs/1712.00948.pdf",
      "https://arxiv.org/abs/1707.01495.pdf",
      "https://arxiv.org/abs/1511.05952",
      "https://arxiv.org/abs/1602.04621",
      "https://arxiv.org/abs/1706.01502",
      "https://arxiv.org/abs/1706.10295"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you used Coach for your work, please use the following citation:\n\n```\n@misc{caspi_itai_2017_1134899,\n  author       = {Caspi, Itai and\n                  Leibovich, Gal and\n                  Novik, Gal and\n                  Endrawis, Shadi},\n  title        = {Reinforcement Learning Coach},\n  month        = dec,\n  year         = 2017,\n  doi          = {10.5281/zenodo.1134899},\n  url          = {https://doi.org/10.5281/zenodo.1134899}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{caspi_itai_2017_1134899,\n  author       = {Caspi, Itai and\n                  Leibovich, Gal and\n                  Novik, Gal and\n                  Endrawis, Shadi},\n  title        = {Reinforcement Learning Coach},\n  month        = dec,\n  year         = 2017,\n  doi          = {10.5281/zenodo.1134899},\n  url          = {https://doi.org/10.5281/zenodo.1134899}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9402107675288106,
        0.8511535834563826,
        0.8955886365383559
      ],
      "excerpt": "Release 0.10.0 \nRelease 0.11.0 \nRelease 0.12.0  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9232150817355542
      ],
      "excerpt": "N-Step Q Learning | Multi Worker Single Node  (code) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184713253685346
      ],
      "excerpt": "Normalized Advantage Functions (NAF) | Multi Worker Single Node  (code) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9474654336971647,
        0.8769186804620663,
        0.9072595767468146
      ],
      "excerpt": "Policy Gradients (PG) | Multi Worker Single Node  (code) \nAsynchronous Advantage Actor-Critic (A3C) | Multi Worker Single Node  (code) \nDeep Deterministic Policy Gradients (DDPG) | Multi Worker Single Node  (code) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9194409109232881
      ],
      "excerpt": "Clipped Proximal Policy Optimization (CPPO) | Multi Worker Single Node  (code) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810604920878203
      ],
      "excerpt": "Direct Future Prediction (DFP) | Multi Worker Single Node  (code) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IntelLabs/coach",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We'd be happy to get any questions or contributions through GitHub issues and PRs.\n\nPlease make sure to take a look [here](CONTRIBUTING.md) before filing an issue or proposing a PR.\n\nThe Coach development team can also be contacted over [email](mailto:coach@intel.com)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to Coach\nThe following is a set of guidelines for contributing to Coach.\nWe'd like Coach to be useful to students, data scientists and researchers, and the purpose of these guidelines is to help maintain a level of quality and reliability for the Coach users community. \nThanks for taking the time to contribute!\nProposing a PR\nIf you would like to make code changes to Coach, whether adding new functionality or fixing a bug, please make sure to follow this list:\n1. Create a new branch for your work (give it a short but meaningful name related to the functionality or bug you are working on), then add commits as necessary.  Once its in a reviewable state open up a pull request\n1. Add unit tests to any new component, or update existing tests for modified component\u2019s functionality\n1. Make sure regression tests are passing. See the Testing section for more details on the Coach testing methodology \n1. Update documentation to reflect any API changes, or added algorithm or environment. See the Documentation section for more details on Coach documentation. \n1. Adding an algorithm? \n    1. Please follow the guidelines here\n    1. Add a benchmark showing the results match those of the relevant research paper\n    1. Update the algorithms diagram (https://github.com/IntelLabs/coach/blob/master/docs_raw/source/diagrams.xml), export as png and update the README image (https://github.com/IntelLabs/coach/blob/master/img/algorithms.png) \n1. Adding an environment? \n    1. Please follow the guidelines here (https://intellabs.github.io/coach/contributing/add_env.html)\n    1. (Nice to have) Create a preset of an agent solving that environment\n1. Ensure your branch is up-to-date with latest master, and get your PR reviewed and merged.  Generally a reviewer will be assigned once one of the project maintainers notices a new PR (if it has been a couple of days and there hasn't been progress feel free to add a new comment or email us).  There may be some back and forth discussion or modifications required, but if a reviewer has approved your PR they will then squash your set of commits and merge it into the master branch.\nFiling an Issue\nBefore filing an issue, please make sure you:\n1. Search through the issues list to make sure a similar issue does not exist\n1. Specify the following details:\n    1. Setup - operating system, versions of installed environments or packages (if relevant), hardware details (if relevant)\n    1. Use case description - command line, parameters\nWe prioritize issues to P1/P2/P3 based on our understanding of their impact on the Coach users community. It would be helpful if you describe the exact impact of the issue if not fixed.\n\nTesting\nCoach uses the pytest framework for its tests. All tests are located in the tests folder, and are divided to four categories - Unit, Integration, Golden and Trace tests.\nPlease refer to the tests README for the full details of the Coach testing methodology.\nBefore proposing any code changes to Coach please make sure any new functionality is tested, and that regression tests are passing. \nAll pull request commits are automatically run through our unit and integration tests via our CI suite, the results of which are visible on the github PR page as well as the CircleCI Coach test results page.  Merges to the master branch are blocked until these tests pass.  Further end-to-end tests can optionally be run against these commits and are kicked off from the PR page by the assigned reviewer.\nDocumentation\nMost of Coach\u2019s documentation is located on the Coach GitHub Pages. The pages contain information on Coach\u2019s usage and features, design and components, and on how to add new agents or environments. \nTheir content is located in the docs folder, which is built from the raw files under the docs_raw folder. \nWhen making documentation changes, please modify the files in the docs_raw folder, and refer to the README for instructions on how to build the docs folder. \nBoth the docs_raw and docs folders need to be committed when documentation changes are made.  \nReleases\nCoach is released as two pypi packages:\nrl-coach - contains the full tensorflow-based installation. Note that most environments require additional packages to be installed. We point to the relevant installation instructions in the README.\nrl-coach-slim - same as rl-coach, except for the deep learning framework (so user can use an already installed Tensorflow or MxNet framework, or explicitly state which one to install), and Kubernetes (for distributed Coach). \nEach pypi package release has a GitHub release and tag with the same version number. The numbers are of the X.Y.Z format, where\nX - currently one, will be incremented on major API changes \nY - major releases with new features\nZ - maintenance releases with bug fixes\nContact\nYou\u2019re welcome to contact the Intel Coach team either by filing a GitHub issue, or at coach@intel.com",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-10-01T19:27:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T19:27:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.972152948013003,
        0.9818769171081152,
        0.8670822808014254,
        0.8309390869899484
      ],
      "excerpt": "Coach is a python reinforcement learning framework containing implementation of many state-of-the-art algorithms. \nIt exposes a set of easy-to-use APIs for experimenting with new RL algorithms, and allows simple integration of new environments to solve.  \nBasic RL components (algorithms, environments, neural network architectures, exploration policies, ...) are well decoupled, so that extending and reusing existing components is fairly painless. \nTraining an agent to solve an environment is as easy as running: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9904176475974772,
        0.9570520669884125,
        0.8225351176750656,
        0.9573575529506199
      ],
      "excerpt": "One of the main challenges when building a research project, or a solution based on a published algorithm, is getting a concrete and reliable baseline that reproduces the algorithm's results, as reported by its authors. To address this problem, we are releasing a set of benchmarks that shows Coach reliably reproduces many state of the art algorithm results. \nAs of release 0.11.0, Coach supports horizontal scaling for training RL agents on multiple nodes. In release 0.11.0 this was tested on the ClippedPPO and DQN agents. \nFor usage instructions please refer to the documentation here. \nTraining and evaluating an agent from a dataset of experience, where no simulator is available, is supported in Coach.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9524617232809042
      ],
      "excerpt": "Follow the instructions described in the ViZDoom repository - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9524617232809042
      ],
      "excerpt": "Follow the instructions described in the roboschool repository -  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9524617232809042
      ],
      "excerpt": "Follow the instructions described in the GymExtensions repository - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8868956552195557
      ],
      "excerpt": "A simple CARLA settings file (CarlaSettings.ini) is supplied with Coach, and is located in the environments directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9524617232809042
      ],
      "excerpt": "Follow the instructions described in the PySC2 repository -  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9530593382596522
      ],
      "excerpt": "Follow the instructions described in the DeepMind Control Suite repository -  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.873303436821174
      ],
      "excerpt": "Follow the instructions described in the robosuite documentation (see note on MuJoCo version below). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925875798337685
      ],
      "excerpt": "Please note that all Gym-Based MuJoCo presets in Coach (rl_coach/presets/Mujoco_*.py) have been validated only with MuJoCo 1.5 (including the reported benchmark results). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Reinforcement Learning Coach by Intel AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[Jupyter notebooks demonstrating how to run Coach from command line or as a library, implement an algorithm, or integrate an environment](https://github.com/IntelLabs/coach/tree/master/tutorials).\n\n[Framework documentation, algorithm description and instructions on how to contribute a new agent/environment](https://intellabs.github.io/coach/).\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/NervanaSystems/coach/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 418,
      "date": "Tue, 28 Dec 2021 02:01:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/IntelLabs/coach/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "IntelLabs/coach",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/NervanaSystems/coach/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/tutorials/4.%20Batch%20Reinforcement%20Learning.ipynb",
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/tutorials/1.%20Implementing%20an%20Algorithm.ipynb",
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/tutorials/5.%20Goal-Based%20Data%20Collection.ipynb",
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/tutorials/0.%20Quick%20Start%20Guide.ipynb",
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/tutorials/3.%20Implementing%20a%20Hierarchical%20RL%20Graph.ipynb",
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/tutorials/2.%20Adding%20an%20Environment.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/NervanaSystems/coach/master/docs_raw/build_docs.sh"
    ],
    "technique": "File Exploration"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://doi.org/10.5281/zenodo.1134898",
      "technique": "Regular expression"
    }
  ],
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Note: Coach has only been tested on Ubuntu 16.04 LTS, and with Python 3.5.\n\nFor some information on installing on Ubuntu 17.10 with Python 3.6.3, please refer to the following issue: https://github.com/IntelLabs/coach/issues/54\n\nIn order to install coach, there are a few prerequisites required. This will setup all the basics needed to get the user going with running Coach on top of [OpenAI Gym](https://github.com/openai/gym) environments:\n\n```\n#: General\nsudo -E apt-get install python3-pip cmake zlib1g-dev python3-tk python-opencv -y\n\n#: Boost libraries\nsudo -E apt-get install libboost-all-dev -y\n\n#: Scipy requirements\nsudo -E apt-get install libblas-dev liblapack-dev libatlas-base-dev gfortran -y\n\n#: PyGame\nsudo -E apt-get install libsdl-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev\nlibsmpeg-dev libportmidi-dev libavformat-dev libswscale-dev -y\n\n#: Dashboard\nsudo -E apt-get install dpkg-dev build-essential python3.5-dev libjpeg-dev  libtiff-dev libsdl1.2-dev libnotify-dev \nfreeglut3 freeglut3-dev libsm-dev libgtk2.0-dev libgtk-3-dev libwebkitgtk-dev libgtk-3-dev libwebkitgtk-3.0-dev\nlibgstreamer-plugins-base1.0-dev -y\n\n#: Gym\nsudo -E apt-get install libav-tools libsdl2-dev swig cmake -y\n```\n\nWe recommend installing coach in a virtualenv:\n\n```\nsudo -E pip3 install virtualenv\nvirtualenv -p python3 coach_env\n. coach_env/bin/activate\n```\n\nFinally, install coach using pip:\n```\npip3 install rl_coach\n```\n\nOr alternatively, for a development environment, install coach from the cloned repository:\n```\ncd coach\npip3 install -e .\n```\n\nIf a GPU is present, Coach's pip package will install tensorflow-gpu, by default. If a GPU is not present, an [Intel-Optimized TensorFlow](https://software.intel.com/en-us/articles/intel-optimized-tensorflow-wheel-now-available), will be installed. \n\nIn addition to OpenAI Gym, several other environments were tested and are supported. Please follow the instructions in the Supported Environments section below in order to install more environments.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8338300138503654
      ],
      "excerpt": "Release 0.11.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8185826646132808
      ],
      "excerpt": "Release 1.0.0 (current release) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9769371898660488
      ],
      "excerpt": "Note on MuJoCo version \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9764928378514066
      ],
      "excerpt": "Installed by default by Coach's installer (see note on MuJoCo version below). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9433923717197559
      ],
      "excerpt": "Additionally, Coach assumes that the environment variable VIZDOOM_ROOT points to the ViZDoom installation directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.97177257705633
      ],
      "excerpt": "Additionally, add the installation directory to the PYTHONPATH environment variable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9275802330681071
      ],
      "excerpt": "Follow the instructions described in the Quick Start Guide (basically just - 'pip install pybullet') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8064674221319116,
        0.9847364410662242,
        0.9935459261120722,
        0.999833231880651,
        0.9705893201598722
      ],
      "excerpt": "Download release 0.8.4 from the CARLA repository - \nInstall the python client and dependencies from the release tarball: \npip3 install -r PythonClient/requirements.txt \npip3 install PythonClient \nCreate a new CARLA_ROOT environment variable pointing to CARLA's installation directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8518242412186061,
        0.9475792752055362,
        0.8267305242154276
      ],
      "excerpt": "Robosuite:<a name=\"robosuite\"></a> \nNote: To use Robosuite-based environments, please install Coach from the latest cloned repository. It is not yet available as part of the rl_coach package on PyPI. \nFollow the instructions described in the robosuite documentation (see note on MuJoCo version below). \nOpenAI Gym supports MuJoCo only up to version 1.5 (and corresponding mujoco-py version 1.50.x.x). The Robosuite simulation framework, however, requires MuJoCo version 2.0 (and corresponding mujoco-py version 2.0.2.9, as of robosuite version 1.2). Therefore, if you wish to run both Gym-based MuJoCo environments and Robosuite environments, it's recommended to have a separate virtual environment for each. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.833301766911452
      ],
      "excerpt": "<p align=\"center\"><img src=\"img/coach_logo.png\" alt=\"Coach Logo\" width=\"200\"/></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361944903479858
      ],
      "excerpt": "<img src=\"img/fetch_slide.gif\" alt=\"Fetch Slide\"/> <img src=\"img/pendulum.gif\" alt=\"Pendulum\"/> <img src=\"img/starcraft.gif\" width = \"281\" height =\"200\" alt=\"Starcraft\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8361944903479858
      ],
      "excerpt": "<img src=\"img/doom_deathmatch.gif\" alt=\"Doom Deathmatch\"/> <img src=\"img/carla.gif\" alt=\"CARLA\"/> <img src=\"img/montezuma.gif\" alt=\"MontezumaRevenge\" width = \"164\" height =\"200\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248719874154288
      ],
      "excerpt": "<img src=\"img/doom_health.gif\" alt=\"Doom Health Gathering\"/> <img src=\"img/minitaur.gif\" alt=\"PyBullet Minitaur\" width = \"249\" height =\"200\"/> <img src=\"img/ant.gif\" alt=\"Gym Extensions Ant\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.897176225947782
      ],
      "excerpt": "Basic Usage \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "Robosuite:<a name=\"robosuite\"></a> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/IntelLabs/coach/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "CSS",
      "Makefile",
      "Dockerfile",
      "Batchfile",
      "Shell",
      "HTML"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Coach",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "coach",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "IntelLabs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IntelLabs/coach/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "galnov",
        "body": "TD3\r\nNew APIs for Coach usage as a library \r\nUpdated Getting Started tutorial\r\nBatch RL tutorial",
        "dateCreated": "2019-07-24T13:10:58Z",
        "datePublished": "2019-07-24T13:14:28Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v1.0.0",
        "name": "Release 1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v1.0.0",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/18833119",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v1.0.0"
      },
      {
        "authorType": "User",
        "author_name": "galnov",
        "body": "Fixes for breaking API changes (OpenAI Gym,  Scipy)\r\nOPE: Weighted Importance Sampling\r\nCreating a dataset using an agent\r\nPrinting input size as part of network summary",
        "dateCreated": "2019-05-30T07:13:36Z",
        "datePublished": "2019-05-30T08:36:21Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.12.1",
        "name": "Release 0.12.1",
        "tag_name": "v0.12.1",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.12.1",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/17675306",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.12.1"
      },
      {
        "authorType": "User",
        "author_name": "shadiendrawis",
        "body": "ACER \r\nSoft Actor-Critic\r\nBCQ\r\nBatch RL \r\nOff-policy evaluation (estimators: DM, DR, Sequential DR, IPS)",
        "dateCreated": "2019-05-01T15:37:49Z",
        "datePublished": "2019-05-01T15:58:21Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.12.0",
        "name": "Release 0.12.0",
        "tag_name": "v0.12.0",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.12.0",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/17090902",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.12.0"
      },
      {
        "authorType": "User",
        "author_name": "shadiendrawis",
        "body": "Intel Tensorflow fix.",
        "dateCreated": "2019-05-01T16:05:44Z",
        "datePublished": "2019-05-01T15:54:25Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.11.2",
        "name": "Release 0.11.2",
        "tag_name": "v0.11.2",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.11.2",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/17090815",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.11.2"
      },
      {
        "authorType": "User",
        "author_name": "galnov",
        "body": "Roll out worker memory leak fix \r\nwxPython dependency removal",
        "dateCreated": "2019-01-23T18:49:37Z",
        "datePublished": "2019-01-24T19:00:56Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.11.1",
        "name": "Release 0.11.1",
        "tag_name": "v0.11.1",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.11.1",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/15166745",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.11.1"
      },
      {
        "authorType": "User",
        "author_name": "galnov",
        "body": "Horizontal scaling\r\nMxNet support\r\nONNX export\r\nNew documentation",
        "dateCreated": "2018-11-27T23:16:01Z",
        "datePublished": "2018-11-27T23:46:57Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.11.0",
        "name": "Release 0.11.0",
        "tag_name": "v0.11.0",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.11.0",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/14220221",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.11.0"
      },
      {
        "authorType": "User",
        "author_name": "gal-leibovich",
        "body": "A complete redesign - non-backward compatible. Enabling multi-agent support. \r\n\r\nNew features -\r\n* PIP package\r\n* Benchmarks\r\n* Hierarchical Reinforcement Learning (demonstrated by Hierarchical Actor-Critic)\r\n* Tutorials\r\n* Shared memory (e.g. Replay Buffer) between workers\r\n* Tests (unit-tests, reward-based tests, trace-based tests)\r\n* Using Coach as a library (see example [here](https://github.com/NervanaSystems/distiller/blob/master/examples/automated_deep_compression/ADC.py#L57))\r\n\r\nNew Environments -\r\n* Toy Environments (Exploration Chain, BitFlip)\r\n* DeepMind PySC2 support (Starcraft 2)\r\n* DeepMind Control Suite\r\n\r\nNew Algorithms - \r\n* Hindsight Experience Replay\r\n* Prioritized Experience Replay\r\n* Hierarchical Actor-Critic\r\n* UCB with Q-Ensembles\r\n\r\n",
        "dateCreated": "2018-08-26T09:09:46Z",
        "datePublished": "2018-08-26T12:25:11Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.10.0",
        "name": "Release 0.10.0",
        "tag_name": "v0.10.0",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.10.0",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/12578892",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.10.0"
      },
      {
        "authorType": "User",
        "author_name": "itaicaspi-intel",
        "body": "New features -\r\n* CARLA 0.7 simulator integration\r\n* Human control of the game play\r\n* Recording of human game play and storing / loading the replay buffer\r\n* Behavioral cloning agent and presets\r\n* Golden tests for several presets\r\n* Selecting between deep / shallow image embedders\r\n* Rendering through pygame (with some boost in performance)\r\n\r\nAPI changes -\r\n* Improved environment wrapper API\r\n* Added an evaluate flag to allow convenient evaluation of existing checkpoints\r\n* Improve frameskip definition in Gym\r\n\r\nBug fixes -\r\n* Fixed loading of checkpoints for agents with more than one network\r\n* Fixed the N Step Q learning agent python3 compatibility",
        "dateCreated": "2017-12-19T17:27:16Z",
        "datePublished": "2017-12-19T17:29:38Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.9.0",
        "name": "Release 0.9.0",
        "tag_name": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.9.0",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/8966679",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.9.0"
      },
      {
        "authorType": "User",
        "author_name": "galnov",
        "body": "Initial public release",
        "dateCreated": "2017-10-19T10:38:58Z",
        "datePublished": "2017-10-19T10:40:45Z",
        "html_url": "https://github.com/IntelLabs/coach/releases/tag/v0.8.0",
        "name": "v0.8.0",
        "tag_name": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/IntelLabs/coach/tarball/v0.8.0",
        "url": "https://api.github.com/repos/IntelLabs/coach/releases/8179297",
        "zipball_url": "https://api.github.com/repos/IntelLabs/coach/zipball/v0.8.0"
      }
    ],
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To allow reproducing results in Coach, we defined a mechanism called _preset_. \nThere are several available presets under the `presets` directory.\nTo list all the available presets use the `-l` flag.\n\nTo run a preset, use:\n\n```bash\ncoach -r -p <preset_name>\n```\n\nFor example:\n* CartPole environment using Policy Gradients (PG):\n\n  ```bash\n  coach -r -p CartPole_PG\n  ```\n  \n* Basic level of Doom using Dueling network and Double DQN (DDQN) algorithm:\n\n  ```bash\n  coach -r -p Doom_Basic_Dueling_DDQN\n  ```\n\nSome presets apply to a group of environment levels, like the entire Atari or Mujoco suites for example.\nTo use these presets, the requeseted level should be defined using the `-lvl` flag.\n\nFor example:\n\n\n* Pong using the Neural Episodic Control (NEC) algorithm:\n\n  ```bash\n  coach -r -p Atari_NEC -lvl pong\n  ```\n\nThere are several types of agents that can benefit from running them in a distributed fashion with multiple workers in parallel. Each worker interacts with its own copy of the environment but updates a shared network, which improves the data collection speed and the stability of the learning process.\nTo specify the number of workers to run, use the `-n` flag.\n\nFor example:\n* Breakout using Asynchronous Advantage Actor-Critic (A3C) with 8 workers:\n\n  ```bash\n  coach -r -p Atari_A3C -lvl breakout -n 8\n  ```\n\n\nIt is easy to create new presets for different levels or environments by following the same pattern as in presets.py\n\nMore usage examples can be found [here](https://github.com/IntelLabs/coach/blob/master/tutorials/0.%20Quick%20Start%20Guide.ipynb).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Training an agent to solve an environment can be tricky, at times. \n\nIn order to debug the training process, Coach outputs several signals, per trained algorithm, in order to track algorithmic performance. \n\nWhile Coach trains an agent, a csv file containing the relevant training signals will be saved to the 'experiments' directory. Coach's dashboard can then be used to dynamically visualize the training signals, and track algorithmic behavior. \n\nTo use it, run:\n\n```bash\ndashboard\n```\n\n\n\n<img src=\"img/dashboard.gif\" alt=\"Coach Design\" style=\"width: 800px;\"/>\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2084,
      "date": "Tue, 28 Dec 2021 02:01:18 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "coach",
      "openai-gym",
      "reinforcement-learning",
      "tensorflow",
      "rl",
      "carla",
      "imitation-learning",
      "mujoco",
      "roboschool",
      "deep-learning",
      "hierarchical-reinforcement-learning",
      "starcraft",
      "starcraft2",
      "starcraft2-ai",
      "distributed-reinforcement-learning",
      "mxnet",
      "onnx"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[Jupyter notebooks demonstrating how to run Coach from command line or as a library, implement an algorithm, or integrate an environment](https://github.com/IntelLabs/coach/tree/master/tutorials).\n\n[Framework documentation, algorithm description and instructions on how to contribute a new agent/environment](https://intellabs.github.io/coach/).\n\n",
      "technique": "Header extraction"
    }
  ]
}