{
  "citation": [
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "dX1 = sum(self.dX, axis=0)  #padded dx, dim(l,m',n') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "https://arxiv.org/pdf/1412.6980.pdf       \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/navdeepkumar12/Tic",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-11T19:40:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-30T05:18:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8205001569185318
      ],
      "excerpt": "     #Backprop for convolution( 3d input 4d weights) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8017923278412392
      ],
      "excerpt": "Y = [[correlate(x2,w2,mode='valid') for x2,w2 in zip(X, w1)] for w1 in w]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8807722265046252,
        0.8017923278412392
      ],
      "excerpt": "dX = [[convolve(dy,w1,mode='full') for w1 in w] for dy,w in zip(dy,w)]) #padded dX, dim(k,l,m',n') \ndw = [[correlate(X, dy, mode='valid') for X in X] for dy in dy]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9497020015524742
      ],
      "excerpt": "See original paper ADAM: A METHOD  FOR STOCHASTIC OPTIMIZATION for excellent reference. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/navdeepkumar12/Tic/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 22:41:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/navdeepkumar12/Tic/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "navdeepkumar12/Tic",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/navdeepkumar12/Tic/master/state-action.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9482923017184635
      ],
      "excerpt": "     You must have opencv installed for graphics to run. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956519168178657
      ],
      "excerpt": "X = pad(x, required for mode) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8585532004115197
      ],
      "excerpt": "X = pad(x, as required for mode), \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.946594363051976,
        0.8038392323948573
      ],
      "excerpt": "To Train:-  Run main.py.  It will output Q<index> file which contains Q value function, and other plots and file. One set of output file indexed with 129 is provided. \nTo change parameters for the training :- edit parameters values in pm.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/navdeepkumar12/Tic/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TicTacToe",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tic",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "navdeepkumar12",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/navdeepkumar12/Tic/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 22:41:25 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "nn.py has neural network library, like linear, relu, softmax, convolution, cre, mse forward and backpropagation.\nFor theoritical proofs see nn.pdf.\n          ",
      "technique": "Header extraction"
    }
  ]
}