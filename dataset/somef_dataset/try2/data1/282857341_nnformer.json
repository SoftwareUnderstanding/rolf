{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.03201"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9910664007414072
      ],
      "excerpt": "Code for paper \"nnFormer: Interleaved Transformer for Volumetric Segmentation \". Please read our preprint at the following link: paper_address. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/282857341/nnFormer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-24T07:07:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T17:40:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- ACDC_dice:\nCalculate dice of ACDC dataset\n\n- Synapse_dice_and_hd:\nCalulate dice of the Synapse dataset\n\n- dataset_json:\nAbout how to divide the training and test set\n\n- inference:\nThe entry program of the infernece.\n\n- network_architecture:\nThe models are stored here.\n\n- run:\nThe entry program of the training.\n\n- training:\nThe trainers are stored here, the training of the network is conducted by the trainer.\n\n---\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9501166423247832
      ],
      "excerpt": "Parts of codes are borrowed from nn-UNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8749307129416121
      ],
      "excerpt": "And the division of the dataset can be seen in the files in the ./dataset_json/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8872457871250655
      ],
      "excerpt": "While we provide code to load data for training a deep-learning model, you will first need to download images from the above repositories. Regarding the format setting and related preprocessing of the dataset, we operate based on nnFormer, so I won\u2019t go into details here. You can see nnUNet for specific operations.  \n",
      "technique": "Supervised classification"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- ACDC_dice:\nCalculate dice of ACDC dataset\n\n- Synapse_dice_and_hd:\nCalulate dice of the Synapse dataset\n\n- dataset_json:\nAbout how to divide the training and test set\n\n- inference:\nThe entry program of the infernece.\n\n- network_architecture:\nThe models are stored here.\n\n- run:\nThe entry program of the training.\n\n- training:\nThe trainers are stored here, the training of the network is conducted by the trainer.\n\n---\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "the download link is \n```\nLink\uff1ahttps://pan.baidu.com/s/1h1h8_DKvve8enyTiIyzfHw \nExtraction code\uff1ayimv\n```\nThe Google Drive link is as follows\uff1a\n```\nLink\uff1ahttps://drive.google.com/drive/folders/16y1QYOQD4vjrR2hh8TpPB-tq5EYX--Az?usp=sharing\n```\n\nthe specified directory is\n```\n../DATASET/nnFormer_trained_models/nnFormer/3d_fullres/Task001_ACDC/nnFormerTrainerV2_ACDC__nnFormerPlansv2.1/fold_0/model_best.model\n../DATASET/nnFormer_trained_models/nnFormer/3d_fullres/Task001_ACDC/nnFormerTrainerV2_ACDC__nnFormerPlansv2.1/fold_0/model_best.model.pkl\n\n../DATASET/nnFormer_trained_models/nnFormer/3d_fullres/Task002_Synapse/nnFormerTrainerV2_Synapse__nnFormerPlansv2.1/fold_0/model_best.model\n../DATASET/nnFormer_trained_models/nnFormer/3d_fullres/Task002_Synapse/nnFormerTrainerV2_Synapse__nnFormerPlansv2.1/fold_0/model_best.model.pkl\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "the download link is \n```\nLink\uff1ahttps://pan.baidu.com/s/1h1h8_DKvve8enyTiIyzfHw \nExtraction code\uff1ayimv\n```\nthe specified directory is\n```\n../Pretrained_weight/pretrain_ACDC.model\n../Pretrained_weight/pretrain_Synapse.model\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/282857341/nnformer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 130,
      "date": "Sat, 25 Dec 2021 13:33:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/282857341/nnFormer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "282857341/nnFormer",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We recommend installation of the required packages using the Conda package manager, available through the Anaconda Python distribution. Anaconda is available free of charge for non-commercial use through [Anaconda Inc](https://www.anaconda.com/products/individual). After installing Anaconda and cloning this repository, For use as integrative framework\uff1a\n```\ngit clone https://github.com/282857341/nnFormer.git\ncd nnFormer\nconda env create -f environment.yml\nsource activate nnFormer\npip install -e .\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9294707570733147
      ],
      "excerpt": "Datasets can be downloaded at the following links: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8402761389083371
      ],
      "excerpt": "              \u251c\u2500\u2500 dataset.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8402761389083371
      ],
      "excerpt": "              \u251c\u2500\u2500 dataset.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378540036843816
      ],
      "excerpt": "nnFormer_predict -i ../DATASET/nnFormer_raw/nnFormer_raw_data/Task001_ACDC/imagesTs -o ../DATASET/nnFormer_raw/nnFormer_raw_data/Task001_ACDC/inferTs/output -m 3d_fullres -f 0 -t 1 -chk model_best -tr nnFormerTrainerV2_ACDC \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378540036843816
      ],
      "excerpt": "nnFormer_predict -i ../DATASET/nnFormer_raw/nnFormer_raw_data/Task002_Synapse/imagesTs -o ../DATASET/nnFormer_raw/nnFormer_raw_data/Task002_Synapse/inferTs/output -m 3d_fullres -f 0 -t 2 -chk model_best -tr nnFormerTrainerV2_Synapse \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8529584908523732
      ],
      "excerpt": "The dice result will be saved in ../DATASET/nnFormer_raw/nnFormer_raw_data/Task002_Synapse/inferTs/output \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378540036843816
      ],
      "excerpt": "nnFormer_predict -i ../DATASET/nnFormer_raw/nnFormer_raw_data/Task001_ACDC/imagesTs -o ../DATASET/nnFormer_raw/nnFormer_raw_data/Task001_ACDC/inferTs/output -m 3d_fullres -f 0 -t 1 -chk model_best -tr nnFormerTrainerV2_ACDC \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378540036843816
      ],
      "excerpt": "nnFormer_predict -i ../DATASET/nnFormer_raw/nnFormer_raw_data/Task002_Synapse/imagesTs -o ../DATASET/nnFormer_raw/nnFormer_raw_data/Task002_Synapse/inferTs/output -m 3d_fullres -f 0 -t 2 -chk model_best -tr nnFormerTrainerV2_Synapse \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/282857341/nnFormer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 jsguo\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "nnFormer: Interleaved Transformer for Volumetric Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "nnFormer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "282857341",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/282857341/nnFormer/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This software was originally designed and run on a system running Ubuntu 18.01, with Python 3.6, PyTorch 1.8.1, and CUDA 10.1. For a full list of software packages and version numbers, see the Conda environment file `environment.yml`. \n\nThis software leverages graphical processing units (GPUs) to accelerate neural network training and evaluation; systems lacking a suitable GPU will likely take an extremely long time to train or evaluate models. The software was tested with the NVIDIA RTX 2080 TI GPU, though we anticipate that other GPUs will also work, provided that the unit offers sufficient memory. \n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 429,
      "date": "Sat, 25 Dec 2021 13:33:04 GMT"
    },
    "technique": "GitHub API"
  }
}