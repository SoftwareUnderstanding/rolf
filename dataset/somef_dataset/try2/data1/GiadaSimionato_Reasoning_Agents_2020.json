{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1707.06347.\n\n## Team members\n\n- Kaszuba Sara, 1695639.\n- Postolache Emilian, 1649271.\n- Ratini Riccardo, 1656801.\n- Simionato Giada, 1822614."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The papers used in this work include, but are not limited to:\n- Chevalier-Boisvert, M., Bahdanau, D., Lahlou, S., Willems, L., Saharia, C., Nguyen, T. H., & Bengio, Y. (2018, September). BabyAI: A Platform to Study the Sample Efficiency of Grounded Language Learning. In International Conference on Learning Representations.\n- Brunello, A., Montanari, A., & Reynolds, M. (2019). Synthesis of LTL Formulas from Natural Language Texts: State of the Art and Research Directions. In 26th International Symposium on Temporal Representation and Reasoning (TIME 2019). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik.\n- De Giacomo, G., Iocchi, L., Favorito, M., & Patrizi, F. (2019, July). Foundations for restraining bolts: Reinforcement learning with LTLf/LDLf restraining specifications. In Proceedings of the International Conference on Automated Planning and Scheduling (Vol. 29, No. 1, pp. 128-136).\n- J. Dzifcak, M. Scheutz, C. Baral and P. Schermerhorn, What to do and how to do it: Translating natural language directives into temporal and dynamic logic representation for goal management and action execution. 2009 IEEE International Conference on Robotics and Automation, Kobe, 2009, pp. 4163-4168, doi: 10.1109/ROBOT.2009.5152776.\n- Lignos, C., Raman, V., Finucane, C. et al. Provably correct reactive control from natural language. Auton Robot 38, pp. 89\u2013105 (2015). https://doi.org/10.1007/s10514-014-9418-8.\n- G. Sturla, 2017 (May, 26 ). A Two-Phased Approach for Natural Language Parsing into Formal Logic (Master\u2019s thesis, Massachusetts Institute of Technology, Cambridge, Massachusetts). pp. 18-44. Retrieved from https://dspace.mit.edu/bitstream/handle/1721.1/113294/1016164771-MIT.pdf?sequence=1.\n- M. Chen, (2018). Translating Natural Language into Linear Temporal Logic (RUCS publication, University of Toronto, Toronto, Ontario). Retrieved from https://rucs.ca/assets/2018/submissions/chen.pdf.\n- C. Lu, R. Krishna, M. Bernstein and L. Fei-Fei, 2016. Visual Relationship Detection with Language Priors. European Conference on Computer Vision. Retrieved from https://cs.stanford.edu/people/ranjaykrishna/vrd/., Montanari, A., & Reynolds, M. (2019). Synthesis of LTL Formulas from Natural Language Texts: State of the Art and Research Directions. In 26th International Symposium on Temporal Representation and Reasoning (TIME 2019). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik.\n- J. Schulman, F. Wolski, P. Dhariwal, A. Radford, O. Klimov (2017). Proximal Policy Optimization Algorithms. OpenAI. Retrieved from https://arxiv.org/abs/1707.06347.\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GiadaSimionato/Reasoning_Agents_2020",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Instructions for Contributors\nTo contribute to this project, you should first create your own fork, and remember to periodically sync changes from this repository. You can then create pull requests for modifications you have made. Your changes will be tested and reviewed before they are merged into this repository. If you are not familiar with forks and pull requests, we recommend doing a Google or YouTube search to find many useful tutorials on the topic.\nAlso, you can have a look at the codebase structure before getting started.\nA suggested flow for contributing would be:\nFirst, open up a new feature branch to solve an existing bug/issue\nbash\n$ git checkout -b &lt;feature-branch&gt; upstream/master\nThis ensures that the branch is up-to-date with the master branch of the main repository, irrespective of the status of your forked repository.\nOnce you are done making commits of your changes / adding the feature, you can:\n(In case this is the first set of commits from this new local branch)\nbash\ngit push --set-upstream origin\n(Assuming the name of your forked repository remote is origin), which will create a new branch &lt;feature-branch&gt;\ntracking your local &lt;feature-branch&gt;, in case it hasn't been created already.\nThen, create a pull request in this repository.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-28T13:16:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-29T16:30:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9984002606654704,
        0.995746123711468,
        0.8703409736754586
      ],
      "excerpt": "Project repository for the course of Reasoning Agents 2020, Sapienza University of Rome. \nThis repository contains the tools and APIs used to perform natural language translation into Linear Temporal Logic over finite traces (LTLf) and the implementation of Restraining Bolts within the BabyAI platform. \nThe project was presented on May the 26th 2020. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "BabyAI and Restraining Bolts \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9288162930378829,
        0.9518651876728335,
        0.9460634095417089,
        0.9401254608611253,
        0.9449404774932362
      ],
      "excerpt": "NL2LTLf: Group the three approaches for NL2LTLf translation \nCfg folder contains the implementation of the approach based on Context-Free Grammars as well as an example of the required grammars. \nLambdaCalculus folder contains the implementation of the approach based on lambda-calculus as well as examples of mapping files. \nNLPPipeline/src folder contains the implementation of the approach based on the NLP pipeline. \nVideo: Contains the videos of the experiments performed in this work \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9048399310353348,
        0.9927834969578082
      ],
      "excerpt": "Video_BEHAVIOUR_Eat: the agent \"eats\" objects that it finds in its path, to complete more quickly the task and reach the goal. \nVideo_VANILLA: the only goal of the agent is to reach the red ball. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8249223156760969,
        0.8026922756819314,
        0.9678160596759433,
        0.9605739322421353
      ],
      "excerpt": "Video_VISIT_AND_PICK_MultiRB: the agent has to visit and pick a box before going to the red ball (performed using MultiBolt). \nExperiment2 folder contains all the video regarding the second experiment (Level 2 of BabyAI Platform). \nVideo_BEHAVIOUR_KeyBallAndBallKey: the agent has to go to a grey key and to a grey ball, without any constraints about the order, before reaching the red ball. \nVideo_BEHAVIOUR_TAKE_KEY: the agent finds the grey key before being at the grey ball, so it picks it up to drop it (for being at it) when it is at the grey ball to achieve the task more quickly. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9922659339705856,
        0.8242870335564696,
        0.817193519884155,
        0.857018300553271,
        0.9584875042251922,
        0.9992266213304535,
        0.9087475494432907
      ],
      "excerpt": "Video_VANILLA: the only goal of the agent is to go to the red ball. \nExperiment3 folder contains all the video regarding the third experiment (Level 3 of BabyAI Platform). \nVIDEO_pick_and_place: the agent pick up a key and, if it is near a box, it drops the key and goes to the red ball. \nbabyai_rb: Contains babyai environment and the restraining bolt implementation \nThe main addition to the original babyai project is the file babyai/rl/rb.py where we have defined the abstract RestrainingBolt class and the particular implementations that we have listed in the Training section. For the rest of the files, please see the original BabyAI documentation at https://github.com/mila-iqia/babyai. \n[RA] Project Presentation.pdf is the PDF presentation of this work. \nWe proposed three different approaches for natural language translation into LTLf formulae. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9558513585717504
      ],
      "excerpt": " * -env: the level of BabyAI \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9652191623279296
      ],
      "excerpt": " * --rb-prop: 0 for constant bolt reward (equal to 1), 1 for proportional bolt reward \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9791739100274062
      ],
      "excerpt": " * --gdrive-interval: specifies the number of updates after which data is saved on Google Drive if training on Colab (in order to work, gdrive has to be mounted on /content/gdrive); default is 200. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9620188243568714
      ],
      "excerpt": "The list of available bolts is the following: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9165606539056895
      ],
      "excerpt": "After training, a new model will be added to the babyai_rb/scripts/models/ (and saved to /content/gdrive/My\\ Drive/models when working on Colab).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Project repository for the course of Reasoning Agents 2020, Sapienza University of Rome.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GiadaSimionato/Reasoning_Agents_2020/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 15:18:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GiadaSimionato/Reasoning_Agents_2020/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "GiadaSimionato/Reasoning_Agents_2020",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/GiadaSimionato/Reasoning_Agents_2020/master/babyai_rb/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/GiadaSimionato/Reasoning_Agents_2020/tree/master/babyai_rb/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/GiadaSimionato/Reasoning_Agents_2020/master/babyai_rb/copy.sh",
      "https://raw.githubusercontent.com/GiadaSimionato/Reasoning_Agents_2020/master/NL2LTLf/NLPPipeline/src/app/models/WordNet/lib/tclConfig-shared.sh",
      "https://raw.githubusercontent.com/GiadaSimionato/Reasoning_Agents_2020/master/NL2LTLf/NLPPipeline/src/app/models/WordNet/lib/tclConfig.sh",
      "https://raw.githubusercontent.com/GiadaSimionato/Reasoning_Agents_2020/master/NL2LTLf/NLPPipeline/src/app/models/WordNet/lib/tkConfig-shared.sh",
      "https://raw.githubusercontent.com/GiadaSimionato/Reasoning_Agents_2020/master/NL2LTLf/NLPPipeline/src/app/models/WordNet/lib/tkConfig.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirement **Java 1.8+**\nThe repository already contains **WordNet 2.1**, **VerbNet 3.0** and **StanfordCoreNLP API 4.0**. Language model must be downloaded.\n* Copy `NLPPipeline/src/` on your project\n* Go to `src/lib/` and follow `\"IMPORTANT -model download.txt\"` to download the language model\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements:\n- Python 3.5+\n- NLTK 3.0+\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements:\n- Python 3.5+\n- NLTK 3.0+\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9811115976598991
      ],
      "excerpt": "The experiments in BabyAI require Python 3.6.9 (the latest version of Python supported by Google Colab). In order to install the required dependencies call pip install . inside the babyai_rb folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9473639834594849
      ],
      "excerpt": " * --rb: the required bolt  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/GiadaSimionato/Reasoning_Agents_2020/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C",
      "Tcl",
      "PostScript",
      "C++",
      "Python",
      "HTML",
      "Shell",
      "Java",
      "Roff",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Lucas Willems\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Reasoning Agents 2020",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Reasoning_Agents_2020",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "GiadaSimionato",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/GiadaSimionato/Reasoning_Agents_2020/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 22 Dec 2021 15:18:53 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the translator, in the `Cfg` folder enter:\n\n```\npython ./CFG2LTLf.py --pathNL './cfg_nl.txt' --pathLTLf './cfg.ltlf' --sentence 'Go to a red ball'\n```\nuse `--sentence` to input the sentence to translate, `--pathNL` to specify the path to the NL CFG and `--pathLTLf` to specify the path to the LTLf CFG.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the translator, in the `LambdaCalculus` folder enter:\n\n```\npython ./NL2LTLf.py --path './mappings.csv' --sentence 'Go to a red ball' --set_pronouns 'True'\n```\nuse `--sentence`  to input the sentence to translate, `--path` to specify the path to the mapping `.csv` file and `--set_pronouns` to enable/disable pronoun handling.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "All auxiliary classes contains JavaDocs.\nTo translate a sentence use `NL2LTLTranslator.translate(sentence)`.\nThe class `NL2LTLTranslator` contains a main method with some examples.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To visualize a demo of the agent execute `babyai_rb/scripts/enjoy.py` specifying the environment, the model and the \nrestraining bolt (and additionally `rb-prop`).\nFor example to visualize the model trained previously (Experiment 1) call\n```\npython babyai_rb/scripts/enjoy.py --env BabyAI-GoToRedBall-v0 --model $MODEL --rb VisitBoxAndPickRestrainingBolt --rb-prop 0\n```\nwhere `$MODEL` is the name of the trained model in `babyai_rb/scripts/models/`.\n\n",
      "technique": "Header extraction"
    }
  ]
}