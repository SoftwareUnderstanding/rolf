{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434 (2015).\n\n(Full paper: https://arxiv.org/pdf/1511.06434.pdf)\n\n[3] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. \"Gradient-based learning applied to document recognition.\" Proceedings of the IEEE, 86(11):2278-2324, November 1998.\n\n[4] Liu, Ziwei, et al. \"Deep learning face attributes in the wild.\" Proceedings of the IEEE International Conference on Computer Vision. 2015."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in neural information processing systems. 2014.\n\n(Full paper: http://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf)\n\n[2] Radford, Alec, Luke Metz, and Soumith Chintala. \"Unsupervised representation learning with deep convolutional generative adversarial networks.\" arXiv preprint arXiv:1511.06434 (2015).\n\n(Full paper: https://arxiv.org/pdf/1511.06434.pdf)\n\n[3] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. \"Gradient-based learning applied to document recognition.\" Proceedings of the IEEE, 86(11):2278-2324, November 1998.\n\n[4] Liu, Ziwei, et al. \"Deep learning face attributes in the wild.\" Proceedings of the IEEE International Conference on Computer Vision. 2015.\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/znxlwm/pytorch-MNIST-CelebA-GAN-DCGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-07-18T03:07:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-13T14:40:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9276686029647708
      ],
      "excerpt": "Pytorch implementation of Generative Adversarial Networks (GAN) [1] and Deep Convolutional Generative Adversarial Networks (DCGAN) [2] for MNIST [3] and CelebA [4] datasets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8032183478638865
      ],
      "excerpt": "Learning Time \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8032183478638865
      ],
      "excerpt": "Learning Time \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch implementation of Generative Adversarial Networks (GAN) and Deep Convolutional Generative Adversarial Networks (DCGAN) for MNIST and CelebA datasets",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/znxlwm/pytorch-MNIST-CelebA-GAN-DCGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 135,
      "date": "Sun, 26 Dec 2021 08:19:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/znxlwm/pytorch-MNIST-CelebA-GAN-DCGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "znxlwm/pytorch-MNIST-CelebA-GAN-DCGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9488645149849259
      ],
      "excerpt": "you can download \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458,
        0.8837680365796365,
        0.8414247261726889
      ],
      "excerpt": "cuda 8.0 \nPython 2.7.6 \npytorch 0.1.12 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966655221085083,
        0.8649682819662753
      ],
      "excerpt": "matplotlib 1.3.1 \nimageio 2.2.0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8315407022812746
      ],
      "excerpt": "If you want to train using cropped CelebA dataset, you have to change isCrop = False to isCrop = True. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8605013166123879
      ],
      "excerpt": "pytorch_CelebA_DCGAN.py requires 64 x 64 size image, so you have to resize CelebA dataset (celebA_data_preprocess.py). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8647354795712904,
        0.8647354795712904
      ],
      "excerpt": "<td><img src = 'MNIST_GAN_results/generation_animation.gif'> \n<td><img src = 'MNIST_DCGAN_results/generation_animation.gif'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256,
        0.8836704212480256,
        0.8836704212480256
      ],
      "excerpt": "<td><img src = 'MNIST_GAN_results/raw_MNIST.png'> \n<td><img src = 'MNIST_GAN_results/MNIST_GAN_100.png'> \n<td><img src = 'MNIST_DCGAN_results/MNIST_DCGAN_20.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8647354795712904,
        0.8647354795712904
      ],
      "excerpt": "<td><img src = 'CelebA_DCGAN_results/generation_animation.gif'> \n<td><img src = 'CelebA_DCGAN_crop_results/generation_animation.gif'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256,
        0.8836704212480256,
        0.8836704212480256
      ],
      "excerpt": "<td><img src = 'CelebA_DCGAN_results/raw_CelebA.png'> \n<td><img src = 'CelebA_DCGAN_results/CelebA_DCGAN_20.png'> \n<td><img src = 'CelebA_DCGAN_crop_results/CelebA_DCGAN_crop_30.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8818870182144627
      ],
      "excerpt": "CelebA DCGAN - Avg. per epoch: 732.54 sec; total 20 epochs ptime: 14744.66 sec \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/znxlwm/pytorch-MNIST-CelebA-GAN-DCGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-MNIST-CelebA-GAN-DCGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-MNIST-CelebA-GAN-DCGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "znxlwm",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/znxlwm/pytorch-MNIST-CelebA-GAN-DCGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 406,
      "date": "Sun, 26 Dec 2021 08:19:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "generative-adversarial-network",
      "gan",
      "dcgan",
      "mnist",
      "celeba"
    ],
    "technique": "GitHub API"
  }
}