{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1708.02002",
      "https://arxiv.org/abs/1801.04503",
      "https://arxiv.org/abs/1704.04110"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9975655669225735
      ],
      "excerpt": "LstmFcnPrimitive: wrapper for LSTM Fully Convolutional Networks for Time Series Classification paper, original repo (https://github.com/titu1994/MLSTM-FCN), paper (https://arxiv.org/abs/1801.04503) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.992052178029541
      ],
      "excerpt": "DeepArPrimitive: DeepAR recurrent, autoregressive Time Series Forecasting algorithm (https://arxiv.org/abs/1704.04110). Base library: https://github.com/NewKnowledge/deepar \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yonder-OSS/D3M-Primitives",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-27T01:29:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-01T18:30:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.983494673014217,
        0.9747202940638925
      ],
      "excerpt": "DataCleaningPrimitive: wrapper for the data cleaning primitive based on the Yonder punk library. \nDukePrimitive: wrapper of the Duke library in the D3M infrastructure. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.95675399045593,
        0.9617213903054163,
        0.9678521647055484
      ],
      "excerpt": "GoatForwardPrimitive: geocodes names of locations into lat/long pairs with requests to photon geocoding server (based on OpenStreetMap) \nGoatReversePrimitive: geocodes lat/long pairs into geographic names of varying granularity with requests to photon geocoding server (based on OpenStreetMap) \nHdbscanPrimitive: wrapper for scikit-learn's HDBSCAN and DBSCAN implementations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9661063213679585,
        0.961152088915247,
        0.9657065988921856,
        0.9661063213679585
      ],
      "excerpt": "SpectralClustering: wrapper for scikit-learn's Spectral Clustering implementation \nPcaFeaturesPrimitive: wrapper of the Punk feature ranker into D3M infrastructure. \nRfFeaturesPrimitive wrapper of the Punk punk rrfeatures library into D3M infrastructure \nTsnePrimitive: wrapper for scikit-learn's TSNE implementation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8396816508561904
      ],
      "excerpt": "GatorPrimitive: Inception V3 model pretrained on ImageNet finetuned for classification \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9732384838567124
      ],
      "excerpt": "ObjectDetectionRNPrimitive: wrapper for the Keras implementation of Retinanet from this repo. The original Retinanet paper can be found here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9057880492494818
      ],
      "excerpt": "layer_utils.py: implementation of AttentionLSTM in tensorflow (compatible with 2), originally from https://github.com/houshd/LSTM-FCN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.951172779846524
      ],
      "excerpt": "var_model_utils.py: wrapper of the auto_arima method from pmdarima.arima with some specific parameters fixed \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yonder-OSS/D3M-Primitives/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 19:17:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yonder-OSS/D3M-Primitives/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yonder-OSS/D3M-Primitives",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/test-serialization.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/pull-datasets.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/feature_selection/rf_features/old_scripts/rff_features_testing_winter_eval_2020.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/feature_selection/rf_features/old_scripts/rffeatures_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/feature_selection/pca_features/old_scripts/pca_features_testing_winter_2020.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/feature_selection/pca_features/old_scripts/pcafeat_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/deep_ar/old_scripts/pipeline_test_dar.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/deep_ar/old_scripts/DeepAR_CI_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/deep_ar/old_scripts/DeepAR_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/vector_autoregression/old_scripts/VAR_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/vector_autoregression/old_scripts/pipeline_test.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/vector_autoregression/old_scripts/VAR_CI_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_forecasting/vector_autoregression/old_scripts/VAR_weights_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_classification/knn/old_scripts/KNN_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/ts_classification/lstm_fcn/old_scripts/LSTM_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/image_classification/imagenet_transfer_learning/old_scripts/pipeline_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/data_preprocessing/data_cleaning/old_scripts/datacleaning_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/data_preprocessing/geocoding_forward/old_scripts/goat_forward_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/data_preprocessing/data_typing/old_scripts/simon_pipeline_runs.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/data_preprocessing/geocoding_reverse/old_scripts/goat_reverse_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/data_preprocessing/duke/old_scripts/duke_pipeline_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/natural_language_processing/sent2vec/old_scripts/sent2vec_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/clustering/k_means/old_scripts/pipeline_testing.sh",
      "https://raw.githubusercontent.com/Yonder-OSS/D3M-Primitives/master/primitives/object_detection/retinanet/old_scripts/object_detection_retinanet_testing.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8056154208737111
      ],
      "excerpt": "lstm_model_utils.py: functions to generate LSTM_FCN model architecture and data generators \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yonder-OSS/D3M-Primitives/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Yonder\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Repository of Yonder Open Source D3M Primitives",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "D3M-Primitives",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yonder-OSS",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yonder-OSS/D3M-Primitives/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 19:17:03 GMT"
    },
    "technique": "GitHub API"
  }
}