{
  "citation": [
    {
      "confidence": [
        0.8796214144541187
      ],
      "excerpt": "  which appeared at SOSP 2019 (pipedream branch). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/msr-fiddle/pipedream",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to PipeDream\nWelcome, and thank you for your interest in contributing to PipeDream!\nThe main README.md and EXPERIMENTS.md contain\ninstructions on how to build the dependencies, and run PipeDream on a few simple\nmodels.\nYou must sign a Contribution License Agreement (CLA) in order to have a PR\nmerged. This a one-time requirement for Microsoft projects in GitHub. You can\nread more about Contribution License Agreements (CLA)\non Wikipedia.\nHowever, you don't have to do this up-front. You can simply clone, fork, and\nsubmit your pull-request as usual.\nWhen your pull-request is created, it is classified by a CLA bot. If the change\nis trivial (i.e. you just fixed a typo) then the PR is labelled with\ncla-not-required. Otherwise, it's classified as cla-required. In that case, the\nsystem will also tell you how you can sign the CLA. Once you have signed a CLA,\nthe current and all future pull-requests will be labelled as cla-signed.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-22T01:18:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-01T03:22:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9683665727051504
      ],
      "excerpt": "This repository contains the source code implementation of the following \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8084209378394633
      ],
      "excerpt": "  which appeared at ICML 2021 (pipedream_2bw branch). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9207219890441294
      ],
      "excerpt": "Project Fiddle. This source code is available \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9489614984010143
      ],
      "excerpt": "This contains a Python implementation of a graph, used by the PipeDream profiler \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047,
        0.8106195637040918,
        0.8632703423338393,
        0.9320817838159137,
        0.9574309961651514
      ],
      "excerpt": "the optimizer. \nA Python implementation of PipeDream's optimizer. \nPipeDream's runtime, which implements model parallelism, as well as input \npipelining in PyTorch. This can be fused with data parallelism to give hybrid \nmodel and data parallelism, and input pipelining. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83749794520635,
        0.8114558746641916
      ],
      "excerpt": "More detailed instructions for each of the individual components are in the corresponding directory READMEs, \nand more detailed instructions on how to run the main experiments in the SOSP paper are in EXPERIMENTS.md. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9109584230021226
      ],
      "excerpt": "master IP address here is the IP address of the rank 0 process. On a server with 4 GPUs, localhost can be specified. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/msr-fiddle/pipedream/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 84,
      "date": "Wed, 22 Dec 2021 12:42:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/msr-fiddle/pipedream/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "msr-fiddle/pipedream",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/msr-fiddle/pipedream/pipedream/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/msr-fiddle/pipedream/pipedream/setup.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8318571924536016,
        0.8261284757893111
      ],
      "excerpt": "This can be downloaded using the following command (within the docker container above), \ncd scripts; python download_imagenet.py --data_dir &lt;DATASET_DIR&gt; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9668461357257987,
        0.9560038508621433
      ],
      "excerpt": "[from pipedream/profiler/image_classification; you will need to have the changes to PyTorch listed above] \nNote that the profiling step must be run with only a single GPU (hence the CUDA_VISIBLE_DEVICES=0 before the command). \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/msr-fiddle/pipedream/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "Dockerfile",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PipeDream: Pipeline Parallelism for DNN Training",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pipedream",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "msr-fiddle",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/msr-fiddle/pipedream/blob/pipedream/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run PipeDream, you will need a NVIDIA GPU with CUDA 10.0, GPU driver version 418.56, nvidia-docker2,\nand Python 3. On a Linux server with NVIDIA GPU(s) and Ubuntu 16.04, these dependencies can be installed\nusing,\n\n```bash\nbash setup.sh\n```\n\nAll dependencies are in the nvcr.io/nvidia/pytorch:19.05-py3 container, which can be downloaded using,\n\n```bash\nnvidia-docker pull nvcr.io/nvidia/pytorch:19.05-py3\n```\n\nTo run the PipeDream profiler, you will need to build a new Docker image, which can be done using the\nDockerfile in this directory. Note that the Dockerfile has a dependency on the `pre_hook.patch`  and\n`requirements.txt` files in this directory. This container can be built using,\n\n```bash\ndocker build --tag <CONTAINER_NAME> .\n```\n\nThe PyTorch Docker Container can then be run using,\n\n```bash\nnvidia-docker run -it -v /mnt:/mnt --ipc=host --net=host <CONTAINER_NAME> /bin/bash\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 249,
      "date": "Wed, 22 Dec 2021 12:42:49 GMT"
    },
    "technique": "GitHub API"
  }
}