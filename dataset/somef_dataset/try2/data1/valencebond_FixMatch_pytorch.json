{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2001.07685"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- https://github.com/CoinCheung/fixmatch\n- https://github.com/kekmodel/FixMatch-pytorch\n- official implement https://github.com/google-research/fixmatch\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "|Paper (RA) | 86.19 \u00b1 3.37 | 94.93 \u00b1 0.65 | 95.74 \u00b1 0.05 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537267708315463
      ],
      "excerpt": "|Paper (RA) | 51.15 \u00b1 1.75 | 71.71 \u00b1 0.11 | 77.40 \u00b1 0.12 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/valencebond/FixMatch_pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-30T10:47:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T03:51:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.998492883852106,
        0.885761490692898
      ],
      "excerpt": "The unofficial reimplementation of fixmatch with RandomAugment. \n|repo|using EMA model to evaluate|using EMA model to train|update parameters|update buffer| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unofficial PyTorch implementation of \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/valencebond/FixMatch_pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Sun, 26 Dec 2021 10:52:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/valencebond/FixMatch_pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "valencebond/FixMatch_pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/valencebond/FixMatch_pytorch/master/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9251186342827803
      ],
      "excerpt": "$ mkdir -p dataset &amp;&amp; cd data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9251186342827803
      ],
      "excerpt": "$ mkdir -p dataset &amp;&amp; cd data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8519470715220581
      ],
      "excerpt": "    $ tar -xzvf cifar-100-python.tar.gz \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8515588064330982
      ],
      "excerpt": "download cifar-10 dataset:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8571833221294283
      ],
      "excerpt": "download cifar-100 dataset:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8498729825244147,
        0.9238670335154094,
        0.8505184977057743,
        0.9237077401307956
      ],
      "excerpt": "To train the model on CIFAR10 with 40 labeled samples, you can run the script:  \n$ CUDA_VISIBLE_DEVICES='0' python train.py --dataset CIFAR10 --n-labeled 40 \nTo train the model on CIFAR100 with 400 labeled samples, you can run the script:  \n$ CUDA_VISIBLE_DEVICES='0' python train.py --dataset CIFAR100 --n-labeled 400 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/valencebond/FixMatch_pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 CoinCheung\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# FixMatch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FixMatch_pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "valencebond",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/valencebond/FixMatch_pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- python 3.6\n- pytorch 1.3.1\n- torchvision 0.2.1\n\nThe other packages and versions are listed in ```requirements.txt```. \nYou can install them by ```pip install -r requirements.txt```.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 37,
      "date": "Sun, 26 Dec 2021 10:52:14 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "semi-supervised-learning",
      "pytorch",
      "fixmatch"
    ],
    "technique": "GitHub API"
  }
}