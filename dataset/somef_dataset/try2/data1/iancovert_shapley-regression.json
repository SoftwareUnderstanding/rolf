{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1705.07874",
      "https://arxiv.org/abs/2004.00668",
      "https://arxiv.org/abs/2012.01536"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Ian Covert and Su-In Lee. \"Improving KernelSHAP: Practical Shapley Value Estimation via Linear Regression.\" *arxiv preprint:2012.01536*\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iancovert/shapley-regression",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-22T01:11:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-03T16:18:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9855872606402497,
        0.8979946139220865
      ],
      "excerpt": "This repository implements a regression-based approach to estimating Shapley values. Although the code can be used with any cooperative game, our focus is model explanation methods such SHAP, SAGE, and Shapley Effects, which are the Shapley values of several specific cooperative games. The methods provided here were developed in this paper. \nBecause approximations are essential in most practical Shapley value applications, we provide an estimation approach with the following convenient features: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9341477999595326,
        0.9634137549880832
      ],
      "excerpt": "Convergence forecasting: for use cases that take a long time to run, our implementation forecasts the amount of time required to reach convergence (displayed with a progress bar). \nUncertainty estimation: Shapley values are often estimated rather than calculated exactly, and our method provides confidence intervals for the results. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "For calculating Shapley values via linear regression.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iancovert/shapley-regression/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Thu, 23 Dec 2021 00:51:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/iancovert/shapley-regression/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "iancovert/shapley-regression",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/iancovert/shapley-regression/master/notebooks/census.ipynb",
      "https://raw.githubusercontent.com/iancovert/shapley-regression/master/notebooks/credit.ipynb",
      "https://raw.githubusercontent.com/iancovert/shapley-regression/master/notebooks/bank.ipynb",
      "https://raw.githubusercontent.com/iancovert/shapley-regression/master/notebooks/calibration.ipynb",
      "https://raw.githubusercontent.com/iancovert/shapley-regression/master/notebooks/consistency.ipynb",
      "https://raw.githubusercontent.com/iancovert/shapley-regression/master/notebooks/brca.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8229757791411597
      ],
      "excerpt": "Ian Covert (&#105;&#99;&#111;&#118;&#101;&#114;&#116;&#64;&#99;&#115;&#46;&#119;&#97;&#115;&#104;&#105;&#110;&#103;&#116;&#111;&#110;&#46;&#101;&#100;&#117;) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/iancovert/shapley-regression/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Ian Covert\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Shapley Regression",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "shapley-regression",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "iancovert",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iancovert/shapley-regression/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 23,
      "date": "Thu, 23 Dec 2021 00:51:06 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "shapley",
      "explainability",
      "interpretability",
      "game-theory"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To use the code, clone this repository and install the package into your Python environment:\n\n```bash\npip install .\n```\n\nNext, to run the code you only need to do two things: 1) specify a cooperative game, and 2) run the Shapley value estimator. For example, you can calculate SHAP values as follows:\n\n```python\nfrom shapreg import removal, games, shapley\n\n#: Get data\nx, y = ...\nfeature_names = ...\n\n#: Get model (a callable object)\nmodel = ...\n\n#: Set up the cooperative game (SHAP)\nimputer = removal.MarginalExtension(x[:128], model)\ngame = games.PredictionGame(imputer, x[0])\n\n#: Estimate Shapley values\nvalues = shapley.ShapleyRegression(game)\n```\n\nFor examples, see the following notebooks:\n\n- [Census](https://github.com/iancovert/shapley-regression/blob/master/notebooks/census.ipynb): shows how to explain individual predictions (SHAP)\n- [Credit](https://github.com/iancovert/shapley-regression/blob/master/notebooks/credit.ipynb): shows how to explain the model's loss (SAGE)\n- [Bank](https://github.com/iancovert/shapley-regression/blob/master/notebooks/bank.ipynb): shows how to explain the model's global sensitivity (Shapley Effects)\n- [Consistency](https://github.com/iancovert/shapley-regression/blob/master/notebooks/consistency.ipynb): verifies that our different estimators return the same results\n- [Calibration](https://github.com/iancovert/shapley-regression/blob/master/notebooks/calibration.ipynb): verifies the accuracy of our uncertainty estimates\n\n\n",
      "technique": "Header extraction"
    }
  ]
}