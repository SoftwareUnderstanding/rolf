{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.01497",
      "https://arxiv.org/abs/1801.04381",
      "https://arxiv.org/abs/1409.1556",
      "https://arxiv.org/abs/1409.1556",
      "https://arxiv.org/abs/1409.1556",
      "https://arxiv.org/abs/1409.1556",
      "https://arxiv.org/abs/1512.03385",
      "https://arxiv.org/abs/1612.03144",
      "https://arxiv.org/abs/1908.07919",
      "https://arxiv.org/abs/1801.04381"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9964897668898146,
        0.9981004378540665
      ],
      "excerpt": "* fpn101:resnet101 fpn network(Deep Residual Learning for Image Recognition) (Feature Pyramid Networks for Object Detection) \n* hrnet:high resolution net(Deep High-Resolution Representation Learning for Visual Recognition) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AlphaJia/pytorch-faster-rcnn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-21T08:38:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-05T15:07:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Pytorch based implementation of faster rcnn framework.For details about faster R-CNN please refer to the paper [Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks](https://arxiv.org/abs/1506.01497) by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun\n\n\nThis detection framework has the following features:  \n* It can be run as pure python code, and also pure based on pytorch framework, no need to build\n* It is easily trained by only running a train.py script, just set the data root dir\n* It has many backbone networks. like vgg, resnet-fpn, mobilenet, high resolution net(HRNet)\n* It can be a really detection framework. You only need to change super parameters in config file and get different models to compare different model\n* It's memory-efficient (about 3GB for vgg16)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9381825812125132
      ],
      "excerpt": "* vgg16:vgg16 net network(Very Deep Convolutional Networks for Large-Scale Image Recognition) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8012510382990468
      ],
      "excerpt": "* hrnet:high resolution net(Deep High-Resolution Representation Learning for Visual Recognition) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8241974151401171
      ],
      "excerpt": "This module includes some utilies for image processing, network architectures building, anchor generating, loss function, etc. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "pytorch based implementation faster rcnn",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```Shell\n wget http://images.cocodataset.org/zips/train2017.zip  \n wget http://images.cocodataset.org/zips/val2017.zip\n wget http://images.cocodataset.org/zips/test2017.zip\n wget http://images.cocodataset.org/annotations/annotations_trainval2017.zip\n  ```\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AlphaJia/pytorch-faster-rcnn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 69,
      "date": "Fri, 24 Dec 2021 03:46:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AlphaJia/pytorch-faster-rcnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AlphaJia/pytorch-faster-rcnn",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9901541712239005
      ],
      "excerpt": "  git clone https://github.com/AlphaJia/pytorch-faster-rcnn.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8276349924317332,
        0.8276349924317332,
        0.8530431856331903,
        0.8530431856331903
      ],
      "excerpt": " tar xvf train2017.zip \n tar xvf val2017.zip \n tar xvf test2017.zip \n tar xvf annotations_trainval2017.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8601600939217173
      ],
      "excerpt": "--backbone_pretrained_weights: backbone pretrained weights, None or path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046768334626184
      ],
      "excerpt": "--gpu_id: cuda device gpu ID \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8639986685036579
      ],
      "excerpt": "                |-- [xxxxxxxxxxxx].jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579
      ],
      "excerpt": "                |-- [xxxxxxxxxxxx].jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579
      ],
      "excerpt": "                |-- [xxxxxxxxxxxx].jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278121020599903,
        0.8742259276161577
      ],
      "excerpt": "* Train with mobilenet \nModify backbone cfg item in config/train_config.py with mobilenet, download pretrained weights here, and set backbone_pretrained_weights in config/train_config.py with downloaded path. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785,
        0.8211122275144006,
        0.8742259276161577
      ],
      "excerpt": " python train.py \n* Train with resnet-fpn \nModify backbone cfg item in config/train_config.py with resnet50_fpn, download pretrained weights here, and set backbone_pretrained_weights in config/train_config.py with downloaded path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": " python train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785,
        0.8278121020599903,
        0.802590607847365
      ],
      "excerpt": " python train.py \n* Train with HRNet \nModify backbone cfg item in config/train_config.py with HRNe \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": " python train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "--device_name: training device  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8176934027118676
      ],
      "excerpt": "--model_weights: training save path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515752551715031
      ],
      "excerpt": " python test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9504555210869633
      ],
      "excerpt": "* anchor_utils_test: some unit testing for utils/anchor_utils.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AlphaJia/pytorch-faster-rcnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-faster-rcnn",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-faster-rcnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AlphaJia",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AlphaJia/pytorch-faster-rcnn/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 2.7 or 3.5  \n* Pytorch 1.5.1  \n* torchvision 0.6.1  \n* numpy 1.15.4\n* Pillow 6.1.0\n* pycocotools 2.0\n* matplotlib 3.0.2\n* tensorboardX 2.0  \n```Shell\npip install -r requirements.txt\n  ```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 320,
      "date": "Fri, 24 Dec 2021 03:46:57 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "faster-rcnn",
      "pytorch",
      "detection"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![img](imgs/demo1.png)  \n",
      "technique": "Header extraction"
    }
  ]
}