{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2104.03946",
      "https://arxiv.org/abs/1907.01657",
      "https://arxiv.org/abs/1606.03476"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nDavid Lindner, Rohin Shah, Pieter Abbeel, Anca Dragan. **Learning What To Do by Simulating the Past**. In _International Conference on Learning Representations (ICLR)_, 2021.\r\n\r\n```\r\n@inproceedings{lindner2021learning,\r\n    title={Learning What To Do by Simulating the Past},\r\n    author={Lindner, David and Shah, Rohin and Abbeel, Pieter and Dragan, Anca},\r\n    booktitle={International Conference on Learning Representations (ICLR)},\r\n    year={2021},\r\n}\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{lindner2021learning,\n    title={Learning What To Do by Simulating the Past},\n    author={Lindner, David and Shah, Rohin and Abbeel, Pieter and Dragan, Anca},\n    booktitle={International Conference on Learning Representations (ICLR)},\n    year={2021},\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HumanCompatibleAI/deep-rlsp",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-16T14:55:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-07T17:20:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9876477844997784
      ],
      "excerpt": "This repository contains code that implements the Deep Reward Learning by Simulating the Past (Deep RSLP) algorithm introduced in the paper \"Learning What To Do by Simulating the Past\". This code is provided as is, and will not be maintained. Here we describe how to reproduce the experimental results reported in the paper. You can find video of policies trained with Deep RLSP here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.932207986185349
      ],
      "excerpt": "Now we describe how to reproduce the experiments described in the paper. We first describe the experiments in Gridworld environments, discussed in Section 3.2, and then the experiments in MuJoCo environments, discussed in Sections 3.3 and 3.4. For each of these we describe how to run Deep RLSP, the ablations discussed in the paper, and GAIL as a baseline. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908499404250195
      ],
      "excerpt": "adapting the paths of the inverse dynamics model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9162152481211471
      ],
      "excerpt": "To reproduce our experiments in the MuJoCo simulator, that we report in Sections 3.3 and 3.4, you need to perform the following steps: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "Compare to baselines / ablations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8718007793207718
      ],
      "excerpt": "We consider two different ways of obtaining policies to immitate: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9411729919051158,
        0.9305749726784679
      ],
      "excerpt": "For convenience, we provide trained policies in the policies/ folder of this repository. \nIn the paper, we evaluate Deep RLSP in two ways: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9005561814113455
      ],
      "excerpt": "2. Evaluate the policy trained during Deep RLSP (for the balancing and jumping skills) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9057244093047424
      ],
      "excerpt": "providing the subfolder of results/ that corresponds to the experiment you want to evaluate. This creates a sub-folder in results/mujoco/eval that contains the trained policy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9042359250822611,
        0.8378659847518768
      ],
      "excerpt": "for the corresponding policy file. This samples 100 trajectories from the policy and determines the mean and standard deviation of the policy return. \nThe same script can also be used to visualize the policies using the --render or --out_video arguments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9042359250822611,
        0.8378659847518768,
        0.8580391158979266
      ],
      "excerpt": "for the corresponding policy file. This samples 100 trajectories from the policy and determines the mean and standard deviation of the policy return. \nThe same script can also be used to visualize the policies using the --render or --out_video arguments. \nTo ensure comparability with a limited number of random seeds, we run the ablations with the same trained VAE and dynamics models and the same input states as Deep RLSP. This can be done the following commands: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.882974353006217
      ],
      "excerpt": "passing a folder containing the corresponding results of Deep RLSP as an argument. The policy returned by this baseline algorithm can be found in results/mujoco/, and they can also be visualized and evaluated using the scripts/evaluate_policy.py script. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8416597869722126
      ],
      "excerpt": "To visualize the resulting policies: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8407925567867958
      ],
      "excerpt": "We use black for code formatting, flake8 for linting, and mypy to check type hints. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code accompanying \"Learning What To Do by Simulating the Past\", ICLR 2021.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HumanCompatibleAI/deep-rlsp/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Thu, 23 Dec 2021 16:30:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/HumanCompatibleAI/deep-rlsp/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "HumanCompatibleAI/deep-rlsp",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/HumanCompatibleAI/deep-rlsp/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/HumanCompatibleAI/deep-rlsp/master/code_checks.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nAlternatively, you can set up the same Anaconda environment manually. In this case [MuJoCo](http://www.mujoco.org/index.html) has to be installed locally. If using a non-standard location, the environment variables `MUJOCO_PY_MJKEY_PATH` and `MUJOCO_PY_MUJOCO_PATH` have to be set accordingly.\r\n\r\nTo perform the manual setup, install [Anaconda](https://www.anaconda.com/) locally and run the following commands to set up the environment:\r\n\r\n```\r\nconda env create -f docker/environment.yml\r\nconda activate deep-rlsp\r\npip install mujoco-py==2.0.2.9\r\npip install -e .\r\nconda activate deep-rlsp\r\n```\r\n\r\nThis sets up an Anaconda environment with the required dependencies and activates it, which can then be used to run the code.\r\n\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nThere are two options to set up the environment to run the code: either using Docker, or setting up the environment manually using Anaconda. We recommend to use the Docker setup.\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8629920167409489
      ],
      "excerpt": "Set up the environment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410830761261643
      ],
      "excerpt": "Manual setup \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9179256138488753,
        0.9240525881638201
      ],
      "excerpt": "conda activate deep-rlsp \nThe first command sets up a container with all required dependencies including MuJoCo. The second command starts an interactive shell inside the container and the third command activates the Anaconda environment set up inside the container. You can now run all experiments inside this container. Note, that you might have to modify docker/Dockerfile to use Tensorflow with GPU support. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9769564210792799
      ],
      "excerpt": "You can then run the experiments with the following commands: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9345523925464414
      ],
      "excerpt": "You can run the \"AverageFeatures\" ablation by replacing latent_rlsp_config with latent_rlsp_ablation in the commands above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8864243412370533,
        0.999746712887969
      ],
      "excerpt": "Running  Generative Adversarial Imitation Learning (GAIL) requires the imitation library. You can install it using: \npip install imitation==0.1.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8492867589090318
      ],
      "excerpt": "You can run all checks with bash code_checks.sh and unit tests \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9640454106655597,
        0.9640454106655597,
        0.9640454106655597,
        0.9640454106655597,
        0.9640454106655597,
        0.9640454106655597
      ],
      "excerpt": "python src/deep_rlsp/run.py with latent_rlsp_config room_default inverse_dynamics_model_checkpoint=tf_ckpt/tf_ckpt_vae_RoomDefault-v0_20200930_132218 \npython src/deep_rlsp/run.py with latent_rlsp_config train_default inverse_dynamics_model_checkpoint=tf_ckpt/tf_ckpt_vae_TrainDefault-v0_20200930_132234 \npython src/deep_rlsp/run.py with latent_rlsp_config apples_default inverse_dynamics_model_checkpoint=tf_ckpt/tf_ckpt_vae_ApplesDefault-v0_20200930_132414 \npython src/deep_rlsp/run.py with latent_rlsp_config batteries_easy inverse_dynamics_model_checkpoint=tf_ckpt/tf_ckpt_mlp_BatteriesDefault-v0_20200930_123401 \npython src/deep_rlsp/run.py with latent_rlsp_config batteries_default inverse_dynamics_model_checkpoint=tf_ckpt/tf_ckpt_mlp_BatteriesDefault-v0_20200930_123401 \npython src/deep_rlsp/run.py with latent_rlsp_config room_bad inverse_dynamics_model_checkpoint=tf_ckpt/tf_ckpt_vae_RoomDefault-v0_20200930_132218 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8075783770344374
      ],
      "excerpt": "python scripts/mujoco_evaluate_inferred_reward.py with experiment_folder=results/mujoco/20200528_150813_InvertedPendulum-v2_optimal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8566850431442363
      ],
      "excerpt": "python scripts/evaluate_policy.py results/mujoco/eval/20200605_203113_20200603_220928_InvertedPendulum-v2_optimal_1/policy.zip sac InvertedPendulum-v2 --num_rollouts 100 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867647207299985
      ],
      "excerpt": "python scripts/evaluate_policy.py results/mujoco/20200528_150813_InvertedPendulum-v2_optimal/rlsp_policy_112.zip sac InvertedPendulum-v2 --num_rollouts 100 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9495310037427903,
        0.9495310037427903
      ],
      "excerpt": "python src/deep_rlsp/ablation_AverageFeatures.py with result_folder=results/mujoco/20200528_150813_InvertedPendulum-v2_optimal \npython src/deep_rlsp/ablation_Waypoints.py with result_folder=results/mujoco/20200528_150813_InvertedPendulum-v2_optimal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8288925152371033
      ],
      "excerpt": "python scripts/create_demonstrations.py policies/sac_cheetah_fw_2e6.zip demonstrations/sac_cheetah_fw_traj_len_{}_seed_{}.pkl 10 generate_seed HalfCheetah-FW-v2 1 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/HumanCompatibleAI/deep-rlsp/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Dockerfile",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'# Fetch Robotics\\nThe model of the Fetch is based on models provided by Fetch. It was adapted and refined by OpenAI.\\n\\n# ShadowHand\\nThe model of the ShadowHand is based on models provided by ShadowRobot, and on code used under the following license:\\n\\n(C) Vikash Kumar, CSE, UW. Licensed under Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0. Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\\n\\n\\t                                 Apache License\\n\\t                           Version 2.0, January 2004\\n\\t                        http://www.apache.org/licenses/\\n\\n\\t   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n\\t   1. Definitions.\\n\\n\\t      \"License\" shall mean the terms and conditions for use, reproduction,\\n\\t      and distribution as defined by Sections 1 through 9 of this document.\\n\\n\\t      \"Licensor\" shall mean the copyright owner or entity authorized by\\n\\t      the copyright owner that is granting the License.\\n\\n\\t      \"Legal Entity\" shall mean the union of the acting entity and all\\n\\t      other entities that control, are controlled by, or are under common\\n\\t      control with that entity. For the purposes of this definition,\\n\\t      \"control\" means (i) the power, direct or indirect, to cause the\\n\\t      direction or management of such entity, whether by contract or\\n\\t      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n\\t      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n\\t      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n\\t      exercising permissions granted by this License.\\n\\n\\t      \"Source\" form shall mean the preferred form for making modifications,\\n\\t      including but not limited to software source code, documentation\\n\\t      source, and configuration files.\\n\\n\\t      \"Object\" form shall mean any form resulting from mechanical\\n\\t      transformation or translation of a Source form, including but\\n\\t      not limited to compiled object code, generated documentation,\\n\\t      and conversions to other media types.\\n\\n\\t      \"Work\" shall mean the work of authorship, whether in Source or\\n\\t      Object form, made available under the License, as indicated by a\\n\\t      copyright notice that is included in or attached to the work\\n\\t      (an example is provided in the Appendix below).\\n\\n\\t      \"Derivative Works\" shall mean any work, whether in Source or Object\\n\\t      form, that is based on (or derived from) the Work and for which the\\n\\t      editorial revisions, annotations, elaborations, or other modifications\\n\\t      represent, as a whole, an original work of authorship. For the purposes\\n\\t      of this License, Derivative Works shall not include works that remain\\n\\t      separable from, or merely link (or bind by name) to the interfaces of,\\n\\t      the Work and Derivative Works thereof.\\n\\n\\t      \"Contribution\" shall mean any work of authorship, including\\n\\t      the original version of the Work and any modifications or additions\\n\\t      to that Work or Derivative Works thereof, that is intentionally\\n\\t      submitted to Licensor for inclusion in the Work by the copyright owner\\n\\t      or by an individual or Legal Entity authorized to submit on behalf of\\n\\t      the copyright owner. For the purposes of this definition, \"submitted\"\\n\\t      means any form of electronic, verbal, or written communication sent\\n\\t      to the Licensor or its representatives, including but not limited to\\n\\t      communication on electronic mailing lists, source code control systems,\\n\\t      and issue tracking systems that are managed by, or on behalf of, the\\n\\t      Licensor for the purpose of discussing and improving the Work, but\\n\\t      excluding communication that is conspicuously marked or otherwise\\n\\t      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n\\t      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n\\t      on behalf of whom a Contribution has been received by Licensor and\\n\\t      subsequently incorporated within the Work.\\n\\n\\t   2. Grant of Copyright License. Subject to the terms and conditions of\\n\\t      this License, each Contributor hereby grants to You a perpetual,\\n\\t      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n\\t      copyright license to reproduce, prepare Derivative Works of,\\n\\t      publicly display, publicly perform, sublicense, and distribute the\\n\\t      Work and such Derivative Works in Source or Object form.\\n\\n\\t   3. Grant of Patent License. Subject to the terms and conditions of\\n\\t      this License, each Contributor hereby grants to You a perpetual,\\n\\t      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n\\t      (except as stated in this section) patent license to make, have made,\\n\\t      use, offer to sell, sell, import, and otherwise transfer the Work,\\n\\t      where such license applies only to those patent claims licensable\\n\\t      by such Contributor that are necessarily infringed by their\\n\\t      Contribution(s) alone or by combination of their Contribution(s)\\n\\t      with the Work to which such Contribution(s) was submitted. If You\\n\\t      institute patent litigation against any entity (including a\\n\\t      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n\\t      or a Contribution incorporated within the Work constitutes direct\\n\\t      or contributory patent infringement, then any patent licenses\\n\\t      granted to You under this License for that Work shall terminate\\n\\t      as of the date such litigation is filed.\\n\\n\\t   4. Redistribution. You may reproduce and distribute copies of the\\n\\t      Work or Derivative Works thereof in any medium, with or without\\n\\t      modifications, and in Source or Object form, provided that You\\n\\t      meet the following conditions:\\n\\n\\t      (a) You must give any other recipients of the Work or\\n\\t          Derivative Works a copy of this License; and\\n\\n\\t      (b) You must cause any modified files to carry prominent notices\\n\\t          stating that You changed the files; and\\n\\n\\t      (c) You must retain, in the Source form of any Derivative Works\\n\\t          that You distribute, all copyright, patent, trademark, and\\n\\t          attribution notices from the Source form of the Work,\\n\\t          excluding those notices that do not pertain to any part of\\n\\t          the Derivative Works; and\\n\\n\\t      (d) If the Work includes a \"NOTICE\" text file as part of its\\n\\t          distribution, then any Derivative Works that You distribute must\\n\\t          include a readable copy of the attribution notices contained\\n\\t          within such NOTICE file, excluding those notices that do not\\n\\t          pertain to any part of the Derivative Works, in at least one\\n\\t          of the following places: within a NOTICE text file distributed\\n\\t          as part of the Derivative Works; within the Source form or\\n\\t          documentation, if provided along with the Derivative Works; or,\\n\\t          within a display generated by the Derivative Works, if and\\n\\t          wherever such third-party notices normally appear. The contents\\n\\t          of the NOTICE file are for informational purposes only and\\n\\t          do not modify the License. You may add Your own attribution\\n\\t          notices within Derivative Works that You distribute, alongside\\n\\t          or as an addendum to the NOTICE text from the Work, provided\\n\\t          that such additional attribution notices cannot be construed\\n\\t          as modifying the License.\\n\\n\\t      You may add Your own copyright statement to Your modifications and\\n\\t      may provide additional or different license terms and conditions\\n\\t      for use, reproduction, or distribution of Your modifications, or\\n\\t      for any such Derivative Works as a whole, provided Your use,\\n\\t      reproduction, and distribution of the Work otherwise complies with\\n\\t      the conditions stated in this License.\\n\\n\\t   5. Submission of Contributions. Unless You explicitly state otherwise,\\n\\t      any Contribution intentionally submitted for inclusion in the Work\\n\\t      by You to the Licensor shall be under the terms and conditions of\\n\\t      this License, without any additional terms or conditions.\\n\\t      Notwithstanding the above, nothing herein shall supersede or modify\\n\\t      the terms of any separate license agreement you may have executed\\n\\t      with Licensor regarding such Contributions.\\n\\n\\t   6. Trademarks. This License does not grant permission to use the trade\\n\\t      names, trademarks, service marks, or product names of the Licensor,\\n\\t      except as required for reasonable and customary use in describing the\\n\\t      origin of the Work and reproducing the content of the NOTICE file.\\n\\n\\t   7. Disclaimer of Warranty. Unless required by applicable law or\\n\\t      agreed to in writing, Licensor provides the Work (and each\\n\\t      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n\\t      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n\\t      implied, including, without limitation, any warranties or conditions\\n\\t      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n\\t      PARTICULAR PURPOSE. You are solely responsible for determining the\\n\\t      appropriateness of using or redistributing the Work and assume any\\n\\t      risks associated with Your exercise of permissions under this License.\\n\\n\\t   8. Limitation of Liability. In no event and under no legal theory,\\n\\t      whether in tort (including negligence), contract, or otherwise,\\n\\t      unless required by applicable law (such as deliberate and grossly\\n\\t      negligent acts) or agreed to in writing, shall any Contributor be\\n\\t      liable to You for damages, including any direct, indirect, special,\\n\\t      incidental, or consequential damages of any character arising as a\\n\\t      result of this License or out of the use or inability to use the\\n\\t      Work (including but not limited to damages for loss of goodwill,\\n\\t      work stoppage, computer failure or malfunction, or any and all\\n\\t      other commercial damages or losses), even if such Contributor\\n\\t      has been advised of the possibility of such damages.\\n\\n\\t   9. Accepting Warranty or Additional Liability. While redistributing\\n\\t      the Work or Derivative Works thereof, You may choose to offer,\\n\\t      and charge a fee for, acceptance of support, warranty, indemnity,\\n\\t      or other liability obligations and/or rights consistent with this\\n\\t      License. However, in accepting such obligations, You may act only\\n\\t      on Your own behalf and on Your sole responsibility, not on behalf\\n\\t      of any other Contributor, and only if You agree to indemnify,\\n\\t      defend, and hold each Contributor harmless for any liability\\n\\t      incurred by, or claims asserted against, such Contributor by reason\\n\\t      of your accepting any such warranty or additional liability.\\n\\n\\t   END OF TERMS AND CONDITIONS\\n\\n\\t   APPENDIX: How to apply the Apache License to your work.\\n\\n\\t      To apply the Apache License to your work, attach the following\\n\\t      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n\\t      replaced with your own identifying information. (Don\\'t include\\n\\t      the brackets!)  The text should be enclosed in the appropriate\\n\\t      comment syntax for the file format. We also recommend that a\\n\\t      file or class name and description of purpose be included on the\\n\\t      same \"printed page\" as the copyright notice for easier\\n\\t      identification within third-party archives.\\n\\n\\t   Copyright [yyyy] [name of copyright owner]\\n\\n\\t   Licensed under the Apache License, Version 2.0 (the \"License\");\\n\\t   you may not use this file except in compliance with the License.\\n\\t   You may obtain a copy of the License at\\n\\n\\t       http://www.apache.org/licenses/LICENSE-2.0\\n\\n\\t   Unless required by applicable law or agreed to in writing, software\\n\\t   distributed under the License is distributed on an \"AS IS\" BASIS,\\n\\t   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n\\t   See the License for the specific language governing permissions and\\n\\t   limitations under the License.\\n\\nAdditional license notices:\\n\\n\\tSources\\t\\t: 1) Manipulator and Manipulation in High Dimensional Spaces. Vikash Kumar, Ph.D. Thesis, CSE, Univ. of Washington. 2016.\\n\\n\\tMujoco\\t\\t:: Advanced physics simulation engine\\n\\t\\tSource\\t\\t: www.roboti.us\\n\\t\\tVersion\\t\\t: 1.40\\n\\t\\tReleased \\t: 17Jan\\'17\\n\\n\\tAuthor\\t\\t:: Vikash Kumar\\n\\t\\tContacts \\t: vikash@openai.com\\n\\t\\tLast edits \\t: 3Apr\\'17\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Learning What To Do by Simulating the Past",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "deep-rlsp",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "HumanCompatibleAI",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HumanCompatibleAI/deep-rlsp/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nWe run DADS using the [code provided by the authors](https://github.com/google-research/dads). To reproduce the our experiments, we provide rollouts sampled from the `jumping` and `balancing` skills in the folder `skills/`.\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nWe are now ready to run the full Deep RLSP algorithm. The main file to run experiments is located at `src/deep_rlsp/run_mujoco.py`. The following commands reproduce the experiments discussed in the paper:\r\n\r\nPendulum\r\n```\r\npython src/deep_rlsp/run_mujoco.py with base pendulum n_sample_states=1\r\npython src/deep_rlsp/run_mujoco.py with base pendulum n_sample_states=10\r\npython src/deep_rlsp/run_mujoco.py with base pendulum n_sample_states=50\r\n```\r\n\r\nCheetah running forward\r\n```\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_fw n_sample_states=1\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_fw n_sample_states=10\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_fw n_sample_states=50\r\n\r\n```\r\n\r\nCheetah running backward\r\n```\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_bw n_sample_states=1\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_bw n_sample_states=10\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_bw n_sample_states=50\r\n```\r\n\r\nHopper\r\n```\r\npython src/deep_rlsp/run_mujoco.py with base hopper n_sample_states=1\r\npython src/deep_rlsp/run_mujoco.py with base hopper n_sample_states=10\r\npython src/deep_rlsp/run_mujoco.py with base hopper n_sample_states=50\r\n```\r\n\r\nCheetah balancing skill\r\n```\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_skill current_state_file=\"skills/balancing_rollouts.pkl\" n_sample_states=1\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_skill current_state_file=\"skills/balancing_rollouts.pkl\" n_sample_states=10\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_skill current_state_file=\"skills/balancing_rollouts.pkl\" n_sample_states=50\r\n```\r\n\r\nCheetah jumping skill\r\n```\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_skill current_state_file=\"skills/jumping_rollouts.pkl\" n_sample_states=1\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_skill current_state_file=\"skills/jumping_rollouts.pkl\" n_sample_states=10\r\npython src/deep_rlsp/run_mujoco.py with base cheetah_skill current_state_file=\"skills/jumping_rollouts.pkl\" n_sample_states=50\r\n```\r\n\r\nThe results will be saved in the `results/` folder. The trained (VAE and dynamics) models will be saved in `tf_ckpt`.\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 24,
      "date": "Thu, 23 Dec 2021 16:30:27 GMT"
    },
    "technique": "GitHub API"
  }
}