{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.00933"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/younggyoseo/Ape-X",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-14T15:23:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T13:30:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8408092599357732
      ],
      "excerpt": "An Implementation of Distributed Prioritized Experience Replay (Horgan et al. 2018) in PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9628523358545443,
        0.9868582840423067,
        0.9574973345345149
      ],
      "excerpt": "The paper proposes a distributed architecture for deep reinforcement learning with distributed prioritized experience replay. This enables a fast and broad exploration with many actors, which prevents model from learning suboptimal policy. \nThere are a few implementations which are optimized for powerful single machine with a lot of cores but I tried to implement Ape-X in a multi-node situation with AWS EC2 instances. ZeroMQ, AsyncIO, Multiprocessing are really helpful tools for this.  \nThere are still performance issues with replay server which are caused by the shared memory lock and hyperparameter tuning but this works anyway. Also, there are still some parts  I hard-coded for convenience. I'm trying to improve many parts and really appreciate your help. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.924963416907757
      ],
      "excerpt": "Added gif to show how agent really acts and scores in SeaquestNoFrameskip-v4. I recently noticed that the performance(score) of actor is much better in evaluation setting(epsilon=0.) than the plot 1. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868906681231346
      ],
      "excerpt": "Be careful not to include your private AWS secret/access key in public repository while following instructions! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8379657855918683
      ],
      "excerpt": "Terraform is a useful IaC(Infrastructure as Code) tool. You can start multiple instances with only one command terraform apply and destroy all instances with terraform destroy. For more information, See Terraform's website tutorial and documentation. I have already included all necessary commands in deploy directory. Important files are deploy.tf, variables.tf, terraform.tfvars. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9188674805006696
      ],
      "excerpt": "To see how trained model works, See tensorboard which includes actor with larget actor id which has smallest epsilon value. You could easily access tensorboard by entering http://public_ip:6006. Or you could add a evaluator node with a new instance but this costs you more money :( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch Implementation of Distributed Prioritized Experience Replay(Ape-X)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/belepi93/Ape-X/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Wed, 29 Dec 2021 09:19:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/younggyoseo/Ape-X/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "younggyoseo/Ape-X",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/create_env.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/run.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/deploy/evaluator.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/deploy/actor.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/deploy/replay.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/deploy/learner.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/deploy/packer/ape_x_gpu.sh",
      "https://raw.githubusercontent.com/belepi93/Ape-X/master/deploy/packer/ape_x_cpu.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8885267496772845,
        0.8885267496772845,
        0.8885267496772845
      ],
      "excerpt": "    packer build -var-file=variables.json ape_x_actor.json \n    packer build -var-file=variables.json ape_x_replay.json \n    packer build -var-file=variables.json ape_x_learner.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8121790024717835
      ],
      "excerpt": "Run terraform apply and terraform will magically create all necessary instances and training will start. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/younggyoseo/Ape-X/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "HCL",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Ape-X",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Ape-X",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "younggyoseo",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/younggyoseo/Ape-X/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython 3.7\nnumpy==1.16.2\ntorch==1.0.0.dev20190303\npyzmq==18.0.0\nopencv-python==4.0.0.21\ntensorflow==1.13.0\ntensorboardX==1.6\ngym==0.12.0\ngym[atari]\n```\n\n1. `numpy=1.16.0` version has memory leak issue with pickle so try not to use numpy 1.16.0. \n2. CPU performance of `pytorch-nightly-cpu` from conda is much better than normal `torch`\n3. `tensorflow` is necessary to use tensorboardX.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 119,
      "date": "Wed, 29 Dec 2021 09:19:38 GMT"
    },
    "technique": "GitHub API"
  }
}