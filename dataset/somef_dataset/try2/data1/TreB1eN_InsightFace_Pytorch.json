{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.07698",
      "https://arxiv.org/abs/1804.07573",
      "https://arxiv.org/abs/1607.08221",
      "https://arxiv.org/abs/1710.08092"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- This repo is mainly inspired by [deepinsight/insightface](https://github.com/deepinsight/insightface) and [InsightFace_TF](https://github.com/auroua/InsightFace_TF)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | calfw(%) | cplfw(%) | vgg2_fp(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | calfw(%) | cplfw(%) | vgg2_fp(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9554441738822752
      ],
      "excerpt": "Video Detection Demo @Youtube \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TreB1eN/InsightFace_Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-30T22:38:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T06:56:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.960618122846276,
        0.9834861013344924,
        0.9958335494771302,
        0.9236640497660228,
        0.9190002549696976
      ],
      "excerpt": "Pytorch0.4.1 codes for InsightFace \nThis repo is a reimplementation of Arcface(paper), or Insightface(github) \nFor models, including the pytorch implementation of the backbone modules of Arcface and MobileFacenet \nCodes for transform MXNET data records in Insightface(github) to Image Datafolders are provided \nPretrained models are posted, include the MobileFacenet and IR-SE50 in the original paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8940150500522919
      ],
      "excerpt": "PRs are welcome, in case that I don't have the resource to train some large models like the 100 and 151 layers model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch0.4.1 codes for InsightFace",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If more than 1 image appears in one folder, an average embedding will be calculated\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TreB1eN/InsightFace_Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 367,
      "date": "Tue, 28 Dec 2021 21:48:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TreB1eN/InsightFace_Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "TreB1eN/InsightFace_Pytorch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/TreB1eN/InsightFace_Pytorch/master/evaluate_model.ipynb",
      "https://raw.githubusercontent.com/TreB1eN/InsightFace_Pytorch/master/mtcnn_pytorch/get_aligned_face_from_mtcnn.ipynb",
      "https://raw.githubusercontent.com/TreB1eN/InsightFace_Pytorch/master/mtcnn_pytorch/refine_faces.ipynb",
      "https://raw.githubusercontent.com/TreB1eN/InsightFace_Pytorch/master/mtcnn_pytorch/test_on_images.ipynb",
      "https://raw.githubusercontent.com/TreB1eN/InsightFace_Pytorch/master/mtcnn_pytorch/try_mtcnn_step_by_step.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "download the refined dataset: (emore recommended)\n\n- [emore dataset @ BaiduDrive](https://pan.baidu.com/s/1eXohwNBHbbKXh5KHyItVhQ), [emore dataset @ Dropbox](https://www.dropbox.com/s/wpx6tqjf0y5mf6r/faces_ms1m-refine-v2_112x112.zip?dl=0)\n- More Dataset please refer to the [original post](https://github.com/deepinsight/insightface/wiki/Dataset-Zoo)\n\n**Note:** If you use the refined [MS1M](https://arxiv.org/abs/1607.08221) dataset and the cropped [VGG2](https://arxiv.org/abs/1710.08092) dataset, please cite the original papers.\n\n- after unzip the files to 'data' path, run :\n\n  ```\n  python prepare_data.py\n  ```\n\n  after the execution, you should find following structure:\n\n```\nfaces_emore/\n            ---> agedb_30\n            ---> calfw\n            ---> cfp_ff\n            --->  cfp_fp\n            ---> cfp_fp\n            ---> cplfw\n            --->imgs\n            ---> lfw\n            ---> vgg2_fp\n```\n\n------\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Provide the face images your want to detect in the data/face_bank folder, and guarantee it have a structure like following:\n\n```\ndata/facebank/\n        ---> id1/\n            ---> id1_1.jpg\n        ---> id2/\n            ---> id2_1.jpg\n        ---> id3/\n            ---> id3_1.jpg\n           ---> id3_2.jpg\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8030466121301313
      ],
      "excerpt": "3 or you can put any preexisting photo into the facebank directory, the file structure is as following: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8553269409337471
      ],
      "excerpt": "download the desired weights to model folder: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9447871161116602
      ],
      "excerpt": "python take_pic.py -n name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "             photo1.jpg \n             photo2.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "             photo1.jpg \n             photo2.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python face_verify.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9282543377520664
      ],
      "excerpt": "python infer_on_video.py -f [video file name] -s [save file name] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8595722537188738
      ],
      "excerpt": "python train.py -b [batch_size] -lr [learning rate] -e [epochs] \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TreB1eN/InsightFace_Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Dan Antoshchenko\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "InsightFace_Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "InsightFace_Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "TreB1eN",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TreB1eN/InsightFace_Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1299,
      "date": "Tue, 28 Dec 2021 21:48:58 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- clone\n\n  ```\n  git clone https://github.com/TropComplique/mtcnn-pytorch.git\n  ```\n\n",
      "technique": "Header extraction"
    }
  ]
}