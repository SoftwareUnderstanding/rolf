{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1505.04597\n\n## Functionality & Usage\n\n### Running the segmentation system\n\nThe model will work by simply running the \u201csegmentation_model.py\u201d file in the terminal (assuming all the necessary dependencies specified in \u201crequirements.txt\u201d are installed"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/irenazra/skin_tumor_segmentation_system",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-04T00:53:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-03T06:55:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9512161876247676
      ],
      "excerpt": "This is a segmentation system to detect the outlines of skin tumors to aid melanoma detection. This system is based on U-Net, which is an arhictecture proposed by Olaf Ronneberger, Philipp Fischer, and Thomas Box in 2015: https://arxiv.org/abs/1505.04597 \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/irenazra/melanoma_segmentation_Unet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 23:09:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/irenazra/skin_tumor_segmentation_system/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "irenazra/skin_tumor_segmentation_system",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/irenazra/melanoma_segmentation_Unet/main/Fastai_PoC.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The model should work properly with any image dataset (not just skin images) as long as the following holds:\n\n- All original images are stored in the \u201ctraining\u201d  folder and are in JPG format\n- All target masks are stored in the \u201cmasks\u201d folder and are in PNG format\n- The original images\u2019 file index within the folder matches that of the masks\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/irenazra/skin_tumor_segmentation_system/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "U-net for Melanoma Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "skin_tumor_segmentation_system",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "irenazra",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/irenazra/skin_tumor_segmentation_system/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The model will work by simply running the \u201csegmentation_model.py\u201d file in the terminal (assuming all the necessary dependencies specified in \u201crequirements.txt\u201d are installed). By running the file the model will start training using the number of epochs specified in the main function. In every validation  round, the model will write/overwrite image files into the \u201cPreds\u201d folder. These images contain: an actual image, the target layer, and the model\u2019s prediction. \n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 23:09:15 GMT"
    },
    "technique": "GitHub API"
  }
}