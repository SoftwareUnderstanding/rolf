{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Bao-Jiarong/ResNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-07T08:15:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-10T23:32:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9267213667773206,
        0.8594870221931028,
        0.9855305610764046,
        0.8494624649358395,
        0.9228066043884743
      ],
      "excerpt": "This repository includes ResNet18, ResNet34, ResNet50, ResNet101, ResNet152 in Tensorflow 2. \nI used tf.keras.Model and tf.layers.Layer instead of tf.keras.models.Sequential. \nThis allows us to customize and have full control of the model. \nAlso, I used custom training instead of relying on the fit() function. \nIn case we have very huge dataset, I applied online loading (by batch) instead of loading the data completely at the beginning. This will eventually not consume the memory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851152853593441
      ],
      "excerpt": "VGG-19 model . Middle: a plain network with 34 parameter layers . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9905345756627586
      ],
      "excerpt": "Table 1. Architectures for ImageNet. Building blocks are shown in brackets (see also Fig. 5), with the numbers of blocks stacked. Downsampling is performed by conv3 1, conv4 1, and conv5 1 with a stride of 2.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9738451608700828
      ],
      "excerpt": "Please refer to the original paper of ResNet here for more information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8161067661381181
      ],
      "excerpt": "Since datasets are somehow huge and painfully slow in training ,I decided to make number of filters variable. If you want to run it in your PC, you can reduce the number of filters into 32,16,8,6,4 or 2. (64 is by default). For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository includes ResNet18, ResNet34, ResNet50, ResNet101, ResNet152 in Tensorflow 2.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Bao-Jiarong/ResNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 00:58:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Bao-Jiarong/ResNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Bao-Jiarong/ResNet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "Note 1:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "Note 2 :  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8579194683660055
      ],
      "excerpt": "I used tf.keras.Model and tf.layers.Layer instead of tf.keras.models.Sequential. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411587166333475
      ],
      "excerpt": "<img src=\"img/2.png\" align=\"center\" width=\"500\" height=\"1000\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8841361390320115
      ],
      "excerpt": "<img src=\"img/3.png\" width=\"800\" height=\"400\"/>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8710751192936325
      ],
      "excerpt": "<img src=\"img/111.png\" width=\"500\" height=\"250\"/>    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8841361390320115
      ],
      "excerpt": "<img src=\"img/mnist.png\" width=\"400\" height=\"350\"/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Bao-Jiarong/ResNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# ResNet Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ResNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Bao-Jiarong",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Bao-Jiarong/ResNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython==3.7.0\nnumpy==1.18.1\n```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 00:58:27 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Training & Prediction can be run as follows:    \n`python train.py train`  \n`python train.py predict img.png`  \n\n\n",
      "technique": "Header extraction"
    }
  ]
}