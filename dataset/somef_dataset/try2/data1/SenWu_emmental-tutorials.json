{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/senwu/emmental-tutorials",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-23T04:02:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-14T20:25:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We have several `introductory tutorials <intro/>`_ to help get you started with using Emmental.\n\nChexnet Tutorial\n````````````````\n\nIn this `tutorial <chexnet/>`_, we build an Emmental application to predicted 14 common diagnoses using convolutional neural networks in over 100,000 NIH chest x-rays proposed from the `CheXNet paper`_.\n\nGLUE Tutorial\n`````````````\n\nIn this `tutorial <glue/>`_, we build an Emmental application to tackle the General Language Understanding Evaluation (GLUE) benchmark which is a collection of resources for training, evaluating, and analyzing natural language understanding systems.\n\nSuperGLUE Tutorial\n``````````````````\n\nIn this `tutorial <superglue/>`_, we build an Emmental application to tackle `SuperGLUE`_, a new benchmark in the same style as GLUE with a set of more difficult language understanding tasks. Our submission achieved a new `start-of-the-art score`_ on June 15, 2019, under the name of Stanford Hazy Research. This code has also been refactored and used in the `Snorkel`_ project in the `snorkel-superglue`_ repository.\n\nData augmentation Tutorial\n``````````````````````````\n\nIn this `tutorial <data_augmentation/>`_, we build an Emmental application to tackle image classification benchmarks (i.e. MNIST, CIFAR-10, and CIFAR-100) to study how to make data augmentation more efficient. More specifically, we propose an uncertainty-based random sampling scheme which, among the transformed data points, picks those with the highest losses, i.e. those \"providing the most information\".\n\nText classification Tutorial\n````````````````````````````\n\nIn this `tutorial <text_classification/>`_, we build an Emmental application to tackle the text classification. More specifically, we analyze how information transfer among different tasks in multi-task learning settings.\n\nMultilabel classification Tutorial\n``````````````````````````````````\n\nIn this `tutorial <multilabel_classification/>`_, we build an Emmental application to tackle the multilabel classification problem. More specifically, we identify and classify toxic online comments into six categories: toxic, severe_toxic, obscene, threat, insult, and identity_hate. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A collection of simple tutorials for using Emmental.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SenWu/emmental-tutorials/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Wed, 22 Dec 2021 21:02:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/senwu/emmental-tutorials/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "senwu/emmental-tutorials",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/text_classification/download_data.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/text_classification/run_text_classification.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/glue/run_glue.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/multilabel_classification/run.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/superglue/download_data.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/superglue/run_superglue.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/data_augmentation/run.sh",
      "https://raw.githubusercontent.com/SenWu/emmental-tutorials/master/chexnet/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For the Python dependencies, we recommend using a\n`virtualenv`_. Once you have cloned the\nrepository, change directories to the root of the repository and run\n\n.. code:: bash\n\n    virtualenv -p python3 .venv\n\n\nOnce the virtual environment is created, activate it by running:\n\n.. code:: bash\n\n    source .venv/bin/activate\n\n\nAny Python libraries installed will now be contained within this virtual\nenvironment. To deactivate the environment, simply run:\n\n.. code:: bash\n\n    deactivate\n\n\nThen, install Emmental and any other python dependencies by running:\n\n.. code:: bash\n\n    pip install -r requirements.txt\n\n\n.. _virtualenv: https://virtualenv.pypa.io/en/stable/\n.. _`CheXNet paper`: https://arxiv.org/pdf/1711.05225\n.. _`start-of-the-art score`: https://super.gluebenchmark.com/leaderboard\n.. _`SuperGLUE`: https://super.gluebenchmark.com\n.. _`Snorkel`: http://snorkel.stanford.edu\n.. _`snorkel-superglue`: https://github.com/HazyResearch/snorkel-superglue\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/senwu/emmental-tutorials/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 \\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Emmental Tutorials",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "emmental-tutorials",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "senwu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/senwu/emmental-tutorials/blob/master/README.rst",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Wed, 22 Dec 2021 21:02:08 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We have several `introductory tutorials <intro/>`_ to help get you started with using Emmental.\n\nChexnet Tutorial\n````````````````\n\nIn this `tutorial <chexnet/>`_, we build an Emmental application to predicted 14 common diagnoses using convolutional neural networks in over 100,000 NIH chest x-rays proposed from the `CheXNet paper`_.\n\nGLUE Tutorial\n`````````````\n\nIn this `tutorial <glue/>`_, we build an Emmental application to tackle the General Language Understanding Evaluation (GLUE) benchmark which is a collection of resources for training, evaluating, and analyzing natural language understanding systems.\n\nSuperGLUE Tutorial\n``````````````````\n\nIn this `tutorial <superglue/>`_, we build an Emmental application to tackle `SuperGLUE`_, a new benchmark in the same style as GLUE with a set of more difficult language understanding tasks. Our submission achieved a new `start-of-the-art score`_ on June 15, 2019, under the name of Stanford Hazy Research. This code has also been refactored and used in the `Snorkel`_ project in the `snorkel-superglue`_ repository.\n\nData augmentation Tutorial\n``````````````````````````\n\nIn this `tutorial <data_augmentation/>`_, we build an Emmental application to tackle image classification benchmarks (i.e. MNIST, CIFAR-10, and CIFAR-100) to study how to make data augmentation more efficient. More specifically, we propose an uncertainty-based random sampling scheme which, among the transformed data points, picks those with the highest losses, i.e. those \"providing the most information\".\n\nText classification Tutorial\n````````````````````````````\n\nIn this `tutorial <text_classification/>`_, we build an Emmental application to tackle the text classification. More specifically, we analyze how information transfer among different tasks in multi-task learning settings.\n\nMultilabel classification Tutorial\n``````````````````````````````````\n\nIn this `tutorial <multilabel_classification/>`_, we build an Emmental application to tackle the multilabel classification problem. More specifically, we identify and classify toxic online comments into six categories: toxic, severe_toxic, obscene, threat, insult, and identity_hate. \n\n",
      "technique": "Header extraction"
    }
  ]
}