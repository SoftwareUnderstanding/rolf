{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1706.08500"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShwanMario/ASWD",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-28T19:14:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-06T17:04:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Two experiments are included in this repository, where benchmarks are from the paper [Generalized Sliced Wasserstein Distances](http://papers.nips.cc/paper/8319-generalized-sliced-wasserstein-distances) and the paper [Distributional Sliced-Wasserstein and Applications to Generative Modeling](https://arxiv.org/pdf/2002.07367.pdf), respectively. The first one is on the task of sliced Wasserstein flow, and the second one is on generative modellings with GANs. For more details and setups, please refer to the original paper **Augmented Sliced Wasserstein Distances**.\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9687683878408837
      ],
      "excerpt": "This repository provides the code to reproduce the experimental results in the paper Augmented Sliced Wasserstein Distances. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8535343518638301
      ],
      "excerpt": "Two datasets are used in this repository, namely the CIFAR10 dataset and CELEBA dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.898881066212001
      ],
      "excerpt": "To calculate the Fr\u00e9chet Inception Distance (FID score), precalculated statistics for datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.857599597826528,
        0.9356596286185364
      ],
      "excerpt": "- utils.py : contains implementations of different sliced-based Wasserstein distances. \n- TransformNet.py : edit this file to modify architectures of neural networks used to map samples.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8398053792837931,
        0.8420718266673336
      ],
      "excerpt": "- DCGANAE.py : neural network architectures and optimization objective for training GANs. \n- fid_score.py : functions for calculating statistics (mean & covariance matrix) of distributions of images and the FID score between two distributions of images. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910433064166383,
        0.9550574770024107,
        0.8299488375810373,
        0.9883185103623223,
        0.8201051770382274
      ],
      "excerpt": "--niter number of iteration, available for the ASWD, MSWD and DSWD, default as 5. \n--lam coefficient of regularization term, available for the ASWD and DSWD, default as 0.5. \n--r parameter in the circular defining function, available for GSWD, default as 1000. \nThe code of generative modelling example is based on the implementation of DSWD by VinAI Research. \nThe pytorch code for calculating the FID score is from https://github.com/mseitzer/pytorch-fid. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Augmented Sliced Wasserstein Distances",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShwanMario/ASWD/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Fri, 24 Dec 2021 20:46:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShwanMario/ASWD/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShwanMario/ASWD",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ShwanMario/ASWD/master/Sliced%20Waaserstein%20Flow.ipynb",
      "https://raw.githubusercontent.com/ShwanMario/ASWD/master/SWAE/examples/SWAE.ipynb",
      "https://raw.githubusercontent.com/ShwanMario/ASWD/master/colour_transferring/colour_transferring.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9989972212380818,
        0.9979947896609701
      ],
      "excerpt": "To install the required python packages, run the following command: \npip install -r requirements.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9584505993919413
      ],
      "excerpt": "The pytorch code for calculating the FID score is from https://github.com/mseitzer/pytorch-fid. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8114508465543033
      ],
      "excerpt": "CIFAR 10 (calculated on all training samples) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8035586247279871
      ],
      "excerpt": "./result/CIFAR/ model's weights and losses in the CIFAR10 experiment are stored in this directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8957058170296036
      ],
      "excerpt": "- main.py : run this file to conduct experiments. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ShwanMario/ASWD/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Augmented-Sliced-Wasserstein-Distances",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ASWD",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ShwanMario",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ShwanMario/ASWD/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 20:46:22 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The generative modelling experiment evaluates the performances of GANs trained with different sliced-based Wasserstein metrics. To train and evaluate the model, run the following command:\r\n\r\n```\r\npython main.py  --model-type ASWD --dataset CIFAR --epochs 200 --num-projection 1000 --batch-size 512 --lr 0.0005\r\n```\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}