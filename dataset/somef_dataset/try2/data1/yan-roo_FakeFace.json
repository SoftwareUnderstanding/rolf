{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [Kim Seonghyeon](https://github.com/rosinality)\r\n* [StyleGAN \u2014 Official TensorFlow Implementation](https://github.com/NVlabs/stylegan)\r\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.04948"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9171343464722128,
        0.8123419845023875
      ],
      "excerpt": "Implementation of A Style-Based Generator Architecture for Generative Adversarial Networks (https://arxiv.org/abs/1812.04948) in PyTorch \nBased on https://github.com/rosinality/style-based-gan-pytorch \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yan-roo/FakeFace",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-03T08:41:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-29T12:15:50Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.822413766199971
      ],
      "excerpt": "Resolution | Model & Optimizer  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "StyleGAN - Pytorch Implementation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yan-roo/FakeFace/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 21:58:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yan-roo/FakeFace/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yan-roo/FakeFace",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Download the CelebA dataset. (Default resolution is 178x218)\r\n```\r\npython helper.py\r\n```\r\nCrop the face only. (Remember to uncomment the last [line 269](https://github.com/yan-roo/FakeFace/blob/master/helper.py#L269))\r\n```\r\npython helper.py --width 128 --height 128\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\na. Create a conda virtual environment and activate it.\r\n```\r\nconda create -n fakeface python=3.7 -y\r\nconda activate fakeface\r\n```\r\n\r\nb. Install PyTorch and torchvision following the [official instructions](https://pytorch.org/), e.g.,\r\n```\r\nconda install pytorch torchvision cudatoolkit=10.1 -c pytorch\r\n```\r\n\r\nc. Download the source code and pip install the requirements.\r\n```\r\ngit clone https://github.com/yan-roo/FakeFace.git\r\npip install -r requirements.txt\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8301337625294128
      ],
      "excerpt": "Based on https://github.com/rosinality/style-based-gan-pytorch \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.931114988998388,
        0.931114988998388
      ],
      "excerpt": "  <img src=\"doc/sample_celeba.png\" width=\"45%\" />    \n  <img src=\"doc/sample_mixing_celeba.png\" width=\"45%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.931114988998388,
        0.931114988998388
      ],
      "excerpt": "  <img src=\"doc/sample_celeba_crop.png\" width=\"45%\" />    \n  <img src=\"doc/sample_mixing_celeba_crop.png\" width=\"45%\" /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9142277768577319,
        0.9586367027364855,
        0.9191899074336993,
        0.9325173468654927,
        0.8292634037983012,
        0.9528085573051096
      ],
      "excerpt": "python prepare_data.py --out data . \npython train.py --mixing data \npython train.py --mixing --loss r1 --sched --max_size 1024 data \npython train.py --mixing data --ckpt checkpoint/*.model --phase 1000000 \nThe generate size setting should be the same as the checkpoint. \npython generate.py --size 128 --sample 1 --style_mixing 1 checkpoint/*.model \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yan-roo/FakeFace/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Kim Seonghyeon\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Style-Based GAN in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FakeFace",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yan-roo",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yan-roo/FakeFace/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Sat, 25 Dec 2021 21:58:05 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "stylegan",
      "pytorch",
      "celeba"
    ],
    "technique": "GitHub API"
  }
}