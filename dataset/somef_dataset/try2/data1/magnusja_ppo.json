{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. [Trust Region Policy Optimization](https://arxiv.org/pdf/1502.05477.pdf) (Schulman et al., 2016)\n2. [Emergence of Locomotion Behaviours in Rich Environments](https://arxiv.org/pdf/1707.02286.pdf) (Heess et al., 2017)\n3. [High-Dimensional Continuous Control Using Generalized Advantage Estimation](https://arxiv.org/pdf/1506.02438.pdf) (Schulman et al., 2016)\n4. [GitHub Repository with several helpful implementation ideas](https://github.com/joschu/modular_rl) (Schulman)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9251858787057007
      ],
      "excerpt": "By Patrick Coady: Learning Artificial Intelligence \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/magnusja/ppo",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-02-12T17:49:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-27T05:51:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The same learning algorithm was used to train agents for each of the ten OpenAI Gym MuJoCo continuous control environments. The only difference between evaluations was the number of episodes used per training batch, otherwise all options were the same. The exact code used to generate the OpenAI Gym submissions is in the **`aigym_evaluation`** branch.\n\nHere are the key points:\n\n* Proximal Policy Optimization (similar to TRPO, but uses gradient descent with KL loss terms)  \\[1\\] \\[2\\]\n* Value function approximated with 3 hidden-layer NN (tanh activations):\n    * hid1 size = obs_dim x 10\n    * hid2 size = geometric mean of hid1 and hid3 sizes\n    * hid3 size = 5\n* Policy is a multi-variate Gaussian parameterized by a 3 hidden-layer NN (tanh activations):\n    * hid1 size = obs_dim x 10\n    * hid2 size = geometric mean of hid1 and hid3 sizes\n    * hid3 size = action_dim x 10\n    * Diagonal covariance matrix variables are separately trained\n* Generalized Advantage Estimation (gamma = 0.995, lambda = 0.98) \\[3\\] \\[4\\]\n* ADAM optimizer used for both neural networks\n* The policy is evaluated for 20 episodes between updates, except:\n    * 50 episodes for Reacher\n    * 5 episodes for Swimmer\n    * 5 episodes for HalfCheetah\n    * 5 episodes for HumanoidStandup\n* Value function is trained on current batch + previous batch\n* KL loss factor and ADAM learning rate are dynamically adjusted during training\n* Policy and Value NNs built with TensorFlow\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Proximal Policy Optimization with TensorFlow and OpenAI Gym",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/magnusja/ppo/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sun, 26 Dec 2021 17:25:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/magnusja/ppo/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "magnusja/ppo",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/inverted_double_pendulum.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/inverted_pendulum.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/hopper.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/mujoco_dimension_sizes.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/reacher.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/humanoid_standup.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/humanoid.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/walker2d.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/half_cheetah.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/swimmer.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/notebooks/ant.ipynb",
      "https://raw.githubusercontent.com/magnusja/ppo/master/src/view_training.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/magnusja/ppo/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 pat-coady\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Proximal Policy Optimization with Generalized Advantage Estimation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ppo",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "magnusja",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/magnusja/ppo/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.5\n* The Usual Suspects: NumPy, matplotlib, scipy\n* TensorFlow\n* gym - [installation instructions](https://gym.openai.com/docs)\n* [MuJoCo](http://www.mujoco.org/) (30-day trial available and free to students)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Sun, 26 Dec 2021 17:25:56 GMT"
    },
    "technique": "GitHub API"
  }
}