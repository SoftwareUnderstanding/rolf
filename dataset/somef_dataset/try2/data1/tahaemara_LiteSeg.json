{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1912.06683",
      "https://arxiv.org/abs/1606.02147, 2016.\n\n4.  E. Romera, J. M. Alvarez, L. M. Bergasa, and R. Arroyo, \u201cEfficient convnet for real-time semantic segmentation,\u201d in 2017 IEEE Intelligent Vehicles Symposium (IV), pp. 1789\u20131794, IEEE, 2017.\n\n5.  M. Siam, M. Gamal, M. Abdel-Razek, S. Yogamani, and M. Jager- sand, \u201cRtseg: Real-time semantic segmentation comparative study,\u201d in 2018 25th IEEE International Conference on Image Processing (ICIP), pp. 1603\u20131607, IEEE, 2018.\n\n6.  H. Park, Y. Yoo, G. Seo, D. Han, S. Yun, and N. Kwak, \u201cConcentrated- comprehensive convolutions for lightweight semantic segmentation,\u201d arXiv preprint https://arxiv.org/abs/1812.04920, 2018.\n\n7.  W. Wang and Z. Pan, \u201cDsnet for real-time driving scene semantic segmentation,\u201d arXiv preprint https://arxiv.org/abs/1812.07049, 2018.\n\n### Similar Repositories\n- <a href=\"https://github.com/qubvel/segmentation_models.pytorch\" target=\"_blank\">Segmentation models with pretrained backbones PyTorch</a>\n- <a href=\"https://github.com/jfzhang95/pytorch-deeplab-xception\" target=\"_blank\">DeepLab v3+ model in PyTorch</a>\n\n\n## License\n\nThis software is released under a creative commons license which allows for personal and research use only. For a commercial license please contact the authors @ [taha@emaraic.com](mailto:taha@emaraic.com). You can view a license summary here: http://creativecommons.org/licenses/by-nc/4.0/",
      "https://arxiv.org/abs/1812.04920, 2018.\n\n7.  W. Wang and Z. Pan, \u201cDsnet for real-time driving scene semantic segmentation,\u201d arXiv preprint https://arxiv.org/abs/1812.07049, 2018.\n\n### Similar Repositories\n- <a href=\"https://github.com/qubvel/segmentation_models.pytorch\" target=\"_blank\">Segmentation models with pretrained backbones PyTorch</a>\n- <a href=\"https://github.com/jfzhang95/pytorch-deeplab-xception\" target=\"_blank\">DeepLab v3+ model in PyTorch</a>\n\n\n## License\n\nThis software is released under a creative commons license which allows for personal and research use only. For a commercial license please contact the authors @ [taha@emaraic.com](mailto:taha@emaraic.com). You can view a license summary here: http://creativecommons.org/licenses/by-nc/4.0/",
      "https://arxiv.org/abs/1812.07049, 2018.\n\n### Similar Repositories\n- <a href=\"https://github.com/qubvel/segmentation_models.pytorch\" target=\"_blank\">Segmentation models with pretrained backbones PyTorch</a>\n- <a href=\"https://github.com/jfzhang95/pytorch-deeplab-xception\" target=\"_blank\">DeepLab v3+ model in PyTorch</a>\n\n\n## License\n\nThis software is released under a creative commons license which allows for personal and research use only. For a commercial license please contact the authors @ [taha@emaraic.com](mailto:taha@emaraic.com). You can view a license summary here: http://creativecommons.org/licenses/by-nc/4.0/"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1.  V. Badrinarayanan, A. Kendall, and R. Cipolla, \u201cSegnet: A deep con- volutional encoder-decoder architecture for image segmentation,\u201d IEEE transactions on pattern analysis and machine intelligence, vol. 39, no. 12, pp. 2481\u20132495, 2017.\n\n2.  S. Mehta, M. Rastegari, A. Caspi, L. Shapiro, and H. Hajishirzi, \u201cEspnet: Efficient spatial pyramid of dilated convolutions for semantic segmentation,\u201d in Proceedings of the European Conference on Computer Vision (ECCV), pp. 552\u2013568, 2018.\n\n3.  A. Paszke, A. Chaurasia, S. Kim, and E. Culurciello, \u201cEnet: A deep neural network architecture for real-time semantic segmentation,\u201d arXiv preprint arXiv:1606.02147, 2016.\n\n4.  E. Romera, J. M. Alvarez, L. M. Bergasa, and R. Arroyo, \u201cEfficient convnet for real-time semantic segmentation,\u201d in 2017 IEEE Intelligent Vehicles Symposium (IV), pp. 1789\u20131794, IEEE, 2017.\n\n5.  M. Siam, M. Gamal, M. Abdel-Razek, S. Yogamani, and M. Jager- sand, \u201cRtseg: Real-time semantic segmentation comparative study,\u201d in 2018 25th IEEE International Conference on Image Processing (ICIP), pp. 1603\u20131607, IEEE, 2018.\n\n6.  H. Park, Y. Yoo, G. Seo, D. Han, S. Yun, and N. Kwak, \u201cConcentrated- comprehensive convolutions for lightweight semantic segmentation,\u201d arXiv preprint arXiv:1812.04920, 2018.\n\n7.  W. Wang and Z. Pan, \u201cDsnet for real-time driving scene semantic segmentation,\u201d arXiv preprint arXiv:1812.07049, 2018.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@INPROCEEDINGS{8945975, \nauthor={T. {Emara} and H. E. A. E. {Munim} and H. M. {Abbas}}, \nbooktitle={2019 Digital Image Computing: Techniques and Applications (DICTA)}, \ntitle={LiteSeg: A Novel Lightweight ConvNet for Semantic Segmentation}, \nyear={2019}, \npages={1-7}, \ndoi={10.1109/DICTA47822.2019.8945975}, }\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8433769586533186
      ],
      "excerpt": "Peper \"LiteSeg: A Litewiegth ConvNet for Semantic Segmentation\", accpeted in DICTA 2019. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tahaemara/LiteSeg",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-01T14:45:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T07:07:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.98934765840318
      ],
      "excerpt": "This is the Pytorch implementation of LiteSeg a real time semantic segmenattaion model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8081097482830811
      ],
      "excerpt": "+ PRETRAINED_SHUFFLENET, PRETRAINED_MOBILENET, and PRETRAINED_DarkNET19 parameters define locations of pre-trained backbone networks which can be downloaded from these links Shufflenet, Mobilenet, and Darknet19 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9099262731254697
      ],
      "excerpt": "Comparing results with other lightweight models: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9075225182967086
      ],
      "excerpt": "Computational performance (FPS) on Nividia GTX 1080 Ti for the image resultion 360x640 and the full resultion 1024x2048. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch implementation for LiteSeg",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tahaemara/LiteSeg/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Sat, 25 Dec 2021 20:47:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tahaemara/LiteSeg/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tahaemara/LiteSeg",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the **demo example** you **need only** Pytorch, Numpy, and Pillow dependecies.\n\n**Main Dependencies:**\n- Pytorch 0.4.1\n- OpenCV 3.4.2\n- pyyaml 3.13\n- [LightNet](https://gitlab.com/tahaemara/lightnet.git)\n\nInorder to use this code you must install Anaconda and then apply the following steps:\n+ Create the environment from the environment.yml file:\n\n```\nconda env create -f environment.yml\n```\n+ Activate liteseg environment\n\n```\nsource activate liteseg\n```\n\n+ Install [LightNet](https://gitlab.com/tahaemara/lightnet.git) fork to be able to use Darknet weights \n\n```\ngit clone https://gitlab.com/tahaemara/lightnet.git\n\ncd lightnet/\n\npip install -r requirements.txt\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9530972037185296
      ],
      "excerpt": "In case of having any problem while installing the dependencies you can igonre the message. Then activate liteseg environment and start to use the code. If any error message appears in a form of ModuleNotFoundError: No module named 'xxxx', you can just search google how to install package xxxx with conda or pip. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796343039758191
      ],
      "excerpt": "<a href=\"https://github.com/qubvel/segmentation_models.pytorch\" target=\"_blank\">Segmentation models with pretrained backbones PyTorch</a> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8737608841652998
      ],
      "excerpt": "Before start training, download cityscapes dataset from here after regestering to the site. You need to download fine data (files leftImg8bit_trainvaltest.zip and gtFine_trainvaltest.zip) and coarse data (leftImg8bit_trainextra.zip and gtCoarse.zip). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "                                                        /train       \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "                                                        /test  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "                                              /train         \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "                                              /test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "                                    /train       \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "                                          /train         \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.836880813440401
      ],
      "excerpt": "| ErfNet[4]                 | 105           | 15              | 2.07                | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tahaemara/LiteSeg/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "LiteSeg",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "LiteSeg",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tahaemara",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tahaemara/LiteSeg/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 63,
      "date": "Sat, 25 Dec 2021 20:47:20 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "semantic-segmentation",
      "deep-learning",
      "pytorch",
      "liteseg"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In order to train the network with a specific backbone network and get and replicate the paper result you must train network on coarse data first, and then fine-tune the network with fine data.\n\n+ To train on coarse data set **USING_COARSE to True** and run the training via \n\n``` python train_ms.py --backbone_network darknet ```\n\n+ After that you can fine-tune the network using fine data but first you must set **USING_COARSE to False** and then run the training by passing name of backbone network and the path to the pretrained model file from the previous trainig -coarse- via \n\n```  python train_ms.py --backbone_network darknet --model_path_coarse ./pretrained_models/liteseg-darknet-cityscapes.pth ```\n\n",
      "technique": "Header extraction"
    }
  ]
}