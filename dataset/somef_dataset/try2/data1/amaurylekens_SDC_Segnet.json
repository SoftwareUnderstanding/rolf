{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n* CBF, HIL, LUR\r\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n* https://medium.com/coinmonks/semantic-segmentation-deep-learning-for-autonomous-driving-simulation-part-1-271cd611eed3\r\n* https://arxiv.org/pdf/1511.00561.pdf\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9222383658450612
      ],
      "excerpt": "@ ECAM 2019 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/amaurylekens/SDC_Segnet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-16T21:36:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-18T08:18:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9824326502749247,
        0.9866219565750629,
        0.9395810399760585,
        0.8703858531443972,
        0.9313027989778386,
        0.9664723851607709,
        0.80235648752311,
        0.988858953290361
      ],
      "excerpt": "This project consists of designing and developing an AI able to drive a car to keep it on the road in a simplified environment.  \nThis repository contains the files necessary to realize the semantic segmentation of an image to identify the shape of a road. \n(REM: another solution that is part of the same project has been implemented. It uses a simple Convolutional Neural Network.) \nThe simulator is part of the Udacity's Self-Driving Car Simulator project available at the following address https://github.com/udacity/self-driving-car-sim \nThe purpose of the segmentation is to assign the pixels belonging to the route to one class and the other pixels to another class. \nThe algorithm used is an encoder-decoder neural network. The input of the network is an RGB image and the output is an image (same size) where each pixel is assigned to a class.  \nThe encoder is composed of several layers of convolution, normalization and pooling. The decoder has an inverse architecture and the pooling layers are replaced by upsampling layers. \nThe goal is to use this architecture in combination with a CNN to predict the direction of the car in the Udacity simulator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9711654414839966
      ],
      "excerpt": "Select the upper part of the sensitive and the lower detection of the less sensitive and paste them \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.872278302211746
      ],
      "excerpt": "Drive the car by pressing the W key (there is no self-driving mode for the moment) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A segnet for a self-driving car",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/amaurylekens/SDC_Segnet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 08:41:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/amaurylekens/SDC_Segnet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "amaurylekens/SDC_Segnet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nThe model available on this repository has **already been trained** with images registered locally. The model is stored in the .hdf5 file.\r\n\r\n```bash\r\n\u251c\u2500\u2500 segnet.py\r\n\u251c\u2500\u2500 train.py\r\n\u251c\u2500\u2500 labelizer.py\r\n\u251c\u2500\u2500 test \r\n\u2502   \u251c\u2500\u2500 test.py\r\n\u2502   \u2514\u2500\u2500 result.png\r\n\u251c\u2500\u2500 prepare_label.py\r\n\u251c\u2500\u2500 compute_output_img.py\r\n\u251c\u2500\u2500 live_segmentation.py\r\n\u251c\u2500\u2500 model_weight.hdf5\r\n\u251c\u2500\u2500 README.md\r\n\u2514\u2500\u2500 .gitignore\r\n```\r\n\r\n* segnet.py : a class which contains the encoder-decoder structure with *train* and *predict* methods\r\n* train.py : fits the weights of the network and store them\r\n* labelizer.py : function which helps to create the labels from a set of image\r\n* prepare_label.py : functions which prepares data and labels for the training\r\n* compute_output_img.py : function which transforms the output of the network in segmented image\r\n* live_segmentation.py : road segmentation in live with the udacity simulator\r\n* test.py : tests the model on new image\r\n* model_weight.hdf5 : stores the weights of the trained model\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9665024700611551
      ],
      "excerpt": "Run the train.py file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950999884842889,
        0.8582061621666732
      ],
      "excerpt": "Run the live_segmentation.py file \nRun the stream.py file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8115476496796755
      ],
      "excerpt": "Training on 140 segmented images with 25 epochs :  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/amaurylekens/SDC_Segnet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Artificial Intelligence Laboratory - <br/>Self Driving Car Simulation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SDC_Segnet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "amaurylekens",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/amaurylekens/SDC_Segnet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n* Car simulator from Udacity\r\n* Python libraries : keras, tensorflow, scikit-learn, openCV, pandas, numpy, matplotlib, base64, io, python-socketio, eventlet\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 08:41:36 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n",
      "technique": "Header extraction"
    }
  ]
}