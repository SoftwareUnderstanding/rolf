{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For references, you can check out the following links:\n\nDCGAN paper - https://arxiv.org/pdf/1511.06434.pdf%5D\n\nRobbie Barrat's Lua implementation - https://github.com/robbiebarrat/art-DCGAN\n\nPytorch's implementation - https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html\n\nWikiArt Kaggle Dataset - https://www.kaggle.com/ipythonx/wikiart-gangogh-creating-art-gan?select=abstract\n\nWikiArt - https://www.wikiart.org/\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fk798/dcgan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-11T00:22:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-09T23:50:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9844514568175718,
        0.9544222813645588
      ],
      "excerpt": "This project is for CS-UY 3943 Mining Massive Datasets class at NYU Tandon School of Engineering. \nThis project demonstrates the capabilities of the Deep Convolutional Generative Adversarial Network (DCGAN).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9396814128561263
      ],
      "excerpt": "Because of issues with regards to scraping WikiArt, I planned to scrape from Google, but seeing that some of the images there were not artworks (some images were advertisements/informative graphics), in the end I decided to use a Kaggle dataset that already had a large sample of images from WikiArt (see references below). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9484093782966461
      ],
      "excerpt": "The files named dcgan.ipynb, landscape.ipynb, and portrait.ipynb are Jupyter Notebook files that you can run on your machine to produce your own images using the DCGAN. They are essentially identical in code, with the only difference being the outputs after the training of the DCGAN are different - dcgan and landscape contain images generated by training the DCGAN on landscape photos, and portrait contains images generated by training the DCGAN on portrait photos. You can see the progress it made from the start of the training to the end, and the final products for both trainings. Just for clarification, most of this code is not my own, as I used code from a PyTorch tutorial for the making and training of the DCGAN (click this link to view the tutorial: https://pytorch.org/tutorials/beginner/dcgan_faces_tutorial.html). Only changes I made to the code can be seen in dcgan.ipynb, where I included lines that would save the numpy array versions of the images in the dataset, as well as the numpy array versions of the images generated by the DCGAN (view the folder called images_npy for the numpy array versions of these images). In addition, I increased the number of layers for the networks in the DCGAN to support 128px by 128px images, whereas the tutorial supports 64px by 64px images.  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fk798/dcgan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 06:52:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fk798/dcgan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fk798/dcgan",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fk798/dcgan/master/jupyter_notebooks/lsh.ipynb",
      "https://raw.githubusercontent.com/fk798/dcgan/master/jupyter_notebooks/landscape.ipynb",
      "https://raw.githubusercontent.com/fk798/dcgan/master/jupyter_notebooks/dcgan.ipynb",
      "https://raw.githubusercontent.com/fk798/dcgan/master/jupyter_notebooks/portrait.ipynb",
      "https://raw.githubusercontent.com/fk798/dcgan/master/.ipynb_checkpoints/lsh-checkpoint.ipynb",
      "https://raw.githubusercontent.com/fk798/dcgan/master/.ipynb_checkpoints/dcgan-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fk798/dcgan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "dcgan",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dcgan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fk798",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fk798/dcgan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To generate images, you must have PyTorch on your computer. In addition, if you find that the scrapers are not useful, you can download the image dataset that I used from this link: https://www.kaggle.com/ipythonx/wikiart-gangogh-creating-art-gan?select=abstract - these images were used to train the DCGAN to generate its own images.\n\nTo store images in an LSH table, you must have lshashpy3 on your computer. \n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 06:52:02 GMT"
    },
    "technique": "GitHub API"
  }
}