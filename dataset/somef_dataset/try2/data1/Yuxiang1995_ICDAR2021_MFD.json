{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [MMDetection](https://github.com/open-mmlab/mmdetection/tree/master)\n* [Weighted Box Fusion](https://github.com/ZFTurbo/Weighted-Boxes-Fusion)\n* [Ranger](https://github.com/lessw2020/Ranger-Deep-Learning-Optimizer)\n* [Solution Slides](https://github.com/Yuxiang1995/ICDAR2021_MFD/blob/main/resources/MFD.pdf)",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.01355",
      "https://arxiv.org/abs/2004.08955",
      "https://arxiv.org/abs/1912.02424",
      "https://arxiv.org/abs/2006.04388",
      "https://arxiv.org/abs/2107.05534",
      "https://arxiv.org/abs/2107.05534",
      "https://arxiv.org/abs/2006.04388",
      "https://arxiv.org/abs/1910.13302",
      "https://arxiv.org/abs/2004.08955",
      "https://arxiv.org/abs/1906.07155"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```shell\n@article{zhong20211st,\n  title={1st Place Solution for ICDAR 2021 Competition on Mathematical Formula Detection},\n  author={Zhong, Yuxiang and Qi, Xianbiao and Li, Shanjun and Gu, Dengyi and Chen, Yihao and Ning, Peiyang and Xiao, Rong},\n  journal={arXiv preprint arXiv:2107.05534},\n  year={2021}\n}\n@article{GFLli2020generalized,\n  title={Generalized focal loss: Learning qualified and distributed bounding boxes for dense object detection},\n  author={Li, Xiang and Wang, Wenhai and Wu, Lijun and Chen, Shuo and Hu, Xiaolin and Li, Jun and Tang, Jinhui and Yang, Jian},\n  journal={arXiv preprint arXiv:2006.04388},\n  year={2020}\n}\n@inproceedings{ATSSzhang2020bridging,\n  title={Bridging the gap between anchor-based and anchor-free detection via adaptive training sample selection},\n  author={Zhang, Shifeng and Chi, Cheng and Yao, Yongqiang and Lei, Zhen and Li, Stan Z},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={9759--9768},\n  year={2020}\n}\n@inproceedings{FCOStian2019fcos,\n  title={Fcos: Fully convolutional one-stage object detection},\n  author={Tian, Zhi and Shen, Chunhua and Chen, Hao and He, Tong},\n  booktitle={Proceedings of the IEEE/CVF International Conference on Computer Vision},\n  pages={9627--9636},\n  year={2019}\n}\n@article{solovyev2019weighted,\n  title={Weighted boxes fusion: ensembling boxes for object detection models},\n  author={Solovyev, Roman and Wang, Weimin and Gabruseva, Tatiana},\n  journal={arXiv preprint arXiv:1910.13302},\n  year={2019}\n}\n@article{ResNestzhang2020resnest,\n  title={Resnest: Split-attention networks},\n  author={Zhang, Hang and Wu, Chongruo and Zhang, Zhongyue and Zhu, Yi and Lin, Haibin and Zhang, Zhi and Sun, Yue and He, Tong and Mueller, Jonas and Manmatha, R and others},\n  journal={arXiv preprint arXiv:2004.08955},\n  year={2020}\n}\n@article{MMDetectionchen2019mmdetection,\n  title={MMDetection: Open mmlab detection toolbox and benchmark},\n  author={Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and Liu, Ziwei and Xu, Jiarui and others},\n  journal={arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{MMDetectionchen2019mmdetection,\n  title={MMDetection: Open mmlab detection toolbox and benchmark},\n  author={Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and Liu, Ziwei and Xu, Jiarui and others},\n  journal={arXiv preprint arXiv:1906.07155},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{ResNestzhang2020resnest,\n  title={Resnest: Split-attention networks},\n  author={Zhang, Hang and Wu, Chongruo and Zhang, Zhongyue and Zhu, Yi and Lin, Haibin and Zhang, Zhi and Sun, Yue and He, Tong and Mueller, Jonas and Manmatha, R and others},\n  journal={arXiv preprint arXiv:2004.08955},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{solovyev2019weighted,\n  title={Weighted boxes fusion: ensembling boxes for object detection models},\n  author={Solovyev, Roman and Wang, Weimin and Gabruseva, Tatiana},\n  journal={arXiv preprint arXiv:1910.13302},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{FCOStian2019fcos,\n  title={Fcos: Fully convolutional one-stage object detection},\n  author={Tian, Zhi and Shen, Chunhua and Chen, Hao and He, Tong},\n  booktitle={Proceedings of the IEEE/CVF International Conference on Computer Vision},\n  pages={9627--9636},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{ATSSzhang2020bridging,\n  title={Bridging the gap between anchor-based and anchor-free detection via adaptive training sample selection},\n  author={Zhang, Shifeng and Chi, Cheng and Yao, Yongqiang and Lei, Zhen and Li, Stan Z},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={9759--9768},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{GFLli2020generalized,\n  title={Generalized focal loss: Learning qualified and distributed bounding boxes for dense object detection},\n  author={Li, Xiang and Wang, Wenhai and Wu, Lijun and Chen, Shuo and Hu, Xiaolin and Li, Jun and Tang, Jinhui and Yang, Jian},\n  journal={arXiv preprint arXiv:2006.04388},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{zhong20211st,\n  title={1st Place Solution for ICDAR 2021 Competition on Mathematical Formula Detection},\n  author={Zhong, Yuxiang and Qi, Xianbiao and Li, Shanjun and Gu, Dengyi and Chen, Yihao and Ning, Peiyang and Xiao, Rong},\n  journal={arXiv preprint arXiv:2107.05534},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8527594827415467
      ],
      "excerpt": "This project releases our 1st place solution on ICDAR 2021 Competition on Mathematical Formula Detection. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yuxiang1995/ICDAR2021_MFD",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to mmdetection\nAll kinds of contributions are welcome, including but not limited to the following.\n\nFixes (typo, bugs)\nNew features and components\n\nWorkflow\n\nfork and pull the latest mmdetection\ncheckout a new branch (do not use master branch for PRs)\ncommit your changes\ncreate a PR\n\nNote\n- If you plan to add some new features that involve large changes, it is encouraged to open an issue for discussion first.\n- If you are the author of some papers and would like to include your method to mmdetection,\nplease let us know (open an issue or contact the maintainers). We will much appreciate your contribution.\n- For new features and new modules, unit tests are required to improve the code's robustness.\nCode style\nPython\nWe adopt PEP8 as the preferred code style.\nWe use the following tools for linting and formatting:\n- flake8: linter\n- yapf: formatter\n- isort: sort imports\nStyle configurations of yapf and isort can be found in setup.cfg.\nWe use pre-commit hook that checks and formats for flake8, yapf, isort, trailing whitespaces,\n fixes end-of-files, sorts requirments.txt automatically on every commit.\nThe config for a pre-commit hook is stored in .pre-commit-config.\nAfter you clone the repository, you will need to install initialize pre-commit hook.\npip install -U pre-commit\nFrom the repository folder\npre-commit install\nAfter this on every commit check code linters and formatter will be enforced.\n\nBefore you create a PR, make sure that your code lints and is formatted by yapf.\n\nC++ and CUDA\nWe follow the Google C++ Style Guide.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-29T08:11:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T19:10:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We built our approach on [FCOS](https://arxiv.org/abs/1904.01355), A simple and strong anchor-free object detector, with [ResNeSt](https://arxiv.org/abs/2004.08955) as our backbone, to detect embedded and isolated formulas. \nWe employed [ATSS](https://arxiv.org/abs/1912.02424) as our sampling strategy instead of random sampling to eliminate the effects of sample imbalance. Moreover, we observed and revealed the influence of different FPN levels on the detection result. \n[Generalized Focal Loss](https://arxiv.org/abs/2006.04388) is adopted to our loss.\nFinally, with a series of useful tricks and model ensembles, our method was ranked 1st in the MFD task.\n\n![Random Sampling(left) ATSS(right)](https://github.com/Yuxiang1995/ICDAR2021_MFD/blob/main/resources/sampling_strategy.png)\n**Random Sampling(left) ATSS(right)**\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9663049809328352,
        0.9655668003490676,
        0.8354506769208815
      ],
      "excerpt": "This project releases our 1st place solution on ICDAR 2021 Competition on Mathematical Formula Detection. \nWe implement our solution based on MMDetection, which is an open source object detection toolbox based on PyTorch. \n You can click here for more details about this competition. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8428177219146455
      ],
      "excerpt": "Specify the paths of the results in tools/model_fusion_test.py, and run \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8536416500071718
      ],
      "excerpt": "Note: GT_DIR is the path of the original data folder which contains both the image and the GT files.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150771532802734
      ],
      "excerpt": "            <th>Method</th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "1st Solution For ICDAR 2021 Competition on Mathematical Formula Detection\uff08\u516c\u5f0f\u68c0\u6d4b\u51a0\u519b\u65b9\u6848\uff09",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://mmcv.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yuxiang1995/ICDAR2021_MFD/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Sun, 26 Dec 2021 16:09:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yuxiang1995/ICDAR2021_MFD/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yuxiang1995/ICDAR2021_MFD",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Yuxiang1995/ICDAR2021_MFD/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/demo/inference_demo.ipynb",
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/demo/MMDet_Tutorial.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/.dev_scripts/batch_test.sh",
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/.dev_scripts/linter.sh",
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/tools/slurm_train.sh",
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/tools/slurm_test.sh",
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/tools/dist_test.sh",
      "https://raw.githubusercontent.com/Yuxiang1995/ICDAR2021_MFD/main/tools/dist_train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Firstly, Firstly, you need to put the image files and the GT files into two separate folders as below.\n\n```shell\nTr01\n\u251c\u2500\u2500 gt\n\u2502   \u251c\u2500\u2500 0001125-color_page02.txt\n\u2502   \u251c\u2500\u2500 0001125-color_page05.txt\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 0304067-color_page08.txt\n\u251c\u2500\u2500 img\n    \u251c\u2500\u2500 0001125-page02.jpg\n    \u251c\u2500\u2500 0001125-page05.jpg\n    \u251c\u2500\u2500 ...\n    \u2514\u2500\u2500 0304067-page08.jpg\n```\n\nSecondly, run [data_preprocess.py](https://github.com/Yuxiang1995/ICDAR2021_MFD/blob/main/tools/data_preprocess.py) to get coco format label. \nRemember to change **'img_path'**, **'txt_path'**, **'dst_path'** and **'train_path'** to your own path.  \n\n```shell\npython ./tools/data_preprocess.py\n```\n\nThe new structure of data folder will become,\n```shell\nTr01\n\u251c\u2500\u2500 gt\n\u2502   \u251c\u2500\u2500 0001125-color_page02.txt\n\u2502   \u251c\u2500\u2500 0001125-color_page05.txt\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 0304067-color_page08.txt\n\u2502\n\u251c\u2500\u2500 gt_icdar\n\u2502   \u251c\u2500\u2500 0001125-color_page02.txt\n\u2502   \u251c\u2500\u2500 0001125-color_page05.txt\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 0304067-color_page08.txt\n\u2502   \n\u251c\u2500\u2500 img\n\u2502   \u251c\u2500\u2500 0001125-page02.jpg\n\u2502   \u251c\u2500\u2500 0001125-page05.jpg\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 0304067-page08.jpg\n\u2502\n\u2514\u2500\u2500 train_coco.json\n```\n\nFinally, change **'data_root'** in ./configs/_base_/datasets/formula_detection.py to your path.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Install PyTorch and torchvision following the [official instructions\n](https://pytorch.org/), e.g.,\n\n    ```shell\n    pip install pytorch torchvision -c pytorch\n    ```\n\n    Note: Make sure that your compilation CUDA version and runtime CUDA version match.\n    You can check the supported CUDA version for precompiled packages on the [PyTorch website](https://pytorch.org/).\n\n    `E.g.1` If you have CUDA 10.1 installed under `/usr/local/cuda` and would like to install\n    PyTorch 1.5, you need to install the prebuilt PyTorch with CUDA 10.1.\n\n    ```shell\n    pip install pytorch cudatoolkit=10.1 torchvision -c pytorch\n    ```\n\n    `E.g. 2` If you have CUDA 9.2 installed under `/usr/local/cuda` and would like to install\n    PyTorch 1.3.1., you need to install the prebuilt PyTorch with CUDA 9.2.\n\n    ```shell\n    pip install pytorch=1.3.1 cudatoolkit=9.2 torchvision=0.4.2 -c pytorch\n    ```\n\n    If you build PyTorch from source instead of installing the prebuilt pacakge,\n    you can use more CUDA versions such as 9.0.\n   \n2. Install mmcv-full, we recommend you to install the pre-build package as below.\n\n    ```shell\n    pip install mmcv-full==latest+torch1.6.0+cu101 -f https://download.openmmlab.com/mmcv/dist/index.html\n    ```\n\n    See [here](https://github.com/open-mmlab/mmcv#install-with-pip) for different versions of MMCV compatible to different PyTorch and CUDA versions.\n    Optionally you can choose to compile mmcv from source by the following command\n\n    ```shell\n    git clone https://github.com/open-mmlab/mmcv.git\n    cd mmcv\n    MMCV_WITH_OPS=1 pip install -e .  #: package mmcv-full will be installed after this step\n    cd ..\n    ```\n\n    Or directly run\n\n    ```shell\n    pip install mmcv-full\n    ```\n   \n3. Install build requirements and then compile MMDetection.\n\n    ```shell\n    pip install -r requirements.txt\n    pip install tensorboard\n    pip install ensemble-boxes\n    pip install -v -e .  #: or \"python setup.py develop\"\n    ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9184523629468033
      ],
      "excerpt": "train with single gpu on ResNeSt50 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8500172084302328
      ],
      "excerpt": "   python tools/train.py configs/gfl/gfl_s50_fpn_2x_coco.py --gpus 1 --work-dir ${Your Dir} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577235106035469
      ],
      "excerpt": "Run tools/test_formula.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928183348790706,
        0.89238458009711
      ],
      "excerpt": "python tools/test_formula.py configs/gfl/gfl_s101_fpn_2x_coco.py ${checkpoint path} \nIt will generate a 'result' file at the same level with work-dir in default. You can specify the output path of the result file in line 231. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.828344218455681
      ],
      "excerpt": "python tools/model_fusion_test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8708148446064828
      ],
      "excerpt": "python evaluate.py ${GT_DIR} ${CSV_Pred_File} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8120511831619611
      ],
      "excerpt": "            <th>total</th> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Yuxiang1995/ICDAR2021_MFD/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2018-2019 Open-MMLab. All rights reserved.\\n\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2018-2019 Open-MMLab.\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "About The Project",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ICDAR2021_MFD",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Yuxiang1995",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Yuxiang1995/ICDAR2021_MFD/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Linux or macOS (Windows is in experimental support)\n- Python 3.6+\n- PyTorch 1.3+\n- CUDA 9.2+ (If you build PyTorch from source, CUDA 9.0 is also compatible)\n- GCC 5+\n- [MMCV](https://mmcv.readthedocs.io/en/latest/#installation)\n\nThis project is based on MMDetection-v2.7.0, mmcv-full>=1.1.5, <1.3 is needed.\nNote: You need to run `pip uninstall mmcv` first if you have mmcv installed.\nIf mmcv and mmcv-full are both installed, there will be `ModuleNotFoundError`.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 74,
      "date": "Sun, 26 Dec 2021 16:09:42 GMT"
    },
    "technique": "GitHub API"
  }
}