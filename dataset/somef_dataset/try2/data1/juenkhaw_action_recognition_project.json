{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**Results are outdated from latest implementations on fusion network**\n\nR2P1D-18 trained from scratch\n\n![Shaving_beard_sample](https://github.com/juenkhaw/action_recognition_project/blob/master/demo_result/v_ShavingBeard_g04_c04.png)\n![Surfing_sample](https://github.com/juenkhaw/action_recognition_project/blob/master/demo_result/v_Surfing_g04_c01.png)\n![Walking with dog sample](https://github.com/juenkhaw/action_recognition_project/blob/master/demo_result/v_WalkingWithDog_g05_c05.png)\n![Skydiving sample](https://github.com/juenkhaw/action_recognition_project/blob/master/demo_result/v_SkyDiving_g01_c04.png)\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1711.11248\n- https://github.com/facebookresearch/VMZ\n- https://github.com/irhumshafkat/R2Plus1D-PyTorch\n- `pytorchsummary` by https://github.com/jacobkimmel/pytorch_modelsummary"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- A Closer Look at Spatiotemporal Convolutions for Action Recognition https://arxiv.org/abs/1711.11248\n- https://github.com/facebookresearch/VMZ\n- https://github.com/irhumshafkat/R2Plus1D-PyTorch\n- `pytorchsummary` by https://github.com/jacobkimmel/pytorch_modelsummary\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8944178096468923
      ],
      "excerpt": "      |-video@N (s) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8881436444286391
      ],
      "excerpt": "-nclip number of clips for testing video in video-level prediction \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/juenkhaw/action_recognition_project",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-08T15:08:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-22T05:57:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8516603604555764
      ],
      "excerpt": "-ld depth (number of layers) of the resnet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8020573877020504
      ],
      "excerpt": "-mwfpretrain apply pretrained model on stream networks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "Device and parallelism \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8897369007034713
      ],
      "excerpt": "-wn number of workers for some processes (safer to set at 0; -1 set as number of device) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Major refactor works ongoing",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/juenkhaw/action_recognition_project/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 22:07:18 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/juenkhaw/action_recognition_project/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "juenkhaw/action_recognition_project",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8266681275754539
      ],
      "excerpt": "Dataset Source \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8799909604563958
      ],
      "excerpt": "Example: ../dataset/UCF-101 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.866196364717567
      ],
      "excerpt": "The output file should contain contents with structure as following if training and testing are done in one shot: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8345939005521035
      ],
      "excerpt": "-sp dataset split selected in training and evaluating model (0 to perform train/test on all 3 splits) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8270201808875827
      ],
      "excerpt": "-bs number of labelled sample for each batch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8243552656610719
      ],
      "excerpt": "-tc number of labelled samples to be left when test mode is activated \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065896766398039
      ],
      "excerpt": "-loadmodel path to the pretrained model state_dict \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8458542712144299
      ],
      "excerpt": "-tbs number of sample in each testing batch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9112917082978301
      ],
      "excerpt": "- -savename name of the output file \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/juenkhaw/action_recognition_project/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "R(2+1)D Action Recognition Network with Weighted Fusion Network",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "action_recognition_project",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "juenkhaw",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/juenkhaw/action_recognition_project/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`init_stream.py` for training the stream networks from scratch or pre-trained models\n\n`init_fusion.py` for training the fusion network (except for averaging) with pre-trained stream networks models\n\n**Typical Configurations**\n\nThe pretrained stream network model packages are assummed to be put in the same folder as the script.\n\n**General stream_init arguments**\n\n`ucf [rgb/flow] ../dataset/UCF-101 -cl [8/16] -ld [18/34] [-pretrain] -loadmodel [kinetic-pretrained] -freeze [conv3_x] -lr [1e-2] -momentum [0.1] -l2wd [1e-2] -train [-resume] -ep [] -sbs [] -vsbs [] [-meansub] -test -tbs [] -stbs[] -v2 -save -savename[]`\n\n**Training streams from scratch**\n\n`ucf [rgb/flow] [dataset_path] -train [-meansub] -ep [epoch] -sbs [train-subbatch-size] -vsbs [validate-subbatch-size] -save -savename [output_name] -v2`\n\n**Training streams with pre-trained models**\n\n`ucf [rgb/flow] [dataset_path] -pretrain -loadmodel [model_path] -train [-meansub] -ep [epoch] -sbs [sub-batch-size] -vsbs [validate-sub-batch-size] -save -savename [output_name] -v2`\n\n**Continue training from previous half-trained models**\n\n`ucf [rgb/flow] [dataset_path] -pretrain -loadmodel [model_path] -resume [-meansub] -ep [epoch] -sbs [sub-batch-size] -vsbs [validate-sub-batch-size] -save -savename [output_name] -v2`\n\n**Testing streams**\n\n`ucf [rgb/flow] [dataset_path] -cl [8/16] -ld [18/34] -loadmodel [model_path] [-meansub] -test -tbs [test-batch-size] -stbs [test-subbatch-size] -v2`\n\n**Training fusionnet from scratch**\n\n`[fusionnet]` indicates choice of fusion network architecture, `average` is only valid for testing.\n\n`ucf [dataset_path] [fusionnet] pref -cl [8/16] -ld [18/34] -loadstream [rgb_model_path flow_model_path] -train [-meansub] -ep [epoch] -sbs [sub-batch-size] -vsbs [validate-sub-batch-size] -save -savename [output_name] -v2`\n\n**Training fusionnet from previous half-trained models**\n\n`ucf [dataset_path] [fusionnet] pref -cl [8/16] -ld [18/34] -loadstream [rgb_model_path flow_model_path] -loadfusion [fusionnet_model_path] -resume [-meansub] -ep [epoch] -sbs [sub-batch-size] -vsbs [validate-sub-batch-size] -save -savename [output_name] -v2`\n\n**Testing fusionnet**\n\n`ucf [dataset_path] [fusionnet] pref -cl [8/16] -ld [18/34] -loadstream [rgb_model_path flow_model_path] -loadfusion [fusionnet_model_path] -test [-meansub] -tbs [test-batch-size] -stbs [test-subbatch-size] -v2`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Thu, 23 Dec 2021 22:07:18 GMT"
    },
    "technique": "GitHub API"
  }
}