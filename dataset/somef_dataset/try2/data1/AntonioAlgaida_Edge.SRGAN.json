{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.04802",
      "https://arxiv.org/abs/1909.05305.\n\n## Analyzing the challenge:\nIn this challenge we were asked to train a system that learns to generate high resolution images from low quality images. For this, we provided a training dataset where low quality images existed, as well as the corresponding high resolution images for each of these images.\nIn addition, another set of low resolution test data was provided and used to evaluate the proposed solutions.\nWhat you were asked is that for the low quality test image set, generate the high quality images.\nThis challenge was posed by looking for a practical application of Generative Adversarial Neural Networks (GANs"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8111036989382164
      ],
      "excerpt": "Original Edge Informed SISR: https://github.com/knazeri/edge-informed-sisr \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AntonioAlgaida/Edge.SRGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-01T08:13:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-08T10:50:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8123922514104016
      ],
      "excerpt": "This repository was created in order to participate in the Hackathon organized by @SpainAI, in the computer vision challenge.<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8479336760095
      ],
      "excerpt": "The objective of this challenge was the generation of high resolution images, i.e. Single Image Super Resolution (SISR). For this, I decided to implement a solution that unifies the advantages offered by SRGAN (Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network) (see https://arxiv.org/abs/1609.04802) together with those offered by the edge prediction (Edge-Informed Single Image Super-Resolution) introduced in https://arxiv.org/abs/1909.05305. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8433280921899846
      ],
      "excerpt": "In addition, another set of low resolution test data was provided and used to evaluate the proposed solutions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8425877451903041,
        0.9710564437635576
      ],
      "excerpt": "This challenge was posed by looking for a practical application of Generative Adversarial Neural Networks (GANs) algorithms. \n[SISR with GANs - https://beyondminds.ai/blog/an-introduction-to-super-resolution-using-deep-learning/] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8788109576263036
      ],
      "excerpt": "As a set of supplied data, we have two folders, one for training and one for testing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8339477143357543
      ],
      "excerpt": "First, because the images are very large (LR=600x600px; HR=2400x2400px). I cut the images into small patches to speed up the I/O in training because in training I need to read a small patch of the original image (32px). So I'm going to cut each image into small patches. I will cut each image into 6x6 tiles with an 8 pixels pad to avoid boundary aberrations.<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260093156901805
      ],
      "excerpt": "Read carefully the comments in this file to obtain the tiles of each image \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8259842808786463
      ],
      "excerpt": "Making sure that the lane with train is not commented \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9659148146027284
      ],
      "excerpt": "The results obtain an L1 loss of 0.0321 and SSIM of 0.88 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9607831207679692
      ],
      "excerpt": "Thanks to SpainAI to organize this hackatlon <3. <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A solution of SISR that merges the ideas of SRGAN and Edge Informed SISR. This solution was presented on 1st SpainAI hackathon obtain 4th position.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AntonioAlgaida/Edge.SRGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 01:07:10 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AntonioAlgaida/Edge.SRGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AntonioAlgaida/Edge.SRGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8330693175881235
      ],
      "excerpt": "To train the HR Generator you must run: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9028537772457089,
        0.8082982253084414
      ],
      "excerpt": "Original SRGAN: https://github.com/twhui/SRGAN-PyTorch \nOther SRGAN: https://github.com/kunalrdeshmukh/SRGAN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8732089505944296
      ],
      "excerpt": "https://twitter.com/spain_ai_ <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8258799155567814
      ],
      "excerpt": "If you have any doubts, you can feel free to contact me. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8152164435253624
      ],
      "excerpt": "Test set: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152164435253624
      ],
      "excerpt": "Test set: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152164435253624
      ],
      "excerpt": "Test set: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8280517328809376,
        0.9289874935665084,
        0.8690419562496672
      ],
      "excerpt": "And then, uncomment the lane of test() in the same file.<br> \nFinally, run the main.py file \nThis will create the HR testing tile images in TestSet\\600px\\output \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.871187038552768
      ],
      "excerpt": "This will read the results images in TestSet\\600px\\output, will move each image to a folder, join and then move the result HR images into a single folder called \"final\" \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AntonioAlgaida/Edge.SRGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 AntonioGuillen\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Edge.SRGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Edge.SRGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AntonioAlgaida",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AntonioAlgaida/Edge.SRGAN/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 23 Dec 2021 01:07:10 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "sisr",
      "srgan",
      "srgan-pytorch",
      "edge-informed",
      "super-resolution"
    ],
    "technique": "GitHub API"
  }
}