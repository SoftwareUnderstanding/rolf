{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.02984\n\n\nhuggingface \u6a21\u578b\u9875\u9762\uff1a  \n\nhttps://huggingface.co/google/mobilebert-uncased\n\n\ntransformers \u6e90\u4ee3\u7801\uff1a\n\nhttps://github.com/huggingface/transformers/tree/master/src/transformers/models/mobilebert\n\n\n## \u8bba\u6587\u548c\u4ee3\u7801\u89e3\u6790\n\n\u672c\u6587\u5bf9bert\u6a21\u578b\u8fdb\u884c\u4e86\u77e5\u8bc6\u8fc1\u79fb\uff0c\u628a\u5927\u6a21\u578b\u7684\u77e5\u8bc6\u8fc1\u79fb\u5230\u5c0f\u6a21\u578b\u4e2d\u3002\n\n\u6df1\u5c42\u7f51\u7edc\u4f1a\u5f88\u96be\u8bad\u7ec3\uff0c\u5c24\u5176\u662f\u5728\u5c0f\u6a21\u578b\u4e2d\u6211\u4eec\u628a\u6a21\u578b\u7684\u201c\u8170\u201d\u6536\u7684\u5f88\u7d27\uff0c\u8fd9\u6837\u5c31\u66f4\u4e0d\u5bb9\u6613\u8bad\u7ec3\u4e86\u3002\u6240\u4ee5\u8fd9\u91cc\u4f5c\u8005\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\uff0c\u5148\u8bad\u7ec3\u4e00\u4e2a\u5927\u5c3a\u5bf8\u7684\u7f51\u7edc\u4f5c\u4e3a\u6559\u5e08\uff0c\u7136\u540e\u5728\u5c0f\u6a21\u578b\uff08\u5b66\u751f\uff09\u7f51\u7edc\u7684\u8bbe\u8ba1\u4e2d\uff0c\u628a\u6bcf\u4e00\u5c42\u7684 feature map \u8bbe\u8ba1\u6210\u76f8\u540c\u7684\u5f62\u72b6\u3002\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u5728\u8bad\u7ec3\u65f6\uff0c\u8ba9\u8fd9\u4e24\u4e2a\u6a21\u578b\u5c3d\u91cf\u5bf9\u9f50\u3002\n\n### \u6a21\u578b\u8bbe\u8ba1\n\n\u8fd9\u91cc\u7ed3\u5408\u8bba\u6587\u548c\u4ee3\u7801\uff0c\u5bf9\u6a21\u578b\u8bbe\u8ba1\u8fdb\u884c\u4ecb\u7ecd\u3002\u6211\u60f3\u7528\u4e00\u4e2a\u5148\u603b\u540e\u5206\u7684\u65b9\u6cd5\u6765\u8bb2\u3002\n\n\u5148\u81ea\u4e0a\u800c\u4e0b\uff0c\u8bb2\u89e3\u6a21\u578b\u7684\u6784\u9020\uff0c\u518d\u4ece\u4e0b\u5230\u4e0a\uff0c\u770b\u6bcf\u4e00\u4e2a\u5b50\u7f51\u7edc\u7684\u5b9e\u73b0\u3002\n\n```python\nclass MobileBertModel(MobileBertPreTrainedModel"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "        if self.do_activate: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "    embed_dim_multiplier = 3 if self.trigram_input else 1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "        if self.trigram_input: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693,
        0.8665716475375693
      ],
      "excerpt": "        all_hidden_states = () if output_hidden_states else None \n        all_attentions = () if output_attentions else None \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if output_hidden_states: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "        if output_attentions: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "    if output_hidden_states: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "    if isinstance(feat_size, int): feat_size = (feat_size, ) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "        if self.use_bottleneck: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "    if self.num_feedforward_networks != 1: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "        if self.key_query_shared_bottleneck: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/holazzer/MobileBERT-paddle",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-29T15:20:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-14T06:30:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8169419376340612
      ],
      "excerpt": "            self.dense = nn.Linear(512, 512) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8821087373346658
      ],
      "excerpt": "    #: We \"pool\" the model by simply taking the hidden state corresponding \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9294906031627522
      ],
      "excerpt": "                     v is not None) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8051419082246902
      ],
      "excerpt": "        for i, ffn_module in enumerate(self.ffn): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.983983779869418
      ],
      "excerpt": "sentence = \"Advancing the state of the art: We work on computer science problems that define the technology of today and tomorrow.\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "    for k, v in d.items(): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.983983779869418
      ],
      "excerpt": "sentence = \"Advancing the state of the art: We work on computer science problems that define the technology of today and tomorrow.\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "o = model(**i) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9833836653731848
      ],
      "excerpt": "p.s. \"Advancing the state of the art: We work on computer science problems that define the technology of today and tomorrow.\" \u662f google \u5728 huggingface \u4e0a\u5199\u7684 Research interests. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/holazzer/MobileBERT-paddle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 12:32:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/holazzer/MobileBERT-paddle/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "holazzer/MobileBERT-paddle",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": ": transformers pytorch \u7248\u672c \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "            return_dict=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "        is_bias=True, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8900486270063179
      ],
      "excerpt": "from transformers.models.mobilebert import MobileBertModel, MobileBertTokenizer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674,
        0.8801854956928516,
        0.8600689777569865,
        0.8801854956928516
      ],
      "excerpt": "import paddle \nfrom mobile_bert_model import * \nfrom config import MobileBertConfig \nfrom ppnlp_tokenizer import MobileBertTokenizer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8192039381675293
      ],
      "excerpt": "model = MobileBertModel(config, add_pooling_layer=False) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8544793451141619
      ],
      "excerpt": "tokenizer = MobileBertTokenizer('./mobilebert-uncased/vocab.txt', do_lower_case=True) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/holazzer/MobileBERT-paddle/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileBERT paddle",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileBERT-paddle",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "holazzer",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/holazzer/MobileBERT-paddle/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sat, 25 Dec 2021 12:32:22 GMT"
    },
    "technique": "GitHub API"
  }
}