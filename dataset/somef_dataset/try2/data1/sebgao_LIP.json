{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{LIP_2019_ICCV,\nauthor = {Gao, Ziteng and Wang, Limin and Wu, Gangshan},\ntitle = {LIP: Local Importance-Based Pooling},\nbooktitle = {The IEEE International Conference on Computer Vision (ICCV)},\nmonth = {October},\nyear = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8286481179904934,
        0.8955886365383559
      ],
      "excerpt": "PyTorch implementations of LIP (ICCV 2019). \n[paper link] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sebgao/LIP",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-07T12:27:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-09T09:16:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8902518262781349,
        0.9897775546459616
      ],
      "excerpt": "This codebase is now complete and it contains: \n[x] the implementation of LIP based on PyTorch primitives, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9817430036187805,
        0.8624003794622126
      ],
      "excerpt": "[2021] A case of LIP when G(I)=I, SoftPool, is accepted to ICCV 2021. Check SoftPool. \nLIP as the learnable generic pooling, its code is simply (in PyTorch): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8175174968385107
      ],
      "excerpt": "You need a sub fully convolutional network (FCN) as the logit module (whose output is of the same shape as the input) to produce the logit. You can customize the logit module like \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821561416560446
      ],
      "excerpt": "lip2d(x, logit_module_c(x)) // it is average pooling \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8039388618019824
      ],
      "excerpt": "logit_module_e = MyLogitModule() // Your customized logit module (a FCN) begins here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code and pretrained models for LIP: Local Importance-based Pooling (ICCV 19)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sebgao/LIP/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 25,
      "date": "Fri, 24 Dec 2021 00:55:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sebgao/LIP/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sebgao/LIP",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8955078873318105
      ],
      "excerpt": "You can download ImageNet pretrained models here. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8566760947839286
      ],
      "excerpt": "You can download ImageNet pretrained models here. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sebgao/LIP/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Ziteng Gao\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "LIP: Local Importance-based Pooling",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "LIP",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sebgao",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sebgao/LIP/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Python 3.6\n2. PyTorch 1.0\n3. tensorboard and tensorboardX\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 185,
      "date": "Fri, 24 Dec 2021 00:55:22 GMT"
    },
    "technique": "GitHub API"
  }
}