{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1707.05589",
      "https://arxiv.org/abs/1805.09208",
      "https://arxiv.org/abs/1909.01792",
      "https://arxiv.org/abs/1711.03953",
      "https://arxiv.org/abs/1909.01792",
      "https://arxiv.org/abs/1805.09208",
      "https://arxiv.org/abs/1805.09208",
      "https://arxiv.org/abs/1805.09208",
      "https://arxiv.org/abs/1709.07432] by\n  Krause et al.",
      "https://arxiv.org/abs/1707.05589",
      "https://arxiv.org/abs/1805.09208",
      "https://arxiv.org/abs/1909.01792",
      "https://arxiv.org/abs/1805.09208"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [On the state of the art of evaluation in neural language models](https://arxiv.org/abs/1707.05589)\n\n        @inproceedings{\n          melis2018on,\n          title={On the State of the Art of Evaluation in Neural Language Models},\n          author={G{\\'a}bor Melis and Chris Dyer and Phil Blunsom},\n          booktitle={International Conference on Learning Representations},\n          year={2018},\n          url={https://openreview.net/forum?id=ByJHuTgA-},\n        }\n\n- [Pushing the bounds of dropout](https://arxiv.org/abs/1805.09208)\n\n        @article{melis2018pushing,\n          title={Pushing the bounds of dropout},\n          author={Melis, G{\\'a}bor and Blundell, Charles and Ko{\\v{c}}isk{\\'y}, Tom{\\'a}{\\v{s}} and Hermann, Karl Moritz and Dyer, Chris and Blunsom, Phil},\n          journal={arXiv preprint arXiv:1805.09208},\n          year={2018}\n        }\n\n- [Mogrifier LSTM](https://arxiv.org/abs/1909.01792)\n\n        @article{melis2020mogrifier,\n          title={Mogrifier LSTM},\n          author={Melis, G{\\'a}bor and Ko{\\v{c}}isk{\\'y}, Tom{\\'a}{\\v{s}} and Blunsom, Phil},\n          booktitle={International Conference on Learning Representations},\n          year={2020},\n          url={https://openreview.net/forum?id=SJe5P6EYvS},\n        }\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "A value given for an option gets converted to the data type corresponding to the\noption in question. In the following, options are listed with their data type\nand default value (e.g. `model (string, lstm)` means that the variable `model`\nhas type `string` and default value `lstm`). If there is no default value\nlisted, then the option is mandatory.\n\n<a name=\"data\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{melis2020mogrifier,\n  title={Mogrifier LSTM},\n  author={Melis, G{\\'a}bor and Ko{\\v{c}}isk{\\'y}, Tom{\\'a}{\\v{s}} and Blunsom, Phil},\n  booktitle={International Conference on Learning Representations},\n  year={2020},\n  url={https://openreview.net/forum?id=SJe5P6EYvS},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{melis2018pushing,\n  title={Pushing the bounds of dropout},\n  author={Melis, G{\\'a}bor and Blundell, Charles and Ko{\\v{c}}isk{\\'y}, Tom{\\'a}{\\v{s}} and Hermann, Karl Moritz and Dyer, Chris and Blunsom, Phil},\n  journal={arXiv preprint arXiv:1805.09208},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{\n  melis2018on,\n  title={On the State of the Art of Evaluation in Neural Language Models},\n  author={G{\\'a}bor Melis and Chris Dyer and Phil Blunsom},\n  booktitle={International Conference on Learning Representations},\n  year={2018},\n  url={https://openreview.net/forum?id=ByJHuTgA-},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9313675897188715
      ],
      "excerpt": "eval_softmax_temperature=0.9 results may look \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302785107180478
      ],
      "excerpt": "  Merity et al). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "If share_input_and_output_embeddings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "If share_input_and_output_embeddings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8043073075947367
      ],
      "excerpt": "If optimization reaches turn \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/lamb",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows Google's Open Source Community\nGuidelines.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-14T10:46:38Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-07T08:38:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9575901491014522
      ],
      "excerpt": "LAnguage Modelling Benchmarks is to tune and test Tensorflow language models. It \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9837390158145862
      ],
      "excerpt": "On the state of the art of evaluation in neural language models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9659421328099079,
        0.9966474696551649
      ],
      "excerpt": "  for more. \nPushing the bounds of dropout \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9659421328099079
      ],
      "excerpt": "  for more. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8886034359529978
      ],
      "excerpt": "  more. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8519481709380223
      ],
      "excerpt": "cross-entropy. Evaluation results are printed as they happen (see the section on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872591595398047,
        0.908925214220865
      ],
      "excerpt": "For eval_method=arithmetic with \neval_dropout_multiplier=0.8 and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9901938019406112
      ],
      "excerpt": "  to an end-of-sentence token. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876658538616051,
        0.8983650145955815
      ],
      "excerpt": "  training, the model is evaluated periodically on data from validation_file. Most \n  notably, early stopping and hyperparameter tuning are based on performance on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9220367841425414,
        0.8207468854515302
      ],
      "excerpt": "  training, the model evaluated periodically on data from test_file and the \n  results are logged. As opposed to validation_file, this dataset have \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9966474696551649,
        0.908925214220865
      ],
      "excerpt": "The encoding of training_file, validation_file \n  and test_file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8025765518479159
      ],
      "excerpt": "Whether to do word or character based modelling. If word based, lines are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9098789752269
      ],
      "excerpt": "An upper bound on the total number of trainable parameters over all parts of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9566987004403239
      ],
      "excerpt": "  the parameter budget is not exceeded. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9611408754078004
      ],
      "excerpt": "  defaulting rules - output_embedding_size is not equal to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629229476409256
      ],
      "excerpt": "  output_embedding_size before the final linear transform into the softmax. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8788508334296834
      ],
      "excerpt": "  value of -1, makes output_embedding_ratio default to the value of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "  with share_input_and_output_embeddings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9191747953947292,
        0.8058606538491956
      ],
      "excerpt": "See Breaking the softmax bottleneck. The \n  default of 0 turns this feature off. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9470499759389969
      ],
      "excerpt": "The probability that all occurrences of a word are dropped from a batch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8896002359007485
      ],
      "excerpt": "  becomes zero). This can be thought of as a version of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503002549315682
      ],
      "excerpt": "  out individual elements of the embedding vector. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8308330261609654
      ],
      "excerpt": "  is not 1. Defaults to output_dropout if set to -1. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8539382749720055
      ],
      "excerpt": "Whether to use the time same dropout mask for all time steps for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "  output_dropout and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9416528379264884,
        0.808274215371622
      ],
      "excerpt": "  per time step. The single operation is faster but uses more GPU memory. Also, \n  see swap_memory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9103440023712587
      ],
      "excerpt": "The number of same-sized LSTM cells stacked on top of each other, or the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9298759382073374
      ],
      "excerpt": "  sum of the outputs of the individual layers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9647626588999283
      ],
      "excerpt": "The Mogrifier LSTM is implemented in terms of the feature masking option. The \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9273793508962576,
        0.974808489351966,
        0.9831286753092026,
        0.89246722702663,
        0.9469703445478899,
        0.8972073857779631,
        0.9252377522055786,
        0.9267257745921459
      ],
      "excerpt": "  before they are used for calculating all the other stuff (i.e. i, j, o, \n  f). This allows input features to be reweighted based on the state, and \n  state features to be reweighted based on the input. See the Mogrifier \n  LSTM paper for details. \nWhen feature_mask_rounds is 0, there is no extra gating in the LSTM. \n  When 1<=, the input is gated: x *= 2*sigmoid(affine(h))). \n  When 2<=, the state is gated: h *= 2*sigmoid(affine(x))). \n  For higher number of rounds, the alternating gating continues. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9121362314255004,
        0.8734794924333278
      ],
      "excerpt": "0, then the matrix representing the linear transform is factorized as the \n   product of two low rank matrices ([*, rank] and [rank, *]). This reduces \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911840884063097
      ],
      "excerpt": "A comma-separated list of integers representing the number of units in the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8559707244037581
      ],
      "excerpt": "  and the third having 256. If \"-1\" (the default), an attempt is made to deduce \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8883719039199252
      ],
      "excerpt": "Whether to perform Layer Normalization (currently only implemented for LSTMs). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070684482643496
      ],
      "excerpt": "The non-linearity for the update candidate ('j') and the output ('o') in an \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.945455386225455,
        0.9557356897906081
      ],
      "excerpt": "In an LSTM, whether the input gate ('i') is set to 1 minus the forget gate \n  ('f'). In an RHN, whether the transform gate ('t') is set to 1 minus the carry \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9073959847643552,
        0.91042316226003,
        0.8354789014027051
      ],
      "excerpt": "  tie_forget_and_input_gates is off. Currently \n  only affects LSTMs. This makes learning more stable, especially at the early \n  stages of training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9855855180522324,
        0.8207496094735568
      ],
      "excerpt": "Whether the initial state of the recurrent cells is allowed to be learnt or is \n  set to a fixed zero vector. In non-episodic mode, this switch is forced off. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665225205108747,
        0.8077319659966761
      ],
      "excerpt": "  but setting it to -1 makes it inherit input_dropout. It \n  has no effect on RHNs, since the input is not fed to their higher layers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9125675300095224,
        0.9099653872967803,
        0.9829191607082258,
        0.8227954110667232
      ],
      "excerpt": "This is the dropout rate for the recurrent state from the previous time step \n  ('h' in an LSTM, 's' in an RHN). See Yarin Gal's \"A Theoretically Grounded \n  Application of Dropout in Recurrent Neural Networks\". The dropout mask is the \n  same for all time steps of a specific example in one batch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9173954077384968
      ],
      "excerpt": "This is the Recurrent Dropout (see \"Recurrent Dropout without Memory Loss\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.835349417430121
      ],
      "excerpt": "If set to a positive value, the cell state ('c' in an LSTM, 's' in an RHN) is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9638297761348941,
        0.9205353991384899
      ],
      "excerpt": "Pushing the bounds of dropout makes the \n  point that the actual dropout objective being optimized is a lower bound of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971975798703116,
        0.9674425473022995
      ],
      "excerpt": "model_average is the training time equivalent of eval_method and \n  determines what kind of model (and consequently, averaging) is to be used. One \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.941983234186563
      ],
      "excerpt": "The number of samples from which to compute the objective (see \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8508385412423733
      ],
      "excerpt": "  size is batch_size * num_training_samples. Increasing the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8576866783210816
      ],
      "excerpt": "The L2 penalty on all trainable parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8576866783210816
      ],
      "excerpt": "The L1 penalty on all trainable parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9005935684732249
      ],
      "excerpt": "Activation Norm Penalty (Regularizing and optimizing LSTM language models by \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8850114605639738,
        0.9764063655881221,
        0.8934318934226348
      ],
      "excerpt": "In non-episodic mode, model state is carried over from batch to batch. Not \n  feeding back the state with drop_state_probability encourages the model to \n  work well starting from the zero state which brings it closer to the test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8345279831398762
      ],
      "excerpt": "All input embedding weights are initialized with a truncated normal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8680554571230606
      ],
      "excerpt": "This is not strictly an initialization option, but it serves a similar \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9972130414773881,
        0.9319478666893674
      ],
      "excerpt": "  is inversely proportional to input_embedding_size. \n  Since every layer in the network is initialized to produce output with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.957176507310483
      ],
      "excerpt": "  the benefit that the input embedding matrix is of the right scale for use as \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372396012058242
      ],
      "excerpt": "  turned on. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9875548671987304
      ],
      "excerpt": "  independently (of which there are 8 in an LSTM, 4/2 in an RHN) with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8800474010372935
      ],
      "excerpt": "while biases are initialized with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9857683426797287,
        0.9722786361788601,
        0.9256556687026662,
        0.8847948717394981,
        0.910322406034264
      ],
      "excerpt": "Sometimes initializing the biases of the forget gate ('f') in the LSTM (or \n  that of the carry gate ('c') in an RHN) to a small positive value (typically \n  1.0, the default) makes the initial phase of optimization faster. Higher \n  values make the network forget less of its state over time. With deeper \n  architectures and no skip connections (see num_layers and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9686272232685574,
        0.9567588029116127
      ],
      "excerpt": "The value of forget_bias is used as the mean of the distribution used for \n  initialization with unchanged variance. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "  initialized with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9033152381276313
      ],
      "excerpt": "  is true, then this only affects the linear transform of the cell output (see \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8815611607285105
      ],
      "excerpt": "  this many steps performance is evaluated and logged on the training, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9208022791914056
      ],
      "excerpt": "The number of evaluations beyond which training cannot continue (also see \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9004439523367834
      ],
      "excerpt": "The optimizer algorithm. One of rmsprop, adam, adagrad, adadelta and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9143206214760877,
        0.9100589904940782
      ],
      "excerpt": "  correction to the computed statistics is in effect which allows higher initial \n  learning rates. Only applies when optimizer_typeisrmsprop`. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.94235382232873,
        0.9891785691729262
      ],
      "excerpt": "Similar to adam_epsilon. Only applies when \n  optimizer_type is rmsprop. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550030177441534,
        0.9460478112080807
      ],
      "excerpt": "The number of examples that are fed to the network at the same time. Set this \n  to a divisor of batch_size to reduce memory usage at the cost \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8399970541868959
      ],
      "excerpt": "For episodic operation, examples that have more tokens than this are truncated \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9779245787110552
      ],
      "excerpt": "  is the window size of the truncated backprop. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9342619789297743,
        0.9989345736937801,
        0.8901547472159207
      ],
      "excerpt": "The number of turns of no improvement on the validation set, after which \n  weight averaging is turned on. Weight averaging is a trivial generalization of \n  the idea behind Averaged SGD: it keeps track of the average weights, updating \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9530295984092159
      ],
      "excerpt": "  ensured that averaging is turned on. Set this to be somewhat smaller than \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8095703768565311
      ],
      "excerpt": "  results more comparable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9210607818659747
      ],
      "excerpt": "  of turns, then the learning rate is multiplied by \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9222223560955728
      ],
      "excerpt": "  learning rate, then it is dropped regardless of whether the curve is still \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9263526358409341
      ],
      "excerpt": "The effective early_stopping_turns starts out at 1 and is increased linearly \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9972130414773881,
        0.8326712322351242
      ],
      "excerpt": "  early_stopping_turns (subject to rampup) is worse \n  than early_stopping_worst_xe_target, then training is stopped. This is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9370211791779753
      ],
      "excerpt": "  has been dropped once and so on. The last element of the list applies to any \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8523467795810794,
        0.8365305001277412
      ],
      "excerpt": "The rate is defined as the average improvement in validation cross-entropy \n  over the effective early_stopping_turns (see \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665971230369951,
        0.8054093431958878
      ],
      "excerpt": "  on each and average the cross-entropies. Repeat the entire process for \n  crossvalidation_rounds and average the averages. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8450598111875129
      ],
      "excerpt": "Number of number of folds to split the training set into. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589071532158797
      ],
      "excerpt": "  one if the variance of the cross-validation score over the random splits is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9018671542727758,
        0.8754950873649953,
        0.911148230553121
      ],
      "excerpt": "The model being trained is evaluated periodically (see turns and \nsteps_per_turn) on the validation set (see \nvalidation_file) and also on the training set (see \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920730728036462
      ],
      "excerpt": "l2_penalty and is performed the same way as evaluation on the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9556368461703846
      ],
      "excerpt": "of checkpoints and evaluate on the test set which corresponds to this: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8892180238832336,
        0.9446354149493644
      ],
      "excerpt": "Furthermore, load_checkpoint, and in all likelihood \nconfig_file must be set. This is all taken care of by the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9555296374965964
      ],
      "excerpt": "When evaluating performance on the training set, it is enough to get a rough \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9812263371548713
      ],
      "excerpt": "  can impose a limit on the number of batches of examples to work with on the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828363683640515
      ],
      "excerpt": "  \"stripe\" in a batch to be over rougly dataset_size/batch_size number of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8064398541523861
      ],
      "excerpt": "  evaluation quite pessimistic. This flag ensures that the batch size for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8481314196159854,
        0.8247654782722196
      ],
      "excerpt": "  is not performed by default. Set this to true to do that. Flipping this switch \n  makes it easy to test a model by loading a checkpoint and its saved \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9055711799594645,
        0.8223494802315687
      ],
      "excerpt": "deterministic is also known as standard dropout: dropout is turned off at \n    evaluation time and a single deterministic pass propagates the expectation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9954275797213936,
        0.829535864627323
      ],
      "excerpt": "See Pushing the bounds of dropout for a \n  more detailed discussion. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8967664076873445,
        0.9715507985710464
      ],
      "excerpt": "The number of samples to average probabilities over at evaluation time. Needs \n  some source of stochasticity (currently only dropout) to be meaningful. When \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633306534751973
      ],
      "excerpt": "  evaluation time to counter overfitting. Set it to a value between -1 and 0 to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9286264480744323
      ],
      "excerpt": "The exponent of the renormalized power mean to compute predicted \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9954275797213936
      ],
      "excerpt": "  See Pushing the bounds of dropout for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.874643187655098
      ],
      "excerpt": "  written. The file gets superseded by a newer version each time the model is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9143128038641896
      ],
      "excerpt": "  alternating lines. Currently only implemented for deterministic \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8418568379498773,
        0.8157706049759453
      ],
      "excerpt": "  Krause et al.). This forces batch size at evaluation time to 1 which makes it \n  very slow, so turn it is best to leave it off until the final evaluation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "  max_training_eval_batches and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335745749955443
      ],
      "excerpt": "  regularizers such as l2_penalty, or hacks like \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9436426946731482
      ],
      "excerpt": "The rate with which weights revert to the mean which is defined as what was \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8437323826961481
      ],
      "excerpt": "This serves a similar purpose to rmsprop_epsilon, but \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8240941903348036
      ],
      "excerpt": "  basename of the script (without the .sh). See \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8455692494046454
      ],
      "excerpt": "  here. Also see save_config. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8256567447404008
      ],
      "excerpt": "All options are saved in $experiment_dir/config except for which it \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9668057988848192
      ],
      "excerpt": "  When ensure_new_experiment is false and experiment_dir exists, the last \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8322148434200763
      ],
      "excerpt": "This is to load $experiment_dir/config that gets saved automatically when \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.867433375196733
      ],
      "excerpt": "  explicitly and is also in the configuration file, then the explicit version \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9662178274537112,
        0.8650389084764211
      ],
      "excerpt": "Whether to save any checkpoints. save_checkpoints also affects saving of the \n  configuration (see config_file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8340194427980775,
        0.9247960047586783,
        0.8287350179577267,
        0.84272156161421
      ],
      "excerpt": "Set this to false to prevent load_checkpoint from \n  attempting to restore optimizer state. This effectively reinitializes the \n  optimizer and also allows changing the optimizer type. It does not affect \n  automatic loading of the latest checkpoint (see \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8546598615095905
      ],
      "excerpt": "Transparently swap the tensors produced in forward inference but needed for \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9570283842826875
      ],
      "excerpt": "This is not an official Google product. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "LAnguage Modelling Benchmarks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/lamb/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 23,
      "date": "Mon, 27 Dec 2021 05:10:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmind/lamb/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmind/lamb",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/setup.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/describe_version.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/run_helper.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/run.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/tuning.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/running.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/wikitext-2_word.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/wikitext-103_word_rmsprop.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/wikitext-2_word_rmsprop.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/ptb_char.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/enwik8_char_rmsprop.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/ptb_word.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/common.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/ptb.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/ptb_word_slow.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/mwc.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/enwik8.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/wikitext-103.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/wikitext-2.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/ptb_word_rmsprop.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/enwik8_char.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/copy.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/lib/config/wikitext-103_word.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/test_simple_lstm.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/test_save_v1.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/finish.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/test_episodic_char_lstm_d2.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/test_sparse_rhn.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/test_load_optimizer_state.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/test/start.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/test.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/train_ptb_10m_lstm_d1.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/rerun.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/tune_ptb_10m.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/rerun_old.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/train_ptb_24m_lstm_d4.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/continue.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/on-the-state/train_ptb.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/on-the-state/train_wikitext-2.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/on-the-state/train_enwik8.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mixture-of-softmaxes/tune_ptb_24m.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mixture-of-softmaxes/train_awd_lstm_mos.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/pushing-the-bounds/test.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_copy.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_ptb.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_mwc.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_wikitext-2.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_ptb_fast.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/train_mwc.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/train_ptb_char.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/train_ptb.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_dyneval.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/train_wikitext-2.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_ptb_char.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/tune_enwik8.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/mogrifier/train_enwik8.sh",
      "https://raw.githubusercontent.com/deepmind/lamb/master/lamb/experiment/awd/train_awd_lstm.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For example:\n\n    conda create -n tfp3.7 python=3.7 numpy scipy\n    conda activate tfp3.7\n    conda install cudatoolkit\n    conda install cudnn\n    conda install tensorflow-gpu=1.15\n    conda install tensorflow-probability-gpu=1.15\n    conda install tensorflow-probability\n    pip install -e <path-to-git-checkout>\n\n<a name=\"reference\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8177305443778622
      ],
      "excerpt": "lib/config/{ptb,wikitext-2,wikitext-103,enwik8}.sh for the defaults. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8512695004019621
      ],
      "excerpt": "experiment/test.sh run \"mymodel\" \"experiment_dir_of_training_run\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.981615032346806,
        0.8661176197453521
      ],
      "excerpt": "<a name=\"installation\"></a> \n<a name=\"training_file\"></a> training_file (string) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"validation_file\"></a> validation_file (string) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"test_file\"></a> test_file (string, '') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"file_encoding\"></a> file_encoding (string, utf-8) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8848074995319396
      ],
      "excerpt": "  input_embedding_ratio so that one can tune easily \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"cell\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"hidden_size\"></a> hidden_size (string, \"-1\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521,
        0.8661176197453521
      ],
      "excerpt": "<a name=\"objective\"></a> \n<a name=\"model_average\"></a> model_average (string, arithmetic) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"initialization\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"schedule\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"optimizer_type\"></a> optimizer_type (string, rmsprop) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.946209283403025
      ],
      "excerpt": "  turns so that all runs get at least one drop which should the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312212251436007
      ],
      "excerpt": "  turns so that all runs get at least one drop which \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"eval_method\"></a> eval_method (string, deterministic) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"validation_prediction_file\"></a> validation_prediction_file (string) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8709502866578219,
        0.9072586543449077,
        0.9112762498996115
      ],
      "excerpt": "<a name=\"experiments\"></a> \nname (string, see below) <name=\"name\"></a> \nThe name of the experiment. Defaults to the git version concatenated with the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"experiment_dir\"></a> experiment_dir (string, ./ + $name) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8702375824777768
      ],
      "excerpt": "Lamb's git version is saved in lamb_version along with any uncommitted \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620056291125098,
        0.8661176197453521
      ],
      "excerpt": "  checkpoint will be loaded on startup from that directory. \n<a name=\"config_file\"></a> config_file (string, '') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"load_checkpoint\"></a> load_checkpoint (string, '') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"notes\"></a> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8655556093211788,
        0.8275666805748951
      ],
      "excerpt": "To test a trained model: \nexperiment/test.sh run \"mymodel\" \"experiment_dir_of_training_run\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727,
        0.9472865947750195
      ],
      "excerpt": "<a name=\"training_file\"></a> training_file (string) \nThe file with the training data, one line per example. Newlines are translated \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727,
        0.838762715200956
      ],
      "excerpt": "<a name=\"validation_file\"></a> validation_file (string) \nA file of the same format as training_file. During \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.838762715200956
      ],
      "excerpt": "A file of the same format as training_file. During \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727
      ],
      "excerpt": "<a name=\"file_encoding\"></a> file_encoding (string, utf-8) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"word_based\"></a> word_based (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674,
        0.8318367441475367
      ],
      "excerpt": "<a name=\"episodic\"></a> episodic (boolean, false) \nIf true, iterate over examples (lines in the data files) in random order. If \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.82785612803169,
        0.8645544707693019
      ],
      "excerpt": "  example to the next. \n<a name=\"model\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"share_input_and_output_embeddings\"></a> share_input_and_output_embeddings (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "  =true. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"shared_mask_dropout\"></a> shared_mask_dropout (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"output_once\"></a> output_once (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179,
        0.831829255360259
      ],
      "excerpt": "<a name=\"cell\"></a> \n<a name=\"model\"></a> model (string, lstm) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"lstm_skip_connection\"></a> lstm_skip_connection (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727
      ],
      "excerpt": "<a name=\"hidden_size\"></a> hidden_size (string, \"-1\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"layer_norm\"></a> layer_norm (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8773183724592722
      ],
      "excerpt": "<a name=\"activation_fn\"></a> activation_fn (string, tf.tanh) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"tie_forget_and_input_gates\"></a> tie_forget_and_input_gates (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"cap_input_gate\"></a> cap_input_gate (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"trainable_initial_state\"></a> trainable_initial_state (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8932004789671976,
        0.8421074476017179,
        0.8182167632496727
      ],
      "excerpt": "<a name=\"training\"></a> \n<a name=\"objective\"></a> \n<a name=\"model_average\"></a> model_average (string, arithmetic) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"initialization\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"scale_input_embeddings\"></a> scale_input_embeddings (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8380679368534223
      ],
      "excerpt": "  scale_input_embeddings to true to multiply input embeddings by \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"schedule\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727
      ],
      "excerpt": "<a name=\"optimizer_type\"></a> optimizer_type (string, rmsprop) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8107227194889205
      ],
      "excerpt": "<a name=\"batch_size\"></a> batch_size (integer) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8424985549021015
      ],
      "excerpt": "<a name=\"max_time_steps\"></a> max_time_steps (integer, 100) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674,
        0.8157657217845455
      ],
      "excerpt": "<a name=\"crossvalidate\"></a> crossvalidate (boolean, false) \nIf true, randomly split the training set into \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8359461585687408
      ],
      "excerpt": "<a name=\"crossvalidation_folds\"></a> crossvalidation_folds (integer, 10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8424985549021015
      ],
      "excerpt": "<a name=\"max_training_eval_batches\"></a> max_training_eval_batches (integer, 100) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8427515434168023
      ],
      "excerpt": "  validation test. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8424985549021015
      ],
      "excerpt": "<a name=\"min_non_episodic_eval_examples_per_stripe\"></a> min_non_episodic_eval_examples_per_stripe (integer, 100) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"eval_on_test\"></a> eval_on_test (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727
      ],
      "excerpt": "<a name=\"eval_method\"></a> eval_method (string, deterministic) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727,
        0.8279571057805132
      ],
      "excerpt": "<a name=\"validation_prediction_file\"></a> validation_prediction_file (string) \nThe name of the file where log probabilities of for the validation file are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"dyneval\"></a> dyneval (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8200404338793493,
        0.8139613513531252
      ],
      "excerpt": "<a name=\"experiments\"></a> \nname (string, see below) <name=\"name\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8469797627987453
      ],
      "excerpt": "<a name=\"experiment_dir\"></a> experiment_dir (string, ./ + $name) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"save_config\"></a> save_config (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"ensure_new_experiment\"></a> ensure_new_experiment (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8182167632496727
      ],
      "excerpt": "<a name=\"config_file\"></a> config_file (string, '') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"save_checkpoints\"></a> save_checkpoints (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313,
        0.8182167632496727,
        0.854661367948199
      ],
      "excerpt": "  training. \n<a name=\"load_checkpoint\"></a> load_checkpoint (string, '') \nThe name of the checkpoint file to load instead of loading \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.912631828322746
      ],
      "excerpt": "<a name=\"load_optimizer_state\"></a> load_optimizer_state (boolean, true) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8709009698904263
      ],
      "excerpt": "<a name=\"misc-options\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"swap_memory\"></a> swap_memory (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641498643536674
      ],
      "excerpt": "<a name=\"log_device_placement\"></a> log_device_placement (boolean, false) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"notes\"></a> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmind/lamb/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "What is this?",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "lamb",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmind",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/lamb/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 115,
      "date": "Mon, 27 Dec 2021 05:10:46 GMT"
    },
    "technique": "GitHub API"
  }
}