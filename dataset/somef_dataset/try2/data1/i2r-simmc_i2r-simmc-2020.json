{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Lewis, M., Liu, Y., Goyal, N., Ghazvininejad, M., Mohamed, A., Levy, O., \u2026 Zettlemoyer, L. (2020). BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension. In ACL. Retrieved from http://arxiv.org/abs/1910.13461\n- Humeau, S., Shuster, K., Lachaux, M.-A., & Weston, J. (2019). Poly-encoders: Transformer Architectures and Pre-training Strategies for Fast and Accurate Multi-sentence Scoring. Retrieved from http://arxiv.org/abs/1905.01969\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Xin Huang, Chor Seng Tan, Yan Bin Ng, Wei Shi, Kheng Hui Yeo, Ridong Jiang, Jung Jae Kim. (2021) Joint Generation and Bi-Encoder for Situated Interactive MultiModal Conversations. DSTC9 Workshop @ AAAI-21. (https://drive.google.com/file/d/1TlEp3vQGJFAwOindhziZlEqV46Kq8zPX/view?usp=sharing)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8422862053358879
      ],
      "excerpt": "\\<task>: subtask-1, subtask-2-generation, and subtask-3 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/i2r-simmc/i2r-simmc-2020",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-16T08:14:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-01T10:13:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9864711857288351,
        0.9773805328878882
      ],
      "excerpt": "We developed an end-to-end encoder-decoder model based on BART (Lewis et al., 2020) for generating outputs of the tasks (Sub-Task #1, Sub-Task #2 Response, Sub-Task #3) in a single string, called joint learning model, and another model based on Poly-Encoder (Humeau et al., 2019) for generating outputs of the Sub-Task #2 Retrieval task, called retrieval model. The retrieval model utilizes the BART encoder fine-tuned by the joint learning model. The two models are trained and evaluated separately. \nThe scripts support the following pre-trained models for the joint learning tasks: facebook/bart-base and facebook/bart-large. They also support the following models for the retrieval task: bi-encoder and poly-encoder. They generate outputs of the aforementioned four models independently. Based on the outputs, we can report performance estimates of the following four combinations: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8088798979601661
      ],
      "excerpt": "Train with the pre-processed data and save model files under the \"model\" folder \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8422121821632566
      ],
      "excerpt": "<model_name>: \"facebook/bart-large\", \"facebook/bart-base\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.940395406768821,
        0.8011125549799177
      ],
      "excerpt": "The default model_name is \"facebook/bart-large\", the default GPU card ID is 0, the default learning_rate is 1e-5, and the default batch size is 3. \nGenerate the outputs of the trained model for Sub-Task #1, Sub-Task #2 Generation and Sub-Task #3 together  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8992896864890573
      ],
      "excerpt": "The default model name is \"facebook/bart-large\", the default GPU card ID is 0, the default testing batch size is 20. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8810946964109461
      ],
      "excerpt": "<model_type> is deduced from <model_name> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9137468210737754
      ],
      "excerpt": "Evaluation scripts are written for devtest dataset, assuming that the scripts evaluate all turns in \\<domain>_\\<dataset>_dials.json and that the json files contain the ground-truth of all the turns. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Codes submitted to SIMMC challenge (https://github.com/facebookresearch/simmc), a track of DSTC 9 (https://dstc9.dstc.community/home)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/i2r-simmc/i2r-simmc-2020/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 00:39:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "i2r-simmc/i2r-simmc-2020",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/train.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/evaluate_subtask1.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/preprocess_retrieval.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/evaluate_all.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/evaluate_subtask3.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/evaluate_subtask2.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/generate.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/preprocess.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/retrieval/train_all_models.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/retrieval/evaluate_all.sh",
      "https://raw.githubusercontent.com/i2r-simmc/i2r-simmc-2020/master/src/retrieval/generate.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- $ cd src\n- $ pip install -r requirements.txt\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- $ git clone https://github.com/i2r-simmc/i2r-simmc-2020.git && cd i2r-simmc-2020\n- Place SIMMC data files under data/simmc_fasion,furniture folders\n\t- $ git lfs install\n\t- $ git clone https://github.com/facebookresearch/simmc.git\n\t- $ cp -R simmc/data .\n\t- $ cp simmc/mm_action_prediction/models/fashion_model_metainfo.json data/simmc_fashion/\n\t- $ cp simmc/mm_action_prediction/models/furniture_model_metainfo.json data/simmc_furniture/\n- $ mkdir -p model/fashion && mkdir model/furniture\n\t- Model files are saved at model/\\<domain\\>/<model_type>/best_model/\n\t\t- \\<domain\\> is either `fashion` or `furniture`\n\t\t- <model_type>: `bart-large`, `bart-base`, `poly-encoder`, or `bi-encoder`\n- $ mkdir -p output/fashion && mkdir output/furniture\n\t- Output JSON files are stored at output/\\<domain\\>/<model_type>/\\<dataset\\>/dstc9-simmc-\\<dataset\\>-\\<domain\\>-\\<task\\>.json\n\t\t- \\<dataset\\>: devtest, teststd\n\t\t- \\<task\\>: subtask-1, subtask-2-generation, subtask-2-retrieval, subtask-3\n\t\t\t- If <model_type> is `bi-encoder` or `poly-encoder`, it only saves subtask-2-retrieval task's outputs\n\t\t\t- If <model_type> is `bart-large` or `bart-base`, it saves the other tasks' outputs\n\t- Performance reports are stored at output/\\<domain\\>/<model_type>/\\<dataset\\>/report.joint-learning.csv or report.retrieval.csv, accordingly\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9452797457628369,
        0.9465718491881494
      ],
      "excerpt": "$ cd src \n$ bash preprocess.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369,
        0.9084878477905388
      ],
      "excerpt": "$ cd src \n$ bash train.sh \\<domain> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665734163171627
      ],
      "excerpt": "$ bash train.sh \\<domain> <model_name> <gpu_id> <learning_rate> <batch_size> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8145277626309801
      ],
      "excerpt": "e.g. $ bash train.sh fashion \"facebook/bart-large\" 0 1e-5 3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369,
        0.8007753115039972
      ],
      "excerpt": "$ cd src/ \n$ bash generate.sh \\<domain> <test_split_name> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787810061075009
      ],
      "excerpt": "e.g. $ bash generate.sh fashion devtest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8457705324796566,
        0.9452797457628369,
        0.9465718491881494
      ],
      "excerpt": "Edit src/preprocess_retrieval.sh ($TESTSET=devtest or teststd) \n$ cd src \n$ bash preprocess_retrieval.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369,
        0.9465718491881494
      ],
      "excerpt": "$ cd src/retrieval \n$ bash train_all_models.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369,
        0.8787810061075009
      ],
      "excerpt": "$ cd src/retrieval \n$ bash generate.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452797457628369
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553551867737602,
        0.8629400568140789
      ],
      "excerpt": "Train with the pre-processed data and save model files under the \"model\" folder \n$ cd src \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8254785037976647
      ],
      "excerpt": "$ bash train.sh \\<domain> <model_name> <gpu_id> <learning_rate> <batch_size> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8795189919148374
      ],
      "excerpt": "Optionally, you can generate with specified settings, including model_name, gpu_id, testing batch size and testing split name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8191673142630355
      ],
      "excerpt": "The default model name is \"facebook/bart-large\", the default GPU card ID is 0, the default testing batch size is 20. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8238439994519223,
        0.8629400568140789
      ],
      "excerpt": "Edit src/preprocess_retrieval.sh ($TESTSET=devtest or teststd) \n$ cd src \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/retrieval \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/retrieval \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8629400568140789
      ],
      "excerpt": "$ cd src/retrieval \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright (c) 2020 Institute for Infocomm Research, A-STAR, Singapore\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n\"Software\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Overview",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "i2r-simmc-2020",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "i2r-simmc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/i2r-simmc/i2r-simmc-2020/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "i2r-simmc",
        "body": "Uploaded outputs of subtask-3 by the following two models:\r\n- 'bart-base': Joint learning of subtask-1, subtask-2-generation and subtask-3 by using facebook/bart-base pre-trained model\r\n- 'bart-large': Joint learning of subtask-1, subtask-2-generation and subtask-3 by using facebook/bart-large pre-trained model",
        "dateCreated": "2020-10-02T09:38:48Z",
        "datePublished": "2020-10-02T09:39:42Z",
        "html_url": "https://github.com/i2r-simmc/i2r-simmc-2020/releases/tag/dstc9-simmc-test-subtask-3",
        "name": "dstc9-simmc-test-subtask-3",
        "tag_name": "dstc9-simmc-test-subtask-3",
        "tarball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/tarball/dstc9-simmc-test-subtask-3",
        "url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/releases/32084436",
        "zipball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/zipball/dstc9-simmc-test-subtask-3"
      },
      {
        "authorType": "User",
        "author_name": "i2r-simmc",
        "body": "Uploaded outputs of subtask-2-retrieval by the following two models:\r\n- 'bi-encoder': Bi-Encoder (Humeau et al., 2019) using the 'bart-base' model pre-trained for the joint learning tasks\r\n- 'poly-encoder': Poly-Encoder (Humeau et al., 2019) using the 'bart-base' model pre-trained for the joint learning tasks",
        "dateCreated": "2020-10-02T09:33:49Z",
        "datePublished": "2020-10-02T09:36:38Z",
        "html_url": "https://github.com/i2r-simmc/i2r-simmc-2020/releases/tag/dstc9-simmc-test-subtask-2-retrieval",
        "name": "dstc9-simmc-test-subtask-2-retrieval",
        "tag_name": "dstc9-simmc-test-subtask-2-retrieval",
        "tarball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/tarball/dstc9-simmc-test-subtask-2-retrieval",
        "url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/releases/32084337",
        "zipball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/zipball/dstc9-simmc-test-subtask-2-retrieval"
      },
      {
        "authorType": "User",
        "author_name": "i2r-simmc",
        "body": "Uploaded outputs of subtask-2-generation by the following two models:\r\n- 'bart-base': Joint learning of subtask-1, subtask-2-generation and subtask-3 by using facebook/bart-base pre-trained model\r\n- 'bart-large': Joint learning of subtask-1, subtask-2-generation and subtask-3 by using facebook/bart-large pre-trained model",
        "dateCreated": "2020-10-02T09:28:28Z",
        "datePublished": "2020-10-02T09:30:02Z",
        "html_url": "https://github.com/i2r-simmc/i2r-simmc-2020/releases/tag/dstc9-simmc-test-subtask-2-generation",
        "name": "dstc9-simmc-test-subtask-2-generation",
        "tag_name": "dstc9-simmc-test-subtask-2-generation",
        "tarball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/tarball/dstc9-simmc-test-subtask-2-generation",
        "url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/releases/32084092",
        "zipball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/zipball/dstc9-simmc-test-subtask-2-generation"
      },
      {
        "authorType": "User",
        "author_name": "i2r-simmc",
        "body": "Uploaded outputs of subtask-1 by the following two models:\r\n- 'bart-base': Joint learning of subtask-1, subtask-2-generation and subtask-3 by using facebook/bart-base pre-trained model\r\n- 'bart-large': Joint learning of subtask-1, subtask-2-generation and subtask-3 by using facebook/bart-large pre-trained model",
        "dateCreated": "2020-10-02T09:19:38Z",
        "datePublished": "2020-10-02T09:23:31Z",
        "html_url": "https://github.com/i2r-simmc/i2r-simmc-2020/releases/tag/dstc9-simmc-test-subtask-1",
        "name": "dstc9-simmc-test-subtask-1",
        "tag_name": "dstc9-simmc-test-subtask-1",
        "tarball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/tarball/dstc9-simmc-test-subtask-1",
        "url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/releases/32083849",
        "zipball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/zipball/dstc9-simmc-test-subtask-1"
      },
      {
        "authorType": "User",
        "author_name": "i2r-simmc",
        "body": "",
        "dateCreated": "2020-09-28T11:14:28Z",
        "datePublished": "2020-09-28T11:15:08Z",
        "html_url": "https://github.com/i2r-simmc/i2r-simmc-2020/releases/tag/dstc9-simmc-entry",
        "name": "dstc9-simmc-entry",
        "tag_name": "dstc9-simmc-entry",
        "tarball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/tarball/dstc9-simmc-entry",
        "url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/releases/31880717",
        "zipball_url": "https://api.github.com/repos/i2r-simmc/i2r-simmc-2020/zipball/dstc9-simmc-entry"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 00:39:12 GMT"
    },
    "technique": "GitHub API"
  }
}