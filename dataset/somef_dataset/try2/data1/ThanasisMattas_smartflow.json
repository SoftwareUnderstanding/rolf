{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r\n[1502.03167]: <https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/1512.00567>\r\n[1502.03167]: <https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/ [1512.03385].\r\n* Szegedy, S., Vanhoucke, V., Ioffe, S., Shlens, J., Wojna, Z. *Rethinking the\r\n  Inception Architecture for Computer Vision*. 2015. https://arxiv.org/abs/[1512.00567].\r\n* Szegedy, C., Ioffe, S., Vanhoucke, V., Alemi, A.\r\n  *Inception-v4, Inception-ResNet and the Impact of Residual Connections on\r\n  Learning*. 2016. https://arxiv.org/abs/ [1512.00567].\r\n* Ioffe, S., Szegedy, C.\r\n  *Batch Normalization: Accelerating Deep Network Training by Reducing*\r\n  *Internal Covariate Shift*. 2015. https://arxiv.org/abs/ [1502.03167].\r\n\r\n## License\r\n\r\n[GNU General Public License v3.0]\r\n\r\n<br />\r\n\r\n>(C) 2021, Athanasios Mattas<br />\r\n>thanasismatt@gmail.com\r\n\r\n[//]: # \"links\"\r\n\r\n<!-- Intro -->\r\n[MattFlow]: <https://github.com/ThanasisMattas/mattflow>\r\n[Runge-Kutta]: <https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods>\r\n[Shallow Water Equations]: <https://en.wikipedia.org/wiki/Shallow_water_equations>\r\n[SWE]: <https://github.com/ThanasisMattas/mattflow#shallow-water-equations>\r\n\r\n<!-- Dataset -->\r\n[SmartFlowDS]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L265>\r\n[augmentation]: <https://github.com/ThanasisMattas/smartflow/blob/198514cd843e803ce9c95ab814ff58bf6401bd9d/smartflow/smartflow_pre.py#L297>\r\n[DSequence]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L547>\r\n[DSet]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L680>\r\n\r\n<!-- Preprocessing -->\r\n[normalization_layer()]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L84>\r\n[Normalizer]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L103>\r\n\r\n<!-- Model -->\r\n[Setup]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L149>\r\n[Callbacks]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L67>\r\n\r\n<!-- Architectures -->\r\n[Inception-ResNet-v2]: <smartflow/archs/inception_resnet_v2.py>\r\n[Inception-v3]: <smartflow/archs/inception_v3.py>\r\n[Inception-ResNet-like]: <smartflow/archs/inception_resnet.py>\r\n[Resnet]: <smartflow/archs/resnet.py>\r\n[Simple CNN]: <smartflow/archs/cnn.py>\r\n[Fully-Connected NN]: <smartflow/archs/fcnn.py>\r\n[GNU General Public License v3.0]: <https://github.com/ThanasisMattas/mattflow/blob/master/COPYING>\r\n\r\n<!-- References -->\r\n[1512.03385]: <https://arxiv.org/abs/1512.03385>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r\n[1502.03167]: <https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/[1512.00567].\r\n* Szegedy, C., Ioffe, S., Vanhoucke, V., Alemi, A.\r\n  *Inception-v4, Inception-ResNet and the Impact of Residual Connections on\r\n  Learning*. 2016. https://arxiv.org/abs/ [1512.00567].\r\n* Ioffe, S., Szegedy, C.\r\n  *Batch Normalization: Accelerating Deep Network Training by Reducing*\r\n  *Internal Covariate Shift*. 2015. https://arxiv.org/abs/ [1502.03167].\r\n\r\n## License\r\n\r\n[GNU General Public License v3.0]\r\n\r\n<br />\r\n\r\n>(C) 2021, Athanasios Mattas<br />\r\n>thanasismatt@gmail.com\r\n\r\n[//]: # \"links\"\r\n\r\n<!-- Intro -->\r\n[MattFlow]: <https://github.com/ThanasisMattas/mattflow>\r\n[Runge-Kutta]: <https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods>\r\n[Shallow Water Equations]: <https://en.wikipedia.org/wiki/Shallow_water_equations>\r\n[SWE]: <https://github.com/ThanasisMattas/mattflow#shallow-water-equations>\r\n\r\n<!-- Dataset -->\r\n[SmartFlowDS]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L265>\r\n[augmentation]: <https://github.com/ThanasisMattas/smartflow/blob/198514cd843e803ce9c95ab814ff58bf6401bd9d/smartflow/smartflow_pre.py#L297>\r\n[DSequence]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L547>\r\n[DSet]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L680>\r\n\r\n<!-- Preprocessing -->\r\n[normalization_layer()]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L84>\r\n[Normalizer]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L103>\r\n\r\n<!-- Model -->\r\n[Setup]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L149>\r\n[Callbacks]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L67>\r\n\r\n<!-- Architectures -->\r\n[Inception-ResNet-v2]: <smartflow/archs/inception_resnet_v2.py>\r\n[Inception-v3]: <smartflow/archs/inception_v3.py>\r\n[Inception-ResNet-like]: <smartflow/archs/inception_resnet.py>\r\n[Resnet]: <smartflow/archs/resnet.py>\r\n[Simple CNN]: <smartflow/archs/cnn.py>\r\n[Fully-Connected NN]: <smartflow/archs/fcnn.py>\r\n[GNU General Public License v3.0]: <https://github.com/ThanasisMattas/mattflow/blob/master/COPYING>\r\n\r\n<!-- References -->\r\n[1512.03385]: <https://arxiv.org/abs/1512.03385>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r\n[1502.03167]: <https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/ [1512.00567].\r\n* Ioffe, S., Szegedy, C.\r\n  *Batch Normalization: Accelerating Deep Network Training by Reducing*\r\n  *Internal Covariate Shift*. 2015. https://arxiv.org/abs/ [1502.03167].\r\n\r\n## License\r\n\r\n[GNU General Public License v3.0]\r\n\r\n<br />\r\n\r\n>(C) 2021, Athanasios Mattas<br />\r\n>thanasismatt@gmail.com\r\n\r\n[//]: # \"links\"\r\n\r\n<!-- Intro -->\r\n[MattFlow]: <https://github.com/ThanasisMattas/mattflow>\r\n[Runge-Kutta]: <https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods>\r\n[Shallow Water Equations]: <https://en.wikipedia.org/wiki/Shallow_water_equations>\r\n[SWE]: <https://github.com/ThanasisMattas/mattflow#shallow-water-equations>\r\n\r\n<!-- Dataset -->\r\n[SmartFlowDS]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L265>\r\n[augmentation]: <https://github.com/ThanasisMattas/smartflow/blob/198514cd843e803ce9c95ab814ff58bf6401bd9d/smartflow/smartflow_pre.py#L297>\r\n[DSequence]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L547>\r\n[DSet]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L680>\r\n\r\n<!-- Preprocessing -->\r\n[normalization_layer()]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L84>\r\n[Normalizer]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L103>\r\n\r\n<!-- Model -->\r\n[Setup]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L149>\r\n[Callbacks]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L67>\r\n\r\n<!-- Architectures -->\r\n[Inception-ResNet-v2]: <smartflow/archs/inception_resnet_v2.py>\r\n[Inception-v3]: <smartflow/archs/inception_v3.py>\r\n[Inception-ResNet-like]: <smartflow/archs/inception_resnet.py>\r\n[Resnet]: <smartflow/archs/resnet.py>\r\n[Simple CNN]: <smartflow/archs/cnn.py>\r\n[Fully-Connected NN]: <smartflow/archs/fcnn.py>\r\n[GNU General Public License v3.0]: <https://github.com/ThanasisMattas/mattflow/blob/master/COPYING>\r\n\r\n<!-- References -->\r\n[1512.03385]: <https://arxiv.org/abs/1512.03385>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r\n[1502.03167]: <https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r",
      "https://arxiv.org/abs/ [1502.03167].\r\n\r\n## License\r\n\r\n[GNU General Public License v3.0]\r\n\r\n<br />\r\n\r\n>(C) 2021, Athanasios Mattas<br />\r\n>thanasismatt@gmail.com\r\n\r\n[//]: # \"links\"\r\n\r\n<!-- Intro -->\r\n[MattFlow]: <https://github.com/ThanasisMattas/mattflow>\r\n[Runge-Kutta]: <https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods>\r\n[Shallow Water Equations]: <https://en.wikipedia.org/wiki/Shallow_water_equations>\r\n[SWE]: <https://github.com/ThanasisMattas/mattflow#shallow-water-equations>\r\n\r\n<!-- Dataset -->\r\n[SmartFlowDS]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L265>\r\n[augmentation]: <https://github.com/ThanasisMattas/smartflow/blob/198514cd843e803ce9c95ab814ff58bf6401bd9d/smartflow/smartflow_pre.py#L297>\r\n[DSequence]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L547>\r\n[DSet]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L680>\r\n\r\n<!-- Preprocessing -->\r\n[normalization_layer()]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L84>\r\n[Normalizer]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/smartflow_pre.py#L103>\r\n\r\n<!-- Model -->\r\n[Setup]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L149>\r\n[Callbacks]: <https://github.com/ThanasisMattas/smartflow/blob/2aabd1e3ff426ff23fa62a9011df0bc63380120a/smartflow/core.py#L67>\r\n\r\n<!-- Architectures -->\r\n[Inception-ResNet-v2]: <smartflow/archs/inception_resnet_v2.py>\r\n[Inception-v3]: <smartflow/archs/inception_v3.py>\r\n[Inception-ResNet-like]: <smartflow/archs/inception_resnet.py>\r\n[Resnet]: <smartflow/archs/resnet.py>\r\n[Simple CNN]: <smartflow/archs/cnn.py>\r\n[Fully-Connected NN]: <smartflow/archs/fcnn.py>\r\n[GNU General Public License v3.0]: <https://github.com/ThanasisMattas/mattflow/blob/master/COPYING>\r\n\r\n<!-- References -->\r\n[1512.03385]: <https://arxiv.org/abs/1512.03385>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r\n[1502.03167]: <https://arxiv.org/abs/1502.03167>\r\n[1512.00567]: <https://arxiv.org/abs/1512.00567>\r"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n* He, K., Zhang, X., Ren, S., Sun, J. *Deep Residual Learning for Image\r\n  Recognition*. 2015. arXiv: [1512.03385].\r\n* Szegedy, S., Vanhoucke, V., Ioffe, S., Shlens, J., Wojna, Z. *Rethinking the\r\n  Inception Architecture for Computer Vision*. 2015. arXiv:[1512.00567].\r\n* Szegedy, C., Ioffe, S., Vanhoucke, V., Alemi, A.\r\n  *Inception-v4, Inception-ResNet and the Impact of Residual Connections on\r\n  Learning*. 2016. arXiv: [1512.00567].\r\n* Ioffe, S., Szegedy, C.\r\n  *Batch Normalization: Accelerating Deep Network Training by Reducing*\r\n  *Internal Covariate Shift*. 2015. arXiv: [1502.03167].\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "30 frames every 1000 frames \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ThanasisMattas/smartflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-27T21:22:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-21T16:24:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9128578074608791
      ],
      "excerpt": "A Deep Learning solver for the Shallow Water Equations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9839279706716286,
        0.9352519667786674,
        0.9903087183469503,
        0.9019402875153365,
        0.9897445407161569,
        0.8720760461628384,
        0.880045786539641
      ],
      "excerpt": "SmartFlow is an extension of [MattFlow], which is a 2-stage [Runge-Kutta] \nnumerical solver for the [Shallow Water Equations] (SWE). The project comprises \nthe implementation of Deep Learning architectures out of the corresponding \npapers. The models are trained on data produced by MattFlow, aiming to predict \nthe successive states of the fluid. \n[SWE] is a Computational Fluid Dynamics (CFD) problem, which models the surface \nof the water via a coupled system of three hyperbolic Partial Differential \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627759066720753
      ],
      "excerpt": "| scikit-learn >= 0.24.2 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9780153518932966,
        0.890995221447135,
        0.9672931298808846
      ],
      "excerpt": "Each data example is the state of the fluid at some time-step and the \ncorresponding label is the state at the next time-step. A state comprises a \n3D matrix, U, where the channel axis consists of the 3 state variables of the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8424539588064348
      ],
      "excerpt": "where each pixel corresponds to a cell of the mesh and each channel to a state \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9756079594925557
      ],
      "excerpt": "2 frames (in order to give the model the opportunity to learn gradients) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009512079859675
      ],
      "excerpt": "All 3 channels \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9474695139821205,
        0.9417933528172313,
        0.8677473656599725
      ],
      "excerpt": "Different sizes and frequency of water drops. \nThe best performance occurred with 2 frames, all 3 channels, updating BC and \nusing the highest grid resolution, meaning that there is no redundant \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9935771928122764
      ],
      "excerpt": "  with ghost cells, before it is fed back to the model for the next prediction. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8233184271711187,
        0.9302287581602335,
        0.8006121755674656
      ],
      "excerpt": "  evaluated upon inference, hopefully providing some valuable information to \n  the model. \nTime-steps at which a drop fell cannot be used as labels, because there is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8722860995026646
      ],
      "excerpt": "Data [augmentation]: Random flip, rotate and shuffle of the train batch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9158037638808586
      ],
      "excerpt": "This subclass is preferred when the dataset does fit into the memory or TPUs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9453337753040841
      ],
      "excerpt": "On-devise, using the [normalization_layer()]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9421763279086944
      ],
      "excerpt": "Flip and rotation orientation of input and ground truth are coherent. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8201360877850291
      ],
      "excerpt": "Examples with new-drop-frames as labels are removed, because it is not \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9234203247011775
      ],
      "excerpt": "[Simple CNN] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "<!-- Model --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Deep Learning solver for the Shallow Water Equations",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ThanasisMattas/smartflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 22:11:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ThanasisMattas/smartflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ThanasisMattas/smartflow",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n**loss** MeanSquaredError<br />\r\n**metrics** MeanAbsoluteError<br />\r\n**optimizer** Adam with learning rate scheduler<br />\r\n**monitors** val_loss<br />\r\n**loss_weights** [0.2, 0.8] (When multiple heads i.e. Inception_v3)\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n```shell\r\npip install smartflow\r\n```\r\n\r\n```shell\r\ngit clone https://github.com/ThanasisMattas/smartflow.git\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9431210945663379
      ],
      "excerpt": "| Requirements           | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966655221085083
      ],
      "excerpt": "| matplotlib >= 3.3.2    | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833782873776028
      ],
      "excerpt": "| pandas >= 1.1.3        | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8841036387318887
      ],
      "excerpt": "| scipy >= 1.5.3         | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8218775312740614
      ],
      "excerpt": "On-devise, using the [normalization_layer()]. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8272564230991285
      ],
      "excerpt": "Dataset format \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8433653675447601
      ],
      "excerpt": "<img src=\"media/dataset_preview.gif\" width=400> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8280483963669115
      ],
      "excerpt": "Data [augmentation]: Random flip, rotate and shuffle of the train batch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8473463230273421
      ],
      "excerpt": "<img src=\"media/preprocessing_visualization/it_00203_Flux-y.png\" width=800> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ThanasisMattas/smartflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SmartFlow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "smartflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ThanasisMattas",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ThanasisMattas/smartflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 22:11:26 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "shallow-water-equations",
      "deep-learning",
      "inception-resnet-v2",
      "resnet",
      "inception-v3",
      "cfd"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n<img src=\"media/input-pred-gt_visualizations/it_00364.png\" width=800>\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}