{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n    https://github.com/Megvii-BaseDetection/YOLOX\r\n    https://github.com/PaddlePaddle/PaddleDetection\r\n    https://github.com/open-mmlab/mmdetection\r\n    https://github.com/xingyizhou/CenterNet\r\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2107.08430]\r\n    The repo is still under development\r\n\r\n## 2. Environment\r\n\r\n    pytorch>=1.7.0, python>=3.6, Ubuntu/Windows, see more in 'requirements.txt'\r\n    \r\n    cd /path/to/your/work\r\n    git clone https://github.com/zhangming8/yolox-pytorch.git\r\n    cd yolox-pytorch\r\n    download pre-train weights in Model Zoo to /path/to/your/work/weights\r\n\r\n## 3. Object Detection\r\n\r\n#### Model Zoo\r\n\r\nAll weights can be downloaded\r\nfrom [GoogleDrive](https://drive.google.com/drive/folders/1qEMLzikH5JwRNRoHpeCa6BJBeSQ6xXCH?usp=sharing"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8944178096468923
      ],
      "excerpt": "b. Predict video \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangming8/yolox-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-23T15:35:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-13T08:00:33Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8776623928166517
      ],
      "excerpt": "The repo is still under development \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9382606143807934
      ],
      "excerpt": "mAP was reevaluated on COCO val2017 and test2017, and some results are slightly better than the official \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "a Pytorch easy re-implement of \"YOLOX: Exceeding YOLO Series in 2021\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangming8/yolox-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 23,
      "date": "Tue, 21 Dec 2021 21:49:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhangming8/yolox-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhangming8/yolox-pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zhangming8/yolox-pytorch/main/evaluate.sh",
      "https://raw.githubusercontent.com/zhangming8/yolox-pytorch/main/train.sh",
      "https://raw.githubusercontent.com/zhangming8/yolox-pytorch/main/predict.sh",
      "https://raw.githubusercontent.com/zhangming8/yolox-pytorch/main/deployment/onnx/convert/pth2onnx.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9521845482112161,
        0.9765390635521317,
        0.9950689470929688,
        0.9952653930297553
      ],
      "excerpt": "pytorch&gt;=1.7.0, python&gt;=3.6, Ubuntu/Windows, see more in 'requirements.txt' \ncd /path/to/your/work \ngit clone https://github.com/zhangming8/yolox-pytorch.git \ncd yolox-pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8349797857924139
      ],
      "excerpt": "All weights can be downloaded \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312943805775956
      ],
      "excerpt": "download COCO: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8600436122781632
      ],
      "excerpt": "See more example in 'train.sh' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.952543861955796
      ],
      "excerpt": "   Your can also use the following shell scripts: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9182137515478017
      ],
      "excerpt": "4. (Optional) you can visualize the converted annotations by: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9250222384400248
      ],
      "excerpt": "5. run train.sh, evaluate.sh, predict.sh (are the same as COCO) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8289224015566177
      ],
      "excerpt": "|Model      |test size  |mAP<sup>val<br>0.5:0.95 |mAP<sup>test<br>0.5:0.95 | Params<br>(M) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8459020334071948
      ],
      "excerpt": "change opt.dataset_path = \"/path/to/dataset\" in 'config.py' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9137546345705999
      ],
      "excerpt": "python train.py gpus='0' backbone=\"CSPDarknet-s\" num_epochs=300 exp_id=\"coco_CSPDarknet-s_640x640\" use_amp=True val_intervals=2 data_num_workers=6 batch_size=48 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9215481575868665
      ],
      "excerpt": "python train.py gpus='0' backbone=\"CSPDarknet-s\" num_epochs=300 exp_id=\"coco_CSPDarknet-s_640x640\" use_amp=True val_intervals=2 data_num_workers=6 batch_size=48 load_model=\"../weights/yolox-s.pth\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9415657373613162,
        0.8278126498319136,
        0.8480586273509376,
        0.8486377744814683
      ],
      "excerpt": "python train.py gpus='0' backbone=\"CSPDarknet-s\" num_epochs=300 exp_id=\"coco_CSPDarknet-s_640x640\" use_amp=True val_intervals=2 data_num_workers=6 batch_size=48 load_model=\"exp/coco_CSPDarknet-s_640x640/model_last.pth\" resume=True \na. You can also change params in 'train.sh'(these params will replace opt.xxx in config.py) and use 'nohup sh train.sh &amp;' to train \nb. Multi-gpu train: set opt.gpus = \"3,5,6,7\" in 'config.py' or set gpus=\"3,5,6,7\" in 'train.sh' \nc. If you want to close multi-size training, change opt.random_size = None in 'config.py' or set random_size=None in 'train.sh' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.878171583214527,
        0.8248207559840871
      ],
      "excerpt": "    (1) grep 'train epoch' exp/your_exp_id/logs_2021-08-xx-xx-xx/log.txt \n    (2) grep 'val epoch' exp/your_exp_id/logs_2021-08-xx-xx-xx/log.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8947089541617979
      ],
      "excerpt": "python predict.py gpus='0' backbone=\"CSPDarknet-s\" vis_thresh=0.3 load_model=\"exp/coco_CSPDarknet-s_640x640/model_best.pth\" img_dir='/path/to/dataset/images/val2017' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8455573423927537
      ],
      "excerpt": "python predict.py gpus='0' backbone=\"CSPDarknet-s\" vis_thresh=0.3 load_model=\"exp/coco_CSPDarknet-s_640x640/model_best.pth\" video_dir='/path/to/your/video.mp4' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8118345611077284
      ],
      "excerpt": "1. put your annotations(.xml) and images(.jpg) into: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8296963389767595,
        0.8161991505428468,
        0.828344218455681
      ],
      "excerpt": "2. change opt.label_name = ['your', 'dataset', 'label'] in 'config.py' \n   change opt.dataset_path = '/path/to/voc_data' in 'config.py' \n3. python tools/voc_to_coco.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.828344218455681
      ],
      "excerpt": "    python tools/show_coco_anns.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhangming8/yolox-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Batchfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# A pytorch easy re-implement of \"YOLOX: Exceeding YOLO Series in 2021\"",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "yolox-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhangming8",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangming8/yolox-pytorch/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 56,
      "date": "Tue, 21 Dec 2021 21:49:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "yolox",
      "yolox-pytorch",
      "yolov3",
      "yolov4",
      "mot",
      "pytorch",
      "object-detection"
    ],
    "technique": "GitHub API"
  }
}