{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1912.04958 that can be completely trained from the command-line, no coding needed.\n\nBelow are some flowers that do not exist.\n\n<img src=\"https://raw.githubusercontent.com/lucidrains/stylegan2-pytorch/master/samples/flowers.jpg\" width=\"450\" height=\"auto\">\n\n<img src=\"https://raw.githubusercontent.com/lucidrains/stylegan2-pytorch/master/samples/flowers-2.jpg\" width=\"450\" height=\"auto\">\n\nNeither do these hands\n\n<img src=\"https://raw.githubusercontent.com/lucidrains/stylegan2-pytorch/master/samples/hands.jpg\" width=\"450\" height=\"auto\">\n\nNor these cities\n\n<img src=\"https://raw.githubusercontent.com/lucidrains/stylegan2-pytorch/master/samples/cities.jpg\" width=\"450\" height=\"auto\">\n\nNor these celebrities (trained by <a href=\"https://github.com/yoniker\">@yoniker</a>",
      "https://arxiv.org/abs/2006.10738"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@article{Karras2019stylegan2,\n    title   = {Analyzing and Improving the Image Quality of {StyleGAN}},\n    author  = {Tero Karras and Samuli Laine and Miika Aittala and Janne Hellsten and Jaakko Lehtinen and Timo Aila},\n    journal = {CoRR},\n    volume  = {abs/1912.04958},\n    year    = {2019},\n}\n```\n\n```bibtex\n@misc{zhao2020feature,\n    title   = {Feature Quantization Improves GAN Training},\n    author  = {Yang Zhao and Chunyuan Li and Ping Yu and Jianfeng Gao and Changyou Chen},\n    year    = {2020}\n}\n```\n\n```bibtex\n@misc{chen2020simple,\n    title   = {A Simple Framework for Contrastive Learning of Visual Representations},\n    author  = {Ting Chen and Simon Kornblith and Mohammad Norouzi and Geoffrey Hinton},\n    year    = {2020}\n}\n```\n\n```bibtex\n@article{,\n    title     = {Oxford 102 Flowers},\n    author    = {Nilsback, M-E. and Zisserman, A., 2008},\n    abstract  = {A 102 category dataset consisting of 102 flower categories, commonly occuring in the United Kingdom. Each class consists of 40 to 258 images. The images have large scale, pose and light variations.}\n}\n```\n\n```bibtex\n@article{afifi201911k,\n    title   = {11K Hands: gender recognition and biometric identification using a large dataset of hand images},\n    author  = {Afifi, Mahmoud},\n    journal = {Multimedia Tools and Applications}\n}\n```\n\n```bibtex\n@misc{zhang2018selfattention,\n    title   = {Self-Attention Generative Adversarial Networks},\n    author  = {Han Zhang and Ian Goodfellow and Dimitris Metaxas and Augustus Odena},\n    year    = {2018},\n    eprint  = {1805.08318},\n    archivePrefix = {arXiv}\n}\n```\n\n```bibtex\n@article{shen2019efficient,\n    author    = {Zhuoran Shen and\n               Mingyuan Zhang and\n               Haiyu Zhao and\n               Shuai Yi and\n               Hongsheng Li},\n    title     = {Efficient Attention: Attention with Linear Complexities},\n    journal   = {CoRR},  \n    year      = {2018},\n    url       = {http://arxiv.org/abs/1812.01243},\n}\n```\n\n```bibtex\n@article{zhao2020diffaugment,\n    title   = {Differentiable Augmentation for Data-Efficient GAN Training},\n    author  = {Zhao, Shengyu and Liu, Zhijian and Lin, Ji and Zhu, Jun-Yan and Han, Song},\n    journal = {arXiv preprint arXiv:2006.10738},\n    year    = {2020}\n}\n```\n\n```bibtex\n@misc{zhao2020image,\n    title  = {Image Augmentations for GAN Training},\n    author = {Zhengli Zhao and Zizhao Zhang and Ting Chen and Sameer Singh and Han Zhang},\n    year   = {2020},\n    eprint = {2006.02595},\n    archivePrefix = {arXiv}\n}\n```\n\n```bibtex\n@misc{karras2020training,\n    title   = {Training Generative Adversarial Networks with Limited Data},\n    author  = {Tero Karras and Miika Aittala and Janne Hellsten and Samuli Laine and Jaakko Lehtinen and Timo Aila},\n    year    = {2020},\n    eprint  = {2006.06676},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}\n```\n\n```bibtex\n@misc{jolicoeurmartineau2018relativistic,\n    title   = {The relativistic discriminator: a key element missing from standard GAN},\n    author  = {Alexia Jolicoeur-Martineau},\n    year    = {2018},\n    eprint  = {1807.00734},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.LG}\n}\n```\n\n```bibtex\n@misc{sinha2020topk,\n    title   = {Top-k Training of GANs: Improving GAN Performance by Throwing Away Bad Samples},\n    author  = {Samarth Sinha and Zhengli Zhao and Anirudh Goyal and Colin Raffel and Augustus Odena},\n    year    = {2020},\n    eprint  = {2002.06224},\n    archivePrefix = {arXiv},\n    primaryClass = {stat.ML}\n}\n```\n\n```bibtex\n@misc{yu2021dual,\n    title   = {Dual Contrastive Loss and Attention for GANs},\n    author  = {Ning Yu and Guilin Liu and Aysegul Dundar and Andrew Tao and Bryan Catanzaro and Larry Davis and Mario Fritz},\n    year    = {2021},\n    eprint  = {2103.16748},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{yu2021dual,\n    title   = {Dual Contrastive Loss and Attention for GANs},\n    author  = {Ning Yu and Guilin Liu and Aysegul Dundar and Andrew Tao and Bryan Catanzaro and Larry Davis and Mario Fritz},\n    year    = {2021},\n    eprint  = {2103.16748},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{sinha2020topk,\n    title   = {Top-k Training of GANs: Improving GAN Performance by Throwing Away Bad Samples},\n    author  = {Samarth Sinha and Zhengli Zhao and Anirudh Goyal and Colin Raffel and Augustus Odena},\n    year    = {2020},\n    eprint  = {2002.06224},\n    archivePrefix = {arXiv},\n    primaryClass = {stat.ML}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{jolicoeurmartineau2018relativistic,\n    title   = {The relativistic discriminator: a key element missing from standard GAN},\n    author  = {Alexia Jolicoeur-Martineau},\n    year    = {2018},\n    eprint  = {1807.00734},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.LG}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{karras2020training,\n    title   = {Training Generative Adversarial Networks with Limited Data},\n    author  = {Tero Karras and Miika Aittala and Janne Hellsten and Samuli Laine and Jaakko Lehtinen and Timo Aila},\n    year    = {2020},\n    eprint  = {2006.06676},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{zhao2020image,\n    title  = {Image Augmentations for GAN Training},\n    author = {Zhengli Zhao and Zizhao Zhang and Ting Chen and Sameer Singh and Han Zhang},\n    year   = {2020},\n    eprint = {2006.02595},\n    archivePrefix = {arXiv}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{zhao2020diffaugment,\n    title   = {Differentiable Augmentation for Data-Efficient GAN Training},\n    author  = {Zhao, Shengyu and Liu, Zhijian and Lin, Ji and Zhu, Jun-Yan and Han, Song},\n    journal = {arXiv preprint arXiv:2006.10738},\n    year    = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{shen2019efficient,\n    author    = {Zhuoran Shen and\n               Mingyuan Zhang and\n               Haiyu Zhao and\n               Shuai Yi and\n               Hongsheng Li},\n    title     = {Efficient Attention: Attention with Linear Complexities},\n    journal   = {CoRR},  \n    year      = {2018},\n    url       = {http://arxiv.org/abs/1812.01243},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{zhang2018selfattention,\n    title   = {Self-Attention Generative Adversarial Networks},\n    author  = {Han Zhang and Ian Goodfellow and Dimitris Metaxas and Augustus Odena},\n    year    = {2018},\n    eprint  = {1805.08318},\n    archivePrefix = {arXiv}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{afifi201911k,\n    title   = {11K Hands: gender recognition and biometric identification using a large dataset of hand images},\n    author  = {Afifi, Mahmoud},\n    journal = {Multimedia Tools and Applications}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{,\n    title     = {Oxford 102 Flowers},\n    author    = {Nilsback, M-E. and Zisserman, A., 2008},\n    abstract  = {A 102 category dataset consisting of 102 flower categories, commonly occuring in the United Kingdom. Each class consists of 40 to 258 images. The images have large scale, pose and light variations.}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{chen2020simple,\n    title   = {A Simple Framework for Contrastive Learning of Visual Representations},\n    author  = {Ting Chen and Simon Kornblith and Mohammad Norouzi and Geoffrey Hinton},\n    year    = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{zhao2020feature,\n    title   = {Feature Quantization Improves GAN Training},\n    author  = {Yang Zhao and Chunyuan Li and Ping Yu and Jianfeng Gao and Changyou Chen},\n    year    = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{Karras2019stylegan2,\n    title   = {Analyzing and Improving the Image Quality of {StyleGAN}},\n    author  = {Tero Karras and Samuli Laine and Miika Aittala and Janne Hellsten and Jaakko Lehtinen and Timo Aila},\n    journal = {CoRR},\n    volume  = {abs/1912.04958},\n    year    = {2019},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "<a href=\"https://github.com/lucidrains/unet-stylegan2\">Stylegan2 + Unet Discriminator</a> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/stylegan2-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-09T18:23:31Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-26T13:49:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8809554049101967
      ],
      "excerpt": "If you have one machine with multiple GPUs, the repository offers a way to utilize all of them for training. With multiple GPUs, each batch will be divided evenly amongst the GPUs available. For example, for 2 GPUs, with a batch size of 32, each GPU will see 16 samples. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.81211048365385,
        0.9474078051984751,
        0.947228565499587
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --multi-gpus --batch-size 32 --gradient-accumulate-every 1 \nIn the past, GANs needed a lot of data to learn how to generate well. The faces model took 70k high quality images from Flickr, as an example. \nHowever, in the month of May 2020, researchers all across the world independently converged on a simple technique to reduce that number to as low as 1-2k. That simple idea was to differentiably augment all images, generated or real, going into the discriminator during training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8465447773826068
      ],
      "excerpt": "In the setting of low data, you can use the feature with a simple flag. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --aug-prob 0.25 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9819274471821888
      ],
      "excerpt": "This framework also allows for you to add an efficient form of self-attention to the designated layers of the discriminator (and the symmetric layer of the generator), which will greatly improve results. The more attention you can afford, the better! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8814001003240804
      ],
      "excerpt": ": do not put a space after the comma in the list! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9017322199378806
      ],
      "excerpt": "Batch size - You can decrease the batch-size down to 1, but you should increase the gradient-accumulate-every correspondingly so that the mini-batch the network sees is not too small. This may be confusing to a layperson, so I'll think about how I would automate the choice of gradient-accumulate-every going forward. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9372573344616071
      ],
      "excerpt": "a p2.xlarge (the cheapest option) and it was quite slow, slower in fact than using Google Colab. More powerful instance \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9228885996474175
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --calculate-fid-every 5000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9442114227345915
      ],
      "excerpt": "A new paper has produced evidence that by simply zero-ing out the gradient contributions from samples that are deemed fake by the discriminator, the generator learns significantly better, achieving new state of the art. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9927704102886096
      ],
      "excerpt": "Gamma is a decay schedule that slowly decreases the topk from the full batch size to the target fraction of 50% (also modifiable hyperparameter). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9469301128846415
      ],
      "excerpt": "A recent paper reported improved results if intermediate representations of the discriminator are vector quantized. Although I have not noticed any dramatic changes, I have decided to add this as a feature, so other minds out there can investigate. To use, you have to specify which layer(s) you would like to vector quantize. Default dictionary size is 256 and is also tunable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8638530908940469,
        0.8814001003240804
      ],
      "excerpt": ": feature quantize layers 1 and 2, with a dictionary size of 512 each \n: do not put a space after the comma in the list! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9645188523172854
      ],
      "excerpt": "I have tried contrastive learning on the discriminator (in step with the usual GAN training) and possibly observed improved stability and quality of final results. You can turn on this experimental feature with a simple flag as shown below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8600346991908379
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --cl-reg \nThis was proposed in the Relativistic GAN paper to stabilize training. I have had mixed results, but will include the feature for those who want to experiment with it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8161182819139468,
        0.9725352978042763
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --rel-disc-loss \nBy default, the StyleGAN architecture styles a constant learned 4x4 block as it is progressively upsampled. This is an experimental feature that makes it so the 4x4 block is learned from the style vector w instead. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.816711102775277,
        0.9440874157654857
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --no-const \nA recent paper has proposed that a novel contrastive loss between the real and fake logits can improve quality over other types of losses. (The default in this repository is hinge loss, and the paper shows a slight improvement) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8782813491357802,
        0.8486004700313045
      ],
      "excerpt": "I have gotten really good results with a unet discriminator, but the architecturally change was too big to fit as an option in this repository. If you are aiming for perfection, feel free to try it. \nIf you would like me to give the royal treatment to some other GAN architecture (BigGAN), feel free to reach out at my email. Happy to hear your pitch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Simplest working implementation of Stylegan2, state of the art generative adversarial network, in Pytorch. Enabling everyone to experience disentanglement",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/stylegan2-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 445,
      "date": "Sun, 26 Dec 2021 23:38:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lucidrains/stylegan2-pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Archive your training data and upload it to an S3 bucket\n2. Provision your EC2 instance (I used an Ubuntu AMI)\n3. Log into your EC2 instance via SSH\n4. Install the aws CLI client and configure it:\n\n```bash\nsudo snap install aws-cli --classic\naws configure\n```\n\nYou will then have to enter your AWS access keys, which you can retrieve from the management console under AWS\nManagement Console > Profile > My Security Credentials > Access Keys\n\nThen, run these commands, or maybe put them in a shell script and execute that:\n\n```bash\nmkdir data\ncurl -O https://bootstrap.pypa.io/get-pip.py\nsudo apt-get install python3-distutils\npython3 get-pip.py\npip3 install stylegan2_pytorch\nexport PATH=$PATH:/home/ubuntu/.local/bin\naws s3 sync s3://<Your bucket name> ~/data\ncd data\ntar -xf ../train.tar.gz\n```\n\nNow you should be able to train by simplying calling `stylegan2_pytorch [args]`.\n\nNotes:\n\n* If you have a lot of training data, you may need to provision extra block storage via EBS.\n* Also, you may need to spread your data across multiple archives.\n* You should run this on a `screen` window so it won't terminate once you log out of the SSH session.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "You will need a machine with a GPU and CUDA installed. Then pip install the package like this\n\n```bash\n$ pip install stylegan2_pytorch\n```\n\nIf you are using a windows machine, the following commands reportedly works.\n\n```bash\n$ conda install pytorch torchvision -c python\n$ pip install stylegan2_pytorch\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8597200839071585,
        0.9950666972013805,
        0.9995486579735738
      ],
      "excerpt": "Thanks to <a href=\"https://github.com/GetsEclectic\">GetsEclectic</a>, you can now calculate the FID score periodically! Again, made super simple with one extra argument, as shown below. \nFirstly, install the pytorch_fid package \n$ pip install pytorch-fid \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008116928778084
      ],
      "excerpt": "If you would like to sample images programmatically, you can do so with the following simple ModelLoader class. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762971633672546
      ],
      "excerpt": "    base_dir = '/path/to/directory',   #: path to where you invoked the command line tool \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9207706953723235
      ],
      "excerpt": "Then, you need to make sure you have <a href=\"https://docs.docker.com/get-docker/\">Docker installed</a>. Following the instructions at <a href=\"https://github.com/aimhubio/aim\">Aim</a>, you execute the following in your terminal. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.82378675473511
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --aug-prob 0.25 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8213331672372955
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --image-size 512 --num-train-steps 1000000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8078832265702172
      ],
      "excerpt": "$ stylegan2_pytorch --data ./transparent/images/path --transparent \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8355851489129469
      ],
      "excerpt": "FID results will be logged to ./results/{name}/fid_scores.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9416522774131079,
        0.8801854956928516
      ],
      "excerpt": "from torchvision.utils import save_image \nfrom stylegan2_pytorch import ModelLoader \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8277895476259965
      ],
      "excerpt": "    name = 'default'                   #: the project name, defaults to 'default' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.802714205588477
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --log \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8294417729895738
      ],
      "excerpt": "<img src=\"./images/aim.png\" width=\"600px\"></img> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.821693830772299
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --top-k-training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106624099223956
      ],
      "excerpt": "$ stylegan2_pytorch --data ./data --fq-layers [1,2] --fq-dict-size 512 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Phil Wang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Simple StyleGan2 for Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "stylegan2-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lucidrains",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/stylegan2-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-10-19T00:38:29Z",
        "datePublished": "2021-10-19T00:38:41Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.7",
        "name": "1.8.7",
        "tag_name": "1.8.7",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.7",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/51578675",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.7"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-08-06T19:17:08Z",
        "datePublished": "2021-08-06T19:17:20Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.6",
        "name": "1.8.6",
        "tag_name": "1.8.6",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.6",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/47447931",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.6"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-08-05T20:17:40Z",
        "datePublished": "2021-08-05T20:18:12Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.5",
        "name": "1.8.5",
        "tag_name": "1.8.5",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.5",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/47388332",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.5"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-17T18:05:57Z",
        "datePublished": "2021-06-17T18:06:09Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.4",
        "name": "1.8.4",
        "tag_name": "1.8.4",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.4",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/44817674",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.4"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-13T03:00:59Z",
        "datePublished": "2021-06-13T03:01:11Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.3",
        "name": "1.8.3",
        "tag_name": "1.8.3",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.3",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/44529223",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.3"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-05-16T13:35:29Z",
        "datePublished": "2021-05-16T13:35:50Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.2",
        "name": "1.8.2",
        "tag_name": "1.8.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.2",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/43014494",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-28T14:40:50Z",
        "datePublished": "2021-04-28T14:41:37Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.1",
        "name": "1.8.1",
        "tag_name": "1.8.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.1",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/42143579",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-07T05:44:41Z",
        "datePublished": "2021-04-07T05:45:16Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.8.0",
        "name": "1.8.0",
        "tag_name": "1.8.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.8.0",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/41036932",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.8.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-05T18:42:16Z",
        "datePublished": "2021-04-05T18:42:31Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.7.0",
        "name": "1.7.0",
        "tag_name": "1.7.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.7.0",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/40957334",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.7.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-04-05T06:20:17Z",
        "datePublished": "2021-04-05T06:20:49Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.6.0",
        "name": "1.6.0",
        "tag_name": "1.6.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.6.0",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/40930336",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.6.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-15T19:02:29Z",
        "datePublished": "2021-01-15T19:02:45Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.14",
        "name": "1.5.14",
        "tag_name": "1.5.14",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.14",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/36466060",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.14"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-13T19:24:28Z",
        "datePublished": "2021-01-13T19:24:44Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.12",
        "name": "1.5.12",
        "tag_name": "1.5.12",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.12",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/36352601",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.12"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-09T22:20:43Z",
        "datePublished": "2021-01-09T22:20:55Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.11",
        "name": "1.5.11",
        "tag_name": "1.5.11",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.11",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/36185487",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.11"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-03T03:13:27Z",
        "datePublished": "2021-01-03T03:13:42Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.10",
        "name": "1.5.10",
        "tag_name": "1.5.10",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.10",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/35918172",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.10"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-02T05:19:24Z",
        "datePublished": "2021-01-02T05:19:40Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.9",
        "name": "1.5.9",
        "tag_name": "1.5.9",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.9",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/35904972",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.9"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-02T04:25:15Z",
        "datePublished": "2021-01-02T04:25:37Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.8",
        "name": "1.5.8",
        "tag_name": "1.5.8",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.8",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/35904606",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.8"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-01-02T01:27:08Z",
        "datePublished": "2021-01-02T01:27:24Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.7",
        "name": "1.5.7",
        "tag_name": "1.5.7",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.7",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/35903142",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.7"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-20T18:40:04Z",
        "datePublished": "2020-12-20T18:40:20Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.6",
        "name": "1.5.6",
        "tag_name": "1.5.6",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.6",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/35543754",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.6"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-17T02:34:33Z",
        "datePublished": "2020-12-17T02:34:48Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.5",
        "name": "1.5.5",
        "tag_name": "1.5.5",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.5",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/35392035",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.5"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-07T22:45:27Z",
        "datePublished": "2020-12-07T22:46:46Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.4",
        "name": "1.5.4",
        "tag_name": "1.5.4",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.4",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/34953624",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.4"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-12-03T00:49:33Z",
        "datePublished": "2020-12-03T00:49:49Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.3",
        "name": "1.5.3",
        "tag_name": "1.5.3",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.3",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/34725422",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.3"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-26T21:38:38Z",
        "datePublished": "2020-11-26T21:38:52Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.2",
        "name": "1.5.2",
        "tag_name": "1.5.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.2",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/34482648",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-15T00:12:07Z",
        "datePublished": "2020-11-15T00:12:23Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.1",
        "name": "1.5.1",
        "tag_name": "1.5.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.1",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33959767",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-13T21:59:56Z",
        "datePublished": "2020-11-13T22:00:08Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.5.0",
        "name": "1.5.0",
        "tag_name": "1.5.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.5.0",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33940717",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.5.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-11T04:30:47Z",
        "datePublished": "2020-11-11T04:47:12Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.4.1",
        "name": "1.4.1",
        "tag_name": "1.4.1",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.4.1",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33780053",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.4.1"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-11T04:07:57Z",
        "datePublished": "2020-11-11T04:08:30Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.4.0",
        "name": "1.4.0",
        "tag_name": "1.4.0",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.4.0",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33772899",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.4.0"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-10T05:33:37Z",
        "datePublished": "2020-11-10T05:33:49Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.2.8",
        "name": "1.2.8",
        "tag_name": "1.2.8",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.2.8",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33689250",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.2.8"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-11-06T18:24:36Z",
        "datePublished": "2020-11-06T18:25:21Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.2.7",
        "name": "1.2.7",
        "tag_name": "1.2.7",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.2.7",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33579133",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.2.7"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-10-31T02:02:29Z",
        "datePublished": "2020-10-31T02:02:55Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.2.6",
        "name": "1.2.6",
        "tag_name": "1.2.6",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.2.6",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/33298060",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.2.6"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2020-10-23T19:38:40Z",
        "datePublished": "2020-10-23T19:38:57Z",
        "html_url": "https://github.com/lucidrains/stylegan2-pytorch/releases/tag/1.2.5",
        "name": "1.2.5",
        "tag_name": "1.2.5",
        "tarball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/tarball/1.2.5",
        "url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/releases/32995533",
        "zipball_url": "https://api.github.com/repos/lucidrains/stylegan2-pytorch/zipball/1.2.5"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2665,
      "date": "Sun, 26 Dec 2021 23:38:09 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "generative-adversarial-network",
      "artificial-intelligence",
      "pytorch",
      "machine-learning",
      "generative-model"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n$ stylegan2_pytorch --data /path/to/images\n```\n\nThat's it. Sample images will be saved to `results/default` and models will be saved periodically to `models/default`.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "You can specify the name of your project with\n\n```bash\n$ stylegan2_pytorch --data /path/to/images --name my-project-name\n```\n\nYou can also specify the location where intermediate results and model checkpoints should be stored with\n\n```bash\n$ stylegan2_pytorch --data /path/to/images --name my-project-name --results_dir /path/to/results/dir --models_dir /path/to/models/dir\n```\n\nYou can increase the network capacity (which defaults to `16`) to improve generation results, at the cost of more memory.\n\n```bash\n$ stylegan2_pytorch --data /path/to/images --network-capacity 256\n```\n\nBy default, if the training gets cut off, it will automatically resume from the last checkpointed file. If you want to restart with new settings, just add a `new` flag\n\n```bash\n$ stylegan2_pytorch --new --data /path/to/images --name my-project-name --image-size 512 --batch-size 1 --gradient-accumulate-every 16 --network-capacity 10\n```\n\nOnce you have finished training, you can generate images from your latest checkpoint like so.\n\n```bash\n$ stylegan2_pytorch  --generate\n```\n\nTo generate a video of a interpolation through two random points in latent space.\n\n```bash\n$ stylegan2_pytorch --generate-interpolation --interpolation-num-steps 100\n```\n\nTo save each individual frame of the interpolation\n\n```bash\n$ stylegan2_pytorch --generate-interpolation --save-frames\n```\n\nIf a previous checkpoint contained a better generator, (which often happens as generators start degrading towards the end of training), you can load from a previous checkpoint with another flag\n\n```bash\n$ stylegan2_pytorch --generate --load-from {checkpoint number}\n```\n\nA technique used in both StyleGAN and BigGAN is truncating the latent values so that their values fall close to the mean. The small the truncation value, the better the samples will appear at the cost of sample variety. You can control this with the `--trunc-psi`, where values typically fall between `0.5` and `1`. It is set at `0.75` as default\n\n```bash\n$ stylegan2_pytorch --generate --trunc-psi 0.5\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}