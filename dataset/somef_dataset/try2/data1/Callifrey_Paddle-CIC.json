{
  "citation": [
    {
      "confidence": [
        0.9963699730839854
      ],
      "excerpt": "| Author                | Dai Jiawu                                                    | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Callifrey/Paddle-CIC",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-12T03:54:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-09T11:12:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* **train.py** description for parameters(partly)\n\n  | Parameters           | Default                                            | Description                              |\n  | -------------------- | -------------------------------------------------- | ---------------------------------------- |\n  | **--image_dir**      | str: \u2018/media/gallifrey/DJW/Dataset/Imagenet/train\u2019 | Path for training data                   |\n  | **--continue_train** | bool: False                                        | wheather to continue training            |\n  | **--which_epoch**    | str: 'latest'                                      | start checkpoint                         |\n  | **--num_epoch**      | int: 20                                            | number of epoches                        |\n  | **--lr**             | float: 3.16e-5                                     | initial learning rate                    |\n  | **--rebalance**      | bool: True                                         | color rebalance or not                   |\n  | **--NN**             | int: 5                                             | number of neighor for KNN                |\n  | **--sigma**          | float: 5.0                                         | kernal size for gussian                  |\n  | **--gamma**          | float: 0.5                                         | coefficient for mixture of distributions |\n\n* **test.py** description for parameters(partly)\n\n  | Parameters        | Default                                           | Description            |\n  | ----------------- | ------------------------------------------------- | ---------------------- |\n  | **--model_path**  | str\uff1a './model'                                   | path for models        |\n  | **--image_dir**   | str\uff1a \u2018/media/gallifrey/DJW/Dataset/Imagenet/val' | path for testing data  |\n  | **--load_model**  | str: '19'                                         | checkpoint ID          |\n  | **--result_path** | str: './result'                                   | result path            |\n  | **--max_samples** | int: int(sys.maxsize)                             | max number to generate |\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "![architecture](./imgs/architecture.png)\n\nThis project is based on the PaddlePaddle framework to reproduce the classical image colorization paper CIC (Colorful Image Colorization), CIC is able to model the color channels for grayscale input and recover the color of the image. The innovation of this paper is to consider the prediction of color channels (ab) as a classification task, i.e., the real ab channels are first encoded into 313 bins, and the forward process of the model is equivalent to performing 313 class classification. At the same time, in order to solve the problem that the image recovered color is affected by a large unsaturated area such as the background, the loss of each pixel is weighted according to the prior distribution of ab, which is essentially equivalent to doing color class balancing.\n\n**Paper**\n\n* [1] Zhang R ,  Isola P ,  Efros A A . Colorful Image Colorization[C]// European Conference on Computer Vision. Springer International Publishing, 2016.\n\n**Projects**\n\n* [Official Caffe Implement](https://github.com/richzhang/colorization/tree/caffe)\n* [Unofficial Pytorch implement](https://github.com/Epiphqny/Colorization)\n\n**Online Operation**\n\n* Ai Studio job project\uff1a[https://aistudio.baidu.com/aistudio/clusterprojectdetail/2304371](https://aistudio.baidu.com/aistudio/clusterprojectdetail/2304371)\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8906128909950556
      ],
      "excerpt": "1. Introduction \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9857976843877931
      ],
      "excerpt": "The CIC model is trained on 224x224 resolution, but since the model contains only convolutional layers, it can handle image inputs of arbitrary size when doing tests, and thus we report two different sets of test results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971246461632562
      ],
      "excerpt": "The dataset in the paper is ImageNet, and the experiments are conducted on the CIE Lab color space. The original ImageNet dataset consists of about 130W training images, 50,000 validation set images and 10,000 test images, and the original training set is used for this replication. According to the paper description, the validation of the model is performed on the first 10,000 validation sets, and the testing is performed on 10,000 separate images in the validation set. The division follows the paper \"Learning representations for automatic colorization\" , and the specific division strategy See official website. Please put files under ./data/xxx. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9324836533926992
      ],
      "excerpt": "Due to the RAM limitations of the Ai Studio scripting task, this implementation uses four Tesla V100 GPUs in parallel, with training initiated as follows. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9052870051358356
      ],
      "excerpt": "step2\uff1a Image classification is performed on the generated colorized images to get the classification accuracy, because the generated colorized images can get higher classification accuracy than grayscale images when the colorized model performs well. Here, consistent with the original paper, a pre-trained VGG-16 is used to perform the classification. The model structure and pre-trained weights are obtained from paddle.vision.models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.988593447251868
      ],
      "excerpt": "step3\uff1a The Euclidean distance is calculated between the real image and the ab channel of the generated image, and the proportion of pixels within a specific threshold is counted. The thresholds are scanned one by one from 0 to 150, and the final statistics are drawn as a curve to calculate the area under the curve. This is similar to the traditional AuC calculation, but this implementation does not use a third-party library, and directly approximates the area under the curve by the area of the \"right-angle trapezoid \" formed between two adjacent thresholds. Summing over 150 trapezoid areas and then normalizing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.962098986641762
      ],
      "excerpt": "The pre-training model for this implementation is available at Baidu Cloud Drive, extraction code: f444 , The pre-training model consists of three groups, which are Full model, Non-rebalance variant, and Rebalance variants. Each folder contains the final checkpoint and the train loss recorded during training using the Paddle visualdl tool. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9740573564989506,
        0.9391767134256334
      ],
      "excerpt": "\u251c\u2500data                            #: dir for all data \n\u251c\u2500imgs                            #: dir for all imags \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8157416427335317,
        0.959961309707981
      ],
      "excerpt": "\u251c\u2500resources                       #: code and data from others \n\u251c\u2500model                           #: dir for checkpoints \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8939421974090842
      ],
      "excerpt": "|                        Full model                         |                    variant\uff1anon-rebalance                    |                     bariant2\uff1arebalance                      | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8349546288347451
      ],
      "excerpt": "20 images are randomly selected from the coloring images generated in the final model, and the coloring effect is shown in the following figure: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8199052262133086
      ],
      "excerpt": "Additional information about the model can be found in the following table: \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Callifrey/Paddle-CIC/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 06:29:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Callifrey/Paddle-CIC/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Callifrey/Paddle-CIC",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9893272198983933,
        0.9906248903846466
      ],
      "excerpt": "git clone https://github.com/Callifrey/Paddle-CIC.git \ncd Paddle-CIC \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8048807218507823
      ],
      "excerpt": "| Framework version     | Paddle 2.0.2                                                 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8712528073925311
      ],
      "excerpt": "| Supported Hardware    | GPU\u3001CPU                                                     | \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8606280910157142
      ],
      "excerpt": "5. Quick Start \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8386849300772073
      ],
      "excerpt": "  | Rebalance(color rebalance, $\\lambda=0$ ) | 77.91%(67.3%)  | 42.86%     | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150376877179804
      ],
      "excerpt": "python -m paddle.distributed.launch --gpus '0,1,2,3' train.py --image_dir [training path] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9398017926319867
      ],
      "excerpt": "  python test.py --image_dir [testing path] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "  python metrics_acc.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "  python metrics_auc.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8543750027996144
      ],
      "excerpt": "\u2502  dataset.py                     #: Class for dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.847557426487946,
        0.8792405577085516,
        0.918436561610709,
        0.9064744508851802,
        0.8750364213002166
      ],
      "excerpt": "\u2502  metrics_auc.py                 #: testing for AuC \n\u2502  model.py                       #: model structure \n\u2502  train.py                       #: training code \n\u2502  test.py                        #: testing code \n\u2502  utils.py                       #: tool classes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244433960617489
      ],
      "excerpt": "<img src=\"./imgs/fake.png\" width = \"70%\" height = \"70%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014432282976849
      ],
      "excerpt": "<img src=\"./imgs/compare.png\" width = \"80%\" height = \"80%\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Callifrey/Paddle-CIC/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Paddle-CIC",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Paddle-CIC",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Callifrey",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Callifrey/Paddle-CIC/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Hardware\uff1aGPU\u3001CPU\n* Pacakge\uff1a scikit-image>=0.14.2\n* Framework\uff1aPaddlePaddle>=2.0.0\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Fri, 24 Dec 2021 06:29:09 GMT"
    },
    "technique": "GitHub API"
  }
}