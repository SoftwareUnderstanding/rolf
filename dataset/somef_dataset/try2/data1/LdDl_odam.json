{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.10934",
      "https://arxiv.org/abs/1602.00763"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8584896223210811
      ],
      "excerpt": "YOLOv4 + Kalman filter for tracking             |  YOLOv4 + simple centroid tracking \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9734376944578341
      ],
      "excerpt": "ODaM is tool for doing monitoring via Darknet's neural network called Yolo V4 (paper: https://arxiv.org/abs/2004.10934). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9323116436099254
      ],
      "excerpt": "Object tracking via two possible techniques: Kalman tracking (filtering) or Centroid tracking; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9598596565459202
      ],
      "excerpt": "    anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9114870994186994
      ],
      "excerpt": "        \"camera_id\": \"f2abe45e-aad8-40a2-a3b7-0c610c0f3dda\" #: Unique ID for video source (useful for 'client-server' model) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8177918124334298
      ],
      "excerpt": "                \"text_settings\": { #: Setting for text above bounding boxes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9178499807601507
      ],
      "excerpt": "                \"display_object_id\": true #: If you want to display object identifier \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488,
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "                {\"image_coordinates\": [640, 360], \"epsg4326\": [37.61891380882616, 54.20564268115055]}, \n                {\"image_coordinates\": [640, 0], \"epsg4326\": [37.61875545294513, 54.20546281228973]}, \n                {\"image_coordinates\": [0, 0], \"epsg4326\": [37.61903085447736, 54.20543126804313]}, \n                {\"image_coordinates\": [0, 360], \"epsg4326\": [37.61906183714973, 54.20562590237201]} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LdDl/odam",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-04T11:26:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-30T13:34:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9920981105639499,
        0.9647070775291602
      ],
      "excerpt": "ODaM is project aimed to do monitoring such as: pedestrian detection and counting, vehicle detection and counting, speed estimation of objects, sending detected objects to gRPC server for detailed analysis. \nIt's written on Go with a lot of CGO. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8031644823071746,
        0.8935969341606405
      ],
      "excerpt": "We are working on this. \nNot too fast, but it is what it is. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9611605658088967
      ],
      "excerpt": "It's built on top of go-darknet which uses AlexeyAB's fork of Darknet. For doing computer vision stuff and video reading GoCV is used. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.901386191705978,
        0.9224637897051361,
        0.8473666105537133,
        0.8300873640883316
      ],
      "excerpt": "Is this library / software or even framework? \nI think about it as software with library capabilities. \nWhat it capable of? \nNot that much currently: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837884289440061
      ],
      "excerpt": "Sending data to dedicated gRPC server; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8704646515578273
      ],
      "excerpt": "Speed estimation based of GIS calculations (via matching pixels to WGS84). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9678716928603939,
        0.8708329527559678,
        0.9588931084285139,
        0.8975258987872633,
        0.8979364886256567
      ],
      "excerpt": "But I do no think that I'm ready to build gRPC/REST or any other web components of this software in C++ or Python (C++ is not that easy and Python...I just don't like Python syntax). That's why I prefer to stick with Go. \nWhy did you pick JSON for configuration purposes instead of TOML/YAML/INI or any other well-suited formats? \nCompared to TOML, JSON is not that 'human friendly', but still readable. \nIt is in standart Go's library. \nWell, it is in standart Go's library. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8502919111747997
      ],
      "excerpt": "Why bindings to Darknet instead of Opencv included stuff? \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.985797718463627
      ],
      "excerpt": "There is ROADMAP.md, but overall I am planning to extend capabilities of software:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9180336931222038
      ],
      "excerpt": "* Do gRPC accepting microservice for enabling software to catch information from external devices/systems/microservices and etc. E.g: you want to send message 'there is red light on traffic light\" to instance of software, then it would look like grpcServer.Send('there is red light on traffic light'). After that any captured object will have state with message above in it. So you can catch traffic offenders. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8146149013876199
      ],
      "excerpt": "Go bindings for Darknet - instructions link \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8038057416802907
      ],
      "excerpt": "   In case of my needs I need to detect license plates on vehicles and do OCR on server-side: you can take a look on https://github.com/LdDl/license_plate_recognition for gRPC server example \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8553048605481124
      ],
      "excerpt": "Usage of ./odam: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8352136435022707
      ],
      "excerpt": "Prepare configuration file for application. Example of file: conf.json. Description of fields: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9742588572965449,
        0.9812125800735242
      ],
      "excerpt": "        \"reduced_width\": 640, #: Desired width of image (for imshow and MJPEG streaming, also reduces inference time (processing &gt; accuracy) for neural network) \n        \"reduced_height\": 360, #: Desired height of image (for imshow and MJPEG streaming, also reduces inference time (processing &gt; accuracy) for neural network) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.886365564608391
      ],
      "excerpt": "    \"classes_settings\": [ #: classes settings (according to 'target_classes' in 'neural_network_settings') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9634584776315466
      ],
      "excerpt": "                    \"thickness\": 2 #: Thickness as is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643,
        0.9634584776315466
      ],
      "excerpt": "                    \"radius\": 4, #: Radius of circle \n                    \"thickness\": 2 #: Thickness as is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8623159049107327,
        0.9634584776315466
      ],
      "excerpt": "                    \"scale\": 0.5, #: Size of text \n                    \"thickness\": 1, #: Thickness as is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808274215371622
      ],
      "excerpt": "            \"class_name\": \"motorbike\", #: see \"car\" ref. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808274215371622
      ],
      "excerpt": "            \"class_name\": \"bus\", #: see \"car\" ref. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808274215371622
      ],
      "excerpt": "            \"class_name\": \"truck\", #: see \"car\" ref. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9304128086447093
      ],
      "excerpt": "                \"crop_mode\": \"crop\" #: When 'grpc_settings' field 'enable' is set to TRUE this option will be used for sending either cropped detected object (bbox==crop) or full image with bbox info to gRPC server-side application. Default is 'crop' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8571258258200706
      ],
      "excerpt": "        \"speed_estimation_settings\": { #: Setting for speed estimation bas on GIS convertion between different spatial systems \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ODAM - Object detection and Monitoring",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LdDl/odam/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 17:53:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/LdDl/odam/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "LdDl/odam",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/LdDl/odam/master/cmd/odam/download_data.sh",
      "https://raw.githubusercontent.com/LdDl/odam/master/cmd/odam/download_data_v4.sh",
      "https://raw.githubusercontent.com/LdDl/odam/master/cmd/odam/download_data_v4-tiny.sh",
      "https://raw.githubusercontent.com/LdDl/odam/master/cmd/odam/download_data_v3.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8488462851375117
      ],
      "excerpt": "MJPEG / imshow optional visual output; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9111777214450643
      ],
      "excerpt": "You got the idea. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8841894229402668,
        0.936417834980884
      ],
      "excerpt": "Sometimes you just do not need full OpenCV installation for object detection. I have such ANPR projet here: https://github.com/LdDl/license_plate_recognition \nI guess when I'm done with stable core I might switch from Go's Darknet bindings to OpenCV one (since ODaM-project requires OpenCV installation obviously) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9088492384593054
      ],
      "excerpt": "If you are here, then you are already helped a lot, since you noticed my existence :harold_face: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9663753014628432,
        0.9835414592936547,
        0.833114516308531,
        0.9119490234025086,
        0.8809447524573579
      ],
      "excerpt": "Need to enable CUDA (GPU) in every installation step where it's possible. \nInstall CUDA (we recommend version 10.2) \n    bash \n    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin \n    sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9623668047804587,
        0.9958091838382718
      ],
      "excerpt": "    sudo apt-get update \n    sudo apt-get -y install cuda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043929270298233,
        0.9749313600553876,
        0.8956581826429723,
        0.833114516308531
      ],
      "excerpt": "    source ~/.bashrc \nInstall cuDNN (we recommend version v7.6.5 (November 18th, 2019), for CUDA 10.2) \n    Go to NVIDIA's site and download .deb package. After downloading .deb package install it: \n    bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8143623855176694,
        0.833114516308531
      ],
      "excerpt": "    Do not forget to check if cuDNN installed properly: \n    bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9667962799953682
      ],
      "excerpt": "    cd  $HOME/cudnn_samples_v7/mnistCUDNN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "    cd - \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531,
        0.9879863063452118,
        0.9906248903846466
      ],
      "excerpt": "    bash \n    git clone https://github.com/AlexeyAB/darknet \n    cd ./darknet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9206633769338113,
        0.973434455409195,
        0.9748709027320682,
        0.845541617358747
      ],
      "excerpt": "    git checkout f056fc3b6a11528fa0522a468eca1e909b7004b7 \n    #: Enable GPU acceleration \n    sed 's/GPU=0/GPU=1/' ./Makefile \n    #: Enable cuDNN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474895321345809
      ],
      "excerpt": "    make \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9352069294677381
      ],
      "excerpt": "    Alternatively you can use Makefile from go-darknet repository: https://github.com/LdDl/go-darknet/blob/master/Makefile \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8867231269720702
      ],
      "excerpt": "GoCV - instructions link. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.949503704032964
      ],
      "excerpt": "You need to implement your gRPC server as following proto-file: https://github.com/LdDl/odam/blob/master/yolo_grpc.proto. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560018172730501
      ],
      "excerpt": "go install github.com/LdDl/odam/cmd/odam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "    ./download_data_v4.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8799817643954603
      ],
      "excerpt": "        \"source\": \"rtsp://127.0.0.1:554/h264\", #: Link to RTSP stream \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8464559084956892
      ],
      "excerpt": "<img src=\"screenshots/yolov4-kalman.gif\" width=\"640\">  |  <img src=\"screenshots/yolov4-simple.gif\" width=\"640\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810392105925326
      ],
      "excerpt": "Usage of ./odam: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8092760992474753
      ],
      "excerpt": "        Path to application's settings (default \"conf.json\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8320839096736419
      ],
      "excerpt": "    anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8673280088664579
      ],
      "excerpt": "                    \"rgba\": [0, 255, 0, 0], #: Text color \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8359299706379749
      ],
      "excerpt": "                    \"font\": \"hershey_simplex\" #: Text font \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8234475609995744,
        0.8289669050403863,
        0.8909625633895853,
        0.8289669050403863,
        0.8909625633895853
      ],
      "excerpt": "    odam --settings=conf.json \ngocv.Imshow() output: \n<img src=\"screenshots/imshow_screen_1.png\" width=\"720\"> \nMJPEG streaming output: \n<img src=\"screenshots/mjpeg_screen_1.png\" width=\"720\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/LdDl/odam/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Go",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2020 \"ODaM\" Authors\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ODaM - Object Detection and Monitoring",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "odam",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "LdDl",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/LdDl/odam/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "# What's new:\r\n1. Updated [gocv-blob library](https://github.com/LdDl/gocv-blob) to [v2.2.10](https://github.com/LdDl/gocv-blob/releases/tag/v2.2.10).\r\nNow determination of point side related to oblique line is more correct",
        "dateCreated": "2021-08-27T19:48:02Z",
        "datePublished": "2021-08-27T19:50:00Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.8.3",
        "name": "Version v0.8.3 - Update gocv-blob",
        "tag_name": "v0.8.3",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.8.3",
        "url": "https://api.github.com/repos/LdDl/odam/releases/48594305",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.8.3"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "# What's new:\r\n1. Updated [gocv-blob library](https://github.com/LdDl/gocv-blob) to [v2.2.9](https://github.com/LdDl/gocv-blob/releases/tag/v2.2.9).\r\nNow blob tracking is better due the \"more\" correct way to predict blob positions.\r\n2. Minor update README.md",
        "dateCreated": "2021-08-15T10:53:13Z",
        "datePublished": "2021-08-15T10:55:06Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.8.2",
        "name": "Version v0.8.2 - Update gocv-blob",
        "tag_name": "v0.8.2",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.8.2",
        "url": "https://api.github.com/repos/LdDl/odam/releases/47867579",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.8.2"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "# What's new:\r\n1. Following code:\r\n```go\r\nEuclideanPoint: &odam.EuclideanPoint{X: cvPt.X, Y: cvPt.Y},\r\n```\r\nreplaced with\r\n```go\r\nEuclideanPoint: &odam.EuclideanPoint{X: cvPt.X * float32(settings.VideoSettings.ScaleX), Y: cvPt.Y * float32(settings.VideoSettings.ScaleY)},\r\n```\r\nWith this code's change it is possible to send to gRPC server-side (if needed) coordinates of pixels track without scaling\r\n\r\n2. In some cases scaling pixel track is still needed, so it shoudl be optional. Start work on it.\r\n3. Overall information about scaling image before preprocessing would be usefull data to send to gRPC server. Start work on it.\r\n\r\n\r\np.s. We know about ugly and dirty JSON configuration, but it is what it is. When MVP stage would be passed we will consider TOML or better JSON structure.",
        "dateCreated": "2021-05-28T15:47:56Z",
        "datePublished": "2021-05-28T15:50:14Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.8.1",
        "name": "Version v0.8.1 - Non-scaled pixel track",
        "tag_name": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.8.1",
        "url": "https://api.github.com/repos/LdDl/odam/releases/43775301",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.8.1"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "# What's new:\r\n\r\n1. Added speed estimation based on spation information\r\n2. Added option for gRPC track info send\r\n3. Updated docs\r\n4. Continue working on debugging new feature (speed estimation)",
        "dateCreated": "2021-05-28T13:46:08Z",
        "datePublished": "2021-05-28T13:47:56Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.8.0",
        "name": "Version v0.8.0 - Speed estimation",
        "tag_name": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.8.0",
        "url": "https://api.github.com/repos/LdDl/odam/releases/43767604",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.8.0"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "## What's new\r\n1. KalmanTracker integration (+check if it's better or not) + extend configuration file for picking needed tracker.\r\n2. Updated ROADMAP\r\n3. Continue work on velocity estimation of moving objects",
        "dateCreated": "2021-04-03T11:49:47Z",
        "datePublished": "2021-04-03T11:51:03Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.7.0",
        "name": "Version v0.7.0",
        "tag_name": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.7.0",
        "url": "https://api.github.com/repos/LdDl/odam/releases/40897884",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.7.0"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "Misspelled accidentally",
        "dateCreated": "2021-04-03T10:48:41Z",
        "datePublished": "2021-04-03T10:49:35Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.6.6",
        "name": "v0.6.6 - Minor",
        "tag_name": "v0.6.6",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.6.6",
        "url": "https://api.github.com/repos/LdDl/odam/releases/40897194",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.6.6"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "## What's new\r\n1. Migrate from [gocv-blob v1.2.0](https://github.com/LdDl/gocv-blob/releases/tag/v1.2.0) to [gocv-blob v2.0.10](https://github.com/LdDl/gocv-blob/releases/tag/v2.0.10)\r\n2. Updated ROADMAP\r\n3. Start work on velocity estimation of objects\r\n4. Start work on KalmanTracker integration (+check if it's better or not) + extend configuration file for picking needed tracker.",
        "dateCreated": "2021-04-02T19:05:01Z",
        "datePublished": "2021-04-02T19:07:05Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.6.5",
        "name": "Version v0.6.5",
        "tag_name": "v0.6.5",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.6.5",
        "url": "https://api.github.com/repos/LdDl/odam/releases/40883406",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.6.5"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "# Added\r\n1. Crop object from frame as option (https://github.com/LdDl/odam/issues/6)\r\n2. Optional number of points in single track (https://github.com/LdDl/odam/issues/8)\r\n\r\n# Updated\r\n1. Since preparing (crop/no crop/image to bytes and other operation) data for gRPC communication we've decided to move corresponding code under this condition\r\n```go\r\nif settings.GrpcSettings.Enable {\r\n```\r\nDetailed info here: https://github.com/LdDl/odam/commit/6ed602a9c7b85e2d2838cf5bf61275170424afb2#diff-d55ac8ebd1a8973b8068e41ac9121be5c36f1753e24af4f37c774d70c1afc0ff\r\n\r\n2. Corresponding README.md updates",
        "dateCreated": "2021-02-19T11:03:16Z",
        "datePublished": "2021-02-19T11:07:10Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.5.5",
        "name": "Version v0.5.5",
        "tag_name": "v0.5.5",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.5.5",
        "url": "https://api.github.com/repos/LdDl/odam/releases/38303691",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.5.5"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "# Updated\r\n1. New version of [gocv-blob](https://github.com/LdDl/gocv-blob) - [v1.2.0](https://github.com/LdDl/gocv-blob/releases/tag/v1.2.0)\r\n2. New version of [go-darknet](https://github.com/LdDl/go-darknet) - [v1.3.5](https://github.com/LdDl/go-darknet/releases/tag/v1.3.5)\r\n3. Switch values to pointer for detection Go's channel\r\n4. Minor updates for README.md and example settings.\r\n5. Close() call for neural network\r\n\r\n# Added\r\n1. Object ID display as an option",
        "dateCreated": "2021-02-01T10:38:19Z",
        "datePublished": "2021-02-01T10:39:04Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.5.1",
        "name": "Version v0.5.1",
        "tag_name": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.5.1",
        "url": "https://api.github.com/repos/LdDl/odam/releases/37169322",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.5.1"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "Update:\r\nUpdated to [gocv-blob of version v1.1.2](https://github.com/LdDl/gocv-blob/releases/tag/v1.1.2)\r\n\r\nAdded:\r\nNow send information about class of detected object to gRPC server https://github.com/LdDl/odam/blob/master/cmd/odam/main.go#L184",
        "dateCreated": "2020-08-12T12:44:42Z",
        "datePublished": "2020-08-12T12:46:35Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.4.3",
        "name": "Version v0.4.3 - Update gocv-blob",
        "tag_name": "v0.4.3",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.4.3",
        "url": "https://api.github.com/repos/LdDl/odam/releases/29604928",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.4.3"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "Updated to [go-darknet of version v1.2.0](https://github.com/LdDl/go-darknet/releases/tag/v1.2.0)",
        "dateCreated": "2020-08-12T11:39:09Z",
        "datePublished": "2020-08-12T11:40:10Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.4.2",
        "name": "Version v0.4.2 - Update darknet version",
        "tag_name": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.4.2",
        "url": "https://api.github.com/repos/LdDl/odam/releases/29602578",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.4.2"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "Change protobuff generation:\r\n```proto\r\noption go_package = \".;odam\";\r\n```",
        "dateCreated": "2020-08-12T11:12:17Z",
        "datePublished": "2020-08-12T11:13:48Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.4.1",
        "name": "Version v0.4.1 - Hotfix for protobuff",
        "tag_name": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.4.1",
        "url": "https://api.github.com/repos/LdDl/odam/releases/29601689",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.4.1"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "Updated:\r\n* Some variable names in *.proto\r\n\r\nAdded:\r\n* New object **ClassInfo**. It contains both class identifier and classname of detected object.",
        "dateCreated": "2020-08-12T11:05:41Z",
        "datePublished": "2020-08-12T11:07:37Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.4.0",
        "name": "Version v0.4.0 - Protobuff update",
        "tag_name": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.4.0",
        "url": "https://api.github.com/repos/LdDl/odam/releases/29601475",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.4.0"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "* Send to gRPC initial data from virtual line\r\nhttps://github.com/LdDl/odam/commit/0ad7f125f4e3993aceab40899b35747329a9966a#diff-f1f3029ad2a5434380368a2669dcf843\r\n* Add \"source\" to virtual line information\r\nhttps://github.com/LdDl/odam/commit/d3327fab9366e5c0cf30e036c87135421d65f8ce#diff-a9f3717b84d6edd3c33bc2fa267abb55",
        "dateCreated": "2020-07-14T14:05:21Z",
        "datePublished": "2020-07-14T14:06:33Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.3.1",
        "name": "Version v0.3.1 - Hotfix for virtual line",
        "tag_name": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.3.1",
        "url": "https://api.github.com/repos/LdDl/odam/releases/28545645",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.3.1"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "* Change ID of virtual line from int32 to int64\r\nhttps://github.com/LdDl/odam/commit/26977c24b780d1821c3e00e3739eeecff5893c72#diff-bee1b19602a9f84a06f44e111f79a479 and https://github.com/LdDl/odam/commit/26977c24b780d1821c3e00e3739eeecff5893c72#diff-a0160e5dddb57516c8f7b5750d6b62fb\r\n* Send information about virtual line to possible gRPC sever\r\nhttps://github.com/LdDl/odam/commit/26977c24b780d1821c3e00e3739eeecff5893c72#diff-f1f3029ad2a5434380368a2669dcf843\r\n",
        "dateCreated": "2020-07-14T13:16:40Z",
        "datePublished": "2020-07-14T13:18:36Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.3.0",
        "name": "Version v0.3.0 - Send virtual line info to gRPC server",
        "tag_name": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.3.0",
        "url": "https://api.github.com/repos/LdDl/odam/releases/28543490",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.3.0"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "* Convert gRPC from 'license_plate_recognition' to 'odam'\r\n* Update Readme\r\n",
        "dateCreated": "2020-07-07T08:55:43Z",
        "datePublished": "2020-07-07T10:27:04Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.2.0",
        "name": "Version v0.2.0",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.2.0",
        "url": "https://api.github.com/repos/LdDl/odam/releases/28305789",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "LdDl",
        "body": "",
        "dateCreated": "2020-06-30T08:45:21Z",
        "datePublished": "2020-06-30T08:46:07Z",
        "html_url": "https://github.com/LdDl/odam/releases/tag/v0.1.0",
        "name": "First release",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/LdDl/odam/tarball/v0.1.0",
        "url": "https://api.github.com/repos/LdDl/odam/releases/28057400",
        "zipball_url": "https://api.github.com/repos/LdDl/odam/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Bindings to [OpenCV](https://github.com/opencv/opencv) - [GoCV](https://github.com/hybridgroup/gocv#gocv). License is Apache-2.0\n* MJPEG streaming via GoCV - [mjpeg](https://github.com/hybridgroup/mjpeg). No license currently\n* Darknet (AlexeyAB's fork) - [darknet](https://github.com/AlexeyAB/darknet#yolo-v4-and-yolo-v3v2-for-windows-and-linux). License is YOLO LICENSE\n* Golang binding to darknet - [go-darknet](https://github.com/LdDl/go-darknet#go-darknet-go-bindings-for-darknet-yolo-v4-yolo-v3). License is Apache-2.0\n* Tracking objects - [gocv-blob](https://github.com/LdDl/gocv-blob#gocv-blob). No license currently\n* gRPC for doing \"'client-server'\" application - [grpc](https://github.com/grpc/grpc-go). License is Apache-2.0\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Thu, 23 Dec 2021 17:53:24 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have troubles or questions please [open an issue](https://github.com/LdDl/odam/issues/new).\nFeel free to make PR's (we do not have contributing guidelines currently, but we will someday)\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "object-detection",
      "neural-network",
      "vehicle-detection",
      "pedestrian-detection",
      "vehicle-counting",
      "vehicle-detection-and-tracking",
      "yolov3",
      "darknet",
      "darknet-bindings",
      "yolov4",
      "tracking-by-detection",
      "detection"
    ],
    "technique": "GitHub API"
  }
}