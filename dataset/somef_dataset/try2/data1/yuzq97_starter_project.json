{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [A Style-Based Generator Architecture for Generative Adversarial Networks](https://arxiv.org/pdf/1812.04948.pdf), Karras *et al.*, CVPR 2019\n- [Analyzing and Improving the Image Quality of StyleGAN](https://arxiv.org/pdf/1912.04958.pdf), Karras *et al.*, CVPR 2020\n- [Interpreting the Latent Space of GANs for Semantic Face Editing](https://arxiv.org/pdf/1907.10786.pdf), Shen *et al.*, CVPR 2020\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yuzq97/starter_project",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-20T03:59:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-29T09:54:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9948440099453827,
        0.9798621108265912,
        0.9984705832642348,
        0.9606841438765341,
        0.9154567341957237
      ],
      "excerpt": "For this starter project, I played with the latent space of StyleGAN (Karras et al., CVPR 2019) and looked into the methods that tackle the disentanglement of facial attributes, a task discussed in the original StyleGAN paper. The goal is to turn an unconditionally trained GAN model into a controllable one, which means that the model can edit a particular facial attribute without affecting another. \nWhile the StyleGAN paper has already found that the intermediate latent space W is less entagled by Z, there exists another approach proposed in the CVPR paper \"Interpreting the Latent Space of GANs for Semantic Face Editing\" (Shen et al., CVPR 2020) called \"conditional manipulation\". The authors of the paper first prove that the latent space Z of StyleGAN is separable by a hyperplane given any facial attributes, and then find a projected direction along which moving the latent code changes attribute A without affecting attribute B. \nThe purpose of this project is thus to try my hand at using a GAN model for face editing, and do a little compare-and-contrast between the two disentanglement methods. I also built a Colab demo that allows users to play around with various combinations of models and boundaries for face editing. \nThe offical Tensorflow version of StyleGAN requires a GPU to run, but thanks to the work by Shen et al., I was able to use a PyTorch version of it which supports running on CPU. The model first loads the weights from the pre-trained StyleGAN, randomly samples latent codes which are then linearly interpolated with respect to the given boundary, and finally synthesizes result images from the new latent codes. \nThe training part of this projects involves finding boundaries for various facial attributes, both unconditioned and conditional ones. Training unconditioned boundaries requires an attribute score predictor, so I used the pre-trained unconditioned boundaries to avoid over complicating the work. I was then able to generate myself a handful of conditional boundaries using the function project_boundary() in utils/manipulator.py, which takes in a primal boundary and another one or two boundaries, and returns the modified primal boundary conditioned on the other boundaries. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9789306447932938
      ],
      "excerpt": "-b: Path to the semantic boundary. All boundaries are saved under boundaries/ in the form of {attribute_name}_boundary.npy for Z space and {attribute_name}_w_boundary.npy for W space.\\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8939246506554462,
        0.9565183371545206
      ],
      "excerpt": "-s: Latent space used in StyleGAN, either \"W\" or \"Z\". (\"Z\" by default) \nIn this project, I examined five prominent facial attributes: age, gender, eyeglasses, pose, and smile. To determine which of the two disentaglement methods achieves better effect, I used both methods on the same set of images generated from StyleGAN model trained on the FFHQ dataset. The results are as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in Z space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in W space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on eyeglasses \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in Z space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in W space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on age \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on eyeglasses \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in Z space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in W space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on smile \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on age \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in Z space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in W space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on eyeglasses \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on smile \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in Z space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8131842519682871
      ],
      "excerpt": "Figure: result of editing in W space \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on eyeglasses \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762221274704578
      ],
      "excerpt": "Figure: result of editing in Z space conditioned on gender \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yuzq97/starter_project/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 18:45:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yuzq97/starter_project/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yuzq97/starter_project",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yuzq97/starter_project/main/demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8582145979147952
      ],
      "excerpt": "-o: Directory to save the output results. \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yuzq97/starter_project/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Starter Project: An Attempt to Manipulate the Latent Space of StyleGAN for Face Editing",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "starter_project",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yuzq97",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yuzq97/starter_project/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 18:45:53 GMT"
    },
    "technique": "GitHub API"
  }
}