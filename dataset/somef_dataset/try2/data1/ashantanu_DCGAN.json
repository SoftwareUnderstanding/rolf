{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8100655823024339,
        0.9287913210266059
      ],
      "excerpt": "    console.log(\"Clicked on connect button\");  \n    document.querySelector(\"colab-toolbar-button\").click() // Change id here \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ashantanu/DCGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-04T07:38:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-08T07:23:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9126754636718425
      ],
      "excerpt": "DCGAN implementation for learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8580788148745512
      ],
      "excerpt": "DCGAN Implementation using PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.935063861568017,
        0.8941559082141863
      ],
      "excerpt": "Convolutions: Guide to Convolutions or This Blog \nWeight Initialization and Pytorch functions for it \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9010299230809182,
        0.9064263045055452
      ],
      "excerpt": "Why to use Detach in this code, and why is it not used in generator step: 1 and 2 \nFor reproducibility, manually set the random of pytorch and other python libraries. Refer this for reproducibility pytorch using CUDA. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9294934139707477,
        0.934315285643842,
        0.9652544801638248
      ],
      "excerpt": "Transpose Convolution: Like an opposite of convolution. For ex. Maps 1x1 to 3x3.  \nUpsampling: opposite of pooling. Fills in pixels by copying pixel values, using nearest neighbor or some other method. \nFor keeping track of the generator\u2019s learning progression, generate a fixed batch of latent vectors. We can pass it through generator to see visualize how generator improves. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8975498317542809
      ],
      "excerpt": "Google Colab: Keep Connected, add data, save model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8246540748353144
      ],
      "excerpt": "Check what is dilation in conv2d layer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9519807833067179,
        0.8623078819710108
      ],
      "excerpt": "Understand weight initialization in BatchNorm: how does it work?, what is affine used for?, how to initialize it properly \nIs there a choice to be made for sampling latent variable  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "My first GAN implementation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ashantanu/DCGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 03:36:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ashantanu/DCGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ashantanu/DCGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8432248230873977
      ],
      "excerpt": "DCGAN Implementation using PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9759361443380079
      ],
      "excerpt": "Using 3 epochs on GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "PyTorch Layers \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ashantanu/DCGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN Implementation using PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ashantanu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ashantanu/DCGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* clone this repo using \n<pre><code>\ngit clone https://github.com/ashantanu/DCGAN.git\n</code></pre>\n* download and unzip celeba [dataset](http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html) to the folder name 'celeba'. I used below snippet from a udacity google colab [notebook](https://colab.research.google.com/drive/1ytjiIM_sZohV1I6p-9Cov6DtJjidJmcq)\n<pre><code>\nmkdir celeba && wget https://s3-us-west-1.amazonaws.com/udacity-dlnfd/datasets/celeba.zip\n</code></pre>\n* control parameters in config.yml\n* run main.py\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 03:36:24 GMT"
    },
    "technique": "GitHub API"
  }
}