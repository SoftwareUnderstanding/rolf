{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1511.06434"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9490753289412834
      ],
      "excerpt": "[arXiv] Ian J. Goodfellow, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834
      ],
      "excerpt": "[arXiv] Alec Radford, Luke Metz, \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jpowie01/DCGAN_CelebA",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-05T21:53:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-02T17:41:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8428079929548039,
        0.8146636962019129,
        0.8865193460381716
      ],
      "excerpt": "It takes about 50 epochs to train DCGAN that fools discriminator on \n~90% of fake images. Feel free to run it for longer time! A single epoch \ntakes about ~8:45 minutes on the GTX 1060 6GB. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9889506004423652
      ],
      "excerpt": "Visualization of latent space \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8129762068704295
      ],
      "excerpt": "  Soumith Chintala \"Unsupervised Representation Learning with Deep \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Example implementation of DCGAN on CelebA dataset in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jpowie01/DCGAN_CelebA/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Sat, 25 Dec 2021 02:04:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jpowie01/DCGAN_CelebA/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jpowie01/DCGAN_CelebA",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8778487586960795
      ],
      "excerpt": "Example 1 | Example 2 | Example 3 | Example 4 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jpowie01/DCGAN_CelebA/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN for CelebA in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN_CelebA",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jpowie01",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jpowie01/DCGAN_CelebA/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Training and visualization should work without any modifications\nand default arguments will reproduce my results. Hyperparameters\nwere taken from the papers but can be tuned by passing arguments\nto below scripts.\n\n**Download dataset:**\n\n1. Use [this Google Drive](https://drive.google.com/open?id=0B7EVK8r0v71pZjFTYXZWM3FlRnM)\n   to download images (URL points to original dataset shared\n   by its authors).\n\n2. Put it into `dataset` directory and unpack.\n\n3. Wrap unpacked directory (`img_align_celeba`) into another one\n   named `celeba`. This is a requirement set by PyTorch's\n   implementation of ImageFolder.\n\n**Instruction:**\n\n```bash\n$ virtualenv -p python3.7 venv\n$ . venv/bin/activate\n(venv) $ pip install -r requirements.txt\n(venv) $ python train.py\n(venv) $ python visualize.py --checkpoint={YOUR_CHECKPOINT}\n```\n\n**Help:**\n\n```bash\n(venv) $ python train.py -h\n(venv) $ python visualize.py -h\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Sat, 25 Dec 2021 02:04:02 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gan",
      "dcgan",
      "pytorch",
      "celeba"
    ],
    "technique": "GitHub API"
  }
}