{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1705.07874",
      "https://arxiv.org/abs/1802.03888",
      "https://arxiv.org/abs/1905.04610"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Our lab's paper applying this package:  \n[Gradient Boosting Machine Learning to Improve Satellite-Derived Column Water Vapor Measurement Error](https://doi.org/10.5281/zenodo.3568449)\n\nCorresponding SHAP plots package in Python: <https://github.com/slundberg/shap>\n\nPaper 1. 2017 [A Unified Approach to Interpreting Model Predictions](https://arxiv.org/abs/1705.07874)  \nPaper 2. 2019 [Consistent Individualized Feature Attribution for Tree Ensembles](https://arxiv.org/abs/1802.03888)  \nPaper 3. 2019 [Explainable AI for Trees: From Local Explanations to Global Understanding](https://arxiv.org/abs/1905.04610)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The citation could be seen obtained using `citation(\"SHAPforxgboost\")`\n\n```{r}\nTo cite package \u2018SHAPforxgboost\u2019 in publications use:\n\n  Yang Liu and Allan Just (2020). SHAPforxgboost: SHAP Plots for 'XGBoost'. R package version 0.1.0.\n  https://github.com/liuyanguu/SHAPforxgboost/\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {SHAPforxgboost: SHAP Plots for 'XGBoost'},\n    author = {Yang Liu and Allan Just},\n    year = {2020},\n    note = {R package version 0.1.0},\n    url = {https://github.com/liuyanguu/SHAPforxgboost/},\n  }\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "<!-- badges: end --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "predict(object = xgb_model, newdata = X_train, predcontrib = TRUE) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liuyanguu/SHAPforxgboost",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-19T12:33:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-20T00:17:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9652364878269222
      ],
      "excerpt": "Please refer to this blog as the vignette: more examples and discussion on SHAP values in R, why use SHAP, and a comparison to Gain: SHAP visualization for XGBoost in R \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "SHAP (SHapley Additive exPlnation) visualization for 'XGBoost' in 'R'",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liuyanguu/SHAPforxgboost/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Thu, 23 Dec 2021 15:02:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "liuyanguu/SHAPforxgboost",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/liuyanguu/SHAPforxgboost/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please install from CRAN or Github:\n\n``` r\ninstall.packages(\"SHAPforxgboost\")\n```\n\n``` r\ndevtools::install_github(\"liuyanguu/SHAPforxgboost\")\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8119621402425703,
        0.876945816858941
      ],
      "excerpt": "SHAPforxgboost plots the SHAP values returned by the predict function. The shap.values function obtains SHAP values using: \npredict(object = xgb_model, newdata = X_train, predcontrib = TRUE) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "R"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/liuyanguu/SHAPforxgboost/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'YEAR: 2019\\nCOPYRIGHT HOLDER: Yang Liu liuyanguu\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHAPforxgboost <a href='https://github.com/liuyanguu/SHAPforxgboost'><img src=\"man/figures/logo.png\" align=\"right\" height=\"138.5\"/></a>",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHAPforxgboost",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "liuyanguu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liuyanguu/SHAPforxgboost/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "liuyanguu",
        "body": "",
        "dateCreated": "2020-12-18T16:57:54Z",
        "datePublished": "2021-01-08T21:54:59Z",
        "html_url": "https://github.com/liuyanguu/SHAPforxgboost/releases/tag/0.1.0",
        "name": "Version 0.1.0 is published on cran",
        "tag_name": "0.1.0",
        "tarball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/tarball/0.1.0",
        "url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/releases/36164358",
        "zipball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/zipball/0.1.0"
      },
      {
        "authorType": "User",
        "author_name": "liuyanguu",
        "body": "Major revise on function documentations, see news for details.",
        "dateCreated": "2020-02-09T18:24:08Z",
        "datePublished": "2020-02-09T19:27:34Z",
        "html_url": "https://github.com/liuyanguu/SHAPforxgboost/releases/tag/0.0.3",
        "name": "Version 0.0.3 is published on cran",
        "tag_name": "0.0.3",
        "tarball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/tarball/0.0.3",
        "url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/releases/23516565",
        "zipball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/zipball/0.0.3"
      },
      {
        "authorType": "User",
        "author_name": "liuyanguu",
        "body": "Rewrote the dependence plot function. Improved the dilute option. ",
        "dateCreated": "2019-08-28T13:33:13Z",
        "datePublished": "2019-08-28T16:53:36Z",
        "html_url": "https://github.com/liuyanguu/SHAPforxgboost/releases/tag/v0.0.2",
        "name": "Version 0.0.2 is published on cran",
        "tag_name": "v0.0.2",
        "tarball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/tarball/v0.0.2",
        "url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/releases/19599291",
        "zipball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/zipball/v0.0.2"
      },
      {
        "authorType": "User",
        "author_name": "liuyanguu",
        "body": "The github version (0.0.2) contains update, download from github. ",
        "dateCreated": "2019-08-10T00:01:37Z",
        "datePublished": "2019-08-10T20:54:58Z",
        "html_url": "https://github.com/liuyanguu/SHAPforxgboost/releases/tag/0.0.1",
        "name": "Version 0.0.1 is published on cran",
        "tag_name": "0.0.1",
        "tarball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/tarball/0.0.1",
        "url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/releases/19210935",
        "zipball_url": "https://api.github.com/repos/liuyanguu/SHAPforxgboost/zipball/0.0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 56,
      "date": "Thu, 23 Dec 2021 15:02:06 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**Summary plot**\n\n```{r}\n#: run the model with built-in data, these codes can run directly if package installed  \nlibrary(\"SHAPforxgboost\")\ny_var <-  \"diffcwv\"\ndataX <- as.matrix(dataXY_df[,-..y_var])\n\n#: hyperparameter tuning results\nparams <- list(objective = \"reg:squarederror\",  #: For regression\n                   eta = 0.02,\n                   max_depth = 10,\n                   gamma = 0.01,\n                   subsample = 0.98,\n                   colsample_bytree = 0.86)\n\nmod <- xgboost::xgboost(data = dataX, label = as.matrix(dataXY_df[[y_var]]), \n                       params = params, nrounds = 200,\n                       verbose = FALSE, \n                       early_stopping_rounds = 8)\n                       \n#: To return the SHAP values and ranked features by mean|SHAP|\nshap_values <- shap.values(xgb_model = mod, X_train = dataX)\n#: The ranked features by mean |SHAP|\nshap_values$mean_shap_score\n\n#: To prepare the long-format data:\nshap_long <- shap.prep(xgb_model = mod, X_train = dataX)\n#: is the same as: using given shap_contrib\nshap_long <- shap.prep(shap_contrib = shap_values$shap_score, X_train = dataX)\n#: (Notice that there will be a data.table warning from `melt.data.table` due to `dayint` coerced from\n#: integer to double)\n\n#: **SHAP summary plot**\nshap.plot.summary(shap_long)\n\n#: sometimes for a preview, you want to plot less data to make it faster using `dilute`\nshap.plot.summary(shap_long, x_bound  = 1.2, dilute = 10)\n\n#: Alternatives options to make the same plot:\n#: option 1: start with the xgboost model\nshap.plot.summary.wrap1(mod, X = dataX)\n\n#: option 2: supply a self-made SHAP values dataset (e.g. sometimes as output from cross-validation)\nshap.plot.summary.wrap2(shap_values$shap_score, dataX)\n\n```\n\n<p align=\"center\">\n  <img src = \"https://liuyanguu.github.io/post/2019-07-18-visualization-of-shap-for-xgboost_files/figure-html/unnamed-chunk-9-1.png\" width=\"500\" height=\"400\"/>\n</p>\n\n**Dependence plot**\n\n```{r}\n#: **SHAP dependence plot**\n#: if without y, will just plot SHAP values of x vs. x\nshap.plot.dependence(data_long = shap_long, x = \"dayint\")\n\n\n#: optional to color the plot by assigning `color_feature` (Fig.A)\nshap.plot.dependence(data_long = shap_long, x= \"dayint\",\n                     color_feature = \"Column_WV\")\n                           \n#: optional to put a different SHAP values on the y axis to view some interaction (Fig.B)      \nshap.plot.dependence(data_long = shap_long, x= \"dayint\",\n                     y = \"Column_WV\", color_feature = \"Column_WV\")                          \n\n```\n\n<p align=\"center\">\n  <img src = \"https://liuyanguu.github.io/post/2019-07-18-visualization-of-shap-for-xgboost_files/figure-html/unnamed-chunk-11-1.png\"/>\n</p>\n\n```{r}\n#: To make plots for a group of features:\nfig_list = lapply(names(shap_values$mean_shap_score)[1:6], shap.plot.dependence, \n                  data_long = shap_long, dilute = 5)\ngridExtra::grid.arrange(grobs = fig_list, ncol = 2)\n```\n\n**SHAP interaction plot**\n\nThis example will take very long, don't run it, try a small dataset or check the example in `shap.prep.interaction.`\n\n```{r}\n#: prepare the data using either: \n#: notice: this step is slow since it calculates all the combinations of features. \n#: It may take very long on personal laptop.\nshap_int <- shap.prep.interaction(xgb_mod = mod, X_train = dataX)\n#: it is the same as:\nshap_int <- predict(mod, dataX, predinteraction = TRUE)\n\n#: **SHAP interaction effect plot **\nshap.plot.dependence(data_long = shap_long,\n                           data_int = shap_int,\n                           x= \"Column_WV\",\n                           y = \"AOT_Uncertainty\", \n                           color_feature = \"AOT_Uncertainty\")\n```\n\n<p align=\"center\">\n  <img src = \"https://liuyanguu.github.io/post/2019-07-18-visualization-of-shap-for-xgboost_files/figure-html/unnamed-chunk-15-1.png\"/>\n</p>\n\n**SHAP force plot**\n\n```{r}\n#: choose to show top 4 features by setting `top_n = 4`, set 6 clustering groups.  \nplot_data <- shap.prep.stack.data(shap_contrib = shap_values$shap_score, top_n = 4, n_groups = 6)\n\n#: choose to zoom in at location 500, set y-axis limit using `y_parent_limit`  \n#: it is also possible to set y-axis limit for zoom-in part alone using `y_zoomin_limit`  \nshap.plot.force_plot(plot_data, zoom_in_location = 500, y_parent_limit = c(-1,1))\n\n#: plot by each cluster\nshap.plot.force_plot_bygroup(plot_data)\n\n```\n\n<p align=\"center\">\n  <img src = \"https://liuyanguu.github.io/post/2019-07-18-visualization-of-shap-for-xgboost_files/figure-html/unnamed-chunk-16-1.png\"/>\n</p>\n\n<p align=\"center\">  \n  <img src = \"https://liuyanguu.github.io/post/2019-07-18-visualization-of-shap-for-xgboost_files/figure-html/unnamed-chunk-16-2.png\"/>\n</p>\n\n",
      "technique": "Header extraction"
    }
  ]
}