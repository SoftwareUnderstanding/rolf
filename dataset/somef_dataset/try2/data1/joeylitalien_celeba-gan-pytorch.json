{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1701.07875",
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1511.06434"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": ">Arjovsky et al. [Wasserstein Generative Adversarial Networks](https://arxiv.org/abs/1701.07875). In *Proceedings of the 34th International Conference on Machine Learning*, ICML 2017.\n\n>Goodfellow et al. [Generative Adversarial Nets](https://arxiv.org/abs/1406.2661). In *Advances in Neural Information\nProcessing Systems 27: Annual Conference on Neural Information Processing Systems\n2014*, 2014.\n\n>Mao et al. [Multi-class Generative Adversarial Networks with the L2 Loss Function](https://arxiv.org/abs/1511.06434). arXiv,  abs/1611.04076, 2016.\n\n>Radford et al. [Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks](https://arxiv.org/abs/1511.06434). arXiv, abs/1511.06434, 2015.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8944178096468923
      ],
      "excerpt": "          --video \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8944178096468923
      ],
      "excerpt": "          --video \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joeylitalien/celeba-gan-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-03-31T20:44:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-23T06:06:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9006688480076538
      ],
      "excerpt": "To train a model, simply specify the model type (gan, wgan or lsgan) with the appropriate hyperparameters. In case these parameters are not specified, the program reverts back to default training parameters from the original papers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8545979417049816
      ],
      "excerpt": "This will linearly interpolate between two random tensors generated from seeds 140 and 180 and create a GIF/MP4 videos of the sequence. The frames and videos will be stored in ./out. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8086851023328152
      ],
      "excerpt": "This will linearly interpolate between two random images generated from seeds 140 and 180 and create a GIF/MP4 videos of the sequence. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9668956776961577
      ],
      "excerpt": "We reuse the code from Shane Barratt to quantitatively measure our models' performance. Calculating the scores using 4096 samples gives the bar graph below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Generative Adversarial Networks in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joeylitalien/celeba-gan-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Thu, 23 Dec 2021 00:43:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/joeylitalien/celeba-gan-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "joeylitalien/celeba-gan-pytorch",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/joeylitalien/celeba-gan-pytorch/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/joeylitalien/celeba-gan-pytorch/master/explore/stack.sh",
      "https://raw.githubusercontent.com/joeylitalien/celeba-gan-pytorch/master/src/make_anim.sh",
      "https://raw.githubusercontent.com/joeylitalien/celeba-gan-pytorch/master/src/training/all.sh",
      "https://raw.githubusercontent.com/joeylitalien/celeba-gan-pytorch/master/src/training/wgan.sh",
      "https://raw.githubusercontent.com/joeylitalien/celeba-gan-pytorch/master/src/training/gan.sh",
      "https://raw.githubusercontent.com/joeylitalien/celeba-gan-pytorch/master/src/training/lsgan.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": "           --cuda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": "          --cuda \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": "          --cuda  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": "          --cuda  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9495181121516185
      ],
      "excerpt": "./train.py --type wgan \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8209953910651351
      ],
      "excerpt": "This assumes that the training images are in ./../data/celebA_all. To train using a smaller dataset (e.g. 12800 images), create a new folder called ./../data/celebA_redux and train using the --redux flag. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890759435648722
      ],
      "excerpt": "Notice how the LSGAN suffers from total mode collapse at epoch 45. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868794613873697
      ],
      "excerpt": "./lerp.py --pretrained ./checkpoints/trained_gan/dcgan-gen.pt \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868794613873697
      ],
      "excerpt": "./lerp.py --pretrained ./checkpoints/trained_gan/dcgan-gen.pt \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8677231704181709,
        0.8677231704181709
      ],
      "excerpt": "    <td colspan=4><img src=\"report/imgs/gan_latent_lerp.png\"></td> \n    <td colspan=4><img src=\"report/imgs/wgan_latent_lerp.png\"></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868794613873697
      ],
      "excerpt": "./lerp.py --pretrained ./checkpoints/trained_gan/dcgan-gen.pt \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8677231704181709,
        0.8677231704181709
      ],
      "excerpt": "    <td colspan=4><img src=\"report/imgs/gan_screen_lerp.png\"></td> \n    <td colspan=4><img src=\"report/imgs/wgan_screen_lerp.png\"></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8799749356419364
      ],
      "excerpt": "<img width=\"50%\" src=\"report/imgs/score.png\"/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/joeylitalien/celeba-gan-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "TeX",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CelebA GANs in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "celeba-gan-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "joeylitalien",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joeylitalien/celeba-gan-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Tested on Python 3.6.x.\n* [PyTorch](http://pytorch.org/) (0.3.1)\n* [NumPy](http://www.numpy.org/) (1.14.2)\n* [FFmpeg](https://www.ffmpeg.org) (3.4.2)\n* [ImageMagick](https://www.imagemagick.org/script/index.php) (7.0.7)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 32,
      "date": "Thu, 23 Dec 2021 00:43:28 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "generative-model",
      "generative-adversarial-network",
      "celeba-dataset"
    ],
    "technique": "GitHub API"
  }
}