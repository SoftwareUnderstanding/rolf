{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2008.12577"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9955371153015877,
        0.9948797939588967
      ],
      "excerpt": "Source code for the following paper(arXiv link): \n    Computer Vision and Normalizing Flow Based Defect Detection \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-27T16:42:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-05T07:56:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is the repository to the paper \"Computer Vision and Normalizing Flow Based Defect Detection\" by Zijian Kuang and Xinran Tie.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 06:36:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection/master/test.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The data structure under work folder looks like this. The model folder will save trained model.\nFor experiment purpose, you would like to give test and validate folder with proper labled data. While, for zerobox \nit only requires train folder and data. The minimum images is 16 based on the differnet paper.\n\n```\npink1/\n\u251c\u2500\u2500 model\n\u251c\u2500\u2500 test\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 defect\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 good\n\u251c\u2500\u2500\u2500 validate\n\u2502    \u251c\u2500\u2500 defect\n\u2502    \u2514\u2500\u2500 good\n\u2514\u2500\u2500 train\n    \u2514\u2500\u2500 good\n        \u251c\u2500\u2500 01.jpg\n        \u251c\u2500\u2500 02.jpg\n        \u251c\u2500\u2500 03.jpg\n        \u251c\u2500\u2500 04.jpg\n        \u251c\u2500\u2500 05.jpg\n        \u251c\u2500\u2500 06.jpg\n        \u251c\u2500\u2500 07.jpg\n        \u251c\u2500\u2500 08.jpg\n        \u251c\u2500\u2500 09.jpg\n        \u251c\u2500\u2500 10.jpg\n        \u251c\u2500\u2500 11.jpg\n        \u251c\u2500\u2500 12.jpg\n        \u251c\u2500\u2500 13.jpg\n        \u251c\u2500\u2500 14.jpg\n        \u251c\u2500\u2500 15.jpg\n        \u2514\u2500\u2500 16.jpg\n```\n \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n$ pip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "In order to have proper torch and torch vision to use either GPU or CPU please follow [pytorch.org](https://pytorch.org/get-started/locally/) to install torch and torch vision\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kuangzijian",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kuangzijian/Computer-Vision-and-Normalizing-Flow-Based-Defect-Detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "All configuration has default values from package differnet(from package differnet-zerobox).\nThe project can have dict based configuration to overwrite any default value.\n\n\nCommon settings\n```\n#:conf/settings.conf\n\"differnet_work_dir\": \"./work\", #:work folder\n\"device\": \"cuda\",  #: cuda or cpu\n\"device_id\": 0,  #: the device you want to use. depends on how many GPU or CPU you have. \n\"verbose\": True, #: Set to true, when you do experiments.\n\"meta_epochs\": 10,  #: traing loop\n\"sub_epochs\": 8,  #: sub-loop of traing\n\"test_anormaly_target\": 10, #: threshold when run testing model to identify if a given image is good or bad\n\n```\n\nTraing\n\n```\npython training.py\n```\n\nRun test cases\n```\npython  -m pytest -s\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Fri, 24 Dec 2021 06:36:05 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The project has been upgraded to python 3.9. Please setup python 3.9 virtual environment then do the following.\n\n",
      "technique": "Header extraction"
    }
  ]
}