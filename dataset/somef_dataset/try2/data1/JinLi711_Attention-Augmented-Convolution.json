{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Links to the original papers:\n* [Attention Augmented Convolutional Networks](https://arxiv.org/pdf/1904.09925v4.pdf)\n* [Mixed Depthwise Convolution Layer](https://arxiv.org/pdf/1907.09595v2.pdf)\n* [Drop Block Layer](https://papers.nips.cc/paper/8271-dropblock-a-regularization-method-for-convolutional-networks.pdf)\n* [Efficient Channel Attention Layer](https://arxiv.org/abs/1910.03151)\n* [Convolutional Block Attention Module Layer](https://arxiv.org/abs/1807.06521)",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.03151",
      "https://arxiv.org/abs/1807.06521"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JinLi711/Convolution_Variants",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-22T14:56:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-08T16:11:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9455114724061375
      ],
      "excerpt": "This repository currently includes: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891105086682117
      ],
      "excerpt": "For other implementations in: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891105086682117
      ],
      "excerpt": "For other implementations in: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8398481973970839,
        0.8891105086682117
      ],
      "excerpt": "This implementation combines depthwise convolution with pointwise convolution. The original implementation only used depthwise convolutions. \nFor other implementations in: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891105086682117
      ],
      "excerpt": "For other implementations in: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891105086682117
      ],
      "excerpt": "For other implementations in: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Reimplementing SOTA convolution variants with Tensorflow 2.0.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JinLi711/Attention-Augmented-Convolution/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Thu, 30 Dec 2021 01:25:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JinLi711/Convolution_Variants/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JinLi711/Convolution_Variants",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "* Pytorch: leaderj1001 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "* Pytorch: miguelvr \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "* Pytorch: BangguWu \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "* Pytorch: Jongchan \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd Convolution_Variants \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8819501652920125
      ],
      "excerpt": "To run tests: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9476537955489743
      ],
      "excerpt": "python tests.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JinLi711/Convolution_Variants/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Convolution Variants",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Convolution_Variants",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JinLi711",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JinLi711/Convolution_Variants/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* tensorflow 2.0.0 with GPU\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Thu, 30 Dec 2021 01:25:16 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "convolutional-neural-networks"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Here is an example of how to use one of the layers:\n\n```\nimport tensorflow as tf\nfrom convVariants import AAConv\n\naaConv = AAConv(\n    channels_out=32,\n    kernel_size=3,\n    depth_k=8, \n    depth_v=8, \n    num_heads=4)\n```\n\nThe layer can be treated like any other `tf.keras.layers` class.\n\n```\nmodel = tf.keras.models.Sequential([\n    aaConv,\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(10, activation='softmax')\n    ])\n\nmodel.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy'])\n\nmodel.fit(x_train, y_train, epochs=5)\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}