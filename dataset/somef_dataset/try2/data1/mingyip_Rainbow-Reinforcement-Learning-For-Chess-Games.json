{
  "citation": [
    {
      "confidence": [
        0.8473547517195291
      ],
      "excerpt": "Rainbow: Combining Improvements in Deep Reinforcement Learning [arxiv] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mingyip/Rainbow-Reinforcement-Learning-For-Chess-Games",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-10-21T19:09:58Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-14T13:30:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9807418909074592,
        0.9574457032552534
      ],
      "excerpt": "A simple implementation of Rainbow reinforcement learning to improve the learning performance of DL agents.  \nThis project basically follows the idea of the paper  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8524672782090874
      ],
      "excerpt": "Deep q-learning (to be done) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An Implementation of Rainbow: Combining Improvements in Deep Reinforcement Learning on Chess Games",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mingyip/Rainbow-Reinforcement-Learning-For-Chess-Games/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 07:13:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mingyip/Rainbow-Reinforcement-Learning-For-Chess-Games/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mingyip/Rainbow-Reinforcement-Learning-For-Chess-Games",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mingyip/Rainbow-Reinforcement-Learning-For-Chess-Games/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Rainbow Reinforcement Learning",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Rainbow-Reinforcement-Learning-For-Chess-Games",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mingyip",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mingyip/Rainbow-Reinforcement-Learning-For-Chess-Games/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The environment is run in python 3.6\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sun, 26 Dec 2021 07:13:13 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To start a reversi game, run:\n```\n$ python play.py\n```\n\nIn default setting, two A.I agents have been set to play against each other. You may select agents and/or human players to be player1 and player2. \n```\n  --interface {cli,gui}\n      Interface mode (command-line or GUI).\n                        \n  --agent1 {human,random,greedy,weighted}\n      Agent1 to use.\n                        \n  --agent2 {human,random,greedy,weighted}\n      Agent2 to use.\n                        \n  --num-episodes NUM_EPISODES\n      The number of episodes to run consecutively.\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}