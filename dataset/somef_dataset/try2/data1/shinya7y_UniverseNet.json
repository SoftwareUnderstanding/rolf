{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Some codes are modified from the repositories of\n[PoolFormer](https://github.com/sail-sg/poolformer),\n[ConvMLP](https://github.com/SHI-Labs/Convolutional-MLPs),\n[TOOD](https://github.com/fcjian/TOOD),\n[Swin Transformer](https://github.com/SwinTransformer/Swin-Transformer-Object-Detection),\n[RelationNet++](https://github.com/microsoft/RelationNet2),\n[SEPC](https://github.com/jshilong/SEPC),\n[PVT](https://github.com/whai362/PVT),\n[CBNetV2](https://github.com/VDIGPKU/CBNetV2),\n[GFLv2](https://github.com/implus/GFocalV2),\n[DDOD](https://github.com/zehuichen123/DDOD),\nand [NightOwls](https://gitlab.com/vgg/nightowlsapi).\nWhen merging, please note that there are some minor differences from the above repositories and [the original MMDetection repository](https://github.com/open-mmlab/mmdetection).\n\n<br><br>\n\n\n<div align=\"center\">\n  <img src=\"resources/mmdet-logo.png\" width=\"600\"/>\n</div>\n\n[![PyPI](https://img.shields.io/pypi/v/mmdet)](https://pypi.org/project/mmdet)\n[![docs](https://img.shields.io/badge/docs-latest-blue)](https://mmdetection.readthedocs.io/en/latest/)\n[![badge](https://github.com/open-mmlab/mmdetection/workflows/build/badge.svg)](https://github.com/open-mmlab/mmdetection/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmdetection/branch/master/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmdetection)\n[![license](https://img.shields.io/github/license/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/blob/master/LICENSE)\n[![open issues](https://isitmaintained.com/badge/open/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues)\n\nDocumentation: https://mmdetection.readthedocs.io/\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "MMDetection is an open source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks.\nWe wish that the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and develop their own new detectors.\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2103.14027\n\n![universal-scale object detection](https://user-images.githubusercontent.com/42844407/113513063-b5aa2780-95a2-11eb-8413-2fb470256a1a.png",
      "https://arxiv.org/abs/2103.14027",
      "https://arxiv.org/abs/2103.14027",
      "https://arxiv.org/abs/1906.07155"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this toolbox or benchmark in your research, please cite this project.\n\n```\n@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{USB_shinya_2021,\n  title={{USB}: Universal-Scale Object Detection Benchmark},\n  author={Shinya, Yosuke},\n  journal={arXiv:2103.14027},\n  year={2021}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite the paper from 'preferred-citation' in addition to MMDetection.\"\nauthors:\n  - family-names: \"Shinya\"\n    given-names: \"Yosuke\"\ntitle: \"UniverseNet\"\ndate-released: 2020-06-26\nurl: \"https://github.com/shinya7y/UniverseNet\"\nlicense: Apache-2.0\npreferred-citation:\n  type: article\n  authors:\n    - family-names: \"Shinya\"\n      given-names: \"Yosuke\"\n  journal: \"arXiv:2103.14027\"\n  title: \"USB: Universal-Scale Object Detection Benchmark\"\n  year: 2021",
      "technique": "File Exploration"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{USB_shinya_2021,\n  title={{USB}: Universal-Scale Object Detection Benchmark},\n  author={Shinya, Yosuke},\n  journal={arXiv:2103.14027},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8555647067846668,
        0.8356013927728488
      ],
      "excerpt": "Please refer to our paper for details. \n21.12 (Dec. 2021): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "20.12 (Dec. 2020): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "20.10 (Oct. 2020): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "20.08 (Aug. 2020): UniverseNet 20.08 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358679491125588
      ],
      "excerpt": "Achieve SOTA single-stage detector on Waymo Open Dataset 2D detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834,
        0.9490753289412834,
        0.9490753289412834,
        0.9490753289412834,
        0.8356013927728488
      ],
      "excerpt": "[x] UniverseNets (arXiv 2021) \n[x] PoolFormer (arXiv 2021) \n[x] ConvMLP (arXiv 2021) \n[x] CBNetV2 (arXiv 2021) \n[x] TOOD (ICCV 2021) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "[x] ~~PVT (ICCV 2021)~~ supported \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8944178096468923,
        0.8356013927728488,
        0.8944178096468923,
        0.9554441738822752
      ],
      "excerpt": "[x] GFLv2 (CVPR 2021) \n[x] RelationNet++ (BVR) (NeurIPS 2020) \n[x] SEPC (CVPR 2020) \n[x] ATSS-style TTA (CVPR 2020) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834,
        0.9531737947012585,
        0.9870119924480132,
        0.8265478464472783
      ],
      "excerpt": "[x] USB (arXiv 2021) \n[x] Waymo Open Dataset (CVPR 2020) \n[x] Manga109-s dataset (MTAP 2017, IEEE MultiMedia 2020) \n[x] NightOwls dataset (ACCV 2018) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9672187151711744
      ],
      "excerpt": "Please refer to changelog.md for details and release history. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9531737947012585,
        0.9743570359073178
      ],
      "excerpt": "[x] ResNet (CVPR'2016) \n[x] ResNeXt (CVPR'2017) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9862029344057983,
        0.9868512987915664,
        0.8944178096468923
      ],
      "excerpt": "[x] MobileNetV2 (CVPR'2018) \n[x] HRNet (CVPR'2019) \n[x] RegNet (CVPR'2020) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834,
        0.8944178096468923,
        0.8356013927728488,
        0.9490753289412834
      ],
      "excerpt": "[x] ResNeSt (ArXiv'2020) \n[X] Swin (CVPR'2021) \n[x] PVT (ICCV'2021) \n[x] PVTv2 (ArXiv'2021) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014,
        0.9115465676107753
      ],
      "excerpt": "[x] RPN (NeurIPS'2015) \n[x] Fast R-CNN (ICCV'2015) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8184658499669879,
        0.9576581443887728,
        0.877398642162682,
        0.9872118697333594,
        0.9782759268835692,
        0.9677640385174676,
        0.8825511166992632
      ],
      "excerpt": "[x] Mask R-CNN (ICCV'2017) \n[x] Cascade R-CNN (CVPR'2018) \n[x] Cascade Mask R-CNN (CVPR'2018) \n[x] SSD (ECCV'2016) \n[x] RetinaNet (ICCV'2017) \n[x] GHM (AAAI'2019) \n[x] Mask Scoring R-CNN (CVPR'2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9793798765086006,
        0.9595929513502799,
        0.9895825335317779,
        0.9782759268835692,
        0.9782759268835692
      ],
      "excerpt": "[x] Hybrid Task Cascade (CVPR'2019) \n[x] Libra R-CNN (CVPR'2019) \n[x] Guided Anchoring (CVPR'2019) \n[x] FCOS (ICCV'2019) \n[x] RepPoints (ICCV'2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9782759268835692,
        0.9868512987915664,
        0.8944178096468923,
        0.9868512987915664,
        0.9862029344057983
      ],
      "excerpt": "[x] FreeAnchor (NeurIPS'2019) \n[x] NAS-FPN (CVPR'2019) \n[x] ATSS (CVPR'2020) \n[x] FSAF (CVPR'2019) \n[x] PAFPN (CVPR'2018) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8944178096468923,
        0.9782759268835692,
        0.9868512987915664,
        0.9884759456492003,
        0.9905205985428157,
        0.984693392258779,
        0.9782759268835692,
        0.9499963145257574,
        0.9222383658450612,
        0.992873560311421,
        0.9782759268835692
      ],
      "excerpt": "[x] PointRend (CVPR'2020) \n[x] CARAFE (ICCV'2019) \n[x] DCNv2 (CVPR'2019) \n[x] Group Normalization (ECCV'2018) \n[x] Weight Standardization (ArXiv'2019) \n[x] OHEM (CVPR'2016) \n[x] Soft-NMS (ICCV'2017) \n[x] Generalized Attention (ICCV'2019) \n[x] GCNet (ICCVW'2019) \n[x] Mixed Precision (FP16) Training (ArXiv'2017) \n[x] InstaBoost (ICCV'2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834
      ],
      "excerpt": "[x] DetectoRS (ArXiv'2020) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9884759456492003,
        0.9898689759446914,
        0.9936810522188035,
        0.9104388306336967,
        0.9782759268835692,
        0.8944178096468923,
        0.9490753289412834,
        0.9104388306336967
      ],
      "excerpt": "[x] CornerNet (ECCV'2018) \n[x] Side-Aware Boundary Localization (ECCV'2020) \n[x] YOLOv3 (ArXiv'2018) \n[x] PAA (ECCV'2020) \n[x] YOLACT (ICCV'2019) \n[x] CentripetalNet (CVPR'2020) \n[x] VFNet (ArXiv'2020) \n[x] DETR (ECCV'2020) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9782759268835692
      ],
      "excerpt": "[x] CascadeRPN (NeurIPS'2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490753289412834,
        0.8944178096468923,
        0.8944178096468923,
        0.9868512987915664,
        0.9490753289412834,
        0.9104388306336967
      ],
      "excerpt": "[x] AutoAssign (ArXiv'2020) \n[x] YOLOF (CVPR'2021) \n[x] Seasaw Loss (CVPR'2021) \n[x] CenterNet (CVPR'2019) \n[x] YOLOX (ArXiv'2021) \n[x] SOLO (ECCV'2020) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9485358500871338
      ],
      "excerpt": "MMCV: OpenMMLab foundational library for computer vision. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9829315454255052
      ],
      "excerpt": "MMDetection3D: OpenMMLab's next-generation platform for general 3D object detection. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910226687696363,
        0.9712620773557584,
        0.9530038435323631,
        0.8550956278676971,
        0.9887678291751212
      ],
      "excerpt": "MMAction2: OpenMMLab's next-generation action understanding toolbox and benchmark. \nMMTracking: OpenMMLab video perception toolbox and benchmark. \nMMPose: OpenMMLab pose estimation toolbox and benchmark. \nMMEditing: OpenMMLab image and video editing toolbox. \nMMOCR: A Comprehensive Toolbox for Text Detection, Recognition and Understanding. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shinya7y/UniverseNet",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "We appreciate all contributions to improve MMDetection. Please refer to CONTRIBUTING.md in MMCV for more details about the contributing guideline.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-13T07:23:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-30T02:28:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "English | [\u7b80\u4f53\u4e2d\u6587](README_zh-CN.md)\n\nMMDetection is an open source object detection toolbox based on PyTorch. It is\na part of the [OpenMMLab](https://openmmlab.com/) project.\n\nThe master branch works with **PyTorch 1.3+**.\nThe old v1.x branch works with PyTorch 1.1 to 1.4, but v2.0 is strongly recommended for faster speed, higher performance, better design and more friendly usage.\n\n![demo image](resources/coco_test_12510.jpg)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.910395861286365,
        0.9689805401356405
      ],
      "excerpt": "UniverseNets are state-of-the-art detectors for universal-scale object detection. \nPlease refer to our paper for details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9501321361353177,
        0.9638430227073788
      ],
      "excerpt": "Add codes for TOOD, ConvMLP, PoolFormer \nUpdate codes for PyTorch 1.9.0, mmdet 2.17.0, mmcv-full 1.3.13 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9501321361353177,
        0.9546222886252861
      ],
      "excerpt": "Add codes for CBNetV2, PVT, PVTv2, DDOD \nUpdate and fix codes for mmdet 2.14.0, mmcv-full 1.3.9 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9501321361353177,
        0.9754914411142049
      ],
      "excerpt": "Add codes for Swin Transformer, GFLv2, RelationNet++ (BVR) \nUpdate and fix codes for PyTorch 1.7.1, mmdet 2.11.0, mmcv-full 1.3.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481539697107289,
        0.9754914411142049
      ],
      "excerpt": "Add variants of UniverseNet 20.08 \nUpdate and fix codes for PyTorch 1.6.0, mmdet 2.4.0, mmcv-full 1.1.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8175225084210876
      ],
      "excerpt": "Add GFL to improve accuracy and speed \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8539375560285419
      ],
      "excerpt": "Methods and architectures: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8415591833446245
      ],
      "excerpt": "Benchmarks and datasets: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8312263996218269
      ],
      "excerpt": "The toolbox directly supports popular and contemporary detection frameworks, e.g. Faster RCNN, Mask RCNN, RetinaNet, etc. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9224170779531838,
        0.9368084692745213
      ],
      "excerpt": "All basic bbox and mask operations run on GPUs. The training speed is faster than or comparable to other codebases, including Detectron2, maskrcnn-benchmark and SimpleDet. \nState of the art \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109357767847954
      ],
      "excerpt": "Apart from MMDetection, we also released a library mmcv for computer vision research, which is heavily depended on by this toolbox. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9384802878023998
      ],
      "excerpt": "Please refer to changelog.md for details and release history. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9586419099352781
      ],
      "excerpt": "Results and models are available in the model zoo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9341425151865765,
        0.9452847062966504
      ],
      "excerpt": "Some other methods are also supported in projects using MMDetection. \nWe appreciate all contributions to improve MMDetection. Please refer to CONTRIBUTING.md for the contributing guideline. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Object detection. EfficientDet-D5 level COCO AP in 20 epochs. SOTA single-stage detector on Waymo Open Dataset.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://mmdetection.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shinya7y/UniverseNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 31,
      "date": "Thu, 30 Dec 2021 07:47:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/shinya7y/UniverseNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "shinya7y/UniverseNet",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/docker/Dockerfile",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/docker/serve/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/shinya7y/UniverseNet/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/demo/inference_demo.ipynb",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/demo/MMDet_Tutorial.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/.dev_scripts/test_benchmark.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/.dev_scripts/train_benchmark.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/.dev_scripts/linter.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/docker/serve/entrypoint.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/tools/slurm_train.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/tools/slurm_test.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/tools/dist_test.sh",
      "https://raw.githubusercontent.com/shinya7y/UniverseNet/master/tools/dist_train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please refer to [get_started.md](docs/get_started.md) for installation.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "See [get_started.md](docs/get_started.md).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8537790361626981
      ],
      "excerpt": "Update codes for PyTorch 1.9.0, mmdet 2.17.0, mmcv-full 1.3.13 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8051690728810934
      ],
      "excerpt": "Add UniverseNet 20.08s for realtime speed (> 30 fps) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/shinya7y/UniverseNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile",
      "Batchfile",
      "Makefile",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2018-2023 OpenMMLab. All rights reserved.\\n\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2018-2023 OpenMMLab.\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "UniverseNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "UniverseNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "shinya7y",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/shinya7y/UniverseNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "- Support [finer scale-wise AP metrics](docs/tutorials/finer_scale_ap.md)\r\n- Add codes for TOOD, ConvMLP, PoolFormer\r\n- Update codes for PyTorch 1.9.0, mmdet 2.17.0, mmcv-full 1.3.13",
        "dateCreated": "2021-12-16T21:22:47Z",
        "datePublished": "2021-12-16T22:14:54Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/21.12",
        "name": "Finer scale-wise AP metrics",
        "tag_name": "21.12",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/21.12",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/55498316",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/21.12"
      },
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "This release includes codes for SOTA methods.\r\nSee [here](https://github.com/shinya7y/weights/releases) for the weights of pre-trained models after this release.",
        "dateCreated": "2021-09-08T03:04:24Z",
        "datePublished": "2021-09-10T01:13:17Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/21.09",
        "name": "New methods",
        "tag_name": "21.09",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/21.09",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/49318500",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/21.09"
      },
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "This release provides COCO pre-trained UniverseNet 20.08s models and Manga109-s pre-trained models.",
        "dateCreated": "2020-12-23T17:58:08Z",
        "datePublished": "2020-12-23T20:51:31Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/20.12",
        "name": "UniverseNet 20.08s and Manga109-s models",
        "tag_name": "20.12",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/20.12",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/35674978",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/20.12"
      },
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "This release provides COCO pre-trained models of UniverseNet 20.08 variants.",
        "dateCreated": "2020-10-26T17:37:26Z",
        "datePublished": "2020-10-26T18:30:32Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/20.10",
        "name": "UniverseNet 20.08 variants",
        "tag_name": "20.10",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/20.10",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/33072871",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/20.10"
      },
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "This release provides COCO pre-trained models of UniverseNet 20.08.",
        "dateCreated": "2020-08-30T20:20:08Z",
        "datePublished": "2020-08-30T21:36:09Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/20.08",
        "name": "UniverseNet 20.08",
        "tag_name": "20.08",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/20.08",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/30403712",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/20.08"
      },
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "This release provides COCO pre-trained models of UniverseNet+GFL.\r\nThe version of MMDetection is updated to 2.3.0rc0. CUDA ops are moved to MMCV.",
        "dateCreated": "2020-07-26T16:51:29Z",
        "datePublished": "2020-07-26T17:05:40Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/20.07",
        "name": "UniverseNet+GFL",
        "tag_name": "20.07",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/20.07",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/28963879",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/20.07"
      },
      {
        "authorType": "User",
        "author_name": "shinya7y",
        "body": "This release provides COCO pre-trained models of UniverseNet.\r\n\r\nWe also attached an ImageNet pre-trained Res2Net-v1b-50 converted from https://github.com/Res2Net/Res2Net-PretrainedModels .\r\nTo reduce [GPU memory consumption](https://github.com/shinya7y/UniverseNet/issues/23), please use [this weight file](https://github.com/shinya7y/weights/releases/download/v1.0.2/res2net50_v1b_26w_4s-3cf99910_mmdetv2-92ed3313.pth).",
        "dateCreated": "2020-06-25T12:54:21Z",
        "datePublished": "2020-06-26T05:57:38Z",
        "html_url": "https://github.com/shinya7y/UniverseNet/releases/tag/20.06",
        "name": "UniverseNet",
        "tag_name": "20.06",
        "tarball_url": "https://api.github.com/repos/shinya7y/UniverseNet/tarball/20.06",
        "url": "https://api.github.com/repos/shinya7y/UniverseNet/releases/27944989",
        "zipball_url": "https://api.github.com/repos/shinya7y/UniverseNet/zipball/20.06"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 267,
      "date": "Thu, 30 Dec 2021 07:47:46 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "object-detection",
      "pytorch",
      "mmdetection",
      "waymo-open-dataset"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "See [MMDetection documents](#getting-started).\nEspecially, see [this document](docs/1_exist_data_model.md) to evaluate and train existing models on COCO.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We show examples to evaluate and train UniverseNet-20.08 on COCO with 4 GPUs.\n\n```bash\n#: evaluate pre-trained model\nmkdir -p ${HOME}/data/checkpoints/\nwget -P ${HOME}/data/checkpoints/ https://github.com/shinya7y/UniverseNet/releases/download/20.08/universenet50_2008_fp16_4x4_mstrain_480_960_2x_coco_20200815_epoch_24-81356447.pth\nCONFIG_FILE=configs/universenet/universenet50_2008_fp16_4x4_mstrain_480_960_2x_coco.py\nCHECKPOINT_FILE=${HOME}/data/checkpoints/universenet50_2008_fp16_4x4_mstrain_480_960_2x_coco_20200815_epoch_24-81356447.pth\nGPU_NUM=4\nbash tools/dist_test.sh ${CONFIG_FILE} ${CHECKPOINT_FILE} ${GPU_NUM} --eval bbox\n\n#: train model\nCONFIG_FILE=configs/universenet/universenet50_2008_fp16_4x4_mstrain_480_960_2x_coco.py\nCONFIG_NAME=$(basename ${CONFIG_FILE} .py)\nWORK_DIR=\"${HOME}/logs/coco/${CONFIG_NAME}_`date +%Y%m%d_%H%M%S`\"\nGPU_NUM=4\nbash tools/dist_train.sh ${CONFIG_FILE} ${GPU_NUM} --work-dir ${WORK_DIR} --seed 0\n```\n\nEven if you have one GPU, we recommend using `tools/dist_train.sh` and `tools/dist_test.sh` to avoid [a SyncBN issue](https://github.com/open-mmlab/mmdetection/issues/847#issuecomment-504421173).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Please see [get_started.md](docs/get_started.md) for the basic usage of MMDetection.\nWe provide [colab tutorial](demo/MMDet_Tutorial.ipynb), and full guidance for quick run [with existing dataset](docs/1_exist_data_model.md) and [with new dataset](docs/2_new_data_model.md) for beginners.\nThere are also tutorials for [finetuning models](docs/tutorials/finetune.md), [adding new dataset](docs/tutorials/customize_dataset.md), [designing data pipeline](docs/tutorials/data_pipeline.md), [customizing models](docs/tutorials/customize_models.md), [customizing runtime settings](docs/tutorials/customize_runtime.md) and [useful tools](docs/useful_tools.md).\n\nPlease refer to [FAQ](docs/faq.md) for frequently asked questions.\n\n",
      "technique": "Header extraction"
    }
  ]
}