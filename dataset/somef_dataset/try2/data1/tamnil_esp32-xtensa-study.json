{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.04381 MobileNetV2: Inverted Residuals and Linear Bottlenecks\n\n\nhttps://github.com/espressif/esp-face This is a component which provides functions of face detection and face recognition, and also operations of neurual network.\n- https://github.com/espressif/esp-face/blob/master/face_detection/README.md face detection\n- https://github.com/espressif/esp-face/blob/master/face_recognition/README.md face recognition\n- https://arxiv.org/abs/1801.07698 ArcFace: Additive Angular Margin Loss for Deep Face Recognition\n- https://github.com/espressif/esp-face/blob/master/lib/README.md DL lib\n\n\nquick template:\n\ngit clone --recursive https://github.com/espressif/esp-idf.git\n\ngit clone https://github.com/espressif/crosstool-NG.git\n\ngit clone https://github.com/tamnil/esp-at\n\n\n##########################################\nother stuff:\n\nhttps://github.com/hsoft/collapseos\n\n\n## headers\ngpio lib\n\n```\ntypedef intr_handle_t gpio_isr_handle_t;\nesp_err_t gpio_config(const gpio_config_t *pGPIOConfig",
      "https://arxiv.org/abs/1801.07698 ArcFace: Additive Angular Margin Loss for Deep Face Recognition\n- https://github.com/espressif/esp-face/blob/master/lib/README.md DL lib\n\n\nquick template:\n\ngit clone --recursive https://github.com/espressif/esp-idf.git\n\ngit clone https://github.com/espressif/crosstool-NG.git\n\ngit clone https://github.com/tamnil/esp-at\n\n\n##########################################\nother stuff:\n\nhttps://github.com/hsoft/collapseos\n\n\n## headers\ngpio lib\n\n```\ntypedef intr_handle_t gpio_isr_handle_t;\nesp_err_t gpio_config(const gpio_config_t *pGPIOConfig"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9986576403656229,
        0.9920934132822591
      ],
      "excerpt": "- http://arxiv.org/abs/1604.02878 Joint Face Detection and Alignment using Multi-task Cascaded Convolutional Networks \n- https://arxiv.org/abs/1801.04381 MobileNetV2: Inverted Residuals and Linear Bottlenecks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9157494591749186,
        0.9870273950387941,
        0.9989616953894638
      ],
      "excerpt": "- https://github.com/espressif/esp-face/blob/master/face_detection/README.md face detection \n- https://github.com/espressif/esp-face/blob/master/face_recognition/README.md face recognition \n- https://arxiv.org/abs/1801.07698 ArcFace: Additive Angular Margin Loss for Deep Face Recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112878271991959
      ],
      "excerpt": "git clone https://github.com/tamnil/esp-at \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "I2C_ACKERR_CNT_MAX             (10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "    MQTT_MSG_TYPE_UNSUBSCRIBE = 10, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "    MQTT_MSG_TYPE_PINGREQ = 12, \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tamnil/esp32-xtensa-study",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-05T15:19:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-09T15:02:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.946247839938096
      ],
      "excerpt": "included experimental data: no c++ optimization on-of delay @80,160,240 MHz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9339621184287444
      ],
      "excerpt": "https://github.com/espressif/esp-face This is a component which provides functions of face detection and face recognition, and also operations of neurual network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    uint8_t data; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8861386869092547,
        0.9761616874610183
      ],
      "excerpt": "    uint32_t fragmented_msg_total_length;       /!< total len of fragmented messages (zero for all other messages) / \n    uint32_t fragmented_msg_data_offset;        /!< data offset of fragmented messages (zero for all other messages) */ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "mqtt_message_t mqtt_msg_publish(mqtt_connection_t connection, const char topic, const char data, int data_length, int qos, int retain, uint16_t message_id); \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tamnil/esp32-xtensa-study/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:19:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tamnil/esp32-xtensa-study/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tamnil/esp32-xtensa-study",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8364856917326279
      ],
      "excerpt": "- https://github.com/espressif/esp-face/blob/master/lib/README.md DL lib \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799489993452795,
        0.9848009694435399,
        0.984982008473232
      ],
      "excerpt": "git clone --recursive https://github.com/espressif/esp-idf.git \ngit clone https://github.com/espressif/crosstool-NG.git \ngit clone https://github.com/tamnil/esp-at \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9291858946844374
      ],
      "excerpt": "I2C_DRIVER_ERR_STR             \"i2c driver install error\" \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8428572887743013
      ],
      "excerpt": "I2C_TIMEING_VAL_ERR_STR        \"i2c timing value error\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8536741792484549
      ],
      "excerpt": "I2C_DATA_LEN_ERR_STR           \"i2c data read length error\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.872134067515243,
        0.841478989722823
      ],
      "excerpt": "I2C_SLAVE_TIMEOUT_DEFAULT      (32000)     / I2C slave timeout value, APB clock cycle number / \nI2C_SLAVE_SDA_SAMPLE_DEFAULT   (10)        / I2C slave sample time after scl positive edge default value / \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8067089268026457
      ],
      "excerpt": "    uint32_t fragmented_msg_total_length;       /!< total len of fragmented messages (zero for all other messages) / \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8071462306413344
      ],
      "excerpt": "    char username; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8626064152580373,
        0.8626064152580373,
        0.8626064152580373,
        0.8626064152580373,
        0.8465934265512832,
        0.8626064152580373,
        0.8626064152580373
      ],
      "excerpt": "static inline int mqtt_get_type(uint8_t buffer) { return (buffer[0] & 0xf0) >> 4; } \nstatic inline int mqtt_get_connect_session_present(uint8_t buffer) { return buffer[2] & 0x01; } \nstatic inline int mqtt_get_connect_return_code(uint8_t buffer) { return buffer[3]; } \nstatic inline int mqtt_get_dup(uint8_t buffer) { return (buffer[0] & 0x08) >> 3; } \nstatic inline void mqtt_set_dup(uint8_t buffer) { buffer[0] |= 0x08; } \nstatic inline int mqtt_get_qos(uint8_t buffer) { return (buffer[0] & 0x06) >> 1; } \nstatic inline int mqtt_get_retain(uint8_t buffer) { return (buffer[0] & 0x01); } \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tamnil/esp32-xtensa-study/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "esp32 xtensa docs and experiments",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "esp32-xtensa-study",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tamnil",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tamnil/esp32-xtensa-study/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:19:11 GMT"
    },
    "technique": "GitHub API"
  }
}