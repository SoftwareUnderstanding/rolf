{
  "citation": [
    {
      "confidence": [
        0.8840467439138965
      ],
      "excerpt": "|open    |4  |0       |347|1    |1    |5   |0    |636     | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/parkervg/allrecipes-bert",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-14T16:02:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-18T07:04:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9845322667720302
      ],
      "excerpt": "Below are heatmaps displaying a small sample of all the verb and noun co-occurences both in EpicKitchen, and extracted using BERT with a masked language model head. For the BERT heatmap, a noun/verbs softmax probability was obtained by averaging the output of the sentence \"now let me show you how to [MASK] the [MASK].\", where the [MASK] token probabilities were predicted for the verb and noun, respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9226806195292978,
        0.905459623647136,
        0.8320243399199508
      ],
      "excerpt": "The 'Cluster coherence score' is defined as: \nsum(counts for 5 most common verbs) / len(all verb tokens in the cluster). \n'Top Verbs' list the 5 most frequent verbs attached to the clustered nouns in EpicKitchens and their intra-cluster frequencies. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9678798108057258,
        0.8217262844788397
      ],
      "excerpt": "Use masked language model to disambiguate verbs not in our vocab \nHave probability threshold required to accept it? \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Exploration into affordance extraction with the AllRecipes dataset and BERT.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/parkervg/allrecipes-bert/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 02:46:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/parkervg/allrecipes-bert/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "parkervg/allrecipes-bert",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8375806455922287
      ],
      "excerpt": "Have probability threshold required to accept it? \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/parkervg/allrecipes-bert/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Usage",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "allrecipes-bert",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "parkervg",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/parkervg/allrecipes-bert/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 02:46:25 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- For clustering: `python3 -m lib.clustering.cluster_embeds {n_clusters} {noun_cap}`\n  - Example: `python3 lib.clustering.cluster_embeds 15 50`\n  - Outputs: Logging statements of each cluster, some stats, and the nouns in each cluster.\n- For masked language modeling: `python3 -m cli.mlm {text} {results_length}`\n  - Example: `python3 -m cli.mlm \"Next, we want to [MASK] the salmon into thin fillets.\" 3`\n  - Outputs: Top k words most likely to fill in [MASK]\n- For masked language prediction: `python3 -m cli.mlm_prob {text} {word}`\n  - Example: `python3 -m cli.mlm_prob \"Next, we want to [MASK] the salmon into thin fillets.\" \"cut\"`\n  - Outputs: softmax probability of target word filling in for [MASK] token.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "  - [Cluster 2](#cluster-2): All things you can 'open' and 'close'\n  - [Cluster 3](#cluster-3) and [Cluster 4](#cluster-4): Smaller non-food tools\n  - [Cluster 9](#cluster-9): Ingredients you can 'roll', 'knead'\n  - [Cluster 1](#cluster-1): Pretty large cluster of all food items; no non-food nouns (aside from 'boiler')\n\n\ncoherance_score = sum(counts for 5 most common verbs) / len(all verb tokens in the cluster)\n\nKmeans with k = 15\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- tongs\n\n\n",
      "technique": "Header extraction"
    }
  ]
}