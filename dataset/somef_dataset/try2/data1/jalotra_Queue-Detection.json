{
  "citation": [
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "1. V1 : https://arxiv.org/pdf/1506.02640v1.pdf  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "4. V4 : https://arxiv.org/pdf/1506.02640v4.pdf \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jalotra/Queue-Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-14T05:59:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-22T06:48:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9690468441794277
      ],
      "excerpt": "Assumption Taken : \"Whatever be the camera angle is the queue is always a planar surface in a 3D world\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9699534918542718,
        0.8917433762603857,
        0.935546638261408
      ],
      "excerpt": "Takes 90% of all the points to remove outliers. \nFinding params(m, c) is done by solving an optimisation problem that uses Convex-Hull as a subroutine. \nFor more details refer the Presentation that I made : Presentation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513506522777223,
        0.9611061613506993
      ],
      "excerpt": "1. To use the YOLO Algorithm to detect all the bounding boxes that are persons. \n2. Reading the Source Code of Darknet, learning about Yolo Layers and the implementation in Pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8596852813281085
      ],
      "excerpt": "Ques : Why are there different versions of the same paper ?  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A naive Algorithm that uses People Detection and Convex Hull as subroutines to solve this problem: \"Given an image of people standing randomly, how many people can be a part of some queue {Q}. A queue {Q} is basically a line(y = mx + c) that minimises a custom loss function. \"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jalotra/Queue-Detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 22:05:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jalotra/Queue-Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jalotra/Queue-Detection",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/jalotra/Queue-Detection/main/setup.sh",
      "https://raw.githubusercontent.com/jalotra/Queue-Detection/main/setup_env.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. You must have Conda installed, since it provides containerisation we dont have to worry about building and running on Different Platforms/ OSes.\n2. First run \"bash setup_env.sh\" -> This will create a `Queue_Detection` conda environment.\n3. Run `conda activate Queue_Detection` to activate the newly made env.\n2. Next run \"bash setup.sh\" -> This will install all the related dependencies.\n2. In case of error, read the *sh files and figure it out yourself.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9076669166442102
      ],
      "excerpt": "Yolo from here : https://github.com/ultralytics/yolov5 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jalotra/Queue-Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Queue-Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Queue-Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jalotra",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jalotra/Queue-Detection/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 22:05:39 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "yolo",
      "bounding-boxes",
      "yolov5x",
      "convex-optimization",
      "object",
      "objectdetection"
    ],
    "technique": "GitHub API"
  }
}