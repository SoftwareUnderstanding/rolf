{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "MobileNetV2: Inverted Residuals and Linear Bottlenecks https://arxiv.org/pdf/1801.04381.pdf\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-18T06:18:17Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-18T20:09:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9853253210318328,
        0.8809213259290261
      ],
      "excerpt": "Given an image of a person's face, the task of classifying the ID of the face is known as face classification. \nWhereas the problem of determining whether two face images are of the same person is known as face \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.905253572490407
      ],
      "excerpt": "The data contains face images of size 32 by 32. For classification, we used human face images.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899330997323969,
        0.9414469410146121,
        0.8290307207736044
      ],
      "excerpt": "for those images using the embeddings generated by our classification network. \nAn input to your system is a face image and you have to predict the ID of the face. The true face image \nID will be present in the training data and so the network will be doing an N-way classification to get the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9283298608056133,
        0.9214767886985618,
        0.8046453788910434
      ],
      "excerpt": "An input to your system is a trial, that is, a pair of face images that may or may not belong to the same \nperson. Given a trial, your goal is to output a numeric score that quanties how similar the faces of the two \nimages appear to be. On some scale, a higher score will indicate higher confidence that the faces in the two \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9321180055081999
      ],
      "excerpt": "In this work , we used MobileNetV2 architecture which consists of Depthwise Seperable Convolutions,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9317403979821133,
        0.8621756678960764,
        0.9323134817307809
      ],
      "excerpt": "Intuitively, facial features vary extensively across people. Out main task is to train a CNN model to extract \nand represent such important features from a person. These extracted features will be represented in a \nfixed-length vector of features, known as a face embedding. Given two face embeddings,cosine similarity to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8027374470649625,
        0.9756300906216987,
        0.9459230668658161
      ],
      "excerpt": "Given similarity scores for many trials, some threshold score is needed to actually accept or reject pairs as same-person pairs \n(i.e., when the similarity score is above the threshold) or different-person pairs (i.e., when the score is \nbelow the threshold), respectively. For any given threshold, there are four conditions on the results: some \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8579940460926294
      ],
      "excerpt": "of the same-person pairs will be rejected (known as the false rejection rate), some percentage of the different- \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8811625816615276
      ],
      "excerpt": "the ROC curve is equal to the probability that a classifier will rank a randomly chosen similar pair (images \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:19:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks/master/code/Classification_Verification.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face-Classification-and-Verification-Using-Convolutional-Neural-Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face-Classification-and-Verification-Using-Convolutional-Neural-Networks",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nithinksath96",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nithinksath96/Face-Classification-and-Verification-Using-Convolutional-Neural-Networks/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:19:49 GMT"
    },
    "technique": "GitHub API"
  }
}