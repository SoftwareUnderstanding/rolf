{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The structure of this code is largely based on [CDAN](https://github.com/thuml/CDAN). We are very grateful for their open source.",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2001.01046"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this code in your research, please cite:\n\n```\n@article{chen2020adversariallearned,\n    title={Adversarial-Learned Loss for Domain Adaptation},\n    author={Minghao Chen and Shuai Zhao and Haifeng Liu and Deng Cai},\n    journal={arXiv},\n    year={2020},\n    volume={abs/2001.01046}\n}\n```\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{chen2020adversariallearned,\n    title={Adversarial-Learned Loss for Domain Adaptation},\n    author={Minghao Chen and Shuai Zhao and Haifeng Liu and Deng Cai},\n    journal={arXiv},\n    year={2020},\n    volume={abs/2001.01046}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9788914761692258
      ],
      "excerpt": "By Minghao Chen, Shuai Zhao, Haifeng Liu, Deng Cai. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZJULearning/ALDA",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-05T06:28:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-15T01:43:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "A **PyTorch** implementation for our **AAAI 2020** paper **[\"Adversarial-Learned Loss for Domain Adaptation\" (ALDA)](https://arxiv.org/abs/2001.01046)**.  In ALDA, we use a domain discriminator to correct the noise in the pseudo-label. ALDA outperforms state-of-the-art approaches in four standard unsupervised domain adaptation datasets.\n\n![pic1](./pics/pic0.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code for \"Adversarial-Learned Loss for Domain Adaptation\"(AAAI2020) in PyTorch.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZJULearning/ALDA/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 14,
      "date": "Sun, 26 Dec 2021 13:22:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ZJULearning/ALDA/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ZJULearning/ALDA",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ZJULearning/ALDA/master/train.sh",
      "https://raw.githubusercontent.com/ZJULearning/ALDA/master/train_home.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9303581814738594
      ],
      "excerpt": "sh train.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh train_home.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836707776766879
      ],
      "excerpt": "The code is tested on GTX 1080 with cuda-9.0. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8100032884344429,
        0.8100032884344429
      ],
      "excerpt": "Download SVHN dataset and unzip it at data/svhn2mnist. \nDownload Office-31 dataset and unzip it at data/office. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8610144334795596
      ],
      "excerpt": "python train_svhnmnist.py ALDA --gpu_id 0 --epochs 50 --loss_type all --start_epoch 2 --threshold 0.6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8600548708577558
      ],
      "excerpt": "python train_uspsmnist.py ALDA --gpu_id 0 --epochs 50 --task USPS2MNIST --loss_type all --start_epoch 2 --threshold 0.6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8600548708577558
      ],
      "excerpt": "python train_uspsmnist.py ALDA --gpu_id 0 --epochs 50 --task MNIST2USPS --loss_type all --start_epoch 2 --threshold 0.6 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9213633800549108
      ],
      "excerpt": "python  train.py ALDA --gpu_id 0 --net ResNet50 --dset office --test_interval 500 --s_dset_path ./data/office/amazon_list.txt --t_dset_path ./data/office/webcam_list.txt --batch_size 36 --trade_off 1 --output_dir \"A2W_ALDA_all_thresh=0.9_test\" --loss_type all --threshold 0.9 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ZJULearning/ALDA/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Adversarial-Learned Loss for Domain Adaptation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ALDA",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ZJULearning",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZJULearning/ALDA/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code is implemented with Python(3.6) and Pytorch(1.0.0).\n\nInstall the newest Pytorch from https://pytorch.org/.\n\nTo install the required python packages, run\n\n```python\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 41,
      "date": "Sun, 26 Dec 2021 13:22:51 GMT"
    },
    "technique": "GitHub API"
  }
}