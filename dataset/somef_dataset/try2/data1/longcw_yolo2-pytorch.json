{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1612.08242"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/longcw/yolo2-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-02-23T14:19:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-26T02:27:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9647434076345904,
        0.9425060555511572,
        0.9667719684191401,
        0.9841378329513675,
        0.908925214220865
      ],
      "excerpt": "NOTE: This project is no longer maintained and may not compatible with the newest pytorch (after 0.4.0). \nThis is a PyTorch \nimplementation of YOLOv2. \nThis project is mainly based on darkflow \nand darknet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8466776957618867,
        0.8465514564712433,
        0.9778155007355707,
        0.9012325027933392
      ],
      "excerpt": "multiprocessing.Pool for image preprocessing. \nTesting an image in VOC2007 costs about 13~20ms. \nFor details about YOLO and YOLOv2 please refer to their project page  \nand the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950047120799984
      ],
      "excerpt": "This is still an experimental project. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.808274215371622,
        0.908925214220865,
        0.9279043468340175
      ],
      "excerpt": "See issue1  \nand issue23 \nfor more details about training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8794493008358769,
        0.9168105082963223
      ],
      "excerpt": "since multiprocessing.Pool.imap won't stop even there is no enough memory space.  \nAn example of dataloader for VOCDataset: issue71. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9173870255527034
      ],
      "excerpt": "Since the program loading the data in yolo2-pytorch/data by default, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8365966456639072,
        0.9417817085618667
      ],
      "excerpt": "im_data - image data.   \nThis should be in the format C x H x W, where C corresponds to the color channels of the image and H and W are the height and width respectively.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9727418489457254
      ],
      "excerpt": "gt_boxes - A list of numpy arrays, where each one is of size N x 4, where N is the number of features in the image.  The four values in each row should correspond to x_bottom_left, y_bottom_left, x_top_right, and y_top_right.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8999531193718416
      ],
      "excerpt": "dontcare - a list of lists \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "YOLOv2 in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/longcw/yolo2-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 400,
      "date": "Sun, 26 Dec 2021 03:23:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/longcw/yolo2-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "longcw/yolo2-pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/longcw/yolo2-pytorch/master/make.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone this repository\n    ```bash\n    git clone git@github.com:longcw/yolo2-pytorch.git\n    ```\n\n2. Build the reorg layer ([`tf.extract_image_patches`](https://www.tensorflow.org/api_docs/python/tf/extract_image_patches))\n    ```bash\n    cd yolo2-pytorch\n    ./make.sh\n    ```\n3. Download the trained model [yolo-voc.weights.h5 (link updated)](https://drive.google.com/file/d/0B4pXCfnYmG1WUUdtRHNnLWdaMEU/view?usp=sharing&resourcekey=0-P9etgQJ4Mc9zOJ77qopoDw) \nand set the model path in `demo.py`\n4. Run demo `python demo.py`. \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "NOTE 1: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "NOTE 2: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244453191770256,
        0.9670062482384801,
        0.901169698716352
      ],
      "excerpt": "NOTE 3: \nUpgrade to PyTorch 0.4: https://github.com/longcw/yolo2-pytorch/issues/59 \nYou can train YOLO2 on any dataset. Here we train it on VOC2007/2012. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372883844697122,
        0.833114516308531,
        0.9952653930297553
      ],
      "excerpt": "you can set the data path as following. \n    bash \n    cd yolo2-pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "    cd data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9884333710359905
      ],
      "excerpt": "and install TensorboardX (https://github.com/lanpa/tensorboard-pytorch). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.9033702617748925
      ],
      "excerpt": "cd faster_rcnn_pytorch \nmkdir output \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9134772216012153
      ],
      "excerpt": "Download the training, validation, test data and VOCdevkit \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8279056425166457
      ],
      "excerpt": "Download the pretrained darknet19 model (link updated) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8507061360954957
      ],
      "excerpt": "set use_tensorboard = True in yolo2-pytorch/cfgs/config.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9381083800507535
      ],
      "excerpt": "Run the training program: python train.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049956740738274,
        0.9515752551715031
      ],
      "excerpt": "mkdir output \npython test.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/longcw/yolo2-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cython",
      "C",
      "Cuda",
      "Shell",
      "C++"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "YOLOv2 in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "yolo2-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "longcw",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/longcw/yolo2-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1443,
      "date": "Sun, 26 Dec 2021 03:23:15 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "yolo",
      "yolo2",
      "darknet",
      "detection"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone this repository\n    ```bash\n    git clone git@github.com:longcw/yolo2-pytorch.git\n    ```\n\n2. Build the reorg layer ([`tf.extract_image_patches`](https://www.tensorflow.org/api_docs/python/tf/extract_image_patches))\n    ```bash\n    cd yolo2-pytorch\n    ./make.sh\n    ```\n3. Download the trained model [yolo-voc.weights.h5 (link updated)](https://drive.google.com/file/d/0B4pXCfnYmG1WUUdtRHNnLWdaMEU/view?usp=sharing&resourcekey=0-P9etgQJ4Mc9zOJ77qopoDw) \nand set the model path in `demo.py`\n4. Run demo `python demo.py`. \n\n",
      "technique": "Header extraction"
    }
  ]
}