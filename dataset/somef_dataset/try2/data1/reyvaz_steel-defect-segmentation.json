{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.11946v5",
      "https://arxiv.org/abs/1912.05074v2",
      "https://arxiv.org/abs/1905.11946v5](https://arxiv.org/abs/1905.11946v5).\n\n- Zhou, Z., Siddiquee, M., Tajbakhsh, N., & Liang, J. (2019). UNet++: Redesigning Skip Connections to Exploit Multiscale Features in Image Segmentation. [https://arxiv.org/abs/1912.05074v2](https://arxiv.org/abs/1912.05074v2)",
      "https://arxiv.org/abs/1912.05074v2](https://arxiv.org/abs/1912.05074v2)"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Tan, M., & Le, Q. V. (2020). EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks. [arXiv:1905.11946v5](https://arxiv.org/abs/1905.11946v5).\n\n- Zhou, Z., Siddiquee, M., Tajbakhsh, N., & Liang, J. (2019). UNet++: Redesigning Skip Connections to Exploit Multiscale Features in Image Segmentation. [arXiv:1912.05074v2](https://arxiv.org/abs/1912.05074v2).",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/reyvaz/steel-defect-segmentation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-28T18:00:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-24T00:03:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9757744638264346
      ],
      "excerpt": "This notebooks presents a solution to the Severstal: Steel Defect Detection competition. The challenge consists on using images to detect defects on pieces of steel, classify the type of defect (4 types), and identify the location and area of the defect. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9797913201222602,
        0.9907288875112149,
        0.9797973012428579,
        0.9576800847366349,
        0.9088233130366874
      ],
      "excerpt": "The first step is an ensemble of binary image neural network classifiers to determine whether the piece of steel in the image presents a  defect. \nThe second step is an ensemble of segmentation neural networks to identify the location of the defect and identify the type of the defect. \nAll 1st and 2nd step neural networks were trained on a K = 5, K-Fold cross-validation distribution of the data, all with the same image size. Random data augmentations were applied to the training partition data for all networks and folds in both stages. \nThe ensemble for the binary classification step consists of EfficientNet (Tan & Le 2020) based classifiers versions B0-B5. \nThe ensemble for the 2nd step consists of UNet++ (Zhou et al., 2019) based CNNs, all with EfficientNet backbones versions B0-B5.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9380503955857002
      ],
      "excerpt": "Open the notebook in Colab and select TPU as accelerator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "EfficientNet-Based Unet++ Model for Steel Defect Segmentation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/reyvaz/steel-defect-segmentation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 13:27:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/reyvaz/steel-defect-segmentation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "reyvaz/steel-defect-segmentation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/reyvaz/steel-defect-segmentation/master/steel_defect_detection.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8211146534774539
      ],
      "excerpt": "Running the Notebook \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/reyvaz/steel-defect-segmentation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Steel Defect Detection, Classification, and Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "steel-defect-segmentation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "reyvaz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/reyvaz/steel-defect-segmentation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 13:27:22 GMT"
    },
    "technique": "GitHub API"
  }
}