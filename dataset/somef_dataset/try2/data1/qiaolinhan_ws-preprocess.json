{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.05957",
      "https://arxiv.org/abs/1802.05957.  \n## [GAN2.ipynb](GAN2.ipynb"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{qiao2020pre,\n  title={Pre-processing for UAV Based Wildfire Detection: A Loss U-net Enhanced GAN for Image Restoration},\n  author={Qiao, Linhan and Zhang, Youmin and Qu, Yaohong},\n  booktitle={2020 2nd International Conference on Industrial Artificial Intelligence (IAI)},\n  pages={1--6},\n  year={2020},\n  organization={IEEE}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9919220148284685
      ],
      "excerpt": "  * Using spectral normalization, based on this paper: https://arxiv.org/abs/1802.05957. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.996793055612311
      ],
      "excerpt": "  * Model based on the paper: https://link.springer.com/chapter/10.1007/978-3-319-46475-6_43. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/qiaolinhan/ws-preprocess",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-10T20:49:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-27T16:26:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9221587247605452,
        0.9504186840278426,
        0.9931460362270003
      ],
      "excerpt": "This is image restoration for UAV based wildfire segmentation, because it will always meet some disturbance, noise or other serious situation.  \nThe code is based on the fastai packages and the  fastai class 7. \nThe thought may comes from antique fraud. It is assumed that we want to produce a fake antique, and we got other authentic products during its specific age. After learning their features and finish making the fake, we show it to the expert and the expert tells us where we made it wrong. Then, every time we adjust more features make it harder for that expert to tell which is counterfeit. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8993673609339724,
        0.9935893082240027,
        0.878967140686849
      ],
      "excerpt": "Fastai give us many ideas to avoid running out of GPU RAM, like the mixed procision training to make us train the model on 16 bite position. This is mentioned in fastai class 3. \nThis model is the fist part of the image restoration model.   \nThis is a generative adversarial netork (GAN) model.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244237563917016
      ],
      "excerpt": "  * Discriminator: A binary classifier with adaptive binary cross entropy loss, which is foun by fastai function gan_critic(). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9864582826005318,
        0.9087291796608904
      ],
      "excerpt": "This model is the second part of the image restoration model. \nThis is a loss network critic U-net model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8892140187333716
      ],
      "excerpt": "  * Loss network: Imagenet pre-trained VGG16, grab the feature maps or the activations befor thire changing (one step before max pooling) in middle of this network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9056655974572299,
        0.8778353203385304
      ],
      "excerpt": "The data we used comes from Google Image and they are cleared and stored in the folder target, in the crappify step, these images are crappied into folder crappy. \nOther folders are the processing from 'crappy' to 'target'. The network models will be stored in the processing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is image restoration for UAV based wildfire segmentation because it will always meet some disturbance, noise or other serious situation ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/qiaolinhan/ws-preprocess/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 02:15:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/qiaolinhan/ws-preprocess/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "qiaolinhan/ws-preprocess",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/qiaolinhan/ws-preprocess/master/DonedownloadingdatafromGoogle.ipynb",
      "https://raw.githubusercontent.com/qiaolinhan/ws-preprocess/master/GAN1.ipynb",
      "https://raw.githubusercontent.com/qiaolinhan/ws-preprocess/master/GAN2.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9006946809880618
      ],
      "excerpt": "Install the Google compute platform on Linux \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8653697175967856
      ],
      "excerpt": ": Create environment variable for correct distribution \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8311640361675212,
        0.9566997829589171
      ],
      "excerpt": ": Update the package list and install the Cloud SDK \nsudo apt-get update && sudo apt-get install google-cloud-sdk \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9988761249926362,
        0.9538585562685833
      ],
      "excerpt": "Conda install fastai packages \nsudo /opt/anaconda3/bin/conda install -c fastai fastai \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/qiaolinhan/ws-preprocess/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ws-preprocess",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ws-preprocess",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "qiaolinhan",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/qiaolinhan/ws-preprocess/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 02:15:50 GMT"
    },
    "technique": "GitHub API"
  }
}