{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* UNSUPERVISED REPRESENTATION LEARNING WITH DEEP CONVOLUTIONAL GENERATIVE ADVERSARIAL NETWORKS - https://arxiv.org/pdf/1511.06434\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nikitakodkany/DCGAN-Implementation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-07T08:20:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-24T22:17:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9821002782619753
      ],
      "excerpt": "This is an implementation of the DCGAN from scratch on the MNIST dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9511920384317307
      ],
      "excerpt": "Implement it on your personal computer with high end GPU services. The code for the same is not included in the script as it is CPU working edition. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875,
        0.9865777082623528
      ],
      "excerpt": "Dense(256, activation='relu', input_shape=(1,)), Reshape((1,1,256)), \nThe original paper of DCGAN has an input dimention vector of 128.  But we are using input_shape=(1,)) for simplification. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811266144932007,
        0.9590903113921855
      ],
      "excerpt": "plt.imshow(np.reshape(generated_image,(28,28)), cmap='binary') \nThe tensor is reshaped into generated_image,(28,28) removing the channel as it is a black-&-white image using pyplot. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8815907362136821
      ],
      "excerpt": "The batch size is divided into half as one half of the examples are true and the other half are going to be generated. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8815666568749572,
        0.9656796526450642
      ],
      "excerpt": "The Generator is trained to get an output = 1 for all the images. \nTo find the accuracy of the batch. As and when the Generator does well the accuracy of the Discriminator reduces. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "DCGAN Implementation from scratch on the MNIST dataset.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nikitakodkany/DCGAN-Implementation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 22:15:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nikitakodkany/DCGAN-Implementation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nikitakodkany/DCGAN-Implementation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nikitakodkany/DCGAN-Implementation/master/DCGAN_Implementation.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Tensorflow - version 2.0+.\n* Keras - with tensorflow in the backend & importing layers and model.\n* NumPy - Mathematical computations.\n* PIL - Image manipulation.\n* Matplotlib - For the plotting of images.\n* tfutils - Utility for Keras and Tensorflow.\n\n\n```sh\n#:Installation - tfutils\n$ pip3 install git+https://github.com/am1tyadav/tfutils.git\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8440293382790072
      ],
      "excerpt": "line 66 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8279155636661946
      ],
      "excerpt": "line 90 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nikitakodkany/DCGAN-Implementation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN IMPLEMENTION",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DCGAN-Implementation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nikitakodkany",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nikitakodkany/DCGAN-Implementation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 22:15:14 GMT"
    },
    "technique": "GitHub API"
  }
}