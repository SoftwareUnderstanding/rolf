{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Facial Expression Recognition using Residual Masking Network\n  - default weights and model is `densnet121` and it will be automatically download\n- face size must be (224, 224), you can fix it in FaceDetector init function with face_size=(224, 224)\n\n ```python\n   from facelib import FaceDetector, EmotionDetector\n  \n   face_detector = FaceDetector(face_size=(224, 224))\n   emotion_detector = EmotionDetector()\n\n   faces, boxes, scores, landmarks = face_detector.detect_align(image)\n   list_of_emotions, probab = emotion_detector.detect_emotion(faces)\n   print(list_of_emotions)\n  ```\n\n- EmotionDetector live on your webcam\n```python\n   from facelib import WebcamEmotionDetector\n   detector = WebcamEmotionDetector()\n   detector.run()\n```\n\n- on my Webcam \ud83d\ude42\n\n![Alt Text](https://github.com/sajjjadayobi/FaceLib/blob/master/facelib/imgs/emotion.gif)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- This module is a reimplementation of Arcface(paper), or Insightface(Github)\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [InsightFace](https://github.com/TreB1eN/InsightFace_Pytorch)\n- [RetinaFace](https://github.com/biubug6/Pytorch_Retinaface)\n- [Facial Expression](https://github.com/phamquiluan/ResidualMaskingNetwork)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9615821021902224
      ],
      "excerpt": "use for Detection, Facial Expression, Age & Gender Estimation and  Recognition with PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.825862451132986
      ],
      "excerpt": "FaceDetection live on your webcam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.825862451132986
      ],
      "excerpt": "AgeGenderEstimation live on your webcam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | calfw(%) | cplfw(%) | vgg2_fp(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | calfw(%) | cplfw(%) | vgg2_fp(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if update_facebank_for_add_new_person: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9882402481232105
      ],
      "excerpt": "Face Recognition live on your webcam \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sajjjadayobi/FaceLib",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-09T20:43:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T14:45:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.867761076098891,
        0.8214314777663271
      ],
      "excerpt": "for more details, you can see the documentation \nThe following example illustrates the ease of use of this package: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.903158379432229
      ],
      "excerpt": "detect_align instead of detect_faces \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Face Detection & Age Gender & Expression & Recognition",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sajjjadayobi/FaceLib/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 31,
      "date": "Tue, 28 Dec 2021 23:55:45 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sajjjadayobi/FaceLib/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sajjjadayobi/FaceLib",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sajjjadayobi/FaceLib/master/example_notebook.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- the faces images you want to detect it save them in this folder:\n    ```\n    Insightface/models/data/facebank/\n              ---> person_1/\n                  ---> img_1.jpg\n                  ---> img_2.jpg\n              ---> person_2/\n                  ---> img_1.jpg\n                  ---> img_2.jpg\n    ```\n- you can save a new preson in facebank with 3 ways:\n\n  - use `add_from_webcam`: it takes 4 images and saves them on facebank\n  ```python\n     from facelib import add_from_webcam\n     add_from_webcam(person_name='sajjad')\n  ```\n\n  - use `add_from_folder`: it takes a path with some images from just a person \n  ```python\n     from facelib import add_from_folder\n     add_from_folder(folder_path='./', person_name='sajjad')\n  ```\n  \n  - or add faces manually (just face of a person not image of a person)\n    - I don't suggest this\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Clone and install with this command:\n    - with pip and automatic installs everything all you need\n      - `pip install git+https://github.com/sajjjadayobi/FaceLib.git`\n    \n    - or with cloning the repo and install required packages \n      - `git clone https://github.com/sajjjadayobi/FaceLib.git`\n- you can see the required packages in [requirements.txt](https://github.com/sajjjadayobi/FaceLib/blob/master/requirements.txt)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8723227338090259
      ],
      "excerpt": "FaceDetection live on your webcam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8178229533192073
      ],
      "excerpt": "you can check or change it Face Detector \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8723227338090259
      ],
      "excerpt": "AgeGenderEstimation live on your webcam \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "   from facelib import FaceDetector \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "   from facelib import WebcamFaceDetector \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": " from facelib import FaceDetector \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "    from facelib import FaceDetector, AgeGenderEstimator \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936606094659785
      ],
      "excerpt": "print(genders, ages) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "   from facelib import WebcamAgeGenderEstimator \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "   estimator.run() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674,
        0.8801854956928516,
        0.8801854956928516
      ],
      "excerpt": "    import cv2 \n    from facelib import FaceRecognizer, FaceDetector \n    from facelib import update_facebank, load_facebank, special_draw, get_config \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809547384061538
      ],
      "excerpt": "    targets, names = load_facebank(conf) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516,
        0.8073249172343169,
        0.8008331685760428
      ],
      "excerpt": "   from facelib import WebcamVerify \n   verifier = WebcamVerify(update=True) \n   verifier.run() \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sajjjadayobi/FaceLib/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Sajjad Ayobi\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "[FaceLib](https://github.com/sajjjadayobi/FaceLib):",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FaceLib",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sajjjadayobi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sajjjadayobi/FaceLib/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 112,
      "date": "Tue, 28 Dec 2021 23:55:45 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "face",
      "face-detection",
      "face-recognition",
      "retinaface",
      "pytorch",
      "age-gender",
      "facial-expression-recognition",
      "gender-estimation",
      "recognition"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  - the simplest way is at [example_notebook.ipynb](https://github.com/sajjjadayobi/FaceLib/blob/master/example_notebook.ipynb)\n  - for low-level usage check out the following sections\n  - if you have an NVIDIA GPU don't change the device param if not use `cpu`\n \n",
      "technique": "Header extraction"
    }
  ]
}