{
  "citation": [
    {
      "confidence": [
        0.8360411435090143,
        0.9869405348645832,
        0.9920934132822591,
        0.993717632380165
      ],
      "excerpt": "MobileNets: Efficient Convolutional Neural Networks for Mobile Vision \nApplications (https://arxiv.org/pdf/1704.04861.pdf) \nMobileNetV2: Inverted Residuals and Linear Bottlenecks  (https://arxiv.org/pdf/1801.04381.pdf) \n Searching for MobileNetV3 (https://arxiv.org/pdf/1905.02244.pdf) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PolinaDruzhinina/mobilenet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-12T17:59:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-01T13:59:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8791563283569398,
        0.9508179146564296,
        0.9300242334472568
      ],
      "excerpt": "The first version bacome known for first using depth wise separable conv. It helps to significantly reduce the size and complexity of the model, besides fewer parameters and calculations have made Mobilenet especially useful for mobile and embedded applications.  \nMobileNetV2, based on the ideas of the first version, also introduces linear bottlenecks between layers and short connections into the architecture, which allow to accelerate training and increase accuracy  \nThe latest, version V3, added squeeze and excitation layers to the original blocks presented in V2. According to the authors of the article, by using SE and h-swish in layers where the tensors are smaller, there is less delay and quality gain. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PolinaDruzhinina/mobilenet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 10:58:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PolinaDruzhinina/mobilenet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "PolinaDruzhinina/mobilenet",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PolinaDruzhinina/mobilenet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNets",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mobilenet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "PolinaDruzhinina",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PolinaDruzhinina/mobilenet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": " \n-requirements.txt - For installation:\n```\npip install -r requirements.txt\n```\n- to run training use:\n\n```\npython train_run.py \n       -v (v1/v2/v3), default='v3'\n       --mode (train/test) defolt = train\n       --load (True/False) - for loading model\n       --mobilenet (mobilenetv3.pth) -pretrained model\n       -b --batch_size, default=64 - Batch size for training\n       --num_workers, default=8, Number of workers used in dataloading\n       --lr, --learning-rate default=0.01, - initial learning rate\n       -epoch, --max_epoch default=100, - max epoch for training\n       --save_folder, default='img/'\n       --save_img, default=True, save test images\n       --weight_decay, default=5e-4, Weight decay for SGD\n       --momentum, default=0.999\n```\nFor example:\n```\npython train_run.py -v v1 --mode test --load True --mobilenet mobilenetv1.pth\n```\n- to run validation and save image in folder:\n```\npython train_run.py -v v2 --mode test --load True --mobilenet mobilenetv2.pth\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 10:58:05 GMT"
    },
    "technique": "GitHub API"
  }
}