{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2001.04451\n - [2] https://arxiv.org/abs/1902.07987\n\nIf you use this code academically, please cite this repository as follows:\n\n - Joosep Pata. (2020, October 22",
      "https://arxiv.org/abs/1902.07987\n\nIf you use this code academically, please cite this repository as follows:\n\n - Joosep Pata. (2020, October 22"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "num_batches = 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8742357812493416
      ],
      "excerpt": " - [x] Fast evaluation and efficient memory use \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jpata/SparseDistance",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-21T11:59:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-13T02:12:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9065226848990604,
        0.9452790240913952,
        0.9168571395910805
      ],
      "excerpt": "(or just copy the files from the repo to your project) \nEfficiently generate sparse graph adjacency matrices using tensorflow, including gradient propagation and minibatches, for graph sizes up to 100k+ in subquadratic time. \nOn the following images, you see the input set on the left and the learned graph structure (edges) on the right for a toy clustering problem with approx. 5000 input elements per graph. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9736605744755339
      ],
      "excerpt": "Here, we show the learned distance matrix on the left and the scaling of the training time on the right. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9434944519709686,
        0.8640727508245384
      ],
      "excerpt": "- Input: a set of elements with features, shape=(N_batch, N_elem, N_feat), possibly in minibatches for efficient training (e.g. a minibatch may consist of several sets/graphs padded to the same size) \n - Output: a sparse adjacency matrix for each input set shape=(N_batch, N_elem, N_elem), the elements of which can be differentiated with respect to the input \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9934087636109533,
        0.90707112064517,
        0.9732983020337024
      ],
      "excerpt": "The input data is divided into equal-sized bins with a locality sensitive hashing (LSH) which is based on random rotations. In each bin, we run a dense k-nearest-neighbors algo and update the final sparse adjacency matrix. The generated graph consists of N_elem/bin_size disjoint graphs. \nThe maximum input size is determined by the pre-generated LSH codebook size. Since the bin size is much smaller than the input size, the k-nearest-neighbors evaluation is efficient. \nThe input features to the hashing and knn can be learnable, so that the binning & knn graph construction can adapt to the problem based on gradient descent. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9610394266538052
      ],
      "excerpt": "show that we can take a gradient of stuff with respect to the distance matrix values (but not indices!) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9686623180177256
      ],
      "excerpt": "Based on the Reformer [1] (LSH approach and description) and GravNet [2] (knn graph construction) papers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Generate sparse distance matrices with gradients in tensorflow efficiently",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jpata/SparseDistance/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Mon, 27 Dec 2021 15:59:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jpata/SparseDistance/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jpata/SparseDistance",
    "technique": "GitHub API"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/306009785",
      "technique": "Regular expression"
    }
  ],
  "installation": [
    {
      "confidence": [
        0.9975113391628317,
        0.8429657598130623
      ],
      "excerpt": "python3 -m pip install git+https://github.com/jpata/SparseDistance.git@v0.1 \n(or just copy the files from the repo to your project) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.916583988791771
      ],
      "excerpt": " - [x] Works on a modest GPU (e.g. 2060S) or a CPU \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8754595659353164
      ],
      "excerpt": "  <img src=\"images/graph_noedge.png\" alt=\"Input set without edges\" width=\"300\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8357348712262822,
        0.8836039927306739
      ],
      "excerpt": "  <img src=\"images/dm.png\" alt=\"Generated adjacency matrix\" width=\"300\"/> \n  <img src=\"images/timing.png\" alt=\"Scaling of the complexity with input size\" width=\"300\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925671696398174,
        0.9457175861910134,
        0.8900486270063179,
        0.9416522774131079
      ],
      "excerpt": "import tensorflow as tf \nimport numpy as np \nfrom sparsedistance.models import SparseHashedNNDistance \nfrom sparsedistance.utils import sparse_dense_matmult_batch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9347628066294495,
        0.9347628066294495
      ],
      "excerpt": "X = np.array(np.random.randn(num_batches, num_points_per_batch, num_features), dtype=np.float32) \ny = np.array(np.random.randn(num_batches, num_points_per_batch, ), dtype=np.float32) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8932771122592772
      ],
      "excerpt": "with tf.GradientTape(persistent=True) as g: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "ret = tf.reduce_sum(ret) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jpata/SparseDistance/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2020, Joosep Pata\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n  contributors may be used to endorse or promote products derived from\\n  this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SparseDistance",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SparseDistance",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jpata",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jpata/SparseDistance/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "jpata",
        "body": "First release.",
        "dateCreated": "2020-10-22T08:24:45Z",
        "datePublished": "2020-10-22T08:32:31Z",
        "html_url": "https://github.com/jpata/SparseDistance/releases/tag/v0.1",
        "name": "",
        "tag_name": "v0.1",
        "tarball_url": "https://api.github.com/repos/jpata/SparseDistance/tarball/v0.1",
        "url": "https://api.github.com/repos/jpata/SparseDistance/releases/32905163",
        "zipball_url": "https://api.github.com/repos/jpata/SparseDistance/zipball/v0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 15:59:49 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "knn-graph-construction",
      "graph",
      "lsh",
      "tensorflow",
      "machinelearning"
    ],
    "technique": "GitHub API"
  }
}