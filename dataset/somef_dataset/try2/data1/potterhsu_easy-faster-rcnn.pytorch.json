{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.01497\">\n                    Original Paper\n                </a>\n            </td>\n            <td>VGG-16</td>\n            <td>Tesla K40</td>\n            <td>1</td>\n            <td>1</td>\n            <td>-</td>\n            <td>~ 5</td>\n            <td>0.699</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://github.com/ruotianluo/pytorch-faster-rcnn\">\n                    ruotianluo/pytorch-faster-rcnn\n                </a>\n            </td>\n            <td>ResNet-101</td>\n            <td>TITAN Xp</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>0.7576</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://github.com/jwyang/faster-rcnn.pytorch\">\n                    jwyang/faster-rcnn.pytorch\n                </a>\n            </td>\n            <td>ResNet-101</td>\n            <td>TITAN Xp</td>\n            <td>1</td>\n            <td>1</td>\n            <td>-</td>\n            <td>-</td>\n            <td>0.752</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n            <td>-</td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://drive.google.com/open?id=1IQSqnLFKduZaYcq06lZmYd_e7qbH3cxZ\">\n                    Ours\n                </a>\n            </td>\n            <td>ResNet-101</td>\n            <td>GTX 1080 Ti</td>\n            <td>1</td>\n            <td>4</td>\n            <td>7.12</td>\n            <td>15.05</td>\n            <td>0.7562</td>\n            <td>600</td>\n            <td>1000</td>\n            <td>[(1, 2"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8279569547711335
      ],
      "excerpt": "Supports Multi-Batch and Multi-GPU training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "            <a href=\"https://arxiv.org/abs/1506.01497\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8302556419090275
      ],
      "excerpt": "            <a href=\"https://drive.google.com/open?id=1IQSqnLFKduZaYcq06lZmYd_e7qbH3cxZ\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "        <td>7.12</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260758096368649
      ],
      "excerpt": "MS COCO 2017 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8302556419090275
      ],
      "excerpt": "            <a href=\"https://drive.google.com/open?id=1d-t7sR0-9dyRQvEbisklzoOkTibGMOY8\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8302556419090275
      ],
      "excerpt": "            <a href=\"https://drive.google.com/open?id=1faXOZXtImWfAXzfgpE6q5-2VP2lw39q1\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066,
        0.9030859728368266
      ],
      "excerpt": "        <td>11.64</td> \n        <td>5.10</td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9474635993655147
      ],
      "excerpt": "MS COCO 2017 Person \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260758096368649
      ],
      "excerpt": "MS COCO 2017 Car \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260758096368649
      ],
      "excerpt": "MS COCO 2017 Animal \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/potterhsu/easy-faster-rcnn.pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-04T05:57:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-12T04:27:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9890893275735604,
        0.8832502489368869,
        0.8352078529937598,
        0.934845087368695,
        0.8378863807953254
      ],
      "excerpt": "An easy implementation of Faster R-CNN in PyTorch. \nSupports PyTorch 1.0 \nSupports PASCAL VOC 2007 and MS COCO 2017 datasets \nSupports ResNet-18, ResNet-50 and ResNet-101 backbones (from official PyTorch model) \nSupports ROI Pooling and ROI Align pooler modes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8389112290169469,
        0.8419393836920115
      ],
      "excerpt": "Matches the performance reported by the original paper \nIt's efficient with maintainable, readable and clean code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An easy implementation of Faster R-CNN (https://arxiv.org/pdf/1506.01497.pdf) in PyTorch.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 54,
      "date": "Thu, 23 Dec 2021 10:53:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "potterhsu/easy-faster-rcnn.pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/train-bs8.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/train-bs1.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/train-bs16.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/eval.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/train-bs4.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/infer.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/voc2007/train-bs2.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/train-bs8.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/train-bs1.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/train-bs16.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/eval.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/train-bs4.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/infer.sh",
      "https://raw.githubusercontent.com/potterhsu/easy-faster-rcnn.pytorch/master/scripts/coco2017/train-bs2.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Prepare data\n    1. For `PASCAL VOC 2007`\n\n        1. Download dataset\n\n            - [Training / Validation](http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar) (5011 images)\n            - [Test](http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtest_06-Nov-2007.tar) (4952 images)\n\n        1. Extract to data folder, now your folder structure should be like:\n\n            ```\n            easy-faster-rcnn.pytorch\n                - data\n                    - VOCdevkit\n                        - VOC2007\n                            - Annotations\n                                - 000001.xml\n                                - 000002.xml\n                                ...\n                            - ImageSets\n                                - Main\n                                    ...\n                                    test.txt\n                                    ...\n                                    trainval.txt\n                                    ...\n                            - JPEGImages\n                                - 000001.jpg\n                                - 000002.jpg\n                                ...\n                    - ...\n            ```\n\n    1. For `MS COCO 2017`\n\n        1. Download dataset\n\n            - [2017 Train images [18GB]](http://images.cocodataset.org/zips/train2017.zip) (118287 images)\n                > COCO 2017 Train = COCO 2015 Train + COCO 2015 Val - COCO 2015 Val Sample 5k\n            - [2017 Val images [1GB]](http://images.cocodataset.org/zips/val2017.zip) (5000 images)\n                > COCO 2017 Val = COCO 2015 Val Sample 5k (formerly known as `minival`)\n            - [2017 Train/Val annotations [241MB]](http://images.cocodataset.org/annotations/annotations_trainval2017.zip)\n\n        1. Extract to data folder, now your folder structure should be like:\n\n            ```\n            easy-faster-rcnn.pytorch\n                - data\n                    - COCO\n                        - annotations\n                            - instances_train2017.json\n                            - instances_val2017.json\n                            ...\n                        - train2017\n                            - 000000000009.jpg\n                            - 000000000025.jpg\n                            ...\n                        - val2017\n                            - 000000000139.jpg\n                            - 000000000285.jpg\n                            ...\n                    - ...\n            ```\n\n1. Build `Non Maximum Suppression` and `ROI Align` modules (modified from [facebookresearch/maskrcnn-benchmark](https://github.com/facebookresearch/maskrcnn-benchmark))\n\n    1. Install\n\n        ```\n        $ python support/setup.py develop\n        ```\n\n    1. Uninstall\n\n        ```\n        $ python support/setup.py develop --uninstall\n        ```\n\n    1. Test\n\n        ```\n        $ python test/nms/test_nms.py\n        ```\n\n        * Result\n\n            ![](images/test_nms.png?raw=true)\n\n1. Install `pycocotools` for `MS COCO 2017` dataset\n\n    1. Clone and build COCO API\n\n        ```\n        $ git clone https://github.com/cocodataset/cocoapi\n        $ cd cocoapi/PythonAPI\n        $ make\n        ```\n        > It's not necessary to be under project directory\n\n    1. If an error with message `pycocotools/_mask.c: No such file or directory` has occurred, please install `cython` and try again\n\n        ```\n        $ pip install cython\n        ```\n\n    1. Copy `pycocotools` into project\n\n        ```\n        $ cp -R pycocotools /path/to/project\n        ```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8177562199204159
      ],
      "excerpt": "Supports PyTorch 1.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.886149320514007,
        0.8118692179289546
      ],
      "excerpt": "            <a href=\"https://github.com/ruotianluo/pytorch-faster-rcnn\"> \n                ruotianluo/pytorch-faster-rcnn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.886149320514007,
        0.8118692179289546
      ],
      "excerpt": "            <a href=\"https://github.com/jwyang/faster-rcnn.pytorch\"> \n                jwyang/faster-rcnn.pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.886149320514007,
        0.8118692179289546
      ],
      "excerpt": "            <a href=\"https://github.com/ruotianluo/pytorch-faster-rcnn\"> \n                ruotianluo/pytorch-faster-rcnn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.886149320514007,
        0.8118692179289546
      ],
      "excerpt": "            <a href=\"https://github.com/jwyang/faster-rcnn.pytorch\"> \n                jwyang/faster-rcnn.pytorch \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8712898244322753,
        0.8702850734705294
      ],
      "excerpt": "Train: 2007 trainval (5011 images) \nEval: 2007 test (4952 images) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8203559027252904
      ],
      "excerpt": "        <th>Training Speed (FPS)</th> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8203559027252904
      ],
      "excerpt": "        <th>Training Speed (FPS)</th> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "Shell",
      "JavaScript",
      "HTML"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Potter Hsu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "easy-faster-rcnn.pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "easy-faster-rcnn.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "potterhsu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "potterhsu",
        "body": "* Support PyTorch v1.0\r\n* Supports Multi-Batch and Multi-GPU training",
        "dateCreated": "2019-03-11T12:19:38Z",
        "datePublished": "2019-03-11T12:22:26Z",
        "html_url": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases/tag/v1.0",
        "name": "easy-faster-rcnn.pytorch v1.0",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/tarball/v1.0",
        "url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/releases/16032374",
        "zipball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/zipball/v1.0"
      },
      {
        "authorType": "User",
        "author_name": "potterhsu",
        "body": "Add ResNet-18 and ResNet-50 backbones, and add VOC 2007 Cat Dog dataset",
        "dateCreated": "2018-12-28T14:30:05Z",
        "datePublished": "2018-12-28T14:40:17Z",
        "html_url": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases/tag/v0.5",
        "name": "easy-faster-rcnn.pytorch v0.5",
        "tag_name": "v0.5",
        "tarball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/tarball/v0.5",
        "url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/releases/14730882",
        "zipball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/zipball/v0.5"
      },
      {
        "authorType": "User",
        "author_name": "potterhsu",
        "body": "Add `COCO 2017` dataset",
        "dateCreated": "2018-12-09T07:43:05Z",
        "datePublished": "2018-12-09T07:50:17Z",
        "html_url": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases/tag/v0.4",
        "name": "easy-faster-rcnn.pytorch v0.4",
        "tag_name": "v0.4",
        "tarball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/tarball/v0.4",
        "url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/releases/14427212",
        "zipball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/zipball/v0.4"
      },
      {
        "authorType": "User",
        "author_name": "potterhsu",
        "body": "Add `ResNet-101` backbone",
        "dateCreated": "2018-10-06T06:18:07Z",
        "datePublished": "2018-10-06T06:19:06Z",
        "html_url": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases/tag/v0.3",
        "name": "easy-faster-rcnn.pytorch v0.3",
        "tag_name": "v0.3",
        "tarball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/tarball/v0.3",
        "url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/releases/13280327",
        "zipball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/zipball/v0.3"
      },
      {
        "authorType": "User",
        "author_name": "potterhsu",
        "body": "Support PyTorch v0.4.1",
        "dateCreated": "2018-09-10T22:07:35Z",
        "datePublished": "2018-09-10T22:10:20Z",
        "html_url": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases/tag/v0.2",
        "name": "easy-faster-rcnn.pytorch v0.2",
        "tag_name": "v0.2",
        "tarball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/tarball/v0.2",
        "url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/releases/12826153",
        "zipball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/zipball/v0.2"
      },
      {
        "authorType": "User",
        "author_name": "potterhsu",
        "body": "Support PyTorch v0.3.1",
        "dateCreated": "2018-09-06T15:00:21Z",
        "datePublished": "2018-09-10T05:50:23Z",
        "html_url": "https://github.com/potterhsu/easy-faster-rcnn.pytorch/releases/tag/v0.1",
        "name": "easy-faster-rcnn.pytorch v0.1",
        "tag_name": "v0.1",
        "tarball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/tarball/v0.1",
        "url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/releases/12809152",
        "zipball_url": "https://api.github.com/repos/potterhsu/easy-faster-rcnn.pytorch/zipball/v0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.6\n* torch 1.0\n* torchvision 0.2.1\n* tqdm\n    ```\n    $ pip install tqdm\n    ```\n\n* tensorboardX\n    ```\n    $ pip install tensorboardX\n    ```\n    \n* OpenCV 3.4 (required by `infer_stream.py`)\n    ```\n    $ pip install opencv-python~=3.4\n    ```\n\n* websockets (required by `infer_websocket.py`)\n    ```\n    $ pip install websockets\n    ```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 155,
      "date": "Thu, 23 Dec 2021 10:53:22 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "faster-rcnn",
      "deep-learning",
      "object-detection",
      "voc-dataset",
      "mscoco-dataset",
      "vgg16",
      "resnet-18",
      "resnet-50",
      "resnet-101"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![](images/demo-result.jpg)\n\n1. Download checkpoint from [here](https://drive.google.com/open?id=1mQ9HV5nmGBM06mg1DjKWqBuKoipoBe5U)\n1. Follow the instructions in [Setup](#setup) 2 & 3\n1. Run inference script\n    ```\n    $ python infer.py -s=coco2017 -b=resnet101 -c=/path/to/checkpoint.pth --image_min_side=800 --image_max_side=1333 --anchor_sizes=\"[64, 128, 256, 512]\" --rpn_post_nms_top_n=1000 /path/to/input/image.jpg /path/to/output/image.jpg\n    ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Train\n\n    * To apply default configuration (see also `config/`)\n        ```\n        $ python train.py -s=voc2007 -b=resnet101\n        ```\n\n    * To apply custom configuration (see also `train.py`)\n        ```\n        $ python train.py -s=voc2007 -b=resnet101 --weight_decay=0.0001\n        ```\n\n    * To apply recommended configuration (see also `scripts/`)\n        ```\n        $ bash ./scripts/voc2007/train-bs2.sh resnet101 /path/to/outputs/dir\n        ```\n\n1. Evaluate\n\n    * To apply default configuration (see also `config/`)\n        ```\n        $ python eval.py -s=voc2007 -b=resnet101 /path/to/checkpoint.pth\n        ```\n\n    * To apply custom configuration (see also `eval.py`)\n        ```\n        $ python eval.py -s=voc2007 -b=resnet101 --rpn_post_nms_top_n=1000 /path/to/checkpoint.pth\n        ```\n\n    * To apply recommended configuration (see also `scripts/`)\n        ```\n        $ bash ./scripts/voc2007/eval.sh resnet101 /path/to/checkpoint.pth\n        ```\n\n1. Infer\n\n    * To apply default configuration (see also `config/`)\n        ```\n        $ python infer.py -s=voc2007 -b=resnet101 -c=/path/to/checkpoint.pth /path/to/input/image.jpg /path/to/output/image.jpg\n        ```\n\n    * To apply custom configuration (see also `infer.py`)\n        ```\n        $ python infer.py -s=voc2007 -b=resnet101 -c=/path/to/checkpoint.pth -p=0.9 /path/to/input/image.jpg /path/to/output/image.jpg\n        ```\n\n    * To apply recommended configuration (see also `scripts/`)\n        ```\n        $ bash ./scripts/voc2007/infer.sh resnet101 /path/to/checkpoint.pth /path/to/input/image.jpg /path/to/output/image.jpg\n        ```\n\n1. Infer other sources\n\n    * Source from stream (see also `infer_stream.py`)\n        ```\n        #: Camera\n        $ python infer_stream.py -s=voc2007 -b=resnet101 -c=/path/to/checkpoint.pth -p=0.9 0 5\n        \n        #: Video\n        $ python infer_stream.py -s=voc2007 -b=resnet101 -c=/path/to/checkpoint.pth -p=0.9 /path/to/file.mp4 5\n        \n        #: Remote\n        $ python infer_stream.py -s=voc2007 -b=resnet101 -c=/path/to/checkpoint.pth -p=0.9 rtsp://184.72.239.149/vod/mp4:BigBuckBunny_115k.mov 5\n        ```\n        \n    * Source from websocket (see also `infer_websocket.py`)\n        1. Start web server\n            ```\n            $ cd webapp\n            $ python -m http.server 8000\n            ```\n            \n        1. Launch service\n            ```\n            $ python infer_websocket.py -s=voc2007 -b=resnet101 -c=/path/to/checkpoint.pth -p=0.9\n            ```\n            \n        1. Navigate website: `http://127.0.0.1:8000/`\n        \n            ![](images/web-app.jpg)\n            \n            > Sample video from [Pexels](https://www.pexels.com/videos/)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}