{
  "citation": [
    {
      "confidence": [
        0.8508240212634797
      ],
      "excerpt": "   their metrics and graphs.  Reproduce them. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.993618782283189
      ],
      "excerpt": "Dueling network architectures for reinforcement learing: https://arxiv.org/pdf/1511.06581.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "(https://en.wikipedia.org/wiki/Forsyth\u2013Edwards_Notation), since \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/la3lma/Chez",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2013-04-04T21:30:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-01T16:44:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8595042840719729
      ],
      "excerpt": "A little \"fingering exercise\" to get a feel for Julia, may also contain \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394880570430332,
        0.8749434233720956
      ],
      "excerpt": "  a human to see where the machine get stuck in loops etc. \nPersist player state is buggy in several ways. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9269865741277816,
        0.9839549393499325,
        0.9795217338518866,
        0.8531274083416073
      ],
      "excerpt": "The representations are being bloated, for some reason they seem to \n    grow in size in a way that is totally out of proportion to \n    the amount of information that is in the weigh chain. \nLog the average/median  length of non-draw games.  Use it to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9281099590391899,
        0.880791801744531
      ],
      "excerpt": "Tweak Q metric to give a bias to all moves in a winning game \n  regardless of length. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8605290049010833,
        0.8326823847254077
      ],
      "excerpt": "The whole package/module thing is still a little confusing to me, \n  so there is probably something wrong there. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8972500180778075
      ],
      "excerpt": "  task, and I want to speed it up by a factor of how many cores are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9917914458768652
      ],
      "excerpt": "Let the game board contain the state of the rookings, and movements of the king/rooks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9772970662214175
      ],
      "excerpt": "I do have a halfway decent implementation of the game mechanics of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9045453773228626,
        0.96856000001149,
        0.8703251227823927,
        0.9040121787925184
      ],
      "excerpt": "What I don't have at all is a functioning reinforcement learning \nsetup, so I need to work on that.  Chess is a complicated game with \nhigh move fan-out that takes some time to play so it may be worth it \nto experiment with the reinforcement learning strategies on a simpler \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9065474700507937
      ],
      "excerpt": "There are a few chess-specific pieces of code in the reinforecement \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8977787225524742
      ],
      "excerpt": "possible to learn from other people's work (see some references \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9269930209574471
      ],
      "excerpt": "algorithms that are plugged in, with whatever generic heuristics \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8387903070945298,
        0.976947009661286,
        0.9128076455643793,
        0.8394359841648679
      ],
      "excerpt": "implementation of \"q-learning\" (which has already mutated) \nis quickly getting messy.  That cannot be permitted to happen. \nThe core algorithm must be crystal clear for the reader, and the \nrest of the supporting software must enable this clarity. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8214646928555358,
        0.982008576606792,
        0.8791204889722419,
        0.8411476815733917
      ],
      "excerpt": "track progress.  It is nice to get little printouts as we move along, \nbut it is also important to log performance over time in an orderly \nconsistent manner, and to be able to plot evolution of performance \nover time.   Some ideas are: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8360695750077227,
        0.9740651641566095
      ],
      "excerpt": "Use these metrics to track progress of the learning algorithms \n   over time, across classes of games, and instances of games. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.930837368871891
      ],
      "excerpt": "Deep neural network, reinforcement learning player based on Flux.jl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "Forsyth-Edwards notation to encode board positions \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9629670227629925
      ],
      "excerpt": "chessboardjs is capable of decoding FEN encoded board positions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8365828989518155
      ],
      "excerpt": "Also output PGN notation to allow analysis using external tooling \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A little finger exercise to get a feel for julia, may also contain elements of a chess program ;-)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/la3lma/chezjulia/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 20:35:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/la3lma/Chez/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "la3lma/Chez",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/la3lma/chezjulia/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/la3lma/chezjulia/master/notebooks/Chez.jl%20introduction%20and%20roadmap.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8294801449768335
      ],
      "excerpt": "A little \"fingering exercise\" to get a feel for Julia, may also contain \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9382368648958976
      ],
      "excerpt": "To run it, start julia, then run \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9050885708128741
      ],
      "excerpt": "Make instructions for how to start easily from the command line. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189965413041465,
        0.9880570828643697
      ],
      "excerpt": "Make it possible to run this thing, with snapshotting, for weeks. \nMake the flux calculations run using a GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8585473667142949
      ],
      "excerpt": "that any priority now. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8618337879169596
      ],
      "excerpt": "setup, so I need to work on that.  Chess is a complicated game with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014797040216891
      ],
      "excerpt": "Don't be cute, use denormalized tables, one per metric, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8485899277350477
      ],
      "excerpt": "Using the FEN viewser  from the chrome market may be sufficient: https://chrome.google.com/webstore/detail/simplechessboard/hppnfmeaoiochhjdlojgflkfedncdokl \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8267810210496807,
        0.8630722566440855
      ],
      "excerpt": "  include(\"src/Chez.jl\") \nThis will load the code and run unit tests. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/la3lma/Chez/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Julia",
      "Jupyter Notebook",
      "Dockerfile",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "chezjulia",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Chez",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "la3lma",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/la3lma/Chez/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Take a look at  docker run -it --rm --gpus all nvcr.io/hpc/julia:v1.2.0 /workspace/examples/test_cudanative.jl, an see\n  if that image is usable out of the box.  If it is, that's nice.\n\n* Can take a look at this https://github.com/maleadt/julia-ngc/blob/master/Dockerfile\n\n* These flags are necessary -e NVIDIA_VISIBLE_DEVICES=all -e NVIDIA_DRIVER_CAPABILITIES=compute,utility\n\n* https://github.com/JuliaGPU/CUDA.jl/commit/fa32bca8f97b764d5d83fefc1bea0d4282e86d0d\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 20:35:34 GMT"
    },
    "technique": "GitHub API"
  }
}