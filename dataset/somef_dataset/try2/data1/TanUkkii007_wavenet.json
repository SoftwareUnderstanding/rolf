{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.03499 .\n\nThis project is originated from the hands-on lecture of SPCC 2018.\nThis project rewrote codes of the lecture with following criteria:\n\n- Simple, modular and easy to read\n- Using high level tensorflow APIs: `tf.layers.Layer`, `tf.data.Dataset`, `tf.estimator.Estimator`.\n- Fix discrepancy of the results between training and inference that causes workaround to dispose wrong results at early steps of inference samples.\n- Review the lecture and deepen my understandings\n\nThis project has following limitations.\n\n- Supported data set is [LJSpeech](https://keithito.com/LJ-Speech-Dataset"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9470942037353761
      ],
      "excerpt": "For research-ready implementations, please refer to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "Epoch 10 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TanUkkii007/wavenet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-29T05:20:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-24T19:05:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9885912636764754,
        0.9966000813682466
      ],
      "excerpt": "This project is originated from the hands-on lecture of SPCC 2018. \nThis project rewrote codes of the lecture with following criteria: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.972574896830879,
        0.9554025773396336
      ],
      "excerpt": "Fix discrepancy of the results between training and inference that causes workaround to dispose wrong results at early steps of inference samples. \nReview the lecture and deepen my understandings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9458481711305713,
        0.872364054210399,
        0.8253019490702731
      ],
      "excerpt": "Supported data set is LJSpeech only \nNo sophisticated initialization, optimization and regularization techniques that was in the lecture \nLack of hyper-parameter tuning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8394737915026377
      ],
      "excerpt": "The following pre-processing command executes mel-spectrogram extraction and serialize waveforms, mel-spectrograms and the other meta data into TFRecord (protocol buffer with content hash header) format. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8775629178516667
      ],
      "excerpt": "A simple method to create list files is using ls command. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.878175729942494,
        0.8887905789760235,
        0.9856160536280355
      ],
      "excerpt": "Causal convolution is implemented in two different ways. At training time, causal convolution is executed in parallel with optimized cuda kernel. \nAt inference time, causal convolution is executed sequentially with matrix multiplication. The result of two implementation should be same.  \nThis project checks the equality of the two implementation with property based test. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": " An implementation of WaveNet: A Generative Model for Raw Audio https://arxiv.org/abs/1609.03499",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TanUkkii007/wavenet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Mon, 20 Dec 2021 15:19:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TanUkkii007/wavenet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "TanUkkii007/wavenet",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/TanUkkii007/wavenet/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project requires python >= 3.6 and tensorflow >= 1.8.\n\nThe other dependencies can be installed with `conda`.\n\n```bash\nconda env create -f=environment.yml\n```\n\nThe following packages are installed.\n\n- pyspark=2.3.1\n- librosa==0.6.1 \n- matplotlib=2.2.2\n- hypothesis=3.59.1\n- docopt=0.6.2\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8283394304960081
      ],
      "excerpt": "This implementation was tested with Tesla K20c (4.94GiB GPU memory). \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8629385597943587
      ],
      "excerpt": "Using high level tensorflow APIs: tf.layers.Layer, tf.data.Dataset, tf.estimator.Estimator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.874077571616318
      ],
      "excerpt": "python preprocess.py ljspeech /path/to/input/corpus/dir /path/to/output/dir/of/preprocessed/data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9349679564838177
      ],
      "excerpt": "python train.py --data-root=/path/to/output/dir/of/preprocessed/data --checkpoint-dir=/path/to/checkpoint/dir --dataset=ljspeech --training-list-file=/path/to/file/listing/training/data --validation-list-file=/path/to/file/listing/validation/data --log-file=/path/to/log/file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8025991042888593,
        0.8428422217287855,
        0.8019576572757435
      ],
      "excerpt": "tensorboard --logdir=/path/to/checkpoint/dir \n(orange line: training loss, blue line: validation loss) \nAt validation time, predicted waveforms with teacher forcing are generated as images in the checkpoint directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112735652505316
      ],
      "excerpt": "Epoch 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9184725755216161
      ],
      "excerpt": "python predict.py --data-root=/path/to/output/dir/of/preprocessed/data --checkpoint-dir=/path/to/checkpoint/dir --dataset=ljspeech --test-list-file=/path/to/file/listing/test/data --output-dir=/path/to/output/dir \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091,
        0.8698920328606189
      ],
      "excerpt": "python -m unittest ops/convolutions_test.py \npython -m unittest layers/modules_test.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/TanUkkii007/wavenet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/TanUkkii007/wavenet/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT) Copyright (c) 2018 Yusuke Yasuda (yusuke.007.yasud@gmail.com)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \"Software\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\\nof the Software, and to permit persons to whom the Software is furnished to do\\nso, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\\n\\nThe MIT License (MIT) Copyright (c) 2017 Vassilis Tsiaras (tsiaras@csd.uoc.gr)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \"Software\"), to deal in\\nthe Software without restriction, including without limitation the rights to\\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\\nof the Software, and to permit persons to whom the Software is furnished to do\\nso, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "WaveNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "wavenet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "TanUkkii007",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/TanUkkii007/wavenet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project requires python >= 3.6 and tensorflow >= 1.8.\n\nThe other dependencies can be installed with `conda`.\n\n```bash\nconda env create -f=environment.yml\n```\n\nThe following packages are installed.\n\n- pyspark=2.3.1\n- librosa==0.6.1 \n- matplotlib=2.2.2\n- hypothesis=3.59.1\n- docopt=0.6.2\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Mon, 20 Dec 2021 15:19:46 GMT"
    },
    "technique": "GitHub API"
  }
}