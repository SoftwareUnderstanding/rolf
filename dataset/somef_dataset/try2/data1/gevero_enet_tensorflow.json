{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.02147 [cs] 2016.](https://arxiv.org/pdf/1606.02147.pdf)\n\n Enet is a lightweight neural network geared towards image segmentation for real time applications. This tensorflow 2.0 implementation is greatly indebted with the PyTorch [ENet - Real Time Semantic Segmentation](https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation) implementation by [iArunava](https://github.com/iArunava). \n\n# CamVid: Try it out\nYou can try it out directly in this [Colab notebook](https://colab.research.google.com/github/gevero/enet_tensorflow/blob/master/notebooks/Enet%20CamVid%20Training.ipynb). In the notebook, Enet is trained in three different ways for comparison:\n\n- **First the Encoder and then the Decoder:** as in the original paper, we first train the encoder, freeze the weights and then train the decoder. This approach provides the more stable training.\n-  **Encoder and  Decoder simultaneously with two objectives:** an approach similar to the original paper: we train Enet in one go but with the stabilty benefits of the original approach.\n-  **End to End:** we train Enet in one go. It is the least stable method, albeit the simplest.\n\n## CamVid pretrained weights\n\nYou can find them [here](https://drive.google.com/open?id=1rQN_855G-iHZkPe7KEI-P5PF8U4uIf40) for the [CamVid](http://mi.eng.cam.ac.uk/research/projects/VideoRec/CamVid/) dataset. The weights for different datasets will be released as soon as possible.\n\n## A typical example\n![TestImg](https://github.com/gevero/enet_tensorflow/blob/master/images/SegmentationExample.png)\n\n# Segment faces that do not exist\nIf instead you prefer something different, you can try a version of Enet trained on a face segmentation dataset built upon [CelebHair](https://github.com/ileniTudor/Face-Hair-Segmentation-Dataset) and  [CelebA](http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html). As for the CamVid dataset, you can download the pretrained weights [here](https://drive.google.com/open?id=1zQ6PCA7k-1d_s_zrZWftJ0OgS23wKIT_). If you want to immediately try out face segmentation, you can do it with this [Colab notebook](https://colab.research.google.com/github/gevero/enet_tensorflow/blob/master/notebooks/Enet%20FaceSegmentation%20Inference.ipynb). Enet will run on resized images generated by [ThisPersonDoesNotExist](https://www.thispersondoesnotexist.com/).\n\n![TestImg](https://github.com/gevero/enet_tensorflow/blob/master/images/ThisSegmentationDoesNotExist.png)"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gevero/enet_tensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-14T19:34:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-04T06:38:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9900092977228014
      ],
      "excerpt": "This repository contains a tensorflow 2.0 implementation of Enet as in:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9562931511131791,
        0.888688821920927
      ],
      "excerpt": "Enet is a lightweight neural network geared towards image segmentation for real time applications. This tensorflow 2.0 implementation is greatly indebted with the PyTorch ENet - Real Time Semantic Segmentation implementation by iArunava. \nYou can try it out directly in this Colab notebook. In the notebook, Enet is trained in three different ways for comparison: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9460140503226251,
        0.8972033537194545
      ],
      "excerpt": "Encoder and  Decoder simultaneously with two objectives: an approach similar to the original paper: we train Enet in one go but with the stabilty benefits of the original approach. \nEnd to End: we train Enet in one go. It is the least stable method, albeit the simplest. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Enet implementation in tensorflow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gevero/enet_tensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 22 Dec 2021 18:13:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gevero/enet_tensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gevero/enet_tensorflow",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/gevero/enet_tensorflow/master/notebooks/Enet%20FaceSegmentation%20Inference.ipynb",
      "https://raw.githubusercontent.com/gevero/enet_tensorflow/master/notebooks/Enet%20CamVid%20Training.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/gevero/enet_tensorflow/master/cityscapes_train.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gevero/enet_tensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ENet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "enet_tensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gevero",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gevero/enet_tensorflow/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Wed, 22 Dec 2021 18:13:43 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "![TestImg](https://github.com/gevero/enet_tensorflow/blob/master/images/SegmentationExample.png)\n\n",
      "technique": "Header extraction"
    }
  ]
}