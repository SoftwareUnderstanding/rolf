{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.04208",
      "https://arxiv.org/abs/1802.04208",
      "https://arxiv.org/abs/1802.04208"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{donahue2018wavegan,\n  title={Synthesizing Audio with Generative Adversarial Networks},\n  author={Donahue, Chris and McAuley, Julian and Puckette, Miller},\n  journal={arXiv:1802.04208},\n  year={2018}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MurreyCode/wavegan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-15T15:34:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T18:39:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9668505892519518
      ],
      "excerpt": "Official TensorFlow implementation of WaveGAN (Donahue et al. 2018) (paper) (demo) (sound examples). WaveGAN is a GAN approach designed for operation on raw, time-domain audio samples. It is related to the DCGAN approach (Radford et al. 2016), a popular GAN model designed for image synthesis. WaveGAN uses one-dimensional transposed convolutions with longer filters and larger stride than DCGAN, as shown in the figure above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    ./data/customdataset \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8476794224783797
      ],
      "excerpt": "    --data_dir ./data/customdataset \nIf your results are unsatisfactory, try adding a post-processing filter with --wavegan_genr_pp or removing phase shuffle with --wavegan_disc_phaseshuffle 0.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    --data_dir ./data/customdataset \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    --data_dir ./data/customdataset \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9183867122089153
      ],
      "excerpt": "The training scripts for both WaveGAN and SpecGAN create simple TensorFlow MetaGraphs for generating audio waveforms, located in the training directory. A simple usage is below; see this Colab notebook for additional features. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "saver.restore(sess, 'model.ckpt') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "WaveGAN: using GANs to synthesize raw audio",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MurreyCode/wavegan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sat, 25 Dec 2021 14:56:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MurreyCode/wavegan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MurreyCode/wavegan",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/MurreyCode/wavegan/master/eval/noise/wavegan_response.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/MurreyCode/wavegan/master/web/ckpts/dumper/dump.sh",
      "https://raw.githubusercontent.com/MurreyCode/wavegan/master/data/ljspeech.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.865147164723687,
        0.8736328308621912
      ],
      "excerpt": "<img src=\"static/wavegan.png\"/> \n<img src=\"static/results.png\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9382892056106165
      ],
      "excerpt": "python data/make_tfrecord.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9363510515943466
      ],
      "excerpt": "python train_wavegan.py train ./train \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train_wavegan.py preview ./train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train_wavegan.py incept ./train \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8800201964783315
      ],
      "excerpt": "python backup.py ./train 60 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train_specgan.py moments ./train \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9363510515943466
      ],
      "excerpt": "python train_specgan.py train ./train \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train_specgan.py preview ./train \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train_specgan.py incept ./train \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8800201964783315
      ],
      "excerpt": "python backup.py ./train 60 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.925671696398174
      ],
      "excerpt": "import tensorflow as tf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.91161623999058
      ],
      "excerpt": "saver = tf.train.import_meta_graph('infer.meta') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123763140827432
      ],
      "excerpt": "sess = tf.InteractiveSession() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8905573287067622
      ],
      "excerpt": "_z = (np.random.rand(50, 100) * 2.) - 1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "_G_z = sess.run(G_z, {z: _z}) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609520445175076
      ],
      "excerpt": "python score.py --audio_dir wavs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9128644026793049
      ],
      "excerpt": "python score.py --audio_dir sc09/train  --fix_length --n 18620 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MurreyCode/wavegan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "JavaScript",
      "HTML",
      "CSS",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "WaveGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "wavegan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MurreyCode",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MurreyCode/wavegan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n#: Will likely also work with newer versions of Tensorflow\npip install tensorflow-gpu==1.4.0\npip install scipy\npip install matplotlib\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sat, 25 Dec 2021 14:56:49 GMT"
    },
    "technique": "GitHub API"
  }
}