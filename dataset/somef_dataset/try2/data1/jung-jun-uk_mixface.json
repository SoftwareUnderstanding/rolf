{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2103.02211",
      "https://arxiv.org/abs/1905.00641",
      "https://arxiv.org/abs/1512.03385"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Thanks for these source codes porviding me with knowledges to complete this repository.\n\n1. [https://github.com/biubug6/Pytorch_Retinaface](https://github.com/biubug6/Pytorch_Retinaface).\n2. [https://github.com/deepinsight/insightface](https://github.com/deepinsight/insightface).\n3. [https://github.com/ultralytics/yolov5](https://github.com/ultralytics/yolov5)",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9938378840091666
      ],
      "excerpt": "The Lightweight Face Recognition Challenge & Workshop. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "|MixFace (e=1e-22, m=0.25)|100|96.37|92.36|89.80| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9091494267145899
      ],
      "excerpt": "cd recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "|SN-pair (s=64)|92.85|76.36|70.08|99.55|96.20|95.46| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9091494267145899
      ],
      "excerpt": "cd recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9091494267145899
      ],
      "excerpt": "cd recognition \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Jung-Jun-Uk/mixface",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-26T08:32:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T08:14:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8871925072069722,
        0.8849357779558977
      ],
      "excerpt": "Detail configuration about K-FACE is provided in the paper below. \nK-FACE: A Large-Scale KIST Face Database in Consideration with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168088105606464,
        0.9550205990016004
      ],
      "excerpt": "Structure of the K-FACE database \nConfiguration of K-FACE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513985267431176
      ],
      "excerpt": "For all experiments, ResNet-34 was chosen as the baseline backbone. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "K-FACE Analysis Project on Pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jung-jun-uk/mixface/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 00:47:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Jung-Jun-Uk/mixface/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Jung-Jun-Uk/mixface",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n#: create a new environment\nconda create --name insightKface python=3.7 #: or over\nconda activate insightKface\n\n#:install the appropriate cuda version of pytorch(https://pytorch.org/)\n#:example:\nconda install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c conda-forge\n\n#: install requirements\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8995202654240098
      ],
      "excerpt": "cd detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8096422022825122
      ],
      "excerpt": "MS1M-RetinaFace download link:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8995202654240098
      ],
      "excerpt": "cd detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "Note:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8932999336232345
      ],
      "excerpt": "cd recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8932999336232345
      ],
      "excerpt": "cd recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8244453191770256
      ],
      "excerpt": "Note:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8932999336232345
      ],
      "excerpt": "cd recognition \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8488575894361502
      ],
      "excerpt": "K-FACE sample images \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8864009466418682,
        0.9053896845703873,
        0.8785417178107949,
        0.8130609927142886
      ],
      "excerpt": "ID example          : '19062421' ... '19101513' len 400 \nAccessories example : 'S001', 'S002' .. 'S006'  len 6 \nLux example         : 'L1', 'L2' .. 'L30'       len 30 \nEmotion example     : 'E01', 'E02', 'E03'       len 3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778487586960795
      ],
      "excerpt": ": example \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8691141424061365
      ],
      "excerpt": "python align_kfaces.py --ori_data_path '/data/FACE/KFACE/High' --detected_data_path 'kface_retina_align_112x112' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920141720197964,
        0.8778487586960795
      ],
      "excerpt": ":Preprocess 'train.rec' and 'train.idx' to 'jpg' \n: example \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9135684310702247
      ],
      "excerpt": "python rec2image.py --include '/data/FACE/ms1m-retinaface-t1/' --output 'MS1M-RetinaFace' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9051954077749507
      ],
      "excerpt": "After downloading the pretrained model, run test.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106114531205909
      ],
      "excerpt": "|SN-pair (s=64)|99.20|95.01|91.84|89.74| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778487586960795,
        0.9160256043678959
      ],
      "excerpt": ": example \npython test.py --weights 'kface.mixface.1e-22m0.25.best.pt' --dataset 'kface' --data_cfg 'data/KFACE/kface.T4.yaml' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778487586960795,
        0.8827297561144474
      ],
      "excerpt": ": example \npython test.py --weights 'face.mixface.1e-22m0.5.best.pt' --dataset 'face' --data_cfg 'data/face.all.yaml' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8191501170201126
      ],
      "excerpt": "|SN-pair (s=64)|98.37|94.98|93.33|99.45|94.90|93.45| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778487586960795,
        0.9055374292070887
      ],
      "excerpt": ": example \npython test.py --weights 'merge.mixface.1e-22m0.5.best.pt' --dataset 'merge' --data_cfg 'data/merge.yaml' \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Jung-Jun-Uk/mixface/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Jung Jun Uk\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Installation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mixface",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Jung-Jun-Uk",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Jung-Jun-Uk/mixface/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sat, 25 Dec 2021 00:47:20 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\ncd recognition\n\n#: example \npython train.py --dataset 'kface' --head 'mixface' --data_cfg 'data/KFACE/kface.T4.yaml' --hyp 'data/face.hyp.yaml' --head_cfg 'models/head.kface.cfg.yaml' --name 'example' --device 0,1\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\ncd recognition\n\n#: example\npython -m torch.distributed.launch --nproc_per_node 2 train.py --dataset 'kface' --head 'mixface' --data_cfg 'data/KFACE/kface.T4.yaml' --hyp 'data/face.hyp.yaml' --head_cfg 'models/head.kface.cfg.yaml' --name 'example' --device 0,1\n```\n\nNote:\n\n+ For MS1M-R, change args ```--dataset face```, ```--data_cfg data/face.all.yaml```, and ```--head_cfg model/head.face.cfg.yaml```.\n+ For MS1M-R+T4, change args ```--dataset merge```, ```--data_cfg data/merge.yaml```, and ```--head_cfg model/head.merge.cfg.yaml```.\n+ The args ```--nodrop``` should be used if you train with the metric loss(e.g., SN-pair, N-pair, etc.) on MS1M-R or MS1M-R+T4.\n+ The args ```--double``` should be used if you train with the metric loss(e.g., SN-pair, N-pair, etc.) or MixFace on MS1M-R or MS1M-R+T4.\n+ DistributedDataParallel is only available to classification loss(e.g., arcface, cosface, etc.)\n\n",
      "technique": "Header extraction"
    }
  ]
}