{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1903.07291"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9892525589716143
      ],
      "excerpt": "{(0, 0, 0): 0, (0, 0, 255): 1, (255, 0, 0): 2, (150, 30, 150): 3, (255, 65, 255): 4, (150, 80, 0): 5, (170, 120, 65): 6, (125, 125, 125): 7, (255, 255, 0): 8, (0, 255, 255): 9, (255, 150, 0): 10, (255, 225, 120): 11, (255, 125, 125): 12, (200, 100, 100): 13, (0, 255, 0): 14, (0, 150, 80): 15, (215, 175, 125): 16, (220, 180, 210): 17, (125, 125, 255): 18} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/taki0112/SPADE-Tensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-26T02:29:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-16T16:07:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9676123570188908
      ],
      "excerpt": "It is a better performance than the results in the READEME \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Simple Tensorflow implementation of \"Semantic Image Synthesis with Spatially-Adaptive Normalization\" a.k.a. GauGAN, SPADE (CVPR 2019 Oral)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/taki0112/SPADE-Tensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 59,
      "date": "Wed, 22 Dec 2021 01:50:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/taki0112/SPADE-Tensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "taki0112/SPADE-Tensorflow",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n> python main.py --dataset spade_celebA --img_ch 3 --segmap_ch 3 --phase guide --guide_img ./guide_img.png\n```\n  \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* **YOUR DATASET**\n  * Image\n  * Segmentation map\n    * Don't worry. I do one-hot encoding of segmentation map automatically (whether color or gray)\n* **CelebAMask-HQ**\n  * Download from [here](https://github.com/switchablenorms/CelebAMask-HQ)\n    \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8096422022825122
      ],
      "excerpt": "Download checkpoint \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8383716214794231
      ],
      "excerpt": "Download checkpoint \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414948702182643
      ],
      "excerpt": "python main.py --dataset spade_celebA --img_ch 3 --segmap_ch 3 --phase train  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150491159173696
      ],
      "excerpt": "python main.py --dataset spade_celebA --segmap_ch 3 --phase random \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853204239981019
      ],
      "excerpt": "  <img src=\"./assets/loss.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/cityscape_hinge.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/women_hinge.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/men_hinge.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/women_random_hinge.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/men_random_hinge.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/women_lsgan.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/men_lsgan.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/women_random_lsgan.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836704212480256
      ],
      "excerpt": "  <img src=\"./assets/result_img/men_random_lsgan.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8915597005756061
      ],
      "excerpt": "<img src = './assets/generator.png' width = '400px' height = '400px'> | <img src = './assets/image_encoder.png' width = '400px' height = '400px'> | <img src = './assets/discriminator.png' width = '350px' height = '350px'> | <img src = './assets/architecture.png' width = '400px' height = '400px'> | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8940710395815196
      ],
      "excerpt": "<img src = './assets/spade.png' width = '850px' height = '300px'> | <img src = './assets/spade_resblock.png' width = '500px' height = '400px'> | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/taki0112/SPADE-Tensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Junho Kim (1993.01.12)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Semantic Image Synthesis with SPADE (GauGAN) - Tensorflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SPADE-Tensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "taki0112",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/taki0112/SPADE-Tensorflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* scipy == 1.2.0\n  * The latest version is not available. `imsave` is deprecated.\n* tqdm\n* numpy\n* pillow\n* opencv-python\n* tensorflow-gpu\n* keras\n \n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 327,
      "date": "Wed, 22 Dec 2021 01:50:40 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n\u251c\u2500\u2500 dataset\n\u00a0\u00a0 \u2514\u2500\u2500 YOUR_DATASET_NAME\n\u00a0\u00a0     \u251c\u2500\u2500 image\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u251c\u2500\u2500 000001.jpg \n           \u251c\u2500\u2500 000002.png\n           \u2514\u2500\u2500 ...\n       \u251c\u2500\u2500 segmap\n           \u251c\u2500\u2500 000001.jpg\n           \u251c\u2500\u2500 000002.png\n           \u2514\u2500\u2500 ...\n       \u251c\u2500\u2500 segmap_test\n           \u251c\u2500\u2500 a.jpg \n           \u251c\u2500\u2500 b.png\n           \u2514\u2500\u2500 ...\n       \u251c\u2500\u2500 segmap_label.txt (Automatically created) \n       \n\u251c\u2500\u2500 guide.jpg (example for guided image translation task)\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}