{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.07243",
      "https://arxiv.org/abs/1710.03957",
      "https://arxiv.org/abs/1811.00207",
      "https://arxiv.org/abs/1506.03340",
      "https://arxiv.org/abs/1511.02301",
      "https://arxiv.org/abs/1610.00956",
      "https://arxiv.org/abs/1605.07683",
      "https://arxiv.org/abs/1506.08909",
      "https://arxiv.org/abs/1811.00945",
      "https://arxiv.org/abs/1611.08669",
      "https://arxiv.org/abs/1705.06476",
      "https://arxiv.org/abs/1705.06476",
      "https://arxiv.org/abs/1705.06476](https://arxiv.org/abs/1705.06476)\nor see these [more up-to-date slides](https://drive.google.com/file/d/1JfUW4AVrjSp8X8Fp0_rTTRoLxUfW0aUm/view?usp=sharing).\n\nSee the [news page](https://github.com/facebookresearch/ParlAI/blob/master/NEWS.md) for the latest additions & updates, and the website [http://parl.ai](http://parl.ai) for further docs.\n\n<p align=\"center\"><img width=\"90%\" src=\"https://raw.githubusercontent.com/facebookresearch/ParlAI/master/docs/source/_static/img/parlai_example.png\" /></p>\n\n## Installing ParlAI\n\nParlAI currently requires Python3 and [Pytorch](https://pytorch.org) 1.1 or\nnewer. Dependencies of the core modules are listed in `requirement.txt`. Some\nmodels included (in `parlai/agents`) have additional requirements.\n\nRun the following commands to clone the repository and install ParlAI:\n\n```bash\ngit clone https://github.com/facebookresearch/ParlAI.git ~/ParlAI\ncd ~/ParlAI; python setup.py develop\n```\n\nThis will link the cloned directory to your site-packages.\n\nThis is the recommended installation procedure, as it provides ready access to the examples and allows you to modify anything you might need. This is especially useful if you if you want to submit another task to the repository.\n\nAll needed data will be downloaded to `~/ParlAI/data`, and any non-data files if requested will be downloaded to `~/ParlAI/downloads`. If you need to clear out the space used by these files, you can safely delete these directories and any files needed will be downloaded again.\n\n## Documentation\n\n - [Quick Start](https://parl.ai/docs/tutorial_quick.html)\n - [Basics: world, agents, teachers, action and observations](https://parl.ai/docs/tutorial_basic.html)\n - [List of available tasks/datasets](https://parl.ai/docs/tasks.html)\n - [Creating a dataset/task](http://parl.ai/docs/tutorial_task.html)\n - [List of available agents](https://parl.ai/docs/agents_list.html)\n - [Creating a new agent](https://parl.ai/docs/tutorial_seq2seq.html#)\n - [Model zoo (pretrained models)](https://parl.ai/docs/zoo.html)\n - [Plug into MTurk](http://parl.ai/docs/tutorial_mturk.html)\n - [Plug into Facebook Messenger](https://parl.ai/docs/tutorial_chat_service.html)\n\n\n## Examples\n\nA large set of scripts can be found in `parlai/scripts`. Here are a few of them.\nNote: If any of these examples fail, check the [requirements section](#requirements) to see if you have missed something.\n\nDisplay 10 random examples from the SQuAD task\n```bash\npython -m parlai.scripts.display_data -t squad\n```\n\nEvaluate an IR baseline model on the validation set of the Personachat task:\n```bash\npython -m parlai.scripts.eval_model -m ir_baseline -t personachat -dt valid\n```\n\nTrain a single layer transformer on PersonaChat (requires pytorch and torchtext).\nDetail: embedding size 300, 4 attention heads,  2 epochs using batchsize 64, word vectors are initialized with fasttext and the other elements of the batch are used as negative during training.\n```bash\npython -m parlai.scripts.train_model -t personachat -m transformer/ranker -mf /tmp/model_tr6 --n-layers 1 --embedding-size 300 --ffn-size 600 --n-heads 4 --num-epochs 2 -veps 0.25 -bs 64 -lr 0.001 --dropout 0.1 --embedding-type fasttext_cc --candidates batch\n```\n\n\n\n## Code Organization\n\nThe code is set up into several main directories:\n\n- [**core**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/core): contains the primary code for the framework\n- [**agents**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/agents): contains agents which can interact with the different tasks (e.g. machine learning models)\n- [**scripts**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/scripts): contains a number of useful scripts, like training, evaluating, interactive chatting, ...\n- [**tasks**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/tasks): contains code for the different tasks available from within ParlAI\n- [**mturk**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/mturk): contains code for setting up Mechanical Turk, as well as sample MTurk tasks\n- [**messenger**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/chat_service/services/messenger): contains code for interfacing with Facebook Messenger\n- [**zoo**](https://github.com/facebookresearch/ParlAI/tree/master/parlai/zoo): contains code to directly download and use pretrained models from our model zoo\n\n## Support\nIf you have any questions, bug reports or feature requests, please don't hesitate to post on our [Github Issues page](https://github.com/facebookresearch/ParlAI/issues).\n\n## The Team\nParlAI is currently maintained by Emily Dinan, Dexter Ju, Margaret Li, Spencer Poff, Pratik Ringshia, Stephen Roller, Kurt Shuster, Eric Michael Smith, Jack Urbanek, Jason Weston, Mary Williamson, and Jing Xu.\n\nFormer major contributors and maintainers include Alexander H. Miller, Will Feng, Adam Fisch, Jiasen Lu, Antoine Bordes, Devi Parikh, Dhruv Batra, Filipe de Avila Belbute Peres, and Chao Pan.\n\n## Citation\n\nPlease cite the [arXiv paper](https://arxiv.org/abs/1705.06476) if you use ParlAI in your work:\n\n```\n@article{miller2017parlai,\n  title={ParlAI: A Dialog Research Software Platform",
      "https://arxiv.org/abs/{1705.06476"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite the [arXiv paper](https://arxiv.org/abs/1705.06476) if you use ParlAI in your work:\n\n```\n@article{miller2017parlai,\n  title={ParlAI: A Dialog Research Software Platform},\n  author={{Miller}, A.~H. and {Feng}, W. and {Fisch}, A. and {Lu}, J. and {Batra}, D. and {Bordes}, A. and {Parikh}, D. and {Weston}, J.},\n  journal={arXiv preprint arXiv:{1705.06476}},\n  year={2017}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{miller2017parlai,\n  title={ParlAI: A Dialog Research Software Platform},\n  author={{Miller}, A.~H. and {Feng}, W. and {Fisch}, A. and {Lu}, J. and {Batra}, D. and {Bordes}, A. and {Parikh}, D. and {Weston}, J.},\n  journal={arXiv preprint arXiv:{1705.06476}},\n  year={2017}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joe-prog/https-github.com-facebookresearch-ParlAI",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to ParlAI\nWhile we are seeding this project with an initial set of popular tasks and a few\nmodels and examples, ongoing contributions from the research community are\ndesired to increase the pool of tasks, models, and baselines.\nPull Requests\nWe actively welcome your pull requests.\n\nFork the repo and create your branch from master. Set up your environment\n   and run pre-commit install once.\nIf you've added code that should be tested, add tests.\nIf you've changed APIs, update the documentation.\nAutoformat and lint your code (bash autoformat.sh)\nEnsure the test suite passes. Run python -m pytest -m unit.\nIf you've added a new dataset, you should also run\n   python -m pytest -m data. Copy-paste the output into a comment in your PR.\nIf you haven't already, complete the Contributor License Agreement (\"CLA\").\n\nOur continuous integration suite will run only fast tests before merging. We also\nhave a number of slow, more thorough tests which run nightly. You can additionally\nrun these by adding [long] into any of your commit messages. (A full list of\ntest triggers may be found in .circleci/triggers.py)\nContributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\nComplete your CLA here: https://code.facebook.com/cla\nIssues\nWe use GitHub issues for general feature discussion, Q&A and public bugs tracking.\nPlease ensure your description is clear and has sufficient instructions to be able to\nreproduce the issue or understand the problem.\nFacebook has a bounty program for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\nCoding Style\nWe try to follow the PEP style guidelines and encourage you to as well. You\nshould run the lint_changed.sh script before you submit.\nLicense\nBy contributing to ParlAI, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-08T10:17:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-27T01:54:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9705301540711192,
        0.9393497471070656
      ],
      "excerpt": "core: contains the primary code for the framework \nagents: contains agents which can interact with the different tasks (e.g. machine learning models) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8193516920526722,
        0.9612037949513151
      ],
      "excerpt": "mturk: contains code for setting up Mechanical Turk, as well as sample MTurk tasks \nmessenger: contains code for interfacing with Facebook Messenger \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8723443065290833
      ],
      "excerpt": "ParlAI is currently maintained by Emily Dinan, Dexter Ju, Margaret Li, Spencer Poff, Pratik Ringshia, Stephen Roller, Kurt Shuster, Eric Michael Smith, Jack Urbanek, Jason Weston, Mary Williamson, and Jing Xu. \n",
      "technique": "Supervised classification"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1
      ],
      "excerpt": " - [Quick Start](https://parl.ai/docs/tutorial_quick.html)\n - [Basics: world, agents, teachers, action and observations](https://parl.ai/docs/tutorial_basic.html)\n - [List of available tasks/datasets](https://parl.ai/docs/tasks.html)\n - [Creating a dataset/task](http://parl.ai/docs/tutorial_task.html)\n - [List of available agents](https://parl.ai/docs/agents_list.html)\n - [Creating a new agent](https://parl.ai/docs/tutorial_seq2seq.html#)\n - [Model zoo (pretrained models)](https://parl.ai/docs/zoo.html)\n - [Plug into MTurk](http://parl.ai/docs/tutorial_mturk.html)\n - [Plug into Facebook Messenger](https://parl.ai/docs/tutorial_chat_service.html)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joe-prog/https-github.com-facebookresearch-ParlAI/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 13:36:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/joe-prog/https-github.com-facebookresearch-ParlAI/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "joe-prog/https-github.com-facebookresearch-ParlAI",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/joe-prog/https-github.com-facebookresearch-ParlAI/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/projects/controllable_dialogue/Analysis_n_Graphs.ipynb",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/projects/controllable_dialogue/inspect_wordstats.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/autoformat.sh",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/projects/drqa/eval_full.sh",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/projects/personachat/scripts/kvmemnn_train.sh",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/projects/babi/memnn/memnn_bAbI_10k_task_parameter_sweep.sh",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/projects/babi/memnn/memnn_bAbI_1k_task_parameter_sweep.sh",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/tests/test_quickstart.sh",
      "https://raw.githubusercontent.com/joe-prog/https-github.com-facebookresearch-ParlAI/master/parlai/tasks/image_chat/download_data.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "ParlAI currently requires Python3 and [Pytorch](https://pytorch.org) 1.1 or\nnewer. Dependencies of the core modules are listed in `requirement.txt`. Some\nmodels included (in `parlai/agents`) have additional requirements.\n\nRun the following commands to clone the repository and install ParlAI:\n\n```bash\ngit clone https://github.com/facebookresearch/ParlAI.git ~/ParlAI\ncd ~/ParlAI; python setup.py develop\n```\n\nThis will link the cloned directory to your site-packages.\n\nThis is the recommended installation procedure, as it provides ready access to the examples and allows you to modify anything you might need. This is especially useful if you if you want to submit another task to the repository.\n\nAll needed data will be downloaded to `~/ParlAI/data`, and any non-data files if requested will be downloaded to `~/ParlAI/downloads`. If you need to clear out the space used by these files, you can safely delete these directories and any files needed will be downloaded again.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/joe-prog/https-github.com-facebookresearch-ParlAI/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "HTML",
      "JavaScript",
      "CSS",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) Facebook, Inc. and its affiliates.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Installing ParlAI",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "https-github.com-facebookresearch-ParlAI",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "joe-prog",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/joe-prog/https-github.com-facebookresearch-ParlAI/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 13:36:46 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any questions, bug reports or feature requests, please don't hesitate to post on our [Github Issues page](https://github.com/facebookresearch/ParlAI/issues).\n\n",
      "technique": "Header extraction"
    }
  ],
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "A large set of scripts can be found in `parlai/scripts`. Here are a few of them.\nNote: If any of these examples fail, check the [requirements section](#requirements) to see if you have missed something.\n\nDisplay 10 random examples from the SQuAD task\n```bash\npython -m parlai.scripts.display_data -t squad\n```\n\nEvaluate an IR baseline model on the validation set of the Personachat task:\n```bash\npython -m parlai.scripts.eval_model -m ir_baseline -t personachat -dt valid\n```\n\nTrain a single layer transformer on PersonaChat (requires pytorch and torchtext).\nDetail: embedding size 300, 4 attention heads,  2 epochs using batchsize 64, word vectors are initialized with fasttext and the other elements of the batch are used as negative during training.\n```bash\npython -m parlai.scripts.train_model -t personachat -m transformer/ranker -mf /tmp/model_tr6 --n-layers 1 --embedding-size 300 --ffn-size 600 --n-heads 4 --num-epochs 2 -veps 0.25 -bs 64 -lr 0.001 --dropout 0.1 --embedding-type fasttext_cc --candidates batch\n```\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}