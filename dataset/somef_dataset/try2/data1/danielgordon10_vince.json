{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2003.07990",
      "https://arxiv.org/abs/1912.01991",
      "https://arxiv.org/abs/2003.04297 except for batch size which was 896 (starting loss was scaled proportionally to 0.105"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@misc{gordon2020watching,\n    title={Watching the World Go By: Representation Learning from Unlabeled Videos},\n    author={Gordon, Daniel and Ehsani, Kiana and Fox, Dieter and Farhadi, Ali},\n    year={2020},\n    eprint={2003.07990},\n    archivePrefix={arXiv},\n    primaryClass={cs.CV}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{gordon2020watching,\n    title={Watching the World Go By: Representation Learning from Unlabeled Videos},\n    author={Gordon, Daniel and Ehsani, Kiana and Fox, Dieter and Farhadi, Ali},\n    year={2020},\n    eprint={2003.07990},\n    archivePrefix={arXiv},\n    primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9277793765371275
      ],
      "excerpt": "Watching the World Go By: Representation Learning from Unlabeled Videos (https://arxiv.org/abs/2003.07990). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9819107666668762
      ],
      "excerpt": "source video-env/bin/activate \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971679416046096
      ],
      "excerpt": "| VINCE                  | vince-r2v2-multi-frame-multi-pair | ResNet18 |    0.400 |      0.495 |        0.362 |              0.629 |            0.465 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/danielgordon10/vince",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-16T18:00:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-01T14:11:59Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9881492038613227
      ],
      "excerpt": "This is a repository containing code used to implement the models in the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.865425851244087
      ],
      "excerpt": " - Some folders have many more images than others. This is expected. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787900781381782
      ],
      "excerpt": "Click the cookie icon and save the data into youtube_scrape/cookies.txt or adjust the COOKIE_PATH variable in constants.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9706690672285396
      ],
      "excerpt": "The official MoCo baseline is available at https://github.com/facebookresearch/moco, but for our work, we wrote our own version. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9038501280073644
      ],
      "excerpt": "We include various end tasks and an interface for easily adding more. Training scripts for each task are available at: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8218733793276214
      ],
      "excerpt": "New end tasks can be added by creating a new solver which inherits from EndTaskBaseSolver and an accompanying dataset which inherits from BaseDataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Video Noise Contrastive Estimation",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you would like to download a different set of YouTube videos, you may still find our code helpful.\nHere is a basic workflow for downloading many YouTube videos.\n\n1. [Create cookies.txt](#create-cookies.txt)\n1. Create a list of many YouTube URLs to download. \n    1. One option would be to use [youtube_scrape/search_youtube_for_urls.py](youtube_scrape/search_youtube_for_urls.py)\n    1. Another would be YouTube-8m URLs (https://github.com/danielgordon10/youtube8m-data)\n1. Run `python run_cache_video_dataset.py --title cache --description caching --num-workers 100` after appropriately formatting the files.  \n    - Note - You can often use more workers than your CPU has threads because YouTube downloading tends to be the bottleneck.\n1. [youtube_scrape/download_kinetics.py](youtube_scrape/download_kinetics.py) is a convenient file for downloading Kinetics videos.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Pretrained weights are available for VINCE as well as all baselines mentioned in the paper. \nWe provide the pretrained weights for the backbone only, not for any end task.\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/danielgordon10/vince/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Wed, 29 Dec 2021 13:21:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/danielgordon10/vince/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "danielgordon10/vince",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_kinetics_400.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/eval_tracking.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_tracking.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_tracking_debug.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_imagenet_debug.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_imagenet.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_sun_scene.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_kinetics_400_debug.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/end_tasks/train_sun_scene_debug.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_vince_jigsaw.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_moco_v2.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_vince_large.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_vince.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_vince_debug.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_moco_baseline.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/vince/train_single_frame_r2v2.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/download_scripts/download_pretrained_weights_resnet18.sh",
      "https://raw.githubusercontent.com/danielgordon10/vince/master/download_scripts/download_pretrained_weights_resnet50.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you would like to download a different set of YouTube videos, you may still find our code helpful.\nHere is a basic workflow for downloading many YouTube videos.\n\n1. [Create cookies.txt](#create-cookies.txt)\n1. Create a list of many YouTube URLs to download. \n    1. One option would be to use [youtube_scrape/search_youtube_for_urls.py](youtube_scrape/search_youtube_for_urls.py)\n    1. Another would be YouTube-8m URLs (https://github.com/danielgordon10/youtube8m-data)\n1. Run `python run_cache_video_dataset.py --title cache --description caching --num-workers 100` after appropriately formatting the files.  \n    - Note - You can often use more workers than your CPU has threads because YouTube downloading tends to be the bottleneck.\n1. [youtube_scrape/download_kinetics.py](youtube_scrape/download_kinetics.py) is a convenient file for downloading Kinetics videos.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We recommend using `Anaconda` to manage your environment setup and run our code. \nThe following commands will create an environment similar to ours with minimal requirements.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8646040969531303,
        0.871527752452272,
        0.8184230267919866,
        0.8978680664043541,
        0.9984079357284334,
        0.9480135474380773,
        0.8152054704116874
      ],
      "excerpt": "conda create -n video-env python=3.6.8 \nconda deactivate \nconda env update -n video-env -f env.yml \nconda activate video-env \npip install git+https://github.com/danielgordon10/dg_util.git -U \nIf you instead prefer virtualenv or similar, we have also provided a requirements.txt. \nvirtualenv --python=python3.6 video-env \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9979947896609701
      ],
      "excerpt": "pip install -r requirements.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8296740716982476
      ],
      "excerpt": "1. To download via the command line,  run python download_scripts/download_r2v2.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9788279542986124,
        0.8115569422506995
      ],
      "excerpt": "Install this extension. \nGo to any youtube video: https://www.youtube.com/watch?v=AKQE9RyOIMY \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971751580070371
      ],
      "excerpt": "To download the weights, from the root directory, run sh download_scripts/download_pretrained_weights_resnet18.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.971751580070371
      ],
      "excerpt": "To download the weights, from the root directory, run sh download_scripts/download_pretrained_weights_resnet50.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8022276875959806
      ],
      "excerpt": "<img src=\"https://danielgordon10.github.io/images/projects/vince.jpg\" height=\"500\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809859615647416
      ],
      "excerpt": "To download one large file containing all the train and val images, download https://drive.google.com/open?id=1JGwb6ai1NugeW7KJDDE7G_bZ54D69teF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023476737054685
      ],
      "excerpt": "1. To download via the command line,  run python download_scripts/download_r2v2.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8552436376118615
      ],
      "excerpt": "| Train |       110 |       2,788,424 |        2,784,328 |              4096 |                 696,082 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8831868039075832,
        0.8131718921641614,
        0.9142027941834909
      ],
      "excerpt": "Download R2V2 training data or create your own dataset to train on. \nRead over the arguments list in arg_parser.py. \nTrain the model. We have provided an example train script as well as a debug script to check everything is working. Edit the paths in the file to point to your data/output locations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8623035206828727
      ],
      "excerpt": "We have provided an example train script to train this model. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/danielgordon10/vince/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Video Noise Contrastive Estimation (VINCE)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "vince",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "danielgordon10",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/danielgordon10/vince/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 59,
      "date": "Wed, 29 Dec 2021 13:21:44 GMT"
    },
    "technique": "GitHub API"
  }
}