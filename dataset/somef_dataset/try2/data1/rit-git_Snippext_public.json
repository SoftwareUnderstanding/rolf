{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1710.09412",
      "https://arxiv.org/abs/1905.02249"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "  --bert_path finetuned_bert/rest_model.bin \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "  --bert_path finetuned_bert/rest_model.bin \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "  --bert_path finetuned_bert/rest_model.bin \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "  --bert_path finetuned_bert/rest_model.bin \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rit-git/Snippext_public",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-23T23:51:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-09T08:34:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9238076159241022
      ],
      "excerpt": "Snippext is the extraction pipeline for mining opinions and customer experiences from user-generated content (e.g., online reviews). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8274797058277111
      ],
      "excerpt": "The baseline method performs BERT finetuning on a specific task: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8495958714594535
      ],
      "excerpt": "* --save_model: whether to save the best model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9587157064463956
      ],
      "excerpt": "(New) (also in MixDA and MixMatchNL): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778879218883398
      ],
      "excerpt": "The file configs.json is a list of entries where each one is of the following format: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9191290438386496
      ],
      "excerpt": "* vocab: the list of class labels. For tagging tasks, all labels start with B- or I- indicating the begin/end of a span. For classification task, the list contains all the possible class labels. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "  --w2v_path word2vec/rest_w2v.model \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9295857139169478,
        0.9484577850859466
      ],
      "excerpt": "Simply replace restaurant_ae_tagging with laptop_ae_tagging, restaurant_asc, and laptop_asc to generate the other indices. \nReplace rest with laptop for the laptop_ae_tagging and laptop_asc indices. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8678605822798974
      ],
      "excerpt": "|span_freq        | Replacing a span by frequency                     | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9876621694127827
      ],
      "excerpt": "Our implementation of MixMatch with MixDA. To train with MixMatchNL: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8466307584098636,
        0.8390955410647376
      ],
      "excerpt": "* alpha: the mixup parameter (between labeled and unlabeled data). We chose alpha from {0.2, 0.5, 0.8}. \n* u_lambda: the weight of unlabeled data loss, typically (chosen from {10.0, 25.0, 50.0}) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Snippext: Semi-supervised Opinion Mining with Augmented Data",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rit-git/Snippext_public/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 14,
      "date": "Fri, 24 Dec 2021 23:29:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rit-git/Snippext_public/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "rit-git/Snippext_public",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "  \"name\": \"hotel_tagging\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8426773830150776
      ],
      "excerpt": "|span_sim         | Replacing a span with similar a one               | \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8524457426084595
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python train_baseline.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8096725843937763
      ],
      "excerpt": "The train/dev/test sets of a task (tagging or span classification) are specificed in the file configs.json.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "  \"name\": \"hotel_tagging\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python augment_index_builder.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278121020599903,
        0.8524457426084595
      ],
      "excerpt": "Train with: \nCUDA_VISIBLE_DEVICES=0 python train_mixda.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8524457426084595
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python train_mixmatchnl.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rit-git/Snippext_public/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2021, Megagon Labs\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its\\n   contributors may be used to endorse or promote products derived from\\n   this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Snippext",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Snippext_public",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "rit-git",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rit-git/Snippext_public/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "oi02lyl",
        "body": "",
        "dateCreated": "2021-04-26T21:33:04Z",
        "datePublished": "2021-04-26T21:36:30Z",
        "html_url": "https://github.com/rit-git/Snippext_public/releases/tag/v1.0",
        "name": "Snippext for Rotom",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/rit-git/Snippext_public/tarball/v1.0",
        "url": "https://api.github.com/repos/rit-git/Snippext_public/releases/42035804",
        "zipball_url": "https://api.github.com/repos/rit-git/Snippext_public/zipball/v1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.7.5\n* PyTorch 1.3\n* HuggingFace Transformers \n* Spacy with the ``em_core_web_sm`` models\n* NLTK (stopwords, wordnet)\n* Gensim\n* NVIDIA Apex (fp16 training)\n\nInstall required packages\n```\nconda install -c conda-forge nvidia-apex\npip install -r requirements.txt\n```\n\nDownload pre-trained BERT models and word2vec models (for data augmentation) :\n```\nwget https://snippext.s3.us-east-2.amazonaws.com/finetuned_bert.zip\nunzip finetuned_bert.zip\nwget https://snippext.s3.us-east-2.amazonaws.com/word2vec.zip\nunzip word2vec.zip\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 53,
      "date": "Fri, 24 Dec 2021 23:29:14 GMT"
    },
    "technique": "GitHub API"
  }
}