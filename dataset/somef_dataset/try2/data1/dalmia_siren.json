{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2006.09661"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@software{aman_dalmia_2020_3902941,\n  author       = {Aman Dalmia},\n  title        = {dalmia/siren},\n  month        = jun,\n  year         = 2020,\n  publisher    = {Zenodo},\n  version      = {v1.1},\n  doi          = {10.5281/zenodo.3902941},\n  url          = {https://doi.org/10.5281/zenodo.3902941}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9973111085046887
      ],
      "excerpt": "If you are using this codebase in your research, please use the following citation: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "x = torch.rand(10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "w0_initial = 30.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8550101043698384
      ],
      "excerpt": "x = torch.rand(10, 2) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dalmia/siren",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-19T21:13:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-09T10:56:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9899932358202757
      ],
      "excerpt": "Unofficial PyTorch implementation of Sinusodial Representation networks (SIREN) from the paper Implicit Neural Representations with Periodic Activation Functions. This repository is a PyTorch port of this excellent TF 2.0 implementation of the same. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9487577754748017
      ],
      "excerpt": "The authors in the paper propose a principled way of intializing the layers for the SIREN model. The initialization function \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9111522867503169
      ],
      "excerpt": "The SIREN model used in the paper, with sine activation and custom initialization, can directly be created as follows. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302287581602335
      ],
      "excerpt": ": defining the model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = SIREN( \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "y = model(x) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.913273964406613
      ],
      "excerpt": "A partial implementation of the image inpainting task is available as the train_inpainting_siren.py and eval_inpainting_siren.py scripts. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9193660234535195
      ],
      "excerpt": "Weight files are made available in the repository under the checkpoints directory. It generates the following output after 5000 epochs of training with batch size 8192 while using only 10% of the available pixels in the image during training phase. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of Sinusodial Representation networks (SIREN)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dalmia/siren/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sat, 25 Dec 2021 20:40:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dalmia/siren/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dalmia/siren",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Install using pip\n```\n$ pip install siren-torch\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8281493496981327
      ],
      "excerpt": "You can use the Sine activation as any other activation \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from siren import Sine \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from siren import SIREN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8571102419564544
      ],
      "excerpt": "To run training: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8440769652904083,
        0.807430117725073
      ],
      "excerpt": "<img src=\"https://github.com/dalmia/siren/blob/master/images/celtic_spiral_knot.jpg?raw=true\" height=100% width=100%> \nTests are written using unittest. You can run any script under the tests folder. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dalmia/siren/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Aman Dalmia\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Sinusoidal Representation Networks (SIREN)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "siren",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dalmia",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dalmia/siren/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "dalmia",
        "body": "",
        "dateCreated": "2020-06-22T00:02:24Z",
        "datePublished": "2020-06-22T00:08:13Z",
        "html_url": "https://github.com/dalmia/siren/releases/tag/v1.1",
        "name": "First release",
        "tag_name": "v1.1",
        "tarball_url": "https://api.github.com/repos/dalmia/siren/tarball/v1.1",
        "url": "https://api.github.com/repos/dalmia/siren/releases/27767909",
        "zipball_url": "https://api.github.com/repos/dalmia/siren/zipball/v1.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 243,
      "date": "Sat, 25 Dec 2021 20:40:26 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "deep-learning",
      "pytorch",
      "activation-functions"
    ],
    "technique": "GitHub API"
  }
}