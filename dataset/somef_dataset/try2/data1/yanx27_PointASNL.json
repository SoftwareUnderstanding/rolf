{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* The original code is borrowed from [PointNet++](https://github.com/charlesq34/pointnet2) and [PointConv](https://github.com/DylanWusee/pointconv).\n* The code with grid sampling is borrowed from [KPConv](https://github.com/HuguesTHOMAS/KPConv) and [RandLA-Net](https://github.com/QingyongHu/RandLA-Net). \n* The kd-tree tool is from [nanoflann](https://github.com/jlblancoc/nanoflann).\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{yan2020pointasnl,\n  title={Pointasnl: Robust point clouds processing using nonlocal neural networks with adaptive sampling},\n  author={Yan, Xu and Zheng, Chaoda and Li, Zhen and Wang, Sheng and Cui, Shuguang},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={5589--5598},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9999855956224811,
        0.9999982876064049
      ],
      "excerpt": "Xu Yan, Chaoda Zheng, Zhen Li*, Sheng Wang and Shuguang Cui, \"PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling\", CVPR 2020 [arxiv]. \nIf you find our work useful in your research, please consider citing: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yanx27/PointASNL",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-01T07:48:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-10T13:56:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9805503374510786
      ],
      "excerpt": "This repository is for PointASNL introduced in the following paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8586400901869715,
        0.9174350845180298
      ],
      "excerpt": "We provide two options for training on ScanNet dataset (with or without pre/post processing).  \nWith grid sampling processing, more input points and deeper network structure, our PointASNL can achieve 66.6% on ScanNet benchmark. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8583540929231971
      ],
      "excerpt": "We highly recommend training with this method, although it takes a long time to process the raw data, it can achieve results around 66% and will be faster to converge. Grid sampling pre-processing will be automatically conducted before training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8212145824130723
      ],
      "excerpt": "We add codes with grid sampling processing, which can achieve better result of around 52% (using --prepare_data just in the first running). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PointASNL: Robust Point Clouds Processing using Nonlocal Neural Networks with Adaptive Sampling \uff08CVPR 2020\uff09",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yanx27/PointASNL/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 23,
      "date": "Tue, 21 Dec 2021 00:01:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yanx27/PointASNL/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yanx27/PointASNL",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yanx27/PointASNL/master/compile_op.sh",
      "https://raw.githubusercontent.com/yanx27/PointASNL/master/tf_ops/compile_ops.sh",
      "https://raw.githubusercontent.com/yanx27/PointASNL/master/utils/cpp_wrappers/compile_wrappers.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Official ScanNet dataset can be downloaded [here](http://www.scan-net.org/). \nIf you choose training without grid sampling, you need firstly run `ScanNet/prepare_scannet.py`, otherwise you can skip to training step.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone the repository:\n```\ngit clone https://github.com/yanx27/PointASNL.git\n```\n\nInstallation instructions for Ubuntu 16.04 (available at **CUDA10**):\n     \n* Make sure <a href=\"https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html\">CUDA</a>  and <a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html\">cuDNN</a> are installed. Only this configurations has been tested: \n     - Python 3.6.9, TensorFlow 1.13.1, CUDA 10.1\n\n\n* Follow <a href=\"https://www.tensorflow.org/install/pip\">Tensorflow installation procedure</a>.\n     \n     \n* Compile the customized Tensorflow operators by `sh complile_op.sh`. \nN.B. If you installed Tensorflow in a virtual environment, it needs to be activated when running these scripts\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd ScanNet/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd ScanNet/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd ScanNet/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd ScanNet/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd SemanticKITTI/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd SemanticKITTI/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8174540907975313,
        0.9437007882099725
      ],
      "excerpt": ": Training \n$ python train.py --data [MODELNET40 PATH] --exp_dir PointASNL_without_noise \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.938012500242213
      ],
      "excerpt": "$ python test.py --data [MODELNET40 PATH] --model_path log/PointASNL_without_noise/best_model.ckpt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313,
        0.943808195235882
      ],
      "excerpt": ": Training \n$ python train.py --data [MODELNET40 PATH] --exp_dir PointASNL_with_noise --AS \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9197672335728396
      ],
      "excerpt": "$ python test.py --data [MODELNET40 PATH]  --model_path log/PointASNL_with_noise/best_model.ckpt --AS --noise \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": ": Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9118539486397745
      ],
      "excerpt": "$ python train_scannet.py --data [SCANNET PATH] --log_dir PointASNL \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911711386536511
      ],
      "excerpt": "$ python test_scannet.py --data [SCANNET PATH]  --model_path log/PointASNL/latest_model.ckpt  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": ": Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9217753026903915
      ],
      "excerpt": "$ python train_scannet_grid.py --data [SCANNET PATH] --log_dir PointASNL_grid --num_point 10240 --model pointasnl_sem_seg_res --in_radius 2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911711386536511
      ],
      "excerpt": "$ python test_scannet_grid.py --data [SCANNET PATH]  --model_path log/PointASNL_grid/latest_model.ckpt  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8432653320951161
      ],
      "excerpt": "| Model         | mIoU  | Download                                                     | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8196653816445811
      ],
      "excerpt": "SemanticKITTI dataset can be found here. Download the files related to semantic segmentation and extract everything into the same folder.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": ": Training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9118539486397745
      ],
      "excerpt": "$ python train_semantic_kitti.py --data [SemanticKITTI PATH] --log_dir PointASNL --with_remission \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9118539486397745
      ],
      "excerpt": "$ python train_semantic_kitti_grid.py --data [SemanticKITTI PATH] --log_dir PointASNL_grid --prepare_data  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911711386536511
      ],
      "excerpt": "$ python test_semantic_kitti.py --data [SemanticKITTI PATH]  --model_path log/PointASNL/latest_model.ckpt  --with_remission \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911711386536511
      ],
      "excerpt": "$ python test_semantic_kitti_grid.py --data [SemanticKITTI PATH] --model_path log/PointASNL_grid/best_model.ckpt --test_area [e.g., 08] \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yanx27/PointASNL/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Cuda",
      "Cython",
      "Shell",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Xu Yan\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PointASNL",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PointASNL",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yanx27",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yanx27/PointASNL/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 191,
      "date": "Tue, 21 Dec 2021 00:01:40 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "point-cloud",
      "segmentation",
      "classification",
      "sample",
      "tensorflow",
      "self-driving",
      "modelnet-dataset",
      "semantickitti",
      "scannet-dataset"
    ],
    "technique": "GitHub API"
  }
}