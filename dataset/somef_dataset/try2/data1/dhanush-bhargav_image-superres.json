{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dhanush-bhargav/image-superres",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-30T17:22:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-13T14:53:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8862750699790933
      ],
      "excerpt": "Implementation of image super-resolution using generative adversarial network (GAN) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9538660533643805,
        0.8202500934583615,
        0.9521615517671118,
        0.9314716869435558
      ],
      "excerpt": "The model consists of two networks: generator and discriminator. The generator is used to obtain the high resolution image from the low resolution image and discriminator is used to differentiate between original higher resolution image and generator super resolved image. Discriminator is used in training to train the generator to generate super-resolved images closer to the original high resolution image. Simultaneously, discriminator is also trained to better differentiate between true high resolution and generator super-resolved images. \nbuild_model.py provides functions 'build_generator_net' and 'build_discriminator_net' to create generator and discriminator models respectively. \nCreates the generator model as depicted in the figure above where B is the number of residual blocks. \nCreates the discriminator model as shown in the figure above. n, k and s respectively signify the number of filters, kernel size and strides respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9281621763941839,
        0.9875225014961387,
        0.9544636282019184,
        0.9618325196248889
      ],
      "excerpt": "Provides functions for calculation of loss. \nCalculates the feature loss by comparing the embeddings of true_hr and false_hr after passing it through VGG_MODEL till the output_layer. 'true_hr' is the true high resolution image, 'false_hr' is the generated super-resolution image, 'VGG_MODEL' is the pretrained downloaded VGG model and 'output_layer' (default 'block5_conv4': 4th convolutional layer in the 5th recursive block of the VGG model) signifies the layer in the VGG model from which the image embeddings are to be calculated. \nCalculates the adversarial loss of the model. The output of the discriminator network when generated super-resolution images are passed to it is used as the input for this function. Total generator loss is a weighted addition of adversarial loss and generator loss. \nReturns sum of 'true_loss' and 'false_loss'. 'true_loss' is the loss when true high-resolution images are passed to the discriminator net and 'false_loss' is the loss when generated high-resolution images are passed to the discriminator net. 'true_outputs' is the output of the discriminator when true high-res images are passed to it and 'false_outputs' is the output of the dicriminator when generated super-res images are passed to it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.858836051446643,
        0.9657223363241434
      ],
      "excerpt": "Used for training the model \nGenerator and discriminator models are passed using 'generator_model' and 'discriminator_model' respectively. 'VGG_MODEL' is the pretrained dowloaded VGG model used for calculating vgg_loss. 'dataset' contains batched training data of low-res and high-res images. 'epochs' (default 10) specifies the number of epochs for which training should be done on the models. This function calls train_step for each batch in each epoch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of image super-resolution using generative adversarial network (GAN)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dhanush-bhargav/image-superres/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 00:39:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dhanush-bhargav/image-superres/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dhanush-bhargav/image-superres",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/dhanush-bhargav/image-superres/main/for_testing.ipynb",
      "https://raw.githubusercontent.com/dhanush-bhargav/image-superres/main/for_training.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.806086233650569
      ],
      "excerpt": "Generator and discriminator models are passed using 'generator_model' and 'discriminator_model' respectively. 'VGG_MODEL' is the pretrained dowloaded VGG model used for calculating vgg_loss. 'dataset' contains batched training data of low-res and high-res images. 'epochs' (default 10) specifies the number of epochs for which training should be done on the models. This function calls train_step for each batch in each epoch. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dhanush-bhargav/image-superres/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "image-superres",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "image-superres",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dhanush-bhargav",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dhanush-bhargav/image-superres/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sat, 25 Dec 2021 00:39:49 GMT"
    },
    "technique": "GitHub API"
  }
}