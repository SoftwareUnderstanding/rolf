{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": " - The single image animation primitives were created by Jonathan Reich [jonathanreichandco@gmail.com](mailto:jonathanreichandco@gmail.com)\n - This code borrows from [pix2pixHD](https://github.com/NVIDIA/pix2pixHD).\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.06151"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this useful for your research, please use the following.\n\n```\n@InProceedings{Vinker_2021_ICCV,\n    author    = {Vinker, Yael and Horwitz, Eliahu and Zabari, Nir and Hoshen, Yedid},\n    title     = {Image Shape Manipulation From a Single Augmented Training Sample},\n    booktitle = {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},\n    month     = {October},\n    year      = {2021},\n    pages     = {13769-13778}\n}\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Vinker_2021_ICCV,\n    author    = {Vinker, Yael and Horwitz, Eliahu and Zabari, Nir and Hoshen, Yedid},\n    title     = {Image Shape Manipulation From a Single Augmented Training Sample},\n    booktitle = {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},\n    month     = {October},\n    year      = {2021},\n    pages     = {13769-13778}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9912556242864674
      ],
      "excerpt": "https://arxiv.org/pdf/2007.01289 <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/eliahuhorwitz/DeepSIM",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-01T19:17:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T05:23:09Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8813737456462337,
        0.9797821104781624
      ],
      "excerpt": "Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\".   \n<strong>DeepSIM:</strong> Given a <em>single</em> real training image (b) and a corresponding primitive representation (a), our model learns to map between the primitive (a) to the target image (b). At inference, the original primitive (a) is manipulated by the user. Then, the manipulated primitive is passed through the network which outputs a corresponding manipulated image (e) in the real image domain.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9450865163990291,
        0.9241265740425555,
        0.9736524755506377,
        0.9552575563944193,
        0.9469394735453471,
        0.9803231299461352
      ],
      "excerpt": "Abstract: We present DeepSIM, a generative model for conditional image manipulation based on a single image. \nWe find that extensive augmentation is key for enabling single image training, and incorporate the use of thin-plate-spline (TPS) as an effective augmentation. \nOur network learns to map between a primitive representation of the image to the image itself. \nThe choice of a primitive representation has an impact on the ease and expressiveness of the manipulations and can be automatic (e.g. edges), manual (e.g. segmentation) or hybrid such as edges on top of segmentations. \nAt manipulation time, our generator allows for making complex image changes by modifying the primitive input representation and mapping it through the network. \nOur method is shown to achieve remarkable performance on image manipulation tasks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9416843279063903
      ],
      "excerpt": "As shown in the supplementary, adding augmentations on top of TPS may lead to better results  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8816115142857391
      ],
      "excerpt": "When using edges or seg_edges, it may be beneficial to have white edges instead of black ones, to do so add the --canny_color 1 option \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8213538546942097
      ],
      "excerpt": "When using edges or seg_edges and adding edges manually at test time, it may be beneficial to apply \"skeletonize\" (e.g skimage skeletonize )on the edges in order for them to resemble the canny edges \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official PyTorch implementation of the paper: \"DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample\" (ICCV 2021 Oral)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/eliahuhorwitz/DeepSIM/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 38,
      "date": "Thu, 23 Dec 2021 03:07:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/eliahuhorwitz/DeepSIM/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "eliahuhorwitz/DeepSIM",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/train_face_edges.sh",
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/train_car_seg.sh",
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/test_face_edges.sh",
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/test_face_vid_seg_edges.sh",
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/test_car_seg.sh",
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/train_face_vid_seg_edges.sh",
      "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/scripts/train_face_vid_seg_edges_all_augmentations.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1.  Clone the repo:\n```bash\ngit clone https://github.com/eliahuhorwitz/DeepSIM.git\ncd DeepSIM\n```\n2. Create a new environment and install the libraries:\n```bash\npython3.7 -m venv deepsim_venv\nsource deepsim_venv/bin/activate\npip install -r requirements.txt\n```\n\n<br>\n<br>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8942951878912248
      ],
      "excerpt": "- Train DeepSIM on the \"face\" video using both edges and segmentations (bash ./scripts/train_face_vid_seg_edges.sh): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9020927548650213
      ],
      "excerpt": "Train DeepSIM on the \"car\" image using segmentation only (bash ./scripts/train_car_seg.sh): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934736467913893
      ],
      "excerpt": "Train DeepSIM on the \"face\" image using edges only (bash ./scripts/train_face_edges.sh): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8671551383228223
      ],
      "excerpt": "Test DeepSIM on the \"face\" video using both edges and segmentations (bash ./scripts/test_face_vid_seg_edges.sh): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8726965844373341
      ],
      "excerpt": "Test DeepSIM on the \"car\" image using segmentation only (bash ./scripts/test_car_seg.sh): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.864518132866859
      ],
      "excerpt": "Test DeepSIM on the \"face\" image using edges only (bash ./scripts/test_face_edges.sh): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8451122274965356
      ],
      "excerpt": "Train DeepSIM on the \"face\" video using both edges and segmentations with sheer, rotations, \"cutmix\", and canny sigma augmentations (bash ./scripts/train_face_vid_seg_edges_all_augmentations.sh): \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8562549203743823
      ],
      "excerpt": "For the chosen option, a suitable input file should be provided under <dataroot>/\"train_<primitive>\" (e.g. ./datasets/car/train_seg). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9535840486166597
      ],
      "excerpt": "python3.7 ./train.py --dataroot ./datasets/face_video --primitive seg_edges --no_instance --tps_aug 1 --name DeepSIMFaceVideo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012967360894665
      ],
      "excerpt": "python3.7 ./train.py --dataroot ./datasets/car --primitive seg --no_instance --tps_aug 1 --name DeepSIMCar \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9263076703055976
      ],
      "excerpt": "python3.7 ./train.py --dataroot ./datasets/face --primitive edges --no_instance --tps_aug 1 --name DeepSIMFace \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9461593862798776
      ],
      "excerpt": "python3.7 ./test.py --dataroot ./datasets/face_video --primitive seg_edges --phase \"test\" --no_instance --name DeepSIMFaceVideo --vid_mode 1 --test_canny_sigma 0.5 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9106055510673764
      ],
      "excerpt": "python3.7 ./test.py --dataroot ./datasets/car --primitive seg --phase \"test\" --no_instance --name DeepSIMCar \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9317300246851106
      ],
      "excerpt": "python3.7 ./test.py --dataroot ./datasets/face --primitive edges --phase \"test\" --no_instance --name DeepSIMFace \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9535840486166597
      ],
      "excerpt": "python3.7 ./train.py --dataroot ./datasets/face_video --primitive seg_edges --no_instance --tps_aug 1 --name DeepSIMFaceVideoAugmentations --cutmix_aug 1 --affine_aug \"shearx_sheary_rotation\" --canny_aug 1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8415300629224202
      ],
      "excerpt": "Check ./options/base_options.py for more augmentation related settings  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/eliahuhorwitz/DeepSIM/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/eliahuhorwitz/DeepSIM/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'SOFTWARE RESEARCH LICENSE\\n\\n\\nI.    DEFINITIONS.\\n\\n\"Licensee\" means You and any other party that has entered into and has\\nin effect a version of this License.\\n\\n\"Modifications\" means any (a) change or addition to the Technology or\\n(b) new source or object code implementing any portion of the Technology.\\n\\n\"Yissum\" means Yissum Research Development Company Of The Hebrew University of Jerusalem Ltd.,\\nits successors and assignees.\\n\\n\"Research Use\" means research, evaluation, or development for the\\npurpose of advancing knowledge, teaching, learning, or customizing the\\nTechnology or Modifications for personal use. Research Use expressly\\nexcludes use or distribution for direct or indirect commercial\\n(including strategic) gain or advantage.\\n\\n\"Technology\" means the source code, object code and specifications of\\nthe technology made available by Yissum pursuant to this License.\\n\\n\"Technology Site\" means the website designated for accessing the Technology.\\n\\n\"You\" means the individual executing this License or the legal entity or\\nentities represented by the individual executing this License.\\n\\nII.     PURPOSE.\\n\\nYissum is licensing the Technology under this Software Research License (the \"License\")\\nto promote research, education, innovation, and development using the Technology.\\n\\nCOMMERCIAL USE AND DISTRIBUTION OF TECHNOLOGY AND MODIFICATIONS IS\\nPERMITTED ONLY UNDER A YISSUM COMMERCIAL LICENSE.\\n\\nIII.     RESEARCH USE RIGHTS.\\n\\nA.    License Grant. Subject to the conditions contained herein, Yissum\\ngrants to You a non-exclusive, non-transferable, worldwide, and\\nroyalty-free license to do the following for Your Research Use only:\\n\\n1.    Reproduce, create Modifications of, and use the Technology alone,\\nor with Modifications;\\n\\n2.    Share source code of the Technology alone, or with Modifications,\\nwith other Licensees; and\\n\\n3.    Distribute object code of the Technology, alone, or with\\nModifications, to any third parties for Research Use only, under a\\nlicense of Your choice that is consistent with this License; and publish\\npapers and books discussing the Technology which may include relevant\\nexcerpts that do not in the aggregate constitute a significant portion\\nof the Technology.\\n\\nB.     Residual Rights. You may use any information in intangible form\\nthat you remember after accessing the Technology, except when such use\\nviolates Yissum\\'s copyrights or patent rights.\\n\\nC.    No Implied Licenses.  Other than the rights granted herein, Yissum\\nretains all rights, title, and interest in Technology, and You retain\\nall rights, title, and interest in Your Modifications and associated\\nspecifications, subject to the terms of this License.\\n\\nD.    Open Source Licenses.  Portions of the Technology may be provided\\nwith notices and open source licenses from open source communities and\\nthird parties that govern the use of those portions, and any licenses\\ngranted hereunder do not alter any rights and obligations you may have\\nunder such open source licenses, however, the disclaimer of warranty and\\nlimitation of liability provisions in this License will apply to all\\nTechnology in this distribution.\\n\\nIV.    INTELLECTUAL PROPERTY REQUIREMENTS\\n\\nAs a condition to Your License, You agree to comply with the following\\nrestrictions and responsibilities:\\n\\nA.    License and Copyright Notices. You must include a copy of this\\nSoftware Research License in a Readme file for any Technology or\\nModifications you distribute. You must also include the following\\nstatement, \"Use and distribution of this technology is subject to the\\nSoftware Research License included herein\", (a) once prominently in the\\nsource code tree and/or specifications for Your source code\\ndistributions, and (b) once in the same file as Your copyright or\\nproprietary notices for Your binary code distributions. You must cause\\nany files containing Your Modification to carry prominent notice stating\\nthat You changed the files. You must not remove or alter any copyright\\nor other proprietary notices in the Technology.\\n\\nB.    Licensee Exchanges.    Any Technology and Modifications You\\nreceive from any Licensee are governed by this License.\\n\\nV.    GENERAL TERMS.\\n\\nA.    Disclaimer Of Warranties.\\n\\nTHE TECHNOLOGY IS PROVIDED \"AS IS\", WITHOUT WARRANTIES OF ANY KIND,\\nEITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT\\nTHE TECHNOLOGY IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR\\nPURPOSE, OR NON-INFRINGING OF THIRD PARTY RIGHTS.  YOU AGREE THAT YOU\\nBEAR THE ENTIRE RISK IN CONNECTION WITH YOUR USE AND DISTRIBUTION OF ANY\\nAND ALL TECHNOLOGY UNDER THIS LICENSE.\\n\\nB.    Infringement; Limitation Of Liability.\\n\\n1.    If any portion of, or functionality implemented by, the Technology\\nbecomes the subject of a claim or threatened claim of infringement\\n(\"Affected Materials\"), Yissum may, in its unrestricted discretion, suspend\\nYour rights to use and distribute the Affected Materials under this\\nLicense. Such suspension of rights will be effective immediately upon\\nthe posting of notice of suspension on the Technology Site.\\n\\n2.    IN NO EVENT WILL YISSUM BE LIABLE FOR ANY DIRECT, INDIRECT, PUNITIVE,\\nSPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES IN CONNECTION WITH OR\\nARISING OUT OF THIS LICENSE (INCLUDING, WITHOUT LIMITATION, LOSS OF\\nPROFITS, USE, DATA, OR ECONOMIC ADVANTAGE OF ANY SORT), HOWEVER IT\\nARISES AND ON ANY THEORY OF LIABILITY (including negligence), WHETHER OR\\nNOT YISSUM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  LIABILITY\\nUNDER THIS SECTION V.B.2 SHALL BE SO LIMITED AND EXCLUDED,\\nNOTWITHSTANDING FAILURE OF THE ESSENTIAL PURPOSE OF ANY REMEDY.\\n\\nC.     Termination.\\n\\n1.    You may terminate this License at any time by notifying Yissum in writing.\\n\\n2.    All Your rights will terminate under this License if You fail to\\ncomply with any of its material terms or conditions and do not cure such\\nfailure within thirty (30) days after becoming aware of such noncompliance.\\n\\n3.    Upon termination, You must discontinue all uses and distribution\\nof the Technology, and all provisions of this Section V (\"General Terms\")\\nshall survive termination.\\n\\nD.     Miscellaneous.\\n\\n1.    Use of Names. Except as expressly provided in this License,\\nYou may not use the names of Yissum or the Hebrew University of Jerusalem\\nexcept for the limited purpose of identifying the source of the Technology.\\n\\n2.    Integration.  This License represents the complete agreement of\\nthe parties concerning the subject matter hereof.\\n\\n3.    Severability.  If any provision of this License is held\\nunenforceable, such provision shall be reformed to the extent necessary\\nto make it enforceable unless to do so would defeat the intent of the\\nparties, in which case, this License shall terminate.\\n\\n4.    Governing Law.  This License is governed by the laws of the\\nState of Israel as applied to contracts entered into and performed in\\nIsrael between Israeli residents. In no event shall this License\\nbe construed against the drafter.\\n\\n5.    Export Control.   You agree to comply with all relevant export controls\\nand trade laws that apply to Technology and Modifications.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepSIM: Image Shape Manipulation from a Single Augmented Training Sample (ICCV 2021 Oral)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepSIM",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "eliahuhorwitz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/eliahuhorwitz/DeepSIM/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 323,
      "date": "Thu, 23 Dec 2021 03:07:28 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "single-image",
      "image-editing",
      "deep-neural-networks",
      "generative-adversarial-network",
      "computer-vision",
      "computer-graphics",
      "edge-to-image",
      "segmantation-to-image",
      "pytorch",
      "image-to-image-translation"
    ],
    "technique": "GitHub API"
  }
}