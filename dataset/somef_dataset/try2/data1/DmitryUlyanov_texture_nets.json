{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1701.02096",
      "https://arxiv.org/abs/1603.08155"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code is based on [Justin Johnson's great code](https://github.com/jcjohnson/neural-style) for artistic style.\n\nThe work was supported by [Yandex](https://www.yandex.ru/) and [Skoltech](http://sites.skoltech.ru/compvision/).\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DmitryUlyanov/texture_nets",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-03-07T11:53:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T17:58:32Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "![](data/readme_pics/karya.jpg \" \") | ![](data/readme_pics/karya512.jpg  \" \")| ![](data/readme_pics/karya_s_mo.jpg  \" \") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9087501928131151
      ],
      "excerpt": "These parameters work for me:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8886365916158045
      ],
      "excerpt": "To achieve the results from the paper you need to play with -image_size, -style_size, -style_layers, -content_layers, -style_weight, -tv_weight.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9720912669777465
      ],
      "excerpt": "This command should train a generator close to what is presented in the paper. It is tricky, the variance in the results is rather high, many things lead to degrading (even optimizing for too long time). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8694603374389587,
        0.8463430599720594
      ],
      "excerpt": "And here is a sample of size 512x512 after learning for 700 iterations: \nYou may also explore other models. We found pyramid2 requires bigger learning rate of about 5e-1. To prevent degrading noise dimensionality should be increased: noise_depth 16. It also converges slower. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9224297204248478
      ],
      "excerpt": "th texture_sample.lua -model data/out/model.t7 -noise_depth 3 -sample_size 512 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9456493339081065
      ],
      "excerpt": "th stylization_process.lua -model data/out/model.t7 -input_image data/readme_pics/kitty.jpg -noise_depth 3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9898897961114971,
        0.9217408686265778,
        0.9717658944958728,
        0.9630497639173844,
        0.8336856189848373
      ],
      "excerpt": "We were not able to archive similar results to original parer of L. Gatys on artistic style, which is partially explained by balance problem (read the paper for the details). Yet, while not transferring the style exactly as expected, models produce nice pictures. We tried several hacks to redefine the objective function, which could be more suitable for convolutional parametric generator, none of them worked considerably better, but the results were nice. \nFor the next pair we used a generator, trained using 16 images only. It is funny, that it did not overfit. Also, in this setting the net does not degrade for much longer time if zero padding is used. Note that, tiger image was not in the train set. \nUsing \"Starry night\" by Van Gogh. It takes about quarter of second to process an image at 1024 x 768 resolution. \nIn one of the experiments the generator failed to learn Van Gogh, but went very stylish. \nThis model tried to fit both texture and content losses on a fixed set of 16 images and only content loss on the big number of images. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code for \"Texture Networks: Feed-forward Synthesis of Textures and Stylized Images\" paper.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DmitryUlyanov/texture_nets/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 223,
      "date": "Sun, 26 Dec 2021 08:44:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DmitryUlyanov/texture_nets/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "DmitryUlyanov/texture_nets",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/DmitryUlyanov/texture_nets/master/data/pretrained/download_models.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We used ILSVRC2012 validation set to train a generator. One pass through the data was more than enough for the model described in the paper.\n\nExtract content from `relu4_2` layer.\n```\nth scripts/extract4_2.lua -images_path <path/ILSVRC2012>\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "You can use an image dataset of any kind. For my experiments I tried `Imagenet` and `MS COCO` datasets. The structure of the folders should be the following:\n```\ndataset/train\ndataset/train/dummy\ndataset/val/\ndataset/val/dummy\n```\n\nThe dummy folders should contain images. The dataloader is based on one used in[fb.resnet.torch](https://github.com/facebook/fb.resnet.torch). \n\nHere is a quick example for MSCOCO: \n```\nwget http://msvocds.blob.core.windows.net/coco2014/train2014.zip\nwget http://msvocds.blob.core.windows.net/coco2014/val2014.zip\nunzip train2014.zip\nunzip val2014.zip\nmkdir -p dataset/train\nmkdir -p dataset/val\nln -s `pwd`/val2014 dataset/val/dummy\nln -s `pwd`/train2014 dataset/train/dummy\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8165233143409455,
        0.8710306586881463
      ],
      "excerpt": "The code was tested with 12GB NVIDIA Titan X GPU and Ubuntu 14.04. \nYou may decrease batch_size, image_size if the model do not fit your GPU memory. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8968632010359383
      ],
      "excerpt": "![](data/readme_pics/karya.jpg \" \") | ![](data/readme_pics/karya512.jpg  \" \")| ![](data/readme_pics/karya_s_mo.jpg  \" \") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.897176225947782,
        0.8079006657327601
      ],
      "excerpt": "Basic usage: \nth train.lua -data &lt;path to any image dataset&gt;  -style_image path/to/img.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8351914012979104
      ],
      "excerpt": "th train.lua -data &lt;path to any image dataset&gt; -style_image path/to/img.jpg -style_size 600 -image_size 512 -model johnson -batch_size 4 -learning_rate 1e-2 -style_weight 10 -style_layers relu1_2,relu2_2,relu3_2,relu4_2 -content_layers relu4_2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9112902989318001
      ],
      "excerpt": "th test.lua -input_image path/to/image.jpg -model_t7 data/checkpoints/model.t7 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9230936591683342
      ],
      "excerpt": "th texture_train.lua -texture data/textures/red-peppers256.o.jpg -model_name pyramid -backend cudnn -num_iterations 1500 -vgg_no_pad true -normalize_gradients true -batch_size 15 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9249225948385199
      ],
      "excerpt": "th texture_train.lua -texture data/textures/red-peppers256.o.jpg -gpu 0 -model_name pyramid2 -backend cudnn -num_iterations 1500 -vgg_no_pad true -normalize_gradients true -learning_rate 5e-1 -noise_depth 16 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8651211417639266
      ],
      "excerpt": "th texture_sample.lua -model data/out/model.t7 -noise_depth 3 -sample_size 512 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8677149393873043
      ],
      "excerpt": "th stylization_train.lua -style_image data/textures/cezanne.jpg -train_hdf5 <path/to/generated/hdf5> -noise_depth 3 -model_name pyramid -normalize_gradients true -train_images_path <path/to/ILSVRC2012> -content_weight 0.8 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9176890434057731,
        0.8219862222126477
      ],
      "excerpt": "th stylization_process.lua -model data/out/model.t7 -input_image data/readme_pics/kitty.jpg -noise_depth 3 \nAgain, noise_depth should be consistent with training setting. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/DmitryUlyanov/texture_nets/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Lua",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                  Apache License\\n               Version 2.0, January 2004\\n              http://www.apache.org/licenses/\\n\\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n1. Definitions.\\n\\n  \"License\" shall mean the terms and conditions for use, reproduction,\\n  and distribution as defined by Sections 1 through 9 of this document.\\n\\n  \"Licensor\" shall mean the copyright owner or entity authorized by\\n  the copyright owner that is granting the License.\\n\\n  \"Legal Entity\" shall mean the union of the acting entity and all\\n  other entities that control, are controlled by, or are under common\\n  control with that entity. For the purposes of this definition,\\n  \"control\" means (i) the power, direct or indirect, to cause the\\n  direction or management of such entity, whether by contract or\\n  otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n  outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n  \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n  exercising permissions granted by this License.\\n\\n  \"Source\" form shall mean the preferred form for making modifications,\\n  including but not limited to software source code, documentation\\n  source, and configuration files.\\n\\n  \"Object\" form shall mean any form resulting from mechanical\\n  transformation or translation of a Source form, including but\\n  not limited to compiled object code, generated documentation,\\n  and conversions to other media types.\\n\\n  \"Work\" shall mean the work of authorship, whether in Source or\\n  Object form, made available under the License, as indicated by a\\n  copyright notice that is included in or attached to the work\\n  (an example is provided in the Appendix below).\\n\\n  \"Derivative Works\" shall mean any work, whether in Source or Object\\n  form, that is based on (or derived from) the Work and for which the\\n  editorial revisions, annotations, elaborations, or other modifications\\n  represent, as a whole, an original work of authorship. For the purposes\\n  of this License, Derivative Works shall not include works that remain\\n  separable from, or merely link (or bind by name) to the interfaces of,\\n  the Work and Derivative Works thereof.\\n\\n  \"Contribution\" shall mean any work of authorship, including\\n  the original version of the Work and any modifications or additions\\n  to that Work or Derivative Works thereof, that is intentionally\\n  submitted to Licensor for inclusion in the Work by the copyright owner\\n  or by an individual or Legal Entity authorized to submit on behalf of\\n  the copyright owner. For the purposes of this definition, \"submitted\"\\n  means any form of electronic, verbal, or written communication sent\\n  to the Licensor or its representatives, including but not limited to\\n  communication on electronic mailing lists, source code control systems,\\n  and issue tracking systems that are managed by, or on behalf of, the\\n  Licensor for the purpose of discussing and improving the Work, but\\n  excluding communication that is conspicuously marked or otherwise\\n  designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n  \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n  on behalf of whom a Contribution has been received by Licensor and\\n  subsequently incorporated within the Work.\\n\\n2. Grant of Copyright License. Subject to the terms and conditions of\\n  this License, each Contributor hereby grants to You a perpetual,\\n  worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n  copyright license to reproduce, prepare Derivative Works of,\\n  publicly display, publicly perform, sublicense, and distribute the\\n  Work and such Derivative Works in Source or Object form.\\n\\n3. Grant of Patent License. Subject to the terms and conditions of\\n  this License, each Contributor hereby grants to You a perpetual,\\n  worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n  (except as stated in this section) patent license to make, have made,\\n  use, offer to sell, sell, import, and otherwise transfer the Work,\\n  where such license applies only to those patent claims licensable\\n  by such Contributor that are necessarily infringed by their\\n  Contribution(s) alone or by combination of their Contribution(s)\\n  with the Work to which such Contribution(s) was submitted. If You\\n  institute patent litigation against any entity (including a\\n  cross-claim or counterclaim in a lawsuit) alleging that the Work\\n  or a Contribution incorporated within the Work constitutes direct\\n  or contributory patent infringement, then any patent licenses\\n  granted to You under this License for that Work shall terminate\\n  as of the date such litigation is filed.\\n\\n4. Redistribution. You may reproduce and distribute copies of the\\n  Work or Derivative Works thereof in any medium, with or without\\n  modifications, and in Source or Object form, provided that You\\n  meet the following conditions:\\n\\n  (a) You must give any other recipients of the Work or\\n      Derivative Works a copy of this License; and\\n\\n  (b) You must cause any modified files to carry prominent notices\\n      stating that You changed the files; and\\n\\n  (c) You must retain, in the Source form of any Derivative Works\\n      that You distribute, all copyright, patent, trademark, and\\n      attribution notices from the Source form of the Work,\\n      excluding those notices that do not pertain to any part of\\n      the Derivative Works; and\\n\\n  (d) If the Work includes a \"NOTICE\" text file as part of its\\n      distribution, then any Derivative Works that You distribute must\\n      include a readable copy of the attribution notices contained\\n      within such NOTICE file, excluding those notices that do not\\n      pertain to any part of the Derivative Works, in at least one\\n      of the following places: within a NOTICE text file distributed\\n      as part of the Derivative Works; within the Source form or\\n      documentation, if provided along with the Derivative Works; or,\\n      within a display generated by the Derivative Works, if and\\n      wherever such third-party notices normally appear. The contents\\n      of the NOTICE file are for informational purposes only and\\n      do not modify the License. You may add Your own attribution\\n      notices within Derivative Works that You distribute, alongside\\n      or as an addendum to the NOTICE text from the Work, provided\\n      that such additional attribution notices cannot be construed\\n      as modifying the License.\\n\\n  You may add Your own copyright statement to Your modifications and\\n  may provide additional or different license terms and conditions\\n  for use, reproduction, or distribution of Your modifications, or\\n  for any such Derivative Works as a whole, provided Your use,\\n  reproduction, and distribution of the Work otherwise complies with\\n  the conditions stated in this License.\\n\\n5. Submission of Contributions. Unless You explicitly state otherwise,\\n  any Contribution intentionally submitted for inclusion in the Work\\n  by You to the Licensor shall be under the terms and conditions of\\n  this License, without any additional terms or conditions.\\n  Notwithstanding the above, nothing herein shall supersede or modify\\n  the terms of any separate license agreement you may have executed\\n  with Licensor regarding such Contributions.\\n\\n6. Trademarks. This License does not grant permission to use the trade\\n  names, trademarks, service marks, or product names of the Licensor,\\n  except as required for reasonable and customary use in describing the\\n  origin of the Work and reproducing the content of the NOTICE file.\\n\\n7. Disclaimer of Warranty. Unless required by applicable law or\\n  agreed to in writing, Licensor provides the Work (and each\\n  Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n  implied, including, without limitation, any warranties or conditions\\n  of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n  PARTICULAR PURPOSE. You are solely responsible for determining the\\n  appropriateness of using or redistributing the Work and assume any\\n  risks associated with Your exercise of permissions under this License.\\n\\n8. Limitation of Liability. In no event and under no legal theory,\\n  whether in tort (including negligence), contract, or otherwise,\\n  unless required by applicable law (such as deliberate and grossly\\n  negligent acts) or agreed to in writing, shall any Contributor be\\n  liable to You for damages, including any direct, indirect, special,\\n  incidental, or consequential damages of any character arising as a\\n  result of this License or out of the use or inability to use the\\n  Work (including but not limited to damages for loss of goodwill,\\n  work stoppage, computer failure or malfunction, or any and all\\n  other commercial damages or losses), even if such Contributor\\n  has been advised of the possibility of such damages.\\n\\n9. Accepting Warranty or Additional Liability. While redistributing\\n  the Work or Derivative Works thereof, You may choose to offer,\\n  and charge a fee for, acceptance of support, warranty, indemnity,\\n  or other liability obligations and/or rights consistent with this\\n  License. However, in accepting such obligations, You may act only\\n  on Your own behalf and on Your sole responsibility, not on behalf\\n  of any other Contributor, and only if You agree to indemnify,\\n  defend, and hold each Contributor harmless for any liability\\n  incurred by, or claims asserted against, such Contributor by reason\\n  of your accepting any such warranty or additional liability.\\n\\nEND OF TERMS AND CONDITIONS\\n\\nAPPENDIX: How to apply the Apache License to your work.\\n\\n  To apply the Apache License to your work, attach the following\\n  boilerplate notice, with the fields enclosed by brackets \"{}\"\\n  replaced with your own identifying information. (Don\\'t include\\n  the brackets!)  The text should be enclosed in the appropriate\\n  comment syntax for the file format. We also recommend that a\\n  file or class name and description of purpose be included on the\\n  same \"printed page\" as the copyright notice for easier\\n  identification within third-party archives.\\n\\nCopyright Texture Nets Dmitry Ulyanov\\n\\nLicensed under the Apache License, Version 2.0 (the \"License\");\\nyou may not use this file except in compliance with the License.\\nYou may obtain a copy of the License at\\n\\n   http://www.apache.org/licenses/LICENSE-2.0\\n\\nUnless required by applicable law or agreed to in writing, software\\ndistributed under the License is distributed on an \"AS IS\" BASIS,\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\nSee the License for the specific language governing permissions and\\nlimitations under the License.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Texture Networks + Instance normalization: Feed-forward Synthesis of Textures and Stylized Images",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "texture_nets",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "DmitryUlyanov",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/DmitryUlyanov/texture_nets/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Torch7](http://torch.ch/docs/getting-started.html) + [loadcaffe](https://github.com/szagoruyko/loadcaffe)\n- cudnn + torch.cudnn (optionally)\n- [display](https://github.com/szym/display) (optionally)\n\nDownload VGG-19.\n```\ncd data/pretrained && bash download_models.sh && cd ../..\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1188,
      "date": "Sun, 26 Dec 2021 08:44:41 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "texture-networks",
      "torch",
      "neural-style",
      "style-transfer"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In the paper [Texture Networks: Feed-forward Synthesis of Textures and Stylized Images](http://arxiv.org/abs/1603.03417) we describe a faster way to generate textures and stylize images. It requires learning a feedforward generator with a loss function proposed by [Gatys et al.](http://arxiv.org/abs/1505.07376). When the model is trained, a texture sample or stylized image of any size can be generated instantly.\n\n[Improved Texture Networks: Maximizing Quality and Diversity in Feed-forward Stylization and Texture Synthesis](https://arxiv.org/abs/1701.02096) presents a better architectural design for the generator network. By switching `batch_norm` to `Instance Norm` we facilitate the learning process resulting in much better quality.\n\n\n\nThis also implements the stylization part from [Perceptual Losses for Real-Time Style Transfer and Super-Resolution](https://arxiv.org/abs/1603.08155).\n\nYou can find an oline demo [here](https://riseml.com/DmitryUlyanov/texture_nets) (thanks to RiseML). \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "![Cezanne](data/textures/cezanne.jpg)\n\n![Original](data/readme_pics/kitty.jpg)\n\n![Processed](data/readme_pics/kitty_cezanne.jpg)\n\n",
      "technique": "Header extraction"
    }
  ]
}