{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1804.07573",
      "https://arxiv.org/abs/1801.07698",
      "https://arxiv.org/abs/1607.08221",
      "https://arxiv.org/abs/1710.08092",
      "https://arxiv.org/abs/1801.07698"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find *InsightFace* useful in your research, please consider to cite the following related papers:\n\n```\n@article{deng2018arcface,\ntitle={ArcFace: Additive Angular Margin Loss for Deep Face Recognition},\nauthor={Deng, Jiankang and Guo, Jia and Niannan, Xue and Zafeiriou, Stefanos},\njournal={arXiv:1801.07698},\nyear={2018}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{deng2018arcface,\ntitle={ArcFace: Additive Angular Margin Loss for Deep Face Recognition},\nauthor={Deng, Jiankang and Guo, Jia and Niannan, Xue and Zafeiriou, Stefanos},\njournal={arXiv:1801.07698},\nyear={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8650239057784687,
        0.9644643460693488,
        0.8300886969303436
      ],
      "excerpt": "By Jia Guo and Jiankang Deng \n2018.12.13: TVM-Benchmark \n2018.10.28: Gender-Age created with a lightweight model. About 1MB size, 10ms on single CPU core.  Gender accuracy 96% on validation set and 4.1 age MAE. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8302608354560708
      ],
      "excerpt": "2018.07.17: Model-Zoo, Dataset-Zoo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "Deep Face Recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298,
        0.8090016440670298,
        0.8090016440670298,
        0.8090016440670298
      ],
      "excerpt": "       lfw.bin \n       cfp_ff.bin \n       cfp_fp.bin \n       agedb_30.bin \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| Method  | LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| Method  | LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "| AgeDB-30 | 85742      | 3850179 | 83775        | 3761329   | 98.08 | 97.87  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| Method  | LFW(%)     | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | MegaFace(%)   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| Method  | LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | MegaFace(%)   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "|  Ours   | 99.65  | 99.77     | 92.12     | 97.70       | 96.70         | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| Method  | LFW(%) | CFP-FF(%) | CFP-FP(%) | AgeDB-30(%) | MegaFace1M(%) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| Method           | m1   | m2   | m3   | LFW   | CFP-FP | AgeDB-30 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chenggongliang/arcface",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n[Jia Guo](guojia[at]gmail.com)\n[Jiankang Deng](jiankangdeng[at]gmail.com)\n```\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-05T02:14:53Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T10:36:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In this repository, we provide training data, network settings and loss designs for deep face recognition.\nThe training data includes the normalised MS1M and VGG2 datasets, which were already packed in the MxNet binary format.\nThe network backbones include ResNet, InceptionResNet_v2, DenseNet, DPN and MobileNet.\nThe loss functions include Softmax, SphereFace, CosineFace, ArcFace and Triplet (Euclidean/Angular) Loss.\n* loss-type=0:  Softmax\n* loss-type=1:  SphereFace\n* loss-type=2:  CosineFace\n* loss-type=4:  ArcFace\n* loss-type=5:  Combined Margin\n* loss-type=12: TripletLoss\n\n![margin penalty for target logit](https://github.com/deepinsight/insightface/raw/master/resources/arcface.png)\n\nOur method, ArcFace, was initially described in an [arXiv technical report](https://arxiv.org/abs/1801.07698). By using this repository, you can simply achieve LFW 99.80%+ and Megaface 98%+ by a single model. This repository can help researcher/engineer to develop deep face recognition algorithms quickly by only two steps: download the binary dataset and run the training script.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8192505441185383
      ],
      "excerpt": "By Jia Guo and Jiankang Deng \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9000661972617681
      ],
      "excerpt": "2018.10.28: Gender-Age created with a lightweight model. About 1MB size, 10ms on single CPU core.  Gender accuracy 96% on validation set and 4.1 age MAE. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9401226367669705
      ],
      "excerpt": "2018.04.23: Our implementation of MobileFaceNet is now available. Please set --network y1 to use this lightweight but powerful backbone. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9797289398430405
      ],
      "excerpt": "2018.02.13: We achieved state-of-the-art performance on MegaFace-Challenge. Please check our paper and code for implementation details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906128909950556
      ],
      "excerpt": "- Introduction \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8593554442301238
      ],
      "excerpt": "All face images are aligned by MTCNN and cropped to 112x112: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8862314582827862
      ],
      "excerpt": "Please check src/data/face2rec2.py on how to build a binary face dataset. Any public available MTCNN can be used to align the faces, and the performance should not change. We will improve the face normalisation step by full pose alignment methods recently. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.815444321573754
      ],
      "excerpt": "This model can achieve LFW 99.80+ and MegaFace 98.0%+. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278860269777196
      ],
      "excerpt": "(4). Fine-turn the above Softmax model with Triplet loss. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028443434382375
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES='0,1,2,3' python -u train_triplet.py --network m1 --lr 0.005 --mom 0.0 --per-batch-size 150 --data-dir ../datasets/faces_ms1m_112x112 --pretrained ../model-m1-softmax,50 --prefix ../model-m1-triplet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9583229686355454
      ],
      "excerpt": "Please check Model-Zoo for more pretrained models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9377800883542073,
        0.8377351103009156
      ],
      "excerpt": "Note: We found there are overlap identities between facescrub dataset and Megaface distractors, which significantly affects the identification performance. This list is released under $INSIGHTFACE_ROOT/src/megaface/. \nAlign all face images of facescrub dataset and megaface distractors. Please check the alignment scripts under $INSIGHTFACE_ROOT/src/align/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617599490313199
      ],
      "excerpt": "In this part, we assume you are in the directory $INSIGHTFACE_ROOT/deploy/. The input face image should be generally centre cropped. We use RNet+ONet of MTCNN to further align the image before sending it to the feature embedding network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927898519411741
      ],
      "excerpt": "Put the model under $INSIGHTFACE_ROOT/models/. For example, $INSIGHTFACE_ROOT/models/model-r34-amf. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9796814996914888
      ],
      "excerpt": "For single cropped face image(112x112), total inference time is only 17ms on our testing server(Intel E5-2660 @ 2.00GHz, Tesla M40, LResNet34E-IR). \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chenggongliang/arcface/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Tue, 21 Dec 2021 10:19:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chenggongliang/arcface/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "chenggongliang/arcface",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/Evaluation/IJB/IJBB_Evaluation_MS1MV2.ipynb",
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/Evaluation/IJB/IJBB_Evaluation_VGG2.ipynb",
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/Evaluation/IJB/IJBC_Evaluation_VGG2.ipynb",
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/Evaluation/IJB/IJBC_Evaluation_MS1MV2.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/src/train.sh",
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/src/eval/do_ver.sh",
      "https://raw.githubusercontent.com/chenggongliang/arcface/master/Evaluation/Megaface/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9977752388963443,
        0.9985647484703379
      ],
      "excerpt": "Install MXNet with GPU support (Python 2.7). \npip install mxnet-cu80 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799489993452795
      ],
      "excerpt": "git clone --recursive https://github.com/deepinsight/insightface.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874,
        0.9322609392449874
      ],
      "excerpt": "PyTorch: InsightFace_Pytorch \nPyTorch: arcface-pytorch \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8668937975765546,
        0.8589534893990137,
        0.8245539886860519
      ],
      "excerpt": "- Training Data \n- Train \n- Pretrained Models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8362859791999939
      ],
      "excerpt": "Download the training set (MS1M) and place it in $INSIGHTFACE_ROOT/datasets/. Each training dataset includes following 7 files: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.8589534893990137
      ],
      "excerpt": "       train.idx \n       train.rec \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278121020599903
      ],
      "excerpt": "(1). Train ArcFace with LResNet100E-IR. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8377912483732795,
        0.8730901283879425
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES='0,1,2,3' python -u train_softmax.py --network r100 --loss-type 4 --margin-m 0.5 --data-dir ../datasets/faces_ms1m_112x112  --prefix ../model-r100 \nIt will output verification results of LFW, CFP-FF, CFP-FP and AgeDB-30 every 2000 batches. You can check all command line options in train_softmax.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8278121020599903
      ],
      "excerpt": "(2). Train CosineFace with LResNet50E-IR. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8364379056384581,
        0.8278121020599903
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES='0,1,2,3' python -u train_softmax.py --network r50 --loss-type 2 --margin-m 0.35 --data-dir ../datasets/faces_ms1m_112x112 --prefix ../model-r50-amsoftmax \n(3). Train Softmax with LMobileNetE. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8377912483732795
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES='0,1,2,3' python -u train_softmax.py --network m1 --loss-type 0 --data-dir ../datasets/faces_ms1m_112x112 --prefix ../model-m1-softmax \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9063163741360027
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES='0,1,2,3' python -u train_triplet.py --network m1 --lr 0.005 --mom 0.0 --per-batch-size 150 --data-dir ../datasets/faces_ms1m_112x112 --pretrained ../model-m1-softmax,50 --prefix ../model-m1-triplet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928326419817613
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES='0,1,2,3,4,5,6,7' python -u train_softmax.py --network p107 --loss-type 0 --per-batch-size 64 --data-dir ../datasets/faces_vgg_112x112 --prefix ../model-p107-softmax \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9209739772085854
      ],
      "excerpt": "You can use $INSIGHTFACE/src/eval/verification.py to test all the pre-trained models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8262411115627003,
        0.8745863248733805
      ],
      "excerpt": "For training with m1=0.9, m2=0.4, m3=0.15, run following command: \nCUDA_VISIBLE_DEVICES='0,1,2,3' python -u train_softmax.py --network r100 --loss-type 5 --margin-a 0.9 --margin-m 0.4 --margin-b 0.15 --data-dir ../datasets/faces_ms1m_112x112  --prefix ../model-r100 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python -u gen_megaface.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python -u remove_noises.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8667726685541095,
        0.9095062552484893
      ],
      "excerpt": "Put the model under $INSIGHTFACE_ROOT/models/. For example, $INSIGHTFACE_ROOT/models/model-r34-amf. \nRun the test script $INSIGHTFACE_ROOT/deploy/test.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8420227656543805
      ],
      "excerpt": "TensorFlow: tf-insightface \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chenggongliang/arcface/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Cuda",
      "C++",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Jiankang Deng and Jia Guo\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "InsightFace: 2D and 3D Face Analysis Project",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "arcface",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "chenggongliang",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chenggongliang/arcface/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Tue, 21 Dec 2021 10:19:22 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[![ArcFace Demo](https://github.com/deepinsight/insightface/blob/master/resources/facerecognitionfromvideo.PNG)](https://www.youtube.com/watch?v=y-D1tReryGA&t=81s)\n\nPlease click the image to watch the Youtube video. For Bilibili users, click [here](https://www.bilibili.com/video/av38041494?from=search&seid=11501833604850032313).\n\n",
      "technique": "Header extraction"
    }
  ]
}