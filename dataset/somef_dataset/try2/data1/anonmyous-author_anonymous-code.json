{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use this work, please cite XXX (under review)\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anonmyous-author/anonymous-code",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-05T19:29:40Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-23T04:50:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9548650072713689
      ],
      "excerpt": "Project investigating human and artificial neural representations of python program comprehension and execution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9958760792990771,
        0.8595485846285941
      ],
      "excerpt": "MVPA (multivariate pattern analysis) evaluates decoding of code properties or code model representations from their respective brain representations within a collection of canonical brain regions. RSA (representational similarity analysis) is also available as an alternative to MVPA. Only MVPA was used for the present work, but we allow the flexibility for the user. \nPRDA (program representation decoding analysis) evaluates decoding of code properties from code model representations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8941884580530219
      ],
      "excerpt": "MD+L, MD+V, L+V (combinations of critical networks) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8656275569580518
      ],
      "excerpt": "Supported features \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8055571884944285
      ],
      "excerpt": "To decode a TF-IDF model from MD region representations: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8656275569580518
      ],
      "excerpt": "Supported features \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anonmyous-author/anonymous-code/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 07:26:22 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anonmyous-author/anonymous-code/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "anonmyous-author/anonymous-code",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/anonmyous-author/anonymous-code/main/paper/scripts/run.sh",
      "https://raw.githubusercontent.com/anonmyous-author/anonymous-code/main/setup/setup.sh",
      "https://raw.githubusercontent.com/anonmyous-author/anonymous-code/main/setup/_setup_inputs.sh",
      "https://raw.githubusercontent.com/anonmyous-author/anonymous-code/main/setup/_setup_code_transformer.sh",
      "https://raw.githubusercontent.com/anonmyous-author/anonymous-code/main/setup/_setup_code_seq2seq.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Requirements: [Anaconda](https://conda.io/projects/conda/en/latest/user-guide/install/index.html)\n\n```bash\nconda create -n braincode python=3.7\nsource activate braincode\ngit clone --depth 1 https://github.com/anonmyous-author/anonymous-code\ncd braincode\npip install . #: -e for development mode\ncd setup\nsource setup.sh #: downloads 'large' files, e.g. datasets, models\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8494244323142024
      ],
      "excerpt": "To run all experiments from the paper, the following commands will suffice after setup: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8349335922284703
      ],
      "excerpt": "cd paper/scripts \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8603125760826901
      ],
      "excerpt": "Sample run \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8603125760826901
      ],
      "excerpt": "Sample run \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anonmyous-author/anonymous-code/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "BrainCode",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "anonymous-code",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "anonmyous-author",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anonmyous-author/anonymous-code/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "-   Node Count (",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nusage: braincode [-h]\n                 [-f {all,brain-MD+lang,brain-MD+vis,brain-lang+vis,brain-MD,brain-lang,brain-vis,brain-aud,code-random,code-bow,code-tfidf,code-seq2seq,code-xlnet,code-ct,code-codeberta}]\n                 [-t {all,test-code,test-lang,task-content,task-structure,task-lines,task-bytes,task-nodes,task-tokens,task-halstead,task-cyclomatic,code-random,code-bow,code-tfidf,code-seq2seq,code-xlnet,code-ct,code-codeberta}]\n                 [-p BASE_PATH] [-s] [-d CODE_MODEL_DIM]\n                 {rsa,mvpa,prda}\n\nrun specified analysis type\n\npositional arguments:\n  {rsa,mvpa,prda}\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f {all,brain-MD+lang,brain-MD+vis,brain-lang+vis,brain-MD,brain-lang,brain-vis,brain-aud,code-random,code-bow,code-tfidf,code-seq2seq,code-xlnet,code-ct,code-codeberta}, --feature {all,brain-MD+lang,brain-MD+vis,brain-lang+vis,brain-MD,brain-lang,brain-vis,brain-aud,code-random,code-bow,code-tfidf,code-seq2seq,code-xlnet,code-ct,code-codeberta}\n  -t {all,test-code,test-lang,task-content,task-structure,task-lines,task-bytes,task-nodes,task-tokens,task-halstead,task-cyclomatic,code-random,code-bow,code-tfidf,code-seq2seq,code-xlnet,code-ct,code-codeberta}, --target {all,test-code,test-lang,task-content,task-structure,task-lines,task-bytes,task-nodes,task-tokens,task-halstead,task-cyclomatic,code-random,code-bow,code-tfidf,code-seq2seq,code-xlnet,code-ct,code-codeberta}\n  -p BASE_PATH, --base_path BASE_PATH\n  -s, --score_only\n  -d CODE_MODEL_DIM, --code_model_dim CODE_MODEL_DIM\n```\n\nnote: BASE_PATH must be specified to match setup.sh if changed from default.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 07:26:22 GMT"
    },
    "technique": "GitHub API"
  }
}