{
  "citation": [
    {
      "confidence": [
        0.8314617334433614
      ],
      "excerpt": "    <a href=\"https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "    <a href=\"https://github.com/ultralytics/yolov5/wiki/AWS-Quickstart\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "    <a href=\"https://github.com/ultralytics/yolov5/wiki/GCP-Quickstart\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "  <a href=\"https://github.com/ultralytics/yolov5/discussions/3213\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|YOLOv5l      |640  |48.8   |67.2   |430    |10.1   |2.7    |46.5   |109.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|YOLOv5l6     |1280 |53.6   |71.6   |1784   |15.8   |10.5   |76.7   |111.4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9947166734632579,
        0.8032085510057734
      ],
      "excerpt": "<a href=\"https://github.com/ultralytics/yolov5/graphs/contributors\"><img src=\"https://opencollective.com/ultralytics/contributors.svg?width=990\" /></a> \nFor YOLOv5 bugs and feature requests please visit GitHub Issues. For business inquiries or \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "    <a href=\"https://github.com/ultralytics\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ultralytics/yolov5",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to YOLOv5 \ud83d\ude80\nWe love your input! We want to make contributing to YOLOv5 as easy and transparent as possible, whether it's:\n\nReporting a bug\nDiscussing the current state of the code\nSubmitting a fix\nProposing a new feature\nBecoming a maintainer\n\nYOLOv5 works so well due to our combined community effort, and for every small improvement you contribute you will be\nhelping push the frontiers of what's possible in AI \ud83d\ude03!\nSubmitting a Pull Request (PR) \ud83d\udee0\ufe0f\nSubmitting a PR is easy! This example shows how to submit a PR for updating requirements.txt in 4 steps:\n1. Select File to Update\nSelect requirements.txt to update by clicking on it in GitHub.\n<p align=\"center\"><img width=\"800\" alt=\"PR_step1\" src=\"https://user-images.githubusercontent.com/26833433/122260847-08be2600-ced4-11eb-828b-8287ace4136c.png\"></p>\n\n2. Click 'Edit this file'\nButton is in top-right corner.\n<p align=\"center\"><img width=\"800\" alt=\"PR_step2\" src=\"https://user-images.githubusercontent.com/26833433/122260844-06f46280-ced4-11eb-9eec-b8a24be519ca.png\"></p>\n\n3. Make Changes\nChange matplotlib version from 3.2.2 to 3.3.\n<p align=\"center\"><img width=\"800\" alt=\"PR_step3\" src=\"https://user-images.githubusercontent.com/26833433/122260853-0a87e980-ced4-11eb-9fd2-3650fb6e0842.png\"></p>\n\n4. Preview Changes and Submit PR\nClick on the Preview changes tab to verify your updates. At the bottom of the screen select 'Create a new branch\nfor this commit', assign your branch a descriptive name such as fix/matplotlib_version and click the green Propose\nchanges button. All done, your PR is now submitted to YOLOv5 for review and approval \ud83d\ude03!\n<p align=\"center\"><img width=\"800\" alt=\"PR_step4\" src=\"https://user-images.githubusercontent.com/26833433/122260856-0b208000-ced4-11eb-8e8e-77b6151cbcc3.png\"></p>\n\nPR recommendations\nTo allow your work to be integrated as seamlessly as possible, we advise you to:\n\n\u2705 Verify your PR is up-to-date with upstream/master. If your PR is behind upstream/master an\n  automatic GitHub actions rebase may\n  be attempted by including the /rebase command in a comment body, or by running the following code, replacing 'feature'\n  with the name of your local branch:\n\nbash\n  git remote add upstream https://github.com/ultralytics/yolov5.git\n  git fetch upstream\n  git checkout feature  # &lt;----- replace 'feature' with local branch name\n  git merge upstream/master\n  git push -u origin -f\n\n\u2705 Verify all Continuous Integration (CI) checks are passing.\n\u2705 Reduce changes to the absolute minimum required for your bug fix or feature addition. \"It is not daily increase\n  but daily decrease, hack away the unessential. The closer to the source, the less wastage there is.\"  \u2014 Bruce Lee\n\nSubmitting a Bug Report \ud83d\udc1b\nIf you spot a problem with YOLOv5 please submit a Bug Report!\nFor us to start investigating a possible problem we need to be able to reproduce it ourselves first. We've created a few\nshort guidelines below to help users provide what we need in order to get started.\nWhen asking a question, people will be better able to provide help if you provide code that they can easily\nunderstand and use to reproduce the problem. This is referred to by community members as creating\na minimum reproducible example. Your code that reproduces\nthe problem should be:\n\n\u2705 Minimal \u2013 Use as little code as possible that still produces the same problem\n\u2705 Complete \u2013 Provide all parts someone else needs to reproduce your problem in the question itself\n\u2705 Reproducible \u2013 Test the code you're about to provide to make sure it reproduces the problem\n\nIn addition to the above requirements, for Ultralytics to provide assistance your code\nshould be:\n\n\u2705 Current \u2013 Verify that your code is up-to-date with current\n  GitHub master, and if necessary git pull or git clone a new\n  copy to ensure your problem has not already been resolved by previous commits.\n\u2705 Unmodified \u2013 Your problem must be reproducible without any modifications to the codebase in this\n  repository. Ultralytics does not provide support for custom code \u26a0\ufe0f.\n\nIf you believe your problem meets all of the above criteria, please close this issue and raise a new one using the \ud83d\udc1b \nBug Report template and providing\na minimum reproducible example to help us better\nunderstand and diagnose your problem.\nLicense\nBy contributing, you agree that your contributions will be licensed under\nthe GPL-3.0 license",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-18T03:45:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-25T09:22:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.942286381546894,
        0.9784060157053721
      ],
      "excerpt": "See the YOLOv5 Docs for full documentation on training, testing and deployment. \nGet started in seconds with our verified environments. Click each icon below for details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9427859003916489
      ],
      "excerpt": "|Automatically track and visualize all your YOLOv5 training runs in the cloud with Weights & Biases|Label and export your custom datasets directly to YOLOv5 for training with Roboflow | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762,
        0.9237597373686419
      ],
      "excerpt": "  <summary>Table Notes (click to expand)</summary> \n* All checkpoints are trained to 300 epochs with default settings and hyperparameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9782279808662612
      ],
      "excerpt": "We love your input! We want to make contributing to YOLOv5 as easy and transparent as possible. Please see our Contributing Guide to get started, and fill out the YOLOv5 Survey to send us feedback on your experiences. Thank you to all our contributors! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8572941119161103
      ],
      "excerpt": "For YOLOv5 bugs and feature requests please visit GitHub Issues. For business inquiries or \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "YOLOv5 \ud83d\ude80 in PyTorch > ONNX > CoreML > TFLite",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ultralytics/yolov5/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7062,
      "date": "Sat, 25 Dec 2021 10:06:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ultralytics/yolov5/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ultralytics/yolov5",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/Dockerfile",
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/utils/google_app_engine/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/tutorial.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/data/scripts/get_coco128.sh",
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/data/scripts/get_coco.sh",
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/data/scripts/download_weights.sh",
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/utils/aws/userdata.sh",
      "https://raw.githubusercontent.com/ultralytics/yolov5/master/utils/aws/mime.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8068971336088788
      ],
      "excerpt": "  <img width=\"850\" src=\"https://github.com/ultralytics/yolov5/releases/download/v1.0/banner-export-competition.png\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8240711663764684
      ],
      "excerpt": "        <img src=\"https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-github.png\" width=\"3%\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8121482114105772
      ],
      "excerpt": "        <img src=\"https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-linkedin.png\" width=\"3%\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8121482114105772
      ],
      "excerpt": "        <img src=\"https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-twitter.png\" width=\"3%\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8121482114105772
      ],
      "excerpt": "        <img src=\"https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-youtube.png\" width=\"3%\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8121482114105772
      ],
      "excerpt": "        <img src=\"https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-social-instagram.png\" width=\"3%\"/> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8178998017016282,
        0.8362503311355283
      ],
      "excerpt": "|YOLOv5m      |640  |45.2   |63.9   |224    |8.2    |1.7    |21.2   |49.0 \n|YOLOv5l      |640  |48.8   |67.2   |430    |10.1   |2.7    |46.5   |109.1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8392792068943966
      ],
      "excerpt": "|YOLOv5l6     |1280 |53.6   |71.6   |1784   |15.8   |10.5   |76.7   |111.4 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ultralytics/yolov5/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'GNU GENERAL PUBLIC LICENSE\\n                       Version 3, 29 June 2007\\n\\n Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\\n Everyone is permitted to copy and distribute verbatim copies\\n of this license document, but changing it is not allowed.\\n\\n                            Preamble\\n\\n  The GNU General Public License is a free, copyleft license for\\nsoftware and other kinds of works.\\n\\n  The licenses for most software and other practical works are designed\\nto take away your freedom to share and change the works.  By contrast,\\nthe GNU General Public License is intended to guarantee your freedom to\\nshare and change all versions of a program--to make sure it remains free\\nsoftware for all its users.  We, the Free Software Foundation, use the\\nGNU General Public License for most of our software; it applies also to\\nany other work released this way by its authors.  You can apply it to\\nyour programs, too.\\n\\n  When we speak of free software, we are referring to freedom, not\\nprice.  Our General Public Licenses are designed to make sure that you\\nhave the freedom to distribute copies of free software (and charge for\\nthem if you wish), that you receive source code or can get it if you\\nwant it, that you can change the software or use pieces of it in new\\nfree programs, and that you know you can do these things.\\n\\n  To protect your rights, we need to prevent others from denying you\\nthese rights or asking you to surrender the rights.  Therefore, you have\\ncertain responsibilities if you distribute copies of the software, or if\\nyou modify it: responsibilities to respect the freedom of others.\\n\\n  For example, if you distribute copies of such a program, whether\\ngratis or for a fee, you must pass on to the recipients the same\\nfreedoms that you received.  You must make sure that they, too, receive\\nor can get the source code.  And you must show them these terms so they\\nknow their rights.\\n\\n  Developers that use the GNU GPL protect your rights with two steps:\\n(1) assert copyright on the software, and (2) offer you this License\\ngiving you legal permission to copy, distribute and/or modify it.\\n\\n  For the developers\\' and authors\\' protection, the GPL clearly explains\\nthat there is no warranty for this free software.  For both users\\' and\\nauthors\\' sake, the GPL requires that modified versions be marked as\\nchanged, so that their problems will not be attributed erroneously to\\nauthors of previous versions.\\n\\n  Some devices are designed to deny users access to install or run\\nmodified versions of the software inside them, although the manufacturer\\ncan do so.  This is fundamentally incompatible with the aim of\\nprotecting users\\' freedom to change the software.  The systematic\\npattern of such abuse occurs in the area of products for individuals to\\nuse, which is precisely where it is most unacceptable.  Therefore, we\\nhave designed this version of the GPL to prohibit the practice for those\\nproducts.  If such problems arise substantially in other domains, we\\nstand ready to extend this provision to those domains in future versions\\nof the GPL, as needed to protect the freedom of users.\\n\\n  Finally, every program is threatened constantly by software patents.\\nStates should not allow patents to restrict development and use of\\nsoftware on general-purpose computers, but in those that do, we wish to\\navoid the special danger that patents applied to a free program could\\nmake it effectively proprietary.  To prevent this, the GPL assures that\\npatents cannot be used to render the program non-free.\\n\\n  The precise terms and conditions for copying, distribution and\\nmodification follow.\\n\\n                       TERMS AND CONDITIONS\\n\\n  0. Definitions.\\n\\n  \"This License\" refers to version 3 of the GNU General Public License.\\n\\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\\nworks, such as semiconductor masks.\\n\\n  \"The Program\" refers to any copyrightable work licensed under this\\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\\n\"recipients\" may be individuals or organizations.\\n\\n  To \"modify\" a work means to copy from or adapt all or part of the work\\nin a fashion requiring copyright permission, other than the making of an\\nexact copy.  The resulting work is called a \"modified version\" of the\\nearlier work or a work \"based on\" the earlier work.\\n\\n  A \"covered work\" means either the unmodified Program or a work based\\non the Program.\\n\\n  To \"propagate\" a work means to do anything with it that, without\\npermission, would make you directly or secondarily liable for\\ninfringement under applicable copyright law, except executing it on a\\ncomputer or modifying a private copy.  Propagation includes copying,\\ndistribution (with or without modification), making available to the\\npublic, and in some countries other activities as well.\\n\\n  To \"convey\" a work means any kind of propagation that enables other\\nparties to make or receive copies.  Mere interaction with a user through\\na computer network, with no transfer of a copy, is not conveying.\\n\\n  An interactive user interface displays \"Appropriate Legal Notices\"\\nto the extent that it includes a convenient and prominently visible\\nfeature that (1) displays an appropriate copyright notice, and (2)\\ntells the user that there is no warranty for the work (except to the\\nextent that warranties are provided), that licensees may convey the\\nwork under this License, and how to view a copy of this License.  If\\nthe interface presents a list of user commands or options, such as a\\nmenu, a prominent item in the list meets this criterion.\\n\\n  1. Source Code.\\n\\n  The \"source code\" for a work means the preferred form of the work\\nfor making modifications to it.  \"Object code\" means any non-source\\nform of a work.\\n\\n  A \"Standard Interface\" means an interface that either is an official\\nstandard defined by a recognized standards body, or, in the case of\\ninterfaces specified for a particular programming language, one that\\nis widely used among developers working in that language.\\n\\n  The \"System Libraries\" of an executable work include anything, other\\nthan the work as a whole, that (a) is included in the normal form of\\npackaging a Major Component, but which is not part of that Major\\nComponent, and (b) serves only to enable use of the work with that\\nMajor Component, or to implement a Standard Interface for which an\\nimplementation is available to the public in source code form.  A\\n\"Major Component\", in this context, means a major essential component\\n(kernel, window system, and so on) of the specific operating system\\n(if any) on which the executable work runs, or a compiler used to\\nproduce the work, or an object code interpreter used to run it.\\n\\n  The \"Corresponding Source\" for a work in object code form means all\\nthe source code needed to generate, install, and (for an executable\\nwork) run the object code and to modify the work, including scripts to\\ncontrol those activities.  However, it does not include the work\\'s\\nSystem Libraries, or general-purpose tools or generally available free\\nprograms which are used unmodified in performing those activities but\\nwhich are not part of the work.  For example, Corresponding Source\\nincludes interface definition files associated with source files for\\nthe work, and the source code for shared libraries and dynamically\\nlinked subprograms that the work is specifically designed to require,\\nsuch as by intimate data communication or control flow between those\\nsubprograms and other parts of the work.\\n\\n  The Corresponding Source need not include anything that users\\ncan regenerate automatically from other parts of the Corresponding\\nSource.\\n\\n  The Corresponding Source for a work in source code form is that\\nsame work.\\n\\n  2. Basic Permissions.\\n\\n  All rights granted under this License are granted for the term of\\ncopyright on the Program, and are irrevocable provided the stated\\nconditions are met.  This License explicitly affirms your unlimited\\npermission to run the unmodified Program.  The output from running a\\ncovered work is covered by this License only if the output, given its\\ncontent, constitutes a covered work.  This License acknowledges your\\nrights of fair use or other equivalent, as provided by copyright law.\\n\\n  You may make, run and propagate covered works that you do not\\nconvey, without conditions so long as your license otherwise remains\\nin force.  You may convey covered works to others for the sole purpose\\nof having them make modifications exclusively for you, or provide you\\nwith facilities for running those works, provided that you comply with\\nthe terms of this License in conveying all material for which you do\\nnot control copyright.  Those thus making or running the covered works\\nfor you must do so exclusively on your behalf, under your direction\\nand control, on terms that prohibit them from making any copies of\\nyour copyrighted material outside their relationship with you.\\n\\n  Conveying under any other circumstances is permitted solely under\\nthe conditions stated below.  Sublicensing is not allowed; section 10\\nmakes it unnecessary.\\n\\n  3. Protecting Users\\' Legal Rights From Anti-Circumvention Law.\\n\\n  No covered work shall be deemed part of an effective technological\\nmeasure under any applicable law fulfilling obligations under article\\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\\nsimilar laws prohibiting or restricting circumvention of such\\nmeasures.\\n\\n  When you convey a covered work, you waive any legal power to forbid\\ncircumvention of technological measures to the extent such circumvention\\nis effected by exercising rights under this License with respect to\\nthe covered work, and you disclaim any intention to limit operation or\\nmodification of the work as a means of enforcing, against the work\\'s\\nusers, your or third parties\\' legal rights to forbid circumvention of\\ntechnological measures.\\n\\n  4. Conveying Verbatim Copies.\\n\\n  You may convey verbatim copies of the Program\\'s source code as you\\nreceive it, in any medium, provided that you conspicuously and\\nappropriately publish on each copy an appropriate copyright notice;\\nkeep intact all notices stating that this License and any\\nnon-permissive terms added in accord with section 7 apply to the code;\\nkeep intact all notices of the absence of any warranty; and give all\\nrecipients a copy of this License along with the Program.\\n\\n  You may charge any price or no price for each copy that you convey,\\nand you may offer support or warranty protection for a fee.\\n\\n  5. Conveying Modified Source Versions.\\n\\n  You may convey a work based on the Program, or the modifications to\\nproduce it from the Program, in the form of source code under the\\nterms of section 4, provided that you also meet all of these conditions:\\n\\n    a) The work must carry prominent notices stating that you modified\\n    it, and giving a relevant date.\\n\\n    b) The work must carry prominent notices stating that it is\\n    released under this License and any conditions added under section\\n    7.  This requirement modifies the requirement in section 4 to\\n    \"keep intact all notices\".\\n\\n    c) You must license the entire work, as a whole, under this\\n    License to anyone who comes into possession of a copy.  This\\n    License will therefore apply, along with any applicable section 7\\n    additional terms, to the whole of the work, and all its parts,\\n    regardless of how they are packaged.  This License gives no\\n    permission to license the work in any other way, but it does not\\n    invalidate such permission if you have separately received it.\\n\\n    d) If the work has interactive user interfaces, each must display\\n    Appropriate Legal Notices; however, if the Program has interactive\\n    interfaces that do not display Appropriate Legal Notices, your\\n    work need not make them do so.\\n\\n  A compilation of a covered work with other separate and independent\\nworks, which are not by their nature extensions of the covered work,\\nand which are not combined with it such as to form a larger program,\\nin or on a volume of a storage or distribution medium, is called an\\n\"aggregate\" if the compilation and its resulting copyright are not\\nused to limit the access or legal rights of the compilation\\'s users\\nbeyond what the individual works permit.  Inclusion of a covered work\\nin an aggregate does not cause this License to apply to the other\\nparts of the aggregate.\\n\\n  6. Conveying Non-Source Forms.\\n\\n  You may convey a covered work in object code form under the terms\\nof sections 4 and 5, provided that you also convey the\\nmachine-readable Corresponding Source under the terms of this License,\\nin one of these ways:\\n\\n    a) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by the\\n    Corresponding Source fixed on a durable physical medium\\n    customarily used for software interchange.\\n\\n    b) Convey the object code in, or embodied in, a physical product\\n    (including a physical distribution medium), accompanied by a\\n    written offer, valid for at least three years and valid for as\\n    long as you offer spare parts or customer support for that product\\n    model, to give anyone who possesses the object code either (1) a\\n    copy of the Corresponding Source for all the software in the\\n    product that is covered by this License, on a durable physical\\n    medium customarily used for software interchange, for a price no\\n    more than your reasonable cost of physically performing this\\n    conveying of source, or (2) access to copy the\\n    Corresponding Source from a network server at no charge.\\n\\n    c) Convey individual copies of the object code with a copy of the\\n    written offer to provide the Corresponding Source.  This\\n    alternative is allowed only occasionally and noncommercially, and\\n    only if you received the object code with such an offer, in accord\\n    with subsection 6b.\\n\\n    d) Convey the object code by offering access from a designated\\n    place (gratis or for a charge), and offer equivalent access to the\\n    Corresponding Source in the same way through the same place at no\\n    further charge.  You need not require recipients to copy the\\n    Corresponding Source along with the object code.  If the place to\\n    copy the object code is a network server, the Corresponding Source\\n    may be on a different server (operated by you or a third party)\\n    that supports equivalent copying facilities, provided you maintain\\n    clear directions next to the object code saying where to find the\\n    Corresponding Source.  Regardless of what server hosts the\\n    Corresponding Source, you remain obligated to ensure that it is\\n    available for as long as needed to satisfy these requirements.\\n\\n    e) Convey the object code using peer-to-peer transmission, provided\\n    you inform other peers where the object code and Corresponding\\n    Source of the work are being offered to the general public at no\\n    charge under subsection 6d.\\n\\n  A separable portion of the object code, whose source code is excluded\\nfrom the Corresponding Source as a System Library, need not be\\nincluded in conveying the object code work.\\n\\n  A \"User Product\" is either (1) a \"consumer product\", which means any\\ntangible personal property which is normally used for personal, family,\\nor household purposes, or (2) anything designed or sold for incorporation\\ninto a dwelling.  In determining whether a product is a consumer product,\\ndoubtful cases shall be resolved in favor of coverage.  For a particular\\nproduct received by a particular user, \"normally used\" refers to a\\ntypical or common use of that class of product, regardless of the status\\nof the particular user or of the way in which the particular user\\nactually uses, or expects or is expected to use, the product.  A product\\nis a consumer product regardless of whether the product has substantial\\ncommercial, industrial or non-consumer uses, unless such uses represent\\nthe only significant mode of use of the product.\\n\\n  \"Installation Information\" for a User Product means any methods,\\nprocedures, authorization keys, or other information required to install\\nand execute modified versions of a covered work in that User Product from\\na modified version of its Corresponding Source.  The information must\\nsuffice to ensure that the continued functioning of the modified object\\ncode is in no case prevented or interfered with solely because\\nmodification has been made.\\n\\n  If you convey an object code work under this section in, or with, or\\nspecifically for use in, a User Product, and the conveying occurs as\\npart of a transaction in which the right of possession and use of the\\nUser Product is transferred to the recipient in perpetuity or for a\\nfixed term (regardless of how the transaction is characterized), the\\nCorresponding Source conveyed under this section must be accompanied\\nby the Installation Information.  But this requirement does not apply\\nif neither you nor any third party retains the ability to install\\nmodified object code on the User Product (for example, the work has\\nbeen installed in ROM).\\n\\n  The requirement to provide Installation Information does not include a\\nrequirement to continue to provide support service, warranty, or updates\\nfor a work that has been modified or installed by the recipient, or for\\nthe User Product in which it has been modified or installed.  Access to a\\nnetwork may be denied when the modification itself materially and\\nadversely affects the operation of the network or violates the rules and\\nprotocols for communication across the network.\\n\\n  Corresponding Source conveyed, and Installation Information provided,\\nin accord with this section must be in a format that is publicly\\ndocumented (and with an implementation available to the public in\\nsource code form), and must require no special password or key for\\nunpacking, reading or copying.\\n\\n  7. Additional Terms.\\n\\n  \"Additional permissions\" are terms that supplement the terms of this\\nLicense by making exceptions from one or more of its conditions.\\nAdditional permissions that are applicable to the entire Program shall\\nbe treated as though they were included in this License, to the extent\\nthat they are valid under applicable law.  If additional permissions\\napply only to part of the Program, that part may be used separately\\nunder those permissions, but the entire Program remains governed by\\nthis License without regard to the additional permissions.\\n\\n  When you convey a copy of a covered work, you may at your option\\nremove any additional permissions from that copy, or from any part of\\nit.  (Additional permissions may be written to require their own\\nremoval in certain cases when you modify the work.)  You may place\\nadditional permissions on material, added by you to a covered work,\\nfor which you have or can give appropriate copyright permission.\\n\\n  Notwithstanding any other provision of this License, for material you\\nadd to a covered work, you may (if authorized by the copyright holders of\\nthat material) supplement the terms of this License with terms:\\n\\n    a) Disclaiming warranty or limiting liability differently from the\\n    terms of sections 15 and 16 of this License; or\\n\\n    b) Requiring preservation of specified reasonable legal notices or\\n    author attributions in that material or in the Appropriate Legal\\n    Notices displayed by works containing it; or\\n\\n    c) Prohibiting misrepresentation of the origin of that material, or\\n    requiring that modified versions of such material be marked in\\n    reasonable ways as different from the original version; or\\n\\n    d) Limiting the use for publicity purposes of names of licensors or\\n    authors of the material; or\\n\\n    e) Declining to grant rights under trademark law for use of some\\n    trade names, trademarks, or service marks; or\\n\\n    f) Requiring indemnification of licensors and authors of that\\n    material by anyone who conveys the material (or modified versions of\\n    it) with contractual assumptions of liability to the recipient, for\\n    any liability that these contractual assumptions directly impose on\\n    those licensors and authors.\\n\\n  All other non-permissive additional terms are considered \"further\\nrestrictions\" within the meaning of section 10.  If the Program as you\\nreceived it, or any part of it, contains a notice stating that it is\\ngoverned by this License along with a term that is a further\\nrestriction, you may remove that term.  If a license document contains\\na further restriction but permits relicensing or conveying under this\\nLicense, you may add to a covered work material governed by the terms\\nof that license document, provided that the further restriction does\\nnot survive such relicensing or conveying.\\n\\n  If you add terms to a covered work in accord with this section, you\\nmust place, in the relevant source files, a statement of the\\nadditional terms that apply to those files, or a notice indicating\\nwhere to find the applicable terms.\\n\\n  Additional terms, permissive or non-permissive, may be stated in the\\nform of a separately written license, or stated as exceptions;\\nthe above requirements apply either way.\\n\\n  8. Termination.\\n\\n  You may not propagate or modify a covered work except as expressly\\nprovided under this License.  Any attempt otherwise to propagate or\\nmodify it is void, and will automatically terminate your rights under\\nthis License (including any patent licenses granted under the third\\nparagraph of section 11).\\n\\n  However, if you cease all violation of this License, then your\\nlicense from a particular copyright holder is reinstated (a)\\nprovisionally, unless and until the copyright holder explicitly and\\nfinally terminates your license, and (b) permanently, if the copyright\\nholder fails to notify you of the violation by some reasonable means\\nprior to 60 days after the cessation.\\n\\n  Moreover, your license from a particular copyright holder is\\nreinstated permanently if the copyright holder notifies you of the\\nviolation by some reasonable means, this is the first time you have\\nreceived notice of violation of this License (for any work) from that\\ncopyright holder, and you cure the violation prior to 30 days after\\nyour receipt of the notice.\\n\\n  Termination of your rights under this section does not terminate the\\nlicenses of parties who have received copies or rights from you under\\nthis License.  If your rights have been terminated and not permanently\\nreinstated, you do not qualify to receive new licenses for the same\\nmaterial under section 10.\\n\\n  9. Acceptance Not Required for Having Copies.\\n\\n  You are not required to accept this License in order to receive or\\nrun a copy of the Program.  Ancillary propagation of a covered work\\noccurring solely as a consequence of using peer-to-peer transmission\\nto receive a copy likewise does not require acceptance.  However,\\nnothing other than this License grants you permission to propagate or\\nmodify any covered work.  These actions infringe copyright if you do\\nnot accept this License.  Therefore, by modifying or propagating a\\ncovered work, you indicate your acceptance of this License to do so.\\n\\n  10. Automatic Licensing of Downstream Recipients.\\n\\n  Each time you convey a covered work, the recipient automatically\\nreceives a license from the original licensors, to run, modify and\\npropagate that work, subject to this License.  You are not responsible\\nfor enforcing compliance by third parties with this License.\\n\\n  An \"entity transaction\" is a transaction transferring control of an\\norganization, or substantially all assets of one, or subdividing an\\norganization, or merging organizations.  If propagation of a covered\\nwork results from an entity transaction, each party to that\\ntransaction who receives a copy of the work also receives whatever\\nlicenses to the work the party\\'s predecessor in interest had or could\\ngive under the previous paragraph, plus a right to possession of the\\nCorresponding Source of the work from the predecessor in interest, if\\nthe predecessor has it or can get it with reasonable efforts.\\n\\n  You may not impose any further restrictions on the exercise of the\\nrights granted or affirmed under this License.  For example, you may\\nnot impose a license fee, royalty, or other charge for exercise of\\nrights granted under this License, and you may not initiate litigation\\n(including a cross-claim or counterclaim in a lawsuit) alleging that\\nany patent claim is infringed by making, using, selling, offering for\\nsale, or importing the Program or any portion of it.\\n\\n  11. Patents.\\n\\n  A \"contributor\" is a copyright holder who authorizes use under this\\nLicense of the Program or a work on which the Program is based.  The\\nwork thus licensed is called the contributor\\'s \"contributor version\".\\n\\n  A contributor\\'s \"essential patent claims\" are all patent claims\\nowned or controlled by the contributor, whether already acquired or\\nhereafter acquired, that would be infringed by some manner, permitted\\nby this License, of making, using, or selling its contributor version,\\nbut do not include claims that would be infringed only as a\\nconsequence of further modification of the contributor version.  For\\npurposes of this definition, \"control\" includes the right to grant\\npatent sublicenses in a manner consistent with the requirements of\\nthis License.\\n\\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\\npatent license under the contributor\\'s essential patent claims, to\\nmake, use, sell, offer for sale, import and otherwise run, modify and\\npropagate the contents of its contributor version.\\n\\n  In the following three paragraphs, a \"patent license\" is any express\\nagreement or commitment, however denominated, not to enforce a patent\\n(such as an express permission to practice a patent or covenant not to\\nsue for patent infringement).  To \"grant\" such a patent license to a\\nparty means to make such an agreement or commitment not to enforce a\\npatent against the party.\\n\\n  If you convey a covered work, knowingly relying on a patent license,\\nand the Corresponding Source of the work is not available for anyone\\nto copy, free of charge and under the terms of this License, through a\\npublicly available network server or other readily accessible means,\\nthen you must either (1) cause the Corresponding Source to be so\\navailable, or (2) arrange to deprive yourself of the benefit of the\\npatent license for this particular work, or (3) arrange, in a manner\\nconsistent with the requirements of this License, to extend the patent\\nlicense to downstream recipients.  \"Knowingly relying\" means you have\\nactual knowledge that, but for the patent license, your conveying the\\ncovered work in a country, or your recipient\\'s use of the covered work\\nin a country, would infringe one or more identifiable patents in that\\ncountry that you have reason to believe are valid.\\n\\n  If, pursuant to or in connection with a single transaction or\\narrangement, you convey, or propagate by procuring conveyance of, a\\ncovered work, and grant a patent license to some of the parties\\nreceiving the covered work authorizing them to use, propagate, modify\\nor convey a specific copy of the covered work, then the patent license\\nyou grant is automatically extended to all recipients of the covered\\nwork and works based on it.\\n\\n  A patent license is \"discriminatory\" if it does not include within\\nthe scope of its coverage, prohibits the exercise of, or is\\nconditioned on the non-exercise of one or more of the rights that are\\nspecifically granted under this License.  You may not convey a covered\\nwork if you are a party to an arrangement with a third party that is\\nin the business of distributing software, under which you make payment\\nto the third party based on the extent of your activity of conveying\\nthe work, and under which the third party grants, to any of the\\nparties who would receive the covered work from you, a discriminatory\\npatent license (a) in connection with copies of the covered work\\nconveyed by you (or copies made from those copies), or (b) primarily\\nfor and in connection with specific products or compilations that\\ncontain the covered work, unless you entered into that arrangement,\\nor that patent license was granted, prior to 28 March 2007.\\n\\n  Nothing in this License shall be construed as excluding or limiting\\nany implied license or other defenses to infringement that may\\notherwise be available to you under applicable patent law.\\n\\n  12. No Surrender of Others\\' Freedom.\\n\\n  If conditions are imposed on you (whether by court order, agreement or\\notherwise) that contradict the conditions of this License, they do not\\nexcuse you from the conditions of this License.  If you cannot convey a\\ncovered work so as to satisfy simultaneously your obligations under this\\nLicense and any other pertinent obligations, then as a consequence you may\\nnot convey it at all.  For example, if you agree to terms that obligate you\\nto collect a royalty for further conveying from those to whom you convey\\nthe Program, the only way you could satisfy both those terms and this\\nLicense would be to refrain entirely from conveying the Program.\\n\\n  13. Use with the GNU Affero General Public License.\\n\\n  Notwithstanding any other provision of this License, you have\\npermission to link or combine any covered work with a work licensed\\nunder version 3 of the GNU Affero General Public License into a single\\ncombined work, and to convey the resulting work.  The terms of this\\nLicense will continue to apply to the part which is the covered work,\\nbut the special requirements of the GNU Affero General Public License,\\nsection 13, concerning interaction through a network will apply to the\\ncombination as such.\\n\\n  14. Revised Versions of this License.\\n\\n  The Free Software Foundation may publish revised and/or new versions of\\nthe GNU General Public License from time to time.  Such new versions will\\nbe similar in spirit to the present version, but may differ in detail to\\naddress new problems or concerns.\\n\\n  Each version is given a distinguishing version number.  If the\\nProgram specifies that a certain numbered version of the GNU General\\nPublic License \"or any later version\" applies to it, you have the\\noption of following the terms and conditions either of that numbered\\nversion or of any later version published by the Free Software\\nFoundation.  If the Program does not specify a version number of the\\nGNU General Public License, you may choose any version ever published\\nby the Free Software Foundation.\\n\\n  If the Program specifies that a proxy can decide which future\\nversions of the GNU General Public License can be used, that proxy\\'s\\npublic statement of acceptance of a version permanently authorizes you\\nto choose that version for the Program.\\n\\n  Later license versions may give you additional or different\\npermissions.  However, no additional obligations are imposed on any\\nauthor or copyright holder as a result of your choosing to follow a\\nlater version.\\n\\n  15. Disclaimer of Warranty.\\n\\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\\n\\n  16. Limitation of Liability.\\n\\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\\nSUCH DAMAGES.\\n\\n  17. Interpretation of Sections 15 and 16.\\n\\n  If the disclaimer of warranty and limitation of liability provided\\nabove cannot be given local legal effect according to their terms,\\nreviewing courts shall apply local law that most closely approximates\\nan absolute waiver of all civil liability in connection with the\\nProgram, unless a warranty or assumption of liability accompanies a\\ncopy of the Program in return for a fee.\\n\\n                     END OF TERMS AND CONDITIONS\\n\\n            How to Apply These Terms to Your New Programs\\n\\n  If you develop a new program, and you want it to be of the greatest\\npossible use to the public, the best way to achieve this is to make it\\nfree software which everyone can redistribute and change under these terms.\\n\\n  To do so, attach the following notices to the program.  It is safest\\nto attach them to the start of each source file to most effectively\\nstate the exclusion of warranty; and each file should have at least\\nthe \"copyright\" line and a pointer to where the full notice is found.\\n\\n    <one line to give the program\\'s name and a brief idea of what it does.>\\n    Copyright (C) <year>  <name of author>\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see http://www.gnu.org/licenses/.\\n\\nAlso add information on how to contact you by electronic and paper mail.\\n\\n  If the program does terminal interaction, make it output a short\\nnotice like this when it starts in an interactive mode:\\n\\n    <program>  Copyright (C) <year>  <name of author>\\n    This program comes with ABSOLUTELY NO WARRANTY; for details type show w\\'.\\n    This is free software, and you are welcome to redistribute it\\n    under certain conditions; typeshow c\\' for details.\\n\\nThe hypothetical commands show w\\' andshow c\\' should show the appropriate\\nparts of the General Public License.  Of course, your program\\'s commands\\nmight be different; for a GUI interface, you would use an \"about box\".\\n\\n  You should also get your employer (if you work as a programmer) or school,\\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\\nFor more information on this, and how to apply and follow the GNU GPL, see\\nhttp://www.gnu.org/licenses/.\\n\\n  The GNU General Public License does not permit incorporating your program\\ninto proprietary programs.  If your program is a subroutine library, you\\nmay consider it more useful to permit linking proprietary applications with\\nthe library.  If this is what you want to do, use the GNU Lesser General\\nPublic License instead of this License.  But first, please read\\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# <div align=\"center\">Documentation</div>",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "yolov5",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ultralytics",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ultralytics/yolov5/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "[assets]: https://github.com/ultralytics/yolov5/releases\r\n[TTA]: https://github.com/ultralytics/yolov5/issues/303\r\n\r\nThis release incorporates many new features and bug fixes ([**465 PRs** from **73 contributors**](https://github.com/ultralytics/yolov5/compare/v5.0...v6.0)) since our last [release v5.0](https://github.com/ultralytics/yolov5/releases/tag/v5.0) in April, brings architecture tweaks, and also introduces new P5 and P6 'Nano' models: **YOLOv5n** and **YOLOv5n6**. Nano models maintain the YOLOv5s depth multiple of 0.33 but reduce the YOLOv5s width multiple from 0.50 to 0.25, resulting in ~75% fewer parameters, from 7.5M to 1.9M, ideal for mobile and CPU solutions. \r\n\r\nExample usage:\r\n```bash\r\npython detect.py --weights yolov5n.pt --img 640    # Nano P5 model trained at --img 640 (28.4 mAP@0.5:0.95)\r\npython detect.py --weights yolov5n6.pt --img 1280  # Nano P6 model trained at --img 1280 (34.0 mAP0.5:0.95)\r\n```\r\n\r\n\r\n## Important Updates\r\n\r\n- **Roboflow Integration \u2b50 NEW**: Train YOLOv5 models directly on any Roboflow dataset with our new integration! (https://github.com/ultralytics/yolov5/issues/4975 by @Jacobsolawetz)\r\n\r\n- **YOLOv5n 'Nano' models \u2b50 NEW**: New smaller YOLOv5n (1.9M params) model below YOLOv5s (7.5M params), exports to 2.1 MB INT8 size, ideal for ultralight mobile solutions. (https://github.com/ultralytics/yolov5/discussions/5027 by @glenn-jocher)\r\n- **TensorFlow and Keras Export**:  TensorFlow, Keras, TFLite, TF.js model export now fully integrated using `python export.py --include saved_model pb tflite tfjs` (https://github.com/ultralytics/yolov5/pull/1127 by @zldrobit)\r\n- **OpenCV DNN**: YOLOv5 ONNX models are now compatible with both OpenCV DNN and ONNX Runtime (https://github.com/ultralytics/yolov5/pull/4833 by @SamFC10).\r\n- **Model Architecture:** Updated backbones are slightly smaller, faster and more accurate.\r\n  - Replacement of `Focus()` with an equivalent `Conv(k=6, s=2, p=2)` layer (https://github.com/ultralytics/yolov5/issues/4825 by @thomasbi1) for improved exportability\r\n  - New `SPPF()` replacement for `SPP()` layer for reduced ops (https://github.com/ultralytics/yolov5/pull/4420 by @glenn-jocher)\r\n  - Reduction in P3 backbone layer `C3()` repeats from 9 to 6 for improved speeds\r\n  - Reorder places `SPPF()` at end of backbone\r\n  - Reintroduction of shortcut in the last `C3()` backbone layer\r\n  - Updated [hyperparameters](https://github.com/ultralytics/yolov5/blob/master/data/hyps/hyp.scratch-high.yaml) with increased mixup and copy-paste augmentation\r\n\r\n\r\n## New Results\r\n\r\n<p align=\"left\"><img width=\"800\" src=\"https://user-images.githubusercontent.com/26833433/136901921-abcfcd9d-f978-4942-9b97-0e3f202907df.png\"></p>\r\n<details>\r\n  <summary>YOLOv5-P5 640 Figure (click to expand)</summary>\r\n\r\n<p align=\"left\"><img width=\"800\" src=\"https://user-images.githubusercontent.com/26833433/136763877-b174052b-c12f-48d2-8bc4-545e3853398e.png\"></p>\r\n</details>\r\n<details>\r\n  <summary>Figure Notes (click to expand)</summary>\r\n\r\n* **COCO AP val** denotes mAP@0.5:0.95 metric measured on the 5000-image [COCO val2017](http://cocodataset.org) dataset over various inference sizes from 256 to 1536.\r\n* **GPU Speed** measures average inference time per image on [COCO val2017](http://cocodataset.org) dataset using a [AWS p3.2xlarge](https://aws.amazon.com/ec2/instance-types/p3/) V100 instance at batch-size 32.\r\n* **EfficientDet** data from [google/automl](https://github.com/google/automl) at batch size 8.\r\n* **Reproduce** by `python val.py --task study --data coco.yaml --iou 0.7 --weights yolov5n6.pt yolov5s6.pt yolov5m6.pt yolov5l6.pt yolov5x6.pt`\r\n</details>\r\n\r\nmAP improves from +0.3% to +1.1% across all models, and ~5% FLOPs reduction produces slight speed improvements and a reduced CUDA memory footprint. Example YOLOv5l before and after metrics:\r\n\r\n|YOLOv5l<br><sup>Large|size<br><sup>(pixels) |mAP<sup>val<br>0.5:0.95 |mAP<sup>val<br>0.5 |Speed<br><sup>CPU b1<br>(ms) |Speed<br><sup>V100 b1<br>(ms) |Speed<br><sup>V100 b32<br>(ms) |params<br><sup>(M) |FLOPs<br><sup>@640 (B)\r\n---                       |---  |---      |---      |---       |---     |--- |---      |---\r\n[v5.0][assets] (previous) |640  |48.2     |66.9     |457.9      |11.6    |2.8    |47.0     |115.4\r\n[v6.0][assets] (this release)  |640  |**48.8** |**67.2** |**424.5** |**10.9**|**2.7** |**46.5** |**109.1**\r\n\r\n\r\n## Pretrained Checkpoints\r\n\r\n[assets]: https://github.com/ultralytics/yolov5/releases\r\n[TTA]: https://github.com/ultralytics/yolov5/issues/303\r\n\r\n|Model |size<br><sup>(pixels) |mAP<sup>val<br>0.5:0.95 |mAP<sup>val<br>0.5 |Speed<br><sup>CPU b1<br>(ms) |Speed<br><sup>V100 b1<br>(ms) |Speed<br><sup>V100 b32<br>(ms) |params<br><sup>(M) |FLOPs<br><sup>@640 (B)\r\n|---                    |---  |---    |---    |---    |---    |---    |---    |---\r\n|[YOLOv5n][assets]      |640  |28.4   |46.0   |**45** |**6.3**|**0.6**|**1.9**|**4.5**\r\n|[YOLOv5s][assets]      |640  |37.2   |56.0   |98     |6.4    |0.9    |7.2    |16.5\r\n|[YOLOv5m][assets]      |640  |45.2   |63.9   |224    |8.2    |1.7    |21.2   |49.0\r\n|[YOLOv5l][assets]      |640  |48.8   |67.2   |430    |10.1   |2.7    |46.5   |109.1\r\n|[YOLOv5x][assets]      |640  |50.7   |68.9   |766    |12.1   |4.8    |86.7   |205.7\r\n|                       |     |       |       |       |       |       |       |\r\n|[YOLOv5n6][assets]     |1280 |34.0   |50.7   |153    |8.1    |2.1    |3.2    |4.6\r\n|[YOLOv5s6][assets]     |1280 |44.5   |63.0   |385    |8.2    |3.6    |16.8   |12.6\r\n|[YOLOv5m6][assets]     |1280 |51.0   |69.0   |887    |11.1   |6.8    |35.7   |50.0\r\n|[YOLOv5l6][assets]     |1280 |53.6   |71.6   |1784   |15.8   |10.5   |76.8   |111.4\r\n|[YOLOv5x6][assets]<br>+ [TTA][TTA]|1280<br>1536 |54.7<br>**55.4** |**72.4**<br>72.3 |3136<br>- |26.2<br>- |19.4<br>- |140.7<br>- |209.8<br>- \r\n\r\n<details>\r\n  <summary>Table Notes (click to expand)</summary>\r\n\r\n* All checkpoints are trained to 300 epochs with default settings. Nano models use [hyp.scratch-low.yaml](https://github.com/ultralytics/yolov5/blob/master/data/hyps/hyp.scratch-low.yaml) hyperparameters, all others use [hyp.scratch-high.yaml](https://github.com/ultralytics/yolov5/blob/master/data/hyps/hyp.scratch-high.yaml).\r\n* **mAP<sup>val</sup>** values are for single-model single-scale on [COCO val2017](http://cocodataset.org) dataset.<br>Reproduce by `python val.py --data coco.yaml --img 640 --conf 0.001 --iou 0.65`\r\n* **Speed** averaged over COCO val images using a [AWS p3.2xlarge](https://aws.amazon.com/ec2/instance-types/p3/) instance. NMS times (~1 ms/img) not included.<br>Reproduce by `python val.py --data coco.yaml --img 640 --conf 0.25 --iou 0.45`\r\n* **TTA** [Test Time Augmentation](https://github.com/ultralytics/yolov5/issues/303) includes reflection and scale augmentations.<br>Reproduce by `python val.py --data coco.yaml --img 1536 --iou 0.7 --augment`\r\n\r\n</details>\r\n\r\n\r\n## Changelog\r\n\r\nChanges between **previous release and this release**: https://github.com/ultralytics/yolov5/compare/v5.0...v6.0\r\nChanges **since this release**: https://github.com/ultralytics/yolov5/compare/v6.0...HEAD\r\n\r\n<details>\r\n  <summary>New Features and Bug Fixes (465)</summary>\r\n\r\n* YOLOv5 v5.0 Release patch 1 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2764\r\n* Flask REST API Example by @robmarkcole in https://github.com/ultralytics/yolov5/pull/2732\r\n* ONNX Simplifier by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2815\r\n* YouTube Bug Fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2818\r\n* PyTorch Hub cv2 .save() .show() bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2831\r\n* Create FUNDING.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2832\r\n* Update FUNDING.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2833\r\n* Fix ONNX dynamic axes export support with onnx simplifier, make onnx simplifier optional by @timstokman in https://github.com/ultralytics/yolov5/pull/2856\r\n* Update increment_path() to handle file paths by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2867\r\n* Detection cropping+saving feature addition for detect.py and PyTorch Hub by @Ab-Abdurrahman in https://github.com/ultralytics/yolov5/pull/2827\r\n* Implement yaml.safe_load() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2876\r\n* Cleanup load_image() by @JoshSong in https://github.com/ultralytics/yolov5/pull/2871\r\n* bug fix: switched rows and cols for correct detections in confusion matrix by @MichHeilig in https://github.com/ultralytics/yolov5/pull/2883\r\n* VisDrone2019-DET Dataset Auto-Download by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2882\r\n* Uppercase model filenames enabled by @r-blmnr in https://github.com/ultralytics/yolov5/pull/2890\r\n* ACON activation function by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2893\r\n* Explicit opt function arguments by @fcakyon in https://github.com/ultralytics/yolov5/pull/2817\r\n* Update yolo.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2899\r\n* Update google_utils.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2900\r\n* Add detect.py --hide-conf --hide-labels --line-thickness options by @Ashafix in https://github.com/ultralytics/yolov5/pull/2658\r\n* Default optimize_for_mobile() on TorchScript models by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2908\r\n* Update export.py onnx -> ct print bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2909\r\n* Update export.py for 2 dry runs by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2910\r\n* Add file_size() function by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2911\r\n* Update download() for tar.gz files by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2919\r\n* Update visdrone.yaml bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2921\r\n* changed default value of hide label argument to False by @albinxavi in https://github.com/ultralytics/yolov5/pull/2923\r\n* Change default value of hide-conf argument to false by @albinxavi in https://github.com/ultralytics/yolov5/pull/2925\r\n* test.py native --single-cls by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2928\r\n* Add verbose option to pytorch hub models by @NanoCode012 in https://github.com/ultralytics/yolov5/pull/2926\r\n* ACON Activation batch-size 1 bug patch by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2901\r\n* Check_requirements() enclosing apostrophe bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2929\r\n* Update README.md by @BZFYS in https://github.com/ultralytics/yolov5/pull/2934\r\n* Improved yolo.py profiling by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2940\r\n* Add yolov5/ to sys.path() for *.py subdir exec by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2949\r\n* New Colors() class by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2963\r\n* Update restapi.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2967\r\n* Global Wheat Detection 2020 Dataset Auto-Download by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2968\r\n* Objects365 Dataset AutoDownload by @ferdinandl007 in https://github.com/ultralytics/yolov5/pull/2932\r\n* Update check_requirements() exclude list by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2974\r\n* Make cache saving optional by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2977\r\n* YOLOv5 AWS Inferentia Inplace compatibility updates by @jluntamazon in https://github.com/ultralytics/yolov5/pull/2953\r\n* PyTorch Hub load directly when possible by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/2986\r\n* Improve performance of dataset Logger by @AyushExel in https://github.com/ultralytics/yolov5/pull/2943\r\n* Add unzip flag to download() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3002\r\n* Curl update by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3004\r\n* Update hubconf.py for unified loading by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3005\r\n* hubconf.py bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3007\r\n* Added support for fp16 (half) to export.py by @hodovo in https://github.com/ultralytics/yolov5/pull/3010\r\n* Add is_colab() function by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3018\r\n* Add NMS threshold checks by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3020\r\n* Fix ONNX export using --grid --simplify --dynamic simultaneously by @jylink in https://github.com/ultralytics/yolov5/pull/2982\r\n* download() ThreadPool update by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3027\r\n* FROM nvcr.io/nvidia/pytorch:21.04-py3 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3030\r\n* Fix #3031 : use check_file for --data by @AyushExel in https://github.com/ultralytics/yolov5/pull/3035\r\n* Add get_coco128.sh for downloading the coco128 dataset by @zldrobit in https://github.com/ultralytics/yolov5/pull/3047\r\n* Do not optimize CoreML TorchScript model by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3055\r\n* Fixed #3042 by @kepler62f in https://github.com/ultralytics/yolov5/pull/3058\r\n* Update export.py with --train mode argument by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3066\r\n* Explicitly convert artifact path to posix_path by @AyushExel in https://github.com/ultralytics/yolov5/pull/3067\r\n* Update P5 + P6 model ensembling by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3082\r\n* Update detect.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3087\r\n* Add check_python() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3088\r\n* Add --optimize argument by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3093\r\n* Update train.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3099\r\n* Update GlobalWheat2020.yaml test: # 1276 images by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3101\r\n* detect.py streaming source `--save-crop` bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3102\r\n* Replace print() with logging.info() in trainloader by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3103\r\n* New Ultralytics Colors() Palette by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3046\r\n* Update JSON response by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3139\r\n* Update https://ultralytics.com/images/zidane.jpg by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3140\r\n* Add yolov5/__init__.py by @KC-Zhang in https://github.com/ultralytics/yolov5/pull/3127\r\n* Add `--include torchscript onnx coreml` argument by @CristiFati in https://github.com/ultralytics/yolov5/pull/3137\r\n* TorchScript, ONNX, CoreML Export tutorial title by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3142\r\n* Update requirements.txt `onnx>=1.9.0` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3143\r\n* Scope imports for torch.hub.list() improvement by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3144\r\n* Scope all hubconf.py imports for torch.hub.list() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3145\r\n* SKU-110K CVPR2019 Dataset Auto-Download by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3167\r\n* rename class autoShape -> AutoShape by @developer0hye in https://github.com/ultralytics/yolov5/pull/3173\r\n* Parameterize ONNX `--opset-version` by @CristiFati in https://github.com/ultralytics/yolov5/pull/3154\r\n* Add `device` argument to PyTorch Hub models by @cgerum in https://github.com/ultralytics/yolov5/pull/3104\r\n* Plot labels.png histogram colors by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3192\r\n* Add CAP_PROP_FRAME_COUNT for YouTube sources by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3193\r\n* Silent List Bug Fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3214\r\n* 0 FPS stream bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3216\r\n* Parameterize max_det + inference default at 1000 by @adrianholovaty in https://github.com/ultralytics/yolov5/pull/3215\r\n* TensorBoard add_graph() fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3236\r\n* `plot_one_box()` default `color=(128, 128, 128)` by @yeric1789 in https://github.com/ultralytics/yolov5/pull/3240\r\n* Add Cython by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3217\r\n* Check CoreML models.train() mode by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3262\r\n* Assert `--image-weights` not combined with DDP by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3275\r\n* check `batch_size % utilized_device_count` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3276\r\n* YouTube stream ending fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3277\r\n* Fix TypeError: 'PosixPath' object is not iterable by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3285\r\n* Improves docs and handling of entities and resuming by WandbLogger by @charlesfrye in https://github.com/ultralytics/yolov5/pull/3264\r\n* Update LoadStreams init fallbacks by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3295\r\n* PyTorch Hub `crops = results.crop()` return values by @yeric1789 in https://github.com/ultralytics/yolov5/pull/3282\r\n* Comment Cython by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3297\r\n* Improved check_requirements() robustness by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3298\r\n* Explicit `git clone` master by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3311\r\n* Implement `@torch.no_grad()` decorator by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3312\r\n* Remove www subdomain from https://ultralytics.com by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3320\r\n* TensorBoard DP/DDP graph fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3325\r\n* yolo.py header by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3347\r\n* Updated cache v0.2 with `hashlib` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3350\r\n* Add URL file download to check_file() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3330\r\n* ONNX export in `.train()` mode fix by @ChaofWang in https://github.com/ultralytics/yolov5/pull/3362\r\n* Ignore blank lines in `*.txt` labels by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3366\r\n* update ci-testing.yml by @SkalskiP in https://github.com/ultralytics/yolov5/pull/3322\r\n* Enable direct `--weights URL` definition by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3373\r\n* Add Open in Kaggle badge by @pizzaz93 in https://github.com/ultralytics/yolov5/pull/3368\r\n* `cv2.imread(img, -1)` for IMREAD_UNCHANGED by @tudoulei in https://github.com/ultralytics/yolov5/pull/3379\r\n* COCO evolution fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3388\r\n* Create `is_pip()` function by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3391\r\n* Revert \"`cv2.imread(img, -1)` for IMREAD_UNCHANGED\" by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3395\r\n* Update FLOPs description. by @chocosaj in https://github.com/ultralytics/yolov5/pull/3422\r\n* Parse URL authentication by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3424\r\n* Add FLOPs title to table by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3453\r\n* Suppress jit trace warning + graph once by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3454\r\n* Update MixUp augmentation `alpha=beta=32.0` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3455\r\n* Add `timeout()` class by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3460\r\n* Faster HSV augmentation by @developer0hye in https://github.com/ultralytics/yolov5/pull/3462\r\n* Add `check_git_status()` 5 second timeout by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3464\r\n* Improved `check_requirements()` offline-handling by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3466\r\n* Add `output_names` argument for ONNX export with dynamic axes by @SamSamhuns in https://github.com/ultralytics/yolov5/pull/3456\r\n* Revert FP16 `test.py` and `detect.py` inference to FP32 default by @edificewang in https://github.com/ultralytics/yolov5/pull/3423\r\n* Add additional links/resources to stale.yml message by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3467\r\n* Update stale.yml HUB URL by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3468\r\n* Stale `github.actor` bug fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3483\r\n* Explicit `model.eval()` call `if opt.train=False` by @developer0hye in https://github.com/ultralytics/yolov5/pull/3475\r\n* check_requirements() exclude `opencv-python` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3495\r\n* check_requirements() exclude `opencv-python` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3507\r\n* early assert for cpu and half option by @developer0hye in https://github.com/ultralytics/yolov5/pull/3508\r\n* Update tutorial.ipynb by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3510\r\n* Reduce test.py results spacing by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3511\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3512\r\n* Merge `develop` branch into `master` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3518\r\n* Use multi-threading in cache_labels by @deanmark in https://github.com/ultralytics/yolov5/pull/3505\r\n* Update datasets.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3531\r\n* Update FP16 `--half` argument for test.py and detect.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3532\r\n* Update `dataset_stats()` for HUB by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3536\r\n* On-demand `pycocotools` pip install by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3547\r\n* Update `check_python(minimum=3.6.2)` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3548\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3550\r\n* Remove `opt` from `create_dataloader()`` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3552\r\n* Remove `is_coco` argument from `test()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3553\r\n* Multi-GPU default to single device 0 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3554\r\n* Update test.py profiling by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3555\r\n* Remove redundant speed/study `half` argument by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3557\r\n* Bump pip from 18.1 to 19.2 in /utils/google_app_engine by @dependabot in https://github.com/ultralytics/yolov5/pull/3561\r\n* Refactor test.py arguments by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3558\r\n* Refactor detect.py arguments by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3559\r\n* Refactor models/export.py arguments by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3564\r\n* Refactoring cleanup by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3565\r\n* Ignore Seaborn plot warnings by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3576\r\n* Update export.py, yolo.py `sys.path.append()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3579\r\n* Update stale.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3585\r\n* Add ConfusionMatrix `normalize=True` flag by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3586\r\n* ConfusionMatrix `normalize=True` fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3587\r\n* train.py GPU memory fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3590\r\n* W&B: Allow changed in config variable by @AyushExel in https://github.com/ultralytics/yolov5/pull/3588\r\n* Update `dataset_stats()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3593\r\n* Delete __init__.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3596\r\n* Simplify README.md by @kalenmike in https://github.com/ultralytics/yolov5/pull/3530\r\n* Update datasets.py by @masoodazhar in https://github.com/ultralytics/yolov5/pull/3591\r\n* Download COCO and VOC by default by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3608\r\n* Suppress wandb images size mismatch warning by @AyushExel in https://github.com/ultralytics/yolov5/pull/3611\r\n* Fix incorrect end epoch by @wq9 in https://github.com/ultralytics/yolov5/pull/3612\r\n* Update `check_file()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3622\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3624\r\n* FROM nvcr.io/nvidia/pytorch:21.05-py3 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3633\r\n* Add `**/*.torchscript.pt` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3634\r\n* Update `verify_image_label()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3635\r\n* RUN pip install --no-cache -U torch torchvision by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3637\r\n* Assert non-premature end of JPEG images by @xiaowk5516 in https://github.com/ultralytics/yolov5/pull/3638\r\n* Update CONTRIBUTING.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3645\r\n* Update CONTRIBUTING.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3647\r\n* `is_coco` list fix by @thanhminhmr in https://github.com/ultralytics/yolov5/pull/3646\r\n* Update README.md by @SpongeBab in https://github.com/ultralytics/yolov5/pull/3650\r\n* Update `dataset_stats()` to list of dicts by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3657\r\n* Remove `/weights` directory by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3659\r\n* Update download_weights.sh comment by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3662\r\n* Update train.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3667\r\n* Update `train(hyp, *args)` to accept `hyp` file or dict by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3668\r\n* Update TensorBoard by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3669\r\n* Update `WORLD_SIZE` and `RANK` retrieval by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3670\r\n* Cache v0.3: improved corrupt image/label reporting by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3676\r\n* EMA changes for pre-model's batch_size by @ZouJiu1 in https://github.com/ultralytics/yolov5/pull/3681\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3684\r\n* Update cache check by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3691\r\n* Skip HSV augmentation when hyperparameters are [0, 0, 0] by @thanhminhmr in https://github.com/ultralytics/yolov5/pull/3686\r\n* Slightly modify CLI execution by @lb-desupervised in https://github.com/ultralytics/yolov5/pull/3687\r\n* Reformat by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3694\r\n* Update DDP for `torch.distributed.run` with `gloo` backend by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3680\r\n* Eliminate `total_batch_size` variable by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3697\r\n* Add torch DP warning by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3698\r\n* Add `train.run()` method by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3700\r\n* Update DDP backend `if dist.is_nccl_available()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3705\r\n* [x]W&B: Don't resume transfer learning runs by @AyushExel in https://github.com/ultralytics/yolov5/pull/3604\r\n* Update 4 main ops for paths and .run() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3715\r\n* Fix `img2label_paths()` order by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3720\r\n* Fix typo in export.py by @fcakyon in https://github.com/ultralytics/yolov5/pull/3729\r\n* Backwards compatible cache version checks by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3730\r\n* Update `check_datasets()` for dynamic unzip path by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3732\r\n* Create `data/hyps` directory by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3747\r\n* Force non-zero hyp evolution weights `w` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3748\r\n* edit comment for img2tensor process by @developer0hye in https://github.com/ultralytics/yolov5/pull/3759\r\n* Add optional dataset.yaml `path` attribute by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3753\r\n* COCO annotations JSON fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3764\r\n* Add `xyxy2xywhn()` by @developer0hye in https://github.com/ultralytics/yolov5/pull/3765\r\n* Remove DDP `nn.MultiheadAttention` fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3768\r\n* fix/incorrect_fitness_import by @SkalskiP in https://github.com/ultralytics/yolov5/pull/3770\r\n* W&B: Update Tables API and comply with new dataset_check by @AyushExel in https://github.com/ultralytics/yolov5/pull/3772\r\n* NGA xView 2018 Dataset Auto-Download by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3775\r\n* Update README.md fix banner width by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3785\r\n* Objectness IoU Sort by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3610\r\n* Update objectness IoU sort by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3786\r\n* Create hyp.scratch-p6.yaml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3787\r\n* Fix datasets for aws and get_coco.sh by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3788\r\n* Update seeds for single-GPU reproducibility by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3789\r\n* Update Usage examples by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3790\r\n* nvcr.io/nvidia/pytorch:21.06-py3 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3791\r\n* Update Dockerfile by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3792\r\n* FROM nvcr.io/nvidia/pytorch:21.05-py3 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3794\r\n* Fix competition link by @batrlatom in https://github.com/ultralytics/yolov5/pull/3799\r\n* Fix warmup `accumulate` by @yellowdolphin in https://github.com/ultralytics/yolov5/pull/3722\r\n* Add feature map visualization by @Zigars in https://github.com/ultralytics/yolov5/pull/3804\r\n* Update `feature_visualization()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3807\r\n* Fix for `dataset_stats()` with updated data.yaml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3819\r\n* Move IoU functions to metrics.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3820\r\n* Concise `TransformerBlock()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3821\r\n* Fix `LoadStreams()` dataloader frame skip issue by @feras-oughali in https://github.com/ultralytics/yolov5/pull/3833\r\n* Plot `AutoShape()` detections in ascending order by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3843\r\n* Copy-Paste augmentation for YOLOv5 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3845\r\n* Add EXIF rotation to YOLOv5 Hub inference by @vaaliferov in https://github.com/ultralytics/yolov5/pull/3852\r\n* `--evolve 300` generations CLI argument by @san-soucie in https://github.com/ultralytics/yolov5/pull/3863\r\n* Add multi-stream saving feature by @ketan-b in https://github.com/ultralytics/yolov5/pull/3864\r\n* Models `*.yaml` reformat by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3875\r\n* Create `utils/augmentations.py` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3877\r\n* Improved BGR2RGB speeds by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3880\r\n* Evolution commented `hyp['anchors']` fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3887\r\n* Hub models `map_location=device` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3894\r\n* YOLOv5 + Albumentations integration by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3882\r\n* Save PyTorch Hub models to `/root/hub/cache/dir` by @johnohagan in https://github.com/ultralytics/yolov5/pull/3904\r\n* Feature visualization update by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3920\r\n* Fix `torch.hub.list('ultralytics/yolov5')` pathlib bug by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3921\r\n* Update `setattr()` default for Hub PIL images by @jmiranda-laplateforme in https://github.com/ultralytics/yolov5/pull/3923\r\n* `feature_visualization()` CUDA fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3925\r\n* Update `dataset_stats()` for zipped datasets by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3926\r\n* Fix inconsistent NMS IoU value for COCO by @eldarkurtic in https://github.com/ultralytics/yolov5/pull/3934\r\n* Feature visualization improvements 32 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3947\r\n* Update augmentations.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3948\r\n* Cache v0.4 update by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3954\r\n* Numerical stability fix for Albumentations by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3958\r\n* Update `albumentations>=1.0.2` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3966\r\n* Update `np.random.random()` to `random.random()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3967\r\n* Update requirements.txt `albumentations>=1.0.2` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3972\r\n* `Ensemble()` visualize fix by @seven320 in https://github.com/ultralytics/yolov5/pull/3973\r\n* Update `probability` to `p` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3980\r\n* Alert (no detections) by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3984\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/3996\r\n* Rename `test.py` to `val.py` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4000\r\n* W&B: Proposal for supporting W&B sweeps by @AyushExel in https://github.com/ultralytics/yolov5/pull/3938\r\n* Update greetings.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4024\r\n* Add `--sync-bn` known issue by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4032\r\n* Update greetings.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4037\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4041\r\n* AutoShape PosixPath support by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4047\r\n* `val.py` refactor by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4053\r\n* Module `super().__init__()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4065\r\n* Missing `nc` and `names` handling in check_dataset() by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4066\r\n* Albumentations >= 1.0.3 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4068\r\n* W&B: fix refactor bugs by @AyushExel in https://github.com/ultralytics/yolov5/pull/4069\r\n* Refactor `export.py` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4080\r\n* Addition refactor `export.py` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4089\r\n* Add train.py `--img-size` floor by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4099\r\n* Update resume.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4115\r\n* Fix indentation in `log_training_progress()` by @imyhxy in https://github.com/ultralytics/yolov5/pull/4126\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4134\r\n* detect.py ONNX inference feature by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4073\r\n* Rename `opset_version` to `opset` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4135\r\n* Update train.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4136\r\n* Refactor train.py and val.py `loggers` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4137\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4143\r\n* Add `export.py` ONNX inference suggestion by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4146\r\n* New CSV Logger by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4148\r\n* Update dataset comments by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4162\r\n* Update script headers by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4163\r\n* W&B: Improve documentation of the logger & use wandb assigned run names by default by @AyushExel in https://github.com/ultralytics/yolov5/pull/4174\r\n* Update comments header by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4184\r\n* Train from `--data path/to/dataset.zip` feature by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4185\r\n* Create yolov5-bifpn.yaml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4195\r\n* Update Hub Path inputs by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4200\r\n* W&B: Restructure code to support the new dataset_check() feature by @AyushExel in https://github.com/ultralytics/yolov5/pull/4197\r\n* Update yolov5-bifpn.yaml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4208\r\n* W&B: More improvements and refactoring by @AyushExel in https://github.com/ultralytics/yolov5/pull/4205\r\n* PyCharm reformat by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4209\r\n* Add `@try_except` decorator by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4224\r\n* Explicit `requirements.txt` location by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4225\r\n* Suppress torch 1.9.0 `max_pool2d()` warning by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4227\r\n* Fix weight decay comment by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4228\r\n* Update profiler by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4236\r\n* Add `python train.py --freeze N` argument by @IneovaAI in https://github.com/ultralytics/yolov5/pull/4238\r\n* Update `profile()` for CUDA Memory allocation by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4239\r\n* Add `train.py` and `val.py` callbacks by @kalenmike in https://github.com/ultralytics/yolov5/pull/4220\r\n* W&B: suppress warnings by @AyushExel in https://github.com/ultralytics/yolov5/pull/4257\r\n* Update AP calculation by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4260\r\n* Update Autoshape forward header by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4271\r\n* Update variables by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4273\r\n* Add `DWConvClass()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4274\r\n* Update 'results saved to' string by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4275\r\n* W&B: Fix sweep bug by @AyushExel in https://github.com/ultralytics/yolov5/pull/4276\r\n* Feature `python train.py --cache disk` by @junjihashimoto in https://github.com/ultralytics/yolov5/pull/4049\r\n* Fixed logging level in distributed mode by @imyhxy in https://github.com/ultralytics/yolov5/pull/4284\r\n* Simplify callbacks by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4289\r\n* Evolve in CSV format by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4307\r\n* Update newline by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4308\r\n* Update README.md by @Justsubh01 in https://github.com/ultralytics/yolov5/pull/4309\r\n* Simpler code for DWConvClass by @developer0hye in https://github.com/ultralytics/yolov5/pull/4310\r\n* `int(mlc)` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4385\r\n* fix module count in parse_model by @orangeccc in https://github.com/ultralytics/yolov5/pull/4379\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4387\r\n* W&B: Add advanced features tutorial by @AyushExel in https://github.com/ultralytics/yolov5/pull/4384\r\n* W&B: Fix for 4360 by @AyushExel in https://github.com/ultralytics/yolov5/pull/4388\r\n* Fix rename `utils.google_utils` to `utils.downloads` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4393\r\n* Simplify ONNX inference command by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4405\r\n* No cache option for reading datasets by @ahmadmustafaanis in https://github.com/ultralytics/yolov5/pull/4376\r\n* Update plots.py PIL box plotting by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4407\r\n* Add `yolov5s-ghost.yaml` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4412\r\n* Remove `encoding='ascii'` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4413\r\n* Merge PIL and OpenCV in `plot_one_box(use_pil=False)` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4416\r\n* Standardize headers and docstrings by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4417\r\n* Add `SPPF()` layer by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4420\r\n* Remove DDP process group timeout by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4422\r\n* Update hubconf.py `attempt_load`  import by @OmidSa75 in https://github.com/ultralytics/yolov5/pull/4428\r\n* TFLite preparation by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4436\r\n* Add TensorFlow and TFLite export by @zldrobit in https://github.com/ultralytics/yolov5/pull/1127\r\n* Fix default `--weights yolov5s.pt` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4458\r\n* Fix missing labels after albumentations by @huuquan1994 in https://github.com/ultralytics/yolov5/pull/4455\r\n* `check_requirements(('coremltools',))` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4478\r\n* W&B: Refactor the wandb_utils.py file by @AyushExel in https://github.com/ultralytics/yolov5/pull/4496\r\n* Add `install=True` argument to `check_requirements` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4512\r\n* Automatic TFLite uint8 determination by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4515\r\n* Fix for `python models/yolo.py --profile` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4541\r\n* Auto-fix corrupt JPEGs by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4548\r\n* Fix for corrupt JPEGs auto-fix PR by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4560\r\n* Fix for AP calculation limits 0.0 - 1.0 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4563\r\n* ONNX opset 13 by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4566\r\n* Add EarlyStopping feature by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4576\r\n* Remove `image_weights` DDP code by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4579\r\n* Add `Profile()` profiler by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4587\r\n* Fix bug in `plot_one_box` when label is `None` by @karasawatakumi in https://github.com/ultralytics/yolov5/pull/4588\r\n* Create `Annotator()` class by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4591\r\n* Auto-UTF handling by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4594\r\n* Re-order `plots.py` to class-first by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4595\r\n* Update mosaic plots font size by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4596\r\n* TensorBoard `on_train_end()` speed improvements by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4605\r\n* Auto-download Arial.ttf on init by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4606\r\n* Fix: add P2 layer 21 to yolov5-p2.yaml `Detect()` inputs by @YukunXia in https://github.com/ultralytics/yolov5/pull/4608\r\n* Update `check_git_status()` warning by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4610\r\n* W&B: Don't log models in evolve operation by @AyushExel in https://github.com/ultralytics/yolov5/pull/4611\r\n* Close `matplotlib` plots after opening by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4612\r\n* DDP `torch.jit.trace()` `--sync-bn` fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4615\r\n* Fix for Arial.ttf redownloads with hub inference by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4627\r\n* Fix 2 for Arial.ttf redownloads with hub inference by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4628\r\n* Fix 3 for Arial.ttf redownloads with hub inference by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4629\r\n* Fix for `plot_evolve()` string argument by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4639\r\n* Fix `is_coco` on missing `data['val']` key by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4642\r\n* Fixed 'meta' and 'hyp' may out of order when using evolve by @imyhxy in https://github.com/ultralytics/yolov5/pull/4657\r\n* EarlyStopper updates by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4679\r\n* Optimised Callback Class to Reduce Code and Fix Errors by @kalenmike in https://github.com/ultralytics/yolov5/pull/4688\r\n* Remove redundant `ComputeLoss` code by @zhiqwang in https://github.com/ultralytics/yolov5/pull/4701\r\n* Add suffix checks by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4711\r\n* Fix `check_suffix()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4712\r\n* Update `check_yaml()` comment by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4713\r\n* Add `user_config_dir('Ultralytics')` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4715\r\n* Add `crops = results.crop()` dictionary by @ELHoussineT in https://github.com/ultralytics/yolov5/pull/4676\r\n* Make CONFIG_DIR configurable per environment variable by @joaodiogocosta in https://github.com/ultralytics/yolov5/pull/4727\r\n* Allow `multi_label` option for NMS with PyTorch Hub by @jeanbmar in https://github.com/ultralytics/yolov5/pull/4728\r\n* Scope `onnx-simplifier` requirements check by @Zegorax in https://github.com/ultralytics/yolov5/pull/4730\r\n* Fix `user_config_dir()` for GCP/AWS functions by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4726\r\n* Fix `--data from_HUB.zip` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4732\r\n* Improved `detect.py` timing by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4741\r\n* Add `callbacks` to train function in W&B sweep by @jveitchmichaelis in https://github.com/ultralytics/yolov5/pull/4742\r\n* Fix `is_writeable()` for 3 OS support by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4743\r\n* Add TF and TFLite models to `.gitignore` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4747\r\n* Add TF and TFLite models to `.dockerignore` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4748\r\n* Update `is_writeable()` for 2 methods by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4744\r\n* Centralize `user_config_dir()` decision making by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4755\r\n* Replace `path.absolute()` with `path.resolve()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4763\r\n* Add TensorFlow formats to `export.py` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4479\r\n* Update ci-testing.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4770\r\n* Update ci-testing.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4772\r\n* Shuffle all 4(or 9) images in mosaic augmentation by @kimnamu in https://github.com/ultralytics/yolov5/pull/4787\r\n* Add `--int8` argument by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4799\r\n* Evolution `--resume` fix by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4802\r\n* Refactor `forward()` method profiling by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4816\r\n* Feature/fix export on url by @kalenmike in https://github.com/ultralytics/yolov5/pull/4823\r\n* Fix 'PyTorch starting from' for URL weights by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4828\r\n* Multiple TF export improvements by @zldrobit in https://github.com/ultralytics/yolov5/pull/4824\r\n* Fix val.py study plot by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4831\r\n* `PIL.ImageDraw.text(anchor=...)` removal, reduce to `>=7.1.2` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4842\r\n* Sorted datasets update to `cache_labels()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4845\r\n* Single `cache_version` definition by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4846\r\n* W&B: Enable login timeout by @AyushExel in https://github.com/ultralytics/yolov5/pull/4843\r\n* Consolidate `init_seeds()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4849\r\n* Refactor argparser printing to `print_args()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4850\r\n* Update `sys.path.append(str(ROOT))` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4852\r\n* Simplify `check_requirements()` usage by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4855\r\n* Update greetings.yml by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4856\r\n* Update Dockerfile by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4861\r\n* Update Dockerfile by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4862\r\n* Fix DDP destruction `LOGGER.info()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4863\r\n* Annotator `check_font()` RANK -1 remove progress by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4864\r\n* W&B: Login only in master processes by @AyushExel in https://github.com/ultralytics/yolov5/pull/4866\r\n* W&B: Fix dataset check by @AyushExel in https://github.com/ultralytics/yolov5/pull/4879\r\n* Fix arg help string to match 'classes' arg name. by @NauchtanRobotics in https://github.com/ultralytics/yolov5/pull/4893\r\n* Avoid out-of-image class labels by @zldrobit in https://github.com/ultralytics/yolov5/pull/4902\r\n* TensorFlow.js export enhancements by @zldrobit in https://github.com/ultralytics/yolov5/pull/4905\r\n* fix zipfile name for coco128-segments by @SamFC10 in https://github.com/ultralytics/yolov5/pull/4914\r\n* Replace `os.system('unzip file.zip')` -> `ZipFile.extractall()` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4919\r\n* Fix `root` referenced before assignment by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4920\r\n* Add Slack Forum badge to README by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4930\r\n* Validate `best.pt` on train end by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4889\r\n* Update default Albumentations by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4931\r\n* Scope `check_file()` search space by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4933\r\n* Update Dockerfile by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4935\r\n* Automatic Chinese fonts plotting by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4951\r\n* Allow YOLOv5 execution from arbitrary `cwd` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4954\r\n* Update relative `ROOT` logic by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4955\r\n* Add `roboflow` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4956\r\n* Fix `isascii()` method calls for python 3.6 by @d57montes in https://github.com/ultralytics/yolov5/pull/4958\r\n* Fix relative `ROOT` Pytorch Hub custom model bug by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4974\r\n* Add Roboflow to README by @kalenmike in https://github.com/ultralytics/yolov5/pull/4972\r\n* Update wandb_utils.py by @d57montes in https://github.com/ultralytics/yolov5/pull/4953\r\n* Add Hub custom models to CI tests by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4978\r\n* Faster `--img 64` CI tests by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4979\r\n* Clickable CI badge by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4985\r\n* Revert `torch.hub.load()` test by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/4986\r\n* Fix URL parsing bug by @kalenmike in https://github.com/ultralytics/yolov5/pull/4998\r\n* Update W&B README by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5006\r\n* Add YOLOv5 Survey link to README.md by @kalenmike in https://github.com/ultralytics/yolov5/pull/5000\r\n* Update train.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5014\r\n* Update README.md by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5015\r\n* Compute loss on final val by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5017\r\n* Fix missing `opt.device` on `--task study` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5031\r\n* Fix pylint: do not use bare 'except' by @zhiqwang in https://github.com/ultralytics/yolov5/pull/5025\r\n* Clip TTA Augmented Tails by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5028\r\n* Implement `--save-period` locally by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5047\r\n* Fix `yaml.safe_load()` ignore emoji errors by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5060\r\n* Update Dockerfile to `ADD` Arial.ttf by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5084\r\n* Update datasets.py comments by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5088\r\n* Re-open IP-camera videostream if disconnected by @EgOrlukha in https://github.com/ultralytics/yolov5/pull/5074\r\n* Fix SKU-110K HUB: `OSError` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5106\r\n* Add `requests` to requirements.txt by @sandstorm12 in https://github.com/ultralytics/yolov5/pull/5112\r\n* Pass `LOCAL_RANK` to `torch_distributed_zero_first()` by @qiningonline in https://github.com/ultralytics/yolov5/pull/5114\r\n* Fix different devices bug when moving model from GPU to CPU by @SamFC10 in https://github.com/ultralytics/yolov5/pull/5110\r\n* Pass `--device` for `--task study` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5118\r\n* Update val.py `--speed` and `--study` usages by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5120\r\n* Update val.py `pad = 0.0 if task == 'speed' else 0.5` by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5121\r\n* Update plots.py by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5127\r\n* Fix `ROOT` as relative path by @maltelorbach in https://github.com/ultralytics/yolov5/pull/5129\r\n* Refactor `Detect()` anchors for ONNX <> OpenCV DNN compatibility by @SamFC10 in https://github.com/ultralytics/yolov5/pull/4833\r\n* Add OpenCV DNN option for ONNX inference by @glenn-jocher in https://github.com/ultralytics/yolov5/pull/5136\r\n* update `detect.py` in order to support torch script by @andreiionutdamian in https://github.com/ultralytics/yolov5/pull/5109\r\n\r\n</details>\r\n\r\n<details>\r\n  <summary>New Contributors (73)</summary>\r\n\r\n* @robmarkcole made their first contribution in https://github.com/ultralytics/yolov5/pull/2732\r\n* @timstokman made their first contribution in https://github.com/ultralytics/yolov5/pull/2856\r\n* @Ab-Abdurrahman made their first contribution in https://github.com/ultralytics/yolov5/pull/2827\r\n* @JoshSong made their first contribution in https://github.com/ultralytics/yolov5/pull/2871\r\n* @MichHeilig made their first contribution in https://github.com/ultralytics/yolov5/pull/2883\r\n* @r-blmnr made their first contribution in https://github.com/ultralytics/yolov5/pull/2890\r\n* @fcakyon made their first contribution in https://github.com/ultralytics/yolov5/pull/2817\r\n* @Ashafix made their first contribution in https://github.com/ultralytics/yolov5/pull/2658\r\n* @albinxavi made their first contribution in https://github.com/ultralytics/yolov5/pull/2923\r\n* @BZFYS made their first contribution in https://github.com/ultralytics/yolov5/pull/2934\r\n* @ferdinandl007 made their first contribution in https://github.com/ultralytics/yolov5/pull/2932\r\n* @jluntamazon made their first contribution in https://github.com/ultralytics/yolov5/pull/2953\r\n* @hodovo made their first contribution in https://github.com/ultralytics/yolov5/pull/3010\r\n* @jylink made their first contribution in https://github.com/ultralytics/yolov5/pull/2982\r\n* @kepler62f made their first contribution in https://github.com/ultralytics/yolov5/pull/3058\r\n* @KC-Zhang made their first contribution in https://github.com/ultralytics/yolov5/pull/3127\r\n* @CristiFati made their first contribution in https://github.com/ultralytics/yolov5/pull/3137\r\n* @cgerum made their first contribution in https://github.com/ultralytics/yolov5/pull/3104\r\n* @adrianholovaty made their first contribution in https://github.com/ultralytics/yolov5/pull/3215\r\n* @yeric1789 made their first contribution in https://github.com/ultralytics/yolov5/pull/3240\r\n* @charlesfrye made their first contribution in https://github.com/ultralytics/yolov5/pull/3264\r\n* @ChaofWang made their first contribution in https://github.com/ultralytics/yolov5/pull/3362\r\n* @pizzaz93 made their first contribution in https://github.com/ultralytics/yolov5/pull/3368\r\n* @tudoulei made their first contribution in https://github.com/ultralytics/yolov5/pull/3379\r\n* @chocosaj made their first contribution in https://github.com/ultralytics/yolov5/pull/3422\r\n* @SamSamhuns made their first contribution in https://github.com/ultralytics/yolov5/pull/3456\r\n* @edificewang made their first contribution in https://github.com/ultralytics/yolov5/pull/3423\r\n* @deanmark made their first contribution in https://github.com/ultralytics/yolov5/pull/3505\r\n* @dependabot made their first contribution in https://github.com/ultralytics/yolov5/pull/3561\r\n* @kalenmike made their first contribution in https://github.com/ultralytics/yolov5/pull/3530\r\n* @masoodazhar made their first contribution in https://github.com/ultralytics/yolov5/pull/3591\r\n* @wq9 made their first contribution in https://github.com/ultralytics/yolov5/pull/3612\r\n* @xiaowk5516 made their first contribution in https://github.com/ultralytics/yolov5/pull/3638\r\n* @thanhminhmr made their first contribution in https://github.com/ultralytics/yolov5/pull/3646\r\n* @SpongeBab made their first contribution in https://github.com/ultralytics/yolov5/pull/3650\r\n* @ZouJiu1 made their first contribution in https://github.com/ultralytics/yolov5/pull/3681\r\n* @lb-desupervised made their first contribution in https://github.com/ultralytics/yolov5/pull/3687\r\n* @batrlatom made their first contribution in https://github.com/ultralytics/yolov5/pull/3799\r\n* @yellowdolphin made their first contribution in https://github.com/ultralytics/yolov5/pull/3722\r\n* @Zigars made their first contribution in https://github.com/ultralytics/yolov5/pull/3804\r\n* @feras-oughali made their first contribution in https://github.com/ultralytics/yolov5/pull/3833\r\n* @vaaliferov made their first contribution in https://github.com/ultralytics/yolov5/pull/3852\r\n* @san-soucie made their first contribution in https://github.com/ultralytics/yolov5/pull/3863\r\n* @ketan-b made their first contribution in https://github.com/ultralytics/yolov5/pull/3864\r\n* @johnohagan made their first contribution in https://github.com/ultralytics/yolov5/pull/3904\r\n* @jmiranda-laplateforme made their first contribution in https://github.com/ultralytics/yolov5/pull/3923\r\n* @eldarkurtic made their first contribution in https://github.com/ultralytics/yolov5/pull/3934\r\n* @seven320 made their first contribution in https://github.com/ultralytics/yolov5/pull/3973\r\n* @imyhxy made their first contribution in https://github.com/ultralytics/yolov5/pull/4126\r\n* @IneovaAI made their first contribution in https://github.com/ultralytics/yolov5/pull/4238\r\n* @junjihashimoto made their first contribution in https://github.com/ultralytics/yolov5/pull/4049\r\n* @Justsubh01 made their first contribution in https://github.com/ultralytics/yolov5/pull/4309\r\n* @orangeccc made their first contribution in https://github.com/ultralytics/yolov5/pull/4379\r\n* @ahmadmustafaanis made their first contribution in https://github.com/ultralytics/yolov5/pull/4376\r\n* @OmidSa75 made their first contribution in https://github.com/ultralytics/yolov5/pull/4428\r\n* @huuquan1994 made their first contribution in https://github.com/ultralytics/yolov5/pull/4455\r\n* @karasawatakumi made their first contribution in https://github.com/ultralytics/yolov5/pull/4588\r\n* @YukunXia made their first contribution in https://github.com/ultralytics/yolov5/pull/4608\r\n* @zhiqwang made their first contribution in https://github.com/ultralytics/yolov5/pull/4701\r\n* @ELHoussineT made their first contribution in https://github.com/ultralytics/yolov5/pull/4676\r\n* @joaodiogocosta made their first contribution in https://github.com/ultralytics/yolov5/pull/4727\r\n* @jeanbmar made their first contribution in https://github.com/ultralytics/yolov5/pull/4728\r\n* @Zegorax made their first contribution in https://github.com/ultralytics/yolov5/pull/4730\r\n* @jveitchmichaelis made their first contribution in https://github.com/ultralytics/yolov5/pull/4742\r\n* @kimnamu made their first contribution in https://github.com/ultralytics/yolov5/pull/4787\r\n* @NauchtanRobotics made their first contribution in https://github.com/ultralytics/yolov5/pull/4893\r\n* @SamFC10 made their first contribution in https://github.com/ultralytics/yolov5/pull/4914\r\n* @d57montes made their first contribution in https://github.com/ultralytics/yolov5/pull/4958\r\n* @EgOrlukha made their first contribution in https://github.com/ultralytics/yolov5/pull/5074\r\n* @sandstorm12 made their first contribution in https://github.com/ultralytics/yolov5/pull/5112\r\n* @qiningonline made their first contribution in https://github.com/ultralytics/yolov5/pull/5114\r\n* @maltelorbach made their first contribution in https://github.com/ultralytics/yolov5/pull/5129\r\n* @andreiionutdamian made their first contribution in https://github.com/ultralytics/yolov5/pull/5109\r\n\r\n</details>\r\n",
        "dateCreated": "2021-10-12T06:47:18Z",
        "datePublished": "2021-10-12T07:08:07Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v6.0",
        "name": "v6.0 - YOLOv5n 'Nano' models, Roboflow integration, TensorFlow export, OpenCV DNN support",
        "tag_name": "v6.0",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v6.0",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/50779534",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v6.0"
      },
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "This release implements **YOLOv5-P6** models and retrained **YOLOv5-P5** models. All model sizes YOLOv5s/m/l/x are now available in  both P5 and P6 architectures:\r\n\r\n* **YOLOv5-P5** models (same architecture as v4.0 release): **3 output layers** P3, P4, P5 at strides 8, 16, 32, trained at `--img 640`\r\n```bash\r\npython detect.py --weights yolov5s.pt  # P5 models\r\n                           yolov5m.pt\r\n                           yolov5l.pt\r\n                           yolov5x.pt\r\n```\r\n* **YOLOv5-P6** models: **4 output layers** P3, P4, P5, P6 at strides 8, 16, 32, 64 trained at `--img 1280`\r\n```bash\r\npython detect.py --weights yolov5s6.pt  # P6 models\r\n                           yolov5m6.pt\r\n                           yolov5l6.pt\r\n                           yolov5x6.pt\r\n```\r\n\r\nExample usage:\r\n```bash\r\n# Command Line\r\npython detect.py --weights yolov5m.pt --img 640  # P5 model at 640\r\npython detect.py --weights yolov5m6.pt --img 640  # P6 model at 640\r\npython detect.py --weights yolov5m6.pt --img 1280  # P6 model at 1280\r\n```\r\n```python\r\n# PyTorch Hub\r\nmodel = torch.hub.load('ultralytics/yolov5', 'yolov5m6')  #  P6 model\r\nresults = model(imgs, size=1280)  # inference at 1280\r\n```\r\n\r\n## Notable Updates\r\n\r\n- **YouTube Inference**: Direct inference from YouTube videos, i.e. `python detect.py --source 'https://youtu.be/NUsoVlDFqZg'`. Live streaming videos and normal videos supported. (https://github.com/ultralytics/yolov5/pull/2752)\r\n- **AWS Integration**: Amazon AWS integration and new [AWS Quickstart Guide](https://github.com/ultralytics/yolov5/wiki/AWS-Quickstart) for simple EC2 instance YOLOv5 training and resuming of interrupted Spot instances. (https://github.com/ultralytics/yolov5/pull/2185)\r\n- **Supervise.ly Integration**: New integration with the [Supervisely Ecosystem](https://github.com/supervisely-ecosystem) for training and deploying YOLOv5 models with Supervise.ly (https://github.com/ultralytics/yolov5/issues/2518)\r\n- **Improved W&B Integration:** Allows saving datasets and models directly to [Weights & Biases](https://wandb.ai/site?utm_campaign=repo_yolo_readme). This allows for --resume directly from W&B (useful for temporary environments like Colab), as well as enhanced visualization tools. See this [blog](https://wandb.ai/cayush/yolov5-dsviz-demo/reports/Object-Detection-with-YOLO-and-Weights-Biases--Vmlldzo0NTgzMjk) by @AyushExel for details.  (https://github.com/ultralytics/yolov5/pull/2125)\r\n\r\n\r\n## Updated Results\r\n\r\nP6 models include an extra P6/64 output layer for detection of larger objects, and benefit the most from training at higher resolution. For this reason we trained all P5 models at 640, and all P6 models at 1280.\r\n\r\n<p align=\"center\"><img width=\"800\" src=\"https://user-images.githubusercontent.com/26833433/114313216-f0a5e100-9af5-11eb-8445-c682b60da2e3.png\"></p>\r\n<details>\r\n  <summary>YOLOv5-P5 640 Figure (click to expand)</summary>\r\n  \r\n<p align=\"center\"><img width=\"800\" src=\"https://user-images.githubusercontent.com/26833433/114313219-f1d70e00-9af5-11eb-9973-52b1f98d321a.png\"></p>\r\n</details>\r\n<details>\r\n  <summary>Figure Notes (click to expand)</summary>\r\n  \r\n  * GPU Speed measures end-to-end time per image averaged over 5000 COCO val2017 images using a V100 GPU with batch size 32, and includes image preprocessing, PyTorch FP16 inference, postprocessing and NMS. \r\n  * EfficientDet data from [google/automl](https://github.com/google/automl) at batch size 8.\r\n  * **Reproduce** by `python test.py --task study --data coco.yaml --iou 0.7 --weights yolov5s6.pt yolov5m6.pt yolov5l6.pt yolov5x6.pt`\r\n</details>\r\n\r\n- **April 11, 2021**: [v5.0 release](https://github.com/ultralytics/yolov5/releases/tag/v5.0): YOLOv5-P6 1280 models, [AWS](https://github.com/ultralytics/yolov5/wiki/AWS-Quickstart), [Supervise.ly](https://github.com/ultralytics/yolov5/issues/2518) and [YouTube](https://github.com/ultralytics/yolov5/pull/2752) integrations.\r\n- **January 5, 2021**: [v4.0 release](https://github.com/ultralytics/yolov5/releases/tag/v4.0): nn.SiLU() activations, [Weights & Biases](https://wandb.ai/site?utm_campaign=repo_yolo_readme) logging, [PyTorch Hub](https://pytorch.org/hub/ultralytics_yolov5/) integration.\r\n- **August 13, 2020**: [v3.0 release](https://github.com/ultralytics/yolov5/releases/tag/v3.0): nn.Hardswish() activations, data autodownload, native AMP.\r\n- **July 23, 2020**: [v2.0 release](https://github.com/ultralytics/yolov5/releases/tag/v2.0): improved model definition, training and mAP.\r\n\r\n\r\n## Pretrained Checkpoints\r\n\r\n[assets]: https://github.com/ultralytics/yolov5/releases\r\n\r\nModel |size<br><sup>(pixels) |mAP<sup>val<br>0.5:0.95 |mAP<sup>test<br>0.5:0.95 |mAP<sup>val<br>0.5 |Speed<br><sup>V100 (ms) | |params<br><sup>(M) |FLOPS<br><sup>640 (B)\r\n---   |---  |---        |---         |---             |---                |---|---              |---\r\n[YOLOv5s][assets]    |640  |36.7     |36.7     |55.4     |**2.0** | |7.3   |17.0\r\n[YOLOv5m][assets]    |640  |44.5     |44.5     |63.1     |2.7     | |21.4  |51.3\r\n[YOLOv5l][assets]    |640  |48.2     |48.2     |66.9     |3.8     | |47.0  |115.4\r\n[YOLOv5x][assets]    |640  |**50.4** |**50.4** |**68.8** |6.1     | |87.7  |218.8\r\n| | | | | | || |\r\n[YOLOv5s6][assets]   |1280 |43.3     |43.3     |61.9     |**4.3** | |12.7  |17.4\r\n[YOLOv5m6][assets]   |1280 |50.5     |50.5     |68.7     |8.4     | |35.9  |52.4\r\n[YOLOv5l6][assets]   |1280 |53.4     |53.4     |71.1     |12.3    | |77.2  |117.7\r\n[YOLOv5x6][assets]   |1280 |**54.4** |**54.4** |**72.0** |22.4    | |141.8 |222.9\r\n| | | | | | || |\r\n[YOLOv5x6][assets] TTA |1280 |**55.0** |**55.0** |**72.0** |70.8 | |-  |-\r\n\r\n<details>\r\n  <summary>Table Notes (click to expand)</summary>\r\n  \r\n  * AP<sup>test</sup> denotes COCO [test-dev2017](http://cocodataset.org/#upload) server results, all other AP results denote val2017 accuracy.  \r\n  * AP values are for single-model single-scale unless otherwise noted. **Reproduce mAP** by `python test.py --data coco.yaml --img 640 --conf 0.001 --iou 0.65`  \r\n  * Speed<sub>GPU</sub> averaged over 5000 COCO val2017 images using a GCP [n1-standard-16](https://cloud.google.com/compute/docs/machine-types#n1_standard_machine_types) V100 instance, and includes FP16 inference, postprocessing and NMS. **Reproduce speed** by `python test.py --data coco.yaml --img 640 --conf 0.25 --iou 0.45`  \r\n  * All checkpoints are trained to 300 epochs with default settings and hyperparameters (no autoaugmentation). \r\n  * Test Time Augmentation ([TTA](https://github.com/ultralytics/yolov5/issues/303)) includes reflection and scale augmentation. **Reproduce TTA** by `python test.py --data coco.yaml --img 1536 --iou 0.7 --augment`\r\n</details>\r\n\r\n\r\n## Changelog\r\n\r\nChanges between **previous release and this release**: https://github.com/ultralytics/yolov5/compare/v4.0...v5.0\r\nChanges **since this release**: https://github.com/ultralytics/yolov5/compare/v5.0...HEAD\r\n\r\n**Click a section** below to **expand details**:\r\n<details>\r\n  <summary>Implemented Enhancements (26) </summary>\r\n\r\n- Return predictions as json [\\#2703](https://github.com/ultralytics/yolov5/issues/2703)\r\n- Single channel image training\uff1f [\\#2609](https://github.com/ultralytics/yolov5/issues/2609)\r\n- Images in MPO Format are considered corrupted [\\#2446](https://github.com/ultralytics/yolov5/issues/2446)\r\n- Improve Validation Visualization [\\#2384](https://github.com/ultralytics/yolov5/issues/2384)\r\n-  Add ASFF \\(three fuse feature layers\\) int the Head for V5\\(s,m,l,x\\) [\\#2348](https://github.com/ultralytics/yolov5/issues/2348)\r\n- Dear author, can you provide a visualization scheme for YOLOV5 feature graphs during detect.py? Thank you! [\\#2259](https://github.com/ultralytics/yolov5/issues/2259)\r\n- Dataloader [\\#2201](https://github.com/ultralytics/yolov5/issues/2201)\r\n- Update Train Custom Data wiki page [\\#2187](https://github.com/ultralytics/yolov5/issues/2187)\r\n- Multi-class NMS [\\#2162](https://github.com/ultralytics/yolov5/issues/2162)\r\n- \ud83d\udca1Idea: Mosaic cropping using segmentation labels [\\#2151](https://github.com/ultralytics/yolov5/issues/2151)\r\n- Improving Confusion Matrix Interpretability: FP and FN vectors should be switched to align with Predicted and True axis [\\#2071](https://github.com/ultralytics/yolov5/issues/2071)\r\n- Interpreting model YoloV5 by Grad-cam [\\#2065](https://github.com/ultralytics/yolov5/issues/2065)\r\n- Output optimal confidence threshold based on PR curve [\\#2048](https://github.com/ultralytics/yolov5/issues/2048)\r\n- is it valuable that add --cache-images  option to detect.py? [\\#2004](https://github.com/ultralytics/yolov5/issues/2004)\r\n- I want to change the anchor box to anchor circles, where do you think the change to be made ? [\\#1987](https://github.com/ultralytics/yolov5/issues/1987)\r\n- Support for imgaug [\\#1954](https://github.com/ultralytics/yolov5/issues/1954)\r\n- Any plan for Knowledge Distillation? [\\#1762](https://github.com/ultralytics/yolov5/issues/1762)\r\n- Is there a wasy to run detections on a video/webcam/rtrsp, etc EVERY x SECONDS? [\\#1742](https://github.com/ultralytics/yolov5/issues/1742)\r\n- Can yolov5 support rotated target detection? [\\#1728](https://github.com/ultralytics/yolov5/issues/1728)\r\n- Deploying yolov5 to TorchServe \\(GPU compatible\\) [\\#1681](https://github.com/ultralytics/yolov5/issues/1681)\r\n- Why diffrent colors of bboxs? [\\#1638](https://github.com/ultralytics/yolov5/issues/1638)\r\n- Yet another export yolov5 models to ONNX and inference with TensorRT [\\#1597](https://github.com/ultralytics/yolov5/issues/1597)\r\n- Rerange the blocks of Focus Layer  into `row major` to be compatible with  tensorflow `SpaceToDepth` [\\#413](https://github.com/ultralytics/yolov5/issues/413)\r\n- YouTube Livestream Detection [\\#2752](https://github.com/ultralytics/yolov5/pull/2752) ([ben-milanko](https://github.com/ben-milanko))\r\n- Add TransformerLayer, TransformerBlock, C3TR modules [\\#2333](https://github.com/ultralytics/yolov5/pull/2333) ([dingyiwei](https://github.com/dingyiwei))\r\n- Improved W&B integration  [\\#2125](https://github.com/ultralytics/yolov5/pull/2125) ([AyushExel](https://github.com/AyushExel))\r\n</details>\r\n\r\n<details>\r\n  <summary>Fixed Bugs (73)</summary>\r\n\r\n- it seems that check\\_wandb\\_resume don't support multiple input files of images. [\\#2716](https://github.com/ultralytics/yolov5/issues/2716)\r\n- ip camera or web camera. error: \\(-215:Assertion failed\\) !ss ize.empty\\(\\) in function 'cv::resize' [\\#2709](https://github.com/ultralytics/yolov5/issues/2709)\r\n- Model predict with forward will fail if PIL image does not have filename attribute [\\#2702](https://github.com/ultralytics/yolov5/issues/2702)\r\n- \u2754Question Whenever i try to run my model i run into this error AttributeError: 'NoneType' object has no attribute 'startswith' from wandbutils.py line 161 I wonder why ? Any workaround or fix [\\#2697](https://github.com/ultralytics/yolov5/issues/2697)\r\n- coremltools no longer included in docker container [\\#2686](https://github.com/ultralytics/yolov5/issues/2686)\r\n- 'LoadImages' path handling appears to be broken [\\#2618](https://github.com/ultralytics/yolov5/issues/2618)\r\n- CUDA memory leak [\\#2586](https://github.com/ultralytics/yolov5/issues/2586)\r\n- UnboundLocalError: local variable 'wandb\\_logger' referenced before assignment [\\#2562](https://github.com/ultralytics/yolov5/issues/2562)\r\n- RuntimeError: CUDA error: CUBLAS\\_STATUS\\_INTERNAL\\_ERROR when calling `cublasCreate\\(handle\\)` [\\#2417](https://github.com/ultralytics/yolov5/issues/2417)\r\n- CUDNN Mapping Error [\\#2415](https://github.com/ultralytics/yolov5/issues/2415)\r\n- Can't train in DDP mode after recent update [\\#2405](https://github.com/ultralytics/yolov5/issues/2405)\r\n- a bug about function bbox\\_iou\\(\\) [\\#2376](https://github.com/ultralytics/yolov5/issues/2376)\r\n- Training got stuck when I used DistributedDataParallel mode but  dataParallel mode is useful [\\#2375](https://github.com/ultralytics/yolov5/issues/2375)\r\n- Something wrong with fixing ema [\\#2343](https://github.com/ultralytics/yolov5/issues/2343)\r\n- Conversion to CoreML fails when running with --batch 2 [\\#2322](https://github.com/ultralytics/yolov5/issues/2322)\r\n- The \"fitness\" function  in train.py. [\\#2303](https://github.com/ultralytics/yolov5/issues/2303)\r\n- Error \"Directory already existed\" happen when training with multiple GPUs [\\#2275](https://github.com/ultralytics/yolov5/issues/2275)\r\n- self.balance = {3: \\[4.0, 1.0, 0.4\\], 4: \\[4.0, 1.0, 0.25, 0.06\\], 5: \\[4.0, 1.0, 0.25, 0.06, .02\\]}\\[det.nl\\] [\\#2255](https://github.com/ultralytics/yolov5/issues/2255)\r\n- Cannot run model with URL as argument [\\#2246](https://github.com/ultralytics/yolov5/issues/2246)\r\n- Yolov5 crashes with RTSP stream analysis [\\#2226](https://github.com/ultralytics/yolov5/issues/2226)\r\n- interruption during evolve [\\#2218](https://github.com/ultralytics/yolov5/issues/2218)\r\n- I am a student of Tsinghua University, doing research in Tencent. When I train with yolov5, the following problems appear\uff0cSincerely hope to get help, [\\#2203](https://github.com/ultralytics/yolov5/issues/2203)\r\n- Frame Loss in video stream  [\\#2196](https://github.com/ultralytics/yolov5/issues/2196)\r\n- wandb.ai not logging epochs vs metrics/losses instead uses step [\\#2175](https://github.com/ultralytics/yolov5/issues/2175)\r\n- Evolve is leaking files [\\#2142](https://github.com/ultralytics/yolov5/issues/2142)\r\n- Issue in torchscript model inference  [\\#2129](https://github.com/ultralytics/yolov5/issues/2129)\r\n- RuntimeError: CUDA error: device-side assert triggered [\\#2124](https://github.com/ultralytics/yolov5/issues/2124)\r\n- In 'evolve' mode, If the original hyp is 0, It will never update [\\#2122](https://github.com/ultralytics/yolov5/issues/2122)\r\n- Caching image path [\\#2121](https://github.com/ultralytics/yolov5/issues/2121)\r\n- can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu\\(\\) to copy the tensor to host memory first [\\#2106](https://github.com/ultralytics/yolov5/issues/2106)\r\n- Error in creating model with Ghost modules [\\#2081](https://github.com/ultralytics/yolov5/issues/2081)\r\n- TypeError: int\\(\\) can't convert non-string with explicit base [\\#2066](https://github.com/ultralytics/yolov5/issues/2066)\r\n- \\[Pytorch Hub\\] Hub CI is broken with latest master of yolo5 example.  [\\#2050](https://github.com/ultralytics/yolov5/issues/2050)\r\n- Problems when downloading requirements [\\#2047](https://github.com/ultralytics/yolov5/issues/2047)\r\n- detect.py - images always saved [\\#2029](https://github.com/ultralytics/yolov5/issues/2029)\r\n- thop and pycocotools shouldn't be hard requirements to train a model [\\#2014](https://github.com/ultralytics/yolov5/issues/2014)\r\n- CoreML export failure [\\#2007](https://github.com/ultralytics/yolov5/issues/2007)\r\n- loss function like has a bug [\\#1988](https://github.com/ultralytics/yolov5/issues/1988)\r\n- CoreML export failure: unexpected number of inputs for node x.2 \\(\\_convolution\\): 13 [\\#1945](https://github.com/ultralytics/yolov5/issues/1945)\r\n- torch.nn.modules.module.ModuleAttributeError: 'Hardswish' object has no attribute 'inplace' [\\#1939](https://github.com/ultralytics/yolov5/issues/1939)\r\n- runs not logging separately in wandb.ai [\\#1937](https://github.com/ultralytics/yolov5/issues/1937)\r\n- wrong batch size after --resume on multiple GPUs [\\#1936](https://github.com/ultralytics/yolov5/issues/1936)\r\n- TypeError: int\\(\\) can't convert non-string with explicit base [\\#1927](https://github.com/ultralytics/yolov5/issues/1927)\r\n- RuntimeError: DataLoader worker [\\#1908](https://github.com/ultralytics/yolov5/issues/1908)\r\n- Unable to export weights into onnx [\\#1900](https://github.com/ultralytics/yolov5/issues/1900)\r\n- CUDA Initialization Warning on Docker when not passing in gpu [\\#1891](https://github.com/ultralytics/yolov5/issues/1891)\r\n- Issue with github api rate limiting [\\#1890](https://github.com/ultralytics/yolov5/issues/1890)\r\n- wandb: ERROR Error while calling W&B API: Error 1062: Duplicate entry '189160-gbp6y2en' for key 'PRIMARY' \\(\\<Response \\[409\\]\\>\\) [\\#1878](https://github.com/ultralytics/yolov5/issues/1878)\r\n- Broken pipe [\\#1859](https://github.com/ultralytics/yolov5/issues/1859)\r\n- detection.py [\\#1858](https://github.com/ultralytics/yolov5/issues/1858)\r\n- Getting error on loading custom trained model [\\#1856](https://github.com/ultralytics/yolov5/issues/1856)\r\n- W&B id is always the same and continue with the old logging. [\\#1851](https://github.com/ultralytics/yolov5/issues/1851)\r\n- pytorch1.7 is not completely support.'inplace'! 'inplace'! 'inplace'! [\\#1832](https://github.com/ultralytics/yolov5/issues/1832)\r\n- Validation errors are NaN [\\#1804](https://github.com/ultralytics/yolov5/issues/1804)\r\n- Error Loading custom model weights with pytorch.hub.load  [\\#1788](https://github.com/ultralytics/yolov5/issues/1788)\r\n- 'cap' object  is not self. initialized [\\#1781](https://github.com/ultralytics/yolov5/issues/1781)\r\n- ValueError: API key must be 40 characters long, yours was 1 [\\#1777](https://github.com/ultralytics/yolov5/issues/1777)\r\n- scipy [\\#1766](https://github.com/ultralytics/yolov5/issues/1766)\r\n- error of missing key 'anchors' in hyp.scratch.yaml [\\#1744](https://github.com/ultralytics/yolov5/issues/1744)\r\n- mss grab color conversion problem using TorchHub [\\#1735](https://github.com/ultralytics/yolov5/issues/1735)\r\n- Video rotation when running detection. [\\#1725](https://github.com/ultralytics/yolov5/issues/1725)\r\n- RuntimeError: CUDA out of memory. Tried to allocate 294.00 MiB \\(GPU 0; 6.00 GiB total capacity; 118.62 MiB already allocated; 4.20 GiB free; 362.00 MiB reserved in total by PyTorch\\) [\\#1698](https://github.com/ultralytics/yolov5/issues/1698)\r\n- Errors on MAC [\\#1690](https://github.com/ultralytics/yolov5/issues/1690)\r\n- RuntimeError: DataLoader worker \\(pid\\(s\\) 296430\\) exited unexpectedly [\\#1675](https://github.com/ultralytics/yolov5/issues/1675)\r\n- Non-positive Stride [\\#1671](https://github.com/ultralytics/yolov5/issues/1671)\r\n- gbk error. How can I solve it? [\\#1669](https://github.com/ultralytics/yolov5/issues/1669)\r\n- CoreML export failure: unexpected number of inputs for node x.2 \\(\\_convolution\\): 13 [\\#1667](https://github.com/ultralytics/yolov5/issues/1667)\r\n- RuntimeError: Given groups=1, weight of size \\[32, 128, 1, 1\\], expected input\\[1, 64, 32, 32\\] to have 128 channels, but got 64 channels instead [\\#1627](https://github.com/ultralytics/yolov5/issues/1627)\r\n- segmentation fault [\\#1620](https://github.com/ultralytics/yolov5/issues/1620)\r\n- Getting different output sizes when using exported torchscript [\\#1562](https://github.com/ultralytics/yolov5/issues/1562)\r\n- some bugs when training [\\#1547](https://github.com/ultralytics/yolov5/issues/1547)\r\n- Evolve getting error [\\#1319](https://github.com/ultralytics/yolov5/issues/1319)\r\n- AssertionError: Image Not Found ../dataset/images/train/4501.jpeg [\\#195](https://github.com/ultralytics/yolov5/issues/195)\r\n</details>\r\n\r\n<details>\r\n  <summary>Closed Issues (42)</summary>\r\n\r\n- Can feed tensor the model [\\#2722](https://github.com/ultralytics/yolov5/issues/2722)\r\n- hello, everyone, In order to modify the network more conveniently based on this rep., I restructure the network part, which is divided into backbone, neck, head [\\#2710](https://github.com/ultralytics/yolov5/issues/2710)\r\n- Differentiate between normal banner and LED banner    [\\#2647](https://github.com/ultralytics/yolov5/issues/2647)\r\n- \ud83d\udc4b Hello @Wilson-inclaims, thank you for your interest in \ud83d\ude80 YOLOv5! Please visit our \u2b50\ufe0f \\[Tutorials\\]\\(https://github.com/ultralytics/yolov5/wiki\\#tutorials\\) to get started, where you can find quickstart guides for simple tasks like \\[Custom Data Training\\]\\(https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data\\) all the way to advanced concepts like \\[Hyperparameter Evolution\\]\\(https://github.com/ultralytics/yolov5/issues/607\\). [\\#2516](https://github.com/ultralytics/yolov5/issues/2516)\r\n- I got a runtimerror when I run classifier.py to train my own dataset. [\\#2438](https://github.com/ultralytics/yolov5/issues/2438)\r\n- RuntimeError: a view of a leaf Variable that requires grad is being used in an in-place operation. [\\#2403](https://github.com/ultralytics/yolov5/issues/2403)\r\n- \ud83c\udf1f\ud83d\udca1 YOLOv5 Study: batch size [\\#2377](https://github.com/ultralytics/yolov5/issues/2377)\r\n- export.py export onnx for gpu failed [\\#2365](https://github.com/ultralytics/yolov5/issues/2365)\r\n- in \\_ddp\\_init\\_helper     expect\\_sparse\\_gradient\\) RuntimeError: Model replicas must have an equal number of parameters. [\\#2311](https://github.com/ultralytics/yolov5/issues/2311)\r\n- Custom dataset training using YOLOv5 [\\#2296](https://github.com/ultralytics/yolov5/issues/2296)\r\n- label format [\\#2293](https://github.com/ultralytics/yolov5/issues/2293)\r\n- MAP NOT PRINTING [\\#2283](https://github.com/ultralytics/yolov5/issues/2283)\r\n- Why didn't I get results in my video test? [\\#2277](https://github.com/ultralytics/yolov5/issues/2277)\r\n- Label Missing: for images and labels... 203 found, 50 missing, 0 empty, 0 corrupted: 100% [\\#2268](https://github.com/ultralytics/yolov5/issues/2268)\r\n- Pytorch Hub inference returns different results than detect.py [\\#2224](https://github.com/ultralytics/yolov5/issues/2224)\r\n- yolov5x train.py error [\\#2181](https://github.com/ultralytics/yolov5/issues/2181)\r\n- degrees is radians? [\\#2160](https://github.com/ultralytics/yolov5/issues/2160)\r\n- AssertionError: Image Not Found [\\#2130](https://github.com/ultralytics/yolov5/issues/2130)\r\n- How to load custom trained model to detect sample image? [\\#2097](https://github.com/ultralytics/yolov5/issues/2097)\r\n- YOLOv5 installed failed on Macbook M1 [\\#2075](https://github.com/ultralytics/yolov5/issues/2075)\r\n- How to set the number of seconds to detect once [\\#2072](https://github.com/ultralytics/yolov5/issues/2072)\r\n- Where the changes should be made to detect horizontal line and vertical lines? Can anyone discus elaborately? [\\#2070](https://github.com/ultralytics/yolov5/issues/2070)\r\n- Video inference stops after a certain number of frames [\\#2064](https://github.com/ultralytics/yolov5/issues/2064)\r\n- Can't YOLOV5 be detected with multithreading? [\\#1979](https://github.com/ultralytics/yolov5/issues/1979)\r\n- I want to make a images file what divided images in test.py  [\\#1931](https://github.com/ultralytics/yolov5/issues/1931)\r\n- different image size w/ torchscript windows c++ [\\#1920](https://github.com/ultralytics/yolov5/issues/1920)\r\n- run detect the result \uff0cthe Image don't have box [\\#1910](https://github.com/ultralytics/yolov5/issues/1910)\r\n- resume problem [\\#1884](https://github.com/ultralytics/yolov5/issues/1884)\r\n- Detect source as .txt error [\\#1877](https://github.com/ultralytics/yolov5/issues/1877)\r\n- yolov5 v4.0 tensorrt deployment [\\#1874](https://github.com/ultralytics/yolov5/issues/1874)\r\n- Hyperparameter Evolution: load dataset every time [\\#1864](https://github.com/ultralytics/yolov5/issues/1864)\r\n- Caching images problem [\\#1862](https://github.com/ultralytics/yolov5/issues/1862)\r\n- About Release v4.0 [\\#1841](https://github.com/ultralytics/yolov5/issues/1841)\r\n- @glenn best practices for running trained YOLOv5 models in new python environments is to use PyTorch Hub. See PyTorch Hub Tutorial: [\\#1789](https://github.com/ultralytics/yolov5/issues/1789)\r\n- yolov5x.pt is not compatible with ./models/yolov5x.yam [\\#1721](https://github.com/ultralytics/yolov5/issues/1721)\r\n- Parameter '--device' doesn't work! [\\#1706](https://github.com/ultralytics/yolov5/issues/1706)\r\n- Thank you for your issue!  [\\#1687](https://github.com/ultralytics/yolov5/issues/1687)\r\n- Convert the label format [\\#1652](https://github.com/ultralytics/yolov5/issues/1652)\r\n- Autorun not working [\\#1599](https://github.com/ultralytics/yolov5/issues/1599)\r\n- When model.model\\[-1\\]. export = False in export.py, coreml export failing. Please check. [\\#1491](https://github.com/ultralytics/yolov5/issues/1491)\r\n- Error 'AttributeError: 'str' object has no attribute 'get'' at running train.py [\\#1479](https://github.com/ultralytics/yolov5/issues/1479)\r\n- Docker image is not working, ```torch.nn.modules.module.ModuleAttributeError: 'Hardswish' object has no attribute 'inplace```' [\\#1327](https://github.com/ultralytics/yolov5/issues/1327)\r\n</details>\r\n\r\n<details>\r\n  <summary>Merged Pull Requests (172)</summary>\r\n\r\n- Tensorboard model visualization bug fix [\\#2758](https://github.com/ultralytics/yolov5/pull/2758) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- utils/wandb\\_logging PEP8 reformat [\\#2755](https://github.com/ultralytics/yolov5/pull/2755) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- torch.cuda.amp bug fix [\\#2750](https://github.com/ultralytics/yolov5/pull/2750) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- autocast enable=torch.cuda.is\\_available\\(\\) [\\#2748](https://github.com/ultralytics/yolov5/pull/2748) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add Hub results.pandas\\(\\) method [\\#2725](https://github.com/ultralytics/yolov5/pull/2725) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update README with collapsable notes [\\#2721](https://github.com/ultralytics/yolov5/pull/2721) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Fix \\#2716: Add support for list-of-directory data format for wandb [\\#2719](https://github.com/ultralytics/yolov5/pull/2719) ([AyushExel](https://github.com/AyushExel))\r\n- Updated filename attributes for YOLOv5 Hub BytesIO [\\#2718](https://github.com/ultralytics/yolov5/pull/2718) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Updated filename attributes for YOLOv5 Hub results [\\#2708](https://github.com/ultralytics/yolov5/pull/2708) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- pip install coremltools onnx [\\#2690](https://github.com/ultralytics/yolov5/pull/2690) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- autoShape forward im = np.asarray\\(im\\)  \\# to numpy [\\#2689](https://github.com/ultralytics/yolov5/pull/2689) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- PyTorch Hub model.save\\(\\) increment as runs/hub/exp [\\#2684](https://github.com/ultralytics/yolov5/pull/2684) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Fix: \\#2674 [\\#2683](https://github.com/ultralytics/yolov5/pull/2683) ([AyushExel](https://github.com/AyushExel))\r\n- Update README with Tips for Best Results tutorial [\\#2682](https://github.com/ultralytics/yolov5/pull/2682) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Disallow resume for dataset uploading [\\#2657](https://github.com/ultralytics/yolov5/pull/2657) ([AyushExel](https://github.com/AyushExel))\r\n- Speed profiling improvements [\\#2648](https://github.com/ultralytics/yolov5/pull/2648) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add tqdm pbar.close\\(\\) [\\#2644](https://github.com/ultralytics/yolov5/pull/2644) ([zzttqu](https://github.com/zzttqu))\r\n- PyTorch Hub amp.autocast\\(\\) inference [\\#2641](https://github.com/ultralytics/yolov5/pull/2641) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- PyTorch Hub custom model to CUDA device fix [\\#2636](https://github.com/ultralytics/yolov5/pull/2636) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Improve git\\_describe\\(\\) fix 1 [\\#2635](https://github.com/ultralytics/yolov5/pull/2635) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Fix: evolve with wandb [\\#2634](https://github.com/ultralytics/yolov5/pull/2634) ([AyushExel](https://github.com/AyushExel))\r\n- Improve git\\_describe\\(\\) [\\#2633](https://github.com/ultralytics/yolov5/pull/2633) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- FROM nvcr.io/nvidia/pytorch:21.03-py3 [\\#2623](https://github.com/ultralytics/yolov5/pull/2623) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Remove conflicting nvidia-tensorboard package [\\#2622](https://github.com/ultralytics/yolov5/pull/2622) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update Detections\\(\\) self.n comment [\\#2620](https://github.com/ultralytics/yolov5/pull/2620) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update detections\\(\\) self.t = tuple\\(\\) [\\#2617](https://github.com/ultralytics/yolov5/pull/2617) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Create date\\_modified\\(\\) [\\#2616](https://github.com/ultralytics/yolov5/pull/2616) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Added '.mpo' to supported image formats [\\#2615](https://github.com/ultralytics/yolov5/pull/2615) ([maxupp](https://github.com/maxupp))\r\n- Fix Indentation in test.py [\\#2614](https://github.com/ultralytics/yolov5/pull/2614) ([AyushExel](https://github.com/AyushExel))\r\n- Update git\\_describe\\(\\) for remote dir usage [\\#2606](https://github.com/ultralytics/yolov5/pull/2606) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Remove Cython from requirements.txt [\\#2604](https://github.com/ultralytics/yolov5/pull/2604) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- resume.py fix DDP typo [\\#2603](https://github.com/ultralytics/yolov5/pull/2603) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update segment2box\\(\\) comment [\\#2600](https://github.com/ultralytics/yolov5/pull/2600) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Save webcam results, add --nosave option [\\#2598](https://github.com/ultralytics/yolov5/pull/2598) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- YOLOv5 PyTorch Hub models \\>\\> check\\_requirements\\(\\) [\\#2592](https://github.com/ultralytics/yolov5/pull/2592) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- YOLOv5 PyTorch Hub models \\>\\> check\\_requirements\\(\\) [\\#2591](https://github.com/ultralytics/yolov5/pull/2591) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- YOLOv5 PyTorch Hub models \\>\\> check\\_requirements\\(\\) [\\#2588](https://github.com/ultralytics/yolov5/pull/2588) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- W&B DDP fix 2 [\\#2587](https://github.com/ultralytics/yolov5/pull/2587) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- W&B resume ddp from run link fix [\\#2579](https://github.com/ultralytics/yolov5/pull/2579) ([AyushExel](https://github.com/AyushExel))\r\n- YOLOv5 PyTorch Hub models \\>\\> check\\_requirements\\(\\) [\\#2577](https://github.com/ultralytics/yolov5/pull/2577) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update tensorboard\\>=2.4.1 [\\#2576](https://github.com/ultralytics/yolov5/pull/2576) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Enhanced check\\_requirements\\(\\) with auto-install [\\#2575](https://github.com/ultralytics/yolov5/pull/2575) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- W&B DDP fix [\\#2574](https://github.com/ultralytics/yolov5/pull/2574) ([AyushExel](https://github.com/AyushExel))\r\n- check\\_requirements\\(\\) exclude pycocotools, thop [\\#2571](https://github.com/ultralytics/yolov5/pull/2571) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update Detections\\(\\) times=None [\\#2570](https://github.com/ultralytics/yolov5/pull/2570) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add opencv-contrib-python to requirements.txt [\\#2564](https://github.com/ultralytics/yolov5/pull/2564) ([youngjinshin](https://github.com/youngjinshin))\r\n- Supervisely Ecosystem [\\#2519](https://github.com/ultralytics/yolov5/pull/2519) ([mkolomeychenko](https://github.com/mkolomeychenko))\r\n- add option to disable half precision when testing [\\#2507](https://github.com/ultralytics/yolov5/pull/2507) ([bfineran](https://github.com/bfineran))\r\n- PyTorch Hub models default to CUDA:0 if available [\\#2472](https://github.com/ultralytics/yolov5/pull/2472) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Scipy kmeans-robust autoanchor update [\\#2470](https://github.com/ultralytics/yolov5/pull/2470) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Be able to create dataset from annotated images only [\\#2466](https://github.com/ultralytics/yolov5/pull/2466) ([kinoute](https://github.com/kinoute))\r\n- autoShape\\(\\) speed profiling update [\\#2460](https://github.com/ultralytics/yolov5/pull/2460) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add autoShape\\(\\) speed profiling [\\#2459](https://github.com/ultralytics/yolov5/pull/2459) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- CVPR 2021 Argoverse-HD autodownload curl [\\#2455](https://github.com/ultralytics/yolov5/pull/2455) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- labels.jpg class names [\\#2454](https://github.com/ultralytics/yolov5/pull/2454) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update test.py --task train val study [\\#2453](https://github.com/ultralytics/yolov5/pull/2453) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Integer printout [\\#2450](https://github.com/ultralytics/yolov5/pull/2450) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- DDP after autoanchor reorder [\\#2421](https://github.com/ultralytics/yolov5/pull/2421) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- CVPR 2021 Argoverse-HD autodownload fix [\\#2418](https://github.com/ultralytics/yolov5/pull/2418) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- CVPR 2021 Argoverse-HD dataset autodownload support [\\#2400](https://github.com/ultralytics/yolov5/pull/2400) ([karthiksharma98](https://github.com/karthiksharma98))\r\n- GCP sudo docker userdata.sh [\\#2393](https://github.com/ultralytics/yolov5/pull/2393) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- AWS wait && echo \"All tasks done.\" [\\#2391](https://github.com/ultralytics/yolov5/pull/2391) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- bbox\\_iou\\(\\) stability and speed improvements [\\#2385](https://github.com/ultralytics/yolov5/pull/2385) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- image weights compatible faster random index generator v2 for mosaic \u2026 [\\#2383](https://github.com/ultralytics/yolov5/pull/2383) ([developer0hye](https://github.com/developer0hye))\r\n- ENV HOME=/usr/src/app [\\#2382](https://github.com/ultralytics/yolov5/pull/2382) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- --no-cache notebook [\\#2381](https://github.com/ultralytics/yolov5/pull/2381) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Resume with custom anchors fix [\\#2361](https://github.com/ultralytics/yolov5/pull/2361) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Anchor override for training from scratch [\\#2350](https://github.com/ultralytics/yolov5/pull/2350) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- faster random index generator for mosaic augmentation [\\#2345](https://github.com/ultralytics/yolov5/pull/2345) ([developer0hye](https://github.com/developer0hye))\r\n- Add --label-smoothing eps argument to train.py \\(default 0.0\\) [\\#2344](https://github.com/ultralytics/yolov5/pull/2344) ([ptran1203](https://github.com/ptran1203))\r\n- FROM nvcr.io/nvidia/pytorch:21.02-py3 [\\#2341](https://github.com/ultralytics/yolov5/pull/2341) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- EMA bug fix 2 [\\#2330](https://github.com/ultralytics/yolov5/pull/2330) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- remove TTA 1 pixel offset [\\#2325](https://github.com/ultralytics/yolov5/pull/2325) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update Dockerfile install htop [\\#2320](https://github.com/ultralytics/yolov5/pull/2320) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update test.py [\\#2319](https://github.com/ultralytics/yolov5/pull/2319) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- final\\_epoch EMA bug fix [\\#2317](https://github.com/ultralytics/yolov5/pull/2317) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Fix labels being missed when image extension appears twice in filename [\\#2300](https://github.com/ultralytics/yolov5/pull/2300) ([idenc](https://github.com/idenc))\r\n- W&B entity support [\\#2298](https://github.com/ultralytics/yolov5/pull/2298) ([toretak](https://github.com/toretak))\r\n- GPU export options [\\#2297](https://github.com/ultralytics/yolov5/pull/2297) ([toretak](https://github.com/toretak))\r\n- Improved model+EMA checkpointing fix [\\#2295](https://github.com/ultralytics/yolov5/pull/2295) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Improved model+EMA checkpointing [\\#2292](https://github.com/ultralytics/yolov5/pull/2292) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update train.py [\\#2290](https://github.com/ultralytics/yolov5/pull/2290) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Amazon AWS EC2 startup and re-startup scripts patch [\\#2282](https://github.com/ultralytics/yolov5/pull/2282) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- FLOPS min stride 32 [\\#2276](https://github.com/ultralytics/yolov5/pull/2276) ([xiaowo1996](https://github.com/xiaowo1996))\r\n- Update Dockerfile with apt install zip [\\#2274](https://github.com/ultralytics/yolov5/pull/2274) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update greetings.yml for auto-rebase on PR [\\#2272](https://github.com/ultralytics/yolov5/pull/2272) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update minimum stride to 32 [\\#2266](https://github.com/ultralytics/yolov5/pull/2266) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Robust objectness loss balancing [\\#2256](https://github.com/ultralytics/yolov5/pull/2256) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update inference default to multi\\_label=False [\\#2252](https://github.com/ultralytics/yolov5/pull/2252) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Improved hubconf.py CI tests [\\#2251](https://github.com/ultralytics/yolov5/pull/2251) ([glenn-jocher](https://github.com/glenn-jocher))\r\n-  YOLOv5 Hub URL inference bug fix [\\#2250](https://github.com/ultralytics/yolov5/pull/2250) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Unified hub and detect.py box and labels plotting [\\#2243](https://github.com/ultralytics/yolov5/pull/2243) ([kinoute](https://github.com/kinoute))\r\n- Add isdocker\\(\\) [\\#2232](https://github.com/ultralytics/yolov5/pull/2232) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add check\\_imshow\\(\\) [\\#2231](https://github.com/ultralytics/yolov5/pull/2231) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update CI badge [\\#2230](https://github.com/ultralytics/yolov5/pull/2230) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update yolo.py channel array [\\#2223](https://github.com/ultralytics/yolov5/pull/2223) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- LoadStreams\\(\\) frame loss bug fix [\\#2222](https://github.com/ultralytics/yolov5/pull/2222) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- TTA augument boxes one pixel shifted in de-flip ud and lr [\\#2219](https://github.com/ultralytics/yolov5/pull/2219) ([VdLMV](https://github.com/VdLMV))\r\n- Dynamic ONNX engine generation [\\#2208](https://github.com/ultralytics/yolov5/pull/2208) ([aditya-dl](https://github.com/aditya-dl))\r\n- YOLOv5 PyTorch Hub results.save\\(\\) method retains filenames [\\#2194](https://github.com/ultralytics/yolov5/pull/2194) ([dan0nchik](https://github.com/dan0nchik))\r\n- YOLOv5 Segmentation Dataloader Updates [\\#2188](https://github.com/ultralytics/yolov5/pull/2188) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Amazon AWS EC2 startup and re-startup scripts [\\#2185](https://github.com/ultralytics/yolov5/pull/2185) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- PyTorch Hub results.save\\('path/to/dir'\\) [\\#2179](https://github.com/ultralytics/yolov5/pull/2179) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Changed socket port and added timeout [\\#2176](https://github.com/ultralytics/yolov5/pull/2176) ([NanoCode012](https://github.com/NanoCode012))\r\n- Update utils/datasets.py to support .webp files [\\#2174](https://github.com/ultralytics/yolov5/pull/2174) ([Transigent](https://github.com/Transigent))\r\n- Update requirements.txt [\\#2173](https://github.com/ultralytics/yolov5/pull/2173) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update detect.py [\\#2167](https://github.com/ultralytics/yolov5/pull/2167) ([ab-101](https://github.com/ab-101))\r\n- Update data-autodownload background tasks [\\#2154](https://github.com/ultralytics/yolov5/pull/2154) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Linear LR scheduler option [\\#2150](https://github.com/ultralytics/yolov5/pull/2150) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update train.py batch\\_size \\* 2 [\\#2149](https://github.com/ultralytics/yolov5/pull/2149) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update train.py test batch\\_size [\\#2148](https://github.com/ultralytics/yolov5/pull/2148) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- LoadImages\\(\\) pathlib update [\\#2140](https://github.com/ultralytics/yolov5/pull/2140) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Unique \\*.cache filenames fix [\\#2134](https://github.com/ultralytics/yolov5/pull/2134) ([train255](https://github.com/train255))\r\n- Making inference thread-safe by avoiding mutable state in Detect class [\\#2120](https://github.com/ultralytics/yolov5/pull/2120) ([olehb](https://github.com/olehb))\r\n- Make normalized confusion matrix more interpretable  [\\#2114](https://github.com/ultralytics/yolov5/pull/2114) ([rbavery](https://github.com/rbavery))\r\n- Update plot\\_study\\(\\) [\\#2112](https://github.com/ultralytics/yolov5/pull/2112) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update test.py --task speed and study [\\#2099](https://github.com/ultralytics/yolov5/pull/2099) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add variable-stride inference support [\\#2091](https://github.com/ultralytics/yolov5/pull/2091) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add Kaggle badge [\\#2090](https://github.com/ultralytics/yolov5/pull/2090) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add Amazon Deep Learning AMI environment [\\#2085](https://github.com/ultralytics/yolov5/pull/2085) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add YOLOv5-P6 models [\\#2083](https://github.com/ultralytics/yolov5/pull/2083) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- GhostConv update [\\#2082](https://github.com/ultralytics/yolov5/pull/2082) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- W&B epoch logging update [\\#2073](https://github.com/ultralytics/yolov5/pull/2073) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update to colors.TABLEAU\\_COLORS [\\#2069](https://github.com/ultralytics/yolov5/pull/2069) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update run-once lines [\\#2058](https://github.com/ultralytics/yolov5/pull/2058) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Metric-Confidence plots feature addition [\\#2057](https://github.com/ultralytics/yolov5/pull/2057) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add histogram equalization fcn [\\#2049](https://github.com/ultralytics/yolov5/pull/2049) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Confusion matrix native image-space fix [\\#2046](https://github.com/ultralytics/yolov5/pull/2046) ([ramonhollands](https://github.com/ramonhollands))\r\n- Check im.format during dataset caching [\\#2042](https://github.com/ultralytics/yolov5/pull/2042) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add exclude tuple to check\\_requirements\\(\\) [\\#2041](https://github.com/ultralytics/yolov5/pull/2041) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- data-autodownload background tasks [\\#2034](https://github.com/ultralytics/yolov5/pull/2034) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Docker pyYAML\\>=5.3.1 fix [\\#2031](https://github.com/ultralytics/yolov5/pull/2031) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- PyYAML==5.4.1 [\\#2030](https://github.com/ultralytics/yolov5/pull/2030) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update autoshape .print\\(\\) and .save\\(\\) [\\#2022](https://github.com/ultralytics/yolov5/pull/2022) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update requirements.txt [\\#2021](https://github.com/ultralytics/yolov5/pull/2021) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update general.py check\\_git\\_status\\(\\) fix [\\#2020](https://github.com/ultralytics/yolov5/pull/2020) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update inference multiple-counting [\\#2019](https://github.com/ultralytics/yolov5/pull/2019) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update ci-testing.yml --img 128 [\\#2018](https://github.com/ultralytics/yolov5/pull/2018) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update google\\_utils.py attempt\\_download\\(\\) fix [\\#2017](https://github.com/ultralytics/yolov5/pull/2017) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update Dockerfile [\\#2016](https://github.com/ultralytics/yolov5/pull/2016) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- check\\_git\\_status\\(\\) Windows fix [\\#2015](https://github.com/ultralytics/yolov5/pull/2015) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- --verbose on final\\_epoch [\\#1997](https://github.com/ultralytics/yolov5/pull/1997) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add xywhn2xyxy\\(\\) [\\#1983](https://github.com/ultralytics/yolov5/pull/1983) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update Dockerfile [\\#1982](https://github.com/ultralytics/yolov5/pull/1982) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- check\\_git\\_status\\(\\) asserts [\\#1977](https://github.com/ultralytics/yolov5/pull/1977) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Update train.py [\\#1972](https://github.com/ultralytics/yolov5/pull/1972) ([Anon-Artist](https://github.com/Anon-Artist))\r\n- Update autoanchor.py [\\#1971](https://github.com/ultralytics/yolov5/pull/1971) ([Anon-Artist](https://github.com/Anon-Artist))\r\n- Update yolo.py [\\#1970](https://github.com/ultralytics/yolov5/pull/1970) ([Anon-Artist](https://github.com/Anon-Artist))\r\n- Update test.py [\\#1969](https://github.com/ultralytics/yolov5/pull/1969) ([Anon-Artist](https://github.com/Anon-Artist))\r\n- Update plots.py [\\#1968](https://github.com/ultralytics/yolov5/pull/1968) ([Anon-Artist](https://github.com/Anon-Artist))\r\n- check\\_git\\_status\\(\\) when not exist /workspace [\\#1966](https://github.com/ultralytics/yolov5/pull/1966) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Security Fix for Arbitrary Code Execution - huntr.dev [\\#1962](https://github.com/ultralytics/yolov5/pull/1962) ([huntr-helper](https://github.com/huntr-helper))\r\n- prevent check\\_git\\_status\\(\\) in docker images [\\#1951](https://github.com/ultralytics/yolov5/pull/1951) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add ComputeLoss\\(\\) class [\\#1950](https://github.com/ultralytics/yolov5/pull/1950) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- W&B mosaic log bug fix [\\#1949](https://github.com/ultralytics/yolov5/pull/1949) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Start setting up the improved W&B integration [\\#1948](https://github.com/ultralytics/yolov5/pull/1948) ([AyushExel](https://github.com/AyushExel))\r\n- W&B log epoch [\\#1946](https://github.com/ultralytics/yolov5/pull/1946) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Daemon thread mosaic plots fix [\\#1943](https://github.com/ultralytics/yolov5/pull/1943) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Fix batch-size on resume for multi-gpu [\\#1942](https://github.com/ultralytics/yolov5/pull/1942) ([NanoCode012](https://github.com/NanoCode012))\r\n- Add nn.SiLU inplace in attempt\\_load\\(\\) [\\#1940](https://github.com/ultralytics/yolov5/pull/1940) ([1991wangliang](https://github.com/1991wangliang))\r\n- GitHub API rate limit fallback [\\#1930](https://github.com/ultralytics/yolov5/pull/1930) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- check\\_git\\_status\\(\\) bug fix [\\#1925](https://github.com/ultralytics/yolov5/pull/1925) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- check\\_git\\_status\\(\\) improvements [\\#1916](https://github.com/ultralytics/yolov5/pull/1916) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Colorstr\\(\\) updates [\\#1909](https://github.com/ultralytics/yolov5/pull/1909) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- PyTorch Hub results.render\\(\\) [\\#1897](https://github.com/ultralytics/yolov5/pull/1897) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Docker CUDA warning fix [\\#1895](https://github.com/ultralytics/yolov5/pull/1895) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- GitHub API rate limit fix [\\#1894](https://github.com/ultralytics/yolov5/pull/1894) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add colorstr\\(\\) [\\#1887](https://github.com/ultralytics/yolov5/pull/1887) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- auto-verbose if nc \\<= 20 [\\#1869](https://github.com/ultralytics/yolov5/pull/1869) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- actions/stale@v3 [\\#1868](https://github.com/ultralytics/yolov5/pull/1868) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- Add check\\_requirements\\(\\) [\\#1853](https://github.com/ultralytics/yolov5/pull/1853) ([glenn-jocher](https://github.com/glenn-jocher))\r\n- W&B ID reset on training completion  [\\#1852](https://github.com/ultralytics/yolov5/pull/1852) ([TommyZihao](https://github.com/TommyZihao))\r\n</details>",
        "dateCreated": "2021-04-11T17:23:47Z",
        "datePublished": "2021-04-11T17:25:13Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v5.0",
        "name": "v5.0 - YOLOv5-P6 1280 models, AWS, Supervise.ly and YouTube integrations",
        "tag_name": "v5.0",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v5.0",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/41222566",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v5.0"
      },
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "This release implements two architecture changes to YOLOv5, as well as various bug fixes and performance improvements.\r\n\r\n## Breaking Changes\r\n\r\n- nn.SiLU() activations replace nn.LeakyReLU(0.1) and nn.Hardswish() activations used in previous versions. nn.SiLU() was introduced in PyTorch 1.7.0 (https://pytorch.org/docs/stable/generated/torch.nn.SiLU.html), and due to the recent timeframe certain export pipelines may be temporarily unavailable (CoreML possibly) without updates to the associated tools (i.e. coremltools).\r\n\r\n## Bug Fixes\r\n- Multi-GPU --resume #1810\r\n- leaf Variable inplace bug fix #1759\r\n- Various additional bug fixes contained in PRs #1235 through #1837\r\n\r\n## Added Functionality\r\n- Weights & Biases (W&B) Feature Addition #1235\r\n- Utils reorganization #1392\r\n- PyTorch Hub and autoShape update #1415\r\n- W&B artifacts feature addition #1712\r\n- Various additional feature additions contained in PRs #1235 through #1837\r\n\r\n\r\n## Updated Results\r\n\r\nLatest models are all slightly smaller to due removal of one convolution within each bottleneck, which have been renamed as C3() modules now in light of the 3 I/O convolutions each one does vs the 4 in the standard CSP bottleneck. The previous manual concatenation and LeakyReLU(0.1) activations have both removed, simplifying the architecture, reducing parameter count, and better exploiting the .fuse() operation at inference time.\r\n\r\nnn.SiLU() activations replace nn.LeakyReLU(0.1) and nn.Hardswish() activations throughout the model, simplifying the architecture as we now only have one single activation function used everywhere rather than the two types before.\r\n\r\nIn general the changes result in smaller models (89.0M params -> 87.7M YOLOv5x), faster inference times (6.9ms -> 6.0ms), and improved mAP (49.2 -> 50.1) for all models except YOLOv5s, which reduced mAP slightly (37.0 -> 36.8). In general the largest models benefit the most from this update. YOLOv5x in particular is now above 50.0 mAP at --img-size 640, which may be the first time this is possible at 640 resolution for any architecture I'm aware of (correct me if I'm wrong though).\r\n\r\n<img src=\"https://user-images.githubusercontent.com/26833433/103594689-455e0e00-4eae-11eb-9cdf-7d753e2ceeeb.png\" width=\"1000\">** GPU Speed measures end-to-end time per image averaged over 5000 COCO val2017 images using a V100 GPU with batch size 32, and includes image preprocessing, PyTorch FP16 inference, postprocessing and NMS. EfficientDet data from [google/automl](https://github.com/google/automl) at batch size 8.\r\n\r\n\r\n## Pretrained Checkpoints\r\n\r\n| Model | size | AP<sup>val</sup> | AP<sup>test</sup> | AP<sub>50</sub> | Speed<sub>V100</sub> | FPS<sub>V100</sub> || params | GFLOPS |\r\n|---------- |------ |------ |------ |------ | -------- | ------| ------ |------  |  :------: |\r\n| [YOLOv5s](https://github.com/ultralytics/yolov5/releases)    |640 |36.8     |36.8     |55.6     |**2.2ms** |**455** ||7.3M   |17.0\r\n| [YOLOv5m](https://github.com/ultralytics/yolov5/releases)    |640 |44.5     |44.5     |63.1     |2.9ms     |345     ||21.4M  |51.3\r\n| [YOLOv5l](https://github.com/ultralytics/yolov5/releases)    |640 |48.1     |48.1     |66.4     |3.8ms     |264     ||47.0M  |115.4\r\n| [YOLOv5x](https://github.com/ultralytics/yolov5/releases)    |640 |**50.1** |**50.1** |**68.7** |6.0ms     |167     ||87.7M  |218.8\r\n| | | | | | | || |\r\n| [YOLOv5x](https://github.com/ultralytics/yolov5/releases) + TTA |832 |**51.9** |**51.9** |**69.6** |24.9ms |40      ||87.7M  |1005.3\r\n\r\n",
        "dateCreated": "2021-01-05T03:54:09Z",
        "datePublished": "2021-01-05T04:26:03Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v4.0",
        "name": "v4.0 - nn.SiLU() activations, Weights & Biases logging, PyTorch Hub integration",
        "tag_name": "v4.0",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v4.0",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/35978533",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v4.0"
      },
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "This release aggregates various minor bug fixes and performance improvements since the main v3.0 release and incorporates PyTorch 1.7.0 compatibility updates. v3.1 models share weights with v3.0 models but contain minor module updates (`inplace` fields for nn.Hardswish() activations) for native PyTorch 1.7.0 compatibility. For PyTorch 1.7.0 release updates see https://github.com/pytorch/pytorch/releases/tag/v1.7.0.\r\n\r\n\r\n## Breaking Changes\r\n\r\n- 'giou' hyperparameter has been renamed to 'box' to better reflect a criteria-agnostic regression loss term  (https://github.com/ultralytics/yolov5/pull/1120)\r\n\r\n\r\n## Bug Fixes\r\n- PyTorch 1.7 compatibility update. `torch>=1.6.0` required, `torch>=1.7.0` recommended (https://github.com/ultralytics/yolov5/pull/1233)\r\n- GhostConv module bug fix (https://github.com/ultralytics/yolov5/pull/1176)\r\n- Rectangular padding min stride bug fix from 64 to 32 (https://github.com/ultralytics/yolov5/pull/1165)\r\n- Mosaic4 bug fix (https://github.com/ultralytics/yolov5/pull/1021)\r\n- Logging directory runs/exp bug fix (https://github.com/ultralytics/yolov5/pull/978)\r\n- Various additional\r\n\r\n## Added Functionality\r\n- PyTorch Hub functionality with YOLOv5 .autoshape() method added (https://github.com/ultralytics/yolov5/pull/1210)\r\n- Autolabelling addition and standardization across detect.py and test.py (https://github.com/ultralytics/yolov5/pull/1182)\r\n- Precision-Recall Curve automatic plotting when testing (https://github.com/ultralytics/yolov5/pull/1107)\r\n- Self-host VOC dataset for more reliable access and faster downloading (https://github.com/ultralytics/yolov5/pull/1077)\r\n- Adding option to output autolabel confidence with --save-conf in test.py and detect.py (https://github.com/ultralytics/yolov5/pull/994)\r\n- Google App Engine deployment option (https://github.com/ultralytics/yolov5/pull/964)\r\n- Infinite Dataloader for faster training (https://github.com/ultralytics/yolov5/pull/876)\r\n- Various additional\r\n\r\n",
        "dateCreated": "2020-10-28T14:03:50Z",
        "datePublished": "2020-10-29T15:07:35Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v3.1",
        "name": "v3.1 - Bug Fixes and Performance Improvements",
        "tag_name": "v3.1",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v3.1",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/33223116",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v3.1"
      },
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "This releases includes nn.Hardswish() activation implementation on Conv() modules, which increases mAP for all models at the expense of about 10% in inference speed. Training speeds are not significantly affected, though CUDA memory requirements increase about 10%. Training from scratch as well as finetuning both benefit from this change. The smallest models benefit the most from the Hardswish() activations, with increases of +0.9/+0.8/+0.7/+0.2mAP@0.5:0.95 for YOLOv5s/m/l/x.\r\n\r\nAll mAP values in our README are now reported at --img-size 640 (v2.0 reported at 672, and v1.0 reported at 736), so we've succeeded in increasing mAP while reducing the required --img-size :)\r\n\r\nWe've also listed YOLOv5x Test Time Augmentation (TTA) mAP and speeds for v3.0 in our README table for the first time (and for v2.0 below). Best results are YOLOv5x with TTA at 50.8 mAP@0.5:0.95. We've also updated efficientdet results in our comparison plot to reflect recent improvements in the google/automl repo.\r\n\r\n\r\n## Breaking Changes\r\n\r\n- This release does not contain breaking changes.\r\n- This release is only backwards compatible with v2.0 models trained with torch>=1.6.\r\n\r\n\r\n## Bug Fixes\r\n- Hyperparameter evolution fixed, tutorial added (https://github.com/ultralytics/yolov5/issues/607)\r\n\r\n\r\n## Added Functionality\r\n- PyTorch 1.6 compatible. `torch>=1.6` required (43a616a9551cd53f031c05688884927ba0c13513)\r\n- PyTorch 1.6 native Automatic Mixed Precision (AMP) replaces NVIDIA Apex AMP (https://github.com/ultralytics/yolov5/pull/573)\r\n- `nn.Hardswish()` activations replace `nn.LeakyReLU(0.1)` in base convolution module `models.Conv()`\r\n- Dataset Autodownload feature added (https://github.com/ultralytics/yolov5/pull/685)\r\n- Model Autodownload improved (https://github.com/ultralytics/yolov5/pull/711)\r\n- Layer freezing code added (https://github.com/ultralytics/yolov5/issues/679)\r\n- TensorRT export tutorial added (https://github.com/ultralytics/yolov5/pull/623)\r\n<br/>\r\n<img src=\"https://user-images.githubusercontent.com/26833433/90187293-6773ba00-dd6e-11ea-8f90-cd94afc0427f.png\" width=\"800\">\r\n** GPU Speed measures end-to-end time per image averaged over 5000 COCO val2017 images using a V100 GPU with batch size 32, and includes image preprocessing, PyTorch FP16 inference, postprocessing and NMS. EfficientDet data from [google/automl](https://github.com/google/automl) at batch size 8.\r\n<br/><br/>\r\n\r\n- **August 13, 2020**: [v3.0 release](https://github.com/ultralytics/yolov5/releases/tag/v3.0): nn.Hardswish() activations, data autodownload, native AMP.\r\n- **July 23, 2020**: [v2.0 release](https://github.com/ultralytics/yolov5/releases/tag/v2.0): improved model definition, training and mAP.\r\n- **June 22, 2020**: [PANet](https://arxiv.org/abs/1803.01534) updates: new heads, reduced parameters, improved speed and mAP [364fcfd](https://github.com/ultralytics/yolov5/commit/364fcfd7dba53f46edd4f04c037a039c0a287972).\r\n- **June 19, 2020**: [FP16](https://pytorch.org/docs/stable/nn.html#torch.nn.Module.half) as new default for smaller checkpoints and faster inference [d4c6674](https://github.com/ultralytics/yolov5/commit/d4c6674c98e19df4c40e33a777610a18d1961145).\r\n- **June 9, 2020**: [CSP](https://github.com/WongKinYiu/CrossStagePartialNetworks) updates: improved speed, size, and accuracy (credit to @WongKinYiu for CSP).\r\n- **May 27, 2020**: Public release. YOLOv5 models are SOTA among all known YOLO implementations.\r\n- **April 1, 2020**: Start development of future compound-scaled [YOLOv3](https://github.com/ultralytics/yolov3)/[YOLOv4](https://github.com/AlexeyAB/darknet)-based PyTorch models.\r\n\r\n\r\n## Pretrained Checkpoints\r\n\r\n### v3.0 with nn.Hardswish()\r\nModel | AP<sup>val</sup> | AP<sup>test</sup> | AP<sub>50</sub> | Speed<sub>GPU</sub> | FPS<sub>GPU</sub> || params | FLOPS |\r\n---------- |------ |------ |------ | -------- | ------| ------ |------  |  :------: |\r\n[YOLOv5s](https://github.com/ultralytics/yolov5/releases/tag/v3.0)    | 37.0     | 37.0     | 56.2     | **2.4ms** | **476** || 7.5M   | 13.2B\r\n[YOLOv5m](https://github.com/ultralytics/yolov5/releases/tag/v3.0)    | 44.3     | 44.3     | 63.2     | 3.4ms     | 333     || 21.8M  | 39.4B\r\n[YOLOv5l](https://github.com/ultralytics/yolov5/releases/tag/v3.0)    | 47.7     | 47.7     | 66.5     | 4.4ms     | 256     || 47.8M  | 88.1B\r\n[YOLOv5x](https://github.com/ultralytics/yolov5/releases/tag/v3.0)    | 49.2 | 49.2 | 67.7 | 6.9ms     | 164     || 89.0M  | 166.4B\r\n| | | | | || |\r\n[YOLOv5x](https://github.com/ultralytics/yolov5/releases/tag/v3.0) + TTA|**50.8**| **50.8** | **68.9** | 25.5ms    | 39      || 89.0M  | 354.3B\r\n| | | | | || |\r\n[YOLOv3-SPP](https://github.com/ultralytics/yolov5/releases/tag/v3.0) | 45.6     | 45.5     | 65.2     | 4.5ms     | 222     || 63.0M  | 118.0B\r\n\r\n** AP<sup>test</sup> denotes COCO [test-dev2017](http://cocodataset.org/#upload) server results, all other AP results in the table denote val2017 accuracy.  \r\n** All AP numbers are for single-model single-scale without ensemble or test-time augmentation except for TTA. **Reproduce** by `python test.py --data coco.yaml --img 640 --conf 0.001`. Test Time Augmentation ([TTA](https://github.com/ultralytics/yolov5/issues/303)) runs at 3 image sizes. **Reproduce** TTA results by `python test.py --data coco.yaml --img 832 --augment` \r\n** Speed<sub>GPU</sub> measures end-to-end time per image averaged over 5000 COCO val2017 images using a GCP [n1-standard-16](https://cloud.google.com/compute/docs/machine-types#n1_standard_machine_types) instance with one V100 GPU, and includes image preprocessing, PyTorch FP16 image inference at --batch-size 32 --img-size 640, postprocessing and NMS. Average NMS time included in this chart is 1-2ms/img.  **Reproduce** by `python test.py --data coco.yaml --img 640 --conf 0.1`  \r\n** All checkpoints are trained to 300 epochs with default settings and hyperparameters (no autoaugmentation). \r\n\r\n\r\n### v2.0 with nn.LeakyReLU(0.1)\r\nModel | AP<sup>val</sup> | AP<sup>test</sup> | AP<sub>50</sub> | Speed<sub>GPU</sub> | FPS<sub>GPU</sub> || params | FLOPS |\r\n---------- |------ |------ |------ | -------- | ------| ------ |------  |  :------: |\r\n[YOLOv5s](https://github.com/ultralytics/yolov5/releases/tag/v2.0)    | 36.1     | 36.1     | 55.3     | **2.2ms** | **476** || 7.5M   | 13.2B\r\n[YOLOv5m](https://github.com/ultralytics/yolov5/releases/tag/v2.0)    | 43.5     | 43.5     | 62.5     | 3.2ms     | 333     || 21.8M  | 39.4B\r\n[YOLOv5l](https://github.com/ultralytics/yolov5/releases/tag/v2.0)    | 47.0     | 47.1     | 65.6     | 4.1ms     | 256     || 47.8M  | 88.1B\r\n[YOLOv5x](https://github.com/ultralytics/yolov5/releases/tag/v2.0)    | 49.0 | 49.0 | 67.4 | 6.4ms     | 164     || 89.0M  | 166.4B\r\n| | | | | || |\r\n[YOLOv5x](https://github.com/ultralytics/yolov5/releases/tag/v2.0) + TTA    | **50.4** | **50.4** | **68.5** | 23.4ms     | 43     || 89.0M  | 354.3B\r\n| | | | | || |\r\n[YOLOv3-SPP](https://github.com/ultralytics/yolov5/releases/tag/v2.0) | 45.6     | 45.5     | 65.2     | 4.5ms     | 222     || 63.0M  | 118.0B\r\n\r\n** AP<sup>test</sup> denotes COCO [test-dev2017](http://cocodataset.org/#upload) server results, all other AP results in the table denote val2017 accuracy.  \r\n** All AP numbers are for single-model single-scale without ensemble or test-time augmentation. Reproduce by `python test.py --data coco.yaml --img 672 --conf 0.001`  \r\n** Speed<sub>GPU</sub> measures end-to-end time per image averaged over 5000 COCO val2017 images using a GCP [n1-standard-16](https://cloud.google.com/compute/docs/machine-types#n1_standard_machine_types) instance with one V100 GPU, and includes image preprocessing, PyTorch FP16 image inference at --batch-size 32 --img-size 640, postprocessing and NMS. Average NMS time included in this chart is 1-2ms/img.  Reproduce by `python test.py --data coco.yaml --img 640 --conf 0.1`  \r\n** All checkpoints are trained to 300 epochs with default settings and hyperparameters (no autoaugmentation). \r\n",
        "dateCreated": "2020-08-13T04:18:29Z",
        "datePublished": "2020-08-13T21:28:37Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v3.0",
        "name": "v3.0",
        "tag_name": "v3.0",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v3.0",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/29667458",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v3.0"
      },
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "## Breaking Changes\r\n\r\nIMPORTANT: v2.0 release contains breaking changes. Models trained with earlier versions will not operate correctly with v2.0. The last commit before v2.0 that operates correctly with all earlier pretrained models is:\r\nhttps://github.com/ultralytics/yolov5/tree/5e970d45c44fff11d1eb29bfc21bed9553abf986\r\n\r\nTo clone last commit prior to v2.0:\r\n```bash\r\ngit clone https://github.com/ultralytics/yolov5  # clone repo\r\ncd yolov5\r\ngit reset --hard 5e970d4  # last commit before v2.0\r\n```\r\n\r\n## Bug Fixes\r\n- Various\r\n\r\n## Added Functionality\r\n- Various\r\n\r\n<img src=\"https://user-images.githubusercontent.com/26833433/85340570-30360a80-b49b-11ea-87cf-bdf33d53ae15.png\" width=\"800\">\r\n** GPU Speed measures end-to-end time per image averaged over 5000 COCO val2017 images using a V100 GPU with batch size 8, and includes image preprocessing, PyTorch FP16 inference, postprocessing and NMS.\r\n<br/><br/>\r\n\r\n\r\n- **July 23, 2020**: [v2.0 release](https://github.com/ultralytics/yolov5/releases/tag/v2.0): improved model definition, training and mAP.\r\n- **June 22, 2020**: [PANet](https://arxiv.org/abs/1803.01534) updates: new heads, reduced parameters, improved speed and mAP [364fcfd](https://github.com/ultralytics/yolov5/commit/364fcfd7dba53f46edd4f04c037a039c0a287972).\r\n- **June 19, 2020**: [FP16](https://pytorch.org/docs/stable/nn.html#torch.nn.Module.half) as new default for smaller checkpoints and faster inference [d4c6674](https://github.com/ultralytics/yolov5/commit/d4c6674c98e19df4c40e33a777610a18d1961145).\r\n- **June 9, 2020**: [CSP](https://github.com/WongKinYiu/CrossStagePartialNetworks) updates: improved speed, size, and accuracy (credit to @WongKinYiu for CSP).\r\n- **May 27, 2020**: Public release. YOLOv5 models are SOTA among all known YOLO implementations.\r\n- **April 1, 2020**: Start development of future compound-scaled [YOLOv3](https://github.com/ultralytics/yolov3)/[YOLOv4](https://github.com/AlexeyAB/darknet)-based PyTorch models.\r\n\r\n\r\n## Pretrained Checkpoints\r\n\r\n| Model | AP<sup>val</sup> | AP<sup>test</sup> | AP<sub>50</sub> | Speed<sub>GPU</sub> | FPS<sub>GPU</sub> || params | FLOPS |\r\n|---------- |------ |------ |------ | -------- | ------| ------ |------  |  :------: |\r\n| [YOLOv5s](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | 36.1     | 36.1     | 55.3     | **2.1ms** | **476** || 7.5M   | 13.2B\r\n| [YOLOv5m](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | 43.5     | 43.5     | 62.5     | 3.0ms     | 333     || 21.8M  | 39.4B\r\n| [YOLOv5l](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | 47.0     | 47.1     | 65.6     | 3.9ms     | 256     || 47.8M  | 88.1B\r\n| [YOLOv5x](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | **49.0** | **49.0** | **67.4** | 6.1ms     | 164     || 89.0M  | 166.4B\r\n| | | | | | || |\r\n| [YOLOv3-SPP](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J) | 45.6     | 45.5     | 65.2     | 4.5ms     | 222     || 63.0M  | 118.0B\r\n\r\n\r\n** AP<sup>test</sup> denotes COCO [test-dev2017](http://cocodataset.org/#upload) server results, all other AP results in the table denote val2017 accuracy.  \r\n** All AP numbers are for single-model single-scale without ensemble or test-time augmentation. Reproduce by `python test.py --data coco.yaml --img 672 --conf 0.001`  \r\n** Speed<sub>GPU</sub> measures end-to-end time per image averaged over 5000 COCO val2017 images using a GCP [n1-standard-16](https://cloud.google.com/compute/docs/machine-types#n1_standard_machine_types) instance with one V100 GPU, and includes image preprocessing, PyTorch FP16 image inference at --batch-size 32 --img-size 640, postprocessing and NMS. Average NMS time included in this chart is 1-2ms/img.  Reproduce by `python test.py --data coco.yaml --img 640 --conf 0.1`  \r\n** All checkpoints are trained to 300 epochs with default settings and hyperparameters (no autoaugmentation). \r\n",
        "dateCreated": "2020-07-23T22:43:53Z",
        "datePublished": "2020-07-23T22:48:25Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v2.0",
        "name": "v2.0",
        "tag_name": "v2.0",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v2.0",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/28892879",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v2.0"
      },
      {
        "authorType": "User",
        "author_name": "glenn-jocher",
        "body": "## YOLOv5 1.0 Release Notes\r\n\r\n- **June 22, 2020**: [PANet](https://arxiv.org/abs/1803.01534) updates: increased layers, reduced parameters, faster inference and improved mAP [364fcfd](https://github.com/ultralytics/yolov5/commit/364fcfd7dba53f46edd4f04c037a039c0a287972).\r\n- **June 19, 2020**: [FP16](https://pytorch.org/docs/stable/nn.html#torch.nn.Module.half) as new default for smaller checkpoints and faster inference [d4c6674](https://github.com/ultralytics/yolov5/commit/d4c6674c98e19df4c40e33a777610a18d1961145).\r\n- **June 9, 2020**: [CSP](https://github.com/WongKinYiu/CrossStagePartialNetworks) updates: improved speed, size, and accuracy. Credit to @WongKinYiu for excellent CSP work. \r\n- **May 27, 2020**: Public release of repo. YOLOv5 models are SOTA among all known YOLO implementations.\r\n- **April 1, 2020**: Start development of future [YOLOv3](https://github.com/ultralytics/yolov3)/[YOLOv4](https://github.com/AlexeyAB/darknet)-based PyTorch models in a range of compound-scaled sizes.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/26833433/85340570-30360a80-b49b-11ea-87cf-bdf33d53ae15.png\" width=\"800\">\r\n** GPU Speed measures end-to-end time per image averaged over 5000 COCO val2017 images using a V100 GPU with batch size 8, and includes image preprocessing, PyTorch FP16 inference, postprocessing and NMS.\r\n\r\n## Pretrained Checkpoints\r\n\r\n| Model | AP<sup>val</sup> | AP<sup>test</sup> | AP<sub>50</sub> | Speed<sub>GPU</sub> | FPS<sub>GPU</sub> || params | FLOPS |\r\n|---------- |------ |------ |------ | -------- | ------| ------ |------  |  :------: |\r\n| [YOLOv5s](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | 36.6     | 36.6     | 55.8     | **2.1ms** | **476** || 7.5M   | 13.2B\r\n| [YOLOv5m](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | 43.4     | 43.4     | 62.4     | 3.0ms     | 333     || 21.8M  | 39.4B\r\n| [YOLOv5l](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | 46.6     | 46.7     | 65.4     | 3.9ms     | 256     || 47.8M  | 88.1B\r\n| [YOLOv5x](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)    | **48.4** | **48.4** | **66.9** | 6.1ms     | 164     || 89.0M  | 166.4B\r\n| [YOLOv3-SPP](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J)  | 45.6     | 45.5     | 65.2     | 4.5ms     | 222     || 63.0M  | 118.0B\r\n\r\n\r\n** AP<sup>test</sup> denotes COCO [test-dev2017](http://cocodataset.org/#upload) server results, all other AP results in the table denote val2017 accuracy.  \r\n** All AP numbers are for single-model single-scale without ensemble or test-time augmentation. Reproduce by `python test.py --img 736 --conf 0.001`  \r\n** Speed<sub>GPU</sub> measures end-to-end time per image averaged over 5000 COCO val2017 images using a GCP [n1-standard-16](https://cloud.google.com/compute/docs/machine-types#n1_standard_machine_types) instance with one V100 GPU, and includes image preprocessing, PyTorch FP16 image inference at --batch-size 32 --img-size 640, postprocessing and NMS. Average NMS time included in this chart is 1-2ms/img.  Reproduce by `python test.py --img 640 --conf 0.1`  \r\n** All checkpoints are trained to 300 epochs with default settings and hyperparameters (no autoaugmentation). \r\n",
        "dateCreated": "2020-06-25T18:53:13Z",
        "datePublished": "2020-06-25T19:25:46Z",
        "html_url": "https://github.com/ultralytics/yolov5/releases/tag/v1.0",
        "name": "v1.0",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/ultralytics/yolov5/tarball/v1.0",
        "url": "https://api.github.com/repos/ultralytics/yolov5/releases/27932055",
        "zipball_url": "https://api.github.com/repos/ultralytics/yolov5/zipball/v1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20162,
      "date": "Sat, 25 Dec 2021 10:06:11 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "yolov3",
      "yolov4",
      "yolov5",
      "object-detection",
      "pytorch",
      "onnx",
      "coreml",
      "ios",
      "tflite",
      "yolo",
      "deep-learning",
      "machine-learning",
      "ml"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<details open>\n<summary>Install</summary>\n\n[**Python>=3.6.0**](https://www.python.org/) is required with all\n[requirements.txt](https://github.com/ultralytics/yolov5/blob/master/requirements.txt) installed including\n[**PyTorch>=1.7**](https://pytorch.org/get-started/locally/):\n<!-- $ sudo apt update && apt install -y libgl1-mesa-glx libsm6 libxext6 libxrender-dev -->\n\n```bash\n$ git clone https://github.com/ultralytics/yolov5\n$ cd yolov5\n$ pip install -r requirements.txt\n```\n\n</details>\n\n<details open>\n<summary>Inference</summary>\n\nInference with YOLOv5 and [PyTorch Hub](https://github.com/ultralytics/yolov5/issues/36). Models automatically download\nfrom the [latest YOLOv5 release](https://github.com/ultralytics/yolov5/releases).\n\n```python\nimport torch\n\n#: Model\nmodel = torch.hub.load('ultralytics/yolov5', 'yolov5s')  #: or yolov5m, yolov5l, yolov5x, custom\n\n#: Images\nimg = 'https://ultralytics.com/images/zidane.jpg'  #: or file, Path, PIL, OpenCV, numpy, list\n\n#: Inference\nresults = model(img)\n\n#: Results\nresults.print()  #: or .show(), .save(), .crop(), .pandas(), etc.\n```\n\n</details>\n\n\n\n<details>\n<summary>Inference with detect.py</summary>\n\n`detect.py` runs inference on a variety of sources, downloading models automatically from\nthe [latest YOLOv5 release](https://github.com/ultralytics/yolov5/releases) and saving results to `runs/detect`.\n\n```bash\n$ python detect.py --source 0  #: webcam\n                            img.jpg  #: image\n                            vid.mp4  #: video\n                            path/  #: directory\n                            path/*.jpg  #: glob\n                            'https://youtu.be/Zgi9g1ksQHc'  #: YouTube\n                            'rtsp://example.com/media.mp4'  #: RTSP, RTMP, HTTP stream\n```\n\n</details>\n\n<details>\n<summary>Training</summary>\n\nRun commands below to reproduce results\non [COCO](https://github.com/ultralytics/yolov5/blob/master/data/scripts/get_coco.sh) dataset (dataset auto-downloads on\nfirst use). Training times for YOLOv5s/m/l/x are 2/4/6/8 days on a single V100 (multi-GPU times faster). Use the\nlargest `--batch-size` your GPU allows (batch sizes shown for 16 GB devices).\n\n```bash\n$ python train.py --data coco.yaml --cfg yolov5s.yaml --weights '' --batch-size 64\n                                         yolov5m                                40\n                                         yolov5l                                24\n                                         yolov5x                                16\n```\n\n<img width=\"800\" src=\"https://user-images.githubusercontent.com/26833433/90222759-949d8800-ddc1-11ea-9fa1-1c97eed2b963.png\">\n\n</details>\n\n<details open>\n<summary>Tutorials</summary>\n\n* [Train Custom Data](https://github.com/ultralytics/yolov5/wiki/Train-Custom-Data)&nbsp; \ud83d\ude80 RECOMMENDED\n* [Tips for Best Training Results](https://github.com/ultralytics/yolov5/wiki/Tips-for-Best-Training-Results)&nbsp; \u2618\ufe0f\n  RECOMMENDED\n* [Weights & Biases Logging](https://github.com/ultralytics/yolov5/issues/1289)&nbsp; \ud83c\udf1f NEW\n* [Roboflow for Datasets, Labeling, and Active Learning](https://github.com/ultralytics/yolov5/issues/4975)&nbsp; \ud83c\udf1f NEW\n* [Multi-GPU Training](https://github.com/ultralytics/yolov5/issues/475)\n* [PyTorch Hub](https://github.com/ultralytics/yolov5/issues/36)&nbsp; \u2b50 NEW\n* [TFLite, ONNX, CoreML, TensorRT Export](https://github.com/ultralytics/yolov5/issues/251) \ud83d\ude80\n* [Test-Time Augmentation (TTA)](https://github.com/ultralytics/yolov5/issues/303)\n* [Model Ensembling](https://github.com/ultralytics/yolov5/issues/318)\n* [Model Pruning/Sparsity](https://github.com/ultralytics/yolov5/issues/304)\n* [Hyperparameter Evolution](https://github.com/ultralytics/yolov5/issues/607)\n* [Transfer Learning with Frozen Layers](https://github.com/ultralytics/yolov5/issues/1314)&nbsp; \u2b50 NEW\n* [TensorRT Deployment](https://github.com/wang-xinyu/tensorrtx)\n\n</details>\n\n",
      "technique": "Header extraction"
    }
  ]
}