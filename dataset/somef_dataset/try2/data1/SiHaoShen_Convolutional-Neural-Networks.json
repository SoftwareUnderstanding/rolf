{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1508.06576",
      "https://arxiv.org/abs/1506.02640",
      "https://arxiv.org/abs/1612.08242"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8772692606136239
      ],
      "excerpt": "Residual Networks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654671031158477
      ],
      "excerpt": "Autonomous driving - Car detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9790169409268659
      ],
      "excerpt": "- Know how to apply convolutional networks to visual detection and recognition tasks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8877665337873154
      ],
      "excerpt": "Welcome to the second assignment of this week. In this assignment, you will learn about Neural Style Transfer. This algorithm was created by Gatys et al. (2015) (https://arxiv.org/abs/1508.06576).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9970275258232891
      ],
      "excerpt": "Welcome to your week 3 programming assignment. You will learn about object detection using the very powerful YOLO model. Many of the ideas in this notebook are described in the two YOLO papers: Redmon et al., 2016 (https://arxiv.org/abs/1506.02640) and Redmon and Farhadi, 2016 (https://arxiv.org/abs/1612.08242).  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9327882686852367
      ],
      "excerpt": "- Use object detection on a car detection dataset \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SiHaoShen/Convolutional-Neural-Networks",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-11T13:44:41Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-06T13:32:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9890676733857678
      ],
      "excerpt": "Review of the whole Project and Course \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047
      ],
      "excerpt": "Keras tutorial - the Happy House \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9960048323001847,
        0.9462526035679673
      ],
      "excerpt": "This repository is the summaries of the project Convolutional Neural Networks on DeepLearning.ai specialization courses. \nThis course will teach you how to build convolutional neural networks and apply it to image data. Thanks to deep learning, computer vision is working far better than just two years ago, and this is enabling numerous exciting applications ranging from safe autonomous driving, to accurate face recognition, to automatic reading of radiology images.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.984256270573477
      ],
      "excerpt": "- Be able to apply these algorithms to a variety of image, video, and other 2D or 3D data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.81383724471284
      ],
      "excerpt": "Lowerscript <sub>i</sub> denotes the i.th entry of a vector. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8097697705147436,
        0.9198684670334286
      ],
      "excerpt": "n_H_prev, n_W_prev and n_C_prev denote respectively the height, width and number of channels of the previous layer. If referencing a specific layer l, this could also be denoted n_H<sup>[l-1]</sup>, n_W<sup>[l-1]</sup>, n_C<sup>[l-1]</sup>. \nWe assume that you are already familiar with numpy and/or have completed the previous courses of the specialization. Let's get started! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070237145812923,
        0.8872570558093301
      ],
      "excerpt": "We assume here that you are already familiar with TensorFlow. If you are not, please refer the TensorFlow Tutorial of the third week of Course 2 (\"Improving deep neural networks\"). \nWelcome to the second assignment of this week! You will learn how to build very deep convolutional networks, using Residual Networks (ResNets). In theory, very deep networks can represent very complex functions; but in practice, they are hard to train. Residual Networks, introduced by He et al., allow you to train much deeper networks than were previously practically feasible. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8254095872689642,
        0.9077410000205083
      ],
      "excerpt": "- Implement the basic building blocks of ResNets.  \n- Put together these building blocks to implement and train a state-of-the-art neural network for image classification.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8123115730904532
      ],
      "excerpt": "Most of the algorithms you've studied optimize a cost function to get a set of parameter values. In Neural Style Transfer, you'll optimize a cost function to get pixel values! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "CNN, ResNets and Computer Vision",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SiHaoShen/Convolutional-Neural-Networks/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 07:26:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SiHaoShen/Convolutional-Neural-Networks/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "SiHaoShen/Convolutional-Neural-Networks",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/Face%20Recognition/Face_Recognition_v3a.ipynb",
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/Art%20generation%20with%20Neural%20Style%20Transfer/Art_Generation_with_Neural_Style_Transfer_v3a.ipynb",
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/Keras%20Tutorial/Keras_Tutorial_v2a.ipynb",
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/Convolutional%20Model%20step%20by%20step/Convolution_model_Application_v1a.ipynb",
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/Convolutional%20Model%20step%20by%20step/Convolution_model_Step_by_Step_v2a.ipynb",
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/Car%20detection%20for%20Autonomous%20Driving/Autonomous_driving_application_Car_detection_v3a.ipynb",
      "https://raw.githubusercontent.com/SiHaoShen/Convolutional-Neural-Networks/master/ResNets/Residual_Networks_v2a.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8151292941311808
      ],
      "excerpt": "You will: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8007086869390387
      ],
      "excerpt": "We assume that you are already familiar with numpy and/or have completed the previous courses of the specialization. Let's get started! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8838035603675095
      ],
      "excerpt": "Before jumping into the problem, let's run the cell below to load the required packages. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9038855292737582
      ],
      "excerpt": "Example: x<sup>(i)</sup> is the i.th training example input. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/SiHaoShen/Convolutional-Neural-Networks/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'COPYRIGHT\\n\\nAll contributions by deeplearning.ai (Kian Katanforoosh, Younes Bensouda Mourri, Andrew Ng):\\nCopyright (c) 2017, deeplearning.ai (Kian Katanforoosh, Younes Bensouda Mourri, Andrew Ng).\\nAll rights reserved.\\n\\nThis work incorporates contributions due to Allan Zelener released under an MIT License, reproduced below:\\n\\n----------------------------------------------------\\nAll contributions by Allan Zelener:\\nCopyright (c) 2017, Allan Zelener.\\nAll rights reserved.\\n\\nAll other contributions:\\nCopyright (c) 2017, the respective contributors.\\nAll rights reserved.\\n\\nEach contributor holds copyright over their respective contributions.\\nThe project versioning (Git) records all such contribution source information.\\n\\nLICENSE\\n\\nThe MIT License (MIT)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n----------------------------------------------------\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Convolutional Neural Networks Project Notes",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Convolutional-Neural-Networks",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "SiHaoShen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/SiHaoShen/Convolutional-Neural-Networks/blob/master/Readme.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 07:26:46 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "convolutional-neural-networks",
      "deep-learning",
      "residual-networks"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Welcome to the first assignment of week 2. In this assignment, you will:\n1. Learn to use Keras, a high-level neural networks API (programming framework), written in Python and capable of running on top of several lower-level frameworks including TensorFlow and CNTK. \n2. See how you can in a couple of hours build a deep learning algorithm.\n\nWhy are we using Keras? Keras was developed to enable deep learning engineers to build and experiment with different models very quickly. Just as TensorFlow is a higher-level framework than Python, Keras is an even higher-level framework and provides additional abstractions. Being able to go from idea to result with the least possible delay is key to finding good models. However, Keras is more restrictive than the lower-level frameworks, so there are some very complex models that you can implement in TensorFlow but not (without more difficulty) in Keras. That being said, Keras will work fine for many common models. \n\nIn this exercise, you'll work on the \"Happy House\" problem, which we'll explain below. Let's load the required packages and solve the problem of the Happy House!\n\n",
      "technique": "Header extraction"
    }
  ]
}