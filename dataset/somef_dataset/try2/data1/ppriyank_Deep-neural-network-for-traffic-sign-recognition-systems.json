{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Pytorch Implementation of Deep neural network for traffic sign recognition systems: An analysis of spatial transformers and stochastic optimisation methods\n\n\n* \u00c1lvaroArcos-Garc\u00edaJuan A.\u00c1lvarez-Garc\u00edaLuis M.Soria-Morillo*\nDeep neural network for traffic sign recognition systems: An analysisof spatial transformers and stochastic optimisation methods  \n\n[link1](https://idus.us.es/xmlui/bitstream/handle/11441/80679/NEUNET-D-17-00381.pdf?sequence=1&isAllowed=y)\n[link2](https://reader.elsevier.com/reader/sd/pii/S0893608018300054?token=0656FA2921430AA401BA73A6990A187F32A6FBDD12EAA2FC87FD556B3CDDF6DA8D5BE54F230A979E57369C48AB081452\n)\n\n\n\n\n\n\nLCN Implementation is taken from https://github.com/dibyadas/Visualize-Normalizations\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ppriyank/Deep-neural-network-for-traffic-sign-recognition-systems",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-10-26T08:01:27Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-28T19:00:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8880814308025372
      ],
      "excerpt": "Class imbalance is removed prior to training by duplicating the data  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9181819059583576
      ],
      "excerpt": "Data Augmentation, in general, decreases performance although Spatial Transformer model ensures augmentation isn't a problem.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8470636391331495,
        0.8639721141661367
      ],
      "excerpt": "Currently Gaussian filter is kept constant for LCN, where as ideally it should be chosed at random during run-time   \nNeural Net gives output of 6 neurons necessary for Affine transformation (translation, cropping, rotation, scaling, and skewing) and uses grid generator and sampling as inbuilt Pytorch commands \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8973804260775868
      ],
      "excerpt": "Spatial Transformer Networks  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch Implementation of Deep neural network for traffic sign recognition systems: An analysis of spatial transformers and stochastic optimisation methods",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ppriyank/Deep-neural-network-for-traffic-sign-recognition-systems/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sun, 26 Dec 2021 05:50:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ppriyank/Deep-neural-network-for-traffic-sign-recognition-systems/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ppriyank/Deep-neural-network-for-traffic-sign-recognition-systems",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ppriyank/Deep-neural-network-for-traffic-sign-recognition-systems/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep neural network for traffic sign recognition systems: An analysis of spatial transformers and stochastic optimisation methods",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep-neural-network-for-traffic-sign-recognition-systems",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ppriyank",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ppriyank/Deep-neural-network-for-traffic-sign-recognition-systems/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Sun, 26 Dec 2021 05:50:13 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "spatial-transformer-network",
      "traffic-sign-classification",
      "sota",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}