{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1611.06355\n[1]: https://drive.google.com/file/d/0B48XS5sLi1OlRkRIbkZWUmdoQmM/view?usp=sharing&resourcekey=0-EQSt98lCz73GuUO8qSA-qg\n[2]: https://github.com/soumith/dcgan.torch\n[3]: https://arxiv.org/abs/1511.06434\n[4]: https://github.com/soumith/dcgan.torch#prerequisites \n[5]: https://sites.google.com/site/nips2016adversarial/\n[6]: https://github.com/soumith/dcgan.torch#display-ui",
      "https://arxiv.org/abs/1511.06434\n[4]: https://github.com/soumith/dcgan.torch#prerequisites \n[5]: https://sites.google.com/site/nips2016adversarial/\n[6]: https://github.com/soumith/dcgan.torch#display-ui"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Perarnau2016,\n  author    = {Guim Perarnau and\n               Joost van de Weijer and\n               Bogdan Raducanu and\n               Jose M. \\'Alvarez},\n  title     = {{Invertible Conditional GANs for image editing}},\n  booktitle   = {NIPS Workshop on Adversarial Training},\n  year      = {2016},\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Guim3/IcGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-05-15T22:23:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-12T04:03:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9041768241833559
      ],
      "excerpt": "In order to interactively display the results, follow [these steps][6]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8488975744762257
      ],
      "excerpt": "Create a dataset of generated images with the generator.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8648717912914732,
        0.9216332376148944
      ],
      "excerpt": "Train the encoder Y to map an image x to a conditional information vector y with the dataset of real images. \nAll the parameters of the training phase are located in cfg/mainConfig.lua. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9294995213393014
      ],
      "excerpt": "Note: for speed purposes, the whole dataset will be loaded into RAM during training time, which requires about 10 GB of RAM. Therefore, 12 GB of RAM is a minimum requirement. Also, the dataset will be stored as a tensor to load it faster, make sure that you have around 25 GB of free space. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "DATA_ROOT=celebA th data/preprocess_celebA.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116623166806389
      ],
      "excerpt": "    net=[GENERATOR_PATH] outputFolder=celebA/genDataset/ samples=182638 th data/generateEncoderDataset.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8116623166806389
      ],
      "excerpt": "    net=[GENERATOR_PATH] outputFolder=mnist/genDataset/ samples=60000 th data/generateEncoderDataset.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8666392429638934
      ],
      "excerpt": "The parameters for generating results are in cfg/generateConfig.lua. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8681158258079337
      ],
      "excerpt": "Swap the attribute information between two pairs of faces. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Invertible conditional GANs for image editing",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Guim3/IcGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 64,
      "date": "Fri, 24 Dec 2021 11:15:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Guim3/IcGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Guim3/IcGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9362442099615728,
        0.999833231880651,
        0.999833231880651
      ],
      "excerpt": "Additionally, you will need to install the threads and optnet package:  \nluarocks install threads \nluarocks install optnet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906813965171598
      ],
      "excerpt": "mkdir celebA; cd celebA \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8056714242566037,
        0.9415832875100791
      ],
      "excerpt": "Also, you will need to download list_attr_celeba.txt from the same link, which is found under Anno folder. \nunzip img_align_celeba.zip; cd .. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "    bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "    bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9876919534651384
      ],
      "excerpt": "Download MNIST as a luarocks package: luarocks install mnist \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "    bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833114516308531
      ],
      "excerpt": "    bash \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8494119393285317
      ],
      "excerpt": "Download img_align_celeba.zip here under the link \"Align&Cropped Images\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8376037760452174,
        0.8488190112602496
      ],
      "excerpt": "DATA_ROOT=celebA th data/preprocess_celebA.lua \nNow move list_attr_celeba.txt to celebA folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8381721063467341
      ],
      "excerpt": "    net=[GENERATOR_PATH] outputFolder=celebA/genDataset/ samples=182638 th data/generateEncoderDataset.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436173058188703
      ],
      "excerpt": "    datasetPath=celebA/genDataset/ type=Z th trainEncoder.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436173058188703
      ],
      "excerpt": "    datasetPath=celebA/ type=Y th trainEncoder.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9040695773173666
      ],
      "excerpt": "    name=mnist dataset=mnist dataRoot=mnist th trainGAN.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8381721063467341
      ],
      "excerpt": "    net=[GENERATOR_PATH] outputFolder=mnist/genDataset/ samples=60000 th data/generateEncoderDataset.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436173058188703
      ],
      "excerpt": "    datasetPath=mnist/genDataset/ type=Z th trainEncoder.lua \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8436173058188703
      ],
      "excerpt": "    datasetPath=mnist type=Y th trainEncoder.lua \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Guim3/IcGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Lua"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD License\\n\\nFor dcgan.torch software\\n\\nCopyright (c) 2015, Facebook, Inc. All rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without modification,\\nare permitted provided that the following conditions are met:\\n\\n * Redistributions of source code must retain the above copyright notice, this\\n    list of conditions and the following disclaimer.\\n\\n * Redistributions in binary form must reproduce the above copyright notice,\\n    this list of conditions and the following disclaimer in the documentation\\n\\t   and/or other materials provided with the distribution.\\n\\n * Neither the name Facebook nor the names of its contributors may be used to\\n    endorse or promote products derived from this software without specific\\n\\t   prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Invertible Conditional GANs",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "IcGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Guim3",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Guim3/IcGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 272,
      "date": "Fri, 24 Dec 2021 11:15:20 GMT"
    },
    "technique": "GitHub API"
  }
}