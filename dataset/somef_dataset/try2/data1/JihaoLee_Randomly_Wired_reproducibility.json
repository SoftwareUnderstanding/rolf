{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.01569",
      "https://arxiv.org/abs/1904.01569, 2019.  \n[Seungwon Park](https://github.com/seungwonpark/RandWireNN)"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Xie S, Kirillov A, Girshick R, et al. Exploring randomly wired neural networks for image recognition[J]. arXiv preprint arXiv:1904.01569, 2019.  \n[Seungwon Park](https://github.com/seungwonpark/RandWireNN)\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JihaoLee/Randomly_Wired_reproducibility",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-14T13:48:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-14T14:43:32Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9464130098569941
      ],
      "excerpt": "This is a reimplementation of Exploring Randomly Wired Neural Networks for Image Recognition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is a reimplementation of Exploring Randomly Wired Neural Networks for Image Recognition",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JihaoLee/Randomly_Wired_reproducibility/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 22:04:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JihaoLee/Randomly_Wired_reproducibility/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JihaoLee/Randomly_Wired_reproducibility",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.826786951396302
      ],
      "excerpt": "Validation result on Imagenet(ILSVRC2012) dataset: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JihaoLee/Randomly_Wired_reproducibility/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Randomly_Wired_reproducibility",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Randomly_Wired_reproducibility",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JihaoLee",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JihaoLee/Randomly_Wired_reproducibility/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.5\n* PyTorch==1.0.0\n* sklearn, tensorboardX, numpy\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 22:04:50 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "generate random graph\n----------\nws: `python graph/ws.py -k -p`  \ner: `python graph/er.py -p`  \nba: `python graph/ba.py -m`  \n\ntrain\n----------\n```\npython train.py --data <path to ImageNet>  \n                --regime <small is True, regular is False>  \n                --base_channels <78, 109, 154>\n```\n\neval\n----------\n```\npython eval.py --data <path to ImageNet>  \n               --regime <small is True, regular is False>  \n               --base_channels <78, 109, 154>  \n               --model_path <path to trained path\n```\n                \n",
      "technique": "Header extraction"
    }
  ]
}