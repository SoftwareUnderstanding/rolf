{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2106.05022. [see Table 1 on page 5]\n\nInitially started with the following 10 papers relevant to Vision/Classification Tasks:\n\n| No. | Title  | Task | Link to paper | Link to code | Code format | Works with FPGAconvnet |\n| - | - | - | - | - | - | - |\n| 1 | MSDNet | Vision / Classification | https://arxiv.org/abs/1703.09844 | https://github.com/kalviny/MSDNet-PyTorch | PyTorch | Yes |\n| 2 | Not all pixels are equal | Vision / Segmentation | https://arxiv.org/abs/1704.01344 | https://github.com/liuziwei7/region-conv | Caffe | - |\n| 3 | Phuong et al. | Vision / Classification | https://openaccess.thecvf.com/content_ICCV_2019/html/Phuong_Distillation-Based_Training_for_Multi-Exit_Architectures_ICCV_2019_paper.html | https://github.com/mary-phuong/multiexit-distillation | PyTorch | - |\n| 4 | RBQE | Vision / Enhancement | https://arxiv.org/abs/2006.16581 | https://github.com/RyanXingQL/RBQE | MATLAB | - |\n| 5 | MonoBERT | IR / Document Ranking | https://aclanthology.org/2020.sustainlp-1.11/ | https://github.com/castorini/earlyexiting-monobert | PyTorch | - |\n| 6 | BranchyNet | Vision / Classification | https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes |\n| 7 | SDN | Vision / Classification | https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - |\n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/1703.09844 | https://github.com/kalviny/MSDNet-PyTorch | PyTorch | Yes |\n| 2 | Not all pixels are equal | Vision / Segmentation | https://arxiv.org/abs/1704.01344 | https://github.com/liuziwei7/region-conv | Caffe | - |\n| 3 | Phuong et al. | Vision / Classification | https://openaccess.thecvf.com/content_ICCV_2019/html/Phuong_Distillation-Based_Training_for_Multi-Exit_Architectures_ICCV_2019_paper.html | https://github.com/mary-phuong/multiexit-distillation | PyTorch | - |\n| 4 | RBQE | Vision / Enhancement | https://arxiv.org/abs/2006.16581 | https://github.com/RyanXingQL/RBQE | MATLAB | - |\n| 5 | MonoBERT | IR / Document Ranking | https://aclanthology.org/2020.sustainlp-1.11/ | https://github.com/castorini/earlyexiting-monobert | PyTorch | - |\n| 6 | BranchyNet | Vision / Classification | https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes |\n| 7 | SDN | Vision / Classification | https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - |\n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/1704.01344 | https://github.com/liuziwei7/region-conv | Caffe | - |\n| 3 | Phuong et al. | Vision / Classification | https://openaccess.thecvf.com/content_ICCV_2019/html/Phuong_Distillation-Based_Training_for_Multi-Exit_Architectures_ICCV_2019_paper.html | https://github.com/mary-phuong/multiexit-distillation | PyTorch | - |\n| 4 | RBQE | Vision / Enhancement | https://arxiv.org/abs/2006.16581 | https://github.com/RyanXingQL/RBQE | MATLAB | - |\n| 5 | MonoBERT | IR / Document Ranking | https://aclanthology.org/2020.sustainlp-1.11/ | https://github.com/castorini/earlyexiting-monobert | PyTorch | - |\n| 6 | BranchyNet | Vision / Classification | https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes |\n| 7 | SDN | Vision / Classification | https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - |\n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/2006.16581 | https://github.com/RyanXingQL/RBQE | MATLAB | - |\n| 5 | MonoBERT | IR / Document Ranking | https://aclanthology.org/2020.sustainlp-1.11/ | https://github.com/castorini/earlyexiting-monobert | PyTorch | - |\n| 6 | BranchyNet | Vision / Classification | https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes |\n| 7 | SDN | Vision / Classification | https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - |\n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes |\n| 7 | SDN | Vision / Classification | https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - |\n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - |\n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes |\n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes |\n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - |\n\n\n\n-------------------\nOnly 4 papers remained (1,6,8,9",
      "https://arxiv.org/abs/1703.09844 | Yes   | https://github.com/kalviny/MSDNet-PyTorch       | PyTorch        | Possible issue with dotted line in schematic   | nn.Conv2d, nn.BatchNorm2d, nn.Linear, nn.ReLU, nn.MaxPool2d  | softmax with entropy                | Yes   |               |              |\n| 6   | Early-exiting network-agnostic techniques | BranchyNet      | Vision / Classification               | https://arxiv.org/abs/1709.01686 | Yes   | https://github.com/kunglab/branchynet,  https://github.com/biggsbenjamin/earlyexitnet           | PyTorch        | -                                              | nn.Conv2d, nn.ReLU, nn.MaxPool2d                             | softmax with entropy                | Yes                | Yes           | Yes          |\n| 8   | Learnable exit policies                   | L2Stop          | Vision / {Classification, Denoising}  | https://arxiv.org/abs/2006.05082 | Yes   | https://github.com/xinshi-chen/l2stop           | PyTorch        | section 5.2/5.3 not needed                     | nn.Linear                                                    | own model (see 3.1 Stopping Policy",
      "https://arxiv.org/abs/1709.01686 | Yes   | https://github.com/kunglab/branchynet,  https://github.com/biggsbenjamin/earlyexitnet           | PyTorch        | -                                              | nn.Conv2d, nn.ReLU, nn.MaxPool2d                             | softmax with entropy                | Yes                | Yes           | Yes          |\n| 8   | Learnable exit policies                   | L2Stop          | Vision / {Classification, Denoising}  | https://arxiv.org/abs/2006.05082 | Yes   | https://github.com/xinshi-chen/l2stop           | PyTorch        | section 5.2/5.3 not needed                     | nn.Linear                                                    | own model (see 3.1 Stopping Policy",
      "https://arxiv.org/abs/2006.05082 | Yes   | https://github.com/xinshi-chen/l2stop           | PyTorch        | section 5.2/5.3 not needed                     | nn.Linear                                                    | own model (see 3.1 Stopping Policy",
      "https://arxiv.org/abs/2002.10025 | Yes   | https://github.com/VITA-Group/triple-wins       | PyTorch        | -                                              | nn.Conv2d, nn.ReLU, nn.MaxPool2d, nn.Dropout, nn.BatchNorm2d | softmax with entropy                | Yes                | Yes           | Yes          |\n  \n-------------------\n**Current Status (for future users",
      "https://arxiv.org/abs/2002.10025},\n      eprinttype = {arXiv},\n      eprint    = {2002.10025},\n      timestamp = {Tue, 03 Mar 2020 14:32:13 +0100},\n      biburl    = {https://dblp.org/rec/journals/corr/abs-2002-10025.bib},\n      bibsource = {dblp computer science bibliography, https://dblp.org}\n    }\n\n\n\n  \nThanks once again to Ben Biggs and George Constantinides for their support and guidance in this project. \n    \n\n\n\n    "
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{DBLP:journals/corr/abs-2002-10025,\n  author    = {Ting{-}Kuei Hu and\n               Tianlong Chen and\n               Haotao Wang and\n               Zhangyang Wang},\n  title     = {Triple Wins: Boosting Accuracy, Robustness and Efficiency Together\n               by Enabling Input-Adaptive Inference},\n  journal   = {CoRR},\n  volume    = {abs/2002.10025},\n  year      = {2020},\n  url       = {https://arxiv.org/abs/2002.10025},\n  eprinttype = {arXiv},\n  eprint    = {2002.10025},\n  timestamp = {Tue, 03 Mar 2020 14:32:13 +0100},\n  biburl    = {https://dblp.org/rec/journals/corr/abs-2002-10025.bib},\n  bibsource = {dblp computer science bibliography, https://dblp.org}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{pmlr-v119-chen20c,\n  title =    {Learning To Stop While Learning To Predict},\n  author =       {Chen, Xinshi and Dai, Hanjun and Li, Yu and Gao, Xin and Song, Le},\n  booktitle =    {Proceedings of the 37th International Conference on Machine Learning},\n  pages =    {1520--1530},\n  year =     {2020},\n  editor =   {III, Hal Daum\u00e9 and Singh, Aarti},\n  volume =   {119},\n  series =   {Proceedings of Machine Learning Research},\n  month =    {13--18 Jul},\n  publisher =    {PMLR},\n  pdf =      {http://proceedings.mlr.press/v119/chen20c/chen20c.pdf},\n  url =      {https://proceedings.mlr.press/v119/chen20c.html},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{DBLP:journals/corr/abs-1709-01686,\n  author    = {Surat Teerapittayanon and\n               Bradley McDanel and\n               H. T. Kung},\n  title     = {BranchyNet: Fast Inference via Early Exiting from Deep Neural Networks},\n  journal   = {CoRR},\n  volume    = {abs/1709.01686},\n  year      = {2017},\n  url       = {http://arxiv.org/abs/1709.01686},\n  eprinttype = {arXiv},\n  eprint    = {1709.01686},\n  timestamp = {Tue, 28 Apr 2020 13:45:04 +0200},\n  biburl    = {https://dblp.org/rec/journals/corr/abs-1709-01686.bib},\n  bibsource = {dblp computer science bibliography, https://dblp.org}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{DBLP:journals/corr/HuangCLWMW17,\n  author    = {Gao Huang and\n               Danlu Chen and\n               Tianhong Li and\n               Felix Wu and\n               Laurens van der Maaten and\n               Kilian Q. Weinberger},\n  title     = {Multi-Scale Dense Convolutional Networks for Efficient Prediction},\n  journal   = {CoRR},\n  volume    = {abs/1703.09844},\n  year      = {2017},\n  url       = {http://arxiv.org/abs/1703.09844},\n  eprinttype = {arXiv},\n  eprint    = {1703.09844},\n  timestamp = {Mon, 13 Aug 2018 16:49:03 +0200},\n  biburl    = {https://dblp.org/rec/journals/corr/HuangCLWMW17.bib},\n  bibsource = {dblp computer science bibliography, https://dblp.org}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9989785312029084,
        0.9967952662282339,
        0.9955065683562576,
        0.9995957366075825,
        0.9802312636395387,
        0.9996765631353306,
        0.9991927702054979,
        0.999914797821487,
        0.9996765631353306,
        0.9999980897023363
      ],
      "excerpt": "| 1 | MSDNet | Vision / Classification | https://arxiv.org/abs/1703.09844 | https://github.com/kalviny/MSDNet-PyTorch | PyTorch | Yes | \n| 2 | Not all pixels are equal | Vision / Segmentation | https://arxiv.org/abs/1704.01344 | https://github.com/liuziwei7/region-conv | Caffe | - | \n| 3 | Phuong et al. | Vision / Classification | https://openaccess.thecvf.com/content_ICCV_2019/html/Phuong_Distillation-Based_Training_for_Multi-Exit_Architectures_ICCV_2019_paper.html | https://github.com/mary-phuong/multiexit-distillation | PyTorch | - | \n| 4 | RBQE | Vision / Enhancement | https://arxiv.org/abs/2006.16581 | https://github.com/RyanXingQL/RBQE | MATLAB | - | \n| 5 | MonoBERT | IR / Document Ranking | https://aclanthology.org/2020.sustainlp-1.11/ | https://github.com/castorini/earlyexiting-monobert | PyTorch | - | \n| 6 | BranchyNet | Vision / Classification | https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes | \n| 7 | SDN | Vision / Classification | https://arxiv.org/abs/1810.07052 | https://github.com/gmum/Zero-Time-Waste | PyTorch | - | \n| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes | \n| 9 | Triple-wins |  Vision / Classification| https://arxiv.org/abs/2002.10025 | https://github.com/VITA-Group/triple-wins | PyTorch | Yes | \n| 10 | DeepSloth | Vision / Classification | https://arxiv.org/abs/2010.02432 | https://github.com/sanghyun-hong/deepsloth | PyTorch | - | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9997183112145233,
        0.9980628268240631,
        0.9978955046371183
      ],
      "excerpt": "| 6   | Early-exiting network-agnostic techniques | BranchyNet      | Vision / Classification               | https://arxiv.org/abs/1709.01686 | Yes   | https://github.com/kunglab/branchynet,  https://github.com/biggsbenjamin/earlyexitnet           | PyTorch        | -                                              | nn.Conv2d, nn.ReLU, nn.MaxPool2d                             | softmax with entropy                | Yes                | Yes           | Yes          | \n| 8   | Learnable exit policies                   | L2Stop          | Vision / {Classification, Denoising}  | https://arxiv.org/abs/2006.05082 | Yes   | https://github.com/xinshi-chen/l2stop           | PyTorch        | section 5.2/5.3 not needed                     | nn.Linear                                                    | own model (see 3.1 Stopping Policy) | No - problem       |               |              | \n| 9   | Adversarial robustness                    | Triple-wins     | Vision / Classification               | https://arxiv.org/abs/2002.10025 | Yes   | https://github.com/VITA-Group/triple-wins       | PyTorch        | -                                              | nn.Conv2d, nn.ReLU, nn.MaxPool2d, nn.Dropout, nn.BatchNorm2d | softmax with entropy                | Yes                | Yes           | Yes          | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "Useful Notes: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "-  https://pytorch.org/tutorials/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8874723726944206
      ],
      "excerpt": "-  https://www.electronjs.org/apps/netron (useful tool for viewing onnx models and helpful when debugging) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9996698832673109,
        0.8940583111730483,
        0.9620024184146916,
        0.9516706517766257,
        0.955282076251007
      ],
      "excerpt": "MSDNet (https://github.com/gaohuang/MSDNet) \n  author    = {Gao Huang and \n               Danlu Chen and \n               Tianhong Li and \n               Felix Wu and \n               Laurens van der Maaten and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9970250756829528,
        0.9565696357172301
      ],
      "excerpt": "  title     = {Multi-Scale Dense Convolutional Networks for Efficient Prediction}, \n  journal   = {CoRR}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9960965048981569,
        0.9960946386010011,
        0.9490753289412834
      ],
      "excerpt": "  year      = {2017}, \n  url       = {http://arxiv.org/abs/1703.09844}, \n  eprinttype = {arXiv}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8265478464472799,
        0.9278824608274014,
        0.9949187583612273
      ],
      "excerpt": "  timestamp = {Mon, 13 Aug 2018 16:49:03 +0200}, \n  biburl    = {https://dblp.org/rec/journals/corr/HuangCLWMW17.bib}, \n  bibsource = {dblp computer science bibliography, https://dblp.org} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9890131201201999
      ],
      "excerpt": "BranchyNet (https://github.com/kunglab/branchynet) \n  author    = {Surat Teerapittayanon and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8784831683667637,
        0.9565696357172301
      ],
      "excerpt": "  title     = {BranchyNet: Fast Inference via Early Exiting from Deep Neural Networks}, \n  journal   = {CoRR}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9960965048981569,
        0.9960946386010011,
        0.9490753289412834
      ],
      "excerpt": "  year      = {2017}, \n  url       = {http://arxiv.org/abs/1709.01686}, \n  eprinttype = {arXiv}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014,
        0.9949187583612273
      ],
      "excerpt": "  biburl    = {https://dblp.org/rec/journals/corr/abs-1709-01686.bib}, \n  bibsource = {dblp computer science bibliography, https://dblp.org} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9747762585923935,
        0.9118612080347196,
        0.9999998987640717,
        0.999988660534657,
        0.8944178096468923,
        0.9664456561658856,
        0.8490817347094297
      ],
      "excerpt": "L2Stop (https://github.com/xinshi-chen/l2stop) \n  title =    {Learning To Stop While Learning To Predict}, \n  author =       {Chen, Xinshi and Dai, Hanjun and Li, Yu and Gao, Xin and Song, Le}, \n  booktitle =    {Proceedings of the 37th International Conference on Machine Learning}, \n  pages =    {1520--1530}, \n  year =     {2020}, \n  editor =   {III, Hal Daum\u00e9 and Singh, Aarti}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9957418679875117,
        0.8955886365383559
      ],
      "excerpt": "  series =   {Proceedings of Machine Learning Research}, \n  month =    {13--18 Jul}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9660991539358709,
        0.9945535325919279
      ],
      "excerpt": "  pdf =      {http://proceedings.mlr.press/v119/chen20c/chen20c.pdf}, \n  url =      {https://proceedings.mlr.press/v119/chen20c.html}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9982693152972947,
        0.8940583111730483,
        0.9336221125029482,
        0.8944178096468923,
        0.9822020335810677
      ],
      "excerpt": "Triple Wins (https://github.com/VITA-Group/triple-wins) \n  author    = {Ting{-}Kuei Hu and \n               Tianlong Chen and \n               Haotao Wang and \n               Zhangyang Wang}, \n  title     = {Triple Wins: Boosting Accuracy, Robustness and Efficiency Together \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9565696357172301
      ],
      "excerpt": "  journal   = {CoRR}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9664456561658856,
        0.9985319060770389,
        0.9490753289412834
      ],
      "excerpt": "  year      = {2020}, \n  url       = {https://arxiv.org/abs/2002.10025}, \n  eprinttype = {arXiv}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014,
        0.9949187583612273
      ],
      "excerpt": "  biburl    = {https://dblp.org/rec/journals/corr/abs-2002-10025.bib}, \n  bibsource = {dblp computer science bibliography, https://dblp.org} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gorakraj/earlyexit_onnx",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-22T09:01:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-04T14:37:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8780608314440154
      ],
      "excerpt": "This is a collection of benchmark papers for Early Exit neural networks from recent literature. The start point was the survey paper by researchers at SamsungAI, https://arxiv.org/abs/2106.05022. [see Table 1 on page 5] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9232712694154908,
        0.9771107837216263,
        0.8807400404005867
      ],
      "excerpt": "The project goal was to convert these codebases into .onnx formats. At the moment papers 6 and 9 have .onnx files and the network schematic can be viewed using the Netron viewer (https://github.com/lutzroeder/netron). \nThe onnx export for paper 1 is nearly complete - there are just some parts of msdnet that need to be adapted for it to work. Error messages will be included as well. \nPaper 8 also has some issues sourcing TinyImageNet and running it (section 5.4 in the github repo). The LISTA-stop stage 2 training also does not seem to work (section 5.1). Redownload the files from https://github.com/xinshi-chen/l2stop (some files too big to upload to github) but save the onnx_2 file elsewhere and add it after. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9398340973068914,
        0.88491832153217
      ],
      "excerpt": "Information about the project: \nThis project was undertaken as part of my 2 month UROP (Undergraduate Research Opportunity Project) at Imperial College London. I was supervised by Ben Biggs and Prof George Constantinides. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.927015999926651
      ],
      "excerpt": "I started off collating a spreadsheet based on the SamsungAI survey paper. Then I briefly read the papers and filtered through to find the relevant ones for the criteria Ben required. Looking at the network schematic diagrams were very useful in understanding the structure of the networks. I ended up with 10 relevant papers of which 4 had codebases. I then ran training for those models - in the process creating standardised environment files based on modules required - and then developed an .onnx export file for each of them. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9665476091034421
      ],
      "excerpt": "For PyTorch tutorials to get up to scratch: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "               Laurens van der Maaten and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "               Bradley McDanel and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "2021 Summer Research Internship project (UROP) at Imperial College London. Supervised by Prof George Constantinides and Ben Biggs",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gorakraj/earlyexit_onnx/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 19:21:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gorakraj/earlyexit_onnx/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "gorakraj/earlyexit_onnx",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/dncnn_stop/final_model_cmd.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/omniglot/run_vanilla_5_5.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/omniglot/run_imba.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/omniglot/run_vanilla_20_5.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/omniglot/run_vanilla_5_1.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/omniglot/run_vanilla_20_1.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/miniimagenet/run_vanilla_5_5.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/miniimagenet/run_imba.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/maml_stop/metal/experiments/miniimagenet/run_vanilla_5_1.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/lista_stop/experiments/run_lista_stop_stage2.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/lista_stop/experiments/run_lista_stop_stage1.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/lista_stop/experiments/run_lista.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/lista_stop/baselines/run_fista.sh",
      "https://raw.githubusercontent.com/gorakraj/earlyexit_onnx/master/Networks/8.%20L2Stop/l2stop-master/lista_stop/baselines/run_ista.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9043839751955379
      ],
      "excerpt": "| 1 | MSDNet | Vision / Classification | https://arxiv.org/abs/1703.09844 | https://github.com/kalviny/MSDNet-PyTorch | PyTorch | Yes | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8017131123028044,
        0.9544769989901093,
        0.8418643760681261
      ],
      "excerpt": "| 4 | RBQE | Vision / Enhancement | https://arxiv.org/abs/2006.16581 | https://github.com/RyanXingQL/RBQE | MATLAB | - | \n| 5 | MonoBERT | IR / Document Ranking | https://aclanthology.org/2020.sustainlp-1.11/ | https://github.com/castorini/earlyexiting-monobert | PyTorch | - | \n| 6 | BranchyNet | Vision / Classification | https://arxiv.org/abs/1709.01686 | https://github.com/kunglab/branchynet | PyTorch | Yes | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.809850925116252
      ],
      "excerpt": "| 8 | L2Stop | Vision / {Classification, Denoising} | https://arxiv.org/abs/2006.05082 | https://github.com/xinshi-chen/l2stop | PyTorch | Yes | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800978785255937
      ],
      "excerpt": "| 1   | Early-exit network-specific techniques    | MSDNet          | Vision / Classification               | https://arxiv.org/abs/1703.09844 | Yes   | https://github.com/kalviny/MSDNet-PyTorch       | PyTorch        | Possible issue with dotted line in schematic   | nn.Conv2d, nn.BatchNorm2d, nn.Linear, nn.ReLU, nn.MaxPool2d  | softmax with entropy                | Yes   |               |              | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80237443853957,
        0.8104865811496347,
        0.86922793164534,
        0.8104865811496347
      ],
      "excerpt": "For PyTorch tutorials to get up to scratch: \n-  https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html \n-  https://pytorch.org/tutorials/ \n-  https://pytorch.org/tutorials/beginner/Intro_to_TorchScript_tutorial.html \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "MSDNet (https://github.com/gaohuang/MSDNet) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406
      ],
      "excerpt": "BranchyNet (https://github.com/kunglab/branchynet) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/gorakraj/earlyexit_onnx/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Rich Text Format"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 kalviny\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "earlyexit_onnx",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "earlyexit_onnx",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "gorakraj",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/gorakraj/earlyexit_onnx/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 19:21:08 GMT"
    },
    "technique": "GitHub API"
  }
}