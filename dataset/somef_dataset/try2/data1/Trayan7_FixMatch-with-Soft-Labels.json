{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2001.07685",
      "https://arxiv.org/abs/2001.07685"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@article{sohn2020fixmatch,\n    title={FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence},\n    author={Kihyuk Sohn and David Berthelot and Chun-Liang Li and Zizhao Zhang and Nicholas Carlini and Ekin D. Cubuk and Alex Kurakin and Han Zhang and Colin Raffel},\n    journal={arXiv preprint arXiv:2001.07685},\n    year={2020},\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{sohn2020fixmatch,\n    title={FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence},\n    author={Kihyuk Sohn and David Berthelot and Chun-Liang Li and Zizhao Zhang and Nicholas Carlini and Ekin D. Cubuk and Alex Kurakin and Han Zhang and Colin Raffel},\n    journal={arXiv preprint arXiv:2001.07685},\n    year={2020},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.999981233841332
      ],
      "excerpt": "Kihyuk Sohn, David Berthelot, Chun-Liang Li, Zizhao Zhang, Nicholas Carlini, Ekin D. Cubuk, Alex Kurakin, Han Zhang, and Colin Raffel. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312955739552612
      ],
      "excerpt": "for size in 10 20 30 40 100 250 1000 4000; do \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Trayan7/FixMatch-with-Soft-Labels",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows Google's Open Source Community\nGuidelines.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-31T15:10:08Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-08T12:58:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9451703036423854
      ],
      "excerpt": "Code for the paper: \"FixMatch: Simplifying Semi-Supervised Learning with Consistency and Confidence\" by  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9408126953790841
      ],
      "excerpt": "This is not an officially supported Google product. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9057725690334723
      ],
      "excerpt": "Just pass more GPUs and fixmatch automatically scales to them, here we assign GPUs 4-7 to the program: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8951032016133207
      ],
      "excerpt": "The --augment flag can use a little more explanation. It is composed of 3 values, for example d.d.d \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8281774024943506,
        0.8541751623817676,
        0.9697382706131412
      ],
      "excerpt": "- the first d refers to data augmentation to apply to the labeled example.  \n- the second d refers to data augmentation to apply to the weakly augmented unlabeled example.  \n- the third d refers to data augmentation to apply to the strongly augmented unlabeled example. For the strong \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8098939632554305,
        0.8098939632554305
      ],
      "excerpt": "for seed in 0 1 2 3 4 5; do \nfor valid in 1 5000; do \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8098939632554305,
        0.8098939632554305
      ],
      "excerpt": "for seed in 1 2 3 4 5; do \nfor valid in 1 5000; do \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8098939632554305,
        0.8098939632554305
      ],
      "excerpt": "for seed in 1 2 3 4 5; do \nfor valid in 1 5000; do \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9606136861292316
      ],
      "excerpt": "We compute the median accuracy of the last 20 checkpoints in the paper, this is done through this code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Modification of FixMatch to allow the usage of soft labels with custom evaluation.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Trayan7/FixMatch-with-Soft-Labels/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 17:31:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Trayan7/FixMatch-with-Soft-Labels/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Trayan7/FixMatch-with-Soft-Labels",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Trayan7/FixMatch-with-Soft-Labels/main/imagenet/prep_imagenet_data/generate_ssl_imagenet.sh",
      "https://raw.githubusercontent.com/Trayan7/FixMatch-with-Soft-Labels/main/fully_supervised/runs/all.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "All commands must be ran from the project root. The following environment variables must be defined:\n```bash\nexport ML_DATA=\"path to where you want the datasets saved\"\nexport PYTHONPATH=$PYTHONPATH:.\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nexport ML_DATA=\"./datasets\"\nexport PYTHONPATH=$PYTHONPATH:\"E:\\Uni\\Masterarbeit\\Fixmatch\\fixmatch-master\"\n\n#: Download datasets\nCUDA_VISIBLE_DEVICES= ./scripts/create_datasets.py\ncp $ML_DATA/svhn-test.tfrecord $ML_DATA/svhn_noextra-test.tfrecord\n\n#: Create unlabeled datasets\nCUDA_VISIBLE_DEVICES= scripts/create_unlabeled.py $ML_DATA/SSL2/svhn $ML_DATA/svhn-train.tfrecord $ML_DATA/svhn-extra.tfrecord &\nCUDA_VISIBLE_DEVICES= scripts/create_unlabeled.py $ML_DATA/SSL2/svhn_noextra $ML_DATA/svhn-train.tfrecord &\nCUDA_VISIBLE_DEVICES= scripts/create_unlabeled.py $ML_DATA/SSL2/cifar10 $ML_DATA/cifar10-train.tfrecord &\nCUDA_VISIBLE_DEVICES= scripts/create_unlabeled.py $ML_DATA/SSL2/cifar100 $ML_DATA/cifar100-train.tfrecord &\nCUDA_VISIBLE_DEVICES= scripts/create_unlabeled.py $ML_DATA/SSL2/stl10 $ML_DATA/stl10-train.tfrecord $ML_DATA/stl10-unlabeled.tfrecord &\nwait\n\n#: Create semi-supervised subsets\nfor seed in 0 1 2 3 4 5; do\n    for size in 10 20 30 40 100 250 1000 4000; do\n        CUDA_VISIBLE_DEVICES= scripts/create_split.py --seed=$seed --size=$size $ML_DATA/SSL2/svhn $ML_DATA/svhn-train.tfrecord $ML_DATA/svhn-extra.tfrecord &\n        CUDA_VISIBLE_DEVICES= scripts/create_split.py --seed=$seed --size=$size $ML_DATA/SSL2/svhn_noextra $ML_DATA/svhn-train.tfrecord &\n        CUDA_VISIBLE_DEVICES= scripts/create_split.py --seed=$seed --size=$size $ML_DATA/SSL2/cifar10 $ML_DATA/cifar10-train.tfrecord &\n    done\n    for size in 400 1000 2500 10000; do\n        CUDA_VISIBLE_DEVICES= scripts/create_split.py --seed=$seed --size=$size $ML_DATA/SSL2/cifar100 $ML_DATA/cifar100-train.tfrecord &\n    done\n    CUDA_VISIBLE_DEVICES= scripts/create_split.py --seed=$seed --size=1000 $ML_DATA/SSL2/stl10 $ML_DATA/stl10-train.tfrecord $ML_DATA/stl10-unlabeled.tfrecord &\n    wait\ndone\nCUDA_VISIBLE_DEVICES= scripts/create_split.py --seed=1 --size=5000 $ML_DATA/SSL2/stl10 $ML_DATA/stl10-train.tfrecord $ML_DATA/stl10-unlabeled.tfrecord\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nsudo apt install python3-dev python3-virtualenv python3-tk imagemagick\nvirtualenv -p python3 --system-site-packages env3\n. env3/bin/activate\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "**Important**: `ML_DATA` is a shell environment variable that should point to the location where the datasets are installed. See the *Install datasets* section for more details.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9006738040892645
      ],
      "excerpt": "tensorboard.sh --port 6007 --logdir ./experiments \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8771390560896355
      ],
      "excerpt": "You can add custom datasets into the codebase by taking the following steps: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8048732808722541
      ],
      "excerpt": "You can now run the create_datasets script to obtain a tf record for it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8601378804340295
      ],
      "excerpt": "the created splits for your dataset. You will need to specify the corresponding variables if your dataset  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8382250608139803
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=4,5,6,7 python fixmatch.py --filters=32 --dataset=cifar10.3@40-1 --train_dir ./experiments/fixmatch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8971823465573899
      ],
      "excerpt": "python fixmatch.py --help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": ": python fixmatch.py --helpfull \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8489668320780693
      ],
      "excerpt": "- the first d refers to data augmentation to apply to the labeled example.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8342545700080288
      ],
      "excerpt": "You can point tensorboard to the training folder (by default it is --train_dir=./experiments) to monitor the training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8087486345860877,
        0.8574770301171556
      ],
      "excerpt": "./scripts/extract_accuracy.py ./experiments/fixmatch/cifar10.d.d.d.3@40-1/CTAugment_depth2_th0.80_decay0.990/FixMatch_archresnet_batch64_confidence0.95_filters32_lr0.03_nclass10_repeat4_scales3_uratio7_wd0.0005_wu1.0/ \n: The command above will create a stats/accuracy.json file in the model folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8135106202012015
      ],
      "excerpt": "The created function should return a dictionary of the format  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065866342965619
      ],
      "excerpt": "You can now run the create_datasets script to obtain a tf record for it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8548930186522143
      ],
      "excerpt": "In libml/data.py add your dataset in the create_datasets function. The specified \"label\" for the dataset has to match \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Trayan7/FixMatch-with-Soft-Labels/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Batchfile",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright 2015 Google Inc.\\nThis code has been modified from the original version at https://github.com/takerum/vat_tf\\nOriginal license reproduced below.\\n\\nCopyright (c) 2017 Takeru Miyato\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "FixMatch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FixMatch-with-Soft-Labels",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Trayan7",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Trayan7/FixMatch-with-Soft-Labels/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nsudo apt install python3-dev python3-virtualenv python3-tk imagemagick\nvirtualenv -p python3 --system-site-packages env3\n. env3/bin/activate\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 27 Dec 2021 17:31:40 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For example, training a FixMatch with 32 filters on cifar10 shuffled with `seed=3`, 40 labeled samples and 1\nvalidation sample:\n```bash\nCUDA_VISIBLE_DEVICES=0 python fixmatch.py --filters=32 --dataset=cifar10.3@40-1 --train_dir ./experiments/fixmatch\n```\n\nAvailable labelled sizes are 10, 20, 30, 40, 100, 250, 1000, 4000.\nFor validation, available sizes are 1, 5000.\nPossible shuffling seeds are 1, 2, 3, 4, 5 and 0 for no shuffling (0 is not used in practiced since data requires to be\nshuffled for gradient descent to work properly).\n\n\n",
      "technique": "Header extraction"
    }
  ]
}