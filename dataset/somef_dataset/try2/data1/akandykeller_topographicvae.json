{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The Robert Bosch GmbH is acknowledged for financial support.\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.01394\n\n## Getting Started\n#### Install requirements with Anaconda:\n`conda env create -f environment.yml`\n\n#### Activate the conda environment\n`conda activate tvae`\n\n#### Install the tvae package\nInstall the tvae package inside of your conda environment. This allows you to run experiments with the `tvae` command. At the root of the project directory run (using your environment's pip"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9977994744046882
      ],
      "excerpt": "Paper: https://arxiv.org/abs/2109.01394 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/akandykeller/TopographicVAE",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-02T11:50:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-04T11:07:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- All models are built using the `TVAE` module (see `tvae/containers/tvae.py`) which requires a z-encoder, a u-encoder, a decoder, and a 'grouper'. The grouper module defines the topographic structure of the latent space through a `model` (equivalent to W in the paper), and a `padder` which defines the boundary conditions.\n- All experiments can be found in `tvae/experiments/`, and begin with the model specification, followed by the experiment config where important values such as L (`group_kernel`) and K (`n_off_diag`) can be set. \n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9276088111616101,
        0.9707017505256867
      ],
      "excerpt": "'n_off_diag': int, determines the spatial extent of the grouping within a single timestep (denoted K in the paper), n_off_diag=1 gives K=3, while n_off_diag=0 gives K=1. \n'group_kernel': tuple of int, defines the size of the kernel used by the grouper, exact definition and relationship to W varies for each experiment. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official implementation of the paper \"Topographic VAEs learn Equivariant Capsules\" ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/akandykeller/topographicvae/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Wed, 22 Dec 2021 00:19:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/akandykeller/TopographicVAE/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "akandykeller/TopographicVAE",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository uses Weight & Biases for experiment tracking. By deafult this is set to off. However, if you would like to use this (highly recommended!) functionality, all you have to do is set `'wandb_on': True` in the experiment config, and set your account's project and entity names in the `tvae/utils/logging.py` file.\n\nFor more information on making a Weight & Biases account see [(creating a weights and biases account)](https://app.wandb.ai/login?signup=true) and the associated [quickstart guide](https://docs.wandb.com/quickstart).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Install the tvae package inside of your conda environment. This allows you to run experiments with the `tvae` command. At the root of the project directory run (using your environment's pip):\n`pip3 install -e .`\n\nIf you need help finding your environment's pip, try `which python`, which should point you to a directory such as `.../anaconda3/envs/tvae/bin/` where it will be located.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "`conda env create -f environment.yml`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9770335174395833
      ],
      "excerpt": "conda activate tvae \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8652851032499539
      ],
      "excerpt": "'max_epochs': int, total training epochs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617853568062727
      ],
      "excerpt": "'batch_size': int, number of samples per batch \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/akandykeller/TopographicVAE/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/akandykeller/topographicvae/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\\nThe Robert Bosch GmbH is acknowledged for financial support.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Topographic Variational Autoencoder",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "TopographicVAE",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "akandykeller",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/akandykeller/TopographicVAE/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`conda env create -f environment.yml`\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To rerun the experiment from Figure 3, you can run:\n- `tvae --name 'tvae_2d_mnist'`\n\nTo rerun the experiments from Figure 4, you can run:\n- `tvae --name 'tvae_Lpartial_mnist'`\n- `tvae --name 'tvae_Lpartial_dsprites'`\n\nTo rerun the experiments from Tables 1, you can run:\n- `tvae --name 'tvae_Lhalf_mnist'`\n- `tvae --name 'tvae_Lshort_mnist'`\n- `tvae --name 'bubbles_mnist'`\n- `tvae --name 'tvae_L0_mnist'`\n- `tvae --name 'nontvae_mnist'`\n\nTo rerun the experiments from Tables 2, you can run:\n- `tvae --name 'tvae_Lhalf_dsprites'`\n- `tvae --name 'tvae_Lpartial_dsprites'`\n- `tvae --name 'tvae_Lshort_dsprites'`\n- `tvae --name 'bubbles_dsprites'`\n- `tvae --name 'tvae_L0_dsprites'`\n- `tvae --name 'nontvae_dsprites'`\n\nTo rerun the generalization experiment described in Section B.4 (resulting in Figures 1 and 6), you can run:\n- `tvae --name 'tvae_Lpartial_mnist_generalization'`\n\nTo rerun the experiments from Figures 22 and 23 (training on complex combined transformations), you can run:\n- `tvae --name 'tvae_Lpartial_perspective_mnist'`\n- `tvae --name 'tvae_Lpartial_rotcolor_mnist'`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 57,
      "date": "Wed, 22 Dec 2021 00:19:14 GMT"
    },
    "technique": "GitHub API"
  }
}