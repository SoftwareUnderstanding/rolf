{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.07402\n- YOLOv4: Optimal Speed and Accuracy of Object Detection\nhttps://arxiv.org/pdf/2004.10934.pdf\n\n## Requirements\n\nPython 3.8 or later with all requirements.txt dependencies installed, including torch>=1.7. To install run:\n\n`pip install -r requirements.txt`\n\nAll dependencies are included in the associated docker images. Docker requirements are: \n- `nvidia-docker`\n- Nvidia Driver Version >= 440.44\n\n## Before you run the tracker\n\n1. Clone the repository recursively:\n\n`git clone --recurse-submodules https://github.com/ElipLam/IceBlock_Detection.git`\n\nIf you already cloned and forgot to use `--recurse-submodules` you can run `git submodule update --init`\n\n2. Github block pushes of files larger than 100 MB (https://help.github.com/en/github/managing-large-files/conditions-for-large-files"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9832480502876094
      ],
      "excerpt": "HTTP stream:  --source http://wmccpinetop.axiscam.net/mjpg/video.mjpg \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElipLam/IceBlock_Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-08T17:30:21Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-21T11:06:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The implementation is based on two papers:\n\n- Simple Online and Realtime Tracking with a Deep Association Metric\nhttps://arxiv.org/abs/1703.07402\n- YOLOv4: Optimal Speed and Accuracy of Object Detection\nhttps://arxiv.org/pdf/2004.10934.pdf\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository contains a moded version of PyTorch YOLOv5 (https://github.com/ultralytics/yolov5). It filters out every detection that is not a person. The detections of persons are then passed to a Deep Sort algorithm (https://github.com/ZQPei/deep_sort_pytorch) which tracks the persons. The reason behind the fact that it just tracks persons is that the deep association metric is trained on a person ONLY datatset.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9743455524755257
      ],
      "excerpt": "This project base on Yolov5_DeepSort_Pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Counter Ice Block in A Factory",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElipLam/IceBlock_Detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 17:53:46 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ElipLam/IceBlock_Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ElipLam/IceBlock_Detection",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9043929270298233,
        0.8956959924107587
      ],
      "excerpt": "Webcam:  --source 0 \nRTSP stream:  --source rtsp://170.93.143.139/rtplive/470011e600ef003a004ee33696235daa \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ElipLam/IceBlock_Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Ziqiang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Ice Block Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "IceBlock_Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ElipLam",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ElipLam/IceBlock_Detection/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Python 3.8 or later with all requirements.txt dependencies installed, including torch>=1.7. To install run:\n\n`pip install -r requirements.txt`\n\nAll dependencies are included in the associated docker images. Docker requirements are: \n- `nvidia-docker`\n- Nvidia Driver Version >= 440.44\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone the repository recursively:\n\n`git clone --recurse-submodules https://github.com/ElipLam/IceBlock_Detection.git`\n\nIf you already cloned and forgot to use `--recurse-submodules` you can run `git submodule update --init`\n\n2. Github block pushes of files larger than 100 MB (https://help.github.com/en/github/managing-large-files/conditions-for-large-files). Hence you need to download two different weights: the ones for yolo and the ones for deep sort\n\n- download the yolov5 weight from the latest realease https://github.com/ultralytics/yolov5/releases. Place the downlaoded `.pt` file under `yolov5/weights/`\n- download the deep sort weights from https://drive.google.com/drive/folders/1xhG0kRH1EX5B9_Iz8gQJb7UNnn_riXi6. Place ckpt.t7 file under`deep_sort/deep/checkpoint/`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 17:53:46 GMT"
    },
    "technique": "GitHub API"
  }
}