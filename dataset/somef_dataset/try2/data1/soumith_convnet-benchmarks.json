{
  "citation": [
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "| fbfft                    | SpatialConvolutionCuFFT                                                   |  76 |  45 |  12 |  4 | 18 | 155   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "| Torch-7                  |nn.SpatialConvolutionMM                                       | 206 | 432 | 178 | 29 | 32 | 877   | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/soumith/convnet-benchmarks",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2014-07-12T03:18:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T06:52:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8965733607835197,
        0.9944787269363831,
        0.9845463697795759
      ],
      "excerpt": "I pick some popular imagenet models, and I clock the time for a full forward + backward pass. I average my times over 10 runs. I ignored dropout and softmax layers. \nInput is described as {batch_size}x{num_filters}x{filter_width}x{filter_height}. Where batch_size is the number of images used in a minibatch, num_filters is the number of channels in an image, filter_width is the width of the image, and filter_height is the height of the image. \nThe CuDNN benchmarks are done using Torch bindings. One can also do the same via Caffe bindings or bindings of any other library. This note is here to clarify that Caffe (native) and Torch (native) are the convolution kernels which are present as a default fallback. Some of the frameworks like TensorFlow and Chainer are benchmarked with CuDNN, but it is not explicitly mentioned, and hence one might think that these frameworks as a whole are faster, than for example Caffe, which might not be the case. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9309976053525464
      ],
      "excerpt": "This table is NOT UPDATED For TITAN-X. These numbers below were on Titan Black and are here only for informational and legacy purposes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.931413908542494,
        0.8116737042352841,
        0.9727804166515669
      ],
      "excerpt": "* indicates that the library was tested with Torch bindings of the specific kernels. \n** indicates that the library was tested with Pylearn2 bindings. \n*** This is an experimental module which used FFT to calculate convolutions. It uses a lot of memory according to @benanne \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8751508702101962
      ],
      "excerpt": "The table is ranked according to the total time forward+backward calls for layers (L1 + L2 + L3 + L4 + L5) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Easy benchmarking of all publicly accessible implementations of convnets",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/soumith/convnet-benchmarks/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 587,
      "date": "Mon, 27 Dec 2021 22:24:14 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/soumith/convnet-benchmarks/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "soumith/convnet-benchmarks",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/deepcl/install.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/caffe/run_nogradinput.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/caffe/run_forcegradinput.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/caffe/install.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/caffe/run_imagenet.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/chainer/run.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/greentea/run_nogradinput.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/greentea/run_forcegradinput.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/greentea/install.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/greentea/run_imagenet.sh",
      "https://raw.githubusercontent.com/soumith/convnet-benchmarks/master/tensorflow/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8411004553040458,
        0.8411004553040458
      ],
      "excerpt": "| cuda-convnet2 *          | ConvLayer                     | 977               |  201                    | 776                      | \n| cuda-convnet           | pylearn2.cuda_convnet   | 1077              |  312                    | 765                      | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8607019090719986
      ],
      "excerpt": "| cuda-convnet           | pylearn2.cuda_convnet            | 38 | 183 |  68 |  7 | 16 | 312 | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/soumith/convnet-benchmarks/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Lua",
      "Cuda",
      "Shell",
      "C",
      "C++",
      "JavaScript",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2016 Soumith Chintala\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "convnet-benchmarks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "convnet-benchmarks",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "soumith",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/soumith/convnet-benchmarks/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2663,
      "date": "Mon, 27 Dec 2021 22:24:14 GMT"
    },
    "technique": "GitHub API"
  }
}