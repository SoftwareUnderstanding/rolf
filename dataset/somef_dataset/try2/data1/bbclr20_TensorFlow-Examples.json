{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1406.2661",
      "https://arxiv.org/abs/1511.06434",
      "https://arxiv.org/abs/1406.2661>\n\n2. <https://arxiv.org/abs/1511.06434>",
      "https://arxiv.org/abs/1511.06434>"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. <https://arxiv.org/abs/1406.2661>\n\n2. <https://arxiv.org/abs/1511.06434>\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bbclr20/TensorFlow-Examples",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-30T06:20:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-07-17T02:30:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8554372383341453
      ],
      "excerpt": "Implementing linear regression using TensorFlow. The training result is compared with the result of least squares regression which is a standard approach of overdetermined systems. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090592996082807
      ],
      "excerpt": "Queue and Thread: Some examples of TensorFlow FIFOQueue, QueueRunner, Coordinator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9169544480788671,
        0.9147956743555306,
        0.9149780079854765,
        0.9170724375876892,
        0.8441905304004612
      ],
      "excerpt": "Saving and loading the tensor with checkpoint. Reusing the variable in the specific scopes. \nParsing the arguments with argparse and tf.app.flags. \nTraining MNIST dataset with a simple neural network and a simple cnn model. \nTrying to implement the classic models without using high-level API. \nVisualizing the training model and data with TensorBoard. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9854830257617656
      ],
      "excerpt": "Using Tensorflow Serving to serve a model with docker. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8895376409675789,
        0.9620513223819583,
        0.9604373562014007
      ],
      "excerpt": "Summarizing all scalars, trainable variables and visualizing the data. \nTrying to implement different kinds of GANs with TensorFlow. \nGAN: Creating random normal datasets with specific mean and stddev. Training a GAN to generate the data which fits the random normal distribution[1].  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9359489226251889
      ],
      "excerpt": "GAN MNIST: Using a simple GAN to generate MNIST-like data[1].  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9159573347614183
      ],
      "excerpt": "DCGAN: Creating a DCGAN model which uses tf.layers.conv2d_transpose in the generator to generate/deconvolution image[2]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Some examples of TensorFlow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bbclr20/TensorFlow-Examples/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 11:21:10 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bbclr20/TensorFlow-Examples/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bbclr20/TensorFlow-Examples",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8577890029838372
      ],
      "excerpt": "CIFAR10: Pseudo example of reading CIFAR10 dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168700769197289
      ],
      "excerpt": "<img src=\"result/viz_mnist_pca.png\" width=\"60%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9234440831031623
      ],
      "excerpt": "<img src=\"result/fit_random_normal.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168700769197289
      ],
      "excerpt": "<img src=\"result/gan_mnist.png\" width=\"60%\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bbclr20/TensorFlow-Examples/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TensorFlow-Examples",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "TensorFlow-Examples",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bbclr20",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bbclr20/TensorFlow-Examples/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 11:21:10 GMT"
    },
    "technique": "GitHub API"
  }
}