{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1608.06993",
      "https://arxiv.org/abs/1608.06993"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] [Densely Connected Convolutional Networks](https://arxiv.org/abs/1608.06993)<br>\n[2] [DenseNet - Lua implementation](https://github.com/liuzhuang13/DenseNet)\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cmasch/densenet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-01-02T18:55:30Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-25T05:29:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9519779989346246,
        0.9830421027981362
      ],
      "excerpt": "Densely Connected Convolutional Network (DenseNet) is a network architecture where each layer is directly connected to every other layer in a feed-forward fashion. It's quite similar to ResNet but in contrast DenseNet concatenates outputs instead of using summation. If you need a quick introduction about how DenseNet works, please read the original paper[1]. It's well written and easy to understand. \nI implemented a DenseNet in Python using Keras and TensorFlow as backend. Because of this I can't guarantee that this implementation is working well with Theano or CNTK. In the next months I will update the code to TensorFlow 2.x. Besides I will try to optimize this architecture in my own way with some modifications. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9739271201935564
      ],
      "excerpt": "I used this notebook to evaluate the model on fashion-MNIST with following parameters: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9300531939250799
      ],
      "excerpt": "Feel free to try it on your own with another parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of Densely Connected Convolutional Network with Keras and TensorFlow.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cmasch/densenet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Thu, 23 Dec 2021 14:52:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cmasch/densenet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "cmasch/densenet",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8521061937724536
      ],
      "excerpt": "| 5 | 35 | 20 | 0.4 | False | 0.9 | 100 / 80 | 0.1366 / 0.9681 | 0.1675 / 0.9643 | 0.2739 / 0.9459 | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/cmasch/densenet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DenseNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "densenet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "cmasch",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/cmasch/densenet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- TensorFlow 2.x\n- Python 3.x\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 40,
      "date": "Thu, 23 Dec 2021 14:52:20 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "densenet",
      "keras",
      "tensorflow",
      "architecture",
      "neural-network",
      "image-processing",
      "fashion-mnist",
      "computer-vision"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Feel free to use this implementation:<br>\n```\nimport densenet\nmodel = densenet.DenseNet(input_shape=(28,28,1), nb_classes=10, depth=10, growth_rate=25,\n                          dropout_rate=0.1, bottleneck=False, compression=0.5).build_model()\nmodel.summary()\n```\nThis will build the following model:<br>\n<img src=\"./images/model_3-2.png\" height=\"1024px\"></kbd>\n\n",
      "technique": "Header extraction"
    }
  ]
}