{
  "citation": [
    {
      "confidence": [
        0.9279628677675321,
        0.9985319060770389
      ],
      "excerpt": "* PhysNet 3D (https://github.com/ZitongYu/PhysNet) \n* SpatioTemporal PhysNet (https://arxiv.org/pdf/1905.02419v1.pdf) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9784474557512864
      ],
      "excerpt": "* Global Context Block (https://arxiv.org/pdf/1904.11492.pdf) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Oichii/DeepPulse-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-02T18:39:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-10T06:04:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.81351144504394
      ],
      "excerpt": "* HR-CNN (https://github.com/radimspetlik/hr-cnn) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.91103372428665
      ],
      "excerpt": "Script grad_cam.py contains function to visualise activation maps using GradCam method adapted to 3D convolution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of pulse measurement neural networks.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Oichii/DeepPulse-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Sat, 25 Dec 2021 00:40:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Oichii/DeepPulse-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Oichii/DeepPulse-pytorch",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9164983446021069,
        0.873610974999357
      ],
      "excerpt": "training script hr_cnn_train.py \\ \nvalidation script hr_cnn_valid.py\\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9164983446021069,
        0.873610974999357
      ],
      "excerpt": "training script PhysNet_train.py \\ \nvalidation script PhysNet_train.py\\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9164983446021069,
        0.873610974999357
      ],
      "excerpt": "training script PhysNet_train.py \\ \nvalidation script PhysNet_test.py\\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Oichii/DeepPulse-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepPulse",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeepPulse-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Oichii",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Oichii/DeepPulse-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* scipy\n* torch\n* opencv-python\n* torchvision\n* numpy\n* pandas\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 17,
      "date": "Sat, 25 Dec 2021 00:40:51 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gradcam",
      "pytorch",
      "hr-cnn",
      "physnet-3d",
      "physnet",
      "pulse",
      "heart-rate"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To train or test network use appropriate script from listed below. \nPyTorch Dataloader and Dataset are prepared to work with sets containing `waveform` information from pulseoximeter. \nScripts require lists of sequences to train and test the network. Sequences should be placed in `<dataset>\\<sequence_num>`\ndirectory, where `<dataset>` should be set as `root_dir = <dataset>` in training and testing scripts. \n",
      "technique": "Header extraction"
    }
  ]
}