{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The RoofN3D training data (Wichmann et al., 2018) was provided by the chair Methods of Geoinformation Science of Technische Universit\u00e4t Berlin and is available at https://roofn3d.gis.tu-berlin.de.\n\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[1] Wichmann, A., Agoub, A., Kada, M., 2018. RoofN3D: Deep Learning Training Data for 3D Building Reconstruction. In: The International Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences, XLII-2, pp. 1191-1198.\n\n[2] Qi Charles, R & Su, Hao & Kaichun, Mo & Guibas, Leonidas. (2017). PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation. 77-85. 10.1109/CVPR.2017.16. \n\n[3] Yuan, Wentao & Khot, Tejas & Held, David & Mertz, Christoph & Hebert, Martial. (2018). PCN: Point Completion Network. 728-737. 10.1109/3DV.2018.00088. \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.83781780697881
      ],
      "excerpt": "5. Multi-Task Learning: Perform Classification, and Segmentation in a multi-task setting for original, and perturbed dataset. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sarthakTUM/roofn3d",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-02-06T17:20:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-30T03:38:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.970168280958127,
        0.9494470703701411,
        0.9693119825884939
      ],
      "excerpt": "This repository contains the project for the course: https://dvl.in.tum.de/teaching/adl4cv-ws18/ \nWe design a Deep Learning framework that directly consumes unordered point sets as inputs, representing the Roof of a building.  \nA Point Cloud is represented as a set of 3D points {Pi| i = 1, ..., n}, where each point Pi is a vector of its (x, y, z) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8150556210202478
      ],
      "excerpt": "1. Classification: Clasifying the input point cloud into 3 categories: Saddleback Roof, Pyramid Roof, and Two-Sided Hip Roof \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8643473994328266
      ],
      "excerpt": "3. Damaging: Manually simulating damages of various shapes in the roofs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8826863298533917,
        0.9240702659782254
      ],
      "excerpt": "PointNet [2] is used for Classification, Segmentation and Multi-Task Learning on original as well as perturbed dataset \nPoint Completion Network [3] is used for completing the damaged roofs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9980166747741909
      ],
      "excerpt": "It is recommended to spare atleast 10GB of RAM for data loading. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Roof Classification, Segmentation, and Damage Completion using 3D Point Clouds",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sarthakTUM/roofn3d/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Wed, 22 Dec 2021 15:14:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sarthakTUM/roofn3d/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sarthakTUM/roofn3d",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/completion/notebooks/damaging.ipynb",
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/cls_seg_mt/notebooks/damaging.ipynb",
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/cls_seg_mt/notebooks/graphs.ipynb",
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/cls_seg_mt/notebooks/3d_viz.ipynb",
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/cls_seg_mt/notebooks/EDA.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/cls_seg_mt/download.sh",
      "https://raw.githubusercontent.com/sarthakTUM/roofn3d/master/cls_seg_mt/build.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9517499271221802
      ],
      "excerpt": "go to cd cls_seg_mt. Run python train_classification.py --input_path=path_to_data_from_step2 --outf=models/cls. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8883655089863433,
        0.9143488539982338,
        0.8528418388014254,
        0.8909314073534372
      ],
      "excerpt": "go to cd cls_seg_mt. Run python train_classification.py --input_path=path_to_data_from_step2 --outf=models/cls. \nYou must change the --input-pathto path of data dobtained from step 2. The  outf argument corresponds to output drectory for the trained models. For example: python train_classification.py  --input_path=data/roofn3d_data_multitask_all --outf=models/cls. \nfor segmentation, run python train_segmentation.py --input_path=path_to_data_from_step2 --outf=models/seg.  \nYou must change the --input-pathto path of data dobtained from step 2. The  outf argument corresponds to output drectory for the trained models. For example: python train_segmentation.py  --input_path=data/roofn3d_data_multitask_all --outf=models/seg. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9167307010316921,
        0.8361460875328582
      ],
      "excerpt": "You must change the --input-pathto path of data dobtained from step 2. The  outf argument corresponds to output drectory for the trained models. For example: python train_multitask.py  --input_path=data/roofn3d_data_multitask_all --outf=models/mt. \nNOTE: The first run might take some time to load all the point-clouds in the memory and save them for faster access in the next run. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sarthakTUM/roofn3d/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "C++",
      "Cuda",
      "Makefile",
      "CMake",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Fei Xia\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Roof Classification, Segmentation, and Damage Completion using 3D Point Clouds",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "roofn3d",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sarthakTUM",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sarthakTUM/roofn3d/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 28,
      "date": "Wed, 22 Dec 2021 15:14:43 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deeplearning",
      "pointcloud",
      "computer-vision",
      "roof",
      "roofn3d",
      "point-cloud",
      "roof-classification",
      "multi-task"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone the repository: `git clone https://github.com/sarthakTUM/roofn3d.git`\n2. go to `cd roofn3d`. Install the requirements: `pip install -r requirements.txt`. It is recommended to perform this step in a separate virtual environment. If using Conda, then `conda create --name roofn3d`.\n3. For classification, segmentation, and multi-task demo: `cd cls_seg_mt`. \n4. Run `python demo.py`. Different examples can be seen by changing the `--idx`parameter. \nFor example, `python demo.py --idx=15`. The `--idx` parameter can be a maximum of 23.\n5. For Roof Completion, go to `cd completion` from the roof directory.\n6. Run `python demo.py`. Different example can be seen by changing the `--input_path` parameter. For example: `python demo.py --input_path=demo_data/saddleback_roof.pcd`, or `python demo.py --input_path=demo_data/twosidedhip_roof.pcd`.\n7. Demo data for both the tasks have been added to demo:data directories. \n\nThe models are cloned along with the repository. If there are any difficulties in cloning the models, please download the models\nfrom:\n1. https://drive.google.com/open?id=1C8X4O9SnNmvmJbzpqx_2YJR7sYTxZ3Tm for Classification, segmentation, and Multi-Task networks. Place the models in the `roofn3d/cls_seg_mt/models` directory.\n2. https://drive.google.com/open?id=15r54fXLjZcFuL2ok35M1_hXxw_Fn7LJu for Completion. Place the model in `completion/log` directory. \n\n",
      "technique": "Header extraction"
    }
  ]
}