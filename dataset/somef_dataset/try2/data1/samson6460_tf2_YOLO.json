{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.02640",
      "https://arxiv.org/abs/1612.08242",
      "https://arxiv.org/abs/1804.02767"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9969849825191378,
        0.9603369639556263,
        0.9006123651641421
      ],
      "excerpt": "YOLOv1: You Only Look Once: Unified, Real-Time Object Detection by Joseph Redmon, Santosh Divvala, Ross Girshick, Ali Farhadi (https://arxiv.org/abs/1506.02640). \nYOLOv2(YOLO9000): Better, Faster, Stronger by Joseph Redmon, Ali Farhadi (https://arxiv.org/abs/1612.08242). \nYOLOv3: An Incremental Improvement by Joseph Redmon, Ali Farhadi (https://arxiv.org/abs/1804.02767). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/samson6460/tf2_YOLO",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-08T12:43:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T02:27:57Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9113871073553446
      ],
      "excerpt": "The truth may be that the model only look once, but you implemented it and tried it thousands of times. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9956976150591028
      ],
      "excerpt": "tf2_YOLO is my implementation of YOLOv1 to YOLOv3 using Tensorflow 2.X after delving into 3 papers of YOLO: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9841325928320815
      ],
      "excerpt": "This repo refers to lots of resources, including the source code of darknet: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8119322820177908
      ],
      "excerpt": "Most importantly, the repo is written in Python and Tensorflow, so you can easily modify anything in it and program comfortably. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9968029537584643
      ],
      "excerpt": "Table of Contents \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8509557003436018
      ],
      "excerpt": "4. Get anchor boxes for yolov2 and yolov3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9428301859715258
      ],
      "excerpt": "input_shape: A tuple of 3 integers, shape of input image. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9622086729065336
      ],
      "excerpt": "batch_size: An integer, size of the batches of data (default: 20). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8697212450250852,
        0.8619089259402867
      ],
      "excerpt": "A tuple of 2 ndarrays, (img, label), \n- shape of img: (batch_size, img_heights, img_widths, channels) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153451695657586,
        0.8619089259402867
      ],
      "excerpt": "A tuple: (img: ndarray, label_list: list), label_list contains the label of all FPN layers. \n- shape of img: (batch_size, img_heights, img_widths, channels) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = yolo.create_model(bbox_num) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = yolo.create_model(anchors) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.905594030280189
      ],
      "excerpt": "    method='binary' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.905594030280189
      ],
      "excerpt": "        method='binary' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    data, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    data[0], \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "YOLOV1 to V3 implemented in tensorflow 2.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/samson6460/tf2_YOLO/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Mon, 27 Dec 2021 08:47:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/samson6460/tf2_YOLO/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "samson6460/tf2_YOLO",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone or download\n    - Use the command bellow in terminal to git clone:    \n    ```git clone https://github.com/samson6460/tf2_YOLO.git```\n\n    - Or just download whole files using the **[Code > Download ZIP]** button in the upper right corner.\n    \n2. Install dependent packages: \n    ```pip install -r requirements.txt```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.897609135643766
      ],
      "excerpt": "Before you go crazy, you must try this repo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9004133461935165
      ],
      "excerpt": "dataset from: https://github.com/datitran/raccoon_dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9638300750521926
      ],
      "excerpt": "dataset from: https://github.com/Shenggan/BCCD_Dataset.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9752346435114589
      ],
      "excerpt": "    version=1 #: or version=2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9717106327039013
      ],
      "excerpt": "    version=3) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9084646768633791
      ],
      "excerpt": "2. Read file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8737873112808705
      ],
      "excerpt": "7. Train model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from tf2_YOLO import yolov1_5 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from tf2_YOLO import yolov2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from tf2_YOLO import yolov3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189814752599714
      ],
      "excerpt": "Read as array(read into RAM) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8582308300171295
      ],
      "excerpt": "Read as tf.Sequence \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8463376494446864
      ],
      "excerpt": "img_path: A string, file path of images. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112737377376974
      ],
      "excerpt": "batch_size: An integer, size of the batches of data (default: 20). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174706349509115
      ],
      "excerpt": "- shape of label: (batch_size, grid_heights, grid_widths, info) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174706349509115
      ],
      "excerpt": "- shape of label: (batch_size, grid_heights, grid_widths, info) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966278519270737,
        0.8855298618768842
      ],
      "excerpt": "from utils.tools import get_class_weight \nfrom tensorflow.keras.optimizers import Adam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8966278519270737,
        0.8855298618768842
      ],
      "excerpt": "from utils.tools import get_class_weight \nfrom tensorflow.keras.optimizers import Adam \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8581422815892361
      ],
      "excerpt": "Train with dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8534646341849215
      ],
      "excerpt": "Train with tf.Sequence \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9048875019510337,
        0.8506171503565928
      ],
      "excerpt": "from utils.measurement import create_score_mat \nprediction = yolo.model.predict(data) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9048875019510337,
        0.8506171503565928
      ],
      "excerpt": "from utils.measurement import create_score_mat \nprediction = yolo.model.predict(data) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/samson6460/tf2_YOLO/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "tf2_YOLO",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tf2_YOLO",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "samson6460",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/samson6460/tf2_YOLO/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "samson6460",
        "body": "Weights for tf2 Darknet53 448*448 pretrained on ImageNet.",
        "dateCreated": "2021-10-22T04:14:05Z",
        "datePublished": "2021-11-08T09:33:29Z",
        "html_url": "https://github.com/samson6460/tf2_YOLO/releases/tag/Weights",
        "name": "Darknet53 pretrained on ImageNet",
        "tag_name": "Weights",
        "tarball_url": "https://api.github.com/repos/samson6460/tf2_YOLO/tarball/Weights",
        "url": "https://api.github.com/repos/samson6460/tf2_YOLO/releases/52901733",
        "zipball_url": "https://api.github.com/repos/samson6460/tf2_YOLO/zipball/Weights"
      },
      {
        "authorType": "User",
        "author_name": "samson6460",
        "body": "Weights for tf2 YOLO-Darknet body pretrained on PASCAL VOC.\r\n",
        "dateCreated": "2021-05-08T12:40:34Z",
        "datePublished": "2021-05-09T10:41:01Z",
        "html_url": "https://github.com/samson6460/tf2_YOLO/releases/tag/1.0",
        "name": "YOLO-Darknet body pretrained on PASCAL VOC ",
        "tag_name": "1.0",
        "tarball_url": "https://api.github.com/repos/samson6460/tf2_YOLO/tarball/1.0",
        "url": "https://api.github.com/repos/samson6460/tf2_YOLO/releases/42662344",
        "zipball_url": "https://api.github.com/repos/samson6460/tf2_YOLO/zipball/1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Mon, 27 Dec 2021 08:47:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "deep-neural-networks",
      "yolov1",
      "yolov2",
      "yolov3",
      "tensorflow",
      "tensorflow2",
      "keras",
      "object-detection"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "***YOLOv2***\n```\nfrom utils.kmeans import kmeans, iou_dist\nimport numpy as np\n\nall_boxes = label[label[..., 4] == 1][..., 2:4]\nanchors = kmeans(\n    all_boxes,\n    n_cluster=5,\n    dist_func=iou_dist,\n    stop_dist=0.00001)\nanchors = np.sort(anchors, axis=0)[::-1]\n```\n\n***YOLOv3***\n```\nfrom utils.kmeans import kmeans, iou_dist\nimport numpy as np\n\nall_boxes = label[-1][label[-1][..., 4] == 1][..., 2:4]\nanchors = kmeans(\n    all_boxes,\n    n_cluster=9,\n    dist_func=iou_dist,\n    stop_dist=0.00001)\nanchors = np.sort(anchors, axis=0)[::-1]\n```\n\n---\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "***YOLOv1\u3001YOLOv2***\n```\nfrom utils.measurement import PR_func\n\npr = PR_func(\n    label,\n    prediction,\n    class_names=yolo.class_names,\n    max_per_img=100,\n    version=1 #: or version=2\n    )\n\npr.plot_pr_curve(smooth=False)\n\npr.get_map(mode=\"voc2012\")\n```\n\n***YOLOv3***\n```\nfrom utils.measurement import PR_func\n\npr = PR_func(\n    data[-1],\n    prediction[2],\n    prediction[1],\n    prediction[0],\n    class_names=yolo.class_names,\n    max_per_img=100,\n    version=3\n    )\n\npr.plot_pr_curve(smooth=False)\n\npr.get_map(mode=\"voc2012\")\n```\n\n- **max_per_img**: An integer, limit the number of objects that an image can detect at most.\n- **version**: An integer, specifying the decode method, yolov1\u3001v2 or v3.\n- **smooth**: A boolean, if True, use interpolated precision.\n- **mode**: A string, one of \"voc2007\", \"voc2012\"(default), \"area\", \"smootharea\".\n  - \"voc2007\": calculate the average precision of recalls at [0, 0.1, ..., 1](11 points).\n  - \"voc2012\": calculate the average precision of recalls at [0, 0.14, 0.29, 0.43, 0.57, 0.71, 1].\n  - \"area\": calculate the area under precision-recall curve.\n  - \"smootharea\": calculate the area under interpolated precision-recall curve.",
      "technique": "Header extraction"
    }
  ]
}