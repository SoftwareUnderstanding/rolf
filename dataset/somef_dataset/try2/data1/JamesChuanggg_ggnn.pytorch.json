{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.05493",
      "https://arxiv.org/abs/1511.05493"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Gated Graph Sequence Neural Networks](https://arxiv.org/abs/1511.05493), ICLR 2016\n- [yujiali/ggnn](https://github.com/yujiali/ggnn)\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chingyaoc/ggnn.pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-02-01T08:14:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T07:18:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9896387401084017
      ],
      "excerpt": "This is a PyTorch implementation of the Gated Graph Sequence Neural Networks (GGNN) as described in the paper Gated Graph Sequence Neural Networks by Y. Li, D. Tarlow, M. Brockschmidt, and R. Zemel. This implementation gets 100% accuracy on node-selection bAbI task 4, 15, and 16. Their official implementation are available in the yujiali/ggnn repo on GitHub. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.805986117014036,
        0.852864563961927
      ],
      "excerpt": "Solve graph-structured data and problems \nA gated propagation model to compute node representations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9746377816129099
      ],
      "excerpt": "The data processing codes are from official implementation yujiali/ggnn. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A PyTorch Implementation of Gated Graph Sequence Neural Networks (GGNN)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JamesChuanggg/ggnn.pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 85,
      "date": "Sun, 26 Dec 2021 09:25:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chingyaoc/ggnn.pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "chingyaoc/ggnn.pytorch",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JamesChuanggg/ggnn.pytorch/master/babi_data/get_10_fold_data.sh",
      "https://raw.githubusercontent.com/JamesChuanggg/ggnn.pytorch/master/babi_data/extra_seq_tasks/generate_10_fold_data.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.9001373101481486
      ],
      "excerpt": "<img src=\"images/ggnn.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8531799312057354
      ],
      "excerpt": "| 15 | 100% | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8350793863835403,
        0.9042534665813847
      ],
      "excerpt": "Here's an example of bAbI deduction task (task 15) \n<img src=\"images/babi15.png\" width=700> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chingyaoc/ggnn.pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Ching-Yao Chuang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "A PyTorch Implementation of GGNN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ggnn.pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "chingyaoc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chingyaoc/ggnn.pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- python==2.7\n- PyTorch>=0.2\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Train and test the GGNN:\n```\npython main.py --cuda (use GPUs or not)\n```\n\nSuggesting configurations for each task:\n```\n#: task 4\npython main.py --task_id 4 --state_dim 4 --niter 10\n#: task 15\npython main.py --task_id 15 --state_dim 5 --niter 10\n#: task 16\npython main.py --task_id 16 --state_dim 10 --niter 150\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 392,
      "date": "Sun, 26 Dec 2021 09:25:51 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "graph",
      "pytorch",
      "ggnn",
      "gnns"
    ],
    "technique": "GitHub API"
  }
}