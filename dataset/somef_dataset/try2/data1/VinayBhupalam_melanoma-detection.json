{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.11946\n\nImages are augmented with respect to zoom,shear,rotate left/right flip up/down during training randomly.\n\nA significant Class imbalance problem was seen as expected in medical images. Number of positive data points were 584 compared to 30,264 Negative data points\nTraining data is under-sampled i.e on EDA of the metadata it was seen that for the same part of the body, for the same patient multiple images were found. These images were\nof different sizes or taken from a different angle, natural augmentation!!!!. But since we do augmentation during training, we can remove these duplicate images [Checked the performance of the model with all the available data as well, there was almost no difference].\n\nLoss functions experimented are Binary crossentropy, weighted binary cross entropy, focal loss  -> weighted binary cross entropy gave better performance.\n\nCyclic learning rate, Learning rate with decay,Learning rate decay with warmup has been experimented -> Learning rate decay with warmp gave better results.\n\nBatch size of 8,16,32 has been experimented.\n\nStratified KFold technique is used for cross validation splits.\n\nAUC achieved is 0.895\n\n\n## Installation\nThe Code is written in Python 3.7. If you don't have Python installed you can find it [here](https://www.python.org/downloads/"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9684398565269504
      ],
      "excerpt": "EfficientNetB4 pre trained model is used, Please refer the research paper for the architecture of EfficientNet - https://arxiv.org/abs/1905.11946 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VinayBhupalam/melanoma-detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-05T10:43:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-25T06:41:51Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8372396012058242
      ],
      "excerpt": "Deployement on Heroku \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9868266630169982
      ],
      "excerpt": "This project is aimed to classifiy an image as malignant or benign and thereby detect skin cancer [Melanoma]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8600412725979167,
        0.8690223681603961
      ],
      "excerpt": "JPEG format are converted to TFRecord format for faster processing and used tensor flow dataset class to load the data in batches. \nTFRecord files created are uploaded back to kaggle and hence into GCS Cloud. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9755259222771419,
        0.9664440478956894
      ],
      "excerpt": "Motivation to do this project is to apply state of the art computer vision techinques to real world applications \nTensorflow deep learning frame work is used. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8292281668789817,
        0.9459030685976134,
        0.9814332859017624,
        0.8027626688545677
      ],
      "excerpt": "A significant Class imbalance problem was seen as expected in medical images. Number of positive data points were 584 compared to 30,264 Negative data points \nTraining data is under-sampled i.e on EDA of the metadata it was seen that for the same part of the body, for the same patient multiple images were found. These images were \nof different sizes or taken from a different angle, natural augmentation!!!!. But since we do augmentation during training, we can remove these duplicate images [Checked the performance of the model with all the available data as well, there was almost no difference]. \nLoss functions experimented are Binary crossentropy, weighted binary cross entropy, focal loss  -> weighted binary cross entropy gave better performance. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8860505089294785
      ],
      "excerpt": "Stratified KFold technique is used for cross validation splits. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9575838886899878,
        0.9302287581602335
      ],
      "excerpt": "Create an ensemble of models using various architectures/image sizes and meta deta \nDockerize the model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Melanoma is a deadly disease. Image analysis tools that automate the diagnosis of melanoma will improve dermatologists' diagnostic accuracy. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VinayBhupalam/melanoma-detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 14:17:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/VinayBhupalam/melanoma-detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "VinayBhupalam/melanoma-detection",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The Code is written in Python 3.7. If you don't have Python installed you can find it [here](https://www.python.org/downloads/). If you are using a lower version of Python you can upgrade using the pip package, ensuring you have the latest version of pip. To install the required packages and libraries, run this command in the project directory after [cloning](https://www.howtogeek.com/451360/how-to-clone-a-github-repository/) the repository:\n```bash\npip install -r requirements.txt\n```\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/VinayBhupalam/melanoma-detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "JavaScript",
      "Python",
      "HTML",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Melanoma Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "melanoma-detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "VinayBhupalam",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/VinayBhupalam/melanoma-detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "python app.py\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 14:17:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "efficientnet",
      "stratified-cross-validation",
      "heroku-deployment",
      "flask"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Trained model is deployed using Heroku Platform\nLink: https://detection-melanoma.herokuapp.com/\n\n",
      "technique": "Header extraction"
    }
  ]
}