{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.04948"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ayiyoh/style-gan-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-24T20:25:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-11T15:05:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9885927105304955
      ],
      "excerpt": "This is a Pytorch implementation of StyleGAN (https://arxiv.org/abs/1812.04948), with the capability of generating 1024x1024 pictures. Training to grow to 1024x1024 is also supported. A 1080 Ti is recommended for faster training speed. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9108399110091918
      ],
      "excerpt": "This will kick off the training for 128x128 resolution on CelebA dataset. During training, the model checkpoints are stored under ./checkpoints, and the fake images are generated for checking under ./checks/fake_imgs. Note that this is a progressive process starting from 8x8, so you will see 8x8 images in the begining and 128x128 images in the end of the training process.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9199123424632514
      ],
      "excerpt": "Add and experiment with other loss functions (some are in the repo but not tried) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8855901191856538
      ],
      "excerpt": "Add moving average of generator's weight \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ayiyoh/style-gan-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 10:48:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ayiyoh/style-gan-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ayiyoh/style-gan-pytorch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ayiyoh/style-gan-pytorch/master/notebooks/pretrained_test.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8934924013721233
      ],
      "excerpt": "Run the command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8680614619812015
      ],
      "excerpt": "Run the command to start from scratch: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8108127730745939
      ],
      "excerpt": "And place them in ./pretrained directory. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.807059982087369
      ],
      "excerpt": "mlflow -e generate . -P dataset=cats \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8205517780192546,
        0.8113264536191492
      ],
      "excerpt": "mlflow -e generate -P dataset=cats -P random-seed=777 -P nrow=2 -P ncol=5 \nThis will generate 10 images at once. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8067907635309663
      ],
      "excerpt": "Run the command to start from scratch: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.870541837016169
      ],
      "excerpt": "mlflow -e train . -P resume=False \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.8594142235991984
      ],
      "excerpt": "mlflow -e train .\\ \n       -P resume=True \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ayiyoh/style-gan-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "StyleGAN Pytorch Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "style-gan-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ayiyoh",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ayiyoh/style-gan-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "See conda.yaml. Please note that I have cuda 10.0 installed. Change your conda.yaml accordingly if you use different cuda version.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Download the [celeba](https://drive.google.com/drive/folders/0B7EVK8r0v71pTUZsaXdaSnZBZzg) dataset. Unzip the .zip file into ./data/celeba directory.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 10:48:04 GMT"
    },
    "technique": "GitHub API"
  }
}