{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.02325"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Use this bibtex to cite this repository:\n```\n@misc{kapok_ssd_2018,\n  title={Single Shot MultiBox Detector in TensorFlow},\n  author={Changan Wang},\n  year={2018},\n  publisher={Github},\n  journal={GitHub repository},\n  howpublished={\\url{https://github.com/HiKapok/SSD.TensorFlow}},\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{kapok_ssd_2018,\n  title={Single Shot MultiBox Detector in TensorFlow},\n  author={Changan Wang},\n  year={2018},\n  publisher={Github},\n  journal={GitHub repository},\n  howpublished={\\url{https://github.com/HiKapok/SSD.TensorFlow}},\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HiKapok/SSD.TensorFlow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-18T10:39:17Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-26T11:40:48Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9960116677095905,
        0.9826701156940874,
        0.9127366161275747,
        0.96157739904278,
        0.875544528502195,
        0.8369213221823458,
        0.9131140801924632,
        0.929474767057194,
        0.8310063380539355,
        0.868567742545688,
        0.9783068068985297
      ],
      "excerpt": "This repository contains codes of the reimplementation of SSD: Single Shot MultiBox Detector in TensorFlow. If your goal is to reproduce the results in the original paper, please use the official codes. \nThere are already some TensorFlow based SSD reimplementation codes on GitHub, the main special features of this repo inlcude: \nstate of the art performance(77.8%mAP) when training from VGG-16 pre-trained model (SSD300-VGG16). \nthe model is trained using TensorFlow high level API tf.estimator. Although TensorFlow provides many APIs, the Estimator API is highly recommended to yield scalable, high-performance models. \nall codes were writen by pure TensorFlow ops (no numpy operation) to ensure the performance and portability. \nusing ssd augmentation pipeline discribed in the original paper. \nPyTorch-like model definition using high-level tf.layers API for better readability ^-^. \nhigh degree of modularity to ease futher development. \nusing replicate_model_fn makes it flexible to use one or more GPUs. \nNew Update(77.9%mAP): using absolute bbox coordinates instead of normalized coordinates, checkout here. \nThis implementation(SSD300-VGG16) yield mAP 77.8% on PASCAL VOC 2007 test dataset(the original performance described in the paper is 77.2%mAP), the details are as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8832781934259476
      ],
      "excerpt": "Here is the training logs and some detection results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9311754501546043
      ],
      "excerpt": "Transfer to other backbone networks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.903076973429186
      ],
      "excerpt": "How: If you got this error, try change the default value of checkpoint_path to './model/vgg16.ckpt' in train_ssd.py. For more information issue6 and issue9. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9473853676129254,
        0.870301548933576,
        0.8719358945868944
      ],
      "excerpt": "Why: This is caused by the default learning rate which is a little higher for some TensorFlow version. \nHow: I don't know the details about the different behavior between different versions. There are two workarounds: \nAdding warm-up: change some codes here to the following snippet: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8157937907862747
      ],
      "excerpt": "'The values of learning_rate decay factor for each segment between boundaries (comma-separated list).') \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9767072351744652
      ],
      "excerpt": "Welcome to join in QQ Group(758790869) for more discussion \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "State-of-the-art Single Shot MultiBox Detector in Pure TensorFlow, QQ Group: 758790869",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HiKapok/SSD.TensorFlow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 167,
      "date": "Sun, 26 Dec 2021 13:38:54 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "HiKapok/SSD.TensorFlow",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8140820884230153
      ],
      "excerpt": "using replicate_model_fn makes it flexible to use one or more GPUs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8310684098090888,
        0.9688001684929531
      ],
      "excerpt": "Adapting for CoCo Dataset \nUpdate version SSD-512 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8828665034782968
      ],
      "excerpt": "'lr_decay_factors', '0.1, 1, 0.1, 0.01', \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "State-of-the-art Single Shot MultiBox Detector in TensorFlow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SSD.TensorFlow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "HiKapok",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/HiKapok/SSD.TensorFlow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "HiKapok",
        "body": "We have got to the state-of-the-art performance(77.9%mAP) on PASCAL VOC 2007 test dataset for VGG16 based SSD300 detector.",
        "dateCreated": "2018-09-23T08:11:13Z",
        "datePublished": "2018-09-23T08:13:28Z",
        "html_url": "https://github.com/HiKapok/SSD.TensorFlow/releases/tag/v3.2",
        "name": "Final release of the basic SSD-300 detector with absolute coordinate",
        "tag_name": "v3.2",
        "tarball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/tarball/v3.2",
        "url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/releases/13043782",
        "zipball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/zipball/v3.2"
      },
      {
        "authorType": "User",
        "author_name": "HiKapok",
        "body": "We have got to the state-of-the-art performance(77.8%mAP) on PASCAL VOC 2007 test dataset for VGG16 based SSD300 detector.",
        "dateCreated": "2018-08-11T11:12:10Z",
        "datePublished": "2018-08-11T11:13:28Z",
        "html_url": "https://github.com/HiKapok/SSD.TensorFlow/releases/tag/v2.2",
        "name": "Final release of the basic SSD-300 detector",
        "tag_name": "v2.2",
        "tarball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/tarball/v2.2",
        "url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/releases/12360630",
        "zipball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/zipball/v2.2"
      },
      {
        "authorType": "User",
        "author_name": "HiKapok",
        "body": "",
        "dateCreated": "2018-08-11T10:54:15Z",
        "datePublished": "2018-08-11T11:02:28Z",
        "html_url": "https://github.com/HiKapok/SSD.TensorFlow/releases/tag/v3.1",
        "name": "",
        "tag_name": "v3.1",
        "tarball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/tarball/v3.1",
        "url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/releases/12360586",
        "zipball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/zipball/v3.1"
      },
      {
        "authorType": "User",
        "author_name": "HiKapok",
        "body": "We have got to the state-of-the-art performance(77.8%mAP) on PASCAL VOC 2007 test dataset for VGG16 based SSD300 detector.",
        "dateCreated": "2018-08-05T09:15:10Z",
        "datePublished": "2018-08-05T09:21:27Z",
        "html_url": "https://github.com/HiKapok/SSD.TensorFlow/releases/tag/v2.1",
        "name": "Release of the basic SSD-300 detector",
        "tag_name": "v2.1",
        "tarball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/tarball/v2.1",
        "url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/releases/12258401",
        "zipball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/zipball/v2.1"
      },
      {
        "authorType": "User",
        "author_name": "HiKapok",
        "body": "",
        "dateCreated": "2018-08-05T09:06:11Z",
        "datePublished": "2018-08-05T09:17:08Z",
        "html_url": "https://github.com/HiKapok/SSD.TensorFlow/releases/tag/v3.0",
        "name": "Release of the basic SSD-300 detector with absolute coordinate",
        "tag_name": "v3.0",
        "tarball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/tarball/v3.0",
        "url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/releases/12258390",
        "zipball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/zipball/v3.0"
      },
      {
        "authorType": "User",
        "author_name": "HiKapok",
        "body": "",
        "dateCreated": "2018-06-21T14:14:02Z",
        "datePublished": "2018-06-21T14:15:58Z",
        "html_url": "https://github.com/HiKapok/SSD.TensorFlow/releases/tag/v1.0",
        "name": "",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/tarball/v1.0",
        "url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/releases/11589048",
        "zipball_url": "https://api.github.com/repos/HiKapok/SSD.TensorFlow/zipball/v1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 328,
      "date": "Sun, 26 Dec 2021 13:38:54 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "single-shot-multibox-detector",
      "ssd",
      "tensorflow",
      "yolo",
      "faster-rcnn",
      "objectdetection",
      "ssd-tensorflow"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Download [Pascal VOC Dataset](https://pjreddie.com/projects/pascal-voc-dataset-mirror/) and reorganize the directory as follows:\n\t```\n\tVOCROOT/\n\t\t   |->VOC2007/\n\t\t   |    |->Annotations/\n\t\t   |    |->ImageSets/\n\t\t   |    |->...\n\t\t   |->VOC2012/\n\t\t   |    |->Annotations/\n\t\t   |    |->ImageSets/\n\t\t   |    |->...\n\t\t   |->VOC2007TEST/\n\t\t   |    |->Annotations/\n\t\t   |    |->...\n\t```\n\tVOCROOT is your path of the Pascal VOC Dataset.\n- Run the following script to generate TFRecords.\n\t```sh\n\tpython dataset/convert_tfrecords.py --dataset_directory=VOCROOT --output_directory=./dataset/tfrecords\n\t```\n- Download the **pre-trained VGG-16 model (reduced-fc)** from [here](https://drive.google.com/drive/folders/184srhbt8_uvLKeWW_Yo8Mc5wTyc0lJT7) and put them into one sub-directory named 'model' (we support SaverDef.V2 by default, the V1 version is also available for sake of compatibility).\n- Run the following script to start training:\n\n\t```sh\n\tpython train_ssd.py\n\t```\n- Run the following script for evaluation and get mAP:\n\n\t```sh\n\tpython eval_ssd.py\n\tpython voc_eval.py\n\t```\n\tNote: you need first modify some directory in voc_eval.py.\n- Run the following script for visualization:\n\t```sh\n\tpython simple_ssd_demo.py\n\t```\n\nAll the codes was tested under TensorFlow 1.6, Python 3.5, Ubuntu 16.04 with CUDA 8.0. If you want to run training by yourself, one decent GPU will be highly recommended. The whole training process for VOC07+12 dataset took ~120k steps in total, and each step (32 samples per-batch) took ~1s on my little workstation with single GTX1080-Ti GPU Card. If you need run training without enough GPU memory you can try half of the current batch size(e.g. 16), try to lower the learning rate and run more steps, watching the TensorBoard until convergency. BTW, the codes here had also been tested under TensorFlow 1.4 with CUDA 8.0, but some modifications to the codes are needed to enable replicate model training, take following steps if you need:\n\n- copy all the codes of [this file](https://github.com/tensorflow/tensorflow/blob/v1.6.0/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py) to your local file named 'tf\\_replicate\\_model\\_fn.py'\n- add one more line [here](https://github.com/HiKapok/SSD.TensorFlow/blob/899e08dad48669ca0c444284977e3d7ffa1da5fe/train_ssd.py#L25) to import module 'tf\\_replicate\\_model\\_fn'\n- change 'tf.contrib.estimator' in [here](https://github.com/HiKapok/SSD.TensorFlow/blob/899e08dad48669ca0c444284977e3d7ffa1da5fe/train_ssd.py#L383) and [here](https://github.com/HiKapok/SSD.TensorFlow/blob/899e08dad48669ca0c444284977e3d7ffa1da5fe/train_ssd.py#L422) to 'tf\\_replicate\\_model\\_fn'\n- now the training process should run perfectly\n- before you run 'eval_ssd.py', you should also remove [this line](https://github.com/HiKapok/SSD.TensorFlow/blob/e8296848b9f6eb585da5945d6b3ae099029ef4bf/eval_ssd.py#L369) because of the interface compatibility\n\n\n***This repo is just created recently, any contribution will be welcomed.***\n\n",
      "technique": "Header extraction"
    }
  ]
}