{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1612.08083"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8587639393870665
      ],
      "excerpt": "Language Modeling with Gated Convolutional Networks on arXiv \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pranav-ust/nlm",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-16T20:55:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-10-30T21:44:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9485287202044929,
        0.9118477746187393,
        0.9356254631631066,
        0.9344068160669864,
        0.9211742425516595,
        0.835641190014943
      ],
      "excerpt": "This repository contains neural language model implementations trained and tested on Penn Treebank. \nMulti-layer LSTM with Dropout: The link to the notebook is here. It receives perplexity around 80.6 on test set on default parameters. \nGated Convolutional Networks with Residual Connections: The link to the notebook is here. It receives perplexity around 70.9 on test set on default parameters. \nGCNN trains a lot faster than LSTM, due to stacked convolutions performaing parallely. However, this implementation is currently done for fixed word lengths. I am still unclear how to approach for variable lengths. \nPytorch Language Model \nOffical Pytorch Tutorial on LSTM \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Neural Language Models",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pranav-ust/nlm/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 07:46:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pranav-ust/nlm/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "pranav-ust/nlm",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/pranav-ust/nlm/master/notebooks/LSTM%20Language%20Model.ipynb",
      "https://raw.githubusercontent.com/pranav-ust/nlm/master/notebooks/Gated%20Convolutional%20Networks.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/pranav-ust/nlm/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Neural Language Models",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "nlm",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "pranav-ust",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/pranav-ust/nlm/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You will need Pytorch 0.4 and Python 3.5 to run this.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. For LSTM code simply run like `python3 rnn.py`\n2. For GCNN code simply run like `python3 gcnn.py`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 07:46:48 GMT"
    },
    "technique": "GitHub API"
  }
}