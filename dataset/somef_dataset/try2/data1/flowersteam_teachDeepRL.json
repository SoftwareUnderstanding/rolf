{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.07224\n\nThis github repository provides implementations for the following teacher algorithms:\n* ALP-GMM, our proposed teacher algorithm\n* Robust Intelligent Adaptive Curiosity (RIAC",
      "https://arxiv.org/abs/1301.4862"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8088275851153562
      ],
      "excerpt": "for nb_episode in range(10): \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/flowersteam/teachDeepRL",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-01T14:02:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-12T00:06:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9256777158784554
      ],
      "excerpt": "Gifs of the parameter sampling dynamics of teachers will be created in graphics/toy_env_gifs/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8192246893877905
      ],
      "excerpt": "shows how to interact with the environment: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.940189257318525
      ],
      "excerpt": "of the environment (Stump Tracks and Hexagon Tracks): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9016724425687652
      ],
      "excerpt": "In the Parameterized BW environment, we use Soft Actor Critic (OpenAI spinningup implementation) as our Deep RL student. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9803448469629531
      ],
      "excerpt": "We tested the ALP-GMM teacher when paired with 3 different walker morphologies. For each of these walkers we show the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421030376877772
      ],
      "excerpt": " Soft Actor-Critic controllers to master a wide range of track distributions. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9613831311523436,
        0.990118883153857
      ],
      "excerpt": "The following videos show the evolution of parameter sampling by ALP-GMM for short, default, and quadrupedal walkers. \nLearning curricula generated by ALP-GMM are tailored to the capacities of each student it is paired with. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9803344218898769,
        0.9050077889342296
      ],
      "excerpt": "To assess whether ALP-GMM is able to scale to parameter spaces of higher dimensionality, containing irrelevant \n dimensions, and whose difficulty gradients are non-linear, we performed experiments with quadrupedal walkers on Hexagon Tracks, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8713133010975501
      ],
      "excerpt": "In comparison, when using Random curriculum, most runs end-up with bad performances, like this one: \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/flowersteam/teachDeepRL/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Thu, 23 Dec 2021 12:16:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/flowersteam/teachDeepRL/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "flowersteam/teachDeepRL",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/flowersteam/teachDeepRL/master/teachDRL/spinup/algos/sac/.ipynb_checkpoints/test_sagg_riac-checkpoint.ipynb",
      "https://raw.githubusercontent.com/flowersteam/teachDeepRL/master/teachDRL/spinup/algos/sac/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1- Get the repository\n```\ngit clone https://github.com/flowersteam/teachDeepRL\ncd teachDeepRL/\n```\n2- Install it, using Conda for example (use Python >= 3.6)\n```\nconda create --name teachDRL python=3.6\nconda activate teachDRL\npip install -e .\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.965014316549568,
        0.9453636753403484
      ],
      "excerpt": "Using the Parameterized BW environment<br> \nLaunching experiments on Parameterized BW environment<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd teachDRL/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9624728447664157,
        0.8067514974449146
      ],
      "excerpt": "env = gym.make('bipedal-walker-continuous-v0')  #: create environment \nenv.env.my_init({'leg_size': 'default'})  #: set walker type within environment, do it once \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8915730422411241
      ],
      "excerpt": "You can also test the quadrupedal walker on Hexagon Tracks: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 toy_env/toy_env.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9133368656218674,
        0.9133368656218674,
        0.9457175861910134
      ],
      "excerpt": "import gym \nimport teachDRL.gym_flowers \nimport numpy as np \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8217800736450969,
        0.8737288687529231
      ],
      "excerpt": "    env.set_environment(stump_height=np.random.uniform(0,3), \n                        obstacle_spacing=np.random.uniform(0,6)) #: Stump Tracks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": " python3 test_bipedal_walker_continuous.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.820194631778059
      ],
      "excerpt": "python3 run.py --exp_name test_alpgmm --teacher ALP-GMM --seed 42 --leg_size default --max_stump_h 3.0 --max_obstacle_spacing 6.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208
      ],
      "excerpt": "<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_short_stump_gmm_asquad_0.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_default_stump_gmm_asquad_0.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_quadru_stump_gmm_compact_0.gif\" width=\"32%\" height=\"32%\"/></p> \n<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_short_stump_gmm_asquad_3.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_default_stump_gmm_asquad_1.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_quadru_stump_gmm_compact_3.gif\" width=\"32%\" height=\"32%\"/></p> \n<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_short_stump_gmm_asquad_2.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_default_stump_gmm_asquad_2.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_quadru_stump_gmm_compact_2.gif\" width=\"32%\" height=\"32%\"/></p> \n<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_short_stump_gmm_asquad_1.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_default_stump_gmm_asquad_3.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/demo_quadru_stump_gmm_compact_1.gif\" width=\"32%\" height=\"32%\"/></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208
      ],
      "excerpt": "<p><img src=\"teachDRL/graphics/readme_graphics/GMM_gmmcshortcpu21-0611.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/GMM_gmmcdefaultcpu21-063.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/GMM_gmmclongcpu21-060.gif\" width=\"32%\" height=\"32%\"/></p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8647354795712904,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208,
        0.8147388526563208
      ],
      "excerpt": "<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_26.gif\"/></p> \n<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_compact_3.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_compact_8.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_compact_10.gif\" width=\"32%\" height=\"32%\"/></p> \n<p><img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_compact_19.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_compact_48.gif\" width=\"32%\" height=\"32%\"/> \n<img src=\"teachDRL/graphics/readme_graphics/walker_gates/stump_gmm_demo_compact_36.gif\" width=\"32%\" height=\"32%\"/></p> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/flowersteam/teachDeepRL/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License\\n\\nCopyright (c) 2018 OpenAI (http://openai.com)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Teacher algorithms for curriculum learning of Deep RL in continuously parameterized environments",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "teachDeepRL",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "flowersteam",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/flowersteam/teachDeepRL/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 67,
      "date": "Thu, 23 Dec 2021 12:16:48 GMT"
    },
    "technique": "GitHub API"
  }
}