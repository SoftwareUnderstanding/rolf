{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1612.08242"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9521604751129622
      ],
      "excerpt": "Original paper - arxiv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.803347012517969
      ],
      "excerpt": "Find face(s) on image and return coordinates. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mchalecki/Binary-yolo",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-14T15:11:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-14T23:23:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9630714668299555
      ],
      "excerpt": "This is yolov2 implementation in pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9606510357932984
      ],
      "excerpt": "This was project for course Biometrics2. The target was to detect faces on image and then apply other net to categorize them. In yolonet object detection and recognition is done in one step but this was opportunity to implement binary yolo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9640221633176588,
        0.9616038944738687
      ],
      "excerpt": "One class vectors - face, no face. There could be changed vector of probabilities per frame. In their paper the vector is [p, bx, by, bw, bh, p1, p2, ...] where p is certainity of centre of object, bx,by,bw,bh bounding box properties and p_i is class probability. As there is only one class the vector is only [p, bx, by, bw, bh]. The loss function is changed accordingly. \nModel: For training on my one gpu and to speedup process the network is adapted resnet. The last 4 layers of resnet is cut and then added few convolution layers wit leaky rely activations. Also there is implemented parsing yolov3.cfg to build origianl model yolov3 and use transfer learning to tune parameters but training was not tested. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Yolo to detect if an where is some object f.ex face",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alcaster/Binary-yolo/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 05:59:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mchalecki/Binary-yolo/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "mchalecki/Binary-yolo",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.8024808914589259
      ],
      "excerpt": "In annotation.csv is csv formatted file: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/mchalecki/Binary-yolo/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Binary YOLOv2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Binary-yolo",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "mchalecki",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/mchalecki/Binary-yolo/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.6 >\n- Dataset with box annotation\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Thu, 23 Dec 2021 05:59:36 GMT"
    },
    "technique": "GitHub API"
  }
}