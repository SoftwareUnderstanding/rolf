{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To cite this repository:\n\n```\n@software{optax2020github,\n  author = {Matteo Hessel and David Budden and Fabio Viola and Mihaela Rosca\n            and Eren Sezener and Tom Hennigan},\n  title = {Optax: composable gradient transformation and optimisation, in JAX!},\n  url = {http://github.com/deepmind/optax},\n  version = {0.0.1},\n  year = {2020},\n}\n```\n\nIn this bibtex entry, the version number is intended to be from\n[optax/\\_\\_init\\_\\_.py](https://github.com/deepmind/optax/blob/master/optax/__init__.py),\nand the year corresponds to the project's open-source release.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@software{optax2020github,\n  author = {Matteo Hessel and David Budden and Fabio Viola and Mihaela Rosca\n            and Eren Sezener and Tom Hennigan},\n  title = {Optax: composable gradient transformation and optimisation, in JAX!},\n  url = {http://github.com/deepmind/optax},\n  version = {0.0.1},\n  year = {2020},\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/optax",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nTesting\nPlease make sure that your PR passes all tests by running bash test.sh on your\nlocal machine. Also, you can run only tests that are affected by your code\nchanges, but you will need to select them manually.\nCommunity Guidelines\nThis project follows Google's Open Source Community\nGuidelines.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-12T15:45:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T01:59:42Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Optax is a gradient processing and optimization library for JAX.\n\nOptax is designed to facilitate research by providing building blocks\nthat can be easily recombined in custom ways.\n\nOur goals are to:\n\n*   Provide simple, well-tested, efficient implementations of core components.\n*   Improve research productivity by enabling to easily combine low level\n    ingredients into custom optimisers (or other gradient processing components).\n*   Accelerate adoption of new ideas by making it easy for anyone to contribute.\n\nWe favour focusing on small composable building blocks that can be effectively\ncombined into custom solutions. Others may build upon these basic components\nmore complicated abstractions. Whenever reasonable, implementations prioritise\nreadability and structuring code to match standard equations, over code reuse.\n\nAn initial prototype of this library was made available in JAX's experimental\nfolder as `jax.experimental.optix`. Given the wide adoption across DeepMind\nof `optix`, and after a few iterations on the API, `optix` was eventually moved\nout of `experimental` as a standalone open-source library, renamed `optax`.\n\nDocumentation on Optax can be found at [optax.readthedocs.io](https://optax.readthedocs.io/).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9619199355500975
      ],
      "excerpt": "Optax contains implementations of many popular optimizers and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9710968089422729
      ],
      "excerpt": "state using the init function and params of the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9377883182574963
      ],
      "excerpt": ": Obtain the opt_state that contains statistics for the optimizer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9535806772077556
      ],
      "excerpt": "Jax (with jax.grad in this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8820805828521847,
        0.9508620537032222
      ],
      "excerpt": "that should be applied to the current params to obtain the new ones. \noptax.apply_updates is a convinience utility to do this. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8983696709045228,
        0.922501029642922
      ],
      "excerpt": "We refer to the docs \nfor a detailed list of available Optax components. Here, we highlight \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9637017046205077
      ],
      "excerpt": "One of the key building blocks of optax is a GradientTransformation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625944767180017
      ],
      "excerpt": "and (optionally) the current value of the parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8104240793846654
      ],
      "excerpt": "The fact that transformations take candidate gradients as input and return \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9647414479240778,
        0.9366412809235152,
        0.923957878909252
      ],
      "excerpt": "is critical to allow to combine arbitrary transformations into a custom \noptimiser / gradient processor, and also allows to combine transformations for \ndifferent gradients that operate on a shared set of variables. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080407337068843
      ],
      "excerpt": "new GradientTransformation that applies several transformations in sequence. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8076525889838969,
        0.8653462230337367,
        0.9109709701955269,
        0.9118571283867563
      ],
      "excerpt": "Optax also provides several wrappers that take a GradientTransformation as \ninput and return a new GradientTransformation that modifies the behaviour \nof the inner transformation in a specific way. \nFor instance the flatten wrapper flattens gradients into a single large vector \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9782859606210048,
        0.8227090849057144
      ],
      "excerpt": "the overhead of performing many calculations on lots of small variables, \nat the cost of increasing memory usage. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9079186265707931
      ],
      "excerpt": "or applying the inner transformation only to specific parameters or at \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8763937183149981,
        0.8214347699654758
      ],
      "excerpt": "some hyper-parameter (e.g. the learning rate). Optax provides for this purpose \nschedules that can be used to decay scalars as a function of a step count. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.934066168485509
      ],
      "excerpt": "In addition to the low level building blocks we also provide aliases for popular \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.92834361211165,
        0.8709682125800355
      ],
      "excerpt": "These are all still instances of a GradientTransformation, and can therefore \nbe further combined with any of the individual building blocks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8340190602431421
      ],
      "excerpt": "After transforming an update using a GradientTransformation or any custom \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.939004380425017
      ],
      "excerpt": "For convenience, we expose an apply_updates function to apply updates to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.880896741723786,
        0.9013392762851172
      ],
      "excerpt": "Note that separating gradient transformations from the parameter update is \ncritical to support composing sequence of transformations (e.g. chain), as \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8105272992582907,
        0.9198427863164863
      ],
      "excerpt": "settings where different tasks need different sets of gradient transformations). \nOptax provides a number of standard losses used in deep learning, such as \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9170517245070622
      ],
      "excerpt": "the batch dimension(s). This is trivial to do in JAX, for example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9429515841919536
      ],
      "excerpt": "diagonals of these matrices is often a better solution. The library offers \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8513603166790417,
        0.9608222174357715
      ],
      "excerpt": "Stochastic gradient estimators compute Monte Carlo estimates of gradients of \nthe expectation of a function under a distribution with respect to the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9147126830902099
      ],
      "excerpt": "are implemented: score_function_jacobians, pathwise_jacobians and measure_valued_jacobians. Their applicability (both in terms of functions and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9150771002897613,
        0.8166952859737248,
        0.9608402298278788
      ],
      "excerpt": "variates see delta and moving_avg_baseline. \nThe result of a gradient estimator or control_variates_jacobians contains the \nJacobians of the function with respect to the samples from the input \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Optax is a gradient processing and optimization library for JAX.",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://optax.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/optax/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 49,
      "date": "Wed, 22 Dec 2021 03:11:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmind/optax/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmind/optax",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/deepmind/optax/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/deepmind/optax/master/examples/quick_start.ipynb",
      "https://raw.githubusercontent.com/deepmind/optax/master/docs/meta_learning.ipynb",
      "https://raw.githubusercontent.com/deepmind/optax/master/docs/optax-101.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/deepmind/optax/master/test.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Optax can be installed with pip directly from github, with the following command:\n\n```shell\npip install git+git://github.com/deepmind/optax.git\n```\n\nor from PyPI:\n\n```shell\npip install optax\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8346552897957817
      ],
      "excerpt": "typically intractable due to the quadratic memory requirements. Solving for the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8143419557223721
      ],
      "excerpt": "functions for computing these diagonals with sub-quadratic memory requirements. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8079945717226176
      ],
      "excerpt": "distribution. These can then be used to update distributional parameters, or \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8060372108626078
      ],
      "excerpt": "grads = jax.grad(compute_loss)(params, xs, ys) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8060372108626078,
        0.8052491112586242
      ],
      "excerpt": "params = optax.apply_updates(params, updates) \nYou can continue the quick start in the Optax quickstart notebook. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216270093103228
      ],
      "excerpt": "For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216270093103228
      ],
      "excerpt": "For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216270093103228
      ],
      "excerpt": "For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936606094659785
      ],
      "excerpt": "  print(schedule_fn(step_count))  #: [1., 0.8, 0.6, 0.4, 0.2, 0.] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216270093103228
      ],
      "excerpt": "For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8060372108626078
      ],
      "excerpt": "i.e. tree_multimap(lambda p, u: p + u, params, updates). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924976426181745
      ],
      "excerpt": "        utils.multi_normal, rng, num_samples) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/deepmind/optax/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Optax",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "optax",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "deepmind",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/deepmind/optax/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "mkunesch",
        "body": "Support for Python 3.6 has been dropped following the [JAX deprecation policy](https://jax.readthedocs.io/en/latest/deprecation.html). Please upgrade to a supported Python version.\r\n\r\n**Full Changelog**: https://github.com/deepmind/optax/compare/v0.0.91...v0.1.0",
        "dateCreated": "2021-11-18T19:26:26Z",
        "datePublished": "2021-11-18T19:51:54Z",
        "html_url": "https://github.com/deepmind/optax/releases/tag/v0.1.0",
        "name": "Optax 0.1.0",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/deepmind/optax/tarball/v0.1.0",
        "url": "https://api.github.com/repos/deepmind/optax/releases/53670140",
        "zipball_url": "https://api.github.com/repos/deepmind/optax/zipball/v0.1.0"
      },
      {
        "authorType": "User",
        "author_name": "mkunesch",
        "body": "It is the latest version compatible with Python 3.6. See #222 for more details.\r\n\r\n\r\n## Main changes since 0.0.9\r\n* Use an explicit type for base classes of optimizer states. https://github.com/deepmind/optax/pull/211\r\n* Replace `optax.OptState` with `NamedTuple`, when it is used as a base class. https://github.com/deepmind/optax/pull/218\r\n* Set `optax.OptState` to `chex.ArrayTree`. https://github.com/deepmind/optax/pull/219\r\n* Add quick start notebook to Optax. https://github.com/deepmind/optax/pull/143\r\n* Add Optax regression `flax_example.py`. by @8bitmp3 in https://github.com/deepmind/optax/pull/138\r\n* Add `scale_gradient`. https://github.com/deepmind/optax/pull/198\r\n* Add a `set_to_zero` transformation. https://github.com/deepmind/optax/pull/202\r\n* Add utilities for numerical stability in the public API. https://github.com/deepmind/optax/pull/227\r\n* Change int64 to safely incremented int32 in wrappers. by @rdaems in https://github.com/deepmind/optax/pull/187\r\n* Add an example of meta-optimization to the docs. https://github.com/deepmind/optax/pull/231\r\n\r\n**Full Changelog**: https://github.com/deepmind/optax/compare/v0.0.9...v0.0.91",
        "dateCreated": "2021-11-18T18:15:06Z",
        "datePublished": "2021-11-18T18:34:32Z",
        "html_url": "https://github.com/deepmind/optax/releases/tag/v0.0.91",
        "name": "Optax 0.0.91",
        "tag_name": "v0.0.91",
        "tarball_url": "https://api.github.com/repos/deepmind/optax/tarball/v0.0.91",
        "url": "https://api.github.com/repos/deepmind/optax/releases/53664264",
        "zipball_url": "https://api.github.com/repos/deepmind/optax/zipball/v0.0.91"
      },
      {
        "authorType": "User",
        "author_name": "hbq1",
        "body": "Added:\r\n* multi_transform\r\n* LARS optimiser\r\n*  AdaFactor optimiser\r\n\r\nFixed:\r\n* masked wrapper for empty params nest\r\n* label type in loss.py\r\n* checks in loss.py\r\n* MultiSteps arguments handling\r\n* Chex asserts in constrain_test.py",
        "dateCreated": "2021-07-02T14:11:22Z",
        "datePublished": "2021-07-02T17:56:25Z",
        "html_url": "https://github.com/deepmind/optax/releases/tag/v0.0.9",
        "name": "Optax 0.0.9",
        "tag_name": "v0.0.9",
        "tarball_url": "https://api.github.com/repos/deepmind/optax/tarball/v0.0.9",
        "url": "https://api.github.com/repos/deepmind/optax/releases/45638203",
        "zipball_url": "https://api.github.com/repos/deepmind/optax/zipball/v0.0.9"
      },
      {
        "authorType": "User",
        "author_name": "mtthss",
        "body": "* Added `clipping_by_block_rms`\r\n* Added `sgdr_schedule`\r\n* Fixed inconsistency in ema's outputs\r\n* Added `linear_schedule`",
        "dateCreated": "2021-06-08T13:54:55Z",
        "datePublished": "2021-06-10T12:50:49Z",
        "html_url": "https://github.com/deepmind/optax/releases/tag/v0.0.8",
        "name": "Optax 0.0.8",
        "tag_name": "v0.0.8",
        "tarball_url": "https://api.github.com/repos/deepmind/optax/tarball/v0.0.8",
        "url": "https://api.github.com/repos/deepmind/optax/releases/44411829",
        "zipball_url": "https://api.github.com/repos/deepmind/optax/zipball/v0.0.8"
      },
      {
        "authorType": "User",
        "author_name": "hbq1",
        "body": "# Changelog\r\n\r\n[Full Changelog](https://github.com/deepmind/optax/compare/v0.0.5...HEAD)\r\n\r\n**Closed issues:**\r\n\r\n- Documentation [\\#3](https://github.com/deepmind/optax/issues/3)\r\n\r\n**Merged pull requests:**\r\n\r\n- Fix section headers in docs [\\#79](https://github.com/deepmind/optax/pull/79) ([KristianHolsheimer](https://github.com/KristianHolsheimer))\r\n- Define MANIFEST.in to include requirements.txt in pypi bundle. Increment the version. [\\#76](https://github.com/deepmind/optax/pull/76) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Fix RTD build error. [\\#74](https://github.com/deepmind/optax/pull/74) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Improve doc-strings and formatting of popular optimiser instances - Part 1 [\\#71](https://github.com/deepmind/optax/pull/71) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Set up sphinix-built documentation for RTD to build and serve documentation from the public Github. [\\#61](https://github.com/deepmind/optax/pull/61) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n\r\n\r\n\r\n\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*",
        "dateCreated": "2021-03-26T12:23:34Z",
        "datePublished": "2021-03-26T12:31:36Z",
        "html_url": "https://github.com/deepmind/optax/releases/tag/v0.0.6",
        "name": "Optax 0.0.6",
        "tag_name": "v0.0.6",
        "tarball_url": "https://api.github.com/repos/deepmind/optax/tarball/v0.0.6",
        "url": "https://api.github.com/repos/deepmind/optax/releases/40537174",
        "zipball_url": "https://api.github.com/repos/deepmind/optax/zipball/v0.0.6"
      },
      {
        "authorType": "User",
        "author_name": "hbq1",
        "body": "# Changelog\r\n\r\n*Note: this is a first GitHub release of Optax. It includes all changes since the repo was created.*\r\n\r\n[Full Changelog](https://github.com/deepmind/optax/compare/d0ba208a300d68a3f4e380ed2a0b70848380988b...HEAD)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Implement lookahead optimiser [\\#17](https://github.com/deepmind/optax/issues/17)\r\n- Implement support for Yogi optimiser [\\#9](https://github.com/deepmind/optax/issues/9)\r\n- Implement rectified Adam [\\#8](https://github.com/deepmind/optax/issues/8)\r\n- Implement gradient centralisation [\\#7](https://github.com/deepmind/optax/issues/7)\r\n- Implement scaling by AdaBelief [\\#6](https://github.com/deepmind/optax/issues/6)\r\n\r\n**Closed issues:**\r\n\r\n- Multiple optimizers using optax [\\#59](https://github.com/deepmind/optax/issues/59)\r\n- Change masked wrapper to use mask\\_fn instead of mask [\\#57](https://github.com/deepmind/optax/issues/57)\r\n- Prevent creating unnecessary momentum variables [\\#52](https://github.com/deepmind/optax/issues/52)\r\n- Implement Differentially Private Stochastic Gradient Descent [\\#50](https://github.com/deepmind/optax/issues/50)\r\n- RMSProp does not match original Tensorflow impl [\\#49](https://github.com/deepmind/optax/issues/49)\r\n- JITted Adam results in NaN when setting decay to integer 0 [\\#46](https://github.com/deepmind/optax/issues/46)\r\n- Option to not decay bias with additive\\_weight\\_decay [\\#25](https://github.com/deepmind/optax/issues/25)\r\n- Support specifying end\\_value for exponential\\_decay [\\#21](https://github.com/deepmind/optax/issues/21)\r\n- Schedules for Non-Learning Rate Hyper-parameters [\\#20](https://github.com/deepmind/optax/issues/20)\r\n- Implement OneCycle Learning Rate Schedule [\\#19](https://github.com/deepmind/optax/issues/19)\r\n- adam does not learn? [\\#18](https://github.com/deepmind/optax/issues/18)\r\n- Which JAX-based libraries is optax compatible with? [\\#14](https://github.com/deepmind/optax/issues/14)\r\n- Manually setting the learning\\_rate? [\\#4](https://github.com/deepmind/optax/issues/4)\r\n\r\n**Merged pull requests:**\r\n\r\n- Fix pylint errors. [\\#73](https://github.com/deepmind/optax/pull/73) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add PyPI release workflow and increment the version. [\\#70](https://github.com/deepmind/optax/pull/70) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add flax to requirements for tests. [\\#69](https://github.com/deepmind/optax/pull/69) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add first flax equivalence test. [\\#68](https://github.com/deepmind/optax/pull/68) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Targets optional in l2loss and huberloss. [\\#67](https://github.com/deepmind/optax/pull/67) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add .pylintrc and run pylint checks in CI workflow. [\\#66](https://github.com/deepmind/optax/pull/66) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Increase optax version [\\#63](https://github.com/deepmind/optax/pull/63) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add utilities for eigenvector and matrix inverse pth root computation. [\\#62](https://github.com/deepmind/optax/pull/62) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add Callable option to optax.masked. [\\#60](https://github.com/deepmind/optax/pull/60) ([n2cholas](https://github.com/n2cholas))\r\n- Increase optax version for PyPi release. [\\#58](https://github.com/deepmind/optax/pull/58) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add momentum and initial\\_scale to RMSProp [\\#55](https://github.com/deepmind/optax/pull/55) ([rwightman](https://github.com/rwightman))\r\n- Prevent creating unnecessary momentum variables. [\\#54](https://github.com/deepmind/optax/pull/54) ([n2cholas](https://github.com/n2cholas))\r\n- Implement DPSGD [\\#53](https://github.com/deepmind/optax/pull/53) ([n2cholas](https://github.com/n2cholas))\r\n- Add inject\\_hyperparams wrapper [\\#48](https://github.com/deepmind/optax/pull/48) ([n2cholas](https://github.com/n2cholas))\r\n- Format tests and parallelize pytest runs. [\\#47](https://github.com/deepmind/optax/pull/47) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Provide a canonical implementation of canonical losses used in gradient based optimisation. [\\#45](https://github.com/deepmind/optax/pull/45) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Expose optax transform's init and update function signatures to facilitate type annotation in user code. [\\#44](https://github.com/deepmind/optax/pull/44) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add a transformation and a transformation wrapper. [\\#43](https://github.com/deepmind/optax/pull/43) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Update reference arxiv link. [\\#41](https://github.com/deepmind/optax/pull/41) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Move equivalence tests to a separate file, as we will be adding more. [\\#40](https://github.com/deepmind/optax/pull/40) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Optax: Add MNIST example with Adam optimizer and lookahead wrapper. [\\#39](https://github.com/deepmind/optax/pull/39) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Optax: gradient transformation for non-negative parameters. [\\#38](https://github.com/deepmind/optax/pull/38) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Aliases support LR schedules in addition to constant scalar LRs. [\\#37](https://github.com/deepmind/optax/pull/37) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Optax: add datasets module for image classifier example. [\\#36](https://github.com/deepmind/optax/pull/36) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Ensure the number of update functions and states is the same in chain. [\\#34](https://github.com/deepmind/optax/pull/34) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Rename `additive_weight_decay` to `add_decayed_weights`. [\\#33](https://github.com/deepmind/optax/pull/33) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Remove `scale_by_fromage`. [\\#32](https://github.com/deepmind/optax/pull/32) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add AGC to optax \\_\\_init\\_\\_ and add comment noting regarding 1D conv weights. [\\#30](https://github.com/deepmind/optax/pull/30) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Clean nits to make loss and hk.transform\\(\\) slightly more clear. [\\#29](https://github.com/deepmind/optax/pull/29) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Disable macos-latest tests \\(to speed up CI\\) and add CI status badge. [\\#28](https://github.com/deepmind/optax/pull/28) ([copybara-service[bot]](https://github.com/apps/copybara-service))\r\n- Add a mask wrapper. [\\#27](https://github.com/deepmind/optax/pull/27) ([n2cholas](https://github.com/n2cholas))\r\n- Support end\\_value for exponential\\_decay [\\#26](https://github.com/deepmind/optax/pull/26) ([n2cholas](https://github.com/n2cholas))\r\n- Add piecewise\\_interpolate\\_schedule, linear\\_onecycle, and cos\\_onecycle. [\\#22](https://github.com/deepmind/optax/pull/22) ([n2cholas](https://github.com/n2cholas))\r\n- Yogi [\\#16](https://github.com/deepmind/optax/pull/16) ([joaogui1](https://github.com/joaogui1))\r\n- Radam [\\#15](https://github.com/deepmind/optax/pull/15) ([joaogui1](https://github.com/joaogui1))\r\n- gradient centralization [\\#13](https://github.com/deepmind/optax/pull/13) ([joaogui1](https://github.com/joaogui1))\r\n- Fix haiku\\_example.py [\\#5](https://github.com/deepmind/optax/pull/5) ([asmith26](https://github.com/asmith26))\r\n\r\n\r\n\r\n\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*",
        "dateCreated": "2021-03-23T13:40:49Z",
        "datePublished": "2021-03-23T18:42:45Z",
        "html_url": "https://github.com/deepmind/optax/releases/tag/v0.0.5",
        "name": "Optax 0.0.5",
        "tag_name": "v0.0.5",
        "tarball_url": "https://api.github.com/repos/deepmind/optax/tarball/v0.0.5",
        "url": "https://api.github.com/repos/deepmind/optax/releases/40243238",
        "zipball_url": "https://api.github.com/repos/deepmind/optax/zipball/v0.0.5"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 551,
      "date": "Wed, 22 Dec 2021 03:11:32 GMT"
    },
    "technique": "GitHub API"
  }
}