{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1509.06461\n\nOpenAI Spinning Up tutorial: https://spinningup.openai.com/en/latest/\n\nReinforcement Learning: An Introduction, Richard S. Sutton et al. https://web.stanford.edu/class/psych209/Readings/SuttonBartoIPRLBook2ndEd.pdf\n\nsuper-mario-reinforcement-learning, GitHub: https://github.com/sebastianheinz/super-mario-reinforcement-learning\n\nDeep Reinforcement Learning Doesn't Work Yet: https://www.alexirpan.com/2018/02/14/rl-hard.html"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8652713642238964
      ],
      "excerpt": "Define how the agent collects experiences, makes actions given observations and updates the action policy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9996313167497971
      ],
      "excerpt": "Deep Reinforcement Learning with Double Q-learning, Hado V. Hasselt et al, NIPS 2015: https://arxiv.org/abs/1509.06461 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YuansongFeng/MadMario",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-05-17T01:11:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T06:24:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8170366733601158
      ],
      "excerpt": "PyTorch official tutorial to build an AI-powered Mario. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8774211969856851
      ],
      "excerpt": "Interactive tutorial with extensive explanation and feedback. Run it on Google Colab. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.845993025285234,
        0.8307287084964884,
        0.8232400610655592
      ],
      "excerpt": "MeanReward: moving average of episode reward in past 100 episodes \nMeanLength: moving average of episode length in past 100 episodes \nMeanLoss: moving average of step loss in past 100 episodes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Interactive tutorial to build a learning Mario, for first-time RL learners",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YuansongFeng/MadMario/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Wed, 29 Dec 2021 02:47:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/YuansongFeng/MadMario/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "YuansongFeng/MadMario",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/YuansongFeng/MadMario/master/tutorial/tutorial_v1.ipynb",
      "https://raw.githubusercontent.com/YuansongFeng/MadMario/master/tutorial/tutorial_v2.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Install [conda](https://www.anaconda.com/products/individual)\n2. Install dependencies with `environment.yml`\n    ```\n    conda env create -f environment.yml\n    ```\n    Check the new environment *mario* is [created successfully](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-from-an-environment-yml-file).\n\n3. Activate *mario* enviroment\n    ```\n    conda activate myenv\n    ```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/YuansongFeng/MadMario/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MadMario",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MadMario",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "YuansongFeng",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/YuansongFeng/MadMario/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To start the **learning** process for Mario,\n```\npython main.py\n```\nThis starts the *double Q-learning* and logs key training metrics to `checkpoints`. In addition, a copy of `MarioNet` and current exploration rate will be saved.\n\nGPU will automatically be used if available. Training time is around 80 hours on CPU and 20 hours on GPU.\n\nTo **evaluate** a trained Mario,\n```\npython replay.py\n```\nThis visualizes Mario playing the game in a window. Performance metrics will be logged to a new folder under `checkpoints`. Change the `load_dir`, e.g. `checkpoints/2020-06-06T22-00-00`, in `Mario.load()` to check a specific timestamp.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 69,
      "date": "Wed, 29 Dec 2021 02:47:24 GMT"
    },
    "technique": "GitHub API"
  }
}