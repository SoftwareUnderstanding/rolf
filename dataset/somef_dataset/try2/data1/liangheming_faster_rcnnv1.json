{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.01497",
      "https://arxiv.org/abs/1506.01497"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. official implement in torchvision.models.detection.faster_rcnn.fasterrcnn_resnet50_fpn\n```text\n@article{ren15fasterrcnn,\n    Author = {Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun},\n    Title = {{Faster R-CNN}: Towards Real-Time Object Detection with Region Proposal Networks},\n    Journal = {arXiv preprint arXiv:1506.01497},\n    Year = {2015}\n}\n```",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{ren15fasterrcnn,\n    Author = {Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun},\n    Title = {{Faster R-CNN}: Towards Real-Time Object Detection with Region Proposal Networks},\n    Journal = {arXiv preprint arXiv:1506.01497},\n    Year = {2015}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8383381051720274
      ],
      "excerpt": "This is an unofficial pytorch implementation of FasterRCNN object detection as described in Towards Real-Time Object Detection with Region Proposal Networks by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if __name__ == '__main__': \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "  anchor_sizes: [32.0, 64.0, 128.0, 256.0, 512.0] \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liangheming/faster_rcnnv1",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-24T02:52:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-13T05:18:58Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8609367231084352,
        0.9393427610871942,
        0.9072382998835224
      ],
      "excerpt": "This is an unofficial pytorch implementation of FasterRCNN object detection as described in Towards Real-Time Object Detection with Region Proposal Networks by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun \nwe trained this repo on 4 GPUs with batch size 32(8 image per node).the total epoch is 24(about 180k iter),Adam with cosine lr decay is used for optimizing. \nfinally, this repo achieves 39.4 mAp at 736px(max thresh) resolution with resnet50 backbone.(about 30.21) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8979411005071259,
        0.8979411005071259
      ],
      "excerpt": "  train_img_root: data/train2017 \n:  train_img_root: data/val2017 \nval_img_root: data/val2017 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "pytorch implement of fasterRCNN,736px(max side),39.4mAP(COCO),30.21fps(RTX 2080TI)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liangheming/faster_rcnnv1/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 18:46:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liangheming/faster_rcnnv1/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "liangheming/faster_rcnnv1",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8638927271724889
      ],
      "excerpt": "    processor = DDPMixSolver(cfg_path=\"your own config path\")  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8199034976575496
      ],
      "excerpt": "* run train scriptsshell script \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8024269194255869
      ],
      "excerpt": " Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.422 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.904222154379689
      ],
      "excerpt": "modify main.py (modify config file path) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8327678938541677
      ],
      "excerpt": "from solver.ddp_mix_solver import DDPMixSolver \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "    processor.run() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8351051954308356,
        0.8351051954308356,
        0.8351051954308356
      ],
      "excerpt": "  train_annotation_path: data/annotations/instances_train2017.json \n:  train_annotation_path: data/annotations/instances_val2017.json \nval_annotation_path: data/annotations/instances_val2017.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8869264826052469
      ],
      "excerpt": "  pretrained: True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "  fpn_bias: True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984,
        0.8594142235991984
      ],
      "excerpt": "  sync_bn: True \n  amp: True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8798339128901814,
        0.8777806747103647
      ],
      "excerpt": "* run train scriptsshell script \nnohup python -m torch.distributed.launch --nproc_per_node=4 main.py >>train.log 2>&1 & \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.841509142686728,
        0.8413277612300244
      ],
      "excerpt": "[ ] VOC data train\\test scripts \n[ ] custom data train\\test scripts \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liangheming/faster_rcnnv1/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "FasterRCNN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "faster_rcnnv1",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "liangheming",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liangheming/faster_rcnnv1/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```text\ntqdm\npyyaml\nnumpy\nopencv-python\npycocotools\ntorch >= 1.5\ntorchvision >=0.6.0\n```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Sun, 26 Dec 2021 18:46:30 GMT"
    },
    "technique": "GitHub API"
  }
}