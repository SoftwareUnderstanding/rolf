{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@InProceedings{Li_2020_ECCV,\nauthor = {Li, Xiaoming and Chen, Chaofeng and Zhou, Shangchen and Lin, Xianhui and Zuo, Wangmeng and Zhang, Lei},\ntitle = {Blind Face Restoration via Deep Multi-scale Component Dictionaries},\nbooktitle = {ECCV},\nyear = {2020}\n}\n```\n\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{Li_2020_ECCV,\nauthor = {Li, Xiaoming and Chen, Chaofeng and Zhou, Shangchen and Lin, Xianhui and Zuo, Wangmeng and Zhang, Lei},\ntitle = {Blind Face Restoration via Deep Multi-scale Component Dictionaries},\nbooktitle = {ECCV},\nyear = {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9364599900892645
      ],
      "excerpt": "<p align=\"center\">(a) Offline generation of multi-scale component dictionaries.</p> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/csxmli2016/DFDNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-06T02:15:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-25T12:05:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9860588192704979
      ],
      "excerpt": "Overview of our proposed method. It mainly contains two parts: (a) the off-line generation of multi-scale component dictionaries from large amounts of high-quality images, which have diverse poses and expressions. K-means is adopted to generate K clusters for each component (i.e., left/right eyes, nose and mouth) on different feature scales. (b) The restoration process and dictionary feature transfer (DFT) block that are utilized to provide the reference details in a progressive manner. Here, DFT-i block takes the Scale-i component dictionaries for reference in the same feature level. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9461211849410315
      ],
      "excerpt": "<p align=\"center\">(b) Architecture of our DFDNet for dictionary feature transfer.</p> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8292925112018997
      ],
      "excerpt": "Step1_AffineParam: #: Save the crop and align parameters for copying the face result to the original input. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8407799310560088
      ],
      "excerpt": "Step2_Landmarks: #: Save the facial landmarks for RoIAlign. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Blind Face Restoration via Deep Multi-scale Component Dictionaries (ECCV 2020)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/csxmli2016/DFDNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 190,
      "date": "Sun, 26 Dec 2021 12:12:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/csxmli2016/DFDNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "csxmli2016/DFDNet",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/csxmli2016/DFDNet/whole/FaceLandmarkDetection/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/csxmli2016/DFDNet/tree/whole/FaceLandmarkDetection/docs"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "<img src=\"./Imgs/pipeline_a.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "<img src=\"./Imgs/pipeline_b.png\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9018922459102108
      ],
      "excerpt": "python test_FaceDict.py --test_path ./TestData/TestWhole --results_dir ./Results/TestWholeResults --upscale_factor 4 --gpu_ids 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "  <img src='./Imgs/RealLR/n000056_0060_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "  <img src='./Imgs/RealLR/n000056_0060_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "   <img src='./Imgs/ShowResults/n000056_0060_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "   <img src='./Imgs/ShowResults/n000056_0060_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "  <img src='./Imgs/RealLR/n000184_0094_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "  <img src='./Imgs/RealLR/n000184_0094_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "   <img src='./Imgs/ShowResults/n000184_0094_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8796698585445977
      ],
      "excerpt": "   <img src='./Imgs/ShowResults/n000184_0094_01.png'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "  <img src='./Imgs/Whole/test1_0.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test1_1.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test1_2.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test1_3.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "  <img src='./Imgs/Whole/test2_0.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test2_1.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test2_2.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test2_3.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "  <img src='./Imgs/Whole/test5_0.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test5_1.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test5_2.jpg'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9116615638428469
      ],
      "excerpt": "   <img src='./Imgs/Whole/test5_3.jpg'> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/csxmli2016/DFDNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2017, Adrian Bulat\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n  contributors may be used to endorse or promote products derived from\\n  this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# [Blind Face Restoration via Deep Multi-scale Component Dictionaries](https://arxiv.org/pdf/2008.00418.pdf)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DFDNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "csxmli2016",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/csxmli2016/DFDNet/blob/whole/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": ">([Video Installation Tutorial](https://www.youtube.com/watch?v=OTqGYMSKGF4). Thanks for [bycloudump](https://www.youtube.com/channel/UCfg9ux4m8P0YDITTPptrmLg)'s tremendous help.)\n- Pytorch (\u22651.1 is recommended)\n- dlib\n- dominate\n- cv2\n- tqdm\n- [face-alignment](https://github.com/1adrianb/face-alignment)\n    ```bash\n    cd ./FaceLandmarkDetection\n    python setup.py install\n    cd ..\n    ```\n    \n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 694,
      "date": "Sun, 26 Dec 2021 12:12:26 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n--test_path #: test image path\n--results_dir #: save the results path\n--upscale_factor #: the upsample factor for the final result\n--gpu_ids #: gpu id. if use cpu, set gpu_ids=-1\n```\n\n>Note: our DFDNet can only generate 512&times;512 face result for any given face image.\n\n",
      "technique": "Header extraction"
    }
  ]
}