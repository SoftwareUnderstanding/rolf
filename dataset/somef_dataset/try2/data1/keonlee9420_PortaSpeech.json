{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2109.15166",
      "https://arxiv.org/abs/2006.04558"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [jaywalnut310's VITS](https://github.com/jaywalnut310/vits)\n- [jaywalnut310's Glow-TTS](https://github.com/jaywalnut310/glow-tts)\n- [keonlee9420's VAENAR-TTS](https://github.com/keonlee9420/VAENAR-TTS)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite this repository by the \"[Cite this repository](https://github.blog/2021-08-19-enhanced-support-citations-github/)\" of **About** section (top right of the main page).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "cff-version: 1.0.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Lee\"\n  given-names: \"Keon\"\n  orcid: \"https://orcid.org/0000-0001-9028-1018\"\ntitle: \"PortaSpeech\"\nversion: 0.1.0\ndoi: 10.5281/zenodo.5575261\ndate-released: 2021-10-08\nurl: \"https://github.com/keonlee9420/PortaSpeech\"",
      "technique": "File Exploration"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/keonlee9420/PortaSpeech",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-06T11:30:19Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T10:46:02Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9420312341791813
      ],
      "excerpt": "PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-Speech.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8854564762361595,
        0.8471883832003092
      ],
      "excerpt": "DATASET refers to the names of datasets such as LJSpeech in the following documents. \n<!-- and `VCTK` in the following documents. --> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9243717878618372
      ],
      "excerpt": "Batch inference is also supported, try \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9396793737977465,
        0.8605590358331859
      ],
      "excerpt": "Please note that the controllability is originated from FastSpeech2 and not a vital interest of PortaSpeech. \nThe supported datasets are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8569171918474854
      ],
      "excerpt": "<!-- - [VCTK](https://datashare.ed.ac.uk/handle/10283/3443): The CSTR VCTK Corpus includes speech data uttered by 110 English speakers (**multi-speaker TTS**) with various accents. Each speaker reads out about 400 sentences, which were selected from a newspaper, the rainbow passage and an elicitation paragraph used for the speech accent archive. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8868845803163208,
        0.9774094653285036
      ],
      "excerpt": "for some preparations. \nFor the forced alignment, Montreal Forced Aligner (MFA) is used to obtain the alignments between the utterances and the phoneme sequences. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9307089678283665,
        0.952881490198647
      ],
      "excerpt": "For vocoder, HiFi-GAN and MelGAN are supported. \nSpeed \u200b\u200bup the convergence of word-to-phoneme alignment in LinguisticEncoder by dividing long words into subwords and sorting the dataset by mel-spectrogram frame length. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch Implementation of PortaSpeech: Portable and High-Quality Generative Text-to-Speech",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/keonlee9420/PortaSpeech/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Sun, 26 Dec 2021 20:00:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/keonlee9420/PortaSpeech/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "keonlee9420/PortaSpeech",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/keonlee9420/PortaSpeech/main/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9128780689770111
      ],
      "excerpt": "For example, one can increase the speaking rate by 20 by \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8526654199962829
      ],
      "excerpt": "You have to unzip the files in preprocessed_data/DATASET/TextGrid/. Alternately, you can run the aligner by yourself. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.882394915165871
      ],
      "excerpt": "    <img src=\"img/model.png\" width=\"80%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853492186136904
      ],
      "excerpt": "| Total | 24M | 7.6M | 21.8M | 6.7M \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924411949130846
      ],
      "excerpt": "You have to download the pretrained models and put them in output/ckpt/DATASET/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070504322241887
      ],
      "excerpt": "python3 synthesize.py --text \"YOUR_DESIRED_TEXT\" --restore_step RESTORE_STEP --mode single --dataset DATASET \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070504322241887
      ],
      "excerpt": "python3 synthesize.py --text \"YOUR_DESIRED_TEXT\" --speaker_id SPEAKER_ID --restore_step RESTORE_STEP --mode single --dataset DATASET \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8511167213741988
      ],
      "excerpt": "The generated utterances will be put in output/result/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778166864889236,
        0.8238653794577389
      ],
      "excerpt": "python3 synthesize.py --source preprocessed_data/DATASET/val.txt --restore_step RESTORE_STEP --mode batch --dataset DATASET \nto synthesize all utterances in preprocessed_data/DATASET/val.txt. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9070504322241887
      ],
      "excerpt": "python3 synthesize.py --text \"YOUR_DESIRED_TEXT\" --restore_step RESTORE_STEP --mode single --dataset DATASET --duration_control 0.8 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428,
        0.8705832100376315
      ],
      "excerpt": "Run  \npython3 prepare_align.py --dataset DATASET \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8705832100376315,
        0.8287974015137436,
        0.9150949912405066
      ],
      "excerpt": "python3 preprocess.py --dataset DATASET \nTrain your model with \npython3 train.py --dataset DATASET \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.825361263358686
      ],
      "excerpt": "tensorboard --logdir output/log \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890818307099057
      ],
      "excerpt": "    <img src=\"./preprocessed_data/VCTK/spker_embed_tsne.png\" width=\"40%\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/keonlee9420/PortaSpeech/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Philippe R\\xc3\\xa9my\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PortaSpeech - PyTorch Implementation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PortaSpeech",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "keonlee9420",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/keonlee9420/PortaSpeech/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "keonlee9420",
        "body": "",
        "dateCreated": "2021-10-17T13:23:14Z",
        "datePublished": "2021-10-18T10:13:25Z",
        "html_url": "https://github.com/keonlee9420/PortaSpeech/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/keonlee9420/PortaSpeech/tarball/v0.1.0",
        "url": "https://api.github.com/repos/keonlee9420/PortaSpeech/releases/51527898",
        "zipball_url": "https://api.github.com/repos/keonlee9420/PortaSpeech/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You can install the Python dependencies with\n```\npip3 install -r requirements.txt\n```\nAlso, `Dockerfile` is provided for `Docker` users.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 170,
      "date": "Sun, 26 Dec 2021 20:00:41 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "text-to-speech",
      "normalizing-flows",
      "generative-model",
      "deep-neural-networks",
      "pytorch",
      "tts",
      "speech-synthesis",
      "neural-tts",
      "non-autoregressive",
      "portable-tts",
      "vae",
      "fastspeech",
      "hifi-gan",
      "non-ar",
      "mel-gan",
      "high-quality"
    ],
    "technique": "GitHub API"
  }
}