{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[Ghiasi et al., 2018] DropBlock: A regularization method for convolutional networks\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/miguelvr/dropblock",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-02T17:41:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-28T06:00:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9687528465395253
      ],
      "excerpt": "Implementation of DropBlock: A regularization method for convolutional networks  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9551670676834123,
        0.9254452368959104,
        0.8576413963022372
      ],
      "excerpt": "Deep neural networks often work well when they are over-parameterized  \nand trained with a massive amount of noise and regularization, such as  \nweight decay and dropout. Although dropout is widely used as a regularization  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9704842881898297
      ],
      "excerpt": "This lack of success of dropout for convolutional layers is perhaps due to the fact  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9016730329039446,
        0.8749655171542405
      ],
      "excerpt": "Thus a structured form of dropout is needed to regularize convolutional networks.  \nIn this paper, we introduce DropBlock, a form of structured dropout, where units in a  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515773684439789
      ],
      "excerpt": "We found that applying DropBlock in skip connections in addition to the  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9583301336000308
      ],
      "excerpt": "of dropped units during training leads to better accuracy and more robust to hyperparameter choices.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9526325594836993,
        0.9330942892524247,
        0.938029444845045,
        0.9690218022365632,
        0.9744518518707198
      ],
      "excerpt": "DropBlock achieves 78.13% accuracy, which is more than 1.6% improvement on the baseline.  \nOn COCO detection, DropBlock improves Average Precision of RetinaNet from 36.8% to 38.4%. \nWe use drop_prob instead of keep_prob as a matter of preference,  \nand to keep the argument consistent with pytorch's dropout.  \nRegardless, everything else should work similarly to what is described in the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of DropBlock: A regularization method for convolutional networks in PyTorch.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/miguelvr/dropblock/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 86,
      "date": "Tue, 28 Dec 2021 09:11:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/miguelvr/dropblock/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "miguelvr/dropblock",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install directly from PyPI:\n\n    pip install dropblock\n    \nor the bleeding edge version from github:\n\n    pip install git+https://github.com/miguelvr/dropblock.git#egg=dropblock\n\n**NOTE**: Implementation and tests were done in Python 3.6, if you have problems with other versions of python please open an issue.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/miguelvr/dropblock/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Miguel Varela Ramos\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DropBlock",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "dropblock",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "miguelvr",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/miguelvr/dropblock/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "miguelvr",
        "body": "**Changes:**\r\n\r\n - Performance improvements of block mask computation (#21)\r\n - Performance improvements of bernoulli mask computation (#22)\r\n\r\n**Bug Fixes:**\r\n \r\n - Fixed bug where too big block sizes lead to wrong block mask size (#20)\r\n\r\n**Notes:**\r\n\r\n - Should be now compatible with PyTorch v1.0",
        "dateCreated": "2018-12-17T11:46:34Z",
        "datePublished": "2018-12-17T11:51:08Z",
        "html_url": "https://github.com/miguelvr/dropblock/releases/tag/0.3.0",
        "name": "Version 0.3 - Performance Improvements",
        "tag_name": "0.3.0",
        "tarball_url": "https://api.github.com/repos/miguelvr/dropblock/tarball/0.3.0",
        "url": "https://api.github.com/repos/miguelvr/dropblock/releases/14568044",
        "zipball_url": "https://api.github.com/repos/miguelvr/dropblock/zipball/0.3.0"
      },
      {
        "authorType": "User",
        "author_name": "miguelvr",
        "body": "Fixes a minor issue with the DropBlock2D block mask generation.",
        "dateCreated": "2018-11-29T10:28:33Z",
        "datePublished": "2018-11-29T10:44:31Z",
        "html_url": "https://github.com/miguelvr/dropblock/releases/tag/0.2.1",
        "name": "Version 0.2.1 - minor fix",
        "tag_name": "0.2.1",
        "tarball_url": "https://api.github.com/repos/miguelvr/dropblock/tarball/0.2.1",
        "url": "https://api.github.com/repos/miguelvr/dropblock/releases/14252829",
        "zipball_url": "https://api.github.com/repos/miguelvr/dropblock/zipball/0.2.1"
      },
      {
        "authorType": "User",
        "author_name": "miguelvr",
        "body": "**Breaking changes:**\r\n\r\n- DropBlock is now DropBlock2D\r\n- feat_size argument no longer exists, now dinamically computed\r\n\r\n**New Features:**\r\n\r\n- DropBlock3D\r\n- LinearScheduler\r\n- ResNet9 on CIFAR10 example script\r\n\r\n**Bug Fixes:**\r\n\r\n- Refactored forward pass of DropBlock\r\n- FIxed gamma computation\r\n- Fixed CUDA compatibility\r\n",
        "dateCreated": "2018-11-14T13:39:14Z",
        "datePublished": "2018-11-14T14:25:54Z",
        "html_url": "https://github.com/miguelvr/dropblock/releases/tag/0.2.0",
        "name": "Version 0.2",
        "tag_name": "0.2.0",
        "tarball_url": "https://api.github.com/repos/miguelvr/dropblock/tarball/0.2.0",
        "url": "https://api.github.com/repos/miguelvr/dropblock/releases/13999264",
        "zipball_url": "https://api.github.com/repos/miguelvr/dropblock/zipball/0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "miguelvr",
        "body": "Index based DropBlock implementation",
        "dateCreated": "2018-11-07T13:35:44Z",
        "datePublished": "2018-11-07T23:16:43Z",
        "html_url": "https://github.com/miguelvr/dropblock/releases/tag/0.1.0",
        "name": "First Release",
        "tag_name": "0.1.0",
        "tarball_url": "https://api.github.com/repos/miguelvr/dropblock/tarball/0.1.0",
        "url": "https://api.github.com/repos/miguelvr/dropblock/releases/13887427",
        "zipball_url": "https://api.github.com/repos/miguelvr/dropblock/zipball/0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 528,
      "date": "Tue, 28 Dec 2021 09:11:50 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "computer-vision",
      "pytorch",
      "regularization",
      "convolutional-neural-networks",
      "dropblock",
      "pytorch-implementation",
      "dropout"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For 2D inputs (DropBlock2D):\n\n```python\nimport torch\nfrom dropblock import DropBlock2D\n\n#: (bsize, n_feats, height, width)\nx = torch.rand(100, 10, 16, 16)\n\ndrop_block = DropBlock2D(block_size=3, drop_prob=0.3)\nregularized_x = drop_block(x)\n```\n\nFor 3D inputs (DropBlock3D):\n\n```python\nimport torch\nfrom dropblock import DropBlock3D\n\n#: (bsize, n_feats, depth, height, width)\nx = torch.rand(100, 10, 16, 16, 16)\n\ndrop_block = DropBlock3D(block_size=3, drop_prob=0.3)\nregularized_x = drop_block(x)\n```\n\nScheduled Dropblock:\n\n```python\nimport torch\nfrom dropblock import DropBlock2D, LinearScheduler\n\n#: (bsize, n_feats, depth, height, width)\nloader = [torch.rand(20, 10, 16, 16) for _ in range(10)]\n\ndrop_block = LinearScheduler(\n                DropBlock2D(block_size=3, drop_prob=0.),\n                start_value=0.,\n                stop_value=0.25,\n                nr_steps=5\n            )\n\nprobs = []\nfor x in loader:\n    drop_block.step()\n    regularized_x = drop_block(x)\n    probs.append(drop_block.dropblock.drop_prob)\n    \nprint(probs)\n```\n\nThe drop probabilities will be:\n```\n>>> [0.    , 0.0625, 0.125 , 0.1875, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25]\n```\n\nThe user should include the `step()` call at the start of the batch loop, \nor at the the start of a model's `forward` call. \n\nCheck [examples/resnet-cifar10.py](examples/resnet-cifar10.py) to\nsee an implementation example.\n\n",
      "technique": "Header extraction"
    }
  ]
}