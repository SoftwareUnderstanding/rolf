{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2102.02808\n\n**Supplementary**: [pdf](https://drive.google.com/file/d/1mbfljawUuFUQN9V5g0Rmw1UdauJdckCu/view?usp=sharing"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use MPRNet, please consider citing:\n\n    @inproceedings{Zamir2021MPRNet,\n        title={Multi-Stage Progressive Image Restoration},\n        author={Syed Waqas Zamir and Aditya Arora and Salman Khan and Munawar Hayat\n                and Fahad Shahbaz Khan and Ming-Hsuan Yang and Ling Shao},\n        booktitle={CVPR},\n        year={2021}\n    }\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{Zamir2021MPRNet,\n    title={Multi-Stage Progressive Image Restoration},\n    author={Syed Waqas Zamir and Aditya Arora and Salman Khan and Munawar Hayat\n            and Fahad Shahbaz Khan and Ming-Hsuan Yang and Ling Shao},\n    booktitle={CVPR},\n    year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9938735508229449,
        0.9977994744046882
      ],
      "excerpt": "Syed Waqas Zamir, Aditya Arora, Salman Khan, Munawar Hayat, Fahad Shahbaz Khan, Ming-Hsuan Yang, and Ling Shao \nPaper: https://arxiv.org/abs/2102.02808 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9279628677675321
      ],
      "excerpt": "Video Presentation: https://www.youtube.com/watch?v=0SMTPiLw5Vw \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8749916655162201
      ],
      "excerpt": "- Image Deblurring Challenge -- HINet: Half Instance Normalization Network for Image Restoration \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/swz30/MPRNet",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Should you have any question, please contact waqas.zamir@inceptioniai.org\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-04T10:26:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-30T03:45:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "Syed Waqas Zamir, Aditya Arora, Salman Khan, Munawar Hayat, Fahad Shahbaz Khan, Ming-Hsuan Yang, and Ling Shao \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9716271282159109
      ],
      "excerpt": "We are happy to see that our work has inspired the Winning Solutions in NTIRE 2021 challenges: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9981487321829485
      ],
      "excerpt": "Abstract: Image restoration tasks demand a complex balance between spatial details and high-level contextualized information while recovering images. In this paper, we propose a novel synergistic design that can optimally balance these competing goals. Our main proposal is a multi-stage architecture, that progressively learns restoration functions for the degraded inputs, thereby breaking down the overall recovery process into more manageable steps. Specifically, our model first learns the contextualized features using encoder-decoder architectures and later combines them with a high-resolution branch that retains local information. At each stage, we introduce a novel per-pixel adaptive design that leverages in-situ supervised attention to reweight the local features. A key ingredient in such a multi-stage architecture is the information exchange between different stages. To this end, we propose a two-faceted approach where the information is not only exchanged sequentially from early to late stages, but lateral connections between feature processing blocks also exist to avoid any loss of information. The resulting tightly interlinked multi-stage architecture, named as MPRNet, delivers strong performance gains on ten datasets across a range of tasks including image deraining, deblurring, and denoising. For example, on the Rain100L, GoPro and DND datasets, we obtain PSNR gains of 4 dB, 0.81 dB and 0.21 dB, respectively, compared to the state-of-the-art. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9490263315543569
      ],
      "excerpt": "    <td><p align=\"center\"><b>Overall Framework of MPRNet</b></p></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8819907518538044
      ],
      "excerpt": "  <summary> <strong>Image Deblurring</strong> (click to expand) </summary> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8409982616001721
      ],
      "excerpt": "    <td><p align=\"center\"><b>Deblurring on Synthetic Datasets.</b></p></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8819907518538044
      ],
      "excerpt": "  <summary> <strong>Image Deraining</strong> (click to expand) </summary> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8819907518538044
      ],
      "excerpt": "  <summary> <strong>Image Denoising</strong> (click to expand) </summary> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official repository for \"Multi-Stage Progressive Image Restoration\" (CVPR 2021). SOTA results for Image deblurring, deraining, and denoising.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/swz30/MPRNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 112,
      "date": "Thu, 30 Dec 2021 04:44:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/swz30/MPRNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "swz30/MPRNet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The model is built in PyTorch 1.1.0 and tested on Ubuntu 16.04 environment (Python3.7, CUDA9.0, cuDNN7.5).\n\nFor installing, follow these intructions\n```\nconda create -n pytorch1 python=3.7\nconda activate pytorch1\nconda install pytorch=1.1 torchvision=0.3 cudatoolkit=9.0 -c pytorch\npip install matplotlib scikit-image opencv-python yacs joblib natsort h5py tqdm\n```\n\nInstall warmup scheduler\n\n```\ncd pytorch-gradual-warmup-lr; python setup.py install; cd ..\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/swz30/MPRNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "MATLAB"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b\"## ACADEMIC PUBLIC LICENSE\\n\\n### Permissions\\n:heavy_check_mark: Non-Commercial use\\n:heavy_check_mark: Modification\\n:heavy_check_mark: Distribution\\n:heavy_check_mark: Private use\\n\\n### Limitations\\n:x: Commercial Use\\n:x: Liability\\n:x: Warranty\\n\\n### Conditions\\n:information_source: License and copyright notice\\n:information_source: Same License\\n\\nMPRNet is free for use in noncommercial settings: at academic institutions for teaching and research use, and at non-profit research organizations.\\nYou can use MPRNet in your research, academic work, non-commercial work, projects and personal work. We only ask you to credit us appropriately. \\n\\nYou have the right to use the software, to distribute copies, to receive source code, to change the software and distribute your modifications or the modified software.\\nIf you distribute verbatim or modified copies of this software, they must be distributed under this license.\\nThis license guarantees that you're safe when using MPRNet in your work, for teaching or research.\\nThis license guarantees that MPRNet will remain available free of charge for nonprofit use.\\nYou can modify MPRNet to your purposes, and you can also share your modifications.\\n\\nIf you would like to use MPRNet in commercial settings, contact us so we can discuss options. Send an email to waqas.zamir@inceptioniai.org\\n\\n\\n\\n\"",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Multi-Stage Progressive Image Restoration (CVPR 2021)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MPRNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "swz30",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/swz30/MPRNet/blob/main/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To test the pre-trained models of [Deblurring](https://drive.google.com/file/d/1QwQUVbk6YVOJViCsOKYNykCsdJSVGRtb/view?usp=sharing), [Deraining](https://drive.google.com/file/d/1O3WEJbcat7eTY6doXWeorAbQ1l_WmMnM/view?usp=sharing), [Denoising](https://drive.google.com/file/d/1LODPt9kYmxwU98g96UrRA0_Eh5HYcsRw/view?usp=sharing) on your own images, run \n```\npython demo.py --task Task_Name --input_dir path_to_images --result_dir save_images_here\n```\nHere is an example to perform Deblurring:\n```\npython demo.py --task Deblurring --input_dir ./samples/input/ --result_dir ./samples/output/\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 615,
      "date": "Thu, 30 Dec 2021 04:44:53 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "image-deblurring",
      "image-denoising",
      "image-deraining",
      "low-level-vision",
      "computer-vision",
      "image-restoration",
      "multistage-network",
      "progressive-restoration",
      "pytorch",
      "cvpr2021",
      "cvpr21",
      "cvpr-2021"
    ],
    "technique": "GitHub API"
  }
}