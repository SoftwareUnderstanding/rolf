{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1611.07004\nimplementazione :   https://phillipi.github.io/pix2pix/\n                            \n google code book : https://www.tensorflow.org/tutorials/generative/pix2pix\n \n \n \n # ---- #\n \n info : \nThe pix2pix model works by training on pairs of images such as building facade labels to building facades, and then attempts to generate the corresponding output image from any input image you give it\n\nTrained on about 2k stock cat photos and edges automatically generated from those photos\n \n "
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8222913483836253,
        0.9991295298092048,
        0.8715509475085587
      ],
      "excerpt": "-- pix to pix \u00e8 il framework implementato a partire dallo studio dei Genterive Advertaisal network. PixtoPIx implemenata una diferrenza tra il il GAN : conditional gan ovvero l'immagine generata deriva da un immmagine di input piu un immagine di ground e un vettore di noise. facendo si che la risultate sia un immagine veritereia a partire dalla prima. Nei GAN invece l'immaggine \u00e8 elaboratra con un sole vettore di noise. \ndocumento di generazione : https://arxiv.org/abs/1611.07004 \nimplementazione :   https://phillipi.github.io/pix2pix/ \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/FrancescoMarchesini/pixToPix",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-15T16:37:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-15T20:11:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8915355274436103
      ],
      "excerpt": "The pix2pix model works by training on pairs of images such as building facade labels to building facades, and then attempts to generate the corresponding output image from any input image you give it \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/FrancescoMarchesini/pixToPix/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 19:49:58 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/FrancescoMarchesini/pixToPix/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "FrancescoMarchesini/pixToPix",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/FrancescoMarchesini/pixToPix/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pixToPix",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pixToPix",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "FrancescoMarchesini",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/FrancescoMarchesini/pixToPix/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 19:49:58 GMT"
    },
    "technique": "GitHub API"
  }
}