{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.04381"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9996369232088719,
        0.9999140835412053
      ],
      "excerpt": "Link to the original paper: Inverted Residuals and Linear Bottlenecks: Mobile Networks for Classification, Detection and Segmentation,IGCV3: Interleaved Low-Rank Group Convolutions for Efficient Deep Neural Networks. Ke Sun, Mingjie Li, Dong Liu, and Jingdong Wang.  \narXiv preprint arXIV:1806.00178 (2017) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998121968067235,
        0.9999140835412053
      ],
      "excerpt": "IGCV3: Interleaved Low-Rank Group Convolutions for Efficient Deep Neural Networks. Ke Sun, Mingjie Li, Dong Liu, and Jingdong Wang.  \narXiv preprint arXIV:1806.00178 (2017) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xxradon/IGCV3-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-21T07:19:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-18T09:27:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9815210818523109,
        0.9609787266159878
      ],
      "excerpt": "An implementation of Google MobileNet-V2 and IGCV3 introduced in PyTorch.  \nLink to the original paper: Inverted Residuals and Linear Bottlenecks: Mobile Networks for Classification, Detection and Segmentation,IGCV3: Interleaved Low-Rank Group Convolutions for Efficient Deep Neural Networks. Ke Sun, Mingjie Li, Dong Liu, and Jingdong Wang.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.986860980259658
      ],
      "excerpt": "This implementation was made to be an example of a common deep learning software architecture. It's simple and designed to be very modular. All of the components needed for training and visualization are added. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8765645287242032,
        0.980639019414325
      ],
      "excerpt": "Due to the lack of computational power. I trained on CIFAR-10 dataset as an example to prove correctness, and was able to achieve test top1-accuracy of 90.9%. \nTensorboard is integrated with the project using tensorboardX library which proved to be very useful as there is no official visualization library in pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8983747254075379
      ],
      "excerpt": "IGCV3: Interleaved Low-Rank Group Convolutions for Efficient Deep Neural Networks. Ke Sun, Mingjie Li, Dong Liu, and Jingdong Wang.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9213333288708022,
        0.9276332526528366
      ],
      "excerpt": "Interleaved Group Convolutions use a pair of two successive interleaved group convolutions: primary group convolution and secondary group convolution. The two group convolutions are complementary. \nIllustrating the interleaved group convolution, with L = 2 primary partitions and M = 3 secondary partitions. The convolution for each primary partition in primary group convolution is spatial. The convolution for each secondary partition in secondary group convolution is point-wise (1 \u00d7 1). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9787159085196117,
        0.8043639846132039
      ],
      "excerpt": "IGCV2 extends IGCV1 by decomposing the convolution matrix in to more structured sparse matrices, which uses a depth-wise convoultion (3 \u00d7 3) to replace the primary group convoution in IGC and uses a series of point-wise group convolutions (1 \u00d7 1). \nWe proposes Interleaved Low-Rank Group Convolutions, named IGCV3, extend IGCV2 by using low-rank group convolutions to replace group convoutions in IGCV2. It consists of a channel-wise spatial convolution, a low-rank group convolution with <a href=\"https://www.codecogs.com/eqnedit.php?latex=G_{2}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?G_{1}\" title=\"G_{1}\" /></a> groups that reduces the width and a low-rank group convolution with <a href=\"https://www.codecogs.com/eqnedit.php?latex=G_{2}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?G_{2}\" title=\"G_{2}\" /></a> groups which expands the widths back. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9911790147283389,
        0.9337803268799315
      ],
      "excerpt": "We compare our IGCV3 network with other Mobile Networks on CIFAR datasets which illustrated our model' advantages on small dataset. \nClassification accuracy comparisons of MobileNetV2 and IGCV3 on CIFAR datasets. \"Network s\u00d7\" means reducing the number of parameter in \"Network 1.0\u00d7\" by s times. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9571345502582065
      ],
      "excerpt": "<tr> <th>MobileNetV2\uff08our impl.\uff09  </th><th> 2.3</th><th>94.56</th> <th>77.09</th></tr> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8757662588727454
      ],
      "excerpt": "Comparison with MobileNetV2 on ImageNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "IGCV3 reimplement by pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xxradon/IGCV3-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Wed, 29 Dec 2021 07:44:26 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xxradon/IGCV3-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "xxradon/IGCV3-pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9441778284979585
      ],
      "excerpt": "You can start it using: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9034724229395086
      ],
      "excerpt": "The codes are based on https://github.com/liangfu/mxnet-mobilenet-v2. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8410427830058296,
        0.8248953081017771
      ],
      "excerpt": "Prepare your data, then create a dataloader class such as cifar10data.py and cifar100data.py. \nCreate a .json config file for your experiments. Use the given .json config files as a reference. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xxradon/IGCV3-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\nCopyright (C) 2018 \\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNet-V2 and IGCV3",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "IGCV3-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "xxradon",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xxradon/IGCV3-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": " ```\n pytorch 0.3.1\n numpy \n tqdm \n easydict\n matplotlib \n tensorboardX \n ```\n\nInstall dependencies:\n```bash\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\npython main.py config/<your-config-json-file>.json\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Wed, 29 Dec 2021 07:44:26 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project uses Python 3 and PyTorch 0.3.1\n\n",
      "technique": "Header extraction"
    }
  ]
}