{
  "citation": [
    {
      "confidence": [
        0.9912596275198905
      ],
      "excerpt": "For details about R-CNN please refer to the paper Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "| person      | 0.770 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/smallcorgi/Faster-RCNN_TF",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-09-07T05:58:53Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T14:49:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9541873064334302,
        0.9484113383737619
      ],
      "excerpt": "This is an experimental Tensorflow implementation of Faster RCNN - a convnet for object detection with a region proposal network. \nFor details about R-CNN please refer to the paper Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks by Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83377494579338
      ],
      "excerpt": "Create symlinks for the PASCAL VOC dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "mv VGG_imagenet.npy $FRCN_ROOT/data/pretrain_model/VGG_imagenet.npy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Faster-RCNN in Tensorflow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/smallcorgi/Faster-RCNN_TF/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1150,
      "date": "Fri, 24 Dec 2021 00:55:47 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/smallcorgi/Faster-RCNN_TF/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "smallcorgi/Faster-RCNN_TF",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/smallcorgi/Faster-RCNN_TF/master/lib/make.sh",
      "https://raw.githubusercontent.com/smallcorgi/Faster-RCNN_TF/master/experiments/scripts/faster_rcnn_end2end.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone the Faster R-CNN repository\n  ```Shell\n  #: Make sure to clone with --recursive\n  git clone --recursive https://github.com/smallcorgi/Faster-RCNN_TF.git\n  ```\n\n2. Build the Cython modules\n    ```Shell\n    cd $FRCN_ROOT/lib\n    make\n    ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9377531685644817
      ],
      "excerpt": "    cd $FRCN_ROOT \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9134772216012153
      ],
      "excerpt": "Download the training, validation, test data and VOCdevkit \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8336956222982289,
        0.800759983945262
      ],
      "excerpt": "Download pre-trained ImageNet models \nDownload the pre-trained ImageNet models [Google Drive] [Dropbox] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9117659347749728
      ],
      "excerpt": "Run script to train and test model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "| train       | 0.766 | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/smallcorgi/Faster-RCNN_TF/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Cython",
      "Cuda",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Fu-Hsiang Chan\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Faster-RCNN_TF",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Faster-RCNN_TF",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "smallcorgi",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/smallcorgi/Faster-RCNN_TF/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Requirements for Tensorflow (see: [Tensorflow](https://www.tensorflow.org/))\n\n2. Python packages you might not have: `cython`, `python-opencv`, `easydict`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. For training the end-to-end version of Faster R-CNN with VGG16, 3G of GPU memory is sufficient (using CUDNN)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2350,
      "date": "Fri, 24 Dec 2021 00:55:47 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tensorflow",
      "detection",
      "faster-rcnn"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone the Faster R-CNN repository\n  ```Shell\n  #: Make sure to clone with --recursive\n  git clone --recursive https://github.com/smallcorgi/Faster-RCNN_TF.git\n  ```\n\n2. Build the Cython modules\n    ```Shell\n    cd $FRCN_ROOT/lib\n    make\n    ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "*After successfully completing [basic installation](#installation-sufficient-for-the-demo)*, you'll be ready to run the demo.\n\nDownload model training on PASCAL VOC 2007  [[Google Drive]](https://drive.google.com/file/d/0ByuDEGFYmWsbZ0EzeUlHcGFIVWM/view?usp=sharing&resourcekey=0-wl5NWArb595zL-BX6ctTgQ) [[Dropbox]](https://www.dropbox.com/s/cfz3blmtmwj6bdh/VGGnet_fast_rcnn_iter_70000.ckpt?dl=0)\n\nTo run the demo\n```Shell\ncd $FRCN_ROOT\npython ./tools/demo.py --model model_path\n```\nThe demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007.\n\n",
      "technique": "Header extraction"
    }
  ]
}