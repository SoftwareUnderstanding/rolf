{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.09070",
      "https://arxiv.org/abs/1911.09070"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    @article{efficientdetpytoan,\n        Author = {Toan Dao Minh},\n        Title = {A Pytorch Implementation of EfficientDet Object Detection},\n        Journal = {github.com/toandaominh1997/EfficientDet.Pytorch},\n        Year = {2019}\n    }\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- tanmingxing, rpang, qvl, et al. \"EfficientDet: Scalable and Efficient Object Detection.\" [EfficientDet](https://arxiv.org/abs/1911.09070).\n- A list of other great EfficientDet ports that were sources of inspiration:\n  * [EfficientNet](https://github.com/lukemelas/EfficientNet-PyTorch)\n  * [SSD.Pytorch](https://github.com/amdegroot/ssd.pytorch)\n  * [mmdetection](https://github.com/open-mmlab/mmdetection)\n  * [RetinaNet.Pytorch](https://github.com/yhenon/pytorch-retinanet)\n  * [NMS.Torchvision](https://pytorch.org/docs/stable/torchvision/ops.html)\n  \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{efficientdetpytoan,\n    Author = {Toan Dao Minh},\n    Title = {A Pytorch Implementation of EfficientDet Object Detection},\n    Journal = {github.com/toandaominh1997/EfficientDet.Pytorch},\n    Year = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8221389258343141
      ],
      "excerpt": "[7/12/2019] Support EfficientDet-D0, EfficientDet-D1, EfficientDet-D2, EfficientDet-D3, EfficientDet-D4,... . Support change gradient accumulation steps, AdamW. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9443299173850146
      ],
      "excerpt": "PASCAL VOC: Visual Object Classes \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/toandaominh1997/EfficientDet.Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-30T14:57:27Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-25T09:24:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8908851589015824,
        0.923908233291944
      ],
      "excerpt": "A PyTorch implementation of EfficientDet from the 2019 paper by Mingxing Tan Ruoming Pang Quoc V. Le \nGoogle Research, Brain Team.  The official and original: comming soon. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9833669440638028
      ],
      "excerpt": "We benchmark our code thoroughly on three datasets: pascal voc and coco, using family efficientnet different network architectures: EfficientDet-D0->7. Below are the results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8061811575056023
      ],
      "excerpt": "model \u00a0  | mAP | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8110779730412633
      ],
      "excerpt": "To make things easy, we provide bash scripts to handle the dataset downloads and setup for you.  We also provide simple dataset loaders that inherit torch.utils.data.Dataset, making them fully compatible with the torchvision.datasets API. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8464318873643553
      ],
      "excerpt": "  #: DistributedDataParallel with backend nccl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8464318873643553
      ],
      "excerpt": "  #: DistributedDataParallel with backend nccl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9419855141168803
      ],
      "excerpt": "We have accumulated the following to-do list, which we hope to complete in the near future \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "  * [x] Pretrained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "  * [ ] Model zoo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation EfficientDet: Scalable and Efficient Object Detection in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```Shell\n#: specify a directory for dataset to be downloaded into, else default is ~/data/\nsh datasets/scripts/VOC2007.sh\nsh datasets/scripts/VOC2012.sh\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```Shell\n#: specify a directory for dataset to be downloaded into, else default is ~/data/\nsh datasets/scripts/COCO2017.sh\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/toandaominh1997/EfficientDet.Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 316,
      "date": "Mon, 27 Dec 2021 14:24:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/toandaominh1997/EfficientDet.Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "toandaominh1997/EfficientDet.Pytorch",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/toandaominh1997/EfficientDet.Pytorch/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/toandaominh1997/EfficientDet.Pytorch/master/datasets/scripts/VOC2007.sh",
      "https://raw.githubusercontent.com/toandaominh1997/EfficientDet.Pytorch/master/datasets/scripts/COCO2017.sh",
      "https://raw.githubusercontent.com/toandaominh1997/EfficientDet.Pytorch/master/datasets/scripts/VOC2012.sh",
      "https://raw.githubusercontent.com/toandaominh1997/EfficientDet.Pytorch/master/datasets/scripts/COCO2014.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Install [PyTorch](http://pytorch.org/) by selecting your environment on the website and running the appropriate command.\n- Clone this repository and install package [prerequisites](#prerequisites) below.\n- Then download the dataset by following the [instructions](#datasets) below.\n- Note: For training, we currently support [VOC](http://host.robots.ox.ac.uk/pascal/VOC/) and [COCO](http://mscoco.org/), and aim to add [ImageNet](http://www.image-net.org/) support soon.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9287467277036058,
        0.9287467277036058,
        0.8002631542792215
      ],
      "excerpt": "<a href='#installation'>Installation</a> \n<a href='#installation'>Installation</a> \n<a href='#prerequisites'>Prerequisites</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8668555968216016
      ],
      "excerpt": "With COCO Dataset: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8668555968216016
      ],
      "excerpt": "- With COCO Dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9748709027320682
      ],
      "excerpt": "  * [x] GPU-Parallel \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8625657738254944
      ],
      "excerpt": "<img src= \"./docs/arch.png\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9008335956509239
      ],
      "excerpt": "<a href='#training-efficientdet'>Train</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810094876824159
      ],
      "excerpt": "<a href='#demo'>Demo</a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8515407874993388
      ],
      "excerpt": "1). PASCAL VOC 2007 (Train/Test: 07trainval/07test, scale=600, ROI Align) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8635353640105476
      ],
      "excerpt": "To train EfficientDet using the train script simply specify the parameters listed in train.py as a flag or manually change them. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285940837025171
      ],
      "excerpt": "python train.py --network effcientdet-d0  #: Example \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620277756064435
      ],
      "excerpt": "  python train.py --dataset VOC --dataset_root /root/data/VOCdevkit/ --network effcientdet-d0 --batch_size 32  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8349646915527718
      ],
      "excerpt": "  python train.py --dataset VOC --dataset_root /root/data/VOCdevkit/ --network effcientdet-d0 --batch_size 32 --multiprocessing-distributed \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9393470139027775
      ],
      "excerpt": "    python eval_voc.py --dataset_root ~/data/VOCdevkit --weight ./checkpoint_VOC_efficientdet-d0_261.pth \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625657738254944
      ],
      "excerpt": "<img src= \"./docs/compare.png\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282633617843045,
        0.810094876824159
      ],
      "excerpt": "  * [x] Pretrained model \n  * [x] Demo \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/toandaominh1997/EfficientDet.Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Toan Dao Minh(bigkizd)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientDet: Scalable and Efficient Object Detection, in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientDet.Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "toandaominh1997",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/toandaominh1997/EfficientDet.Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 3.6+\n* PyTorch 1.3+\n* Torchvision 0.4.0+ (**We need high version because Torchvision support nms now.**)\n* requirements.txt \n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1421,
      "date": "Mon, 27 Dec 2021 14:24:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "object-detection",
      "computer-vision",
      "pytorch",
      "multibox",
      "efficientnet",
      "focalloss",
      "pascal-voc",
      "nms",
      "detection",
      "coco",
      "efficientdet-d0",
      "demo"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```Shell\npython demo.py --weight ./checkpoint_VOC_efficientdet-d1_97.pth --threshold 0.6 --iou_threshold 0.5 --cam --score\n```\n\n<p align=\"center\">\n<img src=\"docs/pytoan.gif\">\n</p>\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```Shell\npython demo.py --threshold 0.5 --iou_threshold 0.5 --score --weight checkpoint_VOC_efficientdet-d1_34.pth --file_name demo.png\n```\n\nOutput: \n\n<p align=\"center\">\n<img src= \"./docs/demo.png\">\n</p>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "You can use a webcam in a real-time demo by running:\n```Shell\npython demo.py --threshold 0.5 --iou_threshold 0.5 --cam --score --weight checkpoint_VOC_efficientdet-d1_34.pth\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}