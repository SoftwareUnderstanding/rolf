{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.03400\n\nMAML is an initialisation based meta learning algorithm that is model agnostic i.e. it is compatible with any model trained using gradient descent. It is compatible with a variety of tasks, such as regression, classification and reinforcement learning. This project displays this with respect to regression and classification, as done in the paper.\n\n# What's Next?\n\nOne could explore advancements in the MAML algorithm, such as the first order modification of MAML, and similar algorithms such as Reptile.\nOn the other hand, one could also look into different approaches to meta learning aside from initialisation based methods, such as metric learning, and model based methods."
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.992209143033616
      ],
      "excerpt": "Link to Original Paper: https://arxiv.org/abs/1703.03400 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/infinitemugen/MAML-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-03T09:40:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-09T04:21:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9960321405197782,
        0.844915944783101
      ],
      "excerpt": "This is an easy-to-read, basic implementation of some of the supervised experiments in the paper titled \"Model Agnostic Meta Learning for Fast Adaptation of Deep Networks\" by Chelsea Finn et al. using PyTorch. \nExperiment 1: Training a regression model on a sinusoidal function using MAML, and testing it on a new sinusoidal function, given a small number of samples of the new function. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9558185949116844
      ],
      "excerpt": "Note: The code in this repository merely implements the experiments in the original paper. It does not guarantee replication of results from the original paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9729179301447718,
        0.9791650197466498,
        0.9780554008523987
      ],
      "excerpt": "For training, the data in \"images_background\" is used. \nFor testing, the data in \"images_evaluation\" is used. \nMeta learning aims to create models that can learn new tasks/skills and adapt to new environments fast, with access to few training examples. Also sometimes referred to as \"learning to learn\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Pytorch implementation of MAML",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/infinitemugen/MAML-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Mon, 27 Dec 2021 02:15:21 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/infinitemugen/MAML-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "infinitemugen/MAML-Pytorch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/Experiment%202/Dataset%20Labeller.ipynb",
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/Experiment%202/Experiment%202.ipynb",
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/Experiment%202/.ipynb_checkpoints/Dataset%20Labeller-checkpoint.ipynb",
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/Experiment%202/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/.ipynb_checkpoints/Dataset%20Labeller-checkpoint.ipynb",
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/.ipynb_checkpoints/Experiment_1_Sine_Regression-checkpoint.ipynb",
      "https://raw.githubusercontent.com/infinitemugen/MAML-Pytorch/master/Experiment%201/Experiment_1_Sine_Regression.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8641571156409751
      ],
      "excerpt": "Link to Omniglot Dataset: https://github.com/brendenlake/omniglot \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/infinitemugen/MAML-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MAML-Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MAML-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "infinitemugen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/infinitemugen/MAML-Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Mon, 27 Dec 2021 02:15:21 GMT"
    },
    "technique": "GitHub API"
  }
}