{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "PFLD: A Practical Facial Landmark Detector https://arxiv.org/pdf/1902.10859.pdf\n\nResNest: Split-Attention Networks https://hangzhang.org/files/resnest.pdf \n\nEfficientNet: Rethinking Model Scaling for Convolutional Neural Networks https://arxiv.org/pdf/1905.11946.pdf\n\npytorch\uff1ahttps://github.com/lukemelas/EfficientNet-PyTorch\n\ntensorflow\uff1ahttps://github.com/tensorflow/tpu/tree/master/models/official/efficientnet\n\nkeras: https://github.com/qubvel/efficientnet\n\nTensorflow Implementation for 98 Facial Landmarks: https://github.com/guoqiangqi/PFLD\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  | efficientnet-b2 |  30.85M  |    0.071    |     0.145    |          0.266        | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "   $ ./onnx2ncnn model_sim.onnx model_sim.param model_sim.bin \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epoc88/PFLD_68pts_Pytorch_2020",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-26T22:08:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-01-05T18:36:47Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.980340612005479
      ],
      "excerpt": "Implementation of PFLD For 68 Facial Landmarks By Pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9603518724654261,
        0.8079401344435737
      ],
      "excerpt": "Wider Facial Landmarks in-the-wild (WFLW) is a new proposed face dataset. It contains 10000 faces (7500 for training and 2500 for testing) with 98 fully manual annotated landmarks.    \n1.Training and Testing images[Google Drive][Baidu Drive], Unzip and put to ./data/WFLW/raw/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8505995516086338
      ],
      "excerpt": "3.Move Mirror68.txt to ./data/WFLW/annotations/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8505995516086338
      ],
      "excerpt": "3.Move Mirror68.txt to ./data/300W/annotations/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918392156609114
      ],
      "excerpt": "300VW is a video format, which needs to be processed into a single frame picture and corresponds to each key point pts file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8505995516086338
      ],
      "excerpt": "3.Move Mirror68.txt to ./data/300VW/annotations/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.883350998835242
      ],
      "excerpt": "  please refer to API Document. And refer to ./data/getNewFacialLandmarksFromFacePP.py for using  the api interface.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9068720277076172
      ],
      "excerpt": "Details about the models are below:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "   $ python3 -m onnxsim model.onnx model_sim.onnx \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epoc88/PFLD_68pts_Pytorch_2020/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 00:52:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/epoc88/PFLD_68pts_Pytorch_2020/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "epoc88/PFLD_68pts_Pytorch_2020",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/epoc88/PFLD_68pts_Pytorch_2020/master/train.sh",
      "https://raw.githubusercontent.com/epoc88/PFLD_68pts_Pytorch_2020/master/docker_run.sh",
      "https://raw.githubusercontent.com/epoc88/PFLD_68pts_Pytorch_2020/master/docker.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "    $ cd ./data/WFLW  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "    $ cd ./data/300W  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": "    $ cd ./data/300VW  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080002376980483
      ],
      "excerpt": " $ cd ./data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9303581814738594
      ],
      "excerpt": "   $ sh train.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8762219581389902,
        0.8661176197453521
      ],
      "excerpt": "tip: please install resnest to use ResNest models.  \n|    Name         |* \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874,
        0.9699626262596135
      ],
      "excerpt": "Pytorch -> onnx -> onnx_sim   \nMake sure pip3 install onnx-simplifier \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8694720927125993
      ],
      "excerpt": "How to build :https://github.com/Tencent/ncnn/wiki/how-to-build \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9702385673073866
      ],
      "excerpt": "   $ cd ncnn/build/tools/onnx \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8382459360666189
      ],
      "excerpt": "1.Training and Testing images[Google Drive][Baidu Drive], Unzip and put to ./data/WFLW/raw/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "    $ python3 WFLW_SetPreparation68.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8193858744067667,
        0.8732479502840809
      ],
      "excerpt": "300W is a very general face alignment dataset. It has a total of 3148+689 images, each image contains more than one face, but only one face is labeled for each image.File directory includes afw(337)\uff0chelen(train 2000+test 330)\uff0cibug(135)\uff0clfpw(train 811+test 224) with 68 fully manual annotated landmarks. \n1.Training and Testing images[Databases][Baidu Drive], Unzip and put to ./data/300W/raw/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "    $ python3 300W_SetPreparation68.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8765386502047433,
        0.8770715338842725
      ],
      "excerpt": "1.Training and Testing images[Databases], Unzip and put to ./data/300VW/raw/ \n2.Run get68psAndImagesFrom300VW.py to get list_68pt_rect_attr_train.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991
      ],
      "excerpt": "    $ python3 get68psAndImagesFrom300VW.py \n    $ python3 300VW_SetPreparation68.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": " $ python3 merge_files.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "training : \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8076061149326874
      ],
      "excerpt": "reading images from a camera to test: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.867641411059639
      ],
      "excerpt": "reading images from a dir to test: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9521174821235511
      ],
      "excerpt": "   $ python3 test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "|    Name         |* \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "   $ python3 pytorch2onnx.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/epoc88/PFLD_68pts_Pytorch_2020/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PFLD_68Points_Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PFLD_68pts_Pytorch_2020",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "epoc88",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epoc88/PFLD_68pts_Pytorch_2020/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 00:52:40 GMT"
    },
    "technique": "GitHub API"
  }
}