{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "*We gratefully acknowledge Gabriel Dernbach for interesting analyses on the knot distribution of ReLU networks. We thank Emiel van Krieken and Ali el Hasouni as well for interesting questions and motivating comments at the beginning of this project.\nDavid W. Romero is financed as part of the Efficient Deep Learning (EDL) programme (grant number P16-25), partly\nfunded by the Dutch Research Council (NWO) and Semiotic Labs. Anna Kuzina is funded by the Hybrid Intelligence Center, a 10-year programme funded\nby the Dutch Ministry of Education, Culture and Science through the Netherlands Organisation for\nScientific Research. Erik J. Bekkers is financed by the\nresearch programme VENI (grant number 17290) funded by the Dutch Research Council. All authors are thankful to everyone\ninvolved in funding this work.\nThis work was carried out on the Dutch national e-infrastructure with\nthe support of SURF Cooperative.*",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2102.02611",
      "https://arxiv.org/abs/2102.02611"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you found this work useful in your research, please consider citing:\n```\n@article{romero2021ckconv,\n  title={CKConv: Continuous Kernel Convolutions for Sequential Data},\n  author={Romero, David W and Kuzinna, Anna and Bekkers, Erik J and Tomczak, Jakub M and Hoogendoorn, Mark},\n  journal={arXiv preprint arXiv:2102.02611},\n  year={2021}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{romero2021ckconv,\n  title={CKConv: Continuous Kernel Convolutions for Sequential Data},\n  author={Romero, David W and Kuzinna, Anna and Bekkers, Erik J and Tomczak, Jakub M and Hoogendoorn, Mark},\n  journal={arXiv preprint arXiv:2102.02611},\n  year={2021}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dwromero/ckconv",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-04T13:28:03Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T12:50:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9235278306455454
      ],
      "excerpt": "This repository contains the source code accompanying the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9071838977160447,
        0.8372722962555127,
        0.8743162278507123,
        0.8679859632466504,
        0.9577496405660312,
        0.9676363581030581,
        0.8994613016805652
      ],
      "excerpt": "Conventional neural architectures for sequential data present important limitations. Recurrent networks suffer from exploding \nand vanishing gradients, small effective memory horizons, and must be trained sequentially. Convolutional networks are unable to handle sequences of unknown size \nand their memory horizon must be defined a priori. In this work, we show that all these problems can be solved by formulating convolutional kernels \nin CNNs as continuous functions. The resulting Continuous Kernel Convolution (CKConv) allows us to model arbitrarily long sequences \nin a parallel manner, within a single operation, and without relying on any form of recurrence. We show that Continuous Kernel Convolutional Networks \n(CKCNNs) obtain state of the art results in multiple datasets, e.g., permuted MNIST, and, thanks to their continuous nature, are able to handle \nnon-uniformly sampled datasets and irregularly sampled data natively. CKCNNs at least match neural ODEs designed for these purposes in a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9221395234496961,
        0.9810042682590839
      ],
      "excerpt": "This repository is organized as follows: \nckconv contains the main PyTorch library of our model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8073445134874664,
        0.9709523117985986,
        0.8925377016442777,
        0.9896977565478997,
        0.9000116799597092
      ],
      "excerpt": "ckernel_fitting contains source code to run experiments to approximate convolutional filters via MLPs. Please see ckernel_fitting/README.md for further details.  \ndemo provides some minimalistic examples on the usage of CKConvs and the construction of CKCNNs.  \nmodels contains the models used throughout our experiments. \nprobspec_routines contains routines specific to some of the problems considered in this paper. \nruns contains the command lines used to obtain the results reported in our experiments.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8712959603686935
      ],
      "excerpt": "To reproduce the experiments in the paper, please follow the configurations given in runs/README.md \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9620737072748038
      ],
      "excerpt": "We leverage the convolution theorem in our experiments to accelerate the computation of the convolution operations (see  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code repository of the paper \"CKConv: Continuous Kernel Convolution For Sequential Data\" https://arxiv.org/abs/2102.02611",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dwromero/ckconv/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Sat, 25 Dec 2021 11:27:06 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dwromero/ckconv/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dwromero/ckconv",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/dwromero/ckconv/master/notebooks/Untitled.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/notebooks/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/demo/comparison_fftconv_spatialconv.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/demo/construct_your_own_ckconv_layer.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/demo/construct_your_own_ckcnn.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/demo/.ipynb_checkpoints/comparison_fftconv_spatialconv-checkpoint.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/demo/.ipynb_checkpoints/construct_your_own_ckcnn-checkpoint.ipynb",
      "https://raw.githubusercontent.com/dwromero/ckconv/master/demo/.ipynb_checkpoints/construct_your_own_ckconv_layer-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you prefer to construct the conda environment manually, please follow the commands speficiend in `manual_installation.txt`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8998861043810743,
        0.9499389486922963,
        0.9731856896358416,
        0.954950449355536,
        0.9770335174395833,
        0.9865441524656512,
        0.9979947896609701
      ],
      "excerpt": "conda env create -f conda_requirements.txt \nThis will create the conda environment ckconv with the correct dependencies. \nThe same conda environment can be created with pip by running: \nconda create -n ckconv python=3.7 \nconda activate ckconv \nconda install pytorch==1.7.0 torchvision==0.8.1 torchaudio=0.7.0 cudatoolkit=10.1 -c pytorch \npip install -r requirements.txt \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8890818307099057
      ],
      "excerpt": "<img src=\"ckconv.png\" alt=\"drawing\" width=\"750\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8297967766288311
      ],
      "excerpt": "To use pretrained models, please add the argument --config.pretrained=True to the corresponding execution line. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dwromero/ckconv/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 David W. Romero\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# CKConv: Continuous Kernel Convolution For Sequential Data",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ckconv",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dwromero",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dwromero/ckconv/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 66,
      "date": "Sat, 25 Dec 2021 11:27:06 GMT"
    },
    "technique": "GitHub API"
  }
}