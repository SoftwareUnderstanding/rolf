{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yanivbl6/BeyondSigProp",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-10T12:30:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-12T09:18:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9978151322493044,
        0.8607834775379315
      ],
      "excerpt": "This is repository is intended to allow replication of the results presented in the paper: \n\"Beyond Signal Propagation: Is Feature Diversity Necessary in Deep Neural Network Initialization?\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8540253721323209
      ],
      "excerpt": "to control the initialization of each layer, use the parameter: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9953845941016104,
        0.9394449182630016,
        0.9394449182630016
      ],
      "excerpt": "* 'h' is for random initialization \n* 'i' for identity initialization \n* '1' for averaging initialization \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Fixup initialization implementation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yanivbl6/fixup/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 09:19:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yanivbl6/BeyondSigProp/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "yanivbl6/BeyondSigProp",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/yanivbl6/fixup/master/lrnet_experiment.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8906744194926577
      ],
      "excerpt": "Code is forked from the repository: https://github.com/valilenk/fixup.git \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.929536298881099
      ],
      "excerpt": "Usage examples: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.920395891605473,
        0.9147794125319245,
        0.9074684014475137,
        0.9541171861097626,
        0.9541171861097626
      ],
      "excerpt": "python train.py --layers 16 --widen-factor 10 --batchnorm   --name constnet -d 0:1 --no-saves --epochs 300 #:#: Run vanilla constnet on GPU devices 0+1, save no checkpoints. \npython train.py --layers 16 --widen-factor 10 --batchnorm   --name constnet_he -d 2:3 --no-saves --varnet --epochs 300 #:#: Use random inialization (Devices 2+3) \npython train.py --layers 16 --widen-factor 10 --batchnorm   --name constnet_deterministic -d 2:3 --no-saves --cudaNoise --epochs 300  #:#: Deterministic CUDNN \npython train.py --layers 16 --widen-factor 10 --batchnorm --droprate 0.01   --name constnet_cuda_dropout -d 0:1 --no-saves --epochs 300   #:#: Small random dropout \npython train.py --layers 16 --widen-factor 10 --batchnorm --droprate 0.01   --name constnet_dropout -d 0:1 --no-saves --epochs 300  --cudaNoise   #:#: Deterministic + Small random dropout \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8198394307373771
      ],
      "excerpt": "During training, a tensorboard file is generated with the name specified, which includes the forward/backward correlations measured after each epoch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828665034782968
      ],
      "excerpt": "--lrelu 0.01, -a \"leakynet\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9155184244178896,
        0.9155184244178896
      ],
      "excerpt": "python train.py --layers 16 --widen-factor 10 --batchnorm --lr 0.03 --init 1_ii11_ii11_ii11 -d 0:1 --no-saves -a 'leakynet' --lrelu 0.01 \npython train.py --layers 16 --widen-factor 10 --batchnorm --lr 0.03 --init h_hhhh_hhhh_hhhh -d 2:3 --no-saves -a 'leakynet' --lrelu 0.01 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/yanivbl6/BeyondSigProp/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Is feature diversity necessary in the initialization of neural networks ?",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "BeyondSigProp",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "yanivbl6",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/yanivbl6/BeyondSigProp/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Main:\n* Python (Tested with 3.7.3)\n* CUDA (Tested with 10.0.130) + cudnn 7.6.1\n* Pytorch (Tested with 1.1.0)\n\nExtra:\n* TorchVision  (0.3.0)\n* prunhild (0.1.0)\n* torchviz (0.0.1)\n* numpy (1.16.4)\n* Tensorboard (1.13.1, logger: 0.1.0)\n\nrun:\n`\npip install -r requirements.txt\n`\n\nto quickly install the python packages.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Fri, 24 Dec 2021 09:19:33 GMT"
    },
    "technique": "GitHub API"
  }
}