{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangming8/libtorch-yolov3",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-09T05:32:48Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-09T05:32:50Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.93518522297454,
        0.9734074668266859
      ],
      "excerpt": "A Libtorch implementation of the YOLO v3 object detection algorithm, written with pure C++. It's fast, easy to be integrated to your production, and CPU and GPU are both supported. Enjoy ~ \nThis project is inspired by the pytorch version, I rewritten it with C++. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A Libtorch implementation of the YOLO v3 object detection algorithm",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangming8/libtorch-yolov3/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 12:55:54 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhangming8/libtorch-yolov3/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhangming8/libtorch-yolov3",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.82552834436283
      ],
      "excerpt": "This project is inspired by the pytorch version, I rewritten it with C++. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9935309876697507,
        0.9139008801699534
      ],
      "excerpt": "mkdir build && cd build \ncmake3 -DCMAKE_PREFIX_PATH=\"your libtorch path\" .. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhangming8/libtorch-yolov3/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "CMake"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "libtorch-yolov3",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "libtorch-yolov3",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhangming8",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhangming8/libtorch-yolov3/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. LibTorch v1.0.0\n2. Cuda\n3. OpenCV (just used in the example)\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The first thing you need to do is to get the weights file for v3:\n\n```\ncd models\nwget https://pjreddie.com/media/files/yolov3.weights \n```\n\nOn Single image:\n```\n./yolo-app ../imgs/person.jpg\n```\n\nAs I tested, it will take 25 ms on GPU ( 1080 ti ). please run inference job more than once, and calculate the average cost.\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 12:55:54 GMT"
    },
    "technique": "GitHub API"
  }
}