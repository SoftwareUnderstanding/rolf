{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1903.05628",
      "https://arxiv.org/abs/1511.06434"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- DCGAN [[Paper]](https://arxiv.org/abs/1511.06434)\n- Pix2Pix and BicycleGAN [[Github Project]](https://github.com/junyanz/BicycleGAN) \n- DRIT [[Github Project]](https://github.com/HsinYingLee/DRIT)\n- StackGAN++ [[Github Project]](https://github.com/hanzhanggit/StackGAN-v2)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find MSGAN useful in your research, please consider citing:\n```\n@inproceedings{MSGAN,\n  author = {Mao, Qi and Lee, Hsin-Ying and Tseng, Hung-Yu and Ma, Siwei and Yang, Ming-Hsuan},\n  booktitle = {IEEE Conference on Computer Vision and Pattern Recognition},\n  title = {Mode Seeking Generative Adversarial Networks for Diverse Image Synthesis},\n  year = {2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{MSGAN,\n  author = {Mao, Qi and Lee, Hsin-Ying and Tseng, Hung-Yu and Ma, Siwei and Yang, Ming-Hsuan},\n  booktitle = {IEEE Conference on Computer Vision and Pattern Recognition},\n  title = {Mode Seeking Generative Adversarial Networks for Diverse Image Synthesis},\n  year = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9998125885922687
      ],
      "excerpt": "Contact: Qi Mao (qimao@pku.edu.cn), Hsin-Ying Lee (hlee246@ucmerced.edu), and Hung-Yu Tseng (htseng6@ucmerced.edu) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9996794357294551,
        0.9999999986086507
      ],
      "excerpt": "Qi Mao*, Hsin-Ying Lee*, Hung-Yu Tseng*, Siwei Ma, and Ming-Hsuan Yang<br> \nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2019 (* equal contribution)<br> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JPlin/MSGAN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-05T14:05:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-05T14:22:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9504571237573525
      ],
      "excerpt": "Pytorch implementation for our MSGAN (Miss-GAN). We propose a simple yet effective mode seeking regularization term that can be applied to arbitrary conditional generative adversarial networks in different tasks to alleviate the mode collapse issue and improve the diversity. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410113710662654
      ],
      "excerpt": "Paired Data: facades and maps \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9462079622743592
      ],
      "excerpt": "We employ the network architecture of the BicycleGAN and follow the training process of Pix2Pix. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9637680887969974
      ],
      "excerpt": "- Unpaired Data: Yosemite (summer <-> winter) and Cat2Dog (cat <-> dog) \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JPlin/MSGAN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 01:21:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JPlin/MSGAN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JPlin/MSGAN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Clone this repo:\n```\ngit clone https://github.com/HelenMao/MSGAN.git\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9649311150232097
      ],
      "excerpt": "cd MSGAN/DCGAN-Mode-Seeking \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9649311150232097
      ],
      "excerpt": "cd MSGAN/Pix2Pix-Mode-Seeking \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8554558009444111
      ],
      "excerpt": "You can download the datasets from the DRIT [Github Project]. <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9649311150232097
      ],
      "excerpt": "cd MSGAN/DRIT-Mode-Seeking \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8554558009444111,
        0.9649311150232097
      ],
      "excerpt": "You can download the datasets from the StackGAN++ [Github Project]. \ncd MSGAN/StackGAN++-Mode-Seeking \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9397417918220039
      ],
      "excerpt": "python train.py --dataroot ./datasets/Cifar10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9427108561213088
      ],
      "excerpt": "python train.py --dataroot ./datasets/facades \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9400410595277798
      ],
      "excerpt": "python train.py --dataroot ./datasets/cat2dog \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958244170210878
      ],
      "excerpt": "python main.py --cfg cfg/birds_3stages.yml \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JPlin/MSGAN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Mode Seeking Generative Adversarial Networks for Diverse Image Synthesis",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MSGAN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JPlin",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JPlin/MSGAN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.5 or Python 3.6\n- Pytorch 0.4.0 and torchvision (https://pytorch.org/)\n- [TensorboardX](https://github.com/lanpa/tensorboard-pytorch)\n- [Tensorflow](https://www.tensorflow.org/) (for tensorboard usage)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 01:21:04 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<img src='imgs/DRIT.jpg' width=\"900px\">\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Download datasets for each task into the dataset folder\n```\nmkdir datasets\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "**DCGAN-Mode-Seeking** <br>\n```\npython test.py --dataroot ./datasets/Cifar10 --resume ./models/DCGAN-Mode-Seeking/00199.pth\n```\n**Pix2Pix-Mode-Seeking** <br>\n```\npython test.py --dataroot ./datasets/facades --checkpoints_dir ./models/Pix2Pix-Mode-Seeking/facades --epoch 400\n```\n```\npython test.py --dataroot ./datasets/maps --checkpoints_dir ./models/Pix2Pix-Mode-Seeking/maps --epoch 400\n```\n**DRIT-Mode-Seeking** <br>\n```\npython test.py --dataroot ./datasets/yosemite --resume ./models/DRIT-Mode-Seeking/yosemite/01200.pth --concat 1\n```\n```\npython test.py --dataroot ./datasets/cat2dog --resume ./models/DRIT-Mode-Seeking/cat2dog/01999.pth --concat 0\n```\n**StackGAN++-Mode-Seeking** <br>\n```\npython main.py --cfg cfg/eval_birds.yml \n```\n\n",
      "technique": "Header extraction"
    }
  ]
}