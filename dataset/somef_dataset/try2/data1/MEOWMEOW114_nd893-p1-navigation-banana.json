{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1509.06461 Deep Reinforcement Learning with Double Q-learning\n3. https://arxiv.org/abs/1511.05952 Prioritized Experience Replay\n2.  Dueling DQN  https://arxiv.org/pdf/1511.06581.pdf Dueling Network Architectures for Deep Reinforcement Learning\n\n### Resources\n\n- [Human-Level Control through Deep Reinforcement Learning](https://storage.googleapis.com/deepmind-media/dqn/DQNNaturePaper.pdf",
      "https://arxiv.org/abs/1511.05952 Prioritized Experience Replay\n2.  Dueling DQN  https://arxiv.org/pdf/1511.06581.pdf Dueling Network Architectures for Deep Reinforcement Learning\n\n### Resources\n\n- [Human-Level Control through Deep Reinforcement Learning](https://storage.googleapis.com/deepmind-media/dqn/DQNNaturePaper.pdf",
      "https://arxiv.org/abs/1509.06461",
      "https://arxiv.org/abs/1511.06581",
      "https://arxiv.org/abs/1511.05952"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1.  Double DQN (DDQN)  https://arxiv.org/abs/1509.06461 Deep Reinforcement Learning with Double Q-learning\n3. https://arxiv.org/abs/1511.05952 Prioritized Experience Replay\n2.  Dueling DQN  https://arxiv.org/pdf/1511.06581.pdf Dueling Network Architectures for Deep Reinforcement Learning\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "[image1]: https://user-images.githubusercontent.com/10624937/42135619-d90f2f28-7d12-11e8-8823-82b970a54d7e.gif \"Trained Agent\"\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MEOWMEOW114/nd893-p1-navigation-banana",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-26T02:05:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-21T16:16:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For this project, you will train an agent to navigate (and collect bananas!) in a large, square world.  \n\n![Trained Agent][image1]\n\nA reward of +1 is provided for collecting a yellow banana, and a reward of -1 is provided for collecting a blue banana.  Thus, the goal of your agent is to collect as many yellow bananas as possible while avoiding blue bananas.  \n\nThe state space has 37 dimensions and contains the agent's velocity, along with ray-based perception of objects around agent's forward direction.  Given this information, the agent has to learn how to best select actions.  Four discrete actions are available, corresponding to:\n- **`0`** - move forward.\n- **`1`** - move backward.\n- **`2`** - turn left.\n- **`3`** - turn right.\n\nThe task is episodic, and in order to solve the environment, your agent must get an average score of +13 over 100 consecutive episodes.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9010588327670369,
        0.930204065926412,
        0.929670655161164
      ],
      "excerpt": "Follow the instructions in Navigation.ipynb to get started with training your own agent! \nAfter you have successfully completed the project, if you're looking for an additional challenge, you have come to the right place!  In the project, your agent learned from information such as its velocity, along with ray-based perception of objects around its forward direction.  A more challenging task would be to learn directly from pixels! \nTo solve this harder task, you'll need to download a new Unity environment.  This environment is almost identical to the project environment, where the only difference is that the state is an 84 x 84 RGB image, corresponding to the agent's first-person view.  (Note: Udacity students should not submit a project with this new environment.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8971585135476988
      ],
      "excerpt": "Then, place the file in the p1_navigation/ folder in the DRLND GitHub repository, and unzip (or decompress) the file.  Next, open Navigation_Pixels.ipynb and follow the instructions to learn how to use the Python API to control the agent. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.82247988674037,
        0.9178777604182795,
        0.935913018469319
      ],
      "excerpt": "Human-Level Control through Deep Reinforcement Learning \nDeep Reinforcement Learning with Double Q-Learning \nDueling Network Architectures for Deep Reinforcement Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "banana navigation using deep learning DQN",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MEOWMEOW114/nd893-p1-navigation-banana/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 11:25:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MEOWMEOW114/nd893-p1-navigation-banana/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "MEOWMEOW114/nd893-p1-navigation-banana",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/MEOWMEOW114/nd893-p1-navigation-banana/master/Navigation_Pixels.ipynb",
      "https://raw.githubusercontent.com/MEOWMEOW114/nd893-p1-navigation-banana/master/Navigation.ipynb",
      "https://raw.githubusercontent.com/MEOWMEOW114/nd893-p1-navigation-banana/master/report/Report.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9647323711731505
      ],
      "excerpt": "You need only select the environment that matches your operating system: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9542222847622334
      ],
      "excerpt": "(For AWS) If you'd like to train the agent on AWS, you must follow the instructions to set up X Server, and then download the environment for the Linux operating system above. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/MEOWMEOW114/nd893-p1-navigation-banana/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "(Image References)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "nd893-p1-navigation-banana",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "MEOWMEOW114",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/MEOWMEOW114/nd893-p1-navigation-banana/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 11:25:50 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Download the environment from one of the links below.  You need only select the environment that matches your operating system:\n    - Linux: [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Linux.zip)\n    - Mac OSX: [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana.app.zip)\n    - Windows (32-bit): [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Windows_x86.zip)\n    - Windows (64-bit): [click here](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Windows_x86_64.zip)\n    \n    (_For Windows users_) Check out [this link](https://support.microsoft.com/en-us/help/827218/how-to-determine-whether-a-computer-is-running-a-32-bit-version-or-64) if you need help with determining if your computer is running a 32-bit version or 64-bit version of the Windows operating system.\n\n    (_For AWS_) If you'd like to train the agent on AWS (and have not [enabled a virtual screen](https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Training-on-Amazon-Web-Service.md)), then please use [this link](https://s3-us-west-1.amazonaws.com/udacity-drlnd/P1/Banana/Banana_Linux_NoVis.zip) to obtain the environment.\n\n2. Place the file in the DRLND GitHub repository, in the `p1_navigation/` folder, and unzip (or decompress) the file. \n\n",
      "technique": "Header extraction"
    }
  ]
}