{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1812.05905",
      "https://arxiv.org/abs/1511.05952",
      "https://arxiv.org/abs/1906.04009",
      "https://arxiv.org/abs/2007.14430"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{SAC,\n  author = {Dittert, Sebastian},\n  title = {PyTorch Implementation of Soft-Actor-Critic-and-Extensions},\n  year = {2020},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/BY571/Soft-Actor-Critic-and-Extensions}},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8511535834563841
      ],
      "excerpt": "- Munchausen Reinforcement Learning Paper  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BY571/Soft-Actor-Critic-and-Extensions",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-20T16:46:45Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T03:42:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9668979011287101,
        0.8906488946182359
      ],
      "excerpt": "PyTorch implementation of Soft-Actor-Critic with the Extensions PER + ERE + Munchausen RL and the option for Multi-Environments for parallel data collection and faster training. \nThis repository includes the newest Soft-Actor-Critic version (Paper 2019) as well as extensions for SAC: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9633473598838002
      ],
      "excerpt": "- D2RL: DEEP DENSE ARCHITECTURES IN REINFORCEMENT LEARNING Paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9933907458966453,
        0.8226764902954499
      ],
      "excerpt": "In the paper implementation of ERE the authors used and older version of SAC, whereas this repository contains the newest version of SAC as well as a Proportional Prioritization implementation of PER. \nadd IQN Critic [X] with IQN critic its 10x slower... need to fix that   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563890834527925
      ],
      "excerpt": "Check performance with all add-ons [  ] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8749403261505937
      ],
      "excerpt": "For further input arguments and hyperparameter check the code. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9277756882992647
      ],
      "excerpt": "It can be seen that the extensions not always bring improvements to the algorithm. This is depending on the environment and from environment to environment different - as the authors mention in their paper (ERE). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch implementation of Soft-Actor-Critic and Prioritized Experience Replay (PER) + Emphasizing Recent Experience (ERE) + Munchausen RL + D2RL and parallel Environments. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BY571/Soft-Actor-Critic-and-Extensions/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Tue, 28 Dec 2021 21:46:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/BY571/Soft-Actor-Critic-and-Extensions/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "BY571/Soft-Actor-Critic-and-Extensions",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8132432720330194
      ],
      "excerpt": "with the old scripts you can still run three different SAC versions  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8948031601930923,
        0.9118307526801805,
        0.9087261313348172
      ],
      "excerpt": "Run regular SAC: python SAC.py -env Pendulum-v0 -ep 200 -info sac \nRun SAC + PER: python SAC_PER.py -env Pendulum-v0 -ep 200 -info sac_per \nRun SAC + ERE + PER: python SAC_ERE_PER.py -env Pendulum-v0 -frames 20000 -info sac_per_ere \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/BY571/Soft-Actor-Critic-and-Extensions/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Sebastian Dittert\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Soft-Actor-Critic-and-Extensions",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Soft-Actor-Critic-and-Extensions",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "BY571",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BY571/Soft-Actor-Critic-and-Extensions/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Trained and tested on:\n<pre>\nPython 3.6\nPyTorch 1.7.0  \nNumpy 1.15.2 \ngym 0.10.11 \npybulletgym\n</pre>\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 132,
      "date": "Tue, 28 Dec 2021 21:46:23 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Im open for feedback, found bugs, improvements or anything. Just leave me a message or contact me.\n\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "reinforcement-learning",
      "reinforcement-learning-algorithms",
      "soft-actor-critic",
      "prioritized-experience-replay",
      "emphasizing-recent-experience",
      "sac",
      "pytorch",
      "continuous",
      "actor-critic-algorithm",
      "munchausen-reinforcement-learning",
      "munchausen",
      "parallel-computing",
      "multi-environment",
      "d2rl"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The new script combines all extensions and the add-ons can be simply added by setting the corresponding flags.\n\n`python run.py -info sac`\n\n**Parameter:**\nTo see the options:\n`python run.py -h`\n\n<pre>\n-env, Environment name, default = Pendulum-v0\n-per, Adding Priorizied Experience Replay to the agent if set to 1, default = 0\n-munchausen, Adding Munchausen RL to the agent if set to 1, default = 0\n-dist, --distributional, Using a distributional IQN Critic network if set to 1, default = 0\n-d2rl, Uses Deep Actor and Deep Critic Networks if set to 1, default = 0\n-n_step, Using n-step bootstrapping, default = 1\n-ere, Adding Emphasizing Recent Experience to the agent if set to 1, default = 0\n-info, Information or name of the run\n-frames, The amount of training interactions with the environment, default is 100000\n-eval_every, Number of interactions after which the evaluation runs are performed, default = 5000\n-eval_runs, Number of evaluation runs performed, default = 1\n-seed, Seed for the env and torch network weights, default is 0\n-lr_a, Actor learning rate of adapting the network weights, default is 3e-4\n-lr_c, Critic learning rate of adapting the network weights, default is 3e-4\n-a, --alpha, entropy alpha value, if not choosen the value is leaned by the agent\n-layer_size, Number of nodes per neural network layer, default is 256\n-repm, --replay_memory, Size of the Replay memory, default is 1e6\n-bs, --batch_size, Batch size, default is 256\n-t, --tau, Softupdate factor tau, default is 0.005\n-g, --gamma, discount factor gamma, default is 0.99\n--saved_model, Load a saved model to perform a test run!\n-w, --worker, Number of parallel worker (attention, batch-size increases proportional to worker number!), default = 1\n</pre>\n\n",
      "technique": "Header extraction"
    }
  ]
}