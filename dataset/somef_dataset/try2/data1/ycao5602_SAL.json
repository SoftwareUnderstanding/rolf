{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2007.09609",
      "https://arxiv.org/abs/1703.07220",
      "https://arxiv.org/abs/1512.03385",
      "https://arxiv.org/abs/1910.10093",
      "https://arxiv.org/abs/1910.06827"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find this code useful to your research, please cite the following paper\n\n    @inproceedings{cao2020symbiotic,\n    title={Symbiotic Adversarial Learning for Attribute-based Person Search},\n    author={Cao, Yu-Tong and Wang, Jingya and Tao, Dacheng},\n    booktitle={European Conference on Computer Vision},\n    pages={230--247},\n    year={2020},\n    organization={Springer}\n    }\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{zhou2019learning,\n  title={Learning Generalisable Omni-Scale Representations for Person Re-Identification},\n  author={Zhou, Kaiyang and Yang, Yongxin and Cavallaro, Andrea and Xiang, Tao},\n  journal={arXiv preprint arXiv:1910.06827},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{zhou2019osnet,\n  title={Omni-Scale Feature Learning for Person Re-Identification},\n  author={Zhou, Kaiyang and Yang, Yongxin and Cavallaro, Andrea and Xiang, Tao},\n  booktitle={ICCV},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{torchreid,\n  title={Torchreid: A Library for Deep Learning Person Re-Identification in Pytorch},\n  author={Zhou, Kaiyang and Xiang, Tao},\n  journal={arXiv preprint arXiv:1910.10093},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{cao2020symbiotic,\ntitle={Symbiotic Adversarial Learning for Attribute-based Person Search},\nauthor={Cao, Yu-Tong and Wang, Jingya and Tao, Dacheng},\nbooktitle={European Conference on Computer Vision},\npages={230--247},\nyear={2020},\norganization={Springer}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9046162814984551,
        0.9978105281565848,
        0.9999537354568557,
        0.9960965048981569
      ],
      "excerpt": "  title={Torchreid: A Library for Deep Learning Person Re-Identification in Pytorch}, \n  author={Zhou, Kaiyang and Xiang, Tao}, \n  journal={arXiv preprint arXiv:1910.10093}, \n  year={2019} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9875533545014817,
        0.999790414089633,
        0.9922876713345625,
        0.9960965048981569
      ],
      "excerpt": "  title={Omni-Scale Feature Learning for Person Re-Identification}, \n  author={Zhou, Kaiyang and Yang, Yongxin and Cavallaro, Andrea and Xiang, Tao}, \n  booktitle={ICCV}, \n  year={2019} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9920871554767818,
        0.999790414089633,
        0.9999537354568557,
        0.9960965048981569
      ],
      "excerpt": "  title={Learning Generalisable Omni-Scale Representations for Person Re-Identification}, \n  author={Zhou, Kaiyang and Yang, Yongxin and Cavallaro, Andrea and Xiang, Tao}, \n  journal={arXiv preprint arXiv:1910.06827}, \n  year={2019} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ycao5602/SAL",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-24T11:41:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-06T06:50:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9554808869701326
      ],
      "excerpt": "PyTorch implementation of Symbiotic Adversarial Learning for Attribute-based Person Search (ECCV2020). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.996026087614955
      ],
      "excerpt": " Part of the data preparation code credits to Kevin.h. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908450665466283
      ],
      "excerpt": "To resume an image branch pretrained model from checkpoints, the example script is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8007290451605031
      ],
      "excerpt": "To resume a jointly pretrained model from checkpoints, the example script is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8963444719690535
      ],
      "excerpt": "To resume a full SAL model from checkpoints, , the example script is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8321133494205069
      ],
      "excerpt": "Use --eval-freq to control the evaluation frequency and --start-eval to indicate when to start counting the evaluation frequency. This is useful when you want to test the model for every --eval-freq epochs to diagnose the training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9772604829271938
      ],
      "excerpt": "The project is developed based on deep-person-reid. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code for the paper \"Symbiotic Adversarial Learning for Attribute-based Person Search\", ECCV2020",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ycao5602/SAL/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<p align=\"center\">\n  <img src=\"imgs/setting.png\" alt=\"ranked_results\" width=\"600\">\n</p>\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 07:15:00 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ycao5602/SAL/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ycao5602/SAL",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ycao5602/SAL/master/scripts/market_alt.sh",
      "https://raw.githubusercontent.com/ycao5602/SAL/master/scripts/market.sh",
      "https://raw.githubusercontent.com/ycao5602/SAL/master/scripts/peta.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Run `git clone https://github.com/ycao5602/SAL.git`.\n2. Install dependencies by `pip install -r requirements.txt` (if necessary).\n3. To install the cython-based evaluation toolbox, `cd` to `torchreid/eval_cylib` and do `make`. As a result, `eval_metrics_cy.so` is generated under the same folder. Run `python test_cython.py` to test if the toolbox is installed successfully (credit to [luzai](https://github.com/luzai)).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "<p align=\"center\">\n  <img src=\"imgs/setting.png\" alt=\"ranked_results\" width=\"600\">\n</p>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8269394527148891
      ],
      "excerpt": "01/08/21: Updated requirements.txt. Upgrading Pillow to version 8.2.0 or later due to some issues in Pillow. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8700327894181953
      ],
      "excerpt": "Training scripts in scripts. sh peta.sh or sh market.sh (sh market_alt.sh for better results on market1501) to run. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.857568091620174
      ],
      "excerpt": "--gpu-devices 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.857568091620174
      ],
      "excerpt": "--gpu-devices 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.857568091620174
      ],
      "excerpt": "--gpu-devices 0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8132592158988305
      ],
      "excerpt": "28/02/21: Updated train.py and scripts. Uploaded trained models. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8957521418501873
      ],
      "excerpt": "  <img src=\"imgs/full-model.PNG\" alt=\"ranked_results\" width=\"800\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414658639682534,
        0.8278696055794311
      ],
      "excerpt": "Training methods are implemented in train.py \nInput arguments for the above training scripts are unified in args.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884359974992514
      ],
      "excerpt": "--test-batch-size 100 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8019983120567564
      ],
      "excerpt": "--save-dir log/eval \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884359974992514
      ],
      "excerpt": "--test-batch-size 100 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8019983120567564
      ],
      "excerpt": "--save-dir log/eval \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "python train.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8884359974992514
      ],
      "excerpt": "--test-batch-size 100 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8019983120567564
      ],
      "excerpt": "--save-dir log/eval \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ycao5602/SAL/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Kaiyang Zhou\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Symbiotic Adversarial Learning for Attribute-based Person Search",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SAL",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ycao5602",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ycao5602/SAL/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Python 3\n\nh5py>=2.8.0\n\nscipy>=1.1.0\n\nrequests>=2.20.1\n\ntorchvision=>0.2.1\n\nCython>=0.29.12\n\nnumpy>=1.13.3\n\npytorch>=0.4.1\n\nPillow>=7.2.0\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 12,
      "date": "Thu, 23 Dec 2021 07:15:00 GMT"
    },
    "technique": "GitHub API"
  }
}