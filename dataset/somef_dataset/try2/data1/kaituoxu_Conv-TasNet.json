{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1809.07454"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9449923168221758
      ],
      "excerpt": "3. Open your browser and type &lt;your-remote-server-ip&gt;:8097, egs, 127.0.0.1:8097 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kaituoxu/Conv-TasNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-20T16:00:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T01:57:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9932870128120386,
        0.8059957550183128
      ],
      "excerpt": "A PyTorch implementation of Conv-TasNet described in \"TasNet: Surpassing Ideal Time-Frequency Masking for Speech Separation\". \nAd: Welcome to join Kwai Speech Team, make your career great! Send your resume to: xukaituo [at] kuaishou [dot] com! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8383680514446711
      ],
      "excerpt": "4. In visdom website, chose &lt;any-string&gt; in Environment to see your loss \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A PyTorch implementation of Conv-TasNet described in \"TasNet: Surpassing Ideal Time-Frequency Masking for Speech Separation\" with Permutation Invariant Training (PIT).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kaituoxu/Conv-TasNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 124,
      "date": "Wed, 22 Dec 2021 01:44:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kaituoxu/Conv-TasNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kaituoxu/Conv-TasNet",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kaituoxu/Conv-TasNet/master/egs/wsj0/path.sh",
      "https://raw.githubusercontent.com/kaituoxu/Conv-TasNet/master/egs/wsj0/cmd.sh",
      "https://raw.githubusercontent.com/kaituoxu/Conv-TasNet/master/egs/wsj0/run.sh",
      "https://raw.githubusercontent.com/kaituoxu/Conv-TasNet/master/egs/wsj0/local/data_prepare.sh",
      "https://raw.githubusercontent.com/kaituoxu/Conv-TasNet/master/egs/wsj0/utils/parse_options.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- PyTorch 0.4.1+\n- Python3 (Recommend Anaconda)\n- `pip install -r requirements.txt`\n- If you need to convert wjs0 to wav format and generate mixture files, `cd tools; make`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9938881843946235
      ],
      "excerpt": "$ cd egs/wsj0/; . ./path.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8836342405552308
      ],
      "excerpt": "If you want to visualize your loss, you can use visdom to do that: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189697202324989
      ],
      "excerpt": "2. Open a new terminal and run $ bash run.sh --visdom 1 --visdom_id \"&lt;any-string&gt;\" or $ train.py ... --visdom 1 --vidsdom_id \"&lt;any-string&gt;\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8021811587934918
      ],
      "excerpt": "$ bash run.sh --continue_from &lt;model-path&gt; \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.822094444448603
      ],
      "excerpt": "| Here |256|20 |256|512| 3 | 8 | 4 |  gLN |   X    |     3      |    15.5    |  15.7   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8291207255378468
      ],
      "excerpt": "- Stage 0: Convert sphere format to wav format and generate mixture (optional) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137,
        0.950563948951535
      ],
      "excerpt": ": Train: \n$ train.py -h \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.852118605582617
      ],
      "excerpt": "$ evaluate.py -h \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "$ separate.py -h \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kaituoxu/Conv-TasNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Perl",
      "Shell",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2018 Kaituo XU\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Conv-TasNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Conv-TasNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kaituoxu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kaituoxu/Conv-TasNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 412,
      "date": "Wed, 22 Dec 2021 01:44:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "speech-separation",
      "source-separation",
      "audio-separation",
      "pit",
      "pytorch",
      "tasnet",
      "conv-tasnet",
      "permutation-invariant-training"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you already have mixture wsj0 data:\n1. `$ cd egs/wsj0`, modify wsj0 data path `data` to your path in the beginning of `run.sh`.\n2. `$ bash run.sh`, that's all!\n\nIf you just have origin wsj0 data (sphere format):\n1. `$ cd egs/wsj0`, modify three wsj0 data path to your path in the beginning of `run.sh`.\n2. Convert sphere format wsj0 to wav format and generate mixture. `Stage 0` part provides an example.\n3. `$ bash run.sh`, that's all!\n\nYou can change hyper-parameter by `$ bash run.sh --parameter_name parameter_value`, egs, `$ bash run.sh --stage 3`. See parameter name in `egs/aishell/run.sh` before `. utils/parse_options.sh`.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Use comma separated gpu-id sequence, such as:\n```bash\n$ bash run.sh --id \"0,1\"\n```\n",
      "technique": "Header extraction"
    }
  ]
}