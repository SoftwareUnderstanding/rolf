{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1602.07360"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lizeng614/SqueezeNet-Neural-Style-Pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-03-22T12:20:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-18T02:13:49Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9902956443669249
      ],
      "excerpt": "This is a lightweight Pytorch implementation of A Neural Algorithm of Artistic Style using pretrained SqueezeNet. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Lightweight implementation of neural style in Pytorch with SqueezeNet",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lizeng614/SqueezeNet-Neural-Style-Pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Sun, 26 Dec 2021 20:46:39 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lizeng614/SqueezeNet-Neural-Style-Pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lizeng614/SqueezeNet-Neural-Style-Pytorch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/lizeng614/SqueezeNet-Neural-Style-Pytorch/master/neural_style.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lizeng614/SqueezeNet-Neural-Style-Pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "**Lightweight Neural Style on Pytorch**",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SqueezeNet-Neural-Style-Pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lizeng614",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lizeng614/SqueezeNet-Neural-Style-Pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 76,
      "date": "Sun, 26 Dec 2021 20:46:39 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "neural-style",
      "squzzenet",
      "lightweight"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<div align = 'center'>\n<img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/img/shanghai.jpg\" height=\"372px\">\n</div>\n\n<div align = 'center'>\n<img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/output/s_ms02.jpg\" 372px> <img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/style/display/the_scream.jpg\" height=\"372px\">\n</div>\n\n<div align = 'center'>\n<img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/output/s_s.jpg\" height=\"372px\"> <img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/style/display/stary_night.jpg\" height=\"372px\">\n</div>\n\n<div align = 'center'>\n<img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/output/s_lm_01.jpg\" height=\"372px\"> <img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/style/display/la_muse.jpg\" height=\"372px\">\n</div>\n\n<div align = 'center'>\n<img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/output/s_w01.jpg\" height=\"372px\"> <img src=\"https://raw.githubusercontent.com/lizeng614/pytorch-neural-style/master/img_data/style/display/wave_1.jpg\" height=\"372px\">\n</div>\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Basic usage:\n```\npython neural_style.py --style <image.jpg> --content <image.jpg>\n```\nuse ```--standard-train True```to perform a suggested training process, which is 500 steps Adam of learning rate 0.1 fellowed by another 500 steps Adam of learning rate 0.01\n\nYou can run the Ipython Notebook Version. This is convenient if you want play with some parameters, you can even try different layer of SqueezeNet.This implementation only used 7 layers from it's 12 defined\n\n",
      "technique": "Header extraction"
    }
  ]
}