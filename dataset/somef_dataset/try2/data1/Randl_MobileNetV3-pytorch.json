{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.02244"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Randl/MobileNetV3-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-08T12:25:08Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T13:09:17Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9805412110397914,
        0.8590864475739398
      ],
      "excerpt": "An implementation of MobileNetV3 in PyTorch. MobileNetV3 is an efficient \nconvolutional neural network architecture for mobile devices. For more information check the paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of MobileNetV3 in pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Randl/MobileNetV3-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 27,
      "date": "Thu, 23 Dec 2021 10:13:13 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Randl/MobileNetV3-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Randl/MobileNetV3-pytorch",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Randl/MobileNetV3-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018-2019 Evgenii Zheltonozhskii\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNetV3 in PyTorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MobileNetV3-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Randl",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Randl/MobileNetV3-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 82,
      "date": "Thu, 23 Dec 2021 10:13:13 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "mobilenetv3",
      "image-classification",
      "cnn",
      "cnn-pytorch"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone the repo:\n```bash\ngit clone https://github.com/Randl/MobileNetV3-pytorch\npip install -r requirements.txt\n```\n\nUse the model defined in `MobileNetV3.py` to run ImageNet example:\n```bash\npython3 -m torch.distributed.launch --nproc_per_node=8 imagenet.py --dataroot \"/path/to/imagenet/\" --sched clr -b 128 --seed 42 --world-size 8 --sync-bn```\n```\n\nTo continue training from checkpoint\n```bash\npython imagenet.py --dataroot \"/path/to/imagenet/\" --resume \"/path/to/checkpoint/folder\"\n```\n\n#:#: Results\n\nWIP\n\n|Classification Checkpoint | MACs (M)   | Parameters (M)| Top-1 Accuracy| Top-5 Accuracy|  Claimed top-1|  Claimed top-5|  Inference time|\n|--------------------------|------------|---------------|---------------|---------------|---------------|---------------|----------------|\n|MobileNetV3 Large x1.0 224|219.80      |5.481          |          73.53|          91.14|           75.2|              -|               ~258ms|\n|  [mobilenet_v2_1.0_224](https://github.com/Randl/MobileNetV2-pytorch/)|300         |3.47           |          72.10|          90.48|           71.8|           91.0|               ~461ms|\n\nInference time is for single 1080 ti per batch of 128.\n\nYou can test it with\n```bash\npython imagenet.py --dataroot \"/path/to/imagenet/\" --resume \"results/mobilenetv3large-v1/model_best0.pth.tar\" -e\n```\n\n#:#: Other implementations\n- https://github.com/d-li14/mobilenetv3.pytorch : 73.152% top-1, with more FLOPs\n- https://github.com/xiaolai-sqlai/mobilenetv3 : 75.45% top-1, even more FLOPs\n- https://github.com/rwightman/gen-efficientnet-pytorch : 75.634% top-1, seems to be right FLOPs\n\n#:#: Code used\n- [DropBlock implementation](https://github.com/miguelvr/dropblock/blob/master/dropblock/dropblock.py) by [miguelvr](https://github.com/miguelvr)\n- [FLOPS calculator](https://github.com/warmspringwinds/pytorch-segmentation-detection/blob/master/pytorch_segmentation_detection/utils/flops_benchmark.py) by [warmspringwinds](https://github.com/warmspringwinds)\n- [Utility function for divisibility](https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py) by [Tensorflow](https://github.com/tensorflow)\n- [Squeeze-Excitation block](https://github.com/jonnedtc/Squeeze-Excitation-PyTorch/blob/master/networks.py) by [jonnedtc](https://github.com/jonnedtc)\n- [Custom cross-entropy](https://github.com/eladhoffer/utils.pytorch/blob/master/cross_entropy.py) by [eladhoffer](https://github.com/eladhoffer)\n- [Shadow weights implementation](https://github.com/eladhoffer/utils.pytorch/blob/ca6a47a7766c50930a607d8425216d39104b7664/optim.py) by [eladhoffer](https://github.com/eladhoffer)\n",
      "technique": "Header extraction"
    }
  ]
}