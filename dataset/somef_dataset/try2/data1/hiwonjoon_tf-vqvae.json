{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- The code for Pixel CNN is borrowed from [anantzoid's repo.](https://github.com/anantzoid/Conditional-PixelCNN-decoder)\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1711.00937"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "[x] CIFAR 10 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hiwonjoon/tf-vqvae",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-10T01:12:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-14T09:17:01Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9403849487914904,
        0.9552442662727545
      ],
      "excerpt": "This repository implements the paper, Neural Discrete Representation Learning (VQ-VAE) in Tensorflow. \n:warning: This is not an official implementation, and might have some glitch (,or a major defect). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9618934618548617
      ],
      "excerpt": "But, some of results seems understandable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8790073899594681
      ],
      "excerpt": "[x] Pixel CNN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9272884769508398
      ],
      "excerpt": "I also observed its latent space by changing single value for each latent space from one of the observed latent code. The result is shown below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9667468338747888,
        0.8892846161141204,
        0.8878233588075789
      ],
      "excerpt": "It seems that spatial location of latent code is improtant. By changing latent code on a specific location, the pixel matches with the location is disturbed. \nThis results shows the 1000 generated images starting from knwon latent codes and changing aa single latent code at radnom location by +1 or -1. \n  Most of the images are redundant (unrealistic), so it indicates that there are much room for compression. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8130438836444122
      ],
      "excerpt": "I was able to get 4.65 bits/dims. (K=10, D=256, latent space=8 by 8) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9703444351217235
      ],
      "excerpt": "I provide the model and the code for generating (,or reconstructing) images in the form of Jupyter notebook. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow Implementation of the paper [Neural Discrete Representation Learning](https://arxiv.org/abs/1711.00937) (VQ-VAE).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hiwonjoon/tf-vqvae/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 41,
      "date": "Wed, 29 Dec 2021 14:19:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hiwonjoon/tf-vqvae/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "hiwonjoon/tf-vqvae",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/hiwonjoon/tf-vqvae/master/Mnist%20Plot.ipynb",
      "https://raw.githubusercontent.com/hiwonjoon/tf-vqvae/master/Cifar%20Plot.ipynb",
      "https://raw.githubusercontent.com/hiwonjoon/tf-vqvae/master/ImageNet%20Plot.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8713134924886341
      ],
      "excerpt": "It will download required datasets on the directory ./datasets/{mnist,cifar10} by itself. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8896253718103763
      ],
      "excerpt": "Run jupyter notebook server, then run it to see more results with provided models. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8630234630626422
      ],
      "excerpt": "If you want to test NLL, then run test() function on cifar.py by uncomment the line. You can find it at the bottom of the file. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hiwonjoon/tf-vqvae/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "VQ-VAE (Neural Discrete Representation Learning) Tensorflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "tf-vqvae",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "hiwonjoon",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hiwonjoon/tf-vqvae/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.5\n- Tensorflow (v1.3 or higher)\n- numpy, better_exceptions, tqdm, etc.\n- ffmpeg\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Run mnist: `python mnist.py`\n- Run cifar10: `python cifar10.py`\n\nChange the hyperparameters accordingly as you want. Please check at the bottom of each script.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 240,
      "date": "Wed, 29 Dec 2021 14:19:28 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- The results seems correct, but there is a chance that the implmentation is not perfectly correct (especially, gradient copying...). If you find any glitches (or, a major defect) then, please let me know!\n- I am currently not sure how exactly NLL should be computed. Anyone who wants me a proper explantion on this?\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tensorflow",
      "vae",
      "cifar10",
      "mnist",
      "generative-model"
    ],
    "technique": "GitHub API"
  }
}